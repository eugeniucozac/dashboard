{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, removeLoader, storeProcessingInstruction, storeProcessingInstructionDocuments } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var saveRiskReferences = function saveRiskReferences(instruction) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        user = _getState.user,\n        endpoint = _getState.config.vars.endpoint,\n        processingInstructions = _getState.processingInstructions;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.saveRiskReferences'\n    };\n    var documents = get(processingInstructions, 'documents');\n    dispatch(saveRiskReferencesRequest(instruction));\n    dispatch(addLoader('saveRiskReferences'));\n    return utils.api.put({\n      token: user.auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: 'instruction/saveRiskReferences',\n      data: _objectSpread(_objectSpread({}, instruction), {}, {\n        createdBy: user.id,\n        updatedBy: user.id\n      })\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(saveRiskReferencesSuccess(data.data));\n      dispatch(storeProcessingInstruction(data.data));\n\n      var updatedDocuments = _objectSpread(_objectSpread({}, documents), {}, {\n        riskReferences: data.data.riskReferences\n      });\n\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\n      return data.data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API put error (saveRiskReferences)'\n      }));\n      dispatch(saveRiskReferencesFailure(err));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('saveRiskReferences'));\n    });\n  };\n};\nexport var saveRiskReferencesRequest = function saveRiskReferencesRequest(params) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_REQUEST',\n    payload: params\n  };\n};\nexport var saveRiskReferencesSuccess = function saveRiskReferencesSuccess(json) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_SUCCESS',\n    payload: json\n  };\n};\nexport var saveRiskReferencesFailure = function saveRiskReferencesFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.saveRiskReferences.js"],"names":["addLoader","authLogout","removeLoader","storeProcessingInstruction","storeProcessingInstructionDocuments","utils","get","saveRiskReferences","instruction","dispatch","getState","user","endpoint","config","vars","processingInstructions","defaultError","file","documents","saveRiskReferencesRequest","api","put","token","auth","accessToken","ppService","path","data","createdBy","id","updatedBy","then","response","handleResponse","json","handleNewData","saveRiskReferencesSuccess","updatedDocuments","riskReferences","err","handleError","message","saveRiskReferencesFailure","handleUnauthorized","params","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, storeProcessingInstruction, storeProcessingInstructionDocuments } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const saveRiskReferences = (instruction) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user, config: { vars: { endpoint }}, processingInstructions} = getState();\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.saveRiskReferences',\r\n  };\r\n\r\n  const documents = get(processingInstructions, 'documents');\r\n\r\n  dispatch(saveRiskReferencesRequest(instruction));\r\n  dispatch(addLoader('saveRiskReferences'));\r\n\r\n  return utils.api\r\n    .put({\r\n      token: user.auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: 'instruction/saveRiskReferences',\r\n      data: {\r\n        ...instruction,\r\n        createdBy: user.id,\r\n        updatedBy: user.id,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(saveRiskReferencesSuccess(data.data));\r\n      dispatch(storeProcessingInstruction(data.data));\r\n      const updatedDocuments = {\r\n        ...documents,\r\n        riskReferences: data.data.riskReferences,\r\n      };\r\n\r\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API put error (saveRiskReferences)' });\r\n      dispatch(saveRiskReferencesFailure(err));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('saveRiskReferences'));\r\n    });\r\n};\r\n\r\nexport const saveRiskReferencesRequest = (params) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const saveRiskReferencesSuccess = (json) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_SUCCESS',\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const saveRiskReferencesFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SAVE_RISK_REFS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}