{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\n// app\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getModellingTask = function getModellingTask(modelId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/modelling.actions.get'\n    };\n    dispatch(getModellingRequest(modelId));\n    dispatch(addLoader('modelling'));\n\n    if (!modelId) {\n      dispatch(getModellingFailure(defaultError));\n      dispatch(removeLoader('getModelling'));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/modelling/\".concat(modelId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getModellingSuccess(data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getModellingFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('modelling'));\n    });\n  };\n};\nexport var getModellingRequest = function getModellingRequest(payload) {\n  return {\n    type: 'MODELLING_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getModellingSuccess = function getModellingSuccess(payload) {\n  return {\n    type: 'MODELLING_GET_SUCCESS',\n    payload: payload\n  };\n};\nexport var getModellingFailure = function getModellingFailure(error) {\n  return {\n    type: 'MODELLING_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/modelling/modelling.actions.get.js"],"names":["authLogout","addLoader","removeLoader","utils","getModellingTask","modelId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getModellingRequest","getModellingFailure","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getModellingSuccess","err","handleError","handleUnauthorized","payload","type","error"],"mappings":";AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACnE;AADmE,oBAEVA,QAAQ,EAFE;AAAA,QAEnDC,IAFmD,aAE3DC,IAF2D,CAEnDD,IAFmD;AAAA,QAEzBE,QAFyB,aAE3CC,MAF2C,CAEjCC,IAFiC,CAEzBF,QAFyB;;AAInE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,mBAAmB,CAACV,OAAD,CAApB,CAAR;AACAC,IAAAA,QAAQ,CAACL,SAAS,CAAC,WAAD,CAAV,CAAR;;AAEA,QAAI,CAACI,OAAL,EAAc;AACZC,MAAAA,QAAQ,CAACU,mBAAmB,CAACH,YAAD,CAApB,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAAC,cAAD,CAAb,CAAR;AACD;;AAED,WAAOC,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,IAFhB;AAGHC,MAAAA,IAAI,0BAAmBjB,OAAnB;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACc,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUvB,KAAK,CAACc,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdtB,MAAAA,QAAQ,CAACuB,mBAAmB,CAACD,IAAD,CAApB,CAAR;AACD,KAVI,WAWE,UAACE,GAAD,EAAS;AACd3B,MAAAA,KAAK,CAACc,GAAN,CAAUc,WAAV,CAAsBD,GAAtB,EAA2BjB,YAA3B;AACAV,MAAAA,KAAK,CAACc,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CN,UAA5C;AACAM,MAAAA,QAAQ,CAACU,mBAAmB,CAACc,GAAD,CAApB,CAAR;AACA,aAAOA,GAAP;AACD,KAhBI,aAiBI,YAAM;AACbxB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,WAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GApC+B;AAAA,CAAzB;AAsCP,OAAO,IAAMa,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACkB,OAAD,EAAa;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,uBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACI,OAAD,EAAa;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,uBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMjB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACmB,KAAD,EAAW;AAC5C,SAAO;AACLD,IAAAA,IAAI,EAAE,uBADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getModellingTask = (modelId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/modelling.actions.get',\r\n  };\r\n\r\n  dispatch(getModellingRequest(modelId));\r\n  dispatch(addLoader('modelling'));\r\n\r\n  if (!modelId) {\r\n    dispatch(getModellingFailure(defaultError));\r\n    dispatch(removeLoader('getModelling'));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/modelling/${modelId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getModellingSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getModellingFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('modelling'));\r\n    });\r\n};\r\n\r\nexport const getModellingRequest = (payload) => {\r\n  return {\r\n    type: 'MODELLING_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getModellingSuccess = (payload) => {\r\n  return {\r\n    type: 'MODELLING_GET_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getModellingFailure = (error) => {\r\n  return {\r\n    type: 'MODELLING_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}