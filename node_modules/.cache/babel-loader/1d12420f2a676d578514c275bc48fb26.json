{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTasksTabProcessingTable\\\\ClaimsTasksTabProcessingTable.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport styles from './ClaimsTasksTabProcessingTable.style';\nimport { Empty, Overflow, TableHead, Pagination } from 'components';\nimport { ClaimsTasksTabTableRow } from 'modules';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Table, TableBody, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ClaimsTasksTabProcessingView(_ref) {\n  var _this = this;\n\n  var handleUpdateTaskPriority = _ref.handleUpdateTaskPriority,\n      isTaskTeam = _ref.isTaskTeam,\n      hasTasks = _ref.hasTasks,\n      taskItems = _ref.taskItems,\n      cols = _ref.cols,\n      columnProps = _ref.columnProps,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers,\n      refreshTasksGrid = _ref.refreshTasksGrid,\n      tasksSelected = _ref.tasksSelected;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTasksTabProcessing'\n  })();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"tasks-processing-search-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        \"data-testid\": \"tasks-processing-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort,\n          nestedClasses: {\n            tableHead: classes.tableHead\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"tasks-list-body\",\n          children: hasTasks && taskItems.map(function (task) {\n            return /*#__PURE__*/_jsxDEV(ClaimsTasksTabTableRow, {\n              handleUpdateTaskPriority: handleUpdateTaskPriority,\n              isSelected: utils.generic.isValidArray(tasksSelected, true) && tasksSelected.map(function (c) {\n                return c.processId;\n              }).includes(task.processId),\n              isTaskTeam: isTaskTeam,\n              task: task,\n              columnProps: columnProps,\n              handlers: {\n                selectTask: handlers.selectTask,\n                refreshTasksGrid: refreshTasksGrid,\n                handleEditAdhoc: handlers.handleEditAdhoc,\n                handleCreateRFITaskLevel: handlers.handleCreateRFITaskLevel,\n                createSanctionsCheck: handlers.createSanctionsCheck\n              }\n            }, task.taskId || task.processId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this), !hasTasks && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 80\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 21\n    }, this), hasTasks && /*#__PURE__*/_jsxDEV(Pagination, {\n      page: get(pagination, 'obj.page'),\n      count: get(pagination, 'obj.rowsTotal'),\n      rowsPerPage: get(pagination, 'obj.rowsPerPage'),\n      onChangePage: get(pagination, 'handlers.handleChangePage'),\n      onChangeRowsPerPage: get(pagination, 'handlers.handleChangeRowsPerPage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTasksTabProcessingView;\nClaimsTasksTabProcessingView.displayName = \"ClaimsTasksTabProcessingView\";\nClaimsTasksTabProcessingView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsTasksTabProcessingView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsTasksTabProcessingTable\\\\ClaimsTasksTabProcessingTable.view.js\"] = {\n    name: \"ClaimsTasksTabProcessingView\",\n    docgenInfo: ClaimsTasksTabProcessingView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsTasksTabProcessingTable\\\\ClaimsTasksTabProcessingTable.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTasksTabProcessingView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTasksTabProcessingTable/ClaimsTasksTabProcessingTable.view.js"],"names":["React","PropTypes","get","styles","Empty","Overflow","TableHead","Pagination","ClaimsTasksTabTableRow","utils","makeStyles","Table","TableBody","Box","ClaimsTasksTabProcessingView","handleUpdateTaskPriority","isTaskTeam","hasTasks","taskItems","cols","columnProps","sort","pagination","handlers","refreshTasksGrid","tasksSelected","classes","name","tableHead","map","task","generic","isValidArray","c","processId","includes","selectTask","handleEditAdhoc","handleCreateRFITaskLevel","createSanctionsCheck","taskId","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ClaimsTasksTabProcessingTable.style';\r\nimport { Empty, Overflow, TableHead, Pagination } from 'components';\r\nimport { ClaimsTasksTabTableRow } from 'modules';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableBody, Box } from '@material-ui/core';\r\n\r\n\r\nexport function ClaimsTasksTabProcessingView({\r\n  handleUpdateTaskPriority,\r\n  isTaskTeam,\r\n  hasTasks,\r\n  taskItems,\r\n  cols,\r\n  columnProps,\r\n  sort,\r\n  pagination,\r\n  handlers,\r\n  refreshTasksGrid,\r\n  tasksSelected\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTasksTabProcessing' })();\r\n\r\n  return (\r\n    <Box data-testid=\"tasks-processing-search-table\">\r\n      <Overflow>\r\n        <Table size=\"small\" data-testid=\"tasks-processing-table\">\r\n          <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n          <TableBody data-testid=\"tasks-list-body\">\r\n            {hasTasks &&\r\n              taskItems.map((task) => (\r\n                <ClaimsTasksTabTableRow\r\n                  handleUpdateTaskPriority={handleUpdateTaskPriority}\r\n                  isSelected={utils.generic.isValidArray(tasksSelected, true) && tasksSelected.map((c) => c.processId).includes(task.processId)\r\n                  }\r\n                  isTaskTeam={isTaskTeam}\r\n                  key={task.taskId || task.processId}\r\n                  task={task}\r\n                  columnProps={columnProps}\r\n                  handlers={{\r\n                    selectTask: handlers.selectTask,\r\n                    refreshTasksGrid: refreshTasksGrid,\r\n                    handleEditAdhoc: handlers.handleEditAdhoc,\r\n                    handleCreateRFITaskLevel: handlers.handleCreateRFITaskLevel,\r\n                    createSanctionsCheck: handlers.createSanctionsCheck,\r\n                  }}\r\n                />\r\n              ))}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {!hasTasks && <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />}\r\n      {hasTasks && (\r\n        <Pagination\r\n          page={get(pagination, 'obj.page')}\r\n          count={get(pagination, 'obj.rowsTotal')}\r\n          rowsPerPage={get(pagination, 'obj.rowsPerPage')}\r\n          onChangePage={get(pagination, 'handlers.handleChangePage')}\r\n          onChangeRowsPerPage={get(pagination, 'handlers.handleChangeRowsPerPage')}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}