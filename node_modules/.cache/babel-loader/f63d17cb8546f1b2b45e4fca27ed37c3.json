{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DrawerComponent\\\\DrawerComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport classNames from 'classnames';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './DrawerComponent.styles';\nimport { setDmsWidgetExpand } from 'stores'; //mui\n\nimport { makeStyles, Drawer, Divider, IconButton } from \"@material-ui/core\";\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDrawerComponent.propTypes = {\n  isDrawerOpen: PropTypes.bool.isRequired\n};\nexport default function DrawerComponent(_ref) {\n  _s();\n\n  var isDrawerOpen = _ref.isDrawerOpen,\n      children = _ref.children;\n  var nestedClasses = makeStyles(styles, {\n    name: 'DrawerComponent'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDrawerExpanded = _useState2[0],\n      setIsDrawerExpanded = _useState2[1];\n\n  var handleArrowClick = function handleArrowClick() {\n    setIsDrawerExpanded(!isDrawerExpanded);\n  };\n\n  useEffect(function () {\n    dispatch(setDmsWidgetExpand(isDrawerExpanded));\n  }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: isDrawerOpen,\n    className: classNames(nestedClasses.drawer, _defineProperty({}, nestedClasses.drawerOpen, true)),\n    classes: {\n      paper: isDrawerExpanded ? nestedClasses.drawerPaperExpanded : nestedClasses.drawerPaper\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open\",\n      edge: \"start\",\n      onClick: handleArrowClick,\n      children: [isDrawerExpanded ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 37\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 60\n      }, this), /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 13\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 9\n  }, this);\n}\n\n_s(DrawerComponent, \"4xtZbPBUH5IcjUZEOZ00UBSq4iU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DrawerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerComponent\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DrawerComponent/DrawerComponent.js"],"names":["React","useState","useEffect","useDispatch","classNames","PropTypes","styles","setDmsWidgetExpand","makeStyles","Drawer","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","DescriptionIcon","DrawerComponent","propTypes","isDrawerOpen","bool","isRequired","children","nestedClasses","name","dispatch","isDrawerExpanded","setIsDrawerExpanded","handleArrowClick","drawer","drawerOpen","paper","drawerPaperExpanded","drawerPaper"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,kBAAT,QAAmC,QAAnC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,UAAtC,QAAwD,mBAAxD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AACxBC,EAAAA,YAAY,EAAEZ,SAAS,CAACa,IAAV,CAAeC;AADL,CAA5B;AAIA,eAAe,SAASJ,eAAT,OAAqD;AAAA;;AAAA,MAA1BE,YAA0B,QAA1BA,YAA0B;AAAA,MAAZG,QAAY,QAAZA,QAAY;AAChE,MAAMC,aAAa,GAAGb,UAAU,CAACF,MAAD,EAAS;AAAEgB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAtB;AACA,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;;AAFgE,kBAGhBF,QAAQ,CAAC,KAAD,CAHQ;AAAA;AAAA,MAGzDuB,gBAHyD;AAAA,MAGvCC,mBAHuC;;AAKhE,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3BD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACH,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACZqB,IAAAA,QAAQ,CAAChB,kBAAkB,CAACiB,gBAAD,CAAnB,CAAR;AACH,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CATgE,CAWxC;;AAExB,sBACI,QAAC,MAAD;AACI,IAAA,OAAO,EAAC,YADZ;AAEI,IAAA,MAAM,EAAC,OAFX;AAGI,IAAA,IAAI,EAAEP,YAHV;AAII,IAAA,SAAS,EAAEb,UAAU,CACjBiB,aAAa,CAACM,MADG,sBAEfN,aAAa,CAACO,UAFC,EAEY,IAFZ,EAJzB;AAQI,IAAA,OAAO,EAAE;AACLC,MAAAA,KAAK,EAAEL,gBAAgB,GAAGH,aAAa,CAACS,mBAAjB,GAAuCT,aAAa,CAACU;AADvE,KARb;AAAA,4BAYI,QAAC,UAAD;AACI,MAAA,KAAK,EAAC,SADV;AAEI,oBAAW,MAFf;AAGI,MAAA,IAAI,EAAC,OAHT;AAII,MAAA,OAAO,EAAEL,gBAJb;AAAA,iBAMKF,gBAAgB,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA0B,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAN/C,eAOI,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAPJ;AAAA;AAAA;AAAA;AAAA;AAAA,YAZJ,eAqBI,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YArBJ,EAsBKJ,QAtBL;AAAA;AAAA;AAAA;AAAA;AAAA,UADJ;AA0BH;;GAvCuBL,e;UAEHZ,W;;;KAFGY,e","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport classNames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './DrawerComponent.styles';\r\nimport { setDmsWidgetExpand } from 'stores';\r\n\r\n//mui\r\nimport { makeStyles, Drawer, Divider, IconButton } from \"@material-ui/core\";\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nDrawerComponent.propTypes = {\r\n    isDrawerOpen: PropTypes.bool.isRequired,\r\n}\r\n\r\nexport default function DrawerComponent({ isDrawerOpen, children }) {\r\n    const nestedClasses = makeStyles(styles, { name: 'DrawerComponent' })();\r\n    const dispatch = useDispatch();\r\n    const [isDrawerExpanded, setIsDrawerExpanded] = useState(false);\r\n\r\n    const handleArrowClick = () => {\r\n        setIsDrawerExpanded(!isDrawerExpanded);\r\n    }\r\n\r\n    useEffect(() => {\r\n        dispatch(setDmsWidgetExpand(isDrawerExpanded))\r\n    }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <Drawer\r\n            variant=\"persistent\"\r\n            anchor=\"right\"\r\n            open={isDrawerOpen}\r\n            className={classNames(\r\n                nestedClasses.drawer,\r\n                {[nestedClasses.drawerOpen]: true}\r\n            )}\r\n            classes={{\r\n                paper: isDrawerExpanded ? nestedClasses.drawerPaperExpanded : nestedClasses.drawerPaper\r\n            }}\r\n        >\r\n            <IconButton\r\n                color=\"inherit\"\r\n                aria-label=\"open\"\r\n                edge=\"start\"\r\n                onClick={handleArrowClick}\r\n            >\r\n                {isDrawerExpanded ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n                <DescriptionIcon />\r\n            </IconButton>\r\n            <Divider />\r\n            {children}\r\n        </Drawer>\r\n    )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}