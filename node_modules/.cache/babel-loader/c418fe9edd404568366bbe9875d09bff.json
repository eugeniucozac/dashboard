{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport config from 'config';\nimport * as utils from 'utils';\nvar initialState = {\n  reportGroupList: {\n    items: [],\n    itemsTotal: 0,\n    page: 1,\n    pageSize: config.ui.pagination[\"default\"],\n    pageTotal: 0,\n    sortBy: 'name',\n    sortDirection: 'asc'\n  },\n  selected: null,\n  reportList: {\n    items: [],\n    reportingGroupUser: [],\n    selectedGroup: {}\n  },\n  report: {}\n};\n\nvar reportingReducers = function reportingReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'REPORTING_GROUP_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportGroupList: _objectSpread(_objectSpread({}, state.reportGroupList), {}, {\n          items: action.payload.content\n        }, utils.api.pagination(action.payload))\n      });\n\n    case 'REPORTING_GROUP_POST_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportGroupList: _objectSpread(_objectSpread({}, state.reportGroupList), {}, {\n          items: [].concat(_toConsumableArray(state.reportGroupList.items), [_objectSpread({}, action.payload)]),\n          itemsTotal: state.reportGroupList.itemsTotal + 1\n        })\n      });\n\n    case 'REPORTING_GROUP_PATCH_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportGroupList: _objectSpread(_objectSpread({}, state.reportGroupList), {}, {\n          items: state.reportGroupList.items.map(function (group) {\n            if (group.id === action.payload.id) {\n              return _objectSpread({}, action.payload);\n            } else {\n              return group;\n            }\n          })\n        })\n      });\n\n    case 'REPORT_GROUP_DELETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportGroupList: _objectSpread(_objectSpread({}, state.reportGroupList), {}, {\n          items: _toConsumableArray(state.reportGroupList.items.filter(function (group) {\n            return group.id !== action.payload;\n          }))\n        })\n      });\n\n    case 'REPORTING_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          items: action.payload.reports,\n          reportingGroupUser: action.payload.users,\n          selectedGroup: action.payload.selected\n        })\n      });\n\n    case 'REPORT_POST_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          items: [].concat(_toConsumableArray(state.reportList.items), [_objectSpread({}, action.payload)])\n        })\n      });\n\n    case 'REPORT_PATCH_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          items: state.reportList.items.map(function (report) {\n            if (report.id === action.payload.id) {\n              return _objectSpread(_objectSpread({}, action.payload), {}, {\n                lastUpdateDate: report.lastUpdateDate\n              });\n            } else {\n              return report;\n            }\n          })\n        })\n      });\n\n    case 'REPORT_DELETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          items: _toConsumableArray(state.reportList.items.filter(function (report) {\n            return report.id !== action.payload;\n          }))\n        })\n      });\n\n    case 'REPORT_USER_CREATE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          reportingGroupUser: _toConsumableArray(action.payload)\n        })\n      });\n\n    case 'REPORT_USER_DELETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        reportList: _objectSpread(_objectSpread({}, state.reportList), {}, {\n          reportingGroupUser: _toConsumableArray(state.reportList.reportingGroupUser.filter(function (reportGrpUsr) {\n            return reportGrpUsr.id !== action.payload;\n          }))\n        })\n      });\n\n    case 'REPORTING_DETAILS_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        report: {}\n      });\n\n    case 'REPORTING_DETAILS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        report: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default reportingReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.reducers.js"],"names":["config","utils","initialState","reportGroupList","items","itemsTotal","page","pageSize","ui","pagination","pageTotal","sortBy","sortDirection","selected","reportList","reportingGroupUser","selectedGroup","report","reportingReducers","state","action","type","payload","content","api","map","group","id","filter","reports","users","lastUpdateDate","reportGrpUsr"],"mappings":"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","sourcesContent":["import config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nconst initialState = {\r\n  reportGroupList: {\r\n    items: [],\r\n    itemsTotal: 0,\r\n    page: 1,\r\n    pageSize: config.ui.pagination.default,\r\n    pageTotal: 0,\r\n    sortBy: 'name',\r\n    sortDirection: 'asc',\r\n  },\r\n  selected: null,\r\n  reportList: {\r\n    items: [],\r\n    reportingGroupUser: [],\r\n    selectedGroup: {},\r\n  },\r\n  report: {},\r\n};\r\n\r\nconst reportingReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'REPORTING_GROUP_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportGroupList: {\r\n          ...state.reportGroupList,\r\n          items: action.payload.content,\r\n          ...utils.api.pagination(action.payload),\r\n        },\r\n      };\r\n    case 'REPORTING_GROUP_POST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportGroupList: {\r\n          ...state.reportGroupList,\r\n          items: [...state.reportGroupList.items, { ...action.payload }],\r\n          itemsTotal: state.reportGroupList.itemsTotal + 1,\r\n        },\r\n      };\r\n    case 'REPORTING_GROUP_PATCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportGroupList: {\r\n          ...state.reportGroupList,\r\n          items: state.reportGroupList.items.map((group) => {\r\n            if (group.id === action.payload.id) {\r\n              return { ...action.payload };\r\n            } else {\r\n              return group;\r\n            }\r\n          }),\r\n        },\r\n      };\r\n    case 'REPORT_GROUP_DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportGroupList: {\r\n          ...state.reportGroupList,\r\n          items: [...state.reportGroupList.items.filter((group) => group.id !== action.payload)],\r\n        },\r\n      };\r\n    case 'REPORTING_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          items: action.payload.reports,\r\n          reportingGroupUser: action.payload.users,\r\n          selectedGroup: action.payload.selected,\r\n        },\r\n      };\r\n    case 'REPORT_POST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          items: [...state.reportList.items, { ...action.payload }],\r\n        },\r\n      };\r\n    case 'REPORT_PATCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          items: state.reportList.items.map((report) => {\r\n            if (report.id === action.payload.id) {\r\n              return { ...action.payload, lastUpdateDate: report.lastUpdateDate };\r\n            } else {\r\n              return report;\r\n            }\r\n          }),\r\n        },\r\n      };\r\n    case 'REPORT_DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          items: [...state.reportList.items.filter((report) => report.id !== action.payload)],\r\n        },\r\n      };\r\n    case 'REPORT_USER_CREATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          reportingGroupUser: [...action.payload],\r\n        },\r\n      };\r\n    case 'REPORT_USER_DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        reportList: {\r\n          ...state.reportList,\r\n          reportingGroupUser: [...state.reportList.reportingGroupUser.filter((reportGrpUsr) => reportGrpUsr.id !== action.payload)],\r\n        },\r\n      };\r\n    case 'REPORTING_DETAILS_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        report: {},\r\n      };\r\n    case 'REPORTING_DETAILS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        report: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default reportingReducers;\r\n"]},"metadata":{},"sourceType":"module"}