{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceSelectedMail.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './EmailManagementService.styles';\nimport { Avatar, Button, Link } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { useMedia } from 'hooks'; //mui\n\nimport { makeStyles, Box, Typography, Grid } from '@material-ui/core';\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEmailManagementServiceSelectedMailView.propTypes = {\n  isMiddleOffice: PropTypes.bool.isRequired,\n  selectedMail: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    downloadDocument: PropTypes.func.isRequired,\n    forwardMail: PropTypes.func.isRequired\n  }).isRequired\n};\n\nfunction EmailManagementServiceSelectedMailView(_ref) {\n  _s();\n\n  var _selectedMail$recipie,\n      _selectedMail$recipie2,\n      _this = this;\n\n  var isMiddleOffice = _ref.isMiddleOffice,\n      selectedMail = _ref.selectedMail,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'EmailManagementService'\n  })();\n\n  var _useMedia = useMedia(),\n      mobile = _useMedia.mobile,\n      tablet = _useMedia.tablet,\n      desktop = _useMedia.desktop,\n      wide = _useMedia.wide,\n      extraWide = _useMedia.extraWide;\n\n  var emailToList = selectedMail === null || selectedMail === void 0 ? void 0 : (_selectedMail$recipie = selectedMail.recipient) === null || _selectedMail$recipie === void 0 ? void 0 : _selectedMail$recipie.filter(function (recipient) {\n    return (recipient === null || recipient === void 0 ? void 0 : recipient.attributeKey.toLowerCase()) === constants.EMS_TO.toLowerCase();\n  });\n  var emailCcList = selectedMail === null || selectedMail === void 0 ? void 0 : (_selectedMail$recipie2 = selectedMail.recipient) === null || _selectedMail$recipie2 === void 0 ? void 0 : _selectedMail$recipie2.filter(function (recipient) {\n    return (recipient === null || recipient === void 0 ? void 0 : recipient.attributeKey.toLowerCase()) === constants.EMS_CC.toLowerCase();\n  });\n  var documentTitleLength = mobile ? 5 : tablet ? 10 : desktop ? 15 : wide ? 20 : extraWide ? 25 : 30;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    p: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      py: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        wrap: \"nowrap\",\n        spacing: 2,\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          zeroMinWidth: true,\n          xs: true,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            noWrap: true,\n            className: classes.mailBodySubject,\n            children: selectedMail === null || selectedMail === void 0 ? void 0 : selectedMail.subject\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), isMiddleOffice ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: ArrowForwardIcon,\n            iconPosition: 'left',\n            text: utils.string.t('ems.forward'),\n            size: 'xsmall',\n            variant: \"outlined\",\n            onClick: function onClick() {\n              handlers.forwardMail(selectedMail);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        wrap: \"nowrap\",\n        alignItems: 'center',\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 10,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            sx: {\n              flexGrow: 1,\n              overflow: 'hidden',\n              px: 3\n            },\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              wrap: \"nowrap\",\n              spacing: 2,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  text: constants.EMS_NO_REPLY_AVATAR,\n                  size: 40\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"column\",\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.mailListHeader1,\n                      children: utils.string.t('ems.noReply')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 1,\n                      justify: \"flex-start\",\n                      alignItems: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: classes.mailBodyToCc,\n                          children: [utils.string.t('ems.emailTo'), \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 80,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 79,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: utils.generic.isValidArray(emailToList, true) && (emailToList === null || emailToList === void 0 ? void 0 : emailToList.map(function (toUser) {\n                          return /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.mailBodyToCc,\n                            children: \"\".concat(toUser === null || toUser === void 0 ? void 0 : toUser.attributeValue, \"; \")\n                          }, toUser === null || toUser === void 0 ? void 0 : toUser.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 85,\n                            columnNumber: 31\n                          }, _this);\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 78,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      container: true,\n                      spacing: 1,\n                      justify: \"flex-start\",\n                      alignItems: \"center\",\n                      children: [/*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          className: classes.mailBodyToCc,\n                          children: [utils.string.t('ems.emailCc'), \":\"]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 95,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 94,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                        item: true,\n                        children: utils.generic.isValidArray(emailCcList, true) && (emailCcList === null || emailCcList === void 0 ? void 0 : emailCcList.map(function (ccUser) {\n                          return /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.mailBodyToCc,\n                            children: \"\".concat(ccUser === null || ccUser === void 0 ? void 0 : ccUser.attributeValue, \"; \")\n                          }, ccUser === null || ccUser === void 0 ? void 0 : ccUser.id, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 100,\n                            columnNumber: 31\n                          }, _this);\n                        }))\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 97,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 2,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.date,\n            children: utils.string.t('format.date', {\n              value: {\n                date: String(selectedMail === null || selectedMail === void 0 ? void 0 : selectedMail.dateSent),\n                format: config.ui.format.date.textTime\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), utils.generic.isValidArray(selectedMail === null || selectedMail === void 0 ? void 0 : selectedMail.attachment, true) && /*#__PURE__*/_jsxDEV(Box, {\n      my: 1,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        alignItems: \"center\",\n        children: selectedMail.attachment.map(function (doc) {\n          var _doc$documentName;\n\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.attachment,\n              children: /*#__PURE__*/_jsxDEV(Link, {\n                target: \"_blank\",\n                rel: \"noopener\",\n                color: \"primary\",\n                icon: InsertDriveFileIcon,\n                iconPosition: \"left\",\n                text: (doc === null || doc === void 0 ? void 0 : doc.documentName) ? utils.app.getEllipsisString(doc === null || doc === void 0 ? void 0 : doc.documentName, documentTitleLength) : '',\n                tooltip: (doc === null || doc === void 0 ? void 0 : (_doc$documentName = doc.documentName) === null || _doc$documentName === void 0 ? void 0 : _doc$documentName.length) > documentTitleLength ? {\n                  title: doc === null || doc === void 0 ? void 0 : doc.documentName\n                } : null,\n                onClick: function onClick() {\n                  handlers.downloadDocument(doc);\n                },\n                nestedClasses: {\n                  link: classes.documentLink\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 17\n            }, _this)\n          }, doc === null || doc === void 0 ? void 0 : doc.documentId, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      py: 2,\n      className: classes.mailBody,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        children: selectedMail === null || selectedMail === void 0 ? void 0 : selectedMail.text\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailManagementServiceSelectedMailView, \"vUCM8TzvpoZSnralqtlHK0oHrs0=\", false, function () {\n  return [useMedia];\n});\n\n_c = EmailManagementServiceSelectedMailView;\nEmailManagementServiceSelectedMailView.displayName = \"EmailManagementServiceSelectedMailView\";\nEmailManagementServiceSelectedMailView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EmailManagementServiceSelectedMailView\",\n  \"props\": {\n    \"isMiddleOffice\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedMail\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"downloadDocument\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"forwardMail\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default EmailManagementServiceSelectedMailView;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceSelectedMail.view.js\"] = {\n    name: \"EmailManagementServiceSelectedMailView\",\n    docgenInfo: EmailManagementServiceSelectedMailView.__docgenInfo,\n    path: \"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceSelectedMail.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailManagementServiceSelectedMailView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/EmailManagementService/EmailManagementServiceSelectedMail.view.js"],"names":["React","PropTypes","styles","Avatar","Button","Link","utils","config","constants","useMedia","makeStyles","Box","Typography","Grid","ArrowForwardIcon","InsertDriveFileIcon","EmailManagementServiceSelectedMailView","propTypes","isMiddleOffice","bool","isRequired","selectedMail","object","handlers","shape","downloadDocument","func","forwardMail","classes","name","mobile","tablet","desktop","wide","extraWide","emailToList","recipient","filter","attributeKey","toLowerCase","EMS_TO","emailCcList","EMS_CC","documentTitleLength","mailBodySubject","subject","string","t","flexGrow","overflow","px","EMS_NO_REPLY_AVATAR","mailListHeader1","mailBodyToCc","generic","isValidArray","map","toUser","attributeValue","id","ccUser","date","value","String","dateSent","format","ui","textTime","attachment","doc","documentName","app","getEllipsisString","length","title","link","documentLink","documentId","mailBody","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './EmailManagementService.styles';\r\nimport { Avatar, Button, Link } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\nimport { useMedia } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Box, Typography, Grid } from '@material-ui/core';\r\nimport ArrowForwardIcon from '@material-ui/icons/ArrowForward';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\n\r\nEmailManagementServiceSelectedMailView.propTypes = {\r\n  isMiddleOffice: PropTypes.bool.isRequired,\r\n  selectedMail: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    downloadDocument: PropTypes.func.isRequired,\r\n    forwardMail: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nfunction EmailManagementServiceSelectedMailView({ isMiddleOffice, selectedMail, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'EmailManagementService' })();\r\n  const { mobile, tablet, desktop, wide, extraWide } = useMedia();\r\n\r\n  const emailToList = selectedMail?.recipient?.filter(\r\n    (recipient) => recipient?.attributeKey.toLowerCase() === constants.EMS_TO.toLowerCase()\r\n  );\r\n  const emailCcList = selectedMail?.recipient?.filter(\r\n    (recipient) => recipient?.attributeKey.toLowerCase() === constants.EMS_CC.toLowerCase()\r\n  );\r\n\r\n  const documentTitleLength = mobile ? 5 : tablet ? 10 : desktop ? 15 : wide ? 20 : extraWide ? 25 : 30;\r\n\r\n  return (\r\n    <Box p={2}>\r\n      <Box py={1}>\r\n        <Grid container wrap=\"nowrap\" spacing={2} alignItems={'center'}>\r\n          <Grid item zeroMinWidth xs>\r\n            <Typography noWrap className={classes.mailBodySubject}>\r\n              {selectedMail?.subject}\r\n            </Typography>\r\n          </Grid>\r\n          {isMiddleOffice ? (\r\n            <Grid item>\r\n              <Button\r\n                icon={ArrowForwardIcon}\r\n                iconPosition={'left'}\r\n                text={utils.string.t('ems.forward')}\r\n                size={'xsmall'}\r\n                variant=\"outlined\"\r\n                onClick={() => {\r\n                  handlers.forwardMail(selectedMail);\r\n                }}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Box>\r\n      <Box>\r\n        <Grid container spacing={2} wrap=\"nowrap\" alignItems={'center'}>\r\n          <Grid item xs={10}>\r\n            <Box sx={{ flexGrow: 1, overflow: 'hidden', px: 3 }}>\r\n              <Grid container wrap=\"nowrap\" spacing={2}>\r\n                <Grid item>\r\n                  <Avatar text={constants.EMS_NO_REPLY_AVATAR} size={40} />\r\n                </Grid>\r\n                <Grid item>\r\n                  <Grid container direction=\"column\">\r\n                    <Grid item>\r\n                      <Typography className={classes.mailListHeader1}>{utils.string.t('ems.noReply')}</Typography>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Grid container spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n                        <Grid item>\r\n                          <Typography className={classes.mailBodyToCc}>{utils.string.t('ems.emailTo')}:</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          {utils.generic.isValidArray(emailToList, true) &&\r\n                            emailToList?.map((toUser) => (\r\n                              <span key={toUser?.id} className={classes.mailBodyToCc}>\r\n                                {`${toUser?.attributeValue}; `}\r\n                              </span>\r\n                            ))}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item>\r\n                      <Grid container spacing={1} justify=\"flex-start\" alignItems=\"center\">\r\n                        <Grid item>\r\n                          <Typography className={classes.mailBodyToCc}>{utils.string.t('ems.emailCc')}:</Typography>\r\n                        </Grid>\r\n                        <Grid item>\r\n                          {utils.generic.isValidArray(emailCcList, true) &&\r\n                            emailCcList?.map((ccUser) => (\r\n                              <span key={ccUser?.id} className={classes.mailBodyToCc}>\r\n                                {`${ccUser?.attributeValue}; `}\r\n                              </span>\r\n                            ))}\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Grid>\r\n          <Grid item xs={2}>\r\n            <Typography className={classes.date}>\r\n              {utils.string.t('format.date', {\r\n                value: { date: String(selectedMail?.dateSent), format: config.ui.format.date.textTime },\r\n              })}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {utils.generic.isValidArray(selectedMail?.attachment, true) && (\r\n        <Box my={1}>\r\n          <Grid container spacing={1} alignItems=\"center\">\r\n            {selectedMail.attachment.map((doc) => (\r\n              <Grid item key={doc?.documentId}>\r\n                <Box className={classes.attachment}>\r\n                  <Link\r\n                    target=\"_blank\"\r\n                    rel=\"noopener\"\r\n                    color=\"primary\"\r\n                    icon={InsertDriveFileIcon}\r\n                    iconPosition=\"left\"\r\n                    text={doc?.documentName ? utils.app.getEllipsisString(doc?.documentName, documentTitleLength) : ''}\r\n                    tooltip={doc?.documentName?.length > documentTitleLength ? { title: doc?.documentName } : null}\r\n                    onClick={() => {\r\n                      handlers.downloadDocument(doc);\r\n                    }}\r\n                    nestedClasses={{\r\n                      link: classes.documentLink,\r\n                    }}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      )}\r\n\r\n      <Box py={2} className={classes.mailBody}>\r\n        <Typography variant=\"body2\">{selectedMail?.text}</Typography>\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default EmailManagementServiceSelectedMailView;\r\n"]},"metadata":{},"sourceType":"module"}