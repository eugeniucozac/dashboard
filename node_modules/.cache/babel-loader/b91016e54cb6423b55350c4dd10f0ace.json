{"ast":null,"code":"import \"core-js/modules/es.array.map\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\QuoteBind\\\\CoverageComparison\\\\CoverageValues.js\",\n    _this = this;\n\nimport get from 'lodash/get';\nimport { Box, Typography } from '@material-ui/core'; // app\n\nimport { Tooltip } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var CoverageValues = function CoverageValues(_ref) {\n  var coverageValues = _ref.coverageValues,\n      coverageDefinitionFields = _ref.coverageDefinitionFields;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    style: {\n      padding: 16\n    },\n    children: coverageDefinitionFields.map(function (field) {\n      var value = coverageValues[field.name];\n      var condition = utils.risk.getCondition(field, coverageDefinitionFields);\n      var refValueCondition = condition && get(coverageValues, \"\".concat(condition.name));\n      var isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\n      var isHidden = utils.risk.isHiddenField(field);\n      var displayValue = utils.risk.renderRiskValue(field, value);\n      return !isHidden && (condition === undefined || condition && isConditionValid) ? /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: field.label,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: displayValue\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 13\n        }, _this)\n      }, field.name, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 11\n      }, _this) : null;\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 9,\n    columnNumber: 5\n  }, _this);\n};\nCoverageValues.displayName = \"CoverageValues\";\n_c = CoverageValues;\nCoverageValues.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CoverageValues\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\QuoteBind\\\\CoverageComparison\\\\CoverageValues.js\"] = {\n    name: \"CoverageValues\",\n    docgenInfo: CoverageValues.__docgenInfo,\n    path: \"src\\\\modules\\\\QuoteBind\\\\CoverageComparison\\\\CoverageValues.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CoverageValues\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/QuoteBind/CoverageComparison/CoverageValues.js"],"names":["get","Box","Typography","Tooltip","utils","CoverageValues","coverageValues","coverageDefinitionFields","padding","map","field","value","name","condition","risk","getCondition","refValueCondition","isConditionValid","isHidden","isHiddenField","displayValue","renderRiskValue","undefined","label"],"mappings":";;;;;AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC,C,CACA;;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,OAAkD;AAAA,MAA/CC,cAA+C,QAA/CA,cAA+C;AAAA,MAA/BC,wBAA+B,QAA/BA,wBAA+B;AAC9E,sBACE,QAAC,GAAD;AACE,IAAA,KAAK,EAAE;AACLC,MAAAA,OAAO,EAAE;AADJ,KADT;AAAA,cAKGD,wBAAwB,CAACE,GAAzB,CAA6B,UAACC,KAAD,EAAW;AACvC,UAAMC,KAAK,GAAGL,cAAc,CAACI,KAAK,CAACE,IAAP,CAA5B;AAEA,UAAMC,SAAS,GAAGT,KAAK,CAACU,IAAN,CAAWC,YAAX,CAAwBL,KAAxB,EAA+BH,wBAA/B,CAAlB;AACA,UAAMS,iBAAiB,GAAGH,SAAS,IAAIb,GAAG,CAACM,cAAD,YAAoBO,SAAS,CAACD,IAA9B,EAA1C;AACA,UAAMK,gBAAgB,GAAGJ,SAAS,IAAIT,KAAK,CAACU,IAAN,CAAWG,gBAAX,CAA4BJ,SAA5B,EAAuCG,iBAAvC,CAAtC;AACA,UAAME,QAAQ,GAAGd,KAAK,CAACU,IAAN,CAAWK,aAAX,CAAyBT,KAAzB,CAAjB;AACA,UAAMU,YAAY,GAAGhB,KAAK,CAACU,IAAN,CAAWO,eAAX,CAA2BX,KAA3B,EAAkCC,KAAlC,CAArB;AAEA,aAAO,CAACO,QAAD,KAAcL,SAAS,KAAKS,SAAd,IAA4BT,SAAS,IAAII,gBAAvD,iBACL,QAAC,GAAD;AAAA,+BACE,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEP,KAAK,CAACa,KAAtB;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,OAAO,EAAC,OAApB;AAAA,sBAA6BH;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,SAAUV,KAAK,CAACE,IAAhB;AAAA;AAAA;AAAA;AAAA,eADK,GAMH,IANJ;AAOD,KAhBA;AALH;AAAA;AAAA;AAAA;AAAA,WADF;AAyBD,CA1BM;AAAMP,c;KAAAA,c","sourcesContent":["import get from 'lodash/get';\r\nimport { Box, Typography } from '@material-ui/core';\r\n// app\r\nimport { Tooltip } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nexport const CoverageValues = ({ coverageValues, coverageDefinitionFields }) => {\r\n  return (\r\n    <Box\r\n      style={{\r\n        padding: 16,\r\n      }}\r\n    >\r\n      {coverageDefinitionFields.map((field) => {\r\n        const value = coverageValues[field.name];\r\n\r\n        const condition = utils.risk.getCondition(field, coverageDefinitionFields);\r\n        const refValueCondition = condition && get(coverageValues, `${condition.name}`);\r\n        const isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\r\n        const isHidden = utils.risk.isHiddenField(field);\r\n        const displayValue = utils.risk.renderRiskValue(field, value);\r\n\r\n        return !isHidden && (condition === undefined || (condition && isConditionValid)) ? (\r\n          <Box key={field.name}>\r\n            <Tooltip title={field.label}>\r\n              <Typography variant=\"body2\">{displayValue}</Typography>\r\n            </Tooltip>\r\n          </Box>\r\n        ) : null;\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}