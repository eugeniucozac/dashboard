{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Auth\\\\Auth.view.js\";\nimport React, { Suspense } from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router'; // app\n\nimport { AuthContext, Loader } from 'components';\nimport { Authentication, Login, Logout } from 'pages';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAuthView.propTypes = {\n  isAuthenticated: PropTypes.bool,\n  isAuthInProgress: PropTypes.bool,\n  handlers: PropTypes.shape({\n    login: PropTypes.func,\n    logout: PropTypes.func,\n    handleCallback: PropTypes.func\n  }),\n  children: PropTypes.any\n};\nexport function AuthView(_ref) {\n  var isAuthenticated = _ref.isAuthenticated,\n      isAuthInProgress = _ref.isAuthInProgress,\n      handlers = _ref.handlers,\n      children = _ref.children;\n\n  // only display children <App /> if user is authenticated\n  if (isAuthenticated) {\n    return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n      value: handlers,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 12\n    }, this);\n  } // if auth is in progress show a loader\n  else if (isAuthInProgress) {\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        visible: true,\n        label: utils.string.t('app.authenticating')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 12\n      }, this);\n    } // else show the un-protected routes (login, logout and authentication)\n    else {\n        return /*#__PURE__*/_jsxDEV(AuthContext.Provider, {\n          value: handlers,\n          children: /*#__PURE__*/_jsxDEV(Suspense, {\n            fallback: /*#__PURE__*/_jsxDEV(Loader, {\n              visible: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 29\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: config.routes.login.root,\n                children: /*#__PURE__*/_jsxDEV(Login, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 40,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: config.routes.logout.root,\n                children: /*#__PURE__*/_jsxDEV(Logout, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 13\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: config.routes.authentication.root,\n                children: /*#__PURE__*/_jsxDEV(Authentication, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 15\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 13\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 11\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 9\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 7\n        }, this);\n      }\n}\n_c = AuthView;\nAuthView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AuthView\",\n  \"props\": {\n    \"isAuthenticated\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isAuthInProgress\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"login\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"logout\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleCallback\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"children\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Auth\\\\Auth.view.js\"] = {\n    name: \"AuthView\",\n    docgenInfo: AuthView.__docgenInfo,\n    path: \"src\\\\components\\\\Auth\\\\Auth.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AuthView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Auth/Auth.view.js"],"names":["React","Suspense","PropTypes","Route","Switch","AuthContext","Loader","Authentication","Login","Logout","utils","config","AuthView","propTypes","isAuthenticated","bool","isAuthInProgress","handlers","shape","login","func","logout","handleCallback","children","any","string","t","routes","root","authentication"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,KAAT,EAAgBC,MAAhB,QAA8B,cAA9B,C,CAEA;;AACA,SAASC,WAAT,EAAsBC,MAAtB,QAAoC,YAApC;AACA,SAASC,cAAT,EAAyBC,KAAzB,EAAgCC,MAAhC,QAA8C,OAA9C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEAC,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,eAAe,EAAEZ,SAAS,CAACa,IADR;AAEnBC,EAAAA,gBAAgB,EAAEd,SAAS,CAACa,IAFT;AAGnBE,EAAAA,QAAQ,EAAEf,SAAS,CAACgB,KAAV,CAAgB;AACxBC,IAAAA,KAAK,EAAEjB,SAAS,CAACkB,IADO;AAExBC,IAAAA,MAAM,EAAEnB,SAAS,CAACkB,IAFM;AAGxBE,IAAAA,cAAc,EAAEpB,SAAS,CAACkB;AAHF,GAAhB,CAHS;AAQnBG,EAAAA,QAAQ,EAAErB,SAAS,CAACsB;AARD,CAArB;AAWA,OAAO,SAASZ,QAAT,OAA6E;AAAA,MAAzDE,eAAyD,QAAzDA,eAAyD;AAAA,MAAxCE,gBAAwC,QAAxCA,gBAAwC;AAAA,MAAtBC,QAAsB,QAAtBA,QAAsB;AAAA,MAAZM,QAAY,QAAZA,QAAY;;AAClF;AACA,MAAIT,eAAJ,EAAqB;AACnB,wBAAO,QAAC,WAAD,CAAa,QAAb;AAAsB,MAAA,KAAK,EAAEG,QAA7B;AAAA,gBAAwCM;AAAxC;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,CAIA;AAJA,OAKK,IAAIP,gBAAJ,EAAsB;AACzB,0BAAO,QAAC,MAAD;AAAQ,QAAA,OAAO,MAAf;AAAgB,QAAA,KAAK,EAAEN,KAAK,CAACe,MAAN,CAAaC,CAAb,CAAe,oBAAf;AAAvB;AAAA;AAAA;AAAA;AAAA,cAAP;AACD,KAFI,CAIL;AAJK,SAKA;AACH,4BACE,QAAC,WAAD,CAAa,QAAb;AAAsB,UAAA,KAAK,EAAET,QAA7B;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,QAAQ,eAAE,QAAC,MAAD;AAAQ,cAAA,OAAO;AAAf;AAAA;AAAA;AAAA;AAAA,oBAApB;AAAA,mCACE,QAAC,MAAD;AAAA,sCACE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEN,MAAM,CAACgB,MAAP,CAAcR,KAAd,CAAoBS,IAAjC;AAAA,uCACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAKE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEjB,MAAM,CAACgB,MAAP,CAAcN,MAAd,CAAqBO,IAAlC;AAAA,uCACE,QAAC,MAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBALF,eASE,QAAC,KAAD;AAAO,gBAAA,IAAI,EAAEjB,MAAM,CAACgB,MAAP,CAAcE,cAAd,CAA6BD,IAA1C;AAAA,uCACE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF;AAmBD;AACF;KAjCehB,Q","sourcesContent":["import React, { Suspense } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router';\r\n\r\n// app\r\nimport { AuthContext, Loader } from 'components';\r\nimport { Authentication, Login, Logout } from 'pages';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nAuthView.propTypes = {\r\n  isAuthenticated: PropTypes.bool,\r\n  isAuthInProgress: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    login: PropTypes.func,\r\n    logout: PropTypes.func,\r\n    handleCallback: PropTypes.func,\r\n  }),\r\n  children: PropTypes.any,\r\n};\r\n\r\nexport function AuthView({ isAuthenticated, isAuthInProgress, handlers, children }) {\r\n  // only display children <App /> if user is authenticated\r\n  if (isAuthenticated) {\r\n    return <AuthContext.Provider value={handlers}>{children}</AuthContext.Provider>;\r\n  }\r\n\r\n  // if auth is in progress show a loader\r\n  else if (isAuthInProgress) {\r\n    return <Loader visible label={utils.string.t('app.authenticating')} />;\r\n  }\r\n\r\n  // else show the un-protected routes (login, logout and authentication)\r\n  else {\r\n    return (\r\n      <AuthContext.Provider value={handlers}>\r\n        <Suspense fallback={<Loader visible />}>\r\n          <Switch>\r\n            <Route path={config.routes.login.root}>\r\n              <Login />\r\n            </Route>\r\n\r\n            <Route path={config.routes.logout.root}>\r\n              <Logout />\r\n            </Route>\r\n\r\n            <Route path={config.routes.authentication.root}>\r\n              <Authentication />\r\n            </Route>\r\n          </Switch>\r\n        </Suspense>\r\n      </AuthContext.Provider>\r\n    );\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}