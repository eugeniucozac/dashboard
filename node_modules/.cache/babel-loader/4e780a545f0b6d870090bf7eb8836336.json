{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossActions = function getLossActions(lossData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossActions'\n    };\n    dispatch(getLossActionsRequest());\n    dispatch(addLoader('getLossActions'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/loss/\".concat(lossData.lossDetailId, \"/action\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      console.log('data.data', data.data);\n      dispatch(getLossActionsSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getLossActionsFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {});\n  };\n};\nexport var getLossActionsRequest = function getLossActionsRequest(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getLossActionsSuccess = function getLossActionsSuccess(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossActionsFailure = function getLossActionsFailure(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossActions.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossActions","lossData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getLossActionsRequest","api","get","token","accessToken","claimService","path","lossDetailId","then","response","handleResponse","data","console","log","getLossActionsSuccess","catch","err","getLossActionsFailure","handleUnauthorized","finally","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,SAAc,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClE;AADkE,oBAETA,QAAQ,EAFC;AAAA,QAElDC,IAFkD,aAE1DC,IAF0D,CAElDD,IAFkD;AAAA,QAExBE,QAFwB,aAE1CC,MAF0C,CAEhCC,IAFgC,CAExBF,QAFwB;;AAIlE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,qBAAqB,EAAtB,CAAR;AACAT,IAAAA,QAAQ,CAACL,SAAS,CAAC,gBAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACa,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,0BAAmBhB,QAAQ,CAACiB,YAA5B;AAHD,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACa,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,WAAZ,EAAyBF,IAAI,CAACA,IAA9B;AACApB,MAAAA,QAAQ,CAACuB,qBAAqB,CAACH,IAAI,CAACA,IAAN,CAAtB,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAXI,EAYJI,KAZI,CAYE,UAACC,GAAD,EAAS;AACdzB,MAAAA,QAAQ,CAAC0B,qBAAqB,CAACD,GAAD,EAAMlB,YAAN,CAAtB,CAAR;AACAV,MAAAA,KAAK,CAACa,GAAN,CAAUiB,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CN,UAA5C;AACA,aAAO+B,GAAP;AACD,KAhBI,EAiBJG,OAjBI,CAiBI,YAAM,CAAE,CAjBZ,CAAP;AAkBD,GA7B6B;AAAA,CAAvB;AA+BP,OAAO,IAAMnB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACW,IAAD,EAAU;AAC7C,SAAO;AACLS,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,IAAD,EAAU;AAC7C,SAAO;AACLS,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,IAAD,EAAU;AAC7C,SAAO;AACLS,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossActions = (lossData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getLossActions',\r\n  };\r\n\r\n  dispatch(getLossActionsRequest());\r\n  dispatch(addLoader('getLossActions'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/loss/${lossData.lossDetailId}/action`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      console.log('data.data', data.data);\r\n      dispatch(getLossActionsSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getLossActionsFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {});\r\n};\r\n\r\nexport const getLossActionsRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}