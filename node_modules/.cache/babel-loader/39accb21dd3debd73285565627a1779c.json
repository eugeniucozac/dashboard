{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RiskIssues\\\\IssueCard.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // app\n\nimport { Button, Link, Chip } from 'components';\nimport styles from './RiskIssues.styles';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Box, Typography, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\nimport LaunchIcon from '@material-ui/icons/Launch';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar IssueCard = function IssueCard(_ref) {\n  _s();\n\n  var issue = _ref.issue,\n      canCurrentUserDismissIssues = _ref.canCurrentUserDismissIssues,\n      insuredSanctionsCheckResult = _ref.insuredSanctionsCheckResult,\n      reInsuredSanctionsCheckResult = _ref.reInsuredSanctionsCheckResult,\n      handleUpdateIssue = _ref.handleUpdateIssue,\n      isWaiting = _ref.isWaiting;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      clicked = _useState2[0],\n      setClicked = _useState2[1];\n\n  var classes = makeStyles(styles, {\n    name: 'RiskIssues'\n  })();\n  var issueStatus = issue === null || issue === void 0 ? void 0 : issue.issueStatus;\n  var hasInsuredSanctionsCheckResult = (insuredSanctionsCheckResult === null || insuredSanctionsCheckResult === void 0 ? void 0 : insuredSanctionsCheckResult.id) === (issue === null || issue === void 0 ? void 0 : issue.entityId);\n  var hasReInsuredSanctionsCheckResult = (reInsuredSanctionsCheckResult === null || reInsuredSanctionsCheckResult === void 0 ? void 0 : reInsuredSanctionsCheckResult.id) === (issue === null || issue === void 0 ? void 0 : issue.entityId);\n  var chipNestedClasses = {\n    root: classes.issueTypeChip\n  };\n\n  var handleClickDismiss = function handleClickDismiss() {\n    setClicked(true);\n    handleUpdateIssue(issue.id, constants.RISK_ISSUE_STATUS_PASSED);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"risk-data-issue\",\n    children: [hasInsuredSanctionsCheckResult && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: utils.string.t('app.insured'),\n        nestedClasses: chipNestedClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.sectionMessage,\n        children: insuredSanctionsCheckResult.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 11\n      }, _this), insuredSanctionsCheckResult.url && /*#__PURE__*/_jsxDEV(Link, {\n        target: \"_blank\",\n        rel: \"noopener\",\n        nestedClasses: {\n          link: classes.linkRoot,\n          icon: classes.linkIcon\n        },\n        icon: LaunchIcon,\n        iconPosition: \"right\",\n        href: insuredSanctionsCheckResult.url,\n        color: \"primary\",\n        text: utils.string.t('risks.issueResolveLink')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 9\n    }, _this), hasReInsuredSanctionsCheckResult && /*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: utils.string.t('app.reInsured'),\n        nestedClasses: chipNestedClasses\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.sectionMessage,\n        children: reInsuredSanctionsCheckResult.message\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 11\n      }, _this), reInsuredSanctionsCheckResult.url && /*#__PURE__*/_jsxDEV(Link, {\n        target: \"_blank\",\n        rel: \"noopener\",\n        nestedClasses: {\n          link: classes.linkRoot,\n          icon: classes.linkIcon\n        },\n        icon: LaunchIcon,\n        iconPosition: \"right\",\n        href: reInsuredSanctionsCheckResult.url,\n        color: \"primary\",\n        text: utils.string.t('risks.issueResolveLink')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 13\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 9\n    }, _this), issue.messages.map(function (message) {\n      var createdAt = utils.string.t('format.date', {\n        value: {\n          date: message.createdAt,\n          format: 'lll'\n        }\n      });\n      return /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Card, {\n          classes: {\n            root: classes.card\n          },\n          children: [((message === null || message === void 0 ? void 0 : message.userName) || (message === null || message === void 0 ? void 0 : message.createdAt)) && /*#__PURE__*/_jsxDEV(CardHeader, {\n            title: message.userName,\n            subheader: /*#__PURE__*/_jsxDEV(\"span\", {\n              title: \" \".concat(createdAt),\n              children: createdAt\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 88,\n              columnNumber: 65\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(CardContent, {\n            classes: {\n              root: classes.cardContent\n            },\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.message,\n              children: message.message\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, _this), issue.issueType === constants.RISK_ISSUE_SANCTIONS_BLOCKED ? null : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: canCurrentUserDismissIssues && issueStatus === constants.RISK_ISSUE_WAITING ? /*#__PURE__*/_jsxDEV(CardActions, {\n              disableSpacing: true,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mb: 0.5,\n                mt: 2,\n                display: \"flex\",\n                flex: 1,\n                justifyContent: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: HighlightOffIcon,\n                  size: \"xsmall\",\n                  color: \"primary\",\n                  text: utils.string.t('risks.dismissIssue'),\n                  onClick: handleClickDismiss,\n                  disabled: clicked || isWaiting\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, _this) : null\n          }, void 0, false)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 13\n        }, _this)\n      }, message.createdAt, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 11\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(IssueCard, \"NL05b5J4z4O/U6wEzhVGl+YEdv8=\");\n\nIssueCard.displayName = \"IssueCard\";\n_c = IssueCard;\nIssueCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"IssueCard\"\n};\nexport default IssueCard;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\RiskIssues\\\\IssueCard.js\"] = {\n    name: \"IssueCard\",\n    docgenInfo: IssueCard.__docgenInfo,\n    path: \"src\\\\modules\\\\RiskIssues\\\\IssueCard.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"IssueCard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RiskIssues/IssueCard.js"],"names":["React","useState","Button","Link","Chip","styles","utils","constants","makeStyles","Box","Typography","Card","CardHeader","CardContent","CardActions","LaunchIcon","HighlightOffIcon","IssueCard","issue","canCurrentUserDismissIssues","insuredSanctionsCheckResult","reInsuredSanctionsCheckResult","handleUpdateIssue","isWaiting","clicked","setClicked","classes","name","issueStatus","hasInsuredSanctionsCheckResult","id","entityId","hasReInsuredSanctionsCheckResult","chipNestedClasses","root","issueTypeChip","handleClickDismiss","RISK_ISSUE_STATUS_PASSED","string","t","sectionMessage","message","url","link","linkRoot","icon","linkIcon","messages","map","createdAt","value","date","format","card","userName","cardContent","issueType","RISK_ISSUE_SANCTIONS_BLOCKED","RISK_ISSUE_WAITING"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\n\r\n// app\r\nimport { Button, Link, Chip } from 'components';\r\nimport styles from './RiskIssues.styles';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n// mui\r\nimport { makeStyles, Box, Typography, Card, CardHeader, CardContent, CardActions } from '@material-ui/core';\r\nimport LaunchIcon from '@material-ui/icons/Launch';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst IssueCard = ({\r\n  issue,\r\n  canCurrentUserDismissIssues,\r\n  insuredSanctionsCheckResult,\r\n  reInsuredSanctionsCheckResult,\r\n  handleUpdateIssue,\r\n  isWaiting,\r\n}) => {\r\n  const [clicked, setClicked] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'RiskIssues' })();\r\n  const issueStatus = issue?.issueStatus;\r\n\r\n  const hasInsuredSanctionsCheckResult = insuredSanctionsCheckResult?.id === issue?.entityId;\r\n  const hasReInsuredSanctionsCheckResult = reInsuredSanctionsCheckResult?.id === issue?.entityId;\r\n  const chipNestedClasses = { root: classes.issueTypeChip };\r\n\r\n  const handleClickDismiss = () => {\r\n    setClicked(true);\r\n    handleUpdateIssue(issue.id, constants.RISK_ISSUE_STATUS_PASSED);\r\n  };\r\n\r\n  return (\r\n    <Box data-testid={`risk-data-issue`}>\r\n      {hasInsuredSanctionsCheckResult && (\r\n        <Box mb={2}>\r\n          <Chip label={utils.string.t('app.insured')} nestedClasses={chipNestedClasses} />\r\n          <Typography className={classes.sectionMessage}>{insuredSanctionsCheckResult.message}</Typography>\r\n          {insuredSanctionsCheckResult.url && (\r\n            <Link\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              nestedClasses={{\r\n                link: classes.linkRoot,\r\n                icon: classes.linkIcon,\r\n              }}\r\n              icon={LaunchIcon}\r\n              iconPosition=\"right\"\r\n              href={insuredSanctionsCheckResult.url}\r\n              color=\"primary\"\r\n              text={utils.string.t('risks.issueResolveLink')}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n      {hasReInsuredSanctionsCheckResult && (\r\n        <Box mb={2}>\r\n          <Chip label={utils.string.t('app.reInsured')} nestedClasses={chipNestedClasses} />\r\n          <Typography className={classes.sectionMessage}>{reInsuredSanctionsCheckResult.message}</Typography>\r\n          {reInsuredSanctionsCheckResult.url && (\r\n            <Link\r\n              target=\"_blank\"\r\n              rel=\"noopener\"\r\n              nestedClasses={{\r\n                link: classes.linkRoot,\r\n                icon: classes.linkIcon,\r\n              }}\r\n              icon={LaunchIcon}\r\n              iconPosition=\"right\"\r\n              href={reInsuredSanctionsCheckResult.url}\r\n              color=\"primary\"\r\n              text={utils.string.t('risks.issueResolveLink')}\r\n            />\r\n          )}\r\n        </Box>\r\n      )}\r\n\r\n      {issue.messages.map((message) => {\r\n        const createdAt = utils.string.t('format.date', {\r\n          value: { date: message.createdAt, format: 'lll' },\r\n        });\r\n\r\n        return (\r\n          <Box mb={2} key={message.createdAt}>\r\n            <Card classes={{ root: classes.card }}>\r\n              {(message?.userName || message?.createdAt) && (\r\n                <CardHeader title={message.userName} subheader={<span title={` ${createdAt}`}>{createdAt}</span>} />\r\n              )}\r\n              <CardContent classes={{ root: classes.cardContent }}>\r\n                <Typography variant=\"body2\" className={classes.message}>\r\n                  {message.message}\r\n                </Typography>\r\n              </CardContent>\r\n\r\n              {issue.issueType === constants.RISK_ISSUE_SANCTIONS_BLOCKED ? null : (\r\n                <>\r\n                  {canCurrentUserDismissIssues && issueStatus === constants.RISK_ISSUE_WAITING ? (\r\n                    <CardActions disableSpacing>\r\n                      <Box mb={0.5} mt={2} display=\"flex\" flex={1} justifyContent=\"right\">\r\n                        <Button\r\n                          icon={HighlightOffIcon}\r\n                          size=\"xsmall\"\r\n                          color=\"primary\"\r\n                          text={utils.string.t('risks.dismissIssue')}\r\n                          onClick={handleClickDismiss}\r\n                          disabled={clicked || isWaiting}\r\n                        />\r\n                      </Box>\r\n                    </CardActions>\r\n                  ) : null}\r\n                </>\r\n              )}\r\n            </Card>\r\n          </Box>\r\n        );\r\n      })}\r\n    </Box>\r\n  );\r\n};\r\n\r\nexport default IssueCard;\r\n"]},"metadata":{},"sourceType":"module"}