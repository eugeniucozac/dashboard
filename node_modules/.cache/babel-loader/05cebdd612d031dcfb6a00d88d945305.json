{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditClaimRefNotes\\\\AddEditClaimRefNotes.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport styles from './AddEditClaimRefNotes.styles';\nimport { Button, FormContainer, FormFields, FormGrid, FormText, FormLabel, FormActions, FormHidden } from 'components';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils'; //mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditClaimRefNotesView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  claim: PropTypes.object\n};\nexport function AddEditClaimRefNotesView(_ref) {\n  _s();\n\n  var actions = _ref.actions,\n      fields = _ref.fields,\n      claim = _ref.claim;\n  var classes = makeStyles(styles, {\n    name: 'AddEditClaimRefNotes'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit,\n      \"data-testid\": \"form-add-edit-claim-notes\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.notes.claimRef')),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 41,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 40,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 9,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  classes: {\n                    root: classes.textOnly\n                  },\n                  children: claim === null || claim === void 0 ? void 0 : claim.claimRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.notes.noteDetails'), \"*\"),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 9,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'notesDescription', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'caseIncidentID', control)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: cancel.label,\n        variant: \"text\",\n        disabled: formState.isSubmitting,\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 20\n      }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting || !formState.isDirty,\n        onClick: handleSubmit(submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditClaimRefNotesView, \"qPTQlZXy6eOzlJ+fO4/MhkHjehY=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = AddEditClaimRefNotesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditClaimRefNotesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditClaimRefNotes/AddEditClaimRefNotes.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormContainer","FormFields","FormGrid","FormText","FormLabel","FormActions","FormHidden","useFormActions","utils","makeStyles","Typography","AddEditClaimRefNotesView","propTypes","fields","array","actions","claim","object","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","handleSubmit","formState","cancel","submit","root","string","t","textOnly","claimRef","getFieldProps","label","isSubmitting","handler","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport styles from './AddEditClaimRefNotes.styles';\r\nimport { Button, FormContainer, FormFields, FormGrid, FormText, FormLabel, FormActions, FormHidden } from 'components';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n//mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nAddEditClaimRefNotesView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  claim: PropTypes.object,\r\n};\r\n\r\nexport function AddEditClaimRefNotesView({ actions, fields, claim }) {\r\n  const classes = makeStyles(styles, { name: 'AddEditClaimRefNotes' })();\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit} data-testid=\"form-add-edit-claim-notes\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container alignItems=\"center\">\r\n                <FormGrid item xs={3}>\r\n                  <FormLabel label={`${utils.string.t('claims.notes.claimRef')}`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={9}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {claim?.claimRef}\r\n                  </Typography>\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={3}>\r\n                  <FormLabel label={`${utils.string.t('claims.notes.noteDetails')}*`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={9}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'notesDescription', control, errors)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'caseIncidentID', control)} />\r\n        </FormFields>\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n        {submit && (\r\n          <Button\r\n            text={submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting || !formState.isDirty}\r\n            onClick={handleSubmit(submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}