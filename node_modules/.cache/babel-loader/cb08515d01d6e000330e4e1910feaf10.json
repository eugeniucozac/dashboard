{"ast":null,"code":"import _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Notification\\\\Notification.js\";\nimport React, { PureComponent } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './Notification.styles';\nimport { Button, Translate } from 'components';\nimport { removeNotification, hideNotification } from 'stores';\nimport config from 'config'; // mui\n\nimport { withStyles, Snackbar, Slide } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiNotificationQueue: get(state, 'ui.notification.queue', [])\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  removeNotification: removeNotification,\n  hideNotification: hideNotification\n};\nexport var Notification = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Notification, _PureComponent);\n\n  var _super = _createSuper(Notification);\n\n  function Notification() {\n    var _this;\n\n    _classCallCheck(this, Notification);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (key) {\n      return function (event, reason) {\n        if (reason === 'clickaway') return;\n\n        _this.props.hideNotification(key);\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleExited\", function (key) {\n      return function () {\n        _this.props.removeNotification(key);\n      };\n    });\n\n    return _this;\n  }\n\n  _createClass(Notification, [{\n    key: \"render\",\n    value: function render() {\n      var _snackbarClasses;\n\n      var _this$props = this.props,\n          uiNotificationQueue = _this$props.uiNotificationQueue,\n          classes = _this$props.classes;\n      var notification = uiNotificationQueue[0];\n      if (!notification) return null;\n      var snackbarClasses = (_snackbarClasses = {}, _defineProperty(_snackbarClasses, classes.root, true), _defineProperty(_snackbarClasses, classes.success, notification.type === 'success'), _defineProperty(_snackbarClasses, classes.error, notification.type === 'error'), _defineProperty(_snackbarClasses, classes.info, notification.type === 'info'), _defineProperty(_snackbarClasses, classes.warning, notification.type === 'warning'), _snackbarClasses);\n      var delay = notification.delay || config.ui.notification.delay[notification.type] || null;\n      return /*#__PURE__*/_jsxDEV(Snackbar, {\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        open: notification.visible,\n        autoHideDuration: delay,\n        onClose: this.handleClose(notification.key),\n        TransitionProps: {\n          onExited: this.handleExited(notification.key)\n        },\n        ContentProps: {\n          'aria-describedby': 'notification-message-id',\n          className: classnames(snackbarClasses)\n        },\n        className: classes.notification,\n        message: /*#__PURE__*/_jsxDEV(Translate, {\n          label: notification.message,\n          options: notification.data\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 18\n        }, this),\n        TransitionComponent: Slide,\n        action: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: CloseIcon,\n          variant: \"text\",\n          \"aria-label\": \"Close\",\n          nestedClasses: {\n            btn: classes.close\n          },\n          onClick: this.handleClose(notification.key)\n        }, \"close\", false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)]\n      }, notification.key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Notification;\n}(PureComponent);\nNotification.displayName = \"Notification\";\nNotification.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleClose\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"key\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleExited\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"key\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Notification\"\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Notification);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Notification\\\\Notification.js\"] = {\n    name: \"Notification\",\n    docgenInfo: Notification.__docgenInfo,\n    path: \"src\\\\components\\\\Notification\\\\Notification.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Notification/Notification.js"],"names":["React","PureComponent","connect","compose","classnames","get","styles","Button","Translate","removeNotification","hideNotification","config","withStyles","Snackbar","Slide","CloseIcon","mapStateToProps","state","uiNotificationQueue","mapDispatchToProps","Notification","key","event","reason","props","classes","notification","snackbarClasses","root","success","type","error","info","warning","delay","ui","vertical","horizontal","visible","handleClose","onExited","handleExited","className","message","data","btn","close"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './Notification.styles';\r\nimport { Button, Translate } from 'components';\r\nimport { removeNotification, hideNotification } from 'stores';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { withStyles, Snackbar, Slide } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  uiNotificationQueue: get(state, 'ui.notification.queue', []),\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  removeNotification,\r\n  hideNotification,\r\n};\r\n\r\nexport class Notification extends PureComponent {\r\n  handleClose = (key) => (event, reason) => {\r\n    if (reason === 'clickaway') return;\r\n    this.props.hideNotification(key);\r\n  };\r\n\r\n  handleExited = (key) => () => {\r\n    this.props.removeNotification(key);\r\n  };\r\n\r\n  render() {\r\n    const { uiNotificationQueue, classes } = this.props;\r\n    const notification = uiNotificationQueue[0];\r\n\r\n    if (!notification) return null;\r\n\r\n    const snackbarClasses = {\r\n      [classes.root]: true,\r\n      [classes.success]: notification.type === 'success',\r\n      [classes.error]: notification.type === 'error',\r\n      [classes.info]: notification.type === 'info',\r\n      [classes.warning]: notification.type === 'warning',\r\n    };\r\n\r\n    const delay = notification.delay || config.ui.notification.delay[notification.type] || null;\r\n    return (\r\n      <Snackbar\r\n        key={notification.key}\r\n        anchorOrigin={{ vertical: 'bottom', horizontal: 'left' }}\r\n        open={notification.visible}\r\n        autoHideDuration={delay}\r\n        onClose={this.handleClose(notification.key)}\r\n        TransitionProps={{\r\n          onExited: this.handleExited(notification.key),\r\n        }}\r\n        ContentProps={{\r\n          'aria-describedby': 'notification-message-id',\r\n          className: classnames(snackbarClasses),\r\n        }}\r\n        className={classes.notification}\r\n        message={<Translate label={notification.message} options={notification.data} />}\r\n        TransitionComponent={Slide}\r\n        action={[\r\n          <Button\r\n            key=\"close\"\r\n            icon={CloseIcon}\r\n            variant=\"text\"\r\n            aria-label=\"Close\"\r\n            nestedClasses={{\r\n              btn: classes.close,\r\n            }}\r\n            onClick={this.handleClose(notification.key)}\r\n          />,\r\n        ]}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Notification);\r\n"]},"metadata":{},"sourceType":"module"}