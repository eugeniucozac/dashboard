{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport * as utils from 'utils';\nimport { Accordion, FormAutocompleteMui, FormDate, FormLabel, FormGrid, FormText, Layout, Skeleton } from 'components';\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\nimport styles from './LinkClaimPolicy.styles';\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LinkClaimPolicyView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      policyData = _ref.policyData,\n      uwResetKey = _ref.uwResetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      underWritingGroups = _ref.underWritingGroups,\n      isBordereauFlag = _ref.isBordereauFlag,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      postSaveHandler = _ref.postSaveHandler,\n      postEditSaveHandler = _ref.postEditSaveHandler,\n      saveStatus = _ref.saveStatus,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      handleFormStatus = _ref.handleFormStatus,\n      fieldsLoader = _ref.fieldsLoader;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimInformation'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEdit = _useState2[0],\n      setIsEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initialLoad = _useState4[0],\n      setInitialLoad = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accExpandStatus = _useState6[0],\n      setAccExpandStatus = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  }));\n  var handleSubmit = claimForm.handleSubmit,\n      setValue = claimForm.setValue,\n      control = claimForm.control,\n      errors = claimForm.errors,\n      watch = claimForm.watch;\n  var insuredWatch = Boolean(watch('insured'));\n  var clientWatch = Boolean(watch('client'));\n  var countryCodeWatch = Boolean(watch('countryCode'));\n  var certificateNumberWatch = Boolean(watch('certificateNumber'));\n  var certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\n  var certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\n  var originalCurrencyCodeWatch = Boolean(watch('originalCurrencyCode'));\n  var settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\n  var interestWatch = Boolean(watch('interest'));\n  var underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\n\n  var formWatcher = function formWatcher() {\n    return insuredWatch || clientWatch || countryCodeWatch || certificateNumberWatch || certificateInceptionDateWatch || certificateExpiryDateWatch || originalCurrencyCodeWatch || settlementCurrencyCodeWatch || interestWatch || underWritingGroupsWatch;\n  };\n\n  var saveHandler = function saveHandler() {\n    if (selectedPolicyRender !== '' && initialLoad || initialLoad && validation) {\n      handleFormStatus();\n    }\n  };\n\n  if (formWatcher() !== isEdit) {\n    setIsEdit(true);\n  }\n\n  useEffect(function () {\n    if (isEdit && initialLoad) {\n      saveHandler();\n    } else {\n      var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n        return _objectSpread({}, form);\n      });\n\n      if (formState[index]['formEditedStatus']) {\n        formState[index]['formEditedStatus'] = false;\n        formState[index]['isSubmitted'] = true;\n        setFormEditedStatus(formState);\n      }\n\n      setInitialLoad(true);\n    }\n  }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _isFormsEdited$index, _isFormsEdited$index2;\n\n    if (saveStatus && !((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) && initialLoad) {\n      handleSubmit(postSaveHandler)();\n    } else if (saveStatus && ((_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) && validation) {\n      handleSubmit(postEditSaveHandler)();\n    }\n\n    setValidation(true);\n  }, [saveStatus]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (underWritingGroups) {\n      if (underWritingGroups.percentageOfSelected) {\n        setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n        saveHandler();\n      } else {\n        setValue('order', '100');\n      }\n    }\n  }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isBordereauFlag) {\n      setValue('certificateNumber', fields[9].value);\n      setValue('certificateInceptionDate', fields[10].value);\n      setValue('certificateExpiryDate', fields[11].value);\n    }\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      className: classes.typoTitle,\n      children: policyData === null || policyData === void 0 ? void 0 : policyData.policyNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        padding: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          m: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: fieldsLoader.isInsuredLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 70,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'insured', control)), {}, {\n                  error: errors.insured,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 136,\n                  columnNumber: 21\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: fieldsLoader.isPoliciesClientsLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 70,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'client', control)), {}, {\n                  error: errors.client,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 154,\n                  columnNumber: 21\n                }, this)\n              }, uwResetKey || isEdit, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'countryCode', control)), {}, {\n                  error: errors.countryCode,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 168,\n                  columnNumber: 19\n                }, this)\n              }, uwResetKey || isEdit, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), isBordereauFlag && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateNumber')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateNumber', control)), {}, {\n                  error: errors.certificateNumber\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateInceptionDate')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 194,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateInceptionDate', control)), {}, {\n                  error: errors.certificateInceptionDate\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 193,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateExpiryDate')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateExpiryDate', control)), {}, {\n                  error: errors.certificateExpiryDate\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'originalCurrencyCode', control)), {}, {\n                  error: errors.settlementCurrencyCode,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)), {}, {\n                  error: errors.settlementCurrencyCode,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 238,\n                  columnNumber: 19\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 237,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 236,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: fieldsLoader.isInterestLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 70,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, this) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'interest', control)), {}, {\n                  error: errors.interest,\n                  callback: initialLoad && saveHandler,\n                  handleUpdate: function handleUpdate(id, value) {\n                    setValue(id, value);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 253,\n                  columnNumber: 23\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 248,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 223,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: accExpandStatus,\n            onChange: function onChange() {\n              return setAccExpandStatus(!accExpandStatus);\n            },\n            className: classes.accordionLine,\n            title: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              variant: \"body2\",\n              children: [' ', utils.string.t('claims.underWritingGroups.title')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 17\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroups, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  uwResetKey: uwResetKey,\n                  hasClaimRef: hasClaimRef,\n                  selectedPolicyRender: selectedPolicyRender\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ClaimsMovementType, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  underWritingGroups: underWritingGroups,\n                  enforceValueSet: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 289,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 288,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 278,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LinkClaimPolicyView, \"zp3wr2nQsXMLLvQurSRCKhSksDI=\", false, function () {\n  return [useForm];\n});\n\n_c = LinkClaimPolicyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkClaimPolicyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.view.js"],"names":["React","useEffect","useState","useForm","yupResolver","utils","Accordion","FormAutocompleteMui","FormDate","FormLabel","FormGrid","FormText","Layout","Skeleton","ClaimsUnderwritingGroups","ClaimsMovementType","styles","makeStyles","Grid","Box","Typography","LinkClaimPolicyView","fields","policyData","uwResetKey","hasClaimRef","underWritingGroups","isBordereauFlag","validation","setValidation","index","isFormsEdited","setFormEditedStatus","postSaveHandler","postEditSaveHandler","saveStatus","selectedPolicyRender","handleFormStatus","fieldsLoader","classes","name","isEdit","setIsEdit","initialLoad","setInitialLoad","accExpandStatus","setAccExpandStatus","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimForm","resolver","context","handleSubmit","setValue","control","errors","watch","insuredWatch","Boolean","clientWatch","countryCodeWatch","certificateNumberWatch","certificateInceptionDateWatch","certificateExpiryDateWatch","originalCurrencyCodeWatch","settlementCurrencyCodeWatch","interestWatch","underWritingGroupsWatch","formWatcher","saveHandler","formState","map","formEditedStatus","percentageOfSelected","value","typoTitle","policyNumber","wrapper","isInsuredLoading","getFieldProps","insured","id","isPoliciesClientsLoading","client","countryCode","root","formLabel","string","t","certificateNumber","certificateInceptionDate","certificateExpiryDate","settlementCurrencyCode","isInterestLoading","interest","accordionLine","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,EAAoBC,mBAApB,EAAyCC,QAAzC,EAAmDC,SAAnD,EAA8DC,QAA9D,EAAwEC,QAAxE,EAAkFC,MAAlF,EAA0FC,QAA1F,QAA0G,YAA1G;AACA,SAASC,wBAAT,EAAmCC,kBAAnC,QAA6D,SAA7D;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,mBAAlD;;;AAEA,OAAO,SAASC,mBAAT,OAkBJ;AAAA;;AAAA,MAjBDC,MAiBC,QAjBDA,MAiBC;AAAA,MAhBDC,UAgBC,QAhBDA,UAgBC;AAAA,MAfDC,UAeC,QAfDA,UAeC;AAAA,MAdDC,WAcC,QAdDA,WAcC;AAAA,MAbDC,kBAaC,QAbDA,kBAaC;AAAA,MAZDC,eAYC,QAZDA,eAYC;AAAA,MAXDC,UAWC,QAXDA,UAWC;AAAA,MAVDC,aAUC,QAVDA,aAUC;AAAA,MATDC,KASC,QATDA,KASC;AAAA,MARDC,aAQC,QARDA,aAQC;AAAA,MAPDC,mBAOC,QAPDA,mBAOC;AAAA,MANDC,eAMC,QANDA,eAMC;AAAA,MALDC,mBAKC,QALDA,mBAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,oBAGC,QAHDA,oBAGC;AAAA,MAFDC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,YACC,QADDA,YACC;AACD,MAAMC,OAAO,GAAGtB,UAAU,CAACD,MAAD,EAAS;AAAEwB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADC,kBAE2BtC,QAAQ,CAAC,KAAD,CAFnC;AAAA;AAAA,MAEMuC,MAFN;AAAA,MAEcC,SAFd;;AAAA,mBAGqCxC,QAAQ,CAAC,KAAD,CAH7C;AAAA;AAAA,MAGMyC,WAHN;AAAA,MAGmBC,cAHnB;;AAAA,mBAI6C1C,QAAQ,CAAC,IAAD,CAJrD;AAAA;AAAA,MAIM2C,eAJN;AAAA,MAIuBC,kBAJvB;;AAKD,MAAMC,aAAa,GAAG1C,KAAK,CAAC2C,IAAN,CAAWC,gBAAX,CAA4B3B,MAA5B,CAAtB;AACA,MAAM4B,gBAAgB,GAAG7C,KAAK,CAAC2C,IAAN,CAAWG,mBAAX,CAA+B7B,MAA/B,CAAzB;AAEA,MAAM8B,SAAS,GAAGjD,OAAO;AACvB4C,IAAAA,aAAa,EAAbA;AADuB,KAEnBG,gBAAgB,IAAI;AAAEG,IAAAA,QAAQ,EAAEjD,WAAW,CAAC8C,gBAAD,CAAvB;AAA2CI,IAAAA,OAAO,EAAE;AAAE1B,MAAAA,UAAU,EAAVA;AAAF;AAApD,GAFD,EAAzB;AARC,MAYO2B,YAZP,GAY0DH,SAZ1D,CAYOG,YAZP;AAAA,MAYqBC,QAZrB,GAY0DJ,SAZ1D,CAYqBI,QAZrB;AAAA,MAY+BC,OAZ/B,GAY0DL,SAZ1D,CAY+BK,OAZ/B;AAAA,MAYwCC,MAZxC,GAY0DN,SAZ1D,CAYwCM,MAZxC;AAAA,MAYgDC,KAZhD,GAY0DP,SAZ1D,CAYgDO,KAZhD;AAcD,MAAMC,YAAY,GAAGC,OAAO,CAACF,KAAK,CAAC,SAAD,CAAN,CAA5B;AACA,MAAMG,WAAW,GAAGD,OAAO,CAACF,KAAK,CAAC,QAAD,CAAN,CAA3B;AACA,MAAMI,gBAAgB,GAAGF,OAAO,CAACF,KAAK,CAAC,aAAD,CAAN,CAAhC;AACA,MAAMK,sBAAsB,GAAGH,OAAO,CAACF,KAAK,CAAC,mBAAD,CAAN,CAAtC;AACA,MAAMM,6BAA6B,GAAGJ,OAAO,CAACF,KAAK,CAAC,0BAAD,CAAN,CAA7C;AACA,MAAMO,0BAA0B,GAAGL,OAAO,CAACF,KAAK,CAAC,uBAAD,CAAN,CAA1C;AACA,MAAMQ,yBAAyB,GAAGN,OAAO,CAACF,KAAK,CAAC,sBAAD,CAAN,CAAzC;AACA,MAAMS,2BAA2B,GAAGP,OAAO,CAACF,KAAK,CAAC,wBAAD,CAAN,CAA3C;AACA,MAAMU,aAAa,GAAGR,OAAO,CAACF,KAAK,CAAC,UAAD,CAAN,CAA7B;AACA,MAAMW,uBAAuB,GAAGT,OAAO,CAACF,KAAK,CAAC,oBAAD,CAAN,CAAvC;;AAEA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,WACEX,YAAY,IACZE,WADA,IAEAC,gBAFA,IAGAC,sBAHA,IAIAC,6BAJA,IAKAC,0BALA,IAMAC,yBANA,IAOAC,2BAPA,IAQAC,aARA,IASAC,uBAVF;AAYD,GAbD;;AAeA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,QAAKpC,oBAAoB,KAAK,EAAzB,IAA+BO,WAAhC,IAAiDA,WAAW,IAAIf,UAApE,EAAiF;AAC/ES,MAAAA,gBAAgB;AACjB;AACF,GAJD;;AAMA,MAAIkC,WAAW,OAAO9B,MAAtB,EAA8B;AAC5BC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACD;;AAEDzC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwC,MAAM,IAAIE,WAAd,EAA2B;AACzB6B,MAAAA,WAAW;AACZ,KAFD,MAEO;AACL,UAAMC,SAAS,GAAG1C,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAE2C,GAAf,CAAmB,UAAC1B,IAAD;AAAA,iCAAgBA,IAAhB;AAAA,OAAnB,CAAlB;;AACA,UAAIyB,SAAS,CAAC3C,KAAD,CAAT,CAAiB,kBAAjB,CAAJ,EAA0C;AACxC2C,QAAAA,SAAS,CAAC3C,KAAD,CAAT,CAAiB,kBAAjB,IAAuC,KAAvC;AACA2C,QAAAA,SAAS,CAAC3C,KAAD,CAAT,CAAiB,aAAjB,IAAkC,IAAlC;AACAE,QAAAA,mBAAmB,CAACyC,SAAD,CAAnB;AACD;;AACD7B,MAAAA,cAAc,CAAC,IAAD,CAAd;AACD;AACF,GAZQ,EAYN,CAACH,MAAD,CAZM,CAAT,CAlDC,CA8Da;;AAEdxC,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAIkC,UAAU,IAAI,0BAACJ,aAAa,CAACD,KAAD,CAAd,yDAAC,qBAAsB6C,gBAAvB,CAAd,IAAyDhC,WAA7D,EAA0E;AACxEY,MAAAA,YAAY,CAACtB,eAAD,CAAZ;AACD,KAFD,MAEO,IAAIE,UAAU,8BAAIJ,aAAa,CAACD,KAAD,CAAjB,0DAAI,sBAAsB6C,gBAA1B,CAAV,IAAwD/C,UAA5D,EAAwE;AAC7E2B,MAAAA,YAAY,CAACrB,mBAAD,CAAZ;AACD;;AACDL,IAAAA,aAAa,CAAC,IAAD,CAAb;AACD,GAPQ,EAON,CAACM,UAAD,CAPM,CAAT,CAhEC,CAuEiB;;AAElBlC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,kBAAJ,EAAwB;AACtB,UAAIA,kBAAkB,CAACkD,oBAAvB,EAA6C;AAC3CpB,QAAAA,QAAQ,CAAC,iBAAD,EAAoB9B,kBAAkB,CAACkD,oBAAvC,CAAR;AACAJ,QAAAA,WAAW;AACZ,OAHD,MAGO;AACLhB,QAAAA,QAAQ,CAAC,OAAD,EAAU,KAAV,CAAR;AACD;AACF;AACF,GATQ,EASN,CAAC9B,kBAAD,CATM,CAAT,CAzEC,CAkFyB;;AAE1BzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI0B,eAAJ,EAAqB;AACnB6B,MAAAA,QAAQ,CAAC,mBAAD,EAAsBlC,MAAM,CAAC,CAAD,CAAN,CAAUuD,KAAhC,CAAR;AACArB,MAAAA,QAAQ,CAAC,0BAAD,EAA6BlC,MAAM,CAAC,EAAD,CAAN,CAAWuD,KAAxC,CAAR;AACArB,MAAAA,QAAQ,CAAC,uBAAD,EAA0BlC,MAAM,CAAC,EAAD,CAAN,CAAWuD,KAArC,CAAR;AACD;AACF,GANQ,EAMN,CAACrD,UAAD,CANM,CAAT,CApFC,CA0FiB;;AAElB,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAEe,OAAO,CAACuC,SAA/C;AAAA,gBACGvD,UADH,aACGA,UADH,uBACGA,UAAU,CAAEwD;AADf;AAAA;AAAA;AAAA;AAAA,YADF,eAIE;AAAK,MAAA,SAAS,EAAExC,OAAO,CAACyC,OAAxB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,0BACG1C,YAAY,CAAC2C,gBAAb,gBACC,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,SAAS,EAAC,MAAhC;AAAuC,kBAAA,aAAa,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,wBADD,gBAEC,QAAC,mBAAD,kCACM5E,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,SAAjC,EAA4CmC,OAA5C,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACyB,OAFhB;AAGE,kBAAA,QAAQ,EAAExC,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AAHJ,iBAAoBrD,UAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAiBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,0BACGc,YAAY,CAAC+C,wBAAb,gBAEC,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,SAAS,EAAC,MAAhC;AAAuC,kBAAA,aAAa,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,wBAFD,gBAIC,QAAC,mBAAD,kCACMhF,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,QAAjC,EAA2CmC,OAA3C,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAAC4B,MAFhB;AAGE,kBAAA,QAAQ,EAAE3C,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AALJ,iBAAoBrD,UAAU,IAAIiB,MAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAjBF,eAmCE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,mBAAD,kCACMpC,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,aAAjC,EAAgDmC,OAAhD,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAAC6B,WAFhB;AAGE,kBAAA,QAAQ,EAAE5C,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,iBAAoBrD,UAAU,IAAIiB,MAAlC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,EAkDGd,eAAe,iBACd,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,aAAa,EAAE;AAAE6D,kBAAAA,IAAI,EAAEjD,OAAO,CAACkD;AAAhB,iBADjB;AAEE,gBAAA,KAAK,YAAKpF,KAAK,CAACqF,MAAN,CAAaC,CAAb,CAAe,2CAAf,CAAL,CAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,QAAD,kCAActF,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,mBAAjC,EAAsDmC,OAAtD,CAAd;AAA8E,kBAAA,KAAK,EAAEC,MAAM,CAACkC;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBADF,eAYE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,aAAa,EAAE;AAAEJ,kBAAAA,IAAI,EAAEjD,OAAO,CAACkD;AAAhB,iBADjB;AAEE,gBAAA,KAAK,YAAKpF,KAAK,CAACqF,MAAN,CAAaC,CAAb,CAAe,kDAAf,CAAL,CAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,QAAD,kCACMtF,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,0BAAjC,EAA6DmC,OAA7D,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACmC;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZF,eA0BE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACE,QAAC,SAAD;AACE,gBAAA,aAAa,EAAE;AAAEL,kBAAAA,IAAI,EAAEjD,OAAO,CAACkD;AAAhB,iBADjB;AAEE,gBAAA,KAAK,YAAKpF,KAAK,CAACqF,MAAN,CAAaC,CAAb,CAAe,+CAAf,CAAL,CAFP;AAGE,gBAAA,KAAK,EAAC;AAHR;AAAA;AAAA;AAAA;AAAA,sBADF,eAME,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,QAAD,kCACMtF,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,uBAAjC,EAA0DmC,OAA1D,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACoC;AAFhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBANF;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BF;AAAA;AAAA;AAAA;AAAA;AAAA,kBAnDJ,eA6FE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,mBAAD,kCACMzF,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,sBAAjC,EAAyDmC,OAAzD,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACqC,sBAFhB;AAGE,kBAAA,QAAQ,EAAEpD,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,iBAAoBrD,UAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACE,QAAC,mBAAD,kCACMnB,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,wBAAjC,EAA2DmC,OAA3D,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACqC,sBAFhB;AAGE,kBAAA,QAAQ,EAAEpD,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,iBAAoBrD,UAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAbF,eAyBE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,0BAEIc,YAAY,CAAC0D,iBAAb,gBACE,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,SAAS,EAAC,MAAhC;AAAuC,kBAAA,aAAa,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA,wBADF,gBAEE,QAAC,mBAAD,kCACM3F,KAAK,CAAC2C,IAAN,CAAWkC,aAAX,CAAyB5D,MAAzB,EAAiC,UAAjC,EAA6CmC,OAA7C,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACuC,QAFhB;AAGE,kBAAA,QAAQ,EAAEtD,WAAW,IAAI6B,WAH3B;AAIE,kBAAA,YAAY,EAAE,sBAACY,EAAD,EAAKP,KAAL,EAAe;AAC3BrB,oBAAAA,QAAQ,CAAC4B,EAAD,EAAKP,KAAL,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AAJN,iBAAoBrD,UAApB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAzBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBA7FF;AAAA;AAAA;AAAA;AAAA;AAAA,gBADF,eAyIE,QAAC,GAAD;AAAA,iCACE,QAAC,SAAD;AACE,YAAA,QAAQ,EAAEqB,eADZ;AAEE,YAAA,QAAQ,EAAE;AAAA,qBAAMC,kBAAkB,CAAC,CAACD,eAAF,CAAxB;AAAA,aAFZ;AAGE,YAAA,SAAS,EAAEN,OAAO,CAAC2D,aAHrB;AAIE,YAAA,KAAK,eACH,QAAC,UAAD;AAAY,cAAA,SAAS,EAAE3D,OAAO,CAAC4D,KAA/B;AAAsC,cAAA,OAAO,EAAC,OAA9C;AAAA,yBACG,GADH,EAEG9F,KAAK,CAACqF,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAFH;AAAA;AAAA;AAAA;AAAA;AAAA,oBALJ;AAAA,mCAWE,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,SAAS,EAAC,KAA1B;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,wBAAD;AACE,kBAAA,MAAM,EAAErE,MADV;AAEE,kBAAA,SAAS,EAAE8B,SAFb;AAGE,kBAAA,UAAU,EAAE5B,UAHd;AAIE,kBAAA,WAAW,EAAEC,WAJf;AAKE,kBAAA,oBAAoB,EAAEW;AALxB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAUE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,kBAAD;AACE,kBAAA,MAAM,EAAEd,MADV;AAEE,kBAAA,SAAS,EAAE8B,SAFb;AAGE,kBAAA,kBAAkB,EAAE1B,kBAHtB;AAIE,kBAAA,eAAe,EAAE;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AAXF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAzIF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAoLD;;GAlSeL,mB;UA0BIlB,O;;;KA1BJkB,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Accordion, FormAutocompleteMui, FormDate, FormLabel, FormGrid, FormText, Layout, Skeleton } from 'components';\r\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\r\nimport styles from './LinkClaimPolicy.styles';\r\n\r\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\r\n\r\nexport function LinkClaimPolicyView({\r\n  fields,\r\n  policyData,\r\n  uwResetKey,\r\n  hasClaimRef,\r\n  underWritingGroups,\r\n  isBordereauFlag,\r\n  validation,\r\n  setValidation,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  postSaveHandler,\r\n  postEditSaveHandler,\r\n  saveStatus,\r\n  selectedPolicyRender,\r\n  handleFormStatus,\r\n  fieldsLoader\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimInformation' })();\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [initialLoad, setInitialLoad] = useState(false);\r\n  const [accExpandStatus, setAccExpandStatus] = useState(true);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const claimForm = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n  });\r\n  const { handleSubmit, setValue, control, errors, watch } = claimForm;\r\n\r\n  const insuredWatch = Boolean(watch('insured'));\r\n  const clientWatch = Boolean(watch('client'));\r\n  const countryCodeWatch = Boolean(watch('countryCode'));\r\n  const certificateNumberWatch = Boolean(watch('certificateNumber'));\r\n  const certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\r\n  const certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\r\n  const originalCurrencyCodeWatch = Boolean(watch('originalCurrencyCode'));\r\n  const settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\r\n  const interestWatch = Boolean(watch('interest'));\r\n  const underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\r\n\r\n  const formWatcher = () => {\r\n    return (\r\n      insuredWatch ||\r\n      clientWatch ||\r\n      countryCodeWatch ||\r\n      certificateNumberWatch ||\r\n      certificateInceptionDateWatch ||\r\n      certificateExpiryDateWatch ||\r\n      originalCurrencyCodeWatch ||\r\n      settlementCurrencyCodeWatch ||\r\n      interestWatch ||\r\n      underWritingGroupsWatch\r\n    );\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    if ((selectedPolicyRender !== '' && initialLoad) || (initialLoad && validation)) {\r\n      handleFormStatus();\r\n    }\r\n  };\r\n\r\n  if (formWatcher() !== isEdit) {\r\n    setIsEdit(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit && initialLoad) {\r\n      saveHandler();\r\n    } else {\r\n      const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n      if (formState[index]['formEditedStatus']) {\r\n        formState[index]['formEditedStatus'] = false;\r\n        formState[index]['isSubmitted'] = true;\r\n        setFormEditedStatus(formState);\r\n      }\r\n      setInitialLoad(true);\r\n    }\r\n  }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (saveStatus && !isFormsEdited[index]?.formEditedStatus && initialLoad) {\r\n      handleSubmit(postSaveHandler)();\r\n    } else if (saveStatus && isFormsEdited[index]?.formEditedStatus && validation) {\r\n      handleSubmit(postEditSaveHandler)();\r\n    }\r\n    setValidation(true);\r\n  }, [saveStatus]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (underWritingGroups) {\r\n      if (underWritingGroups.percentageOfSelected) {\r\n        setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n        saveHandler();\r\n      } else {\r\n        setValue('order', '100');\r\n      }\r\n    }\r\n  }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isBordereauFlag) {\r\n      setValue('certificateNumber', fields[9].value);\r\n      setValue('certificateInceptionDate', fields[10].value);\r\n      setValue('certificateExpiryDate', fields[11].value);\r\n    }\r\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Typography variant=\"body2\" className={classes.typoTitle}>\r\n        {policyData?.policyNumber}\r\n      </Typography>\r\n      <div className={classes.wrapper}>\r\n        <Layout main padding>\r\n          <Box m={3}>\r\n            <Grid container spacing={3} direction=\"row\">\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey}>\r\n                  {fieldsLoader.isInsuredLoading ?\r\n                    <Skeleton height={70} animation=\"wave\" displayNumber={1} /> :\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'insured', control)}\r\n                      error={errors.insured}\r\n                      callback={initialLoad && saveHandler}\r\n                      handleUpdate={(id, value) => {\r\n                        setValue(id, value);\r\n                      }}\r\n                    />\r\n                  }\r\n                </FormGrid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey || isEdit}>\r\n                  {fieldsLoader.isPoliciesClientsLoading ?\r\n\r\n                    <Skeleton height={70} animation=\"wave\" displayNumber={1} /> :\r\n\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'client', control)}\r\n                      error={errors.client}\r\n                      callback={initialLoad && saveHandler}\r\n                      handleUpdate={(id, value) => {\r\n                        setValue(id, value);\r\n                      }}\r\n                    />}\r\n\r\n                </FormGrid>\r\n              </Grid>\r\n\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey || isEdit}>\r\n                  <FormAutocompleteMui\r\n                    {...utils.form.getFieldProps(fields, 'countryCode', control)}\r\n                    error={errors.countryCode}\r\n                    callback={initialLoad && saveHandler}\r\n                    handleUpdate={(id, value) => {\r\n                      setValue(id, value);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </Grid>\r\n            </Grid>\r\n\r\n            {isBordereauFlag && (\r\n              <Grid container spacing={3} direction=\"row\">\r\n                <Grid item xs={4}>\r\n                  <FormLabel\r\n                    nestedClasses={{ root: classes.formLabel }}\r\n                    label={`${utils.string.t('claims.claimInformation.certificateNumber')}`}\r\n                    align=\"right\"\r\n                  />\r\n                  <FormGrid item>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'certificateNumber', control)} error={errors.certificateNumber} />\r\n                  </FormGrid>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <FormLabel\r\n                    nestedClasses={{ root: classes.formLabel }}\r\n                    label={`${utils.string.t('claims.claimInformation.certificateInceptionDate')}`}\r\n                    align=\"right\"\r\n                  />\r\n                  <FormGrid item>\r\n                    <FormDate\r\n                      {...utils.form.getFieldProps(fields, 'certificateInceptionDate', control)}\r\n                      error={errors.certificateInceptionDate}\r\n                    />\r\n                  </FormGrid>\r\n                </Grid>\r\n\r\n                <Grid item xs={4}>\r\n                  <FormLabel\r\n                    nestedClasses={{ root: classes.formLabel }}\r\n                    label={`${utils.string.t('claims.claimInformation.certificateExpiryDate')}`}\r\n                    align=\"right\"\r\n                  />\r\n                  <FormGrid item>\r\n                    <FormDate\r\n                      {...utils.form.getFieldProps(fields, 'certificateExpiryDate', control)}\r\n                      error={errors.certificateExpiryDate}\r\n                    />\r\n                  </FormGrid>\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            <Grid container spacing={3} direction=\"row\">\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey}>\r\n                  <FormAutocompleteMui\r\n                    {...utils.form.getFieldProps(fields, 'originalCurrencyCode', control)}\r\n                    error={errors.settlementCurrencyCode}\r\n                    callback={initialLoad && saveHandler}\r\n                    handleUpdate={(id, value) => {\r\n                      setValue(id, value);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey}>\r\n                  <FormAutocompleteMui\r\n                    {...utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)}\r\n                    error={errors.settlementCurrencyCode}\r\n                    callback={initialLoad && saveHandler}\r\n                    handleUpdate={(id, value) => {\r\n                      setValue(id, value);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </Grid>\r\n              <Grid item xs={4}>\r\n                <FormGrid item key={uwResetKey}>\r\n                  {\r\n                    fieldsLoader.isInterestLoading ?\r\n                      <Skeleton height={70} animation=\"wave\" displayNumber={1} /> :\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(fields, 'interest', control)}\r\n                        error={errors.interest}\r\n                        callback={initialLoad && saveHandler}\r\n                        handleUpdate={(id, value) => {\r\n                          setValue(id, value);\r\n                        }}\r\n                      />\r\n                  }\r\n                </FormGrid>\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n          <Box>\r\n            <Accordion\r\n              expanded={accExpandStatus}\r\n              onChange={() => setAccExpandStatus(!accExpandStatus)}\r\n              className={classes.accordionLine}\r\n              title={\r\n                <Typography className={classes.title} variant=\"body2\">\r\n                  {' '}\r\n                  {utils.string.t('claims.underWritingGroups.title')}\r\n                </Typography>\r\n              }\r\n            >\r\n              <Grid container direction=\"row\">\r\n                <Grid item xs={12}>\r\n                  <ClaimsUnderwritingGroups\r\n                    fields={fields}\r\n                    claimForm={claimForm}\r\n                    uwResetKey={uwResetKey}\r\n                    hasClaimRef={hasClaimRef}\r\n                    selectedPolicyRender={selectedPolicyRender}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <ClaimsMovementType\r\n                    fields={fields}\r\n                    claimForm={claimForm}\r\n                    underWritingGroups={underWritingGroups}\r\n                    enforceValueSet={true}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Accordion>\r\n          </Box>\r\n        </Layout>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}