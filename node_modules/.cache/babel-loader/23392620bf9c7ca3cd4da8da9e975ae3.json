{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var bulkToggleSelectMarketingMarket = function bulkToggleSelectMarketingMarket() {\n  return {\n    type: 'BULK_SELECT_TOGGLE_MARKETING_MARKETS'\n  };\n};\nexport var bulkPlacementMarketingMarketSelect = function bulkPlacementMarketingMarketSelect(selected, marketIdList) {\n  return {\n    type: 'PLACEMENT_BULK_TOGGLE_MARKETING_MARKETS',\n    payload: {\n      selected: selected,\n      marketIdList: marketIdList\n    }\n  };\n};\nexport var bulkMarketingMarketsClearAll = function bulkMarketingMarketsClearAll() {\n  return {\n    type: 'PLACEMENT_BULK_CLEAR_ALL_MARKETING_MARKETS'\n  };\n};\nexport var disableBulkToggleSelectMarketingMarket = function disableBulkToggleSelectMarketingMarket() {\n  return {\n    type: 'BULK_SELECT_TOGGLE_DISABLE_MARKETING_MARKETS'\n  };\n};\nexport var bulkeletePlacementMarket = function bulkeletePlacementMarket(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var action = 'delete';\n    var bulkItems = get(getState(), 'placement.bulkItemsMarketingMarkets.marketingMarkets', []);\n    var marketIdList = bulkItems.map(function (marketId) {\n      return marketId;\n    });\n    var defaultError = {\n      file: 'stores/placement.actions.deletePlacementMarket',\n      message: 'Data missing for DELETE request'\n    };\n    dispatch(bulkDeletePlacementMarketRequest(formData));\n    dispatch(addLoader('deletePlacementMarket'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placementMarket/bulk/\".concat(action),\n      data: marketIdList\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json, true);\n    }).then(function () {\n      dispatch(bulkDeletePlacementMarketSuccess(marketIdList));\n      dispatch(enqueueNotification('notification.deletePlacementMarket.success', 'success'));\n      dispatch(bulkMarketingMarketsClearAll());\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementMarket'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API delete error (placement.deletePlacementMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(bulkDeletePlacementMarketFailure(err));\n      dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementMarket'));\n      return err;\n    });\n  };\n};\nexport var bulkDeletePlacementMarketRequest = function bulkDeletePlacementMarketRequest(data) {\n  return {\n    type: 'PLACEMENT_MARKET_BULK_DELETE_REQUEST',\n    payload: data\n  };\n};\nexport var bulkDeletePlacementMarketSuccess = function bulkDeletePlacementMarketSuccess(data) {\n  return {\n    type: 'PLACEMENT_MARKET_BULK_DELETE_SUCCESS',\n    payload: data\n  };\n};\nexport var bulkDeletePlacementMarketFailure = function bulkDeletePlacementMarketFailure(error) {\n  return {\n    type: 'PLACEMENT_MARKET_BULK_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.bulkdeletePlacementMarket.js"],"names":["get","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","bulkToggleSelectMarketingMarket","type","bulkPlacementMarketingMarketSelect","selected","marketIdList","payload","bulkMarketingMarketsClearAll","disableBulkToggleSelectMarketingMarket","bulkeletePlacementMarket","formData","dispatch","getState","auth","user","endpoint","config","vars","action","bulkItems","map","marketId","defaultError","file","message","bulkDeletePlacementMarketRequest","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","bulkDeletePlacementMarketSuccess","catch","err","errorParams","handleError","handleUnauthorized","bulkDeletePlacementMarketFailure","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const bulkToggleSelectMarketingMarket = () => {\r\n  return {\r\n    type: 'BULK_SELECT_TOGGLE_MARKETING_MARKETS',\r\n  };\r\n};\r\nexport const bulkPlacementMarketingMarketSelect = (selected, marketIdList) => {\r\n  return {\r\n    type: 'PLACEMENT_BULK_TOGGLE_MARKETING_MARKETS',\r\n    payload: { selected, marketIdList },\r\n  };\r\n};\r\nexport const bulkMarketingMarketsClearAll = () => {\r\n  return {\r\n    type: 'PLACEMENT_BULK_CLEAR_ALL_MARKETING_MARKETS',\r\n  };\r\n};\r\nexport const disableBulkToggleSelectMarketingMarket = () => {\r\n  return {\r\n    type: 'BULK_SELECT_TOGGLE_DISABLE_MARKETING_MARKETS',\r\n  };\r\n};\r\n\r\nexport const bulkeletePlacementMarket = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n  const action = 'delete';\r\n  const bulkItems = get(getState(), 'placement.bulkItemsMarketingMarkets.marketingMarkets', []);\r\n  const marketIdList = bulkItems.map((marketId) => marketId);\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.deletePlacementMarket',\r\n    message: 'Data missing for DELETE request',\r\n  };\r\n\r\n  dispatch(bulkDeletePlacementMarketRequest(formData));\r\n  dispatch(addLoader('deletePlacementMarket'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placementMarket/bulk/${action}`,\r\n      data: marketIdList,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json, true))\r\n    .then(() => {\r\n      dispatch(bulkDeletePlacementMarketSuccess(marketIdList));\r\n      dispatch(enqueueNotification('notification.deletePlacementMarket.success', 'success'));\r\n      dispatch(bulkMarketingMarketsClearAll());\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementMarket'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API delete error (placement.deletePlacementMarket)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(bulkDeletePlacementMarketFailure(err));\r\n      dispatch(enqueueNotification('notification.deletePlacementMarket.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementMarket'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const bulkDeletePlacementMarketRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_BULK_DELETE_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const bulkDeletePlacementMarketSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_BULK_DELETE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const bulkDeletePlacementMarketFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_BULK_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}