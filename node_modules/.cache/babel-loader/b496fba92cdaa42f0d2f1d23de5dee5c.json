{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getComplexityPoliciesFlagged = function getComplexityPoliciesFlagged(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getComplexityPoliciesFlagged'\n    };\n    dispatch(getComplexityPoliciesFlaggedRequest());\n    dispatch(addLoader('getComplexityPoliciesFlagged'));\n    var prevDirection = get(claims, 'complexityPoliciesFlagged.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'complexityPoliciesFlagged.query') || null;\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'complexityPoliciesFlagged.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var data = {\n      direction: newDirection,\n      page: params && params.page || 0,\n      pageSize: params && params.size || claims.complexityPoliciesFlagged.pageSize,\n      search: newQuery,\n      sortBy: newSortBy,\n      filterLossClaimsCriteriaDTO: null\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/claims-triage/complex/policy/main/search',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getComplexityPoliciesFlaggedSuccess(data));\n      dispatch(removeLoader('getComplexityPoliciesFlagged'));\n      return data;\n    }).catch(function (err) {\n      dispatch(getComplexityPoliciesFlaggedFailure(err, defaultError));\n      dispatch(removeLoader('getComplexityPoliciesFlagged'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getComplexityPoliciesFlaggedRequest = function getComplexityPoliciesFlaggedRequest(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getComplexityPoliciesFlaggedSuccess = function getComplexityPoliciesFlaggedSuccess(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_SUCCESS',\n    payload: {\n      items: data.data,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getComplexityPoliciesFlaggedFailure = function getComplexityPoliciesFlaggedFailure(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getComplexityPoliciesFlagged.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getComplexityPoliciesFlagged","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","getComplexityPoliciesFlaggedRequest","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","data","page","pageSize","size","complexityPoliciesFlagged","search","filterLossClaimsCriteriaDTO","api","post","token","accessToken","claimService","path","then","response","handleResponse","getComplexityPoliciesFlaggedSuccess","catch","err","getComplexityPoliciesFlaggedFailure","handleUnauthorized","type","payload","items","pagination"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getComplexityPoliciesFlagged = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}, claims} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getComplexityPoliciesFlagged',\r\n  };\r\n\r\n  dispatch(getComplexityPoliciesFlaggedRequest());\r\n  dispatch(addLoader('getComplexityPoliciesFlagged'));\r\n\r\n  const prevDirection = get(claims, 'complexityPoliciesFlagged.sort.direction') || '';\r\n  const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n  const prevQuery = get(claims, 'complexityPoliciesFlagged.query') || null;\r\n  const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n  const prevSortBy = get(claims, 'complexityPoliciesFlagged.sort.by') || '';\r\n  const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n  const data = {\r\n    direction: newDirection,\r\n    page: (params && params.page) || 0,\r\n    pageSize: (params && params.size) || claims.complexityPoliciesFlagged.pageSize,\r\n    search: newQuery,\r\n    sortBy: newSortBy,\r\n    filterLossClaimsCriteriaDTO: null,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/claims-triage/complex/policy/main/search',\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getComplexityPoliciesFlaggedSuccess(data));\r\n      dispatch(removeLoader('getComplexityPoliciesFlagged'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getComplexityPoliciesFlaggedFailure(err, defaultError));\r\n      dispatch(removeLoader('getComplexityPoliciesFlagged'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getComplexityPoliciesFlaggedRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getComplexityPoliciesFlaggedSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getComplexityPoliciesFlaggedFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_FLAGGED_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}