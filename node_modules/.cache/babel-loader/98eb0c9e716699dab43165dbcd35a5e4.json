{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport * as constants from 'consts'; // app\n\nimport * as utils from 'utils';\nimport { createSelector } from 'reselect';\nimport { firstBy } from 'thenby';\nimport get from 'lodash/get';\nexport var selectRefDataLoaded = function selectRefDataLoaded(state) {\n  return get(state, 'referenceData.loaded') || false;\n};\nexport var selectRefDataLoadedExtended = function selectRefDataLoadedExtended(state) {\n  return get(state, 'referenceData.loadedExtended') || false;\n};\nexport var selectRefDataBusinessTypes = function selectRefDataBusinessTypes(state) {\n  return get(state, 'referenceData.businessTypes') || [];\n};\nexport var selectRefDataCapacityTypes = function selectRefDataCapacityTypes(state) {\n  return get(state, 'referenceData.capacityTypes') || [];\n};\nexport var selectRefDataCurrencies = function selectRefDataCurrencies(state) {\n  return get(state, 'referenceData.currencies') || [];\n};\nexport var selectRefDataDepartments = function selectRefDataDepartments(state) {\n  return get(state, 'referenceData.departments') || [];\n};\nexport var selectRefDataUnderwriters = function selectRefDataUnderwriters(state) {\n  return get(state, 'referenceData.underwriters') || [];\n};\nexport var selectRefDataMarkets = function selectRefDataMarkets(state) {\n  return get(state, 'referenceData.markets') || [];\n};\nexport var selectRefDataMarketTypes = function selectRefDataMarketTypes(state) {\n  return get(state, 'referenceData.marketTypes') || [];\n};\nexport var selectRefDataClients = function selectRefDataClients(state) {\n  return get(state, 'referenceData.clients') || [];\n};\nexport var selectRefDataInsureds = function selectRefDataInsureds(state) {\n  return get(state, 'referenceData.insureds') || [];\n};\nexport var selectRefDataStatusesPlacement = function selectRefDataStatusesPlacement(state) {\n  return get(state, 'referenceData.statuses.placement') || [];\n};\nexport var selectRefDataStatusesPolicy = function selectRefDataStatusesPolicy(state) {\n  return get(state, 'referenceData.statuses.policy') || [];\n};\nexport var selectRefDataStatusesMarketQuote = function selectRefDataStatusesMarketQuote(state) {\n  return get(state, 'referenceData.statuses.policyMarketQuote') || [];\n};\nexport var selectRefDataNewRenewalBusinesses = function selectRefDataNewRenewalBusinesses(state) {\n  return get(state, 'referenceData.newRenewalBusinesses') || [];\n};\nexport var selectRefDataAccountStatuses = function selectRefDataAccountStatuses(state) {\n  return get(state, 'referenceData.statuses.account') || [];\n};\nexport var selectRefDataRationales = function selectRefDataRationales(state) {\n  return get(state, 'referenceData.rationales') || [];\n};\nexport var selectRefDataDeclinatures = function selectRefDataDeclinatures(state) {\n  return get(state, 'referenceData.declinatures') || [];\n};\nexport var selectRefDataXbInstances = function selectRefDataXbInstances(state) {\n  return get(state, 'referenceData.xbInstances') || [];\n};\nexport var selectRefDataNewRfiType = function selectRefDataNewRfiType(state) {\n  return get(state, 'referenceData.rfiTypes') || [];\n};\nexport var selectRefDataNewProcessType = function selectRefDataNewProcessType(state) {\n  return get(state, 'referenceData.processTypes') || [];\n};\nexport var selectRefDataNewDocumentTypes = function selectRefDataNewDocumentTypes(state) {\n  return get(state, 'referenceData.documentTypes') || [];\n};\nexport var selectRefDataNewDocumentTypeLookUp = function selectRefDataNewDocumentTypeLookUp(state) {\n  return get(state, 'referenceData.documentTypeLookUp') || [];\n};\nexport var selectRefDataNewCurrencyCode = function selectRefDataNewCurrencyCode(state) {\n  return get(state, 'referenceData.currencyCodes') || [];\n};\nexport var selectRefDataNewBusinessProcess = function selectRefDataNewBusinessProcess(state) {\n  return get(state, 'referenceData.businessProcesses') || [];\n};\nexport var selectRefDataNewBpmStage = function selectRefDataNewBpmStage(state) {\n  return get(state, 'referenceData.bpmStages') || [];\n};\nexport var selectRefDataNewBpmFlag = function selectRefDataNewBpmFlag(state) {\n  return get(state, 'referenceData.bpmFlags') || [];\n};\nexport var selectRefDataNewBordereauType = function selectRefDataNewBordereauType(state) {\n  return get(state, 'referenceData.bordereauType') || [];\n};\nexport var selectRefDataNewBordereauPolicyType = function selectRefDataNewBordereauPolicyType(state) {\n  return get(state, 'referenceData.bordereauPolicyType') || [];\n};\nexport var selectRefDataNewFacilityType = function selectRefDataNewFacilityType(state) {\n  return get(state, 'referenceData.facilityType') || [];\n};\nexport var selectRefDataQueryCodes = function selectRefDataQueryCodes(state) {\n  return get(state, 'referenceData.queryCodes') || [];\n};\nexport var selectRefDataResolutionCode = function selectRefDataResolutionCode(state) {\n  return get(state, 'referenceData.resolutionCode') || [];\n};\nexport var selectRefDataNewCountriesList = function selectRefDataNewCountriesList(state) {\n  return get(state, 'referenceData.countriesList') || [];\n};\nexport var selectRefDataCatCodesList = function selectRefDataCatCodesList(state) {\n  return get(state, 'referenceData.catCodes') || [];\n};\nexport var selectRefDataThirdPartyList = function selectRefDataThirdPartyList(state) {\n  return get(state, 'referenceData.thirdParty') || [];\n};\nexport var selectRefDataSettlementCurrency = function selectRefDataSettlementCurrency(state) {\n  return get(state, 'referenceData.settlementCurrency');\n};\nexport var selectRefDataBaseCurrency = function selectRefDataBaseCurrency(state) {\n  return get(state, 'referenceData.baseCurrency');\n};\nexport var selectRefDataXbInstancesDepartments = function selectRefDataXbInstancesDepartments(id) {\n  return createSelector(selectRefDataXbInstances, function (xbInstances) {\n    var xbInstance = xbInstances.find(function (xbi) {\n      return xbi.id === id;\n    });\n    return (xbInstance === null || xbInstance === void 0 ? void 0 : xbInstance.departments) || [];\n  });\n};\nexport var selectRefDataCountriesIso2 = function selectRefDataCountriesIso2(state) {\n  return utils.referenceData.countries.getOptionsIso2(get(state, 'referenceData.countries'));\n}; // private\n\nvar _userDeptId = function _userDeptId(state) {\n  return get(state, 'user.departmentSelected');\n}; // private\n\n\nvar _userDepartment = createSelector(_userDeptId, selectRefDataDepartments, function (departmentId, departments) {\n  if (!departmentId || !utils.generic.isValidArray(departments)) return;\n  return departments.find(function (dept) {\n    return departmentId === dept.id;\n  });\n});\n\nexport var selectRefDataDepartmentUsers = createSelector(_userDepartment, function (department) {\n  return department && department.users ? department.users : [];\n});\nexport var selectRefDataDepartmentBrokers = createSelector(selectRefDataDepartmentUsers, function (users) {\n  return users.filter(function (user) {\n    return user.role === constants.ROLE_BROKER;\n  });\n});\nexport var selectRefDataDepartmentById = function selectRefDataDepartmentById(id) {\n  return createSelector(selectRefDataDepartments, function (departments) {\n    return departments.find(function (dept) {\n      return dept.id === id;\n    });\n  });\n};\nexport var selectRefDataBusinessTypeById = function selectRefDataBusinessTypeById(deptId, businessTypeId) {\n  return createSelector(selectRefDataDepartments, function (departments) {\n    var department = departments.find(function (dept) {\n      return dept.id === deptId;\n    });\n\n    if (department && department.businessTypes) {\n      return department.businessTypes.find(function (bt) {\n        return bt.id === businessTypeId;\n      });\n    }\n\n    return null;\n  });\n};\nexport var selectRefDataStatusIdByCode = function selectRefDataStatusIdByCode(type, code) {\n  var statusArray;\n\n  switch (type) {\n    case 'market':\n      statusArray = selectRefDataStatusesMarketQuote;\n      break;\n\n    case 'policy':\n      statusArray = selectRefDataStatusesPolicy;\n      break;\n\n    case 'placement':\n      statusArray = selectRefDataStatusesPlacement;\n      break;\n\n    default:\n      statusArray = function statusArray() {\n        return [];\n      };\n\n      break;\n  }\n\n  return createSelector(statusArray, function (statuses) {\n    var status = statuses.find(function (status) {\n      return status.code === code;\n    });\n    return status && status.id;\n  });\n};\nexport var selectRefDataStatusKeyByCode = function selectRefDataStatusKeyByCode(type, code) {\n  var statusArray;\n\n  switch (type) {\n    case 'market':\n      statusArray = selectRefDataStatusesMarketQuote;\n      break;\n\n    case 'policy':\n      statusArray = selectRefDataStatusesPolicy;\n      break;\n\n    case 'placement':\n      statusArray = selectRefDataStatusesPlacement;\n      break;\n\n    default:\n      statusArray = function statusArray() {\n        return [];\n      };\n\n      break;\n  }\n\n  return createSelector(statusArray, function (statuses) {\n    var status = statuses.find(function (status) {\n      return status.code === code;\n    });\n    return status && status.code ? utils.string.replaceLowerCase(status.code) : undefined;\n  });\n};\nexport var selectRefDataStatusKeyById = function selectRefDataStatusKeyById(type, id) {\n  var statusArray;\n\n  switch (type) {\n    case 'market':\n      statusArray = selectRefDataStatusesMarketQuote;\n      break;\n\n    case 'policy':\n      statusArray = selectRefDataStatusesPolicy;\n      break;\n\n    case 'placement':\n      statusArray = selectRefDataStatusesPlacement;\n      break;\n\n    default:\n      statusArray = function statusArray() {\n        return [];\n      };\n\n      break;\n  }\n\n  return createSelector(statusArray, function (statuses) {\n    var status = statuses.find(function (status) {\n      return status.id === id;\n    });\n    return status && status.code ? utils.string.replaceLowerCase(status.code) : undefined;\n  });\n};\nexport var selectRefDataCurrencyById = function selectRefDataCurrencyById(id) {\n  return createSelector(selectRefDataCurrencies, function (currencies) {\n    return currencies.find(function (currency) {\n      return currency.id === id;\n    });\n  });\n};\nexport var selectFormattedAccountStatusList = createSelector(selectRefDataAccountStatuses, function (statusList) {\n  var mappings = {\n    live: 'success',\n    livee: 'success',\n    livef: 'success',\n    liveg: 'success',\n    runoff: 'alert',\n    longtermrunoff: 'alert',\n    restrictedc: 'alert',\n    restrictedd: 'alert',\n    restrictedh: 'alert',\n    restrictedj: 'alert',\n    restrictedk: 'alert',\n    closed: 'error',\n    closedp: 'error',\n    closedt: 'error',\n    donotuse: 'error',\n    liquidated: 'error',\n    provisional: 'alert'\n  };\n  var statusOrder = ['success', 'alert', 'error'];\n  var statusWithType = statusList.map(function (status) {\n    return {\n      id: status.id,\n      type: mappings[utils.string.replaceLowerCase(status.code, 'withDash')],\n      code: utils.string.replaceLowerCase(status.code, 'withDash')\n    };\n  });\n  return statusWithType.sort(function (a, b) {\n    return statusOrder.indexOf(a.type) - statusOrder.indexOf(b.type);\n  });\n});\n\nvar getDocumentTypes = function getDocumentTypes(docTypeSelector, context, source, docTypeSource) {\n  return createSelector(docTypeSelector, function (documentTypes) {\n    var _documentTypes$sort;\n\n    return documentTypes === null || documentTypes === void 0 ? void 0 : (_documentTypes$sort = documentTypes.sort(firstBy(utils.sort.array('lexical', 'documentTypeDescription')))) === null || _documentTypes$sort === void 0 ? void 0 : _documentTypes$sort.filter(function (type) {\n      var _type$sectionKey, _type$sourceID, _type$documentTypeSou;\n\n      return (type === null || type === void 0 ? void 0 : (_type$sectionKey = type.sectionKey) === null || _type$sectionKey === void 0 ? void 0 : _type$sectionKey.toLowerCase()) === (context === null || context === void 0 ? void 0 : context.toLowerCase()) && (type === null || type === void 0 ? void 0 : (_type$sourceID = type.sourceID) === null || _type$sourceID === void 0 ? void 0 : _type$sourceID.toString()) === (source === null || source === void 0 ? void 0 : source.toString()) && (docTypeSource ? (type === null || type === void 0 ? void 0 : (_type$documentTypeSou = type.documentTypeSource) === null || _type$documentTypeSou === void 0 ? void 0 : _type$documentTypeSou.toString()) === (docTypeSource === null || docTypeSource === void 0 ? void 0 : docTypeSource.toString()) : true);\n    });\n  });\n};\n\nexport var selectRefDataNewDocumentTypesByContextSource = function selectRefDataNewDocumentTypesByContextSource() {\n  var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  var docTypeSource = arguments.length > 2 ? arguments[2] : undefined;\n  return getDocumentTypes(selectRefDataNewDocumentTypes, context, source, docTypeSource);\n};\nexport var selectRefDataNewDocumentTypeLookUpByContextSource = function selectRefDataNewDocumentTypeLookUpByContextSource() {\n  var context = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n  var source = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 1;\n  return getDocumentTypes(selectRefDataNewDocumentTypeLookUp, context, source);\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/referenceData/referenceData.selectors.js"],"names":["constants","utils","createSelector","firstBy","get","selectRefDataLoaded","state","selectRefDataLoadedExtended","selectRefDataBusinessTypes","selectRefDataCapacityTypes","selectRefDataCurrencies","selectRefDataDepartments","selectRefDataUnderwriters","selectRefDataMarkets","selectRefDataMarketTypes","selectRefDataClients","selectRefDataInsureds","selectRefDataStatusesPlacement","selectRefDataStatusesPolicy","selectRefDataStatusesMarketQuote","selectRefDataNewRenewalBusinesses","selectRefDataAccountStatuses","selectRefDataRationales","selectRefDataDeclinatures","selectRefDataXbInstances","selectRefDataNewRfiType","selectRefDataNewProcessType","selectRefDataNewDocumentTypes","selectRefDataNewDocumentTypeLookUp","selectRefDataNewCurrencyCode","selectRefDataNewBusinessProcess","selectRefDataNewBpmStage","selectRefDataNewBpmFlag","selectRefDataNewBordereauType","selectRefDataNewBordereauPolicyType","selectRefDataNewFacilityType","selectRefDataQueryCodes","selectRefDataResolutionCode","selectRefDataNewCountriesList","selectRefDataCatCodesList","selectRefDataThirdPartyList","selectRefDataSettlementCurrency","selectRefDataBaseCurrency","selectRefDataXbInstancesDepartments","id","xbInstances","xbInstance","find","xbi","departments","selectRefDataCountriesIso2","referenceData","countries","getOptionsIso2","_userDeptId","_userDepartment","departmentId","generic","isValidArray","dept","selectRefDataDepartmentUsers","department","users","selectRefDataDepartmentBrokers","filter","user","role","ROLE_BROKER","selectRefDataDepartmentById","selectRefDataBusinessTypeById","deptId","businessTypeId","businessTypes","bt","selectRefDataStatusIdByCode","type","code","statusArray","statuses","status","selectRefDataStatusKeyByCode","string","replaceLowerCase","undefined","selectRefDataStatusKeyById","selectRefDataCurrencyById","currencies","currency","selectFormattedAccountStatusList","statusList","mappings","live","livee","livef","liveg","runoff","longtermrunoff","restrictedc","restrictedd","restrictedh","restrictedj","restrictedk","closed","closedp","closedt","donotuse","liquidated","provisional","statusOrder","statusWithType","map","sort","a","b","indexOf","getDocumentTypes","docTypeSelector","context","source","docTypeSource","documentTypes","array","sectionKey","toLowerCase","sourceID","toString","documentTypeSource","selectRefDataNewDocumentTypesByContextSource","selectRefDataNewDocumentTypeLookUpByContextSource"],"mappings":"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","sourcesContent":["import * as constants from 'consts';\r\n// app\r\nimport * as utils from 'utils';\r\n\r\nimport { createSelector } from 'reselect';\r\nimport { firstBy } from 'thenby';\r\nimport get from 'lodash/get';\r\n\r\nexport const selectRefDataLoaded = (state) => get(state, 'referenceData.loaded') || false;\r\nexport const selectRefDataLoadedExtended = (state) => get(state, 'referenceData.loadedExtended') || false;\r\nexport const selectRefDataBusinessTypes = (state) => get(state, 'referenceData.businessTypes') || [];\r\nexport const selectRefDataCapacityTypes = (state) => get(state, 'referenceData.capacityTypes') || [];\r\nexport const selectRefDataCurrencies = (state) => get(state, 'referenceData.currencies') || [];\r\nexport const selectRefDataDepartments = (state) => get(state, 'referenceData.departments') || [];\r\nexport const selectRefDataUnderwriters = (state) => get(state, 'referenceData.underwriters') || [];\r\nexport const selectRefDataMarkets = (state) => get(state, 'referenceData.markets') || [];\r\nexport const selectRefDataMarketTypes = (state) => get(state, 'referenceData.marketTypes') || [];\r\nexport const selectRefDataClients = (state) => get(state, 'referenceData.clients') || [];\r\nexport const selectRefDataInsureds = (state) => get(state, 'referenceData.insureds') || [];\r\nexport const selectRefDataStatusesPlacement = (state) => get(state, 'referenceData.statuses.placement') || [];\r\nexport const selectRefDataStatusesPolicy = (state) => get(state, 'referenceData.statuses.policy') || [];\r\nexport const selectRefDataStatusesMarketQuote = (state) => get(state, 'referenceData.statuses.policyMarketQuote') || [];\r\nexport const selectRefDataNewRenewalBusinesses = (state) => get(state, 'referenceData.newRenewalBusinesses') || [];\r\nexport const selectRefDataAccountStatuses = (state) => get(state, 'referenceData.statuses.account') || [];\r\nexport const selectRefDataRationales = (state) => get(state, 'referenceData.rationales') || [];\r\nexport const selectRefDataDeclinatures = (state) => get(state, 'referenceData.declinatures') || [];\r\nexport const selectRefDataXbInstances = (state) => get(state, 'referenceData.xbInstances') || [];\r\nexport const selectRefDataNewRfiType = (state) => get(state, 'referenceData.rfiTypes') || [];\r\nexport const selectRefDataNewProcessType = (state) => get(state, 'referenceData.processTypes') || [];\r\nexport const selectRefDataNewDocumentTypes = (state) => get(state, 'referenceData.documentTypes') || [];\r\nexport const selectRefDataNewDocumentTypeLookUp = (state) => get(state, 'referenceData.documentTypeLookUp') || [];\r\nexport const selectRefDataNewCurrencyCode = (state) => get(state, 'referenceData.currencyCodes') || [];\r\nexport const selectRefDataNewBusinessProcess = (state) => get(state, 'referenceData.businessProcesses') || [];\r\nexport const selectRefDataNewBpmStage = (state) => get(state, 'referenceData.bpmStages') || [];\r\nexport const selectRefDataNewBpmFlag = (state) => get(state, 'referenceData.bpmFlags') || [];\r\nexport const selectRefDataNewBordereauType = (state) => get(state, 'referenceData.bordereauType') || [];\r\nexport const selectRefDataNewBordereauPolicyType = (state) => get(state, 'referenceData.bordereauPolicyType') || [];\r\nexport const selectRefDataNewFacilityType = (state) => get(state, 'referenceData.facilityType') || [];\r\nexport const selectRefDataQueryCodes = (state) => get(state, 'referenceData.queryCodes') || [];\r\nexport const selectRefDataResolutionCode = (state) => get(state, 'referenceData.resolutionCode') || [];\r\nexport const selectRefDataNewCountriesList = (state) => get(state, 'referenceData.countriesList') || [];\r\nexport const selectRefDataCatCodesList = (state) => get(state, 'referenceData.catCodes') || [];\r\nexport const selectRefDataThirdPartyList = (state) => get(state, 'referenceData.thirdParty') || [];\r\nexport const selectRefDataSettlementCurrency = (state) => get(state, 'referenceData.settlementCurrency');\r\nexport const selectRefDataBaseCurrency = (state) => get(state, 'referenceData.baseCurrency');\r\n\r\nexport const selectRefDataXbInstancesDepartments = (id) => {\r\n  return createSelector(selectRefDataXbInstances, (xbInstances) => {\r\n    const xbInstance = xbInstances.find((xbi) => {\r\n      return xbi.id === id;\r\n    });\r\n\r\n    return xbInstance?.departments || [];\r\n  });\r\n};\r\n\r\nexport const selectRefDataCountriesIso2 = (state) => {\r\n  return utils.referenceData.countries.getOptionsIso2(get(state, 'referenceData.countries'));\r\n};\r\n\r\n// private\r\nconst _userDeptId = (state) => get(state, 'user.departmentSelected');\r\n\r\n// private\r\nconst _userDepartment = createSelector(_userDeptId, selectRefDataDepartments, (departmentId, departments) => {\r\n  if (!departmentId || !utils.generic.isValidArray(departments)) return;\r\n  return departments.find((dept) => departmentId === dept.id);\r\n});\r\n\r\nexport const selectRefDataDepartmentUsers = createSelector(_userDepartment, (department) => {\r\n  return department && department.users ? department.users : [];\r\n});\r\n\r\nexport const selectRefDataDepartmentBrokers = createSelector(selectRefDataDepartmentUsers, (users) => {\r\n  return users.filter((user) => user.role === constants.ROLE_BROKER);\r\n});\r\n\r\nexport const selectRefDataDepartmentById = (id) => {\r\n  return createSelector(selectRefDataDepartments, (departments) => {\r\n    return departments.find((dept) => {\r\n      return dept.id === id;\r\n    });\r\n  });\r\n};\r\n\r\nexport const selectRefDataBusinessTypeById = (deptId, businessTypeId) => {\r\n  return createSelector(selectRefDataDepartments, (departments) => {\r\n    const department = departments.find((dept) => {\r\n      return dept.id === deptId;\r\n    });\r\n\r\n    if (department && department.businessTypes) {\r\n      return department.businessTypes.find((bt) => bt.id === businessTypeId);\r\n    }\r\n\r\n    return null;\r\n  });\r\n};\r\n\r\nexport const selectRefDataStatusIdByCode = (type, code) => {\r\n  let statusArray;\r\n\r\n  switch (type) {\r\n    case 'market':\r\n      statusArray = selectRefDataStatusesMarketQuote;\r\n      break;\r\n    case 'policy':\r\n      statusArray = selectRefDataStatusesPolicy;\r\n      break;\r\n    case 'placement':\r\n      statusArray = selectRefDataStatusesPlacement;\r\n      break;\r\n    default:\r\n      statusArray = () => [];\r\n      break;\r\n  }\r\n\r\n  return createSelector(statusArray, (statuses) => {\r\n    const status = statuses.find((status) => {\r\n      return status.code === code;\r\n    });\r\n\r\n    return status && status.id;\r\n  });\r\n};\r\n\r\nexport const selectRefDataStatusKeyByCode = (type, code) => {\r\n  let statusArray;\r\n\r\n  switch (type) {\r\n    case 'market':\r\n      statusArray = selectRefDataStatusesMarketQuote;\r\n      break;\r\n    case 'policy':\r\n      statusArray = selectRefDataStatusesPolicy;\r\n      break;\r\n    case 'placement':\r\n      statusArray = selectRefDataStatusesPlacement;\r\n      break;\r\n    default:\r\n      statusArray = () => [];\r\n      break;\r\n  }\r\n\r\n  return createSelector(statusArray, (statuses) => {\r\n    const status = statuses.find((status) => {\r\n      return status.code === code;\r\n    });\r\n\r\n    return status && status.code ? utils.string.replaceLowerCase(status.code) : undefined;\r\n  });\r\n};\r\n\r\nexport const selectRefDataStatusKeyById = (type, id) => {\r\n  let statusArray;\r\n\r\n  switch (type) {\r\n    case 'market':\r\n      statusArray = selectRefDataStatusesMarketQuote;\r\n      break;\r\n    case 'policy':\r\n      statusArray = selectRefDataStatusesPolicy;\r\n      break;\r\n    case 'placement':\r\n      statusArray = selectRefDataStatusesPlacement;\r\n      break;\r\n    default:\r\n      statusArray = () => [];\r\n      break;\r\n  }\r\n\r\n  return createSelector(statusArray, (statuses) => {\r\n    const status = statuses.find((status) => {\r\n      return status.id === id;\r\n    });\r\n\r\n    return status && status.code ? utils.string.replaceLowerCase(status.code) : undefined;\r\n  });\r\n};\r\n\r\nexport const selectRefDataCurrencyById = (id) => {\r\n  return createSelector(selectRefDataCurrencies, (currencies) => {\r\n    return currencies.find((currency) => {\r\n      return currency.id === id;\r\n    });\r\n  });\r\n};\r\n\r\nexport const selectFormattedAccountStatusList = createSelector(selectRefDataAccountStatuses, (statusList) => {\r\n  const mappings = {\r\n    live: 'success',\r\n    livee: 'success',\r\n    livef: 'success',\r\n    liveg: 'success',\r\n    runoff: 'alert',\r\n    longtermrunoff: 'alert',\r\n    restrictedc: 'alert',\r\n    restrictedd: 'alert',\r\n    restrictedh: 'alert',\r\n    restrictedj: 'alert',\r\n    restrictedk: 'alert',\r\n    closed: 'error',\r\n    closedp: 'error',\r\n    closedt: 'error',\r\n    donotuse: 'error',\r\n    liquidated: 'error',\r\n    provisional: 'alert',\r\n  };\r\n  const statusOrder = ['success', 'alert', 'error'];\r\n  const statusWithType = statusList.map((status) => ({\r\n    id: status.id,\r\n    type: mappings[utils.string.replaceLowerCase(status.code, 'withDash')],\r\n    code: utils.string.replaceLowerCase(status.code, 'withDash'),\r\n  }));\r\n  return statusWithType.sort((a, b) => statusOrder.indexOf(a.type) - statusOrder.indexOf(b.type));\r\n});\r\n\r\nconst getDocumentTypes = (docTypeSelector, context, source, docTypeSource) => {\r\n  return createSelector(docTypeSelector, (documentTypes) =>\r\n    documentTypes\r\n      ?.sort(firstBy(utils.sort.array('lexical', 'documentTypeDescription')))\r\n      ?.filter(\r\n        (type) =>\r\n          type?.sectionKey?.toLowerCase() === context?.toLowerCase() &&\r\n          type?.sourceID?.toString() === source?.toString() &&\r\n          (docTypeSource ? type?.documentTypeSource?.toString() === docTypeSource?.toString() : true)\r\n      )\r\n  );\r\n};\r\n\r\nexport const selectRefDataNewDocumentTypesByContextSource = (context = '', source = 1, docTypeSource) =>\r\n  getDocumentTypes(selectRefDataNewDocumentTypes, context, source, docTypeSource);\r\n\r\nexport const selectRefDataNewDocumentTypeLookUpByContextSource = (context = '', source = 1) =>\r\n  getDocumentTypes(selectRefDataNewDocumentTypeLookUp, context, source);\r\n"]},"metadata":{},"sourceType":"module"}