{"ast":null,"code":"import { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getSettlementCurrency = function getSettlementCurrency() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getSettlementCurrency'\n    };\n    dispatch(getSettlementCurrencyRequest());\n    dispatch(addLoader('getSettlementCurrency'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/gui/settlement-currency'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getSettlementCurrencySuccess(data.data));\n      dispatch(removeLoader('getSettlementCurrency'));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getSettlementCurrencyFailure(err, defaultError));\n      dispatch(removeLoader('getSettlementCurrency'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getSettlementCurrencyRequest = function getSettlementCurrencyRequest(data) {\n  return {\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getSettlementCurrencySuccess = function getSettlementCurrencySuccess(data) {\n  return {\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getSettlementCurrencyFailure = function getSettlementCurrencyFailure(data) {\n  return {\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getSettlementCurrency.js"],"names":["addLoader","authLogout","removeLoader","utils","getSettlementCurrency","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getSettlementCurrencyRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","data","getSettlementCurrencySuccess","err","getSettlementCurrencyFailure","handleUnauthorized","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACjE;AADiE,oBAERA,QAAQ,EAFA;AAAA,QAEjDC,IAFiD,aAEzDC,IAFyD,CAEjDD,IAFiD;AAAA,QAEvBE,QAFuB,aAEzCC,MAFyC,CAE/BC,IAF+B,CAEvBF,QAFuB;;AAIjE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,4BAA4B,EAA7B,CAAR;AACAT,IAAAA,QAAQ,CAACL,SAAS,CAAC,uBAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACY,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,4BAA4B,CAACD,IAAI,CAACA,IAAN,CAA7B,CAAR;AACAnB,MAAAA,QAAQ,CAACH,YAAY,CAAC,uBAAD,CAAb,CAAR;AACA,aAAOsB,IAAI,CAACA,IAAZ;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACdrB,MAAAA,QAAQ,CAACsB,4BAA4B,CAACD,GAAD,EAAMd,YAAN,CAA7B,CAAR;AACAP,MAAAA,QAAQ,CAACH,YAAY,CAAC,uBAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACY,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCrB,QAAlC,EAA4CJ,UAA5C;AACA,aAAOyB,GAAP;AACD,KAjBI,CAAP;AAkBD,GA7BoC;AAAA,CAA9B;AA+BP,OAAO,IAAMZ,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACU,IAAD,EAAU;AACpD,SAAO;AACLK,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACD,IAAD,EAAU;AACpD,SAAO;AACLK,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACH,IAAD,EAAU;AACpD,SAAO;AACLK,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getSettlementCurrency = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getSettlementCurrency',\r\n  };\r\n\r\n  dispatch(getSettlementCurrencyRequest());\r\n  dispatch(addLoader('getSettlementCurrency'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/gui/settlement-currency',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getSettlementCurrencySuccess(data.data));\r\n      dispatch(removeLoader('getSettlementCurrency'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getSettlementCurrencyFailure(err, defaultError));\r\n      dispatch(removeLoader('getSettlementCurrency'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getSettlementCurrencyRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getSettlementCurrencySuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getSettlementCurrencyFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SETTLEMENT_CURRENCY_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}