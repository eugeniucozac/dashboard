{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsRiskRefTabTable\\\\ProcessingInstructionsRiskRefTabTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport ProcessingInstructionsRiskRefTabTableView from './ProcessingInstructionsRiskRefTabTable.view';\nimport { showModal, selectUser, setSelectedRiskRef, resetSelectedRiskRef, getRiskReferenceDocumentsCount, getRiskReferencesDocumentsCountList, getIsRiskReferenceDocumentCountLoading, updateReferenceDocumentCountLoading } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsRiskRefTabTable.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  documentTypeKey: PropTypes.string.isRequired\n};\nexport default function ProcessingInstructionsRiskRefTabTable(_ref) {\n  _s();\n\n  var instruction = _ref.instruction,\n      documentTypeKey = _ref.documentTypeKey;\n  var dispatch = useDispatch();\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {};\n  var user = useSelector(selectUser);\n  var riskReferencesDocumentsCountList = useSelector(getRiskReferencesDocumentsCountList);\n  var isRiskReferenceDocumentCountLoading = useSelector(getIsRiskReferenceDocumentCountLoading);\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFaBorderProcessType = isBordereau || isFeeAndAmendment;\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var userHasManageDocumentsPermission = utils.app.access.feature('processingInstructions.manageDocuments', ['create', 'update', 'delete'], user);\n  var isDocumentsEditable = userHasManageDocumentsPermission && (isDraft || isRejectedDraft || isReopened);\n  var i18nPath = 'processingInstructions.checklist.tabs.riskRefs.table';\n  var columns = [{\n    id: 'isLead',\n    label: utils.string.t(i18nPath + '.lead')\n  }, {\n    id: 'riskRef',\n    label: utils.string.t(i18nPath + '.riskRef')\n  }, {\n    id: 'insured',\n    label: utils.string.t(i18nPath + '.insured')\n  }, {\n    id: 'yoa',\n    label: utils.string.t(i18nPath + '.yoa')\n  }, {\n    id: 'gxbInstance',\n    label: utils.string.t(i18nPath + '.gxbInstance')\n  }, {\n    id: 'client',\n    label: utils.string.t(i18nPath + '.client')\n  }, {\n    id: 'riskStatus',\n    label: utils.string.t(i18nPath + '.riskStatus')\n  }, {\n    id: 'riskDetails',\n    label: utils.string.t(i18nPath + '.riskDetails')\n  }].concat(_toConsumableArray(isEndorsement || isFeeAndAmendment ? [{\n    id: 'endorsementRef',\n    label: utils.string.t(i18nPath + '.endorsementRef')\n  }, {\n    id: 'endorsementNonPremium',\n    label: utils.string.t(i18nPath + '.nonPremium')\n  }] : []), [{\n    id: 'documentsCount',\n    label: utils.string.t(i18nPath + '.documentsCount')\n  }, {\n    id: 'manageDocuments',\n    label: utils.string.t(i18nPath + '.manageDocuments'),\n    menu: true\n  }]);\n\n  var getRiskReferenceDocumentCount = function getRiskReferenceDocumentCount() {\n    if (utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n      var _documents$riskRefere;\n\n      dispatch(updateReferenceDocumentCountLoading(true));\n      var referenceList = documents === null || documents === void 0 ? void 0 : (_documents$riskRefere = documents.riskReferences) === null || _documents$riskRefere === void 0 ? void 0 : _documents$riskRefere.map(function (refData) {\n        return {\n          endorsementId: refData.endorsementId,\n          endorsementNumber: refData.endorsementNumber,\n          riskRefId: refData.riskRefId,\n          xbInstanceId: refData.xbInstanceId,\n          xbPolicyId: refData.xbPolicyId\n        };\n      });\n      var documentTypeValue = isEndorsement ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription : isFaBorderProcessType ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue));\n    }\n  };\n\n  var manageSetting = function manageSetting(_ref2) {\n    var riskRef = _ref2.riskRef;\n    dispatch(setSelectedRiskRef(riskRef));\n    dispatch(showModal({\n      component: 'PI_MANAGE_DOCUMENTS',\n      props: {\n        title: utils.string.t('processingInstructions.manageDocuments.label') + ' - ' + riskRef.riskRefId,\n        fullWidth: true,\n        maxWidth: 'xl',\n        disableAutoFocus: true,\n        componentProps: {\n          riskRef: riskRef,\n          documentTypeKey: documentTypeKey,\n          isDocumentsEditable: isDocumentsEditable,\n          cancelHandler: function cancelHandler() {\n            dispatch(resetSelectedRiskRef());\n            getRiskReferenceDocumentCount();\n          }\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsRiskRefTabTableView, {\n    columns: columns,\n    documents: documents,\n    isFaBorderProcessType: isFaBorderProcessType,\n    isRiskReferenceDocumentCountLoading: isRiskReferenceDocumentCountLoading,\n    riskReferencesDocumentsCountList: riskReferencesDocumentsCountList,\n    selectedRefinementColumns: isEndorsement || isFeeAndAmendment,\n    handlers: {\n      manageSetting: manageSetting\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsRiskRefTabTable, \"cgY0VigF0hZCZBLRrHWdMCCErso=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsRiskRefTabTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsRiskRefTabTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsRiskRefTabTable/ProcessingInstructionsRiskRefTabTable.js"],"names":["React","useDispatch","useSelector","PropTypes","get","ProcessingInstructionsRiskRefTabTableView","showModal","selectUser","setSelectedRiskRef","resetSelectedRiskRef","getRiskReferenceDocumentsCount","getRiskReferencesDocumentsCountList","getIsRiskReferenceDocumentCountLoading","updateReferenceDocumentCountLoading","utils","constants","ProcessingInstructionsRiskRefTabTable","propTypes","instruction","object","isRequired","documentTypeKey","string","dispatch","documents","state","user","riskReferencesDocumentsCountList","isRiskReferenceDocumentCountLoading","isEndorsement","processingInstructions","processTypeId","isFeeAndAmendment","isBordereau","isFaBorderProcessType","isRejectedDraft","status","statusId","isReopened","isDraft","userHasManageDocumentsPermission","app","access","feature","isDocumentsEditable","i18nPath","columns","id","label","t","menu","getRiskReferenceDocumentCount","generic","isValidArray","riskReferences","referenceList","map","refData","endorsementId","endorsementNumber","riskRefId","xbInstanceId","xbPolicyId","documentTypeValue","PI_ENDORSEMENT_TYPE_DOCUMENT","documentTypeDescription","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","manageSetting","riskRef","component","props","title","fullWidth","maxWidth","disableAutoFocus","componentProps","cancelHandler"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport ProcessingInstructionsRiskRefTabTableView from './ProcessingInstructionsRiskRefTabTable.view';\r\nimport {\r\n  showModal,\r\n  selectUser,\r\n  setSelectedRiskRef,\r\n  resetSelectedRiskRef,\r\n  getRiskReferenceDocumentsCount,\r\n  getRiskReferencesDocumentsCountList,\r\n  getIsRiskReferenceDocumentCountLoading,\r\n  updateReferenceDocumentCountLoading,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nProcessingInstructionsRiskRefTabTable.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  documentTypeKey: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsRiskRefTabTable({ instruction, documentTypeKey }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n  const user = useSelector(selectUser);\r\n  const riskReferencesDocumentsCountList = useSelector(getRiskReferencesDocumentsCountList);\r\n  const isRiskReferenceDocumentCountLoading = useSelector(getIsRiskReferenceDocumentCountLoading);\r\n  \r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isFaBorderProcessType = isBordereau || isFeeAndAmendment;\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n\r\n  const userHasManageDocumentsPermission = utils.app.access.feature(\r\n    'processingInstructions.manageDocuments',\r\n    ['create', 'update', 'delete'],\r\n    user\r\n  );\r\n  const isDocumentsEditable = userHasManageDocumentsPermission && (isDraft || isRejectedDraft || isReopened);\r\n\r\n  const i18nPath = 'processingInstructions.checklist.tabs.riskRefs.table';\r\n\r\n  const columns = [\r\n    { id: 'isLead', label: utils.string.t(i18nPath + '.lead') },\r\n    { id: 'riskRef', label: utils.string.t(i18nPath + '.riskRef') },\r\n    { id: 'insured', label: utils.string.t(i18nPath + '.insured') },\r\n    { id: 'yoa', label: utils.string.t(i18nPath + '.yoa') },\r\n    { id: 'gxbInstance', label: utils.string.t(i18nPath + '.gxbInstance') },\r\n    { id: 'client', label: utils.string.t(i18nPath + '.client') },\r\n    { id: 'riskStatus', label: utils.string.t(i18nPath + '.riskStatus') },\r\n    { id: 'riskDetails', label: utils.string.t(i18nPath + '.riskDetails') },\r\n    ...(isEndorsement || isFeeAndAmendment\r\n      ? [\r\n          { id: 'endorsementRef', label: utils.string.t(i18nPath + '.endorsementRef') },\r\n          { id: 'endorsementNonPremium', label: utils.string.t(i18nPath + '.nonPremium') },\r\n        ]\r\n      : []),\r\n    { id: 'documentsCount', label: utils.string.t(i18nPath + '.documentsCount') },\r\n    { id: 'manageDocuments', label: utils.string.t(i18nPath + '.manageDocuments'), menu: true },\r\n  ];\r\n\r\n  const getRiskReferenceDocumentCount = () => {\r\n    if (utils.generic.isValidArray(documents?.riskReferences, true)) {\r\n      dispatch(updateReferenceDocumentCountLoading(true));\r\n      const referenceList = documents?.riskReferences?.map((refData) => {\r\n        return {\r\n          endorsementId: refData.endorsementId,\r\n          endorsementNumber: refData.endorsementNumber,\r\n          riskRefId: refData.riskRefId,\r\n          xbInstanceId: refData.xbInstanceId,\r\n          xbPolicyId: refData.xbPolicyId,\r\n        };\r\n      });\r\n      const documentTypeValue = isEndorsement\r\n        ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription\r\n        : isFaBorderProcessType\r\n        ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription\r\n        : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\r\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue));\r\n    }\r\n  };\r\n\r\n  const manageSetting = ({ riskRef }) => {\r\n    dispatch(setSelectedRiskRef(riskRef));\r\n    dispatch(\r\n      showModal({\r\n        component: 'PI_MANAGE_DOCUMENTS',\r\n        props: {\r\n          title: utils.string.t('processingInstructions.manageDocuments.label') + ' - ' + riskRef.riskRefId,\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            riskRef,\r\n            documentTypeKey,\r\n            isDocumentsEditable,\r\n            cancelHandler: () => {\r\n              dispatch(resetSelectedRiskRef());\r\n              getRiskReferenceDocumentCount();\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ProcessingInstructionsRiskRefTabTableView\r\n      columns={columns}\r\n      documents={documents}\r\n      isFaBorderProcessType={isFaBorderProcessType}\r\n      isRiskReferenceDocumentCountLoading={isRiskReferenceDocumentCountLoading}\r\n      riskReferencesDocumentsCountList={riskReferencesDocumentsCountList}\r\n      selectedRefinementColumns={isEndorsement || isFeeAndAmendment}\r\n      handlers={{\r\n        manageSetting,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}