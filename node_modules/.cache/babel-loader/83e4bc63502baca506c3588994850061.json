{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts';\nimport { postEditClaimDetailsInformation } from 'stores'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  lossQualifiers: PropTypes.object,\n  resetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool.isRequired,\n  claimsDocsList: PropTypes.array\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _watch, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      resetKey = _ref.resetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      claimsDocsList = _ref.claimsDocsList,\n      claimRefId = _ref.claimRefId,\n      claimData = _ref.claimData,\n      policyInformation = _ref.policyInformation,\n      index = _ref.index,\n      handleNext = _ref.handleNext,\n      handleSave = _ref.handleSave,\n      _handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var lossQualifierID = (_watch = watch('lossQualifierID')) === null || _watch === void 0 ? void 0 : _watch.id;\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleNext(index);\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  useEffect(function () {\n    if (lossQualifierID) {\n      var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n        return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n          return itr === item.name;\n        });\n      }).map(function (item) {\n        return item.id;\n      });\n      var isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\n      setDateValidation(!isRequired);\n    }\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      mb: 0,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.legendContainer,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.claimInformation.title'),\n            nestedClasses: {\n              root: classes.formLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef), \" | \").concat(policyInformation.policyRef, \" | \").concat(policyInformation.insured),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-claimsInformation\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.claimInformation.claimRef'),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (_ref2 = (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                  nestedClasses: {\n                    root: classes.claimRef\n                  },\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                  error: errors.toDate,\n                  muiComponentProps: {\n                    disabled: dateValidation,\n                    fullWidth: true,\n                    classes: {\n                      root: classes.datepicker\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                  error: errors.location\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 139,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 146,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 144,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                  error: errors.complexity\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                  error: errors.bordereauClaim,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 7,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                          error: errors.claimReceivedDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 5,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 170,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 169,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 165,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                      error: errors.toDate,\n                      muiComponentProps: {\n                        disabled: dateValidation,\n                        fullWidth: true,\n                        classes: {\n                          root: classes.datepicker\n                        }\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 176,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                      error: errors.fgunarrative\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 192,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 191,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), {}, {\n                      error: errors.beAdjuster\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 196,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 195,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                      error: errors.rfiResponse\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 202,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 201,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                      error: errors.bordereauPeriod\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 207,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                  error: errors.claimantName\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                  error: errors.lossQualifierID\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 220,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 219,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                  error: errors.priority\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                  error: errors.adjusterReference\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 231,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 230,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                  error: errors.referral,\n                  callback: function callback(e, data) {\n                    getRefValues(data);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 236,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 213,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.UploadDocumentContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n            refData: claimData,\n            refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n            ,\n            dmsContext: constants.DMS_CONTEXT_CLAIM,\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims,\n            isTabView: false,\n            isClaims: true,\n            isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n            claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\n            docList: claimsDocsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 248,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: handleSubmit(handleSaveForm),\n      handleNextSubmit: handleSubmit(handleSubmitForm),\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 266,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterClaimCardInformationView, \"xppi+KUpkrjL5CuaANhn1iTaQRA=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useEffect","useState","useDispatch","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","postEditClaimDetailsInformation","makeStyles","Box","Grid","RegisterClaimCardInformationView","prototype","claimantNames","array","isRequired","referralValues","lossQualifiers","object","resetKey","number","hasClaimRef","bool","claimsDocsList","fields","claimRefId","claimData","policyInformation","index","handleNext","handleSave","handleBack","activeStep","isAllStepsCompleted","classes","name","dispatch","dateValidation","setDateValidation","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","setValue","handleSubmit","watch","lossQualifierID","id","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","handleSubmitForm","values","then","response","handleSaveForm","dateDisabledLossQualifiers","filter","itr","map","legendContainer","string","t","root","formLegend","claimReference","claimRef","policyRef","insured","getFieldProps","toDate","disabled","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fgunarrative","beAdjuster","rfiResponse","bordereauPeriod","claimantName","priority","adjusterReference","referral","e","data","UploadDocumentContainer","constants","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","type","claims"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts';\r\nimport { postEditClaimDetailsInformation } from 'stores';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  lossQualifiers: PropTypes.object,\r\n  resetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  claimsDocsList: PropTypes.array\r\n};\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  resetKey,\r\n  hasClaimRef,\r\n  claimsDocsList,\r\n  claimRefId,\r\n  claimData,\r\n  policyInformation,\r\n  index,\r\n  handleNext,\r\n  handleSave,\r\n  handleBack,\r\n  activeStep,\r\n  isAllStepsCompleted\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch()\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, setValue, handleSubmit, watch } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const lossQualifierID = watch('lossQualifierID')?.id;\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleNext(index)\r\n    });\r\n  }\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleSave()\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lossQualifierID) {\r\n      const dateDisabledLossQualifiers = lossQualifiers\r\n        .filter((item) => {\r\n          return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name);\r\n        })\r\n        .map((item) => item.id);\r\n      const isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\r\n      setDateValidation(!isRequired);\r\n    }\r\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Box m={3} mb={0}>\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item className={classes.legendContainer}>\r\n            <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          </Grid>\r\n          <FormLabel label={`${(claimRefId?.claimReference || claimRefId?.claimRef)} | ${policyInformation.policyRef} | ${policyInformation.insured}`} align=\"left\" />\r\n        </Grid>\r\n      </Box>\r\n      <FormContainer data-testid=\"form-claimsInformation\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={6}>\r\n            <FormGrid item xs={12} sm={4}>\r\n            <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                  <FormLabel label={(claimRefId?.claimReference || claimRefId?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')} nestedClasses={{ root: classes.claimRef }} align=\"left\" />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormDate\r\n                    {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                    error={errors.toDate}\r\n                    muiComponentProps={{\r\n                      disabled: dateValidation,\r\n                      fullWidth: true,\r\n                      classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                      }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormCheckbox {...utils.form.getFieldProps(fields, 'bordereauClaim', control)} error={errors.bordereauClaim} nestedClasses={{ root: classes.checkbox }}/>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={7}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormDate\r\n                        {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                        error={errors.toDate}\r\n                        muiComponentProps={{\r\n                          disabled: dateValidation,\r\n                          fullWidth: true,\r\n                          classes: {\r\n                            root: classes.datepicker,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} error={errors.beAdjuster} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'rfiResponse', control)} error={errors.rfiResponse} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)} error={errors.bordereauPeriod} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'referral', control)} error={errors.referral}\r\n                    callback={(e, data) => {\r\n                      getRefValues(data);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n          </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <Box className={classes.UploadDocumentContainer}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <ClaimsUploadViewSearchDocs\r\n                refData={claimData}\r\n                refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n                dmsContext={constants.DMS_CONTEXT_CLAIM}\r\n                documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n                isTabView={false}\r\n                isClaims\r\n                isClaimsUploadDisabled={!claimRefId?.claimRef}\r\n                claimsUploadWarningMsg={!claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : ''}\r\n                claimsSearchDocumentsTxt={utils.string.t('claims.claimInformation.dms.searchDocuments')}\r\n                uploadDocumentsTitle={utils.string.t('claims.claimInformation.dms.uploadDocuments')}\r\n                docList={claimsDocsList}\r\n              />       \r\n            </Grid>\r\n          </Grid>\r\n      </Box>\r\n      <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => { handleBack(index) }}\r\n          handleSave={handleSubmit(handleSaveForm)} \r\n          handleNextSubmit={handleSubmit(handleSubmitForm)} \r\n          save={true}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}