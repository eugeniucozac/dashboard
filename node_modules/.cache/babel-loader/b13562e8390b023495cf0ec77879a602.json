{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Search\\\\Search.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport { SearchView } from './Search.view';\nimport styles from './Search.styles';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSearch.propTypes = {\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  submitButton: PropTypes.bool,\n  submitButtonProps: PropTypes.object,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    focus: PropTypes.func\n  }).isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    formControlRoot: PropTypes.string,\n    inputPropsRoot: PropTypes.string\n  }),\n  minChars: PropTypes.number,\n  isSearchByNull: PropTypes.bool\n};\nSearch.defaultProps = {\n  submitButton: true,\n  handlers: {},\n  nestedClasses: {},\n  minChars: 1\n};\nexport default function Search(_ref) {\n  var _classnames;\n\n  var text = _ref.text,\n      minChars = _ref.minChars,\n      placeholder = _ref.placeholder,\n      submitButton = _ref.submitButton,\n      submitButtonProps = _ref.submitButtonProps,\n      isSearchByNull = _ref.isSearchByNull,\n      handlers = _ref.handlers,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'Search'\n  })();\n\n  var handleClear = function handleClear(reset) {\n    return function (event) {\n      reset();\n\n      if (utils.generic.isFunction(handlers.reset)) {\n        handlers.reset();\n      }\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var query = values.query;\n\n    if (query && text !== query) {\n      return handlers.search(query === null || query === void 0 ? void 0 : query.trim());\n    }\n  };\n\n  var fields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: placeholder || '',\n    defaultValue: submitButton ? text || '' : '',\n    onChange: submitButton ? undefined : function (value) {\n      var searchTerm = value ? value.trim() : '';\n      handlers.search(searchTerm);\n      return value;\n    },\n    muiComponentProps: _objectSpread(_objectSpread({\n      autoComplete: 'off'\n    }, utils.generic.isFunction(handlers.focus) && {\n      onFocus: function onFocus() {\n        handlers.focus();\n      }\n    }), {}, {\n      classes: {\n        root: classnames((_classnames = {}, _defineProperty(_classnames, classes.input, true), _defineProperty(_classnames, nestedClasses.formControlRoot, Boolean(nestedClasses.formControlRoot)), _classnames))\n      },\n      InputProps: {\n        classes: {\n          root: classnames(_defineProperty({}, nestedClasses.inputPropsRoot, Boolean(nestedClasses.inputPropsRoot)))\n        }\n      },\n      'data-testid': 'search-field'\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(SearchView, {\n    query: text,\n    fields: fields,\n    submitButton: submitButton,\n    submitButtonProps: submitButtonProps,\n    minChars: minChars,\n    isSearchByNull: isSearchByNull,\n    handlers: {\n      clear: handleClear,\n      search: handleSubmit\n    },\n    nestedClasses: nestedClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 98,\n    columnNumber: 5\n  }, this);\n}\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Search/Search.js"],"names":["React","PropTypes","classnames","SearchView","styles","utils","makeStyles","Search","propTypes","text","string","placeholder","submitButton","bool","submitButtonProps","object","handlers","shape","search","func","isRequired","reset","focus","nestedClasses","root","formControlRoot","inputPropsRoot","minChars","number","isSearchByNull","defaultProps","classes","name","handleClear","event","generic","isFunction","handleSubmit","values","query","trim","fields","type","defaultValue","onChange","undefined","value","searchTerm","muiComponentProps","autoComplete","onFocus","input","Boolean","InputProps","clear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport { SearchView } from './Search.view';\r\nimport styles from './Search.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nSearch.propTypes = {\r\n  text: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  submitButton: PropTypes.bool,\r\n  submitButtonProps: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    focus: PropTypes.func,\r\n  }).isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    formControlRoot: PropTypes.string,\r\n    inputPropsRoot: PropTypes.string,\r\n  }),\r\n  minChars: PropTypes.number,\r\n  isSearchByNull: PropTypes.bool,\r\n};\r\n\r\nSearch.defaultProps = {\r\n  submitButton: true,\r\n  handlers: {},\r\n  nestedClasses: {},\r\n  minChars: 1,\r\n};\r\n\r\nexport default function Search({ text, minChars, placeholder, submitButton, submitButtonProps, isSearchByNull, handlers, nestedClasses }) {\r\n  const classes = makeStyles(styles, { name: 'Search' })();\r\n\r\n  const handleClear = (reset) => (event) => {\r\n    reset();\r\n\r\n    if (utils.generic.isFunction(handlers.reset)) {\r\n      handlers.reset();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (values = {}) => {\r\n    const { query } = values;\r\n\r\n    if (query && text !== query) {\r\n      return handlers.search(query?.trim());\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: placeholder || '',\r\n      defaultValue: submitButton ? text || '' : '',\r\n      onChange: submitButton\r\n        ? undefined\r\n        : (value) => {\r\n            const searchTerm = value ? value.trim() : '';\r\n            handlers.search(searchTerm);\r\n\r\n            return value;\r\n          },\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        ...(utils.generic.isFunction(handlers.focus) && {\r\n          onFocus: () => {\r\n            handlers.focus();\r\n          },\r\n        }),\r\n        classes: {\r\n          root: classnames({\r\n            [classes.input]: true,\r\n            [nestedClasses.formControlRoot]: Boolean(nestedClasses.formControlRoot),\r\n          }),\r\n        },\r\n        InputProps: {\r\n          classes: {\r\n            root: classnames({\r\n              [nestedClasses.inputPropsRoot]: Boolean(nestedClasses.inputPropsRoot),\r\n            }),\r\n          },\r\n        },\r\n        'data-testid': 'search-field',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SearchView\r\n      query={text}\r\n      fields={fields}\r\n      submitButton={submitButton}\r\n      submitButtonProps={submitButtonProps}\r\n      minChars={minChars}\r\n      isSearchByNull={isSearchByNull}\r\n      handlers={{\r\n        clear: handleClear,\r\n        search: handleSubmit,\r\n      }}\r\n      nestedClasses={nestedClasses}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}