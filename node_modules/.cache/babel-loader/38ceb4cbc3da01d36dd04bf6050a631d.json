{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\CreateAdhocUploadDocuments\\\\CreateAdhocUploadDocuments.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport styles from './CreateAdhocUploadDocuments.style';\nimport { CreateAdhocTaskFooter, ClaimsUploadViewSearchDocs } from 'modules';\nimport { selectAdhocTaskData, setDmsTaskContextType, resetDmsTaskTypeContext, setAdhocTaskDocuments, selectorDmsViewFiles, selectAdhocTaskDocuments } from 'stores'; //mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateAdhocUploadDocumentsView.propTypes = {\n  claim: PropTypes.object.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  activeStep: PropTypes.number.isRequired\n};\n\nfunction CreateAdhocUploadDocumentsView(_ref) {\n  _s();\n\n  var claim = _ref.claim,\n      handleBack = _ref.handleBack,\n      handleCancel = _ref.handleCancel,\n      handleNext = _ref.handleNext,\n      activeStep = _ref.activeStep;\n  var classes = makeStyles(styles, {\n    name: 'CreateAdhocUploadDocuments'\n  })();\n  var dispatch = useDispatch();\n  var taskDetails = useSelector(selectAdhocTaskData);\n\n  var refData = _objectSpread({\n    taskId: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id\n  }, taskDetails);\n\n  var viewDmsDocuments = useSelector(selectorDmsViewFiles);\n  var adhocDocuments = useSelector(selectAdhocTaskDocuments);\n  useEffect(function () {\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\n      dispatch(setAdhocTaskDocuments(viewDmsDocuments));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewDmsDocuments]);\n  useEffect(function () {\n    if (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id) {\n      dispatch(setDmsTaskContextType({\n        type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC,\n        refId: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id\n      }));\n    }\n\n    return function () {\n      dispatch(resetDmsTaskTypeContext());\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskDetails]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      flex: \"1 1 auto\",\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n        refData: refData,\n        refIdName: constants.DMS_CONTEXT_TASK_ID,\n        dmsContext: constants.DMS_CONTEXT_TASK,\n        documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n        viewOptions: {\n          link: true\n        },\n        docList: !utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? adhocDocuments : [],\n        parentRefs: {\n          claimRef: claim === null || claim === void 0 ? void 0 : claim.claimReference,\n          lossRef: claim === null || claim === void 0 ? void 0 : claim.lossRef\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(CreateAdhocTaskFooter, {\n        handleNext: handleNext,\n        handleCancel: handleCancel,\n        handleBack: handleBack,\n        activeStep: activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAdhocUploadDocumentsView, \"XC8yR7+U5Ly4BV5Q5JpE0Cqjr+8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CreateAdhocUploadDocumentsView;\nexport default CreateAdhocUploadDocumentsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdhocUploadDocumentsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/CreateAdhocUploadDocuments/CreateAdhocUploadDocuments.view.js"],"names":["React","useEffect","useDispatch","useSelector","PropTypes","constants","utils","styles","CreateAdhocTaskFooter","ClaimsUploadViewSearchDocs","selectAdhocTaskData","setDmsTaskContextType","resetDmsTaskTypeContext","setAdhocTaskDocuments","selectorDmsViewFiles","selectAdhocTaskDocuments","makeStyles","Box","CreateAdhocUploadDocumentsView","propTypes","claim","object","isRequired","handleBack","func","handleCancel","handleNext","activeStep","number","classes","name","dispatch","taskDetails","refData","taskId","id","viewDmsDocuments","adhocDocuments","generic","isInvalidOrEmptyArray","type","DMS_TASK_CONTEXT_TYPE_ADHOC","refId","container","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","link","claimRef","claimReference","lossRef"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport styles from './CreateAdhocUploadDocuments.style';\r\nimport { CreateAdhocTaskFooter, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport {\r\n  selectAdhocTaskData,\r\n  setDmsTaskContextType,\r\n  resetDmsTaskTypeContext,\r\n  setAdhocTaskDocuments,\r\n  selectorDmsViewFiles,\r\n  selectAdhocTaskDocuments,\r\n} from 'stores';\r\n\r\n//mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nCreateAdhocUploadDocumentsView.propTypes = {\r\n  claim: PropTypes.object.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n}\r\n\r\nfunction CreateAdhocUploadDocumentsView({\r\n  claim,\r\n  handleBack,\r\n  handleCancel,\r\n  handleNext,\r\n  activeStep,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdhocUploadDocuments' })();\r\n  const dispatch = useDispatch();\r\n  const taskDetails = useSelector(selectAdhocTaskData);\r\n  const refData = {\r\n    taskId: taskDetails?.id,\r\n    ...taskDetails,\r\n  };\r\n  const viewDmsDocuments = useSelector(selectorDmsViewFiles);\r\n  const adhocDocuments = useSelector(selectAdhocTaskDocuments);\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\r\n      dispatch(setAdhocTaskDocuments(viewDmsDocuments));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [viewDmsDocuments]);\r\n\r\n  useEffect(() => {\r\n    if (taskDetails?.id) {\r\n      dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC, refId: taskDetails?.id }));\r\n    }\r\n\r\n    return () => {\r\n      dispatch(resetDmsTaskTypeContext());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [taskDetails]);\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box mt={2} flex=\"1 1 auto\" className={classes.container}>\r\n        <ClaimsUploadViewSearchDocs\r\n          refData={refData}\r\n          refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n          dmsContext={constants.DMS_CONTEXT_TASK}\r\n          documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n          viewOptions={{ link: true }}\r\n          docList={!utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? adhocDocuments : []}\r\n          parentRefs={{\r\n            claimRef: claim?.claimReference,\r\n            lossRef: claim?.lossRef\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box flex=\"0 1 auto\">\r\n        <CreateAdhocTaskFooter\r\n          handleNext={handleNext}\r\n          handleCancel={handleCancel}\r\n          handleBack={handleBack}\r\n          activeStep={activeStep}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateAdhocUploadDocumentsView;\r\n"]},"metadata":{},"sourceType":"module"}