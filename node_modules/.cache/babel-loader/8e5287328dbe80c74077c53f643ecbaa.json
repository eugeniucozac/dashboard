{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AdminUser\\\\AdminUser.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport get from 'lodash/get';\nimport { getUserList, selectRefDataDepartments, showModal, getParentOfficeListAll, sendVerificationEmail } from 'stores';\nimport { AdminUserView } from './AdminUser.view';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function AdminUser() {\n  _s();\n\n  var userList = useSelector(function (state) {\n    return state.admin.userList;\n  }) || {};\n  var refDataDepartments = useSelector(selectRefDataDepartments);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      params = _useState2[0],\n      setParams = _useState2[1];\n\n  var dispatch = useDispatch();\n  var paginationObj = {\n    page: userList.page - 1,\n    rowsTotal: userList.itemsTotal,\n    rowsPerPage: userList.pageSize\n  };\n  useEffect(function () {\n    dispatch(getUserList());\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    dispatch(getParentOfficeListAll());\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getUserList(_objectSpread(_objectSpread({}, params), {}, {\n      page: newPage + 1\n    })));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getUserList(_objectSpread(_objectSpread({}, params), {}, {\n      size: rowsPerPage\n    })));\n  };\n\n  var handleCreateUser = function handleCreateUser() {\n    var user = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    dispatch(showModal({\n      component: 'ADD_EDIT_USER',\n      props: {\n        title: user.id ? 'admin.editUser' : 'admin.createUser',\n        fullWidth: true,\n        maxWidth: 'md',\n        componentProps: {\n          user: user\n        }\n      }\n    }));\n  };\n\n  var handleVerifyUser = function handleVerifyUser(_ref) {\n    var id = _ref.id;\n    dispatch(sendVerificationEmail(id));\n  };\n\n  var pagination = usePagination(userList.items, paginationObj, handleChangePage, handleChangeRowsPerPage);\n  var fields = [{\n    gridSize: {\n      xs: 12,\n      sm: 6,\n      md: 8\n    },\n    name: 'fullName',\n    type: 'text',\n    placeholder: utils.string.t('admin.searchByFullName'),\n    value: '',\n    muiComponentProps: {\n      'data-testid': 'fullName'\n    }\n  }, {\n    gridSize: {\n      xs: 12,\n      sm: 6,\n      md: 4\n    },\n    name: 'department',\n    type: 'autocomplete',\n    placeholder: utils.string.t('admin.searchByDepartment'),\n    value: [],\n    options: refDataDepartments,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      'data-testid': 'department'\n    }\n  }];\n  var actions = [{\n    name: 'filter',\n    label: utils.string.t('app.filter'),\n    handler: function handler(values) {\n      var department = values.department,\n          rest = _objectWithoutProperties(values, [\"department\"]);\n\n      var departmentId = get(department, 'id');\n      setParams(_objectSpread(_objectSpread({}, rest), departmentId && {\n        departmentId: departmentId\n      }));\n      dispatch(getUserList(_objectSpread(_objectSpread({}, rest), departmentId && {\n        departmentId: departmentId\n      })));\n    }\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: function handler() {\n      dispatch(getUserList());\n      setParams({});\n    }\n  }];\n  var popoverActions = [{\n    id: 'admin-edit-user',\n    label: 'admin.editUser',\n    callback: function callback(_ref2) {\n      var user = _ref2.user;\n      return handleCreateUser(user);\n    }\n  }, {\n    id: 'admin-verify-user',\n    label: 'admin.sendVerificationEmail',\n    callback: function callback(_ref3) {\n      var user = _ref3.user;\n      return handleVerifyUser(user);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(AdminUserView, {\n    actions: actions,\n    fields: fields,\n    userList: userList.items,\n    pagination: pagination.obj,\n    sort: {\n      by: userList.sortBy,\n      type: userList.sortType,\n      direction: userList.sortDirection\n    },\n    popoverActions: popoverActions,\n    handleChangePage: pagination.handlers.handleChangePage,\n    handleCreateUser: handleCreateUser,\n    handleChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n    refDataDepartments: refDataDepartments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdminUser, \"UzFxSB1xWHYhuiwH2o5tbdgGyx4=\", false, function () {\n  return [useSelector, useSelector, useDispatch, usePagination];\n});\n\n_c = AdminUser;\nexport default AdminUser;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUser\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AdminUser/AdminUser.js"],"names":["React","useEffect","useState","useDispatch","useSelector","get","getUserList","selectRefDataDepartments","showModal","getParentOfficeListAll","sendVerificationEmail","AdminUserView","usePagination","utils","AdminUser","userList","state","admin","refDataDepartments","params","setParams","dispatch","paginationObj","page","rowsTotal","itemsTotal","rowsPerPage","pageSize","handleChangePage","newPage","handleChangeRowsPerPage","size","handleCreateUser","user","component","props","title","id","fullWidth","maxWidth","componentProps","handleVerifyUser","pagination","items","fields","gridSize","xs","sm","md","name","type","placeholder","string","t","value","muiComponentProps","options","optionKey","optionLabel","actions","label","handler","values","department","rest","departmentId","popoverActions","callback","obj","by","sortBy","sortType","direction","sortDirection","handlers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport get from 'lodash/get';\r\nimport { getUserList, selectRefDataDepartments, showModal, getParentOfficeListAll, sendVerificationEmail } from 'stores';\r\nimport { AdminUserView } from './AdminUser.view';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nexport function AdminUser() {\r\n  const userList = useSelector((state) => state.admin.userList) || {};\r\n  const refDataDepartments = useSelector(selectRefDataDepartments);\r\n  const [params, setParams] = useState({});\r\n  const dispatch = useDispatch();\r\n\r\n  const paginationObj = {\r\n    page: userList.page - 1,\r\n    rowsTotal: userList.itemsTotal,\r\n    rowsPerPage: userList.pageSize,\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getUserList());\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getParentOfficeListAll());\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getUserList({ ...params, page: newPage + 1 }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getUserList({ ...params, size: rowsPerPage }));\r\n  };\r\n\r\n  const handleCreateUser = (user = {}) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_EDIT_USER',\r\n        props: {\r\n          title: user.id ? 'admin.editUser' : 'admin.createUser',\r\n          fullWidth: true,\r\n          maxWidth: 'md',\r\n          componentProps: {\r\n            user,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleVerifyUser = ({ id }) => {\r\n    dispatch(sendVerificationEmail(id));\r\n  };\r\n\r\n  const pagination = usePagination(userList.items, paginationObj, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  const fields = [\r\n    {\r\n      gridSize: { xs: 12, sm: 6, md: 8 },\r\n      name: 'fullName',\r\n      type: 'text',\r\n      placeholder: utils.string.t('admin.searchByFullName'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        'data-testid': 'fullName',\r\n      },\r\n    },\r\n    {\r\n      gridSize: { xs: 12, sm: 6, md: 4 },\r\n      name: 'department',\r\n      type: 'autocomplete',\r\n      placeholder: utils.string.t('admin.searchByDepartment'),\r\n      value: [],\r\n      options: refDataDepartments,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        'data-testid': 'department',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.filter'),\r\n      handler: (values) => {\r\n        const { department, ...rest } = values;\r\n        const departmentId = get(department, 'id');\r\n        setParams({ ...rest, ...(departmentId && { departmentId }) });\r\n        dispatch(getUserList({ ...rest, ...(departmentId && { departmentId }) }));\r\n      },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: () => {\r\n        dispatch(getUserList());\r\n        setParams({});\r\n      },\r\n    },\r\n  ];\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'admin-edit-user',\r\n      label: 'admin.editUser',\r\n      callback: ({ user }) => handleCreateUser(user),\r\n    },\r\n    {\r\n      id: 'admin-verify-user',\r\n      label: 'admin.sendVerificationEmail',\r\n      callback: ({ user }) => handleVerifyUser(user),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AdminUserView\r\n      actions={actions}\r\n      fields={fields}\r\n      userList={userList.items}\r\n      pagination={pagination.obj}\r\n      sort={{\r\n        by: userList.sortBy,\r\n        type: userList.sortType,\r\n        direction: userList.sortDirection,\r\n      }}\r\n      popoverActions={popoverActions}\r\n      handleChangePage={pagination.handlers.handleChangePage}\r\n      handleCreateUser={handleCreateUser}\r\n      handleChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n      refDataDepartments={refDataDepartments}\r\n    />\r\n  );\r\n}\r\n\r\nexport default AdminUser;\r\n"]},"metadata":{},"sourceType":"module"}