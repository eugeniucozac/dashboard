{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TasksTab\\\\TasksTab.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './TasksTab.style';\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\nimport { TasksTabTable } from 'modules';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTasksTabView.propTypes = {\n  isTaskTeam: PropTypes.bool.isRequired,\n  fields: PropTypes.array.isRequired,\n  control: PropTypes.object.isRequired,\n  taskTypeValue: PropTypes.string.isRequired,\n  tasks: PropTypes.object.isRequired,\n  sort: PropTypes.object.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool.isRequired,\n  isSearchByNull: PropTypes.bool,\n  resetKey: PropTypes.number,\n  multiSelectField: PropTypes.array.isRequired,\n  isMultiSelect: PropTypes.bool,\n  handlers: PropTypes.shape({\n    toggleColumn: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    handleSearchFilter: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    handleSort: PropTypes.func.isRequired,\n    setTaskType: PropTypes.func.isRequired,\n    refreshTasksGrid: PropTypes.func.isRequired,\n    handleBulkAssign: PropTypes.func.isRequired,\n    handleUpdateTaskPriority: PropTypes.func,\n    resetNotificationFilters: PropTypes.func,\n    toggleCheckSigning: PropTypes.func\n  }).isRequired\n};\nexport default function TasksTabView(_ref) {\n  _s();\n\n  var isTaskTeam = _ref.isTaskTeam,\n      fields = _ref.fields,\n      control = _ref.control,\n      taskTypeValue = _ref.taskTypeValue,\n      tasks = _ref.tasks,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      isSearchByNull = _ref.isSearchByNull,\n      resetKey = _ref.resetKey,\n      multiSelectField = _ref.multiSelectField,\n      isMultiSelect = _ref.isMultiSelect,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'TasksTab'\n  })();\n  useEffect(function () {\n    if (taskTypeValue) {\n      handlers.setTaskType(taskTypeValue);\n    }\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"tasks-management\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        nestedClasses: {\n          root: classes.radioContainer\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('app.view'), \": \"),\n            align: \"left\",\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'taskType')), {}, {\n            control: control\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchBy: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.filterBox,\n          children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'searchBy')), {}, {\n            control: control,\n            nestedClasses: {\n              root: classes.selectAutocomplete\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this),\n        isSearchByNull: isSearchByNull,\n        searchPlaceholder: utils.string.t('claims.TasksTabsearch'),\n        searchMinChars: 3,\n        searchTerm: tasks === null || tasks === void 0 ? void 0 : tasks.query,\n        columns: true,\n        filters: true,\n        isFetchingFilters: isFetchingFilters,\n        filtersArray: tableFilterFields,\n        clearFilterKey: resetKey,\n        nestedClasses: {\n          root: classes.filtersContainer,\n          searchBox: classes.searchBox\n        },\n        handlers: {\n          onSearch: handlers.handleSearch,\n          onResetFilter: handlers.resetFilter,\n          onResetSearch: handlers.resetSearch,\n          onFilter: function onFilter(values) {\n            return handlers.handleSearchFilter(values);\n          },\n          onToggleColumn: handlers.toggleColumn\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TasksTabTable, {\n      isTaskTeam: isTaskTeam,\n      tasks: tasks,\n      cols: columnsArray,\n      columnProps: columnProps,\n      handleUpdateTaskPriority: handlers.handleUpdateTaskPriority,\n      sort: sort,\n      handleSort: handlers.handleSort,\n      handleChangePage: handlers.handleChangePage,\n      handleChangeRowsPerPage: handlers.handleChangeRowsPerPage,\n      refreshTasksGrid: handlers.refreshTasksGrid,\n      isMultiSelect: isMultiSelect,\n      control: control,\n      multiSelectField: multiSelectField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksTabView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = TasksTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TasksTab/TasksTab.view.js"],"names":["React","useEffect","PropTypes","styles","TableActions","TableFilters","TableToolbar","FormRadio","FormLabel","FormAutocompleteMui","TasksTabTable","utils","makeStyles","Box","TasksTabView","propTypes","isTaskTeam","bool","isRequired","fields","array","control","object","taskTypeValue","string","tasks","sort","columnsArray","columnProps","func","tableFilterFields","isFetchingFilters","isSearchByNull","resetKey","number","multiSelectField","isMultiSelect","handlers","shape","toggleColumn","resetFilter","resetSearch","handleSearch","handleSearchFilter","handleChangePage","handleChangeRowsPerPage","handleSort","setTaskType","refreshTasksGrid","handleBulkAssign","handleUpdateTaskPriority","resetNotificationFilters","toggleCheckSigning","classes","name","root","radioContainer","t","viewLabel","form","getFieldProps","filterBox","selectAutocomplete","query","filtersContainer","searchBox","onSearch","onResetFilter","onResetSearch","onFilter","values","onToggleColumn"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './TasksTab.style';\r\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\r\nimport { TasksTabTable } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nTasksTabView.propTypes = {\r\n  isTaskTeam: PropTypes.bool.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  taskTypeValue: PropTypes.string.isRequired,\r\n  tasks: PropTypes.object.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool.isRequired,\r\n  isSearchByNull: PropTypes.bool,\r\n  resetKey: PropTypes.number,\r\n  multiSelectField: PropTypes.array.isRequired,\r\n  isMultiSelect: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    handleSearch: PropTypes.func.isRequired,\r\n    handleSearchFilter: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    handleSort: PropTypes.func.isRequired,\r\n    setTaskType: PropTypes.func.isRequired,\r\n    refreshTasksGrid: PropTypes.func.isRequired,\r\n    handleBulkAssign: PropTypes.func.isRequired,\r\n    handleUpdateTaskPriority: PropTypes.func,\r\n    resetNotificationFilters: PropTypes.func,\r\n    toggleCheckSigning: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function TasksTabView({\r\n  isTaskTeam,\r\n  fields,\r\n  control,\r\n  taskTypeValue,\r\n  tasks,\r\n  sort,\r\n  columnsArray,\r\n  columnProps,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  isSearchByNull,\r\n  resetKey,\r\n  multiSelectField,\r\n  isMultiSelect,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'TasksTab' })();\r\n\r\n  useEffect(() => {\r\n    if (taskTypeValue) {\r\n      handlers.setTaskType(taskTypeValue);\r\n    }\r\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Box mt={3} data-testid=\"tasks-management\">\r\n      <TableToolbar>\r\n        <TableActions nestedClasses={{ root: classes.radioContainer }}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <FormLabel label={`${utils.string.t('app.view')}: `} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n            <FormRadio {...utils.form.getFieldProps(fields, 'taskType')} control={control} />\r\n          </Box>\r\n        </TableActions>\r\n        <TableFilters\r\n          search\r\n          searchBy={\r\n            <Box className={classes.filterBox}>\r\n              <FormAutocompleteMui\r\n                {...utils.form.getFieldProps(fields, 'searchBy')}\r\n                control={control}\r\n                nestedClasses={{ root: classes.selectAutocomplete }}\r\n              />\r\n            </Box>\r\n          }\r\n          isSearchByNull={isSearchByNull}\r\n          searchPlaceholder={utils.string.t('claims.TasksTabsearch')}\r\n          searchMinChars={3}\r\n          searchTerm={tasks?.query}\r\n          columns\r\n          filters\r\n          isFetchingFilters={isFetchingFilters}\r\n          filtersArray={tableFilterFields}\r\n          clearFilterKey={resetKey}\r\n          nestedClasses={{\r\n            root: classes.filtersContainer,\r\n            searchBox: classes.searchBox,\r\n          }}\r\n          handlers={{\r\n            onSearch: handlers.handleSearch,\r\n            onResetFilter: handlers.resetFilter,\r\n            onResetSearch: handlers.resetSearch,\r\n            onFilter: (values) => handlers.handleSearchFilter(values),\r\n            onToggleColumn: handlers.toggleColumn,\r\n          }}\r\n        />\r\n      </TableToolbar>\r\n      <TasksTabTable\r\n        isTaskTeam={isTaskTeam}\r\n        tasks={tasks}\r\n        cols={columnsArray}\r\n        columnProps={columnProps}\r\n        handleUpdateTaskPriority={handlers.handleUpdateTaskPriority}\r\n        sort={sort}\r\n        handleSort={handlers.handleSort}\r\n        handleChangePage={handlers.handleChangePage}\r\n        handleChangeRowsPerPage={handlers.handleChangeRowsPerPage}\r\n        refreshTasksGrid={handlers.refreshTasksGrid}\r\n        isMultiSelect={isMultiSelect}\r\n        control={control}\r\n        multiSelectField={multiSelectField}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}