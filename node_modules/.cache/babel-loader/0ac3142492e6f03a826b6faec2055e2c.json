{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './ProductsAdminInsureds.styles';\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProductsAdminInsuredsView.propTypes = {\n  schema: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  countries: PropTypes.array.isRequired,\n  options: PropTypes.shape({\n    clients: PropTypes.array.isRequired\n  }).isRequired,\n  pagination: PropTypes.object.isRequired,\n  buttonLabel: PropTypes.string.isRequired,\n  reInsured: PropTypes.bool.isRequired,\n  popoverActions: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    addInsured: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ProductsAdminInsuredsView(_ref) {\n  var _this = this;\n\n  var schema = _ref.schema,\n      loading = _ref.loading,\n      countries = _ref.countries,\n      options = _ref.options,\n      pagination = _ref.pagination,\n      buttonLabel = _ref.buttonLabel,\n      reInsured = _ref.reInsured,\n      popoverActions = _ref.popoverActions,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ProductsAdminInsureds'\n  })();\n  var hasRows = utils.generic.isValidArray(schema.items, true);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    \"data-testid\": reInsured ? 'products-admin-reInsureds' : 'products-admin-insureds',\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: schema.fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [hasRows && schema.items.map(function (item) {\n            var classesRow = _defineProperty({}, classes.rowNew, item.__new__);\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classnames(classesRow),\n              children: [schema.fields && schema.fields.map(function (field) {\n                var addressFields = ['street', 'city', 'zipCode', 'county', 'state', 'country'];\n                var isAddressField = addressFields.includes(field.id);\n                var isPartyType = field.id === 'partyType';\n\n                var parseField = function parseField() {\n                  if (isPartyType) {\n                    var _get;\n\n                    var partyTypeField = (_get = get(item, \"[\".concat(field.id, \"]\"), '')) === null || _get === void 0 ? void 0 : _get.toLowerCase();\n\n                    if (['business', 'individual'].includes(partyTypeField)) {\n                      return utils.string.t(\"products.admin.insureds.typeOptions.\".concat(partyTypeField));\n                    }\n                  } else if (isAddressField) {\n                    if (field.id === 'country') {\n                      return utils.risk.getInsuredCountry(item.address, countries);\n                    }\n\n                    return get(item, \"[address.\".concat(field.id, \"]\"));\n                  } else if (field.id === 'genderType') {\n                    return utils.string.capitalise(get(item, \"[\".concat(field.id, \"]\"), ''));\n                  } else if (field.id === 'dateOfBirth') {\n                    return /*#__PURE__*/_jsxDEV(Translate, {\n                      label: \"format.date\",\n                      options: {\n                        value: {\n                          date: get(item, \"[\".concat(field.id, \"]\"), ''),\n                          format: config.ui.format.date.text\n                        }\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 31\n                    }, _this);\n                  } else if (field.id === 'clientId') {\n                    var clientID = get(item, \"[\".concat(field.id, \"]\"));\n                    return utils.form.getSelectOption('clients', options, clientID) || '';\n                  }\n\n                  return get(item, \"[\".concat(field.id, \"]\"));\n                };\n\n                return /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, field.cellProps), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    className: classes.layers,\n                    children: parseField()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 29\n                  }, _this)\n                }), \"\".concat(item.id, \"-\").concat(field.id), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 27\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                \"data-testid\": \"edit-menu\",\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"products-admin-edit-table-popover\",\n                  data: {\n                    fields: schema.fields,\n                    item: item\n                  },\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, _this)]\n            }, \"\".concat(item.id), true, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, _this);\n          }), !hasRows && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: schema.items.length,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                height: 350 - 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            color: \"primary\",\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: buttonLabel\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 21\n            }, this),\n            \"data-testid\": 'insureds-create-button',\n            onClick: handlers.addInsured(schema.fields)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: schema.pagination && pagination.page !== undefined && /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handlers.changePage,\n          onChangeRowsPerPage: handlers.changeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 136,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductsAdminInsuredsView;\nProductsAdminInsuredsView.displayName = \"ProductsAdminInsuredsView\";\nProductsAdminInsuredsView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProductsAdminInsuredsView\",\n  \"props\": {\n    \"schema\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"countries\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"clients\": {\n            \"name\": \"array\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"buttonLabel\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"reInsured\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"popoverActions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"addInsured\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.view.js\"] = {\n    name: \"ProductsAdminInsuredsView\",\n    docgenInfo: ProductsAdminInsuredsView.__docgenInfo,\n    path: \"src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminInsuredsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminInsureds/ProductsAdminInsureds.view.js"],"names":["React","PropTypes","classnames","get","styles","Button","Loader","Overflow","Pagination","PopoverMenu","TableCell","TableHead","Translate","utils","config","Grid","makeStyles","Box","Table","TableBody","TableRow","Typography","AddIcon","ProductsAdminInsuredsView","propTypes","schema","object","isRequired","loading","bool","countries","array","options","shape","clients","pagination","buttonLabel","string","reInsured","popoverActions","handlers","addInsured","func","changePage","changeRowsPerPage","classes","name","hasRows","generic","isValidArray","items","fields","map","item","classesRow","rowNew","__new__","field","addressFields","isAddressField","includes","id","isPartyType","parseField","partyTypeField","toLowerCase","t","risk","getInsuredCountry","address","capitalise","value","date","format","ui","text","clientID","form","getSelectOption","cellProps","layers","length","page","undefined","rowsTotal","rowsPerPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ProductsAdminInsureds.styles';\r\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nProductsAdminInsuredsView.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  countries: PropTypes.array.isRequired,\r\n  options: PropTypes.shape({\r\n    clients: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  buttonLabel: PropTypes.string.isRequired,\r\n  reInsured: PropTypes.bool.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    addInsured: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ProductsAdminInsuredsView({\r\n  schema,\r\n  loading,\r\n  countries,\r\n  options,\r\n  pagination,\r\n  buttonLabel,\r\n  reInsured,\r\n  popoverActions,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ProductsAdminInsureds' })();\r\n\r\n  const hasRows = utils.generic.isValidArray(schema.items, true);\r\n\r\n  return (\r\n    <Box position=\"relative\" data-testid={reInsured ? 'products-admin-reInsureds' : 'products-admin-insureds'}>\r\n      {loading && <Loader absolute />}\r\n\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={schema.fields} />\r\n          <TableBody>\r\n            {hasRows &&\r\n              schema.items.map((item) => {\r\n                const classesRow = { [classes.rowNew]: item.__new__ };\r\n                return (\r\n                  <TableRow key={`${item.id}`} className={classnames(classesRow)}>\r\n                    {schema.fields &&\r\n                      schema.fields.map((field) => {\r\n                        const addressFields = ['street', 'city', 'zipCode', 'county', 'state', 'country'];\r\n                        const isAddressField = addressFields.includes(field.id);\r\n                        const isPartyType = field.id === 'partyType';\r\n\r\n                        const parseField = () => {\r\n                          if (isPartyType) {\r\n                            const partyTypeField = get(item, `[${field.id}]`, '')?.toLowerCase();\r\n\r\n                            if (['business', 'individual'].includes(partyTypeField)) {\r\n                              return utils.string.t(`products.admin.insureds.typeOptions.${partyTypeField}`);\r\n                            }\r\n                          } else if (isAddressField) {\r\n                            if (field.id === 'country') {\r\n                              return utils.risk.getInsuredCountry(item.address, countries);\r\n                            }\r\n\r\n                            return get(item, `[address.${field.id}]`);\r\n                          } else if (field.id === 'genderType') {\r\n                            return utils.string.capitalise(get(item, `[${field.id}]`, ''));\r\n                          } else if (field.id === 'dateOfBirth') {\r\n                            return (\r\n                              <Translate\r\n                                label=\"format.date\"\r\n                                options={{ value: { date: get(item, `[${field.id}]`, ''), format: config.ui.format.date.text } }}\r\n                              />\r\n                            );\r\n                          } else if (field.id === 'clientId') {\r\n                            const clientID = get(item, `[${field.id}]`);\r\n                            return utils.form.getSelectOption('clients', options, clientID) || '';\r\n                          }\r\n\r\n                          return get(item, `[${field.id}]`);\r\n                        };\r\n\r\n                        return (\r\n                          <TableCell key={`${item.id}-${field.id}`} {...field.cellProps}>\r\n                            <Typography variant=\"body2\" className={classes.layers}>\r\n                              {parseField()}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    <TableCell menu data-testid={`edit-menu`}>\r\n                      <PopoverMenu id=\"products-admin-edit-table-popover\" data={{ fields: schema.fields, item }} items={popoverActions} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {!hasRows && (\r\n              <TableRow>\r\n                <TableCell colSpan={schema.items.length}>\r\n                  <Box height={350 - 16} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box mt={2}>\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              text={<Translate label={buttonLabel} />}\r\n              data-testid={'insureds-create-button'}\r\n              onClick={handlers.addInsured(schema.fields)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          {schema.pagination && pagination.page !== undefined && (\r\n            <Pagination\r\n              page={pagination.page}\r\n              count={pagination.rowsTotal}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n              onChangePage={handlers.changePage}\r\n              onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}