{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddRisk\\\\AddRisk.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { AddRiskView } from './AddRisk.view';\nimport { postRisk } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRisk.propTypes = {\n  fields: PropTypes.array.isRequired,\n  type: PropTypes.string.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nAddRisk.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function AddRisk(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      type = _ref.type,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var media = useMedia();\n\n  var handlePostRisk = function handlePostRisk(values) {\n    return dispatch(postRisk(values, type, fields));\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddRiskView, {\n    fields: fields,\n    defaultValues: utils.form.getInitialValues(fields),\n    validationSchema: utils.form.getValidationSchema(fields),\n    isTablet: media.tablet,\n    handleClose: handleClose,\n    handlePostRisk: handlePostRisk\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRisk, \"YDLa6yuJWjCdQ6HQG+J1qVr0S9g=\", false, function () {\n  return [useDispatch, useMedia];\n});\n\n_c = AddRisk;\nAddRisk.displayName = \"AddRisk\";\nAddRisk.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddRisk\",\n  \"props\": {\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddRisk\\\\AddRisk.js\"] = {\n    name: \"AddRisk\",\n    docgenInfo: AddRisk.__docgenInfo,\n    path: \"src\\\\forms\\\\AddRisk\\\\AddRisk.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRisk\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddRisk/AddRisk.js"],"names":["React","PropTypes","useDispatch","AddRiskView","postRisk","useMedia","utils","AddRisk","propTypes","fields","array","isRequired","type","string","handleClose","func","defaultProps","dispatch","media","handlePostRisk","values","form","getInitialValues","getValidationSchema","tablet"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,WAAT,QAA4B,gBAA5B;AACA,SAASC,QAAT,QAAyB,QAAzB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,OAAO,CAACC,SAAR,GAAoB;AAClBC,EAAAA,MAAM,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADN;AAElBC,EAAAA,IAAI,EAAEX,SAAS,CAACY,MAAV,CAAiBF,UAFL;AAGlBG,EAAAA,WAAW,EAAEb,SAAS,CAACc,IAAV,CAAeJ;AAHV,CAApB;AAMAJ,OAAO,CAACS,YAAR,GAAuB;AACrBF,EAAAA,WAAW,EAAE,uBAAM,CAAE;AADA,CAAvB;AAIA,eAAe,SAASP,OAAT,OAAgD;AAAA;;AAAA,MAA7BE,MAA6B,QAA7BA,MAA6B;AAAA,MAArBG,IAAqB,QAArBA,IAAqB;AAAA,MAAfE,WAAe,QAAfA,WAAe;AAC7D,MAAMG,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,KAAK,GAAGb,QAAQ,EAAtB;;AAEA,MAAMc,cAAc,GAAG,SAAjBA,cAAiB,CAACC,MAAD,EAAY;AACjC,WAAOH,QAAQ,CAACb,QAAQ,CAACgB,MAAD,EAASR,IAAT,EAAeH,MAAf,CAAT,CAAf;AACD,GAFD;;AAIA,sBACE,QAAC,WAAD;AACE,IAAA,MAAM,EAAEA,MADV;AAEE,IAAA,aAAa,EAAEH,KAAK,CAACe,IAAN,CAAWC,gBAAX,CAA4Bb,MAA5B,CAFjB;AAGE,IAAA,gBAAgB,EAAEH,KAAK,CAACe,IAAN,CAAWE,mBAAX,CAA+Bd,MAA/B,CAHpB;AAIE,IAAA,QAAQ,EAAES,KAAK,CAACM,MAJlB;AAKE,IAAA,WAAW,EAAEV,WALf;AAME,IAAA,cAAc,EAAEK;AANlB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GAlBuBZ,O;UACLL,W,EACHG,Q;;;KAFQE,O;AAAAA,O","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { AddRiskView } from './AddRisk.view';\r\nimport { postRisk } from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nAddRisk.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nAddRisk.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function AddRisk({ fields, type, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const media = useMedia();\r\n\r\n  const handlePostRisk = (values) => {\r\n    return dispatch(postRisk(values, type, fields));\r\n  };\r\n\r\n  return (\r\n    <AddRiskView\r\n      fields={fields}\r\n      defaultValues={utils.form.getInitialValues(fields)}\r\n      validationSchema={utils.form.getValidationSchema(fields)}\r\n      isTablet={media.tablet}\r\n      handleClose={handleClose}\r\n      handlePostRisk={handlePostRisk}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}