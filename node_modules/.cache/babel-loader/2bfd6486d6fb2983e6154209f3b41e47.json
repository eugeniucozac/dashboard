{"ast":null,"code":"import moment from 'moment';\nvar utilsFilters = {\n  // check if any of the values matches the search query\n  matchQuery: function matchQuery(values, query) {\n    return Boolean(query && values.some(function (value) {\n      return value === null || value === void 0 ? void 0 : value.toLowerCase().includes(query === null || query === void 0 ? void 0 : query.toLowerCase());\n    }));\n  },\n  // check if all the filters enabled match at least on one option\n  matchFilters: function matchFilters(filtersEnabled, filters, row) {\n    return filtersEnabled.reduce(function (acc, _ref) {\n      var name = _ref.name,\n          type = _ref.type;\n      var isArray = type === 'array';\n      var isDate = type === 'date';\n      var filterValue = filters === null || filters === void 0 ? void 0 : filters[name];\n      var isFilterMatch = isArray && (filterValue === null || filterValue === void 0 ? void 0 : filterValue.some(function (filterObjValue) {\n        var _row$name;\n\n        return row === null || row === void 0 ? void 0 : (_row$name = row[name]) === null || _row$name === void 0 ? void 0 : _row$name.includes(filterObjValue === null || filterObjValue === void 0 ? void 0 : filterObjValue.name);\n      })) || isDate && moment(filterValue).isSame(row === null || row === void 0 ? void 0 : row[name], 'day');\n      return acc && isFilterMatch;\n    }, true);\n  }\n};\nexport default utilsFilters;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/filters/filters.js"],"names":["moment","utilsFilters","matchQuery","values","query","Boolean","some","value","toLowerCase","includes","matchFilters","filtersEnabled","filters","row","reduce","acc","name","type","isArray","isDate","filterValue","isFilterMatch","filterObjValue","isSame"],"mappings":"AAAA,OAAOA,MAAP,MAAmB,QAAnB;AAEA,IAAMC,YAAY,GAAG;AACnB;AACAC,EAAAA,UAAU,EAAE,oBAACC,MAAD,EAASC,KAAT,EAAmB;AAC7B,WAAOC,OAAO,CAACD,KAAK,IAAID,MAAM,CAACG,IAAP,CAAY,UAACC,KAAD;AAAA,aAAWA,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEC,WAAP,GAAqBC,QAArB,CAA8BL,KAA9B,aAA8BA,KAA9B,uBAA8BA,KAAK,CAAEI,WAAP,EAA9B,CAAX;AAAA,KAAZ,CAAV,CAAd;AACD,GAJkB;AAMnB;AACAE,EAAAA,YAAY,EAAE,sBAACC,cAAD,EAAiBC,OAAjB,EAA0BC,GAA1B,EAAkC;AAC9C,WAAOF,cAAc,CAACG,MAAf,CAAsB,UAACC,GAAD,QAAyB;AAAA,UAAjBC,IAAiB,QAAjBA,IAAiB;AAAA,UAAXC,IAAW,QAAXA,IAAW;AACpD,UAAMC,OAAO,GAAGD,IAAI,KAAK,OAAzB;AACA,UAAME,MAAM,GAAGF,IAAI,KAAK,MAAxB;AACA,UAAMG,WAAW,GAAGR,OAAH,aAAGA,OAAH,uBAAGA,OAAO,CAAGI,IAAH,CAA3B;AAEA,UAAMK,aAAa,GAChBH,OAAO,KAAIE,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAEd,IAAb,CAAkB,UAACgB,cAAD;AAAA;;AAAA,eAAoBT,GAApB,aAAoBA,GAApB,oCAAoBA,GAAG,CAAGG,IAAH,CAAvB,8CAAoB,UAAaP,QAAb,CAAsBa,cAAtB,aAAsBA,cAAtB,uBAAsBA,cAAc,CAAEN,IAAtC,CAApB;AAAA,OAAlB,CAAJ,CAAR,IACCG,MAAM,IAAInB,MAAM,CAACoB,WAAD,CAAN,CAAoBG,MAApB,CAA2BV,GAA3B,aAA2BA,GAA3B,uBAA2BA,GAAG,CAAGG,IAAH,CAA9B,EAAwC,KAAxC,CAFb;AAIA,aAAOD,GAAG,IAAIM,aAAd;AACD,KAVM,EAUJ,IAVI,CAAP;AAWD;AAnBkB,CAArB;AAsBA,eAAepB,YAAf","sourcesContent":["import moment from 'moment';\r\n\r\nconst utilsFilters = {\r\n  // check if any of the values matches the search query\r\n  matchQuery: (values, query) => {\r\n    return Boolean(query && values.some((value) => value?.toLowerCase().includes(query?.toLowerCase())));\r\n  },\r\n\r\n  // check if all the filters enabled match at least on one option\r\n  matchFilters: (filtersEnabled, filters, row) => {\r\n    return filtersEnabled.reduce((acc, { name, type }) => {\r\n      const isArray = type === 'array';\r\n      const isDate = type === 'date';\r\n      const filterValue = filters?.[name];\r\n\r\n      const isFilterMatch =\r\n        (isArray && filterValue?.some((filterObjValue) => row?.[name]?.includes(filterObjValue?.name))) ||\r\n        (isDate && moment(filterValue).isSame(row?.[name], 'day'));\r\n\r\n      return acc && isFilterMatch;\r\n    }, true);\r\n  },\r\n};\r\n\r\nexport default utilsFilters;\r\n"]},"metadata":{},"sourceType":"module"}