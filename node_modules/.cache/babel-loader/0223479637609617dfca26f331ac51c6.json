{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { showModal, selectHasUserTokenExpired, setTokenExpired } from 'stores';\nimport * as utils from 'utils';\nexport default function SessionExpired() {\n  _s();\n\n  var dispatch = useDispatch();\n  var hasUserTokenExpired = useSelector(selectHasUserTokenExpired);\n\n  var launchSessionExpireModal = function launchSessionExpireModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('app.sessionTimeout'),\n        maxWidth: 'xs',\n        hideCompOnBlur: false,\n        componentProps: {\n          confirmLabel: utils.string.t('app.staySignedIn'),\n          confirmMessage: utils.string.t('app.sessionExpire'),\n          hideCancelButton: true,\n          submitHandler: function submitHandler() {\n            window.location.reload();\n          },\n          cancelHandler: function cancelHandler() {\n            dispatch(setTokenExpired(false));\n          }\n        }\n      }\n    }));\n  };\n\n  useEffect(function () {\n    if (hasUserTokenExpired) {\n      launchSessionExpireModal();\n    }\n  }, [hasUserTokenExpired]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return null;\n}\n\n_s(SessionExpired, \"gWKakyHXdJVgrsnLsfpb5+YWJXo=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SessionExpired;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionExpired\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SessionExpired/SessionExpired.js"],"names":["useEffect","useDispatch","useSelector","showModal","selectHasUserTokenExpired","setTokenExpired","utils","SessionExpired","dispatch","hasUserTokenExpired","launchSessionExpireModal","component","props","fullWidth","title","string","t","maxWidth","hideCompOnBlur","componentProps","confirmLabel","confirmMessage","hideCancelButton","submitHandler","window","location","reload","cancelHandler"],"mappings":";;AAAA,SAASA,SAAT,QAA0B,OAA1B;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,yBAApB,EAA+CC,eAA/C,QAAsE,QAAtE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AACvC,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,MAAMQ,mBAAmB,GAAGP,WAAW,CAACE,yBAAD,CAAvC;;AAEA,MAAMM,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM;AACrCF,IAAAA,QAAQ,CACNL,SAAS,CAAC;AACRQ,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,oBAAf,CAFF;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE,KAJX;AAKLC,QAAAA,cAAc,EAAE;AACdC,UAAAA,YAAY,EAAEd,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,kBAAf,CADA;AAEdK,UAAAA,cAAc,EAAEf,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,mBAAf,CAFF;AAGdM,UAAAA,gBAAgB,EAAE,IAHJ;AAIdC,UAAAA,aAAa,EAAE,yBAAM;AACnBC,YAAAA,MAAM,CAACC,QAAP,CAAgBC,MAAhB;AACD,WANa;AAOdC,UAAAA,aAAa,EAAE,yBAAM;AACnBnB,YAAAA,QAAQ,CAACH,eAAe,CAAC,KAAD,CAAhB,CAAR;AACD;AATa;AALX;AAFC,KAAD,CADH,CAAR;AAsBD,GAvBD;;AAyBAL,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIS,mBAAJ,EAAyB;AACvBC,MAAAA,wBAAwB;AACzB;AACF,GAJQ,EAIN,CAACD,mBAAD,CAJM,CAAT,CA9BuC,CAkCZ;;AAE3B,SAAO,IAAP;AACD;;GArCuBF,c;UACLN,W,EAEWC,W;;;KAHNK,c","sourcesContent":["import { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { showModal, selectHasUserTokenExpired, setTokenExpired } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport default function SessionExpired() {\r\n  const dispatch = useDispatch();\r\n\r\n  const hasUserTokenExpired = useSelector(selectHasUserTokenExpired);\r\n\r\n  const launchSessionExpireModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('app.sessionTimeout'),\r\n          maxWidth: 'xs',\r\n          hideCompOnBlur: false,\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.staySignedIn'),\r\n            confirmMessage: utils.string.t('app.sessionExpire'),\r\n            hideCancelButton: true,\r\n            submitHandler: () => {\r\n              window.location.reload();\r\n            },\r\n            cancelHandler: () => {\r\n              dispatch(setTokenExpired(false));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasUserTokenExpired) {\r\n      launchSessionExpireModal();\r\n    }\r\n  }, [hasUserTokenExpired]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}