{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimSelectPolicy\\\\LinkClaimSelectPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useForm } from 'react-hook-form'; //app\n\nimport { LinkClaimSelectPolicyView } from './LinkClaimSelectPolicy.view';\nimport { useFlexiColumns } from 'hooks';\nimport * as utils from 'utils';\nimport { getPolicies, selectPolicies, selectClaimsPolicyData, claimsPolicyData, selectPoliciesFilterLoading, resetUnderwritingGroups, sortingUnderwritingGroups, selectClaimsInformation, resetLinkPolicyDocDetails, getLinkPoliciesData, selectLinkPoliciesData, selectorDmsViewFiles, selectDmsDocDetails, getViewTableDocuments, getPolicyInformation } from 'stores';\nimport * as constants from 'consts';\nimport { MultiSelect, FormDate } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLinkClaimSelectPolicy.propTypes = {\n  setConfirm: PropTypes.func.isRequired\n};\nexport default function LinkClaimSelectPolicy(_ref) {\n  _s();\n\n  var _policies$filters, _policies$filters2, _policies$filters3, _policies$filters4, _policies$filters5, _policies$filters6, _policies$filters7, _policies$filters8, _policies$filters9, _policies$filters10, _policies$filters11, _policies$filters12, _policies$filters13, _policies$filters14, _policies$filters15, _policies$filters16, _policies$filters17, _policies$filters18, _policies$filters19, _policies$filters20;\n\n  var confirm = _ref.confirm,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      setConfirm = _ref.setConfirm,\n      hasPolicyRef = _ref.hasPolicyRef,\n      formEditedStatus = _ref.formEditedStatus,\n      setActiveStep = _ref.setActiveStep,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      sectionEnabledValidationFlag = _ref.sectionEnabledValidationFlag,\n      policyInformation = _ref.policyInformation,\n      handleFormStatus = _ref.handleFormStatus;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedPolicy = _useState4[0],\n      setSelectedPolicy = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedPolicyRender = _useState6[0],\n      setSelectedPolicyRender = _useState6[1];\n\n  var policyData = useSelector(selectClaimsPolicyData);\n  var policies = useSelector(selectPolicies);\n  var claimInfo = useSelector(selectClaimsInformation);\n  var linkPoliciesData = useSelector(selectLinkPoliciesData);\n  var isTableLoading = policies === null || policies === void 0 ? void 0 : policies.isloadingTable;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectNextPolicy = _useState8[0],\n      setSelectNextPolicy = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      selectedPolicyData = _useState10[0],\n      setSelectedPolicyData = _useState10[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var docList = (viewDocumentList === null || viewDocumentList === void 0 ? void 0 : viewDocumentList.length) > 0 ? viewDocumentList : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails;\n  useEffect(function () {\n    var _policies$items;\n\n    if ((policies === null || policies === void 0 ? void 0 : (_policies$items = policies.items) === null || _policies$items === void 0 ? void 0 : _policies$items.length) > 0 && (policyData === null || policyData === void 0 ? void 0 : policyData.xbPolicyID) && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) === '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm) === '') {\n      var isPolicyExist = policies.items.some(function (policy) {\n        return policy.xbPolicyID === Number(policyData.xbPolicyID);\n      });\n      setConfirm(isPolicyExist);\n    }\n  }, [policies]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if ((linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) === '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm) === '') {\n      dispatch(resetUnderwritingGroups());\n      dispatch(sortingUnderwritingGroups([])); // eslint-disable-next-line react-hooks/exhaustive-deps\n    }\n  }, [dispatch, linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy, linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm]);\n  useEffect(function () {\n    var policyRef = selectedPolicyData === null || selectedPolicyData === void 0 ? void 0 : selectedPolicyData.policyNumber;\n\n    if (policyRef && utils.generic.isInvalidOrEmptyArray(docList)) {\n      getViewTableDocuments({\n        referenceId: policyRef,\n        sectionType: constants.DMS_CONTEXT_POLICY,\n        documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims\n      });\n    }\n  }, [selectedPolicyData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isFetchingFilters = useSelector(selectPoliciesFilterLoading);\n\n  var _useState11 = useState((linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) || constants.CLAIMS_POLICY_SEARCH_OPTION.clientName),\n      _useState12 = _slicedToArray(_useState11, 2),\n      searchBy = _useState12[0],\n      setSearchBy = _useState12[1];\n\n  var _useState13 = useState(utils.string.t('claims.searchPolicy.searchByOptions.ClientName')),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchByText = _useState14[0],\n      setSearchByText = _useState14[1];\n\n  var searchTypeCall = constants.CLAIM_POLICY_SEARCH_REQ_TYPES.search;\n  var filterTypeCall = constants.CLAIM_POLICY_SEARCH_REQ_TYPES.filter;\n  var selectOptions = [{\n    label: utils.string.t('claims.searchPolicy.searchByOptions.ClientName'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.clientName\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.PolicyRef'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.policyRef\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.Insured'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.insured\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.RiskDetails'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.riskDetails\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.Umr'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.umr\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.Reinsured'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.reinsured\n  }, {\n    label: utils.string.t('claims.searchPolicy.searchByOptions.Coverholder'),\n    value: constants.CLAIMS_POLICY_SEARCH_OPTION.coverholder\n  }];\n  var defaultFormFields = [{\n    name: 'inceptionDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'expiryDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(defaultFormFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var viewFields = [{\n    name: 'searchBy',\n    label: utils.string.t('claims.searchByClaims.label'),\n    type: 'autocompletemui',\n    options: selectOptions,\n    value: (selectOptions === null || selectOptions === void 0 ? void 0 : selectOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.value) === ((linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) || constants.CLAIMS_POLICY_SEARCH_OPTION.clientName);\n    })) || null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      inputProps: {\n        title: searchByText || ''\n      }\n    }\n  }];\n  var viewDefaultValues = utils.form.getInitialValues(viewFields);\n  var viewValidationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm2 = useForm(_objectSpread({\n    viewDefaultValues: viewDefaultValues\n  }, viewValidationSchema && {\n    resolver: yupResolver(viewValidationSchema)\n  })),\n      viewControl = _useForm2.control;\n\n  var tableFilterFields = [{\n    id: 'policyStatus',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters = policies.filters) === null || _policies$filters === void 0 ? void 0 : _policies$filters.policyStatus) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"policyStatus\",\n      search: true,\n      options: ((_policies$filters2 = policies.filters) === null || _policies$filters2 === void 0 ? void 0 : _policies$filters2.policyStatus) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'policyType',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.policyType'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters3 = policies.filters) === null || _policies$filters3 === void 0 ? void 0 : _policies$filters3.policyType) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"policyType\",\n      search: true,\n      options: ((_policies$filters4 = policies.filters) === null || _policies$filters4 === void 0 ? void 0 : _policies$filters4.policyType) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.insured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters5 = policies.filters) === null || _policies$filters5 === void 0 ? void 0 : _policies$filters5.insured) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: ((_policies$filters6 = policies.filters) === null || _policies$filters6 === void 0 ? void 0 : _policies$filters6.insured) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 176,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'reinsured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.reinsured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters7 = policies.filters) === null || _policies$filters7 === void 0 ? void 0 : _policies$filters7.reinsured) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"reinsured\",\n      search: true,\n      options: ((_policies$filters8 = policies.filters) === null || _policies$filters8 === void 0 ? void 0 : _policies$filters8.reinsured) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'coverHolder',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.coverHolder'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters9 = policies.filters) === null || _policies$filters9 === void 0 ? void 0 : _policies$filters9.coverHolder) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"coverHolder\",\n      search: true,\n      options: ((_policies$filters10 = policies.filters) === null || _policies$filters10 === void 0 ? void 0 : _policies$filters10.coverHolder) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 194,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'clientName',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.client'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters11 = policies.filters) === null || _policies$filters11 === void 0 ? void 0 : _policies$filters11.clientName) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"clientName\",\n      search: true,\n      options: ((_policies$filters12 = policies.filters) === null || _policies$filters12 === void 0 ? void 0 : _policies$filters12.clientName) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'riskDetails',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters13 = policies.filters) === null || _policies$filters13 === void 0 ? void 0 : _policies$filters13.riskDetails) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"riskDetails\",\n      search: true,\n      options: ((_policies$filters14 = policies.filters) === null || _policies$filters14 === void 0 ? void 0 : _policies$filters14.riskDetails) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'inceptionDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'inceptionDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 220,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'expiryDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'expiryDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 247,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'company',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.company'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters15 = policies.filters) === null || _policies$filters15 === void 0 ? void 0 : _policies$filters15.company) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"company\",\n      search: true,\n      options: ((_policies$filters16 = policies.filters) === null || _policies$filters16 === void 0 ? void 0 : _policies$filters16.company) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 274,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.division'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters17 = policies.filters) === null || _policies$filters17 === void 0 ? void 0 : _policies$filters17.division) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: ((_policies$filters18 = policies.filters) === null || _policies$filters18 === void 0 ? void 0 : _policies$filters18.division) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 283,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'businessTypeCode',\n    type: 'multiSelect',\n    label: utils.string.t('claims.searchPolicy.columns.businessTypeCode'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: ((_policies$filters19 = policies.filters) === null || _policies$filters19 === void 0 ? void 0 : _policies$filters19.businessTypeCode) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"businessTypeCode\",\n      search: true,\n      options: ((_policies$filters20 = policies.filters) === null || _policies$filters20 === void 0 ? void 0 : _policies$filters20.businessTypeCode) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 292,\n      columnNumber: 16\n    }, this)\n  }];\n  var columns = [{\n    id: 'policyRef',\n    label: utils.string.t('claims.searchPolicy.columns.contractPolicyRef'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'statusCode',\n    label: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'policyType',\n    label: utils.string.t('claims.searchPolicy.columns.policyType'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'umr',\n    label: utils.string.t('claims.searchPolicy.columns.umr'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: false,\n    mandatory: false\n  }, {\n    id: 'insured',\n    label: utils.string.t('claims.searchPolicy.columns.insured'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'reInsured',\n    label: utils.string.t('claims.searchPolicy.columns.reinsured'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'coverHolder',\n    label: utils.string.t('claims.searchPolicy.columns.coverHolder'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: false,\n    mandatory: false\n  }, {\n    id: 'clientName',\n    label: utils.string.t('claims.searchPolicy.columns.client'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'riskDetails',\n    label: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'inceptionDate',\n    label: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'expiryDate',\n    label: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: false,\n    mandatory: false\n  }, {\n    id: 'company',\n    label: utils.string.t('claims.searchPolicy.columns.company'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.searchPolicy.columns.division'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    mandatory: false\n  }, {\n    id: 'businessTypeCode',\n    label: utils.string.t('claims.searchPolicy.columns.businessTypeCode'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: false,\n    mandatory: false\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  var onSelectSearchBy = function onSelectSearchBy(searchByValue, searchByLabel) {\n    setSearchByText(searchByLabel);\n    setSearchBy(searchByValue);\n    dispatch(getLinkPoliciesData({\n      searchBy: searchByValue\n    }));\n  };\n\n  var handlePolicyData = function handlePolicyData(event) {\n    var policyData = policies.items.find(function (policy) {\n      return policy.xbPolicyID === Number(event.target.value);\n    });\n    dispatch(getLinkPoliciesData({\n      fieldLoader: true\n    }));\n    dispatch(claimsPolicyData(_objectSpread(_objectSpread({}, policyData), {}, {\n      xbPolicyID: event.target.value,\n      searchTerm: searchTerm\n    })));\n    dispatch(getPolicyInformation());\n    utils.dms.resetDmsFiles(dispatch);\n    dispatch(resetLinkPolicyDocDetails());\n    setSelectedPolicyData(policyData);\n    setConfirm(true);\n    setSelectedPolicy(true);\n    setSelectedPolicyRender(new Date().getTime());\n    if (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID) setSelectNextPolicy(true);\n  };\n\n  var handleSearch = function handleSearch(_ref2) {\n    var search = _ref2.search,\n        filters = _ref2.filters;\n\n    if (search) {\n      setSearchTerm(search);\n\n      if (search !== (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm)) {\n        dispatch(getLinkPoliciesData({\n          searchTerm: search\n        }));\n        dispatch(getPolicies({\n          requestType: searchTypeCall,\n          term: search,\n          direction: 'desc',\n          searchBy: searchBy,\n          viewLoader: false\n        }));\n        dispatch(getPolicies({\n          requestType: filterTypeCall,\n          term: search,\n          direction: 'desc',\n          searchBy: searchBy,\n          filterTerm: filters,\n          viewLoader: false\n        }));\n      }\n    }\n  };\n\n  var handleSearchFilter = function handleSearchFilter(_ref3) {\n    var search = _ref3.search,\n        filters = _ref3.filters;\n    dispatch(getPolicies({\n      requestType: searchTypeCall,\n      term: search,\n      direction: 'desc',\n      searchBy: searchBy,\n      filterTerm: filters,\n      viewLoader: false\n    }));\n    dispatch(getPolicies({\n      requestType: filterTypeCall,\n      term: search,\n      direction: 'desc',\n      searchBy: searchBy,\n      filterTerm: filters,\n      viewLoader: false\n    }));\n  };\n\n  var onResetFilter = function onResetFilter() {\n    reset();\n    dispatch(getPolicies({\n      requestType: searchTypeCall,\n      term: searchTerm,\n      filterTerm: [],\n      searchBy: searchBy,\n      viewLoader: false\n    }));\n  };\n\n  var onResetSearch = function onResetSearch() {\n    setSearchTerm('');\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getPolicies({\n      requestType: searchTypeCall,\n      term: searchTerm,\n      page: newPage,\n      direction: 'desc',\n      searchBy: searchBy,\n      viewLoader: false\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getPolicies({\n      requestType: searchTypeCall,\n      term: searchTerm,\n      size: rowsPerPage,\n      direction: 'desc',\n      searchBy: searchBy,\n      viewLoader: false\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    getPolicies({\n      requestType: searchTypeCall,\n      term: searchTerm,\n      sortBy: by,\n      direction: dir,\n      searchBy: searchBy,\n      viewLoader: false\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(LinkClaimSelectPolicyView, {\n    columnsArray: columnsArray,\n    rows: (policies === null || policies === void 0 ? void 0 : policies.items) || [],\n    policyData: policyData,\n    selectedPolicy: selectedPolicy,\n    selectedPolicyRender: selectedPolicyRender,\n    setSelectedPolicyRender: setSelectedPolicyRender,\n    sort: _objectSpread(_objectSpread({}, policies.sort), {}, {\n      type: 'id'\n    }),\n    pagination: {\n      page: policies.page,\n      rowsTotal: policies.itemsTotal,\n      rowsPerPage: policies.pageSize\n    },\n    tableFilterFields: tableFilterFields,\n    isFetchingFilters: isFetchingFilters,\n    viewFields: viewFields,\n    viewControl: viewControl,\n    handlers: {\n      handleSort: handleSort,\n      handleSearch: handleSearch,\n      handleSearchFilter: handleSearchFilter,\n      onResetFilter: onResetFilter,\n      onResetSearch: onResetSearch,\n      handlePolicyData: handlePolicyData,\n      handleChangePage: handleChangePage,\n      handleChangeRowsPerPage: handleChangeRowsPerPage,\n      columnProps: columnProps,\n      toggleColumn: toggleColumn,\n      onSelectSearchBy: onSelectSearchBy\n    },\n    formEditedStatus: formEditedStatus,\n    hasPolicyRef: hasPolicyRef,\n    confirm: confirm,\n    validation: validation,\n    setValidation: setValidation,\n    setActiveStep: setActiveStep,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    setFormEditedStatus: setFormEditedStatus,\n    saveStatus: saveStatus,\n    sectionEnabledValidationFlag: sectionEnabledValidationFlag,\n    policyInformation: policyInformation,\n    claimInfo: claimInfo,\n    handleFormStatus: handleFormStatus,\n    isTableLoading: isTableLoading,\n    selectNextPolicy: selectNextPolicy,\n    setSelectNextPolicy: setSelectNextPolicy\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 545,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinkClaimSelectPolicy, \"rfOhnVavdNqjGudtcCjVEfrFk68=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useForm, useForm, useFlexiColumns];\n});\n\n_c = LinkClaimSelectPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkClaimSelectPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimSelectPolicy/LinkClaimSelectPolicy.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Yup","PropTypes","yupResolver","useForm","LinkClaimSelectPolicyView","useFlexiColumns","utils","getPolicies","selectPolicies","selectClaimsPolicyData","claimsPolicyData","selectPoliciesFilterLoading","resetUnderwritingGroups","sortingUnderwritingGroups","selectClaimsInformation","resetLinkPolicyDocDetails","getLinkPoliciesData","selectLinkPoliciesData","selectorDmsViewFiles","selectDmsDocDetails","getViewTableDocuments","getPolicyInformation","constants","MultiSelect","FormDate","LinkClaimSelectPolicy","propTypes","setConfirm","func","isRequired","confirm","validation","setValidation","hasPolicyRef","formEditedStatus","setActiveStep","index","isFormsEdited","setFormEditedStatus","saveStatus","sectionEnabledValidationFlag","policyInformation","handleFormStatus","dispatch","searchTerm","setSearchTerm","selectedPolicy","setSelectedPolicy","selectedPolicyRender","setSelectedPolicyRender","policyData","policies","claimInfo","linkPoliciesData","isTableLoading","isloadingTable","selectNextPolicy","setSelectNextPolicy","selectedPolicyData","setSelectedPolicyData","viewDocumentList","savedDmsDocList","docList","length","linkPolicyDocDetails","items","xbPolicyID","searchBy","isPolicyExist","some","policy","Number","policyRef","policyNumber","generic","isInvalidOrEmptyArray","referenceId","sectionType","DMS_CONTEXT_POLICY","documentTypeKey","DMS_DOCUMENT_TYPE_SECTION_KEYS","claims","isFetchingFilters","CLAIMS_POLICY_SEARCH_OPTION","clientName","setSearchBy","string","t","searchByText","setSearchByText","searchTypeCall","CLAIM_POLICY_SEARCH_REQ_TYPES","search","filterTypeCall","filter","selectOptions","label","value","insured","riskDetails","umr","reinsured","coverholder","defaultFormFields","name","type","defaultValues","form","getInitialValues","control","reset","viewFields","options","find","item","object","nullable","required","muiComponentProps","inputProps","title","viewDefaultValues","viewValidationSchema","getValidationSchema","resolver","viewControl","tableFilterFields","id","placeholder","filters","policyStatus","content","policyType","coverHolder","getFieldProps","fullWidth","margin","clearable","variant","format","company","division","businessTypeCode","columns","sort","direction","nowrap","visible","mandatory","columnsArray","columnProps","toggleColumn","onSelectSearchBy","searchByValue","searchByLabel","handlePolicyData","event","target","fieldLoader","dms","resetDmsFiles","Date","getTime","claimID","handleSearch","requestType","term","viewLoader","filterTerm","handleSearchFilter","onResetFilter","onResetSearch","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","rowsTotal","itemsTotal","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n//app\r\nimport { LinkClaimSelectPolicyView } from './LinkClaimSelectPolicy.view';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport {\r\n  getPolicies,\r\n  selectPolicies,\r\n  selectClaimsPolicyData,\r\n  claimsPolicyData,\r\n  selectPoliciesFilterLoading,\r\n  resetUnderwritingGroups,\r\n  sortingUnderwritingGroups,\r\n  selectClaimsInformation,\r\n  resetLinkPolicyDocDetails,\r\n  getLinkPoliciesData,\r\n  selectLinkPoliciesData,\r\n  selectorDmsViewFiles,\r\n  selectDmsDocDetails,\r\n  getViewTableDocuments,\r\n  getPolicyInformation,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport { MultiSelect, FormDate } from 'components';\r\n\r\nLinkClaimSelectPolicy.propTypes = {\r\n  setConfirm: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function LinkClaimSelectPolicy({\r\n  confirm,\r\n  validation,\r\n  setValidation,\r\n  setConfirm,\r\n  hasPolicyRef,\r\n  formEditedStatus,\r\n  setActiveStep,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  sectionEnabledValidationFlag,\r\n  policyInformation,\r\n  handleFormStatus,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [selectedPolicy, setSelectedPolicy] = useState(false);\r\n  const [selectedPolicyRender, setSelectedPolicyRender] = useState('');\r\n  const policyData = useSelector(selectClaimsPolicyData);\r\n  const policies = useSelector(selectPolicies);\r\n  const claimInfo = useSelector(selectClaimsInformation);\r\n  const linkPoliciesData = useSelector(selectLinkPoliciesData);\r\n  const isTableLoading = policies?.isloadingTable;\r\n  const [selectNextPolicy, setSelectNextPolicy] = useState(false);\r\n  const [selectedPolicyData, setSelectedPolicyData] = useState({});\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const docList = viewDocumentList?.length > 0 ? viewDocumentList : savedDmsDocList?.linkPolicyDocDetails;\r\n\r\n  useEffect(() => {\r\n    if (policies?.items?.length > 0 && policyData?.xbPolicyID && linkPoliciesData?.searchBy === '' && linkPoliciesData?.searchTerm === '') {\r\n      const isPolicyExist = policies.items.some((policy) => policy.xbPolicyID === Number(policyData.xbPolicyID));\r\n      setConfirm(isPolicyExist);\r\n    }\r\n  }, [policies]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (linkPoliciesData?.searchBy === '' && linkPoliciesData?.searchTerm === '') {\r\n      dispatch(resetUnderwritingGroups());\r\n      dispatch(sortingUnderwritingGroups([]));\r\n      // eslint-disable-next-line react-hooks/exhaustive-deps\r\n    }\r\n  }, [dispatch, linkPoliciesData?.searchBy, linkPoliciesData?.searchTerm]);\r\n\r\n  useEffect(() => {\r\n    const policyRef = selectedPolicyData?.policyNumber;\r\n\r\n    if (policyRef && utils.generic.isInvalidOrEmptyArray(docList)) {\r\n      getViewTableDocuments({\r\n        referenceId: policyRef,\r\n        sectionType: constants.DMS_CONTEXT_POLICY,\r\n        documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims,\r\n      });\r\n    }\r\n  }, [selectedPolicyData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isFetchingFilters = useSelector(selectPoliciesFilterLoading);\r\n  const [searchBy, setSearchBy] = useState(linkPoliciesData?.searchBy || constants.CLAIMS_POLICY_SEARCH_OPTION.clientName);\r\n  const [searchByText, setSearchByText] = useState(utils.string.t('claims.searchPolicy.searchByOptions.ClientName'));\r\n  const searchTypeCall = constants.CLAIM_POLICY_SEARCH_REQ_TYPES.search;\r\n  const filterTypeCall = constants.CLAIM_POLICY_SEARCH_REQ_TYPES.filter;\r\n  const selectOptions = [\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.ClientName'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.clientName },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.PolicyRef'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.policyRef },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.Insured'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.insured },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.RiskDetails'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.riskDetails },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.Umr'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.umr },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.Reinsured'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.reinsured },\r\n    { label: utils.string.t('claims.searchPolicy.searchByOptions.Coverholder'), value: constants.CLAIMS_POLICY_SEARCH_OPTION.coverholder },\r\n  ];\r\n  const defaultFormFields = [\r\n    {\r\n      name: 'inceptionDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'expiryDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(defaultFormFields);\r\n  const { control, reset } = useForm({ defaultValues });\r\n  const viewFields = [\r\n    {\r\n      name: 'searchBy',\r\n      label: utils.string.t('claims.searchByClaims.label'),\r\n      type: 'autocompletemui',\r\n      options: selectOptions,\r\n      value:\r\n        selectOptions?.find((item) => item?.value === (linkPoliciesData?.searchBy || constants.CLAIMS_POLICY_SEARCH_OPTION.clientName)) ||\r\n        null,\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          title: searchByText || '',\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const viewDefaultValues = utils.form.getInitialValues(viewFields);\r\n  const viewValidationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control: viewControl } = useForm({\r\n    viewDefaultValues,\r\n    ...(viewValidationSchema && { resolver: yupResolver(viewValidationSchema) }),\r\n  });\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'policyStatus',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.policyStatus || [],\r\n      content: <MultiSelect id=\"policyStatus\" search options={policies.filters?.policyStatus || []} />,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.policyType'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.policyType || [],\r\n      content: <MultiSelect id=\"policyType\" search options={policies.filters?.policyType || []} />,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.insured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.insured || [],\r\n      content: <MultiSelect id=\"insured\" search options={policies.filters?.insured || []} />,\r\n    },\r\n    {\r\n      id: 'reinsured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.reinsured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.reinsured || [],\r\n      content: <MultiSelect id=\"reinsured\" search options={policies.filters?.reinsured || []} />,\r\n    },\r\n    {\r\n      id: 'coverHolder',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.coverHolder'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.coverHolder || [],\r\n      content: <MultiSelect id=\"coverHolder\" search options={policies.filters?.coverHolder || []} />,\r\n    },\r\n    {\r\n      id: 'clientName',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.client'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.clientName || [],\r\n      content: <MultiSelect id=\"clientName\" search options={policies.filters?.clientName || []} />,\r\n    },\r\n    {\r\n      id: 'riskDetails',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.riskDetails || [],\r\n      content: <MultiSelect id=\"riskDetails\" search options={policies.filters?.riskDetails || []} />,\r\n    },\r\n    {\r\n      id: 'inceptionDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'inceptionDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'expiryDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'expiryDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'company',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.company'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.company || [],\r\n      content: <MultiSelect id=\"company\" search options={policies.filters?.company || []} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.division'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.division || [],\r\n      content: <MultiSelect id=\"division\" search options={policies.filters?.division || []} />,\r\n    },\r\n    {\r\n      id: 'businessTypeCode',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.searchPolicy.columns.businessTypeCode'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: policies.filters?.businessTypeCode || [],\r\n      content: <MultiSelect id=\"businessTypeCode\" search options={policies.filters?.businessTypeCode || []} />,\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      id: 'policyRef',\r\n      label: utils.string.t('claims.searchPolicy.columns.contractPolicyRef'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'statusCode',\r\n      label: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      label: utils.string.t('claims.searchPolicy.columns.policyType'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'umr',\r\n      label: utils.string.t('claims.searchPolicy.columns.umr'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: false,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      label: utils.string.t('claims.searchPolicy.columns.insured'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'reInsured',\r\n      label: utils.string.t('claims.searchPolicy.columns.reinsured'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'coverHolder',\r\n      label: utils.string.t('claims.searchPolicy.columns.coverHolder'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: false,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'clientName',\r\n      label: utils.string.t('claims.searchPolicy.columns.client'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'riskDetails',\r\n      label: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'inceptionDate',\r\n      label: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'expiryDate',\r\n      label: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: false,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'company',\r\n      label: utils.string.t('claims.searchPolicy.columns.company'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.searchPolicy.columns.division'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: false,\r\n    },\r\n    {\r\n      id: 'businessTypeCode',\r\n      label: utils.string.t('claims.searchPolicy.columns.businessTypeCode'),\r\n      sort: { type: '', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: false,\r\n      mandatory: false,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  const onSelectSearchBy = (searchByValue, searchByLabel) => {\r\n    setSearchByText(searchByLabel);\r\n    setSearchBy(searchByValue);\r\n    dispatch(getLinkPoliciesData({ searchBy: searchByValue }));\r\n  };\r\n\r\n  const handlePolicyData = (event) => {\r\n    const policyData = policies.items.find((policy) => policy.xbPolicyID === Number(event.target.value));\r\n    dispatch(getLinkPoliciesData({ fieldLoader: true }));\r\n    dispatch(\r\n      claimsPolicyData({\r\n        ...policyData,\r\n        xbPolicyID: event.target.value,\r\n        searchTerm,\r\n      })\r\n    );\r\n    dispatch(getPolicyInformation());\r\n    utils.dms.resetDmsFiles(dispatch);\r\n    dispatch(resetLinkPolicyDocDetails());\r\n    setSelectedPolicyData(policyData);\r\n    setConfirm(true);\r\n    setSelectedPolicy(true);\r\n    setSelectedPolicyRender(new Date().getTime());\r\n    if (claimInfo?.claimID) setSelectNextPolicy(true);\r\n  };\r\n\r\n  const handleSearch = ({ search, filters }) => {\r\n    if (search) {\r\n      setSearchTerm(search);\r\n      if (search !== linkPoliciesData?.searchTerm) {\r\n        dispatch(getLinkPoliciesData({ searchTerm: search }));\r\n        dispatch(\r\n          getPolicies({\r\n            requestType: searchTypeCall,\r\n            term: search,\r\n            direction: 'desc',\r\n            searchBy,\r\n            viewLoader: false,\r\n          })\r\n        );\r\n        dispatch(\r\n          getPolicies({\r\n            requestType: filterTypeCall,\r\n            term: search,\r\n            direction: 'desc',\r\n            searchBy,\r\n            filterTerm: filters,\r\n            viewLoader: false,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearchFilter = ({ search, filters }) => {\r\n    dispatch(\r\n      getPolicies({\r\n        requestType: searchTypeCall,\r\n        term: search,\r\n        direction: 'desc',\r\n        searchBy,\r\n        filterTerm: filters,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n    dispatch(\r\n      getPolicies({\r\n        requestType: filterTypeCall,\r\n        term: search,\r\n        direction: 'desc',\r\n        searchBy,\r\n        filterTerm: filters,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    reset();\r\n    dispatch(\r\n      getPolicies({\r\n        requestType: searchTypeCall,\r\n        term: searchTerm,\r\n        filterTerm: [],\r\n        searchBy,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onResetSearch = () => {\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(\r\n      getPolicies({\r\n        requestType: searchTypeCall,\r\n        term: searchTerm,\r\n        page: newPage,\r\n        direction: 'desc',\r\n        searchBy,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(\r\n      getPolicies({\r\n        requestType: searchTypeCall,\r\n        term: searchTerm,\r\n        size: rowsPerPage,\r\n        direction: 'desc',\r\n        searchBy,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    getPolicies({\r\n      requestType: searchTypeCall,\r\n      term: searchTerm,\r\n      sortBy: by,\r\n      direction: dir,\r\n      searchBy,\r\n      viewLoader: false,\r\n    });\r\n  };\r\n\r\n  return (\r\n    <LinkClaimSelectPolicyView\r\n      columnsArray={columnsArray}\r\n      rows={policies?.items || []}\r\n      policyData={policyData}\r\n      selectedPolicy={selectedPolicy}\r\n      selectedPolicyRender={selectedPolicyRender}\r\n      setSelectedPolicyRender={setSelectedPolicyRender}\r\n      sort={{\r\n        ...policies.sort,\r\n        type: 'id',\r\n      }}\r\n      pagination={{\r\n        page: policies.page,\r\n        rowsTotal: policies.itemsTotal,\r\n        rowsPerPage: policies.pageSize,\r\n      }}\r\n      tableFilterFields={tableFilterFields}\r\n      isFetchingFilters={isFetchingFilters}\r\n      viewFields={viewFields}\r\n      viewControl={viewControl}\r\n      handlers={{\r\n        handleSort,\r\n        handleSearch,\r\n        handleSearchFilter,\r\n        onResetFilter,\r\n        onResetSearch,\r\n        handlePolicyData,\r\n        handleChangePage,\r\n        handleChangeRowsPerPage,\r\n        columnProps,\r\n        toggleColumn,\r\n        onSelectSearchBy,\r\n      }}\r\n      formEditedStatus={formEditedStatus}\r\n      hasPolicyRef={hasPolicyRef}\r\n      confirm={confirm}\r\n      validation={validation}\r\n      setValidation={setValidation}\r\n      setActiveStep={setActiveStep}\r\n      index={index}\r\n      isFormsEdited={isFormsEdited}\r\n      setFormEditedStatus={setFormEditedStatus}\r\n      saveStatus={saveStatus}\r\n      sectionEnabledValidationFlag={sectionEnabledValidationFlag}\r\n      policyInformation={policyInformation}\r\n      claimInfo={claimInfo}\r\n      handleFormStatus={handleFormStatus}\r\n      isTableLoading={isTableLoading}\r\n      selectNextPolicy={selectNextPolicy}\r\n      setSelectNextPolicy={setSelectNextPolicy}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}