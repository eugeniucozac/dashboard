{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './ClaimsTabTableRow.styles';\nimport { Link, TableCell } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableRowView.prototype = {\n  claim: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  columnProps: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    selectClaim: PropTypes.func.isRequired,\n    clickClaim: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableRowView(_ref) {\n  var _classesRow, _claim$claimReference;\n\n  var claim = _ref.claim,\n      isSelected = _ref.isSelected,\n      columnProps = _ref.columnProps,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTabTableRow'\n  })();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: handlers.selectClaim(claim),\n    className: classnames(classesRow),\n    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          text: ((_claim$claimReference = claim.claimReference) === null || _claim$claimReference === void 0 ? void 0 : _claim$claimReference.toString()) || '',\n          color: \"secondary\",\n          onClick: handlers.clickClaim(claim)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossRef')), {}, {\n      children: claim.lossRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossDateFrom')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim.claimLossFromDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n      children: claim.insured\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyRef')), {}, {\n      children: claim.policyRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n      children: claim.division\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimStatus')), {}, {\n      children: claim.claimStatus\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('stage')), {}, {\n      children: claim.claimStage\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n      children: claim.assignedTo\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: claim.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lastUpdated')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim.lastUpdatedDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTabTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTableRow.view.js"],"names":["React","PropTypes","classnames","styles","Link","TableCell","utils","config","makeStyles","Box","TableRow","ClaimsTabTableRowView","prototype","claim","object","isRequired","isSelected","bool","columnProps","handlers","shape","selectClaim","func","clickClaim","classes","name","classesRow","row","rowSelected","claimReference","toString","lossRef","string","t","value","date","claimLossFromDate","format","ui","text","insured","policyRef","division","claimStatus","claimStage","assignedTo","team","lastUpdatedDate","priority"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ClaimsTabTableRow.styles';\r\nimport { Link, TableCell } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\r\n\r\nClaimsTabTableRowView.prototype = {\r\n  claim: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  columnProps: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    selectClaim: PropTypes.func.isRequired,\r\n    clickClaim: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableRowView({ claim, isSelected, columnProps, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTabTableRow' })();\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={handlers.selectClaim(claim)} className={classnames(classesRow)}>\r\n      <TableCell {...columnProps('claimRef')}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <Link text={claim.claimReference?.toString() || ''} color=\"secondary\" onClick={handlers.clickClaim(claim)} />\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossRef')}>{claim.lossRef}</TableCell>\r\n      <TableCell {...columnProps('lossDateFrom')}>\r\n        {utils.string.t('format.date', { value: { date: claim.claimLossFromDate , format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('insured')}>{claim.insured}</TableCell>\r\n      <TableCell {...columnProps('policyRef')}>{claim.policyRef}</TableCell>\r\n      <TableCell {...columnProps('division')}>{claim.division}</TableCell>\r\n      <TableCell {...columnProps('claimStatus')}>{claim.claimStatus}</TableCell>\r\n      <TableCell {...columnProps('stage')}>{claim.claimStage}</TableCell>\r\n      <TableCell {...columnProps('assignedTo')}>{claim.assignedTo}</TableCell>\r\n      <TableCell {...columnProps('team')}>{claim.team}</TableCell>\r\n      <TableCell {...columnProps('lastUpdated')}>\r\n        {utils.string.t('format.date', { value: { date: claim.lastUpdatedDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('priority')}>{claim?.priority}</TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}