{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\RowTheme.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //app\n\nimport styles from './LossActionTable.styles';\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\nimport { TableRowHeader } from 'modules';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function RowTheme(_ref) {\n  _s();\n\n  var data = _ref.data,\n      columnProps = _ref.columnProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var classes = makeStyles(styles, {\n    name: 'LossActionTable'\n  })({\n    expanded: isOpen\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.row,\n      \"data-testid\": \"search-row-\".concat(data === null || data === void 0 ? void 0 : data.actionId),\n      hover: true,\n      children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actionId')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.actionId),\n        children: /*#__PURE__*/_jsxDEV(Link, {\n          text: \"\".concat(data === null || data === void 0 ? void 0 : data.actionId, \"7685437547734567\"),\n          color: \"secondary\",\n          onClick: function onClick() {}\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 23,\n          columnNumber: 15\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('name')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.name),\n        children: /*#__PURE__*/_jsxDEV(Chip, {\n          label: data === null || data === void 0 ? void 0 : data.name,\n          size: \"small\",\n          type: \"error\",\n          color: \"primary\",\n          variant: \"outlined\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 15\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.description),\n        children: data === null || data === void 0 ? void 0 : data.description\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.team),\n        children: data === null || data === void 0 ? void 0 : data.team\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.assignedTo),\n        children: data === null || data === void 0 ? void 0 : data.assignedTo\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.createdDate),\n        children: utils.string.t('format.date', {\n          value: {\n            date: data === null || data === void 0 ? void 0 : data.createdDate,\n            format: config.ui.format.date.textTime\n          }\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDate')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.targetDate),\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          color: \"error\",\n          children: utils.string.t('format.date', {\n            value: {\n              date: data === null || data === void 0 ? void 0 : data.targetDate,\n              format: config.ui.format.date.text\n            }\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 15\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.priority),\n        children: data === null || data === void 0 ? void 0 : data.priority\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.status),\n        children: (data === null || data === void 0 ? void 0 : data.status) && /*#__PURE__*/_jsxDEV(Status, {\n          size: \"sm\",\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: data === null || data === void 0 ? void 0 : data.status\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 56\n          }, this),\n          status: (data === null || data === void 0 ? void 0 : data.status) === \"Completed\" ? 'success' : 'error'\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 32\n        }, this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.insured),\n        children: data === null || data === void 0 ? void 0 : data.insured\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n        \"data-testid\": \"row-col-\".concat(data === null || data === void 0 ? void 0 : data.division),\n        children: data === null || data === void 0 ? void 0 : data.division\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 13\n      }, this)]\n    }, data === null || data === void 0 ? void 0 : data.claimID, true, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 11\n    }, this)\n  }, void 0, false);\n}\n\n_s(RowTheme, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = RowTheme;\n\nvar _c;\n\n$RefreshReg$(_c, \"RowTheme\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/RowTheme.js"],"names":["React","useState","styles","TableCell","Status","Translate","Chip","Link","TableRowHeader","utils","config","makeStyles","TableRow","Typography","RowTheme","data","columnProps","isOpen","setIsOpen","classes","name","expanded","row","actionId","description","team","assignedTo","createdDate","string","t","value","date","format","ui","textTime","targetDate","text","priority","status","insured","division","claimID"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n//app\r\nimport styles from './LossActionTable.styles';\r\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\r\nimport { TableRowHeader } from 'modules';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\r\n\r\nexport function RowTheme({ data, columnProps}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'LossActionTable' })({ expanded: isOpen });\r\n\r\n  return (\r\n    <>\r\n    \r\n   \r\n          <TableRow className={classes.row} key={data?.claimID} data-testid={`search-row-${data?.actionId}`} hover>\r\n            <TableCell {...columnProps('actionId')} data-testid={`row-col-${data?.actionId}`}>\r\n              <Link text={`${data?.actionId}7685437547734567`} color=\"secondary\" onClick={() => {}} />\r\n            </TableCell>\r\n            <TableCell {...columnProps('name')} data-testid={`row-col-${data?.name}`}>\r\n              <Chip\r\n                label={data?.name}\r\n                size=\"small\"\r\n                type=\"error\"\r\n                color='primary'\r\n                variant=\"outlined\"\r\n              />\r\n            </TableCell>\r\n            <TableCell {...columnProps('description')} data-testid={`row-col-${data?.description}`}>\r\n              {data?.description}\r\n            </TableCell>\r\n            <TableCell {...columnProps('team')} data-testid={`row-col-${data?.team}`}>\r\n              {data?.team}\r\n            </TableCell>\r\n            <TableCell {...columnProps('assignedTo')} data-testid={`row-col-${data?.assignedTo}`}>\r\n              {data?.assignedTo}\r\n            </TableCell>\r\n            <TableCell {...columnProps('createdDate')} data-testid={`row-col-${data?.createdDate}`}>\r\n              {utils.string.t('format.date', {\r\n                value: { date: data?.createdDate, format: config.ui.format.date.textTime },\r\n              })}\r\n            </TableCell>\r\n            <TableCell {...columnProps('targetDate')} data-testid={`row-col-${data?.targetDate}`}>\r\n              <Typography variant=\"body2\" color=\"error\">\r\n                {utils.string.t('format.date', {\r\n                  value: { date: data?.targetDate, format: config.ui.format.date.text },\r\n                })}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell {...columnProps('priority')} data-testid={`row-col-${data?.priority}`}>\r\n              {data?.priority}\r\n            </TableCell>\r\n            <TableCell {...columnProps('status')} data-testid={`row-col-${data?.status}`}>\r\n              {data?.status && <Status size=\"sm\" text={<Translate label={data?.status} />} status={data?.status === \"Completed\" ? 'success' : 'error'} />}\r\n            </TableCell>\r\n            <TableCell {...columnProps('insured')} data-testid={`row-col-${data?.insured}`}>\r\n              {data?.insured}\r\n            </TableCell>\r\n            <TableCell {...columnProps('division')} data-testid={`row-col-${data?.division}`}>\r\n              {data?.division}\r\n            </TableCell>\r\n          </TableRow>\r\n   \r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}