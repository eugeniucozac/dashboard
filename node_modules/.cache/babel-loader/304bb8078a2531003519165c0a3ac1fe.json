{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskRow\\\\AddRiskRow.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { useFieldArray } from 'react-hook-form';\nimport classnames from 'classnames';\nimport mapValues from 'lodash/mapValues';\nimport merge from 'lodash/merge';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get'; // app\n\nimport styles from './AddRiskRow.styles';\nimport { Button, Overflow, TableCell, TableHead } from 'components';\nimport { AddRiskFormField } from 'modules';\nimport { selectRiskCountries } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport { COUNTRY_RATES } from 'consts'; // mui\n\nimport { Box, Divider, Table, TableBody, TableRow, makeStyles } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAddRiskRowView.propTypes = {\n  field: PropTypes.object.isRequired,\n  cols: PropTypes.array.isRequired,\n  validFields: PropTypes.array.isRequired,\n  formProps: PropTypes.object.isRequired,\n  overflow: PropTypes.bool,\n  formatData: PropTypes.string,\n  removeLastField: PropTypes.bool,\n  handlers: PropTypes.shape({\n    launchPasteFromExcelModal: PropTypes.func.isRequired,\n    closePasteFromExcelModal: PropTypes.func.isRequired\n  })\n};\nexport function AddRiskRowView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var field = _ref.field,\n      cols = _ref.cols,\n      validFields = _ref.validFields,\n      formProps = _ref.formProps,\n      overflow = _ref.overflow,\n      handlers = _ref.handlers,\n      formatData = _ref.formatData,\n      removeLastField = _ref.removeLastField;\n  var classes = makeStyles(styles, {\n    name: 'AddRiskRow'\n  })();\n  var media = useMedia();\n  var countries = useSelector(selectRiskCountries);\n\n  var _useFieldArray = useFieldArray({\n    control: formProps.control,\n    name: field.name,\n    defaultValue: []\n  }),\n      fields = _useFieldArray.fields,\n      append = _useFieldArray.append,\n      remove = _useFieldArray.remove;\n\n  var getEmptyObject = function getEmptyObject() {\n    return mapValues(omit(fields[0], ['id']), function (value, key) {\n      var defaultValue = get(field.arrayItemDef.find(function (def) {\n        return def.name === key;\n      }), 'defaultValue');\n      return typeof defaultValue !== 'undefined' ? defaultValue : null;\n    });\n  };\n\n  var referValue = function referValue(value) {\n    return value === true || value.toUpperCase() === 'TRUE' || value === '1' || value.toUpperCase() === 'YES' ? true : false;\n  };\n\n  var formatCountryAndRates = function formatCountryAndRates(obj) {\n    return obj ? obj.map(function (item) {\n      var country = utils.risk.countryDetail(countries, item.code) || null;\n      var refer = referValue(item.refer);\n      return {\n        code: country ? _objectSpread({}, country) : null,\n        rate: item.rate ? parseFloat(item.rate) : 0,\n        refer: refer\n      };\n    }) : null;\n  };\n\n  var appendHandler = function appendHandler(obj) {\n    var formattedObj;\n\n    switch (formatData) {\n      case COUNTRY_RATES:\n        formattedObj = formatCountryAndRates(obj);\n        break;\n\n      default:\n        formattedObj = obj === null || obj === void 0 ? void 0 : obj.map(function (item) {\n          return utils.generic.formatFields(item, field === null || field === void 0 ? void 0 : field.arrayItemDef);\n        });\n    }\n\n    append(formattedObj || getEmptyObject());\n  };\n\n  var removeHandler = function removeHandler(idx) {\n    if (fields && fields.length === 1 && idx === 0 && !removeLastField) {\n      formProps.setValue(field.name, [getEmptyObject()]);\n    } else {\n      remove(idx);\n    }\n  };\n\n  var renderTable = function renderTable() {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        columns: cols,\n        nestedClasses: {\n          tableHead: classes.tableHead,\n          tableCell: classes.tableHeadCell\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        \"data-testid\": \"risk-array-table\",\n        className: classes.tableBody,\n        children: fields.map(function (item, index) {\n          var visibleDefs = field.arrayItemDef.filter(function (f) {\n            return f.type !== 'hidden';\n          });\n          var hiddenDefs = field.arrayItemDef.filter(function (f) {\n            return f.type === 'hidden';\n          });\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [fields.length > 1 && index > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableRowDivider,\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: cols.length,\n                className: classes.tableRowDividerCell,\n                children: /*#__PURE__*/_jsxDEV(Divider, {\n                  classes: {\n                    root: classes.divider\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableRow,\n              children: [hiddenDefs.map(function (def) {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.tableRowCellHidden,\n                  children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, def), {}, {\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name]\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 25\n                  }, _this)\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 23\n                }, _this);\n              }), visibleDefs.map(function (def, defIndex) {\n                var _classnames;\n\n                if (!validFields.includes(def.type)) return null;\n\n                var label = def.label,\n                    fieldProps = _objectWithoutProperties(def, [\"label\"]);\n\n                var condition = utils.risk.getCondition(def, field.arrayItemDef);\n                var conditionValue = condition && formProps.watch(\"\".concat(field.name, \"[\").concat(index, \"].\").concat(condition.name));\n                var isValid = !condition || condition && utils.risk.isConditionValid(condition, conditionValue);\n                var isDisabled = condition && !isValid;\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classnames((_classnames = {}, _defineProperty(_classnames, classes.tableRowCell, true), _defineProperty(_classnames, classes.tableRowCellDisabled, isDisabled), _defineProperty(_classnames, classes.tableRowCellFirst, defIndex === 0), _defineProperty(_classnames, classes.tableRowCellMiddle, defIndex > 0 && defIndex < visibleDefs.length - 1), _defineProperty(_classnames, classes.tableRowCellLast, defIndex === visibleDefs.length - 1), _defineProperty(_classnames, classes.tableRowAlignCenter, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.alignCenter), _classnames)),\n                  style: _objectSpread({}, fieldProps.width && {\n                    width: \"\".concat(fieldProps.width, \"%\")\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, fieldProps), {}, {\n                      label: media.mobile ? label : undefined,\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name],\n                      muiComponentProps: merge(fieldProps.muiComponentProps || {}, _objectSpread({}, ['text', 'number'].includes(def.type) && {\n                        InputProps: {\n                          disabled: isDisabled\n                        }\n                      }))\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 25\n                  }, _this)\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 23\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classnames([classes.deleteCell, classes.tableRowCell]),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  danger: true,\n                  size: \"small\",\n                  icon: HighlightOffIcon,\n                  disabled: removeLastField ? false : fields.length === 1,\n                  variant: media.mobile ? 'outlined' : 'text',\n                  text: media.mobile ? utils.string.t('app.delete') : undefined,\n                  nestedClasses: {\n                    btn: classes.deleteBtn\n                  },\n                  onClick: function onClick() {\n                    return removeHandler(index);\n                  },\n                  \"data-testid\": \"btn-row-delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, _this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [overflow && /*#__PURE__*/_jsxDEV(Overflow, {\n      style: media.mobile ? undefined : {\n        marginTop: -24\n      },\n      children: renderTable()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 20\n    }, this), !overflow && renderTable(), /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 1.5,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          icon: AddIcon,\n          text: utils.string.t('app.add'),\n          onClick: function onClick() {\n            return appendHandler();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 208,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        variant: \"outlined\",\n        text: utils.string.t('app.pasteFromExcel'),\n        onClick: function onClick() {\n          return handlers.launchPasteFromExcelModal({\n            name: field.name,\n            headers: field.arrayItemDef.reduce(function (acc, def) {\n              return [].concat(_toConsumableArray(acc), [{\n                key: def.name,\n                value: ''\n              }]);\n            }, []),\n            handlers: {\n              submit: function submit(data) {\n                appendHandler(data);\n                handlers.closePasteFromExcelModal();\n              }\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 212,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddRiskRowView, \"44IMurZPqqcrUbdnMXxkVloJmXs=\", false, function () {\n  return [useMedia, useSelector, useFieldArray];\n});\n\n_c = AddRiskRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskRow/AddRiskRow.view.js"],"names":["React","Fragment","PropTypes","useSelector","useFieldArray","classnames","mapValues","merge","omit","get","styles","Button","Overflow","TableCell","TableHead","AddRiskFormField","selectRiskCountries","useMedia","utils","COUNTRY_RATES","Box","Divider","Table","TableBody","TableRow","makeStyles","HighlightOffIcon","AddIcon","AddRiskRowView","propTypes","field","object","isRequired","cols","array","validFields","formProps","overflow","bool","formatData","string","removeLastField","handlers","shape","launchPasteFromExcelModal","func","closePasteFromExcelModal","classes","name","media","countries","control","defaultValue","fields","append","remove","getEmptyObject","value","key","arrayItemDef","find","def","referValue","toUpperCase","formatCountryAndRates","obj","map","item","country","risk","countryDetail","code","refer","rate","parseFloat","appendHandler","formattedObj","generic","formatFields","removeHandler","idx","length","setValue","renderTable","table","tableHead","tableCell","tableHeadCell","tableBody","index","visibleDefs","filter","f","type","hiddenDefs","tableRowDivider","tableRowDividerCell","root","divider","tableRow","tableRowCellHidden","defIndex","includes","label","fieldProps","condition","getCondition","conditionValue","watch","isValid","isConditionValid","isDisabled","tableRowCell","tableRowCellDisabled","tableRowCellFirst","tableRowCellMiddle","tableRowCellLast","tableRowAlignCenter","alignCenter","width","mobile","undefined","muiComponentProps","InputProps","disabled","deleteCell","t","btn","deleteBtn","id","marginTop","headers","reduce","acc","submit","data"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { useFieldArray } from 'react-hook-form';\r\nimport classnames from 'classnames';\r\nimport mapValues from 'lodash/mapValues';\r\nimport merge from 'lodash/merge';\r\nimport omit from 'lodash/omit';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './AddRiskRow.styles';\r\nimport { Button, Overflow, TableCell, TableHead } from 'components';\r\nimport { AddRiskFormField } from 'modules';\r\nimport { selectRiskCountries } from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { COUNTRY_RATES } from 'consts';\r\n\r\n// mui\r\nimport { Box, Divider, Table, TableBody, TableRow, makeStyles } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nAddRiskRowView.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  validFields: PropTypes.array.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n  overflow: PropTypes.bool,\r\n  formatData: PropTypes.string,\r\n  removeLastField: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    launchPasteFromExcelModal: PropTypes.func.isRequired,\r\n    closePasteFromExcelModal: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport function AddRiskRowView({ field, cols, validFields, formProps, overflow, handlers, formatData, removeLastField }) {\r\n  const classes = makeStyles(styles, { name: 'AddRiskRow' })();\r\n  const media = useMedia();\r\n  const countries = useSelector(selectRiskCountries);\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control: formProps.control,\r\n    name: field.name,\r\n    defaultValue: [],\r\n  });\r\n\r\n  const getEmptyObject = () => {\r\n    return mapValues(omit(fields[0], ['id']), (value, key) => {\r\n      const defaultValue = get(\r\n        field.arrayItemDef.find((def) => def.name === key),\r\n        'defaultValue'\r\n      );\r\n\r\n      return typeof defaultValue !== 'undefined' ? defaultValue : null;\r\n    });\r\n  };\r\n\r\n  const referValue = (value) => {\r\n    return value === true || value.toUpperCase() === 'TRUE' || value === '1' || value.toUpperCase() === 'YES' ? true : false;\r\n  };\r\n\r\n  const formatCountryAndRates = (obj) => {\r\n    return obj\r\n      ? obj.map((item) => {\r\n          const country = utils.risk.countryDetail(countries, item.code) || null;\r\n          const refer = referValue(item.refer);\r\n          return {\r\n            code: country ? { ...country } : null,\r\n            rate: item.rate ? parseFloat(item.rate) : 0,\r\n            refer,\r\n          };\r\n        })\r\n      : null;\r\n  };\r\n\r\n  const appendHandler = (obj) => {\r\n    let formattedObj;\r\n    switch (formatData) {\r\n      case COUNTRY_RATES:\r\n        formattedObj = formatCountryAndRates(obj);\r\n        break;\r\n      default:\r\n        formattedObj = obj?.map((item) => utils.generic.formatFields(item, field?.arrayItemDef));\r\n    }\r\n    append(formattedObj || getEmptyObject());\r\n  };\r\n\r\n  const removeHandler = (idx) => {\r\n    if (fields && fields.length === 1 && idx === 0 && !removeLastField) {\r\n      formProps.setValue(field.name, [getEmptyObject()]);\r\n    } else {\r\n      remove(idx);\r\n    }\r\n  };\r\n\r\n  const renderTable = () => {\r\n    return (\r\n      <Table size=\"small\" className={classes.table}>\r\n        <TableHead\r\n          columns={cols}\r\n          nestedClasses={{\r\n            tableHead: classes.tableHead,\r\n            tableCell: classes.tableHeadCell,\r\n          }}\r\n        />\r\n\r\n        <TableBody data-testid=\"risk-array-table\" className={classes.tableBody}>\r\n          {fields.map((item, index) => {\r\n            const visibleDefs = field.arrayItemDef.filter((f) => f.type !== 'hidden');\r\n            const hiddenDefs = field.arrayItemDef.filter((f) => f.type === 'hidden');\r\n\r\n            return (\r\n              <Fragment key={item.id}>\r\n                {fields.length > 1 && index > 0 && (\r\n                  <TableRow className={classes.tableRowDivider}>\r\n                    <TableCell colSpan={cols.length} className={classes.tableRowDividerCell}>\r\n                      <Divider classes={{ root: classes.divider }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n\r\n                <TableRow className={classes.tableRow}>\r\n                  {hiddenDefs.map((def) => {\r\n                    return (\r\n                      <TableCell key={def.name} className={classes.tableRowCellHidden}>\r\n                        <AddRiskFormField\r\n                          field={{\r\n                            ...def,\r\n                            name: `${field.name}[${index}].${def.name}`,\r\n                            defaultValue: item[def.name],\r\n                          }}\r\n                          formProps={formProps}\r\n                        />\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n\r\n                  {visibleDefs.map((def, defIndex) => {\r\n                    if (!validFields.includes(def.type)) return null;\r\n\r\n                    const { label, ...fieldProps } = def;\r\n                    const condition = utils.risk.getCondition(def, field.arrayItemDef);\r\n                    const conditionValue = condition && formProps.watch(`${field.name}[${index}].${condition.name}`);\r\n                    const isValid = !condition || (condition && utils.risk.isConditionValid(condition, conditionValue));\r\n                    const isDisabled = condition && !isValid;\r\n\r\n                    return (\r\n                      <TableCell\r\n                        key={def.name}\r\n                        className={classnames({\r\n                          [classes.tableRowCell]: true,\r\n                          [classes.tableRowCellDisabled]: isDisabled,\r\n                          [classes.tableRowCellFirst]: defIndex === 0,\r\n                          [classes.tableRowCellMiddle]: defIndex > 0 && defIndex < visibleDefs.length - 1,\r\n                          [classes.tableRowCellLast]: defIndex === visibleDefs.length - 1,\r\n                          [classes.tableRowAlignCenter]: fieldProps?.alignCenter,\r\n                        })}\r\n                        style={{ ...(fieldProps.width && { width: `${fieldProps.width}%` }) }}\r\n                      >\r\n                        <AddRiskFormField\r\n                          field={{\r\n                            ...fieldProps,\r\n                            label: media.mobile ? label : undefined,\r\n                            name: `${field.name}[${index}].${def.name}`,\r\n                            defaultValue: item[def.name],\r\n                            muiComponentProps: merge(fieldProps.muiComponentProps || {}, {\r\n                              ...(['text', 'number'].includes(def.type) && { InputProps: { disabled: isDisabled } }),\r\n                            }),\r\n                          }}\r\n                          formProps={formProps}\r\n                        />\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n\r\n                  <TableCell className={classnames([classes.deleteCell, classes.tableRowCell])}>\r\n                    <Button\r\n                      danger\r\n                      size=\"small\"\r\n                      icon={HighlightOffIcon}\r\n                      disabled={removeLastField ? false : fields.length === 1}\r\n                      variant={media.mobile ? 'outlined' : 'text'}\r\n                      text={media.mobile ? utils.string.t('app.delete') : undefined}\r\n                      nestedClasses={{ btn: classes.deleteBtn }}\r\n                      onClick={() => removeHandler(index)}\r\n                      data-testid=\"btn-row-delete\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {overflow && <Overflow style={media.mobile ? undefined : { marginTop: -24 }}>{renderTable()}</Overflow>}\r\n\r\n      {!overflow && renderTable()}\r\n\r\n      <Box display=\"flex\" mt={2}>\r\n        <Box mr={1.5}>\r\n          <Button color=\"secondary\" size=\"small\" icon={AddIcon} text={utils.string.t('app.add')} onClick={() => appendHandler()} />\r\n        </Box>\r\n\r\n        <Button\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          variant=\"outlined\"\r\n          text={utils.string.t('app.pasteFromExcel')}\r\n          onClick={() =>\r\n            handlers.launchPasteFromExcelModal({\r\n              name: field.name,\r\n              headers: field.arrayItemDef.reduce((acc, def) => {\r\n                return [...acc, { key: def.name, value: '' }];\r\n              }, []),\r\n              handlers: {\r\n                submit: (data) => {\r\n                  appendHandler(data);\r\n                  handlers.closePasteFromExcelModal();\r\n                },\r\n              },\r\n            })\r\n          }\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}