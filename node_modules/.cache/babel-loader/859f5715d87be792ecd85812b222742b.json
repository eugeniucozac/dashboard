{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormRadio\\\\FormRadio.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Controller } from 'react-hook-form';\nimport classnames from 'classnames'; // app\n\nimport styles from './FormRadio.styles';\nimport { ErrorMessage } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { FormControlLabel, FormLabel, Radio, RadioGroup, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFormRadioView.propTypes = {\n  control: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string,\n    label: PropTypes.string,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array, PropTypes.object, PropTypes.bool])\n  })),\n  title: PropTypes.string,\n  hint: PropTypes.string,\n  error: PropTypes.object,\n  disabled: PropTypes.bool,\n  color: PropTypes.oneOf(['primary', 'secondary']),\n  muiComponentProps: PropTypes.object,\n  muiFormGroupProps: PropTypes.object\n};\nFormRadioView.defaultProps = {\n  color: 'primary',\n  muiComponentProps: {},\n  muiFormGroupProps: {}\n};\nexport function FormRadioView(_ref) {\n  var _this = this,\n      _classnames;\n\n  var control = _ref.control,\n      name = _ref.name,\n      options = _ref.options,\n      title = _ref.title,\n      hint = _ref.hint,\n      error = _ref.error,\n      disabled = _ref.disabled,\n      color = _ref.color,\n      muiComponentProps = _ref.muiComponentProps,\n      muiFormGroupProps = _ref.muiFormGroupProps,\n      defaultValue = _ref.defaultValue;\n  var classes = makeStyles(styles, {\n    name: 'FormRadio'\n  })({\n    hasError: Boolean(error)\n  });\n\n  var _muiFormGroupProps$ne = muiFormGroupProps.nestedClasses,\n      nestedClasses = _muiFormGroupProps$ne === void 0 ? {} : _muiFormGroupProps$ne,\n      formGroupProps = _objectWithoutProperties(muiFormGroupProps, [\"nestedClasses\"]);\n\n  var RadioOptions = function RadioOptions() {\n    return options.map(function (option, index) {\n      return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n        value: option.value,\n        label: option.label,\n        disabled: option.disabled,\n        className: classes.radioLabel,\n        control: /*#__PURE__*/_jsxDEV(Radio, _objectSpread({\n          disabled: disabled,\n          color: color,\n          classes: {\n            root: classes.radio\n          }\n        }, muiComponentProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 18\n        }, _this)\n      }, \"\".concat(option.value, \"_\").concat(index), false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, _this);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, classes.radioGroup, true), _defineProperty(_classnames, nestedClasses.root, Boolean(nestedClasses.root)), _classnames)),\n    children: [title && /*#__PURE__*/_jsxDEV(FormLabel, {\n      component: \"legend\",\n      className: classes.groupTitle,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this), options ? control ? /*#__PURE__*/_jsxDEV(Controller, {\n      render: function render(props) {\n        return /*#__PURE__*/_jsxDEV(RadioGroup, _objectSpread(_objectSpread(_objectSpread({}, props), {}, {\n          component: RadioGroup\n        }, formGroupProps), {}, {\n          onChange: function onChange(e) {\n            if (utils.generic.isFunction(formGroupProps === null || formGroupProps === void 0 ? void 0 : formGroupProps.onChange)) {\n              formGroupProps.onChange(e.target.value);\n            }\n\n            return props.onChange(e.target.value);\n          },\n          children: /*#__PURE__*/_jsxDEV(RadioOptions, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 19\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 17\n        }, _this);\n      },\n      control: control,\n      name: name,\n      id: name,\n      defaultValue: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(RadioGroup, _objectSpread(_objectSpread({\n      name: name,\n      component: RadioGroup\n    }, formGroupProps), {}, {\n      children: /*#__PURE__*/_jsxDEV(RadioOptions, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 13\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Radio, _objectSpread({\n      name: name,\n      id: name,\n      color: color\n    }, muiComponentProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error,\n      hint: hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = FormRadioView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormRadioView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormRadio/FormRadio.view.js"],"names":["React","PropTypes","Controller","classnames","styles","ErrorMessage","utils","FormControlLabel","FormLabel","Radio","RadioGroup","makeStyles","FormRadioView","propTypes","control","object","name","string","isRequired","options","arrayOf","shape","label","value","oneOfType","number","array","bool","title","hint","error","disabled","color","oneOf","muiComponentProps","muiFormGroupProps","defaultProps","defaultValue","classes","hasError","Boolean","nestedClasses","formGroupProps","RadioOptions","map","option","index","radioLabel","root","radio","radioGroup","groupTitle","props","e","generic","isFunction","onChange","target"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './FormRadio.styles';\r\nimport { ErrorMessage } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { FormControlLabel, FormLabel, Radio, RadioGroup, makeStyles } from '@material-ui/core';\r\n\r\nFormRadioView.propTypes = {\r\n  control: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string,\r\n      label: PropTypes.string,\r\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.array, PropTypes.object, PropTypes.bool]),\r\n    })\r\n  ),\r\n  title: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  error: PropTypes.object,\r\n  disabled: PropTypes.bool,\r\n  color: PropTypes.oneOf(['primary', 'secondary']),\r\n  muiComponentProps: PropTypes.object,\r\n  muiFormGroupProps: PropTypes.object,\r\n};\r\n\r\nFormRadioView.defaultProps = {\r\n  color: 'primary',\r\n  muiComponentProps: {},\r\n  muiFormGroupProps: {},\r\n};\r\n\r\nexport function FormRadioView({\r\n  control,\r\n  name,\r\n  options,\r\n  title,\r\n  hint,\r\n  error,\r\n  disabled,\r\n  color,\r\n  muiComponentProps,\r\n  muiFormGroupProps,\r\n  defaultValue,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'FormRadio' })({\r\n    hasError: Boolean(error),\r\n  });\r\n\r\n  const { nestedClasses = {}, ...formGroupProps } = muiFormGroupProps;\r\n\r\n  const RadioOptions = () => {\r\n    return options.map((option, index) => (\r\n      <FormControlLabel\r\n        key={`${option.value}_${index}`}\r\n        value={option.value}\r\n        label={option.label}\r\n        disabled={option.disabled}\r\n        className={classes.radioLabel}\r\n        control={<Radio disabled={disabled} color={color} classes={{ root: classes.radio }} {...muiComponentProps} />}\r\n      />\r\n    ));\r\n  };\r\n\r\n  return (\r\n    <div className={classnames({ [classes.radioGroup]: true, [nestedClasses.root]: Boolean(nestedClasses.root) })}>\r\n      {title && (\r\n        <FormLabel component=\"legend\" className={classes.groupTitle}>\r\n          {title}\r\n        </FormLabel>\r\n      )}\r\n\r\n      {options ? (\r\n        control ? (\r\n          <Controller\r\n            render={(props) => {\r\n              return (\r\n                <RadioGroup\r\n                  {...props}\r\n                  component={RadioGroup}\r\n                  {...formGroupProps}\r\n                  onChange={(e) => {\r\n                    if (utils.generic.isFunction(formGroupProps?.onChange)) {\r\n                      formGroupProps.onChange(e.target.value);\r\n                    }\r\n                    return props.onChange(e.target.value);\r\n                  }}\r\n                >\r\n                  <RadioOptions />\r\n                </RadioGroup>\r\n              );\r\n            }}\r\n            control={control}\r\n            name={name}\r\n            id={name}\r\n            defaultValue={defaultValue}\r\n          />\r\n        ) : (\r\n          <RadioGroup name={name} component={RadioGroup} {...formGroupProps}>\r\n            <RadioOptions />\r\n          </RadioGroup>\r\n        )\r\n      ) : (\r\n        <Radio name={name} id={name} color={color} {...muiComponentProps} />\r\n      )}\r\n      <ErrorMessage error={error} hint={hint} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}