{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var postNewWorkflowStage = function postNewWorkflowStage(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.postNewWorkflowStage'\n    };\n    var taskId = params.taskId,\n        notes = params.notes,\n        isQcApproved = params.isQcApproved,\n        isReSubmitted = params.isReSubmitted,\n        policyRef = params.policyRef;\n    dispatch(postNewWorkflowStageRequest(params));\n    dispatch(addLoader('postNewWorkflowStage'));\n\n    if (!taskId) {\n      dispatch(postNewWorkflowStageFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing parameters'\n      })));\n      dispatch(removeLoader('postNewWorkflowStage'));\n      return;\n    }\n\n    var requestObject = {\n      bpmTaskId: taskId,\n      policyRef: policyRef\n    };\n\n    if (isQcApproved) {\n      requestObject.notes = notes || '';\n      requestObject.isQcApproved = isQcApproved === 'yes' ? true : false;\n    }\n\n    if (isReSubmitted) {\n      requestObject.notes = notes;\n      requestObject.isResubmitted = isReSubmitted;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"workflow/task/moveNextStage\",\n      data: requestObject\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var _data$data;\n\n      dispatch(postNewWorkflowStageSuccess(data));\n      var reSubmitFlag = Boolean(data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.flag);\n      var isInstructionReOpen = get(data === null || data === void 0 ? void 0 : data.data, 'isInstructionReOpen') ? true : false;\n\n      if (isInstructionReOpen) {\n        dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStagePiError'), 'error'));\n      } else {\n        if ((data === null || data === void 0 ? void 0 : data.message.toUpperCase()) === constants.API_RESPONSE_SUCCESS && !reSubmitFlag) {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStageUpdateSuccess'), 'success'));\n        } else if ((data === null || data === void 0 ? void 0 : data.message.toUpperCase()) === constants.API_RESPONSE_SUCCESS && reSubmitFlag) {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.reSubmitCases.reSubmitToastMsg'), 'success'));\n        } else {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStageUpdateError'), 'error'));\n        }\n      }\n\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.postNewWorkflowStage)'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      dispatch(postNewWorkflowStageFailure(error, {\n        file: 'stores/premiumProcessing.actions.postNewWorkflowStage'\n      }));\n      return error === null || error === void 0 ? void 0 : error.json;\n    }).finally(function () {\n      dispatch(removeLoader('postNewWorkflowStage'));\n    });\n  };\n};\nexport var postNewWorkflowStageRequest = function postNewWorkflowStageRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_REQUEST',\n    payload: payload\n  };\n};\nexport var postNewWorkflowStageSuccess = function postNewWorkflowStageSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_SUCCESS',\n    payload: data\n  };\n};\nexport var postNewWorkflowStageFailure = function postNewWorkflowStageFailure(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postNewWorkflowStage.js"],"names":["removeLoader","addLoader","enqueueNotification","authLogout","constants","utils","get","postNewWorkflowStage","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","taskId","notes","isQcApproved","isReSubmitted","policyRef","postNewWorkflowStageRequest","postNewWorkflowStageFailure","message","requestObject","bpmTaskId","isResubmitted","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","postNewWorkflowStageSuccess","reSubmitFlag","Boolean","flag","isInstructionReOpen","string","t","toUpperCase","API_RESPONSE_SUCCESS","catch","error","handleError","handleUnauthorized","finally","payload","type"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,mBAAlC,EAAuDC,UAAvD,QAAyE,QAAzE;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMlEA,QAAQ,EAN0D;AAAA,QAE5DC,IAF4D,aAEpEC,IAFoE,CAE5DD,IAF4D;AAAA,QAI1DE,QAJ0D,aAGpEC,MAHoE,CAIlEC,IAJkE,CAI1DF,QAJ0D;;AAQtE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AARsE,QAY9DC,MAZ8D,GAYJV,MAZI,CAY9DU,MAZ8D;AAAA,QAYtDC,KAZsD,GAYJX,MAZI,CAYtDW,KAZsD;AAAA,QAY/CC,YAZ+C,GAYJZ,MAZI,CAY/CY,YAZ+C;AAAA,QAYjCC,aAZiC,GAYJb,MAZI,CAYjCa,aAZiC;AAAA,QAYlBC,SAZkB,GAYJd,MAZI,CAYlBc,SAZkB;AActEb,IAAAA,QAAQ,CAACc,2BAA2B,CAACf,MAAD,CAA5B,CAAR;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAAC,sBAAD,CAAV,CAAR;;AAEA,QAAI,CAACiB,MAAL,EAAa;AACXT,MAAAA,QAAQ,CAACe,2BAA2B,iCAAMR,YAAN;AAAoBS,QAAAA,OAAO,EAAE;AAA7B,SAA5B,CAAR;AACAhB,MAAAA,QAAQ,CAACT,YAAY,CAAC,sBAAD,CAAb,CAAR;AACA;AACD;;AAED,QAAM0B,aAAa,GAAG;AACpBC,MAAAA,SAAS,EAAET,MADS;AAEpBI,MAAAA,SAAS,EAAEA;AAFS,KAAtB;;AAKA,QAAIF,YAAJ,EAAkB;AAChBM,MAAAA,aAAa,CAACP,KAAd,GAAsBA,KAAK,IAAI,EAA/B;AACAO,MAAAA,aAAa,CAACN,YAAd,GAA6BA,YAAY,KAAK,KAAjB,GAAyB,IAAzB,GAAgC,KAA7D;AACD;;AACD,QAAIC,aAAJ,EAAmB;AACjBK,MAAAA,aAAa,CAACP,KAAd,GAAsBA,KAAtB;AACAO,MAAAA,aAAa,CAACE,aAAd,GAA8BP,aAA9B;AACD;;AAED,WAAOhB,KAAK,CAACwB,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEpB,IAAI,CAACqB,WADR;AAEJnB,MAAAA,QAAQ,EAAEA,QAAQ,CAACoB,UAFf;AAGJC,MAAAA,IAAI,+BAHA;AAIJC,MAAAA,IAAI,EAAET;AAJF,KADD,EAOJU,IAPI,CAOC,UAACC,QAAD;AAAA,aAAchC,KAAK,CAACwB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUlC,KAAK,CAACwB,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AAAA;;AACd1B,MAAAA,QAAQ,CAACgC,2BAA2B,CAACN,IAAD,CAA5B,CAAR;AACA,UAAMO,YAAY,GAAGC,OAAO,CAACR,IAAD,aAACA,IAAD,qCAACA,IAAI,CAAEA,IAAP,+CAAC,WAAYS,IAAb,CAA5B;AACA,UAAMC,mBAAmB,GAAGvC,GAAG,CAAC6B,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,EAAa,qBAAb,CAAH,GAAyC,IAAzC,GAAgD,KAA5E;;AACA,UAAIU,mBAAJ,EAAyB;AACvBpC,QAAAA,QAAQ,CAACP,mBAAmB,CAACG,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,2DAAf,CAAD,EAA8E,OAA9E,CAApB,CAAR;AACD,OAFD,MAEO;AACL,YAAI,CAAAZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEV,OAAN,CAAcuB,WAAd,QAAgC5C,SAAS,CAAC6C,oBAA1C,IAAkE,CAACP,YAAvE,EAAqF;AACnFjC,UAAAA,QAAQ,CAACP,mBAAmB,CAACG,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,iEAAf,CAAD,EAAoF,SAApF,CAApB,CAAR;AACD,SAFD,MAEO,IAAI,CAAAZ,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEV,OAAN,CAAcuB,WAAd,QAAgC5C,SAAS,CAAC6C,oBAA1C,IAAkEP,YAAtE,EAAoF;AACzFjC,UAAAA,QAAQ,CAACP,mBAAmB,CAACG,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,kDAAf,CAAD,EAAqE,SAArE,CAApB,CAAR;AACD,SAFM,MAEA;AACLtC,UAAAA,QAAQ,CAACP,mBAAmB,CAACG,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,+DAAf,CAAD,EAAkF,OAAlF,CAApB,CAAR;AACD;AACF;;AACD,aAAOZ,IAAP;AACD,KAzBI,EA0BJe,KA1BI,CA0BE,UAACC,KAAD,EAAW;AAChB9C,MAAAA,KAAK,CAACwB,GAAN,CAAUuB,WAAV,CAAsBD,KAAtB,kCAAkCnC,YAAlC;AAAgDS,QAAAA,OAAO,EAAE;AAAzD;AACApB,MAAAA,KAAK,CAACwB,GAAN,CAAUwB,kBAAV,CAA6BF,KAA7B,EAAoC1C,QAApC,EAA8CN,UAA9C;AACAM,MAAAA,QAAQ,CACNe,2BAA2B,CAAC2B,KAAD,EAAQ;AACjClC,QAAAA,IAAI,EAAE;AAD2B,OAAR,CADrB,CAAR;AAKA,aAAOkC,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEZ,IAAd;AACD,KAnCI,EAoCJe,OApCI,CAoCI,YAAM;AACb7C,MAAAA,QAAQ,CAACT,YAAY,CAAC,sBAAD,CAAb,CAAR;AACD,KAtCI,CAAP;AAuCD,GA5EmC;AAAA,CAA7B;AA8EP,OAAO,IAAMuB,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACgC,OAAD,EAAa;AACtD,SAAO;AACLC,IAAAA,IAAI,EAAE,gDADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMd,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACN,IAAD,EAAU;AACnD,SAAO;AACLqB,IAAAA,IAAI,EAAE,gDADD;AAELD,IAAAA,OAAO,EAAEpB;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMX,2BAA2B,GAAG,SAA9BA,2BAA8B,CAAC2B,KAAD,EAAW;AACpD,SAAO;AACLK,IAAAA,IAAI,EAAE,gDADD;AAELD,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const postNewWorkflowStage = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.postNewWorkflowStage',\r\n  };\r\n\r\n  const { taskId, notes, isQcApproved, isReSubmitted, policyRef } = params;\r\n\r\n  dispatch(postNewWorkflowStageRequest(params));\r\n  dispatch(addLoader('postNewWorkflowStage'));\r\n\r\n  if (!taskId) {\r\n    dispatch(postNewWorkflowStageFailure({ ...defaultError, message: 'Missing parameters' }));\r\n    dispatch(removeLoader('postNewWorkflowStage'));\r\n    return;\r\n  }\r\n\r\n  const requestObject = {\r\n    bpmTaskId: taskId,\r\n    policyRef: policyRef,\r\n  };\r\n\r\n  if (isQcApproved) {\r\n    requestObject.notes = notes || '';\r\n    requestObject.isQcApproved = isQcApproved === 'yes' ? true : false;\r\n  }\r\n  if (isReSubmitted) {\r\n    requestObject.notes = notes;\r\n    requestObject.isResubmitted = isReSubmitted;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: `workflow/task/moveNextStage`,\r\n      data: requestObject,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postNewWorkflowStageSuccess(data));\r\n      const reSubmitFlag = Boolean(data?.data?.flag);\r\n      const isInstructionReOpen = get(data?.data, 'isInstructionReOpen') ? true : false;\r\n      if (isInstructionReOpen) {\r\n        dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStagePiError'), 'error'));\r\n      } else {\r\n        if (data?.message.toUpperCase() === constants.API_RESPONSE_SUCCESS && !reSubmitFlag) {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStageUpdateSuccess'), 'success'));\r\n        } else if (data?.message.toUpperCase() === constants.API_RESPONSE_SUCCESS && reSubmitFlag) {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.reSubmitCases.reSubmitToastMsg'), 'success'));\r\n        } else {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseDetailsSection.workflowStageUpdateError'), 'error'));\r\n        }\r\n      }\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.postNewWorkflowStage)' });\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      dispatch(\r\n        postNewWorkflowStageFailure(error, {\r\n          file: 'stores/premiumProcessing.actions.postNewWorkflowStage',\r\n        })\r\n      );\r\n      return error?.json;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postNewWorkflowStage'));\r\n    });\r\n};\r\n\r\nexport const postNewWorkflowStageRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postNewWorkflowStageSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postNewWorkflowStageFailure = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_POST_WORKFLOW_STAGE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}