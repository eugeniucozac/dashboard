{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTableRow.view.js\";\nimport React from 'react';\nimport moment from 'moment'; //app\n\nimport styles from './LossActionTable.styles';\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LossActionTableRowView(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      handleViewClaimClick = _ref.handleViewClaimClick,\n      columnProps = _ref.columnProps;\n  var classes = makeStyles(styles, {\n    name: 'LossActionTable'\n  })();\n  console.log(\"data \", data);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"section\", {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this), data.claimsItems.map(function (item, idx) {\n      return /*#__PURE__*/_jsxDEV(TableRow, {\n        \"data-testid\": \"search-row-\".concat(item.actionId),\n        hover: true,\n        children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actionId')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.actionId),\n          children: /*#__PURE__*/_jsxDEV(Link, {\n            text: item.actionId,\n            color: \"secondary\",\n            onClick: function onClick() {}\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 26,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 25,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('name')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.name),\n          children: /*#__PURE__*/_jsxDEV(Chip, {\n            label: item.name,\n            size: \"small\",\n            type: \"error\",\n            color: \"primary\",\n            variant: \"outlined\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 29,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 28,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.description),\n          children: item.description\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.team),\n          children: item.team\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.assignedTo),\n          children: item.assignedTo\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.createdDate),\n          children: utils.string.t('format.date', {\n            value: {\n              date: item === null || item === void 0 ? void 0 : item.createdDate,\n              format: config.ui.format.date.textTime\n            }\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDate')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.targetDate),\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"colorError\",\n            children: utils.string.t('format.date', {\n              value: {\n                date: item === null || item === void 0 ? void 0 : item.targetDate,\n                format: config.ui.format.date.text\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.priority),\n          children: item.priority\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.status),\n          children: (item === null || item === void 0 ? void 0 : item.status) && /*#__PURE__*/_jsxDEV(Status, {\n            size: \"sm\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: item === null || item === void 0 ? void 0 : item.status\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 54\n            }, _this),\n            status: (item === null || item === void 0 ? void 0 : item.status) === \"Completed\" ? 'success' : 'error'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 30\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.insured),\n          children: item.insured\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n          \"data-testid\": \"row-col-\".concat(item.division),\n          children: item.division\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, _this)]\n      }, item.claimID, true, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, _this);\n    })]\n  }, void 0, true);\n}\n_c = LossActionTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTableRow.view.js"],"names":["React","moment","styles","TableCell","Status","Translate","Chip","Link","utils","config","makeStyles","TableRow","Typography","LossActionTableRowView","data","handleViewClaimClick","columnProps","classes","name","console","log","claimsItems","map","item","idx","actionId","description","team","assignedTo","createdDate","string","t","value","date","format","ui","textTime","targetDate","text","priority","status","insured","division","claimID"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport styles from './LossActionTable.styles';\r\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\r\n\r\nexport function LossActionTableRowView({ data, handleViewClaimClick, columnProps}) {\r\n  const classes = makeStyles(styles, { name: 'LossActionTable' })();\r\n\r\n  console.log(\"data \", data)\r\n\r\n  return (\r\n    <>\r\n      <section>\r\n\r\n      </section>\r\n      {data.claimsItems.map((item, idx) => \r\n        <TableRow key={item.claimID} data-testid={`search-row-${item.actionId}`} hover>\r\n          <TableCell {...columnProps('actionId')} data-testid={`row-col-${item.actionId}`}>\r\n            <Link text={item.actionId} color=\"secondary\" onClick={() => {}} />\r\n          </TableCell>\r\n          <TableCell {...columnProps('name')} data-testid={`row-col-${item.name}`}>\r\n            <Chip\r\n              label={item.name}\r\n              size=\"small\"\r\n              type=\"error\"\r\n              color='primary'\r\n              variant=\"outlined\"\r\n            />\r\n          </TableCell>\r\n          <TableCell {...columnProps('description')} data-testid={`row-col-${item.description}`}>\r\n            {item.description}\r\n          </TableCell>\r\n          <TableCell {...columnProps('team')} data-testid={`row-col-${item.team}`}>\r\n            {item.team}\r\n          </TableCell>\r\n          <TableCell {...columnProps('assignedTo')} data-testid={`row-col-${item.assignedTo}`}>\r\n            {item.assignedTo}\r\n          </TableCell>\r\n          <TableCell {...columnProps('createdDate')} data-testid={`row-col-${item.createdDate}`}>\r\n            {utils.string.t('format.date', {\r\n              value: { date: item?.createdDate, format: config.ui.format.date.textTime },\r\n            })}\r\n          </TableCell>\r\n          <TableCell {...columnProps('targetDate')} data-testid={`row-col-${item.targetDate}`}>\r\n            <Typography variant=\"body2\" color=\"colorError\">\r\n              {utils.string.t('format.date', {\r\n                value: { date: item?.targetDate, format: config.ui.format.date.text },\r\n              })}\r\n            </Typography>\r\n          </TableCell>\r\n          <TableCell {...columnProps('priority')} data-testid={`row-col-${item.priority}`}>\r\n            {item.priority}\r\n          </TableCell>\r\n          <TableCell {...columnProps('status')} data-testid={`row-col-${item.status}`}>\r\n            {item?.status && <Status size=\"sm\" text={<Translate label={item?.status} />} status={item?.status === \"Completed\" ? 'success' : 'error'} />}\r\n          </TableCell>\r\n          <TableCell {...columnProps('insured')} data-testid={`row-col-${item.insured}`}>\r\n            {item.insured}\r\n          </TableCell>\r\n          <TableCell {...columnProps('division')} data-testid={`row-col-${item.division}`}>\r\n            {item.division}\r\n          </TableCell>\r\n        </TableRow>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}