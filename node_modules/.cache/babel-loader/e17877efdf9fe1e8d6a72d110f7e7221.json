{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimSelectPolicy\\\\LinkClaimSelectPolicy.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport get from 'lodash/get';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './LinkClaimSelectPolicy.styles';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { FormLegend, TableCell, TableHead, Pagination, Empty, Tooltip, TableFilters, TableToolbar, FormAutocompleteMui, Skeleton } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks';\nimport { LinkClaimPolicy } from 'modules'; // mui\n\nimport { makeStyles, TableContainer, Table, TableRow, TableBody, Typography, Box, RadioGroup, Radio } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLinkClaimSelectPolicyView.propTypes = {\n  columnsArray: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  policyData: PropTypes.object.isRequired,\n  selectedPolicy: PropTypes.bool,\n  pagination: PropTypes.object.isRequired,\n  viewControl: PropTypes.object.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  isSearchByNull: PropTypes.bool,\n  isTableLoading: PropTypes.bool,\n  tableFilterFields: PropTypes.array.isRequired,\n  viewFields: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    handleSort: PropTypes.func.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    handleSearchFilter: PropTypes.func.isRequired,\n    onResetFilter: PropTypes.func.isRequired,\n    onResetSearch: PropTypes.func.isRequired,\n    handlePolicyData: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    columnProps: PropTypes.func.isRequired,\n    toggleColumn: PropTypes.func.isRequired,\n    onSelectSearchBy: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function LinkClaimSelectPolicyView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var columnsArray = _ref.columnsArray,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      policyData = _ref.policyData,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      setSelectedPolicyRender = _ref.setSelectedPolicyRender,\n      pagination = _ref.pagination,\n      tableFilterFields = _ref.tableFilterFields,\n      handlers = _ref.handlers,\n      viewControl = _ref.viewControl,\n      viewFields = _ref.viewFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      isSearchByNull = _ref.isSearchByNull,\n      confirm = _ref.confirm,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      sectionEnabledValidationFlag = _ref.sectionEnabledValidationFlag,\n      setActiveStep = _ref.setActiveStep,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      policyInformation = _ref.policyInformation,\n      claimInfo = _ref.claimInfo,\n      handleFormStatus = _ref.handleFormStatus,\n      isTableLoading = _ref.isTableLoading,\n      selectNextPolicy = _ref.selectNextPolicy,\n      setSelectNextPolicy = _ref.setSelectNextPolicy;\n  var classes = makeStyles(styles, {\n    name: 'LinkClaimSelectPolicy'\n  })();\n\n  var _useSort = useSort(columnsArray, sortObj, handlers.handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\n  var cellLength = 25;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 4,\n    children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n      text: utils.string.t('claims.searchPolicy.claimRef')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: -2.5,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"h5\",\n        children: (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimReference) || ''\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n        text: utils.string.t('claims.searchPolicy.searchPolicies')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: -2.5,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: utils.string.t('claims.searchPolicy.linkPolicySearchInputLabel')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: /*#__PURE__*/_jsxDEV(TableToolbar, {\n          children: /*#__PURE__*/_jsxDEV(TableFilters, {\n            search: true,\n            searchBy: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'searchBy')), {}, {\n              control: viewControl,\n              nestedClasses: {\n                root: classes.autocomplete\n              },\n              callback: function callback(event, obj) {\n                handlers.onSelectSearchBy(obj === null || obj === void 0 ? void 0 : obj.value, obj === null || obj === void 0 ? void 0 : obj.label);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this),\n            isSearchByNull: isSearchByNull,\n            searchPlaceholder: utils.string.t('claims.searchPolicy.minimumCharacters'),\n            searchMinChars: 4,\n            filtersArray: tableFilterFields,\n            isFetchingFilters: isFetchingFilters,\n            columns: true,\n            searchTerm: policyData.searchTerm,\n            columnsArray: cols,\n            handlers: {\n              onSearch: handlers.handleSearch,\n              onFilter: handlers.handleSearchFilter,\n              onResetFilter: handlers.onResetFilter,\n              onResetSearch: handlers.onResetSearch,\n              onToggleColumn: handlers.toggleColumn\n            },\n            nestedClasses: {\n              searchMaxWidth: classes.searchMaxWidth,\n              searchLeft: classes.searchLeft\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: [utils.generic.isValidArray(rows) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n          children: /*#__PURE__*/_jsxDEV(RadioGroup, {\n            name: \"policyRef\",\n            value: policyData.xbPolicyID,\n            onChange: handlers.handlePolicyData,\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"data-testid\": \"claims-policy-search-table\",\n              children: [utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(TableHead, {\n                columns: cols,\n                sorting: sort\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 62\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                \"data-testid\": \"claims-list\",\n                children: isTableLoading ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: cols === null || cols === void 0 ? void 0 : cols.length,\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      height: 50,\n                      animation: \"wave\",\n                      displayNumber: 5\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 149,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 23\n                }, this) : rows === null || rows === void 0 ? void 0 : rows.map(function (policy) {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    selected: Number(policyData.xbPolicyID) === policy.xbPolicyID,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('policyRef')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.policyNumber),\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        display: \"flex\",\n                        alignItems: \"center\",\n                        ml: -0.5,\n                        children: [/*#__PURE__*/_jsxDEV(Radio, {\n                          checked: Number(policyData.xbPolicyID) === policy.xbPolicyID,\n                          onChange: handlers.handlePolicyData,\n                          value: policy.xbPolicyID,\n                          name: \"policyRef\",\n                          color: \"primary\",\n                          className: classes.radio\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 157,\n                          columnNumber: 31\n                        }, _this), policy.policyNumber]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 156,\n                        columnNumber: 29\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 155,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('statusCode')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.statusCode),\n                      children: policy.statusCode\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('policyType')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.policyType),\n                      children: policy.policyType\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('umr')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.umr),\n                      children: policy.umr\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('insured')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.insured),\n                      children: policy.insured\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 177,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('reInsured')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.reInsured),\n                      children: policy.reInsured || utils.string.t('app.na')\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('coverHolder')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.coverHolder),\n                      children: policy.coverHolder\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('clientName')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.clientName),\n                      children: policy.clientName\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('riskDetails')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.riskDetails),\n                      children: policy.riskDetails.length > cellLength ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                        block: true,\n                        title: policy.riskDetails,\n                        children: [policy.riskDetails.slice(0, cellLength), \"...\"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 191,\n                        columnNumber: 31\n                      }, _this) : policy.riskDetails\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('inceptionDate')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.inceptionDate),\n                      children: utils.string.t('format.date', {\n                        value: {\n                          date: policy === null || policy === void 0 ? void 0 : policy.inceptionDate,\n                          format: config.ui.format.date.text\n                        }\n                      })\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 198,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('expiryDate')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.expiryDate),\n                      children: utils.string.t('format.date', {\n                        value: {\n                          date: policy === null || policy === void 0 ? void 0 : policy.expiryDate,\n                          format: config.ui.format.date.text\n                        }\n                      })\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 203,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('company')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.company),\n                      children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                        children: policy.company\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 209,\n                        columnNumber: 29\n                      }, _this)\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('division')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.division),\n                      children: policy.division\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, handlers.columnProps('businessTypeCode')), {}, {\n                      \"data-testid\": \"row-col-\".concat(policy.businessTypeCode),\n                      children: policy.businessTypeCode\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 27\n                    }, _this)]\n                  }, policy.policyNumber, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 154,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(Pagination, {\n          page: get(paginationObj, 'obj.page'),\n          count: get(paginationObj, 'obj.rowsTotal'),\n          rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n          onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n          onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 226,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true), !isTableLoading && !utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(Box, {\n        mt: -2,\n        children: /*#__PURE__*/_jsxDEV(Empty, {\n          title: utils.string.t('claims.noMatchFound'),\n          text: utils.string.t('claims.noMatchDetails'),\n          icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 242,\n            columnNumber: 21\n          }, this),\n          padding: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 238,\n        columnNumber: 11\n      }, this), (confirm || selectedPolicyRender === '') && utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(Box, {\n        mt: 2,\n        children: /*#__PURE__*/_jsxDEV(LinkClaimPolicy, {\n          policyData: policyData,\n          selectedPolicyRender: selectedPolicyRender,\n          setSelectedPolicyRender: setSelectedPolicyRender,\n          validation: validation,\n          setValidation: setValidation,\n          setActiveStep: setActiveStep,\n          index: index,\n          isFormsEdited: isFormsEdited,\n          setFormEditedStatus: setFormEditedStatus,\n          saveStatus: saveStatus,\n          sectionEnabledValidationFlag: sectionEnabledValidationFlag,\n          policyInformation: policyInformation,\n          claimInfo: claimInfo,\n          handleFormStatus: handleFormStatus,\n          selectNextPolicy: selectNextPolicy,\n          setSelectNextPolicy: setSelectNextPolicy\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 250,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinkClaimSelectPolicyView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = LinkClaimSelectPolicyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkClaimSelectPolicyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimSelectPolicy/LinkClaimSelectPolicy.view.js"],"names":["React","get","PropTypes","styles","utils","config","FormLegend","TableCell","TableHead","Pagination","Empty","Tooltip","TableFilters","TableToolbar","FormAutocompleteMui","Skeleton","usePagination","useSort","LinkClaimPolicy","makeStyles","TableContainer","Table","TableRow","TableBody","Typography","Box","RadioGroup","Radio","LinkClaimSelectPolicyView","propTypes","columnsArray","array","isRequired","rows","sort","object","policyData","selectedPolicy","bool","pagination","viewControl","isFetchingFilters","isSearchByNull","isTableLoading","tableFilterFields","viewFields","handlers","shape","handleSort","func","handleSearch","handleSearchFilter","onResetFilter","onResetSearch","handlePolicyData","handleChangePage","handleChangeRowsPerPage","columnProps","toggleColumn","onSelectSearchBy","sortObj","selectedPolicyRender","setSelectedPolicyRender","confirm","validation","setValidation","sectionEnabledValidationFlag","setActiveStep","index","isFormsEdited","setFormEditedStatus","saveStatus","policyInformation","claimInfo","handleFormStatus","selectNextPolicy","setSelectNextPolicy","classes","name","cols","paginationObj","cellLength","string","t","claimReference","form","getFieldProps","root","autocomplete","event","obj","value","label","searchTerm","onSearch","onFilter","onToggleColumn","searchMaxWidth","searchLeft","generic","isValidArray","xbPolicyID","length","map","policy","Number","policyNumber","radio","statusCode","policyType","umr","insured","reInsured","coverHolder","clientName","riskDetails","slice","inceptionDate","date","format","ui","text","expiryDate","company","division","businessTypeCode"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,SAHF,EAIEC,UAJF,EAKEC,KALF,EAMEC,OANF,EAOEC,YAPF,EAQEC,YARF,EASEC,mBATF,EAUEC,QAVF,QAWO,YAXP;;AAaA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,OAAvC;AACA,SAASC,eAAT,QAAgC,SAAhC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,cAArB,EAAqCC,KAArC,EAA4CC,QAA5C,EAAsDC,SAAtD,EAAiEC,UAAjE,EAA6EC,GAA7E,EAAkFC,UAAlF,EAA8FC,KAA9F,QAA2G,mBAA3G;;;AAEAC,yBAAyB,CAACC,SAA1B,GAAsC;AACpCC,EAAAA,YAAY,EAAE5B,SAAS,CAAC6B,KAAV,CAAgBC,UADM;AAEpCC,EAAAA,IAAI,EAAE/B,SAAS,CAAC6B,KAAV,CAAgBC,UAFc;AAGpCE,EAAAA,IAAI,EAAEhC,SAAS,CAACiC,MAAV,CAAiBH,UAHa;AAIpCI,EAAAA,UAAU,EAAElC,SAAS,CAACiC,MAAV,CAAiBH,UAJO;AAKpCK,EAAAA,cAAc,EAAEnC,SAAS,CAACoC,IALU;AAMpCC,EAAAA,UAAU,EAAErC,SAAS,CAACiC,MAAV,CAAiBH,UANO;AAOpCQ,EAAAA,WAAW,EAAEtC,SAAS,CAACiC,MAAV,CAAiBH,UAPM;AAQpCS,EAAAA,iBAAiB,EAAEvC,SAAS,CAACoC,IARO;AASpCI,EAAAA,cAAc,EAAExC,SAAS,CAACoC,IATU;AAUpCK,EAAAA,cAAc,EAAEzC,SAAS,CAACoC,IAVU;AAWpCM,EAAAA,iBAAiB,EAAE1C,SAAS,CAAC6B,KAAV,CAAgBC,UAXC;AAYpCa,EAAAA,UAAU,EAAE3C,SAAS,CAAC6B,KAAV,CAAgBC,UAZQ;AAapCc,EAAAA,QAAQ,EAAE5C,SAAS,CAAC6C,KAAV,CAAgB;AACxBC,IAAAA,UAAU,EAAE9C,SAAS,CAAC+C,IAAV,CAAejB,UADH;AAExBkB,IAAAA,YAAY,EAAEhD,SAAS,CAAC+C,IAAV,CAAejB,UAFL;AAGxBmB,IAAAA,kBAAkB,EAAEjD,SAAS,CAAC+C,IAAV,CAAejB,UAHX;AAIxBoB,IAAAA,aAAa,EAAElD,SAAS,CAAC+C,IAAV,CAAejB,UAJN;AAKxBqB,IAAAA,aAAa,EAAEnD,SAAS,CAAC+C,IAAV,CAAejB,UALN;AAMxBsB,IAAAA,gBAAgB,EAAEpD,SAAS,CAAC+C,IAAV,CAAejB,UANT;AAOxBuB,IAAAA,gBAAgB,EAAErD,SAAS,CAAC+C,IAAV,CAAejB,UAPT;AAQxBwB,IAAAA,uBAAuB,EAAEtD,SAAS,CAAC+C,IAAV,CAAejB,UARhB;AASxByB,IAAAA,WAAW,EAAEvD,SAAS,CAAC+C,IAAV,CAAejB,UATJ;AAUxB0B,IAAAA,YAAY,EAAExD,SAAS,CAAC+C,IAAV,CAAejB,UAVL;AAWxB2B,IAAAA,gBAAgB,EAAEzD,SAAS,CAAC+C,IAAV,CAAejB;AAXT,GAAhB,EAYPA;AAzBiC,CAAtC;AA4BA,OAAO,SAASJ,yBAAT,OA6BJ;AAAA;;AAAA;;AAAA,MA5BDE,YA4BC,QA5BDA,YA4BC;AAAA,uBA3BDG,IA2BC;AAAA,MA3BDA,IA2BC,0BA3BM,EA2BN;AAAA,MA1BK2B,OA0BL,QA1BD1B,IA0BC;AAAA,MAzBDE,UAyBC,QAzBDA,UAyBC;AAAA,MAxBDyB,oBAwBC,QAxBDA,oBAwBC;AAAA,MAvBDC,uBAuBC,QAvBDA,uBAuBC;AAAA,MAtBDvB,UAsBC,QAtBDA,UAsBC;AAAA,MArBDK,iBAqBC,QArBDA,iBAqBC;AAAA,MApBDE,QAoBC,QApBDA,QAoBC;AAAA,MAnBDN,WAmBC,QAnBDA,WAmBC;AAAA,MAlBDK,UAkBC,QAlBDA,UAkBC;AAAA,MAjBDJ,iBAiBC,QAjBDA,iBAiBC;AAAA,MAhBDC,cAgBC,QAhBDA,cAgBC;AAAA,MAfDqB,OAeC,QAfDA,OAeC;AAAA,MAdDC,UAcC,QAdDA,UAcC;AAAA,MAbDC,aAaC,QAbDA,aAaC;AAAA,MAZDC,4BAYC,QAZDA,4BAYC;AAAA,MAXDC,aAWC,QAXDA,aAWC;AAAA,MAVDC,KAUC,QAVDA,KAUC;AAAA,MATDC,aASC,QATDA,aASC;AAAA,MARDC,mBAQC,QARDA,mBAQC;AAAA,MAPDC,UAOC,QAPDA,UAOC;AAAA,MANDC,iBAMC,QANDA,iBAMC;AAAA,MALDC,SAKC,QALDA,SAKC;AAAA,MAJDC,gBAIC,QAJDA,gBAIC;AAAA,MAHD/B,cAGC,QAHDA,cAGC;AAAA,MAFDgC,gBAEC,QAFDA,gBAEC;AAAA,MADDC,mBACC,QADDA,mBACC;AACD,MAAMC,OAAO,GAAG1D,UAAU,CAAChB,MAAD,EAAS;AAAE2E,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADC,iBAEsB7D,OAAO,CAACa,YAAD,EAAe8B,OAAf,EAAwBd,QAAQ,CAACE,UAAjC,CAF7B;AAAA,MAEO+B,IAFP,YAEOA,IAFP;AAAA,MAEa7C,IAFb,YAEaA,IAFb;;AAGD,MAAM8C,aAAa,GAAGhE,aAAa,CAACiB,IAAD,EAAOM,UAAP,EAAmBO,QAAQ,CAACS,gBAA5B,EAA8CT,QAAQ,CAACU,uBAAvD,CAAnC;AACA,MAAMyB,UAAU,GAAG,EAAnB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,IAAI,EAAE7E,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,8BAAf;AAAlB;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAC,GAAV;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,OAAO,EAAC,IAApB;AAAA,kBAA0B,CAAAV,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEW,cAAX,KAA6B;AAAvD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAFF,eAME,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,8BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAEhF,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,oCAAf;AAAlB;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAC,GAAV;AAAA,+BACE,QAAC,UAAD;AAAY,UAAA,OAAO,EAAC,IAApB;AAAA,oBAA0B/E,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,gDAAf;AAA1B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAFF,eAKE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,YAAD;AAAA,iCACE,QAAC,YAAD;AACE,YAAA,MAAM,MADR;AAEE,YAAA,QAAQ,eACN,QAAC,mBAAD,kCACM/E,KAAK,CAACiF,IAAN,CAAWC,aAAX,CAAyBzC,UAAzB,EAAqC,UAArC,CADN;AAEE,cAAA,OAAO,EAAEL,WAFX;AAGE,cAAA,aAAa,EAAE;AAAE+C,gBAAAA,IAAI,EAAEV,OAAO,CAACW;AAAhB,eAHjB;AAIE,cAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,GAAR,EAAgB;AACxB5C,gBAAAA,QAAQ,CAACa,gBAAT,CAA0B+B,GAA1B,aAA0BA,GAA1B,uBAA0BA,GAAG,CAAEC,KAA/B,EAAsCD,GAAtC,aAAsCA,GAAtC,uBAAsCA,GAAG,CAAEE,KAA3C;AACD;AANH;AAAA;AAAA;AAAA;AAAA,oBAHJ;AAYE,YAAA,cAAc,EAAElD,cAZlB;AAaE,YAAA,iBAAiB,EAAEtC,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,uCAAf,CAbrB;AAcE,YAAA,cAAc,EAAE,CAdlB;AAeE,YAAA,YAAY,EAAEvC,iBAfhB;AAgBE,YAAA,iBAAiB,EAAEH,iBAhBrB;AAiBE,YAAA,OAAO,MAjBT;AAkBE,YAAA,UAAU,EAAEL,UAAU,CAACyD,UAlBzB;AAmBE,YAAA,YAAY,EAAEd,IAnBhB;AAoBE,YAAA,QAAQ,EAAE;AACRe,cAAAA,QAAQ,EAAEhD,QAAQ,CAACI,YADX;AAER6C,cAAAA,QAAQ,EAAEjD,QAAQ,CAACK,kBAFX;AAGRC,cAAAA,aAAa,EAAEN,QAAQ,CAACM,aAHhB;AAIRC,cAAAA,aAAa,EAAEP,QAAQ,CAACO,aAJhB;AAKR2C,cAAAA,cAAc,EAAElD,QAAQ,CAACY;AALjB,aApBZ;AA2BE,YAAA,aAAa,EAAE;AAAEuC,cAAAA,cAAc,EAAEpB,OAAO,CAACoB,cAA1B;AAA0CC,cAAAA,UAAU,EAAErB,OAAO,CAACqB;AAA9D;AA3BjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YANF,eA8CE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAA,iBACG9F,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnE,IAA3B,kBACC;AAAA,gCACE,QAAC,cAAD;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAC,WAAjB;AAA6B,YAAA,KAAK,EAAEG,UAAU,CAACiE,UAA/C;AAA2D,YAAA,QAAQ,EAAEvD,QAAQ,CAACQ,gBAA9E;AAAA,mCACE,QAAC,KAAD;AAAO,6BAAY,4BAAnB;AAAA,yBACGlD,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnE,IAA3B,EAAiC,IAAjC,kBAA0C,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAE8C,IAApB;AAA0B,gBAAA,OAAO,EAAE7C;AAAnC;AAAA;AAAA;AAAA;AAAA,sBAD7C,eAEE,QAAC,SAAD;AAAW,+BAAY,aAAvB;AAAA,0BACGS,cAAc,gBACb,QAAC,QAAD;AAAA,yCACE,QAAC,SAAD;AAAW,oBAAA,OAAO,EAAEoC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEuB,MAA1B;AAAA,2CACE,QAAC,QAAD;AAAU,sBAAA,MAAM,EAAE,EAAlB;AAAsB,sBAAA,SAAS,EAAC,MAAhC;AAAuC,sBAAA,aAAa,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADa,GAObrE,IAPa,aAObA,IAPa,uBAObA,IAAI,CAAEsE,GAAN,CAAU,UAACC,MAAD;AAAA,sCACR,QAAC,QAAD;AAAoC,oBAAA,QAAQ,EAAEC,MAAM,CAACrE,UAAU,CAACiE,UAAZ,CAAN,KAAkCG,MAAM,CAACH,UAAvF;AAAA,4CACE,QAAC,SAAD,kCAAevD,QAAQ,CAACW,WAAT,CAAqB,WAArB,CAAf;AAAkD,uDAAwB+C,MAAM,CAACE,YAA/B,CAAlD;AAAA,6CACE,QAAC,GAAD;AAAK,wBAAA,OAAO,EAAC,MAAb;AAAoB,wBAAA,UAAU,EAAC,QAA/B;AAAwC,wBAAA,EAAE,EAAE,CAAC,GAA7C;AAAA,gDACE,QAAC,KAAD;AACE,0BAAA,OAAO,EAAED,MAAM,CAACrE,UAAU,CAACiE,UAAZ,CAAN,KAAkCG,MAAM,CAACH,UADpD;AAEE,0BAAA,QAAQ,EAAEvD,QAAQ,CAACQ,gBAFrB;AAGE,0BAAA,KAAK,EAAEkD,MAAM,CAACH,UAHhB;AAIE,0BAAA,IAAI,EAAC,WAJP;AAKE,0BAAA,KAAK,EAAC,SALR;AAME,0BAAA,SAAS,EAAExB,OAAO,CAAC8B;AANrB;AAAA;AAAA;AAAA;AAAA,iCADF,EASGH,MAAM,CAACE,YATV;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BADF,eAcE,QAAC,SAAD,kCAAe5D,QAAQ,CAACW,WAAT,CAAqB,YAArB,CAAf;AAAmD,uDAAwB+C,MAAM,CAACI,UAA/B,CAAnD;AAAA,gCACGJ,MAAM,CAACI;AADV;AAAA;AAAA;AAAA;AAAA,6BAdF,eAiBE,QAAC,SAAD,kCAAe9D,QAAQ,CAACW,WAAT,CAAqB,YAArB,CAAf;AAAmD,uDAAwB+C,MAAM,CAACK,UAA/B,CAAnD;AAAA,gCACGL,MAAM,CAACK;AADV;AAAA;AAAA;AAAA;AAAA,6BAjBF,eAoBE,QAAC,SAAD,kCAAe/D,QAAQ,CAACW,WAAT,CAAqB,KAArB,CAAf;AAA4C,uDAAwB+C,MAAM,CAACM,GAA/B,CAA5C;AAAA,gCACGN,MAAM,CAACM;AADV;AAAA;AAAA;AAAA;AAAA,6BApBF,eAuBE,QAAC,SAAD,kCAAehE,QAAQ,CAACW,WAAT,CAAqB,SAArB,CAAf;AAAgD,uDAAwB+C,MAAM,CAACO,OAA/B,CAAhD;AAAA,gCACGP,MAAM,CAACO;AADV;AAAA;AAAA;AAAA;AAAA,6BAvBF,eA0BE,QAAC,SAAD,kCAAejE,QAAQ,CAACW,WAAT,CAAqB,WAArB,CAAf;AAAkD,uDAAwB+C,MAAM,CAACQ,SAA/B,CAAlD;AAAA,gCACGR,MAAM,CAACQ,SAAP,IAAoB5G,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,QAAf;AADvB;AAAA;AAAA;AAAA;AAAA,6BA1BF,eA6BE,QAAC,SAAD,kCAAerC,QAAQ,CAACW,WAAT,CAAqB,aAArB,CAAf;AAAoD,uDAAwB+C,MAAM,CAACS,WAA/B,CAApD;AAAA,gCACGT,MAAM,CAACS;AADV;AAAA;AAAA;AAAA;AAAA,6BA7BF,eAgCE,QAAC,SAAD,kCAAenE,QAAQ,CAACW,WAAT,CAAqB,YAArB,CAAf;AAAmD,uDAAwB+C,MAAM,CAACU,UAA/B,CAAnD;AAAA,gCACGV,MAAM,CAACU;AADV;AAAA;AAAA;AAAA;AAAA,6BAhCF,eAmCE,QAAC,SAAD,kCAAepE,QAAQ,CAACW,WAAT,CAAqB,aAArB,CAAf;AAAoD,uDAAwB+C,MAAM,CAACW,WAA/B,CAApD;AAAA,gCACGX,MAAM,CAACW,WAAP,CAAmBb,MAAnB,GAA4BrB,UAA5B,gBACC,QAAC,OAAD;AAAS,wBAAA,KAAK,MAAd;AAAe,wBAAA,KAAK,EAAEuB,MAAM,CAACW,WAA7B;AAAA,mCACGX,MAAM,CAACW,WAAP,CAAmBC,KAAnB,CAAyB,CAAzB,EAA4BnC,UAA5B,CADH;AAAA;AAAA;AAAA;AAAA;AAAA,+BADD,GAKCuB,MAAM,CAACW;AANX;AAAA;AAAA;AAAA;AAAA,6BAnCF,eA4CE,QAAC,SAAD,kCAAerE,QAAQ,CAACW,WAAT,CAAqB,eAArB,CAAf;AAAsD,uDAAwB+C,MAAM,CAACa,aAA/B,CAAtD;AAAA,gCACGjH,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAC7BQ,wBAAAA,KAAK,EAAE;AAAE2B,0BAAAA,IAAI,EAAEd,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEa,aAAhB;AAA+BE,0BAAAA,MAAM,EAAElH,MAAM,CAACmH,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAA7D;AADsB,uBAA9B;AADH;AAAA;AAAA;AAAA;AAAA,6BA5CF,eAiDE,QAAC,SAAD,kCAAe3E,QAAQ,CAACW,WAAT,CAAqB,YAArB,CAAf;AAAmD,uDAAwB+C,MAAM,CAACkB,UAA/B,CAAnD;AAAA,gCACGtH,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAC7BQ,wBAAAA,KAAK,EAAE;AAAE2B,0BAAAA,IAAI,EAAEd,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAEkB,UAAhB;AAA4BH,0BAAAA,MAAM,EAAElH,MAAM,CAACmH,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAA1D;AADsB,uBAA9B;AADH;AAAA;AAAA;AAAA;AAAA,6BAjDF,eAsDE,QAAC,SAAD,kCAAe3E,QAAQ,CAACW,WAAT,CAAqB,SAArB,CAAf;AAAgD,uDAAwB+C,MAAM,CAACmB,OAA/B,CAAhD;AAAA,6CACE;AAAA,kCAASnB,MAAM,CAACmB;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,6BAtDF,eAyDE,QAAC,SAAD,kCAAe7E,QAAQ,CAACW,WAAT,CAAqB,UAArB,CAAf;AAAiD,uDAAwB+C,MAAM,CAACoB,QAA/B,CAAjD;AAAA,gCACGpB,MAAM,CAACoB;AADV;AAAA;AAAA;AAAA;AAAA,6BAzDF,eA4DE,QAAC,SAAD,kCAAe9E,QAAQ,CAACW,WAAT,CAAqB,kBAArB,CAAf;AAAyD,uDAAwB+C,MAAM,CAACqB,gBAA/B,CAAzD;AAAA,gCACGrB,MAAM,CAACqB;AADV;AAAA;AAAA;AAAA;AAAA,6BA5DF;AAAA,qBAAerB,MAAM,CAACE,YAAtB;AAAA;AAAA;AAAA;AAAA,2BADQ;AAAA,iBAAV;AARJ;AAAA;AAAA;AAAA;AAAA,sBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAqFGtG,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnE,IAA3B,EAAiC,IAAjC,kBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAEhC,GAAG,CAAC+E,aAAD,EAAgB,UAAhB,CADX;AAEE,UAAA,KAAK,EAAE/E,GAAG,CAAC+E,aAAD,EAAgB,eAAhB,CAFZ;AAGE,UAAA,WAAW,EAAE/E,GAAG,CAAC+E,aAAD,EAAgB,iBAAhB,CAHlB;AAIE,UAAA,YAAY,EAAE/E,GAAG,CAAC+E,aAAD,EAAgB,2BAAhB,CAJnB;AAKE,UAAA,mBAAmB,EAAE/E,GAAG,CAAC+E,aAAD,EAAgB,kCAAhB;AAL1B;AAAA;AAAA;AAAA;AAAA,gBAtFJ;AAAA,sBAFJ,EAmGG,CAACrC,cAAD,IAAmB,CAACvC,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnE,IAA3B,EAAiC,IAAjC,CAApB,iBACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAC,CAAV;AAAA,+BACE,QAAC,KAAD;AACE,UAAA,KAAK,EAAE7B,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,qBAAf,CADT;AAEE,UAAA,IAAI,EAAE/E,KAAK,CAAC8E,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAFR;AAGE,UAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,kBAHR;AAIE,UAAA,OAAO;AAJT;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cApGJ,EA8GG,CAACpB,OAAO,IAAIF,oBAAoB,KAAK,EAArC,KAA4CzD,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnE,IAA3B,EAAiC,IAAjC,CAA5C,iBACC,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,CAAT;AAAA,+BACE,QAAC,eAAD;AACE,UAAA,UAAU,EAAEG,UADd;AAEE,UAAA,oBAAoB,EAAEyB,oBAFxB;AAGE,UAAA,uBAAuB,EAAEC,uBAH3B;AAIE,UAAA,UAAU,EAAEE,UAJd;AAKE,UAAA,aAAa,EAAEC,aALjB;AAME,UAAA,aAAa,EAAEE,aANjB;AAOE,UAAA,KAAK,EAAEC,KAPT;AAQE,UAAA,aAAa,EAAEC,aARjB;AASE,UAAA,mBAAmB,EAAEC,mBATvB;AAUE,UAAA,UAAU,EAAEC,UAVd;AAWE,UAAA,4BAA4B,EAAEL,4BAXhC;AAYE,UAAA,iBAAiB,EAAEM,iBAZrB;AAaE,UAAA,SAAS,EAAEC,SAbb;AAcE,UAAA,gBAAgB,EAAEC,gBAdpB;AAeE,UAAA,gBAAgB,EAAEC,gBAfpB;AAgBE,UAAA,mBAAmB,EAAEC;AAhBvB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cA/GJ;AAAA;AAAA;AAAA;AAAA;AAAA,YA9CF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsLD;;GAzNehD,yB;UA+BSX,O,EACDD,a;;;KAhCRY,yB","sourcesContent":["import React from 'react';\r\nimport get from 'lodash/get';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './LinkClaimSelectPolicy.styles';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport {\r\n  FormLegend,\r\n  TableCell,\r\n  TableHead,\r\n  Pagination,\r\n  Empty,\r\n  Tooltip,\r\n  TableFilters,\r\n  TableToolbar,\r\n  FormAutocompleteMui,\r\n  Skeleton,\r\n} from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\nimport { LinkClaimPolicy } from 'modules';\r\n\r\n// mui\r\nimport { makeStyles, TableContainer, Table, TableRow, TableBody, Typography, Box, RadioGroup, Radio } from '@material-ui/core';\r\n\r\nLinkClaimSelectPolicyView.propTypes = {\r\n  columnsArray: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  policyData: PropTypes.object.isRequired,\r\n  selectedPolicy: PropTypes.bool,\r\n  pagination: PropTypes.object.isRequired,\r\n  viewControl: PropTypes.object.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  isSearchByNull: PropTypes.bool,\r\n  isTableLoading: PropTypes.bool,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  viewFields: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleSort: PropTypes.func.isRequired,\r\n    handleSearch: PropTypes.func.isRequired,\r\n    handleSearchFilter: PropTypes.func.isRequired,\r\n    onResetFilter: PropTypes.func.isRequired,\r\n    onResetSearch: PropTypes.func.isRequired,\r\n    handlePolicyData: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    columnProps: PropTypes.func.isRequired,\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    onSelectSearchBy: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function LinkClaimSelectPolicyView({\r\n  columnsArray,\r\n  rows = [],\r\n  sort: sortObj,\r\n  policyData,\r\n  selectedPolicyRender,\r\n  setSelectedPolicyRender,\r\n  pagination,\r\n  tableFilterFields,\r\n  handlers,\r\n  viewControl,\r\n  viewFields,\r\n  isFetchingFilters,\r\n  isSearchByNull,\r\n  confirm,\r\n  validation,\r\n  setValidation,\r\n  sectionEnabledValidationFlag,\r\n  setActiveStep,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  policyInformation,\r\n  claimInfo,\r\n  handleFormStatus,\r\n  isTableLoading,\r\n  selectNextPolicy,\r\n  setSelectNextPolicy,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'LinkClaimSelectPolicy' })();\r\n  const { cols, sort } = useSort(columnsArray, sortObj, handlers.handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\r\n  const cellLength = 25;\r\n\r\n  return (\r\n    <Box mt={4}>\r\n      <FormLegend text={utils.string.t('claims.searchPolicy.claimRef')} />\r\n      <Box mt={-2.5}>\r\n        <Typography variant=\"h5\">{claimInfo?.claimReference || ''}</Typography>\r\n      </Box>\r\n\r\n      <Box mt={4}>\r\n        <FormLegend text={utils.string.t('claims.searchPolicy.searchPolicies')} />\r\n        <Box mt={-2.5}>\r\n          <Typography variant=\"h5\">{utils.string.t('claims.searchPolicy.linkPolicySearchInputLabel')}</Typography>\r\n        </Box>\r\n        <Box mt={4}>\r\n          <TableToolbar>\r\n            <TableFilters\r\n              search\r\n              searchBy={\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(viewFields, 'searchBy')}\r\n                  control={viewControl}\r\n                  nestedClasses={{ root: classes.autocomplete }}\r\n                  callback={(event, obj) => {\r\n                    handlers.onSelectSearchBy(obj?.value, obj?.label);\r\n                  }}\r\n                />\r\n              }\r\n              isSearchByNull={isSearchByNull}\r\n              searchPlaceholder={utils.string.t('claims.searchPolicy.minimumCharacters')}\r\n              searchMinChars={4}\r\n              filtersArray={tableFilterFields}\r\n              isFetchingFilters={isFetchingFilters}\r\n              columns\r\n              searchTerm={policyData.searchTerm}\r\n              columnsArray={cols}\r\n              handlers={{\r\n                onSearch: handlers.handleSearch,\r\n                onFilter: handlers.handleSearchFilter,\r\n                onResetFilter: handlers.onResetFilter,\r\n                onResetSearch: handlers.onResetSearch,\r\n                onToggleColumn: handlers.toggleColumn,\r\n              }}\r\n              nestedClasses={{ searchMaxWidth: classes.searchMaxWidth, searchLeft: classes.searchLeft }}\r\n            />\r\n          </TableToolbar>\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box mt={2}>\r\n        {utils.generic.isValidArray(rows) && (\r\n          <>\r\n            <TableContainer>\r\n              <RadioGroup name=\"policyRef\" value={policyData.xbPolicyID} onChange={handlers.handlePolicyData}>\r\n                <Table data-testid=\"claims-policy-search-table\">\r\n                  {utils.generic.isValidArray(rows, true) && <TableHead columns={cols} sorting={sort} />}\r\n                  <TableBody data-testid=\"claims-list\">\r\n                    {isTableLoading ? (\r\n                      <TableRow>\r\n                        <TableCell colSpan={cols?.length}>\r\n                          <Skeleton height={50} animation=\"wave\" displayNumber={5} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    ) : (\r\n                      rows?.map((policy) => (\r\n                        <TableRow key={policy.policyNumber} selected={Number(policyData.xbPolicyID) === policy.xbPolicyID}>\r\n                          <TableCell {...handlers.columnProps('policyRef')} data-testid={`row-col-${policy.policyNumber}`}>\r\n                            <Box display=\"flex\" alignItems=\"center\" ml={-0.5}>\r\n                              <Radio\r\n                                checked={Number(policyData.xbPolicyID) === policy.xbPolicyID}\r\n                                onChange={handlers.handlePolicyData}\r\n                                value={policy.xbPolicyID}\r\n                                name=\"policyRef\"\r\n                                color=\"primary\"\r\n                                className={classes.radio}\r\n                              />\r\n                              {policy.policyNumber}\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('statusCode')} data-testid={`row-col-${policy.statusCode}`}>\r\n                            {policy.statusCode}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('policyType')} data-testid={`row-col-${policy.policyType}`}>\r\n                            {policy.policyType}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('umr')} data-testid={`row-col-${policy.umr}`}>\r\n                            {policy.umr}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('insured')} data-testid={`row-col-${policy.insured}`}>\r\n                            {policy.insured}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('reInsured')} data-testid={`row-col-${policy.reInsured}`}>\r\n                            {policy.reInsured || utils.string.t('app.na')}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('coverHolder')} data-testid={`row-col-${policy.coverHolder}`}>\r\n                            {policy.coverHolder}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('clientName')} data-testid={`row-col-${policy.clientName}`}>\r\n                            {policy.clientName}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('riskDetails')} data-testid={`row-col-${policy.riskDetails}`}>\r\n                            {policy.riskDetails.length > cellLength ? (\r\n                              <Tooltip block title={policy.riskDetails}>\r\n                                {policy.riskDetails.slice(0, cellLength)}...\r\n                              </Tooltip>\r\n                            ) : (\r\n                              policy.riskDetails\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('inceptionDate')} data-testid={`row-col-${policy.inceptionDate}`}>\r\n                            {utils.string.t('format.date', {\r\n                              value: { date: policy?.inceptionDate, format: config.ui.format.date.text },\r\n                            })}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('expiryDate')} data-testid={`row-col-${policy.expiryDate}`}>\r\n                            {utils.string.t('format.date', {\r\n                              value: { date: policy?.expiryDate, format: config.ui.format.date.text },\r\n                            })}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('company')} data-testid={`row-col-${policy.company}`}>\r\n                            <strong>{policy.company}</strong>\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('division')} data-testid={`row-col-${policy.division}`}>\r\n                            {policy.division}\r\n                          </TableCell>\r\n                          <TableCell {...handlers.columnProps('businessTypeCode')} data-testid={`row-col-${policy.businessTypeCode}`}>\r\n                            {policy.businessTypeCode}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ))\r\n                    )}\r\n                  </TableBody>\r\n                </Table>\r\n              </RadioGroup>\r\n            </TableContainer>\r\n\r\n            {utils.generic.isValidArray(rows, true) && (\r\n              <Pagination\r\n                page={get(paginationObj, 'obj.page')}\r\n                count={get(paginationObj, 'obj.rowsTotal')}\r\n                rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n              />\r\n            )}\r\n          </>\r\n        )}\r\n\r\n        {!isTableLoading && !utils.generic.isValidArray(rows, true) && (\r\n          <Box mt={-2}>\r\n            <Empty\r\n              title={utils.string.t('claims.noMatchFound')}\r\n              text={utils.string.t('claims.noMatchDetails')}\r\n              icon={<IconSearchFile />}\r\n              padding\r\n            />\r\n          </Box>\r\n        )}\r\n\r\n        {(confirm || selectedPolicyRender === '') && utils.generic.isValidArray(rows, true) && (\r\n          <Box mt={2}>\r\n            <LinkClaimPolicy\r\n              policyData={policyData}\r\n              selectedPolicyRender={selectedPolicyRender}\r\n              setSelectedPolicyRender={setSelectedPolicyRender}\r\n              validation={validation}\r\n              setValidation={setValidation}\r\n              setActiveStep={setActiveStep}\r\n              index={index}\r\n              isFormsEdited={isFormsEdited}\r\n              setFormEditedStatus={setFormEditedStatus}\r\n              saveStatus={saveStatus}\r\n              sectionEnabledValidationFlag={sectionEnabledValidationFlag}\r\n              policyInformation={policyInformation}\r\n              claimInfo={claimInfo}\r\n              handleFormStatus={handleFormStatus}\r\n              selectNextPolicy={selectNextPolicy}\r\n              setSelectNextPolicy={setSelectNextPolicy}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}