{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useHistory, useParams } from 'react-router'; // app\n\nimport { RfiDashboardView } from './RfiDashboard.view';\nimport { selectRfiHistoryList, selectRfiHistoryDocumentList, selectClaimsTasksProcessingListSelected, getMultipleContextDocuments, selectorMultipleContextDocs } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RfiDashboard() {\n  _s();\n\n  var history = useHistory();\n  var params = useParams();\n  var dispatch = useDispatch();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  }); // Redux management\n\n  var tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\n  var rfiHistory = useSelector(selectRfiHistoryList);\n  var rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList);\n  var rfiLinkedDocs = useSelector(selectorMultipleContextDocs); // State management\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'rfiDetails'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(tasksProcessingSelected[0]),\n      _useState4 = _slicedToArray(_useState3, 1),\n      selectedTask = _useState4[0];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      dmsDocListParams = _useState6[0],\n      setDmsDocListParams = _useState6[1];\n\n  var rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.refType);\n  var isParentTaskTypeRFI = (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef) ? utils.claimsRfi.isRfiTask(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef) : false;\n  useEffect(function () {\n    var _tasksProcessingSelec;\n\n    if ((tasksProcessingSelected === null || tasksProcessingSelected === void 0 ? void 0 : tasksProcessingSelected.length) !== 1 || !(tasksProcessingSelected === null || tasksProcessingSelected === void 0 ? void 0 : (_tasksProcessingSelec = tasksProcessingSelected[0]) === null || _tasksProcessingSelec === void 0 ? void 0 : _tasksProcessingSelec.taskRef)) {\n      history.replace(config.routes.claimsFNOL.root);\n    }\n  }, [history, tasksProcessingSelected]);\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n\n    if (tabName === 'documents') {\n      var _tasksProcessingSelec3;\n\n      var allReferenceIds = [].concat(_toConsumableArray(rfiHistory === null || rfiHistory === void 0 ? void 0 : rfiHistory.map(function (item) {\n        var _tasksProcessingSelec2;\n\n        return {\n          referenceId: \"\".concat((_tasksProcessingSelec2 = tasksProcessingSelected[0]) === null || _tasksProcessingSelec2 === void 0 ? void 0 : _tasksProcessingSelec2.taskId, \"-\").concat(item === null || item === void 0 ? void 0 : item.caseIncidentNotesID),\n          sectionType: constants.DMS_CONTEXT_TASK\n        };\n      })), [utils.generic.isValidArray(tasksProcessingSelected, true) && {\n        referenceId: (_tasksProcessingSelec3 = tasksProcessingSelected[0]) === null || _tasksProcessingSelec3 === void 0 ? void 0 : _tasksProcessingSelec3.taskId,\n        sectionType: constants.DMS_CONTEXT_TASK\n      }]);\n      setDmsDocListParams(allReferenceIds);\n      if (utils.generic.isValidArray(allReferenceIds, true)) dispatch(getMultipleContextDocuments(allReferenceIds));\n    }\n  };\n\n  var tabs = [{\n    value: 'rfiDetails',\n    label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail')\n  }, {\n    value: 'documents',\n    label: utils.string.t('claims.rfiDashboard.tabs.documents')\n  }];\n  var breadcrumbs = [{\n    name: 'claimsProcessing',\n    label: utils.string.t('claims.loss.title'),\n    link: config.routes.claimsFNOL.root\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', {\n      lossRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.lossRef)\n  }].concat(_toConsumableArray(rfiOriginType === 'claim' || rfiOriginType === 'task' ? [{\n    name: 'claim',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\n      claimRef: (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.claimRef) || (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.processRef)\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat((selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.claimRef) || (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.processRef))\n  }] : []), _toConsumableArray(rfiOriginType === 'task' && !isParentTaskTypeRFI ? [{\n    name: 'task',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', {\n      taskRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.task, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef)\n  }] : rfiOriginType === 'task' && isParentTaskTypeRFI ? [{\n    name: 'rfiTask',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', {\n      taskRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.rfi, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef)\n  }] : []), [{\n    name: 'rfiTask',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', {\n      taskRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.rfi, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskRef),\n    active: true,\n    largeFont: true\n  }]); // abort\n\n  if (!selectedTask) return '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('claims.processing.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RfiDashboardView, {\n      rfiTask: selectedTask,\n      rfiOriginType: rfiOriginType,\n      tabs: tabs,\n      rfiHistory: utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory,\n      selectedTab: selectedTab,\n      breadcrumbs: breadcrumbs,\n      handleSelectTab: handleSelectTab,\n      rfiLinkedDocs: rfiLinkedDocs,\n      dmsDocListParams: dmsDocListParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RfiDashboard, \"cyeQoO7DHucTPMD8K5UAfrm9A5M=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RfiDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/RfiDashboard/RfiDashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Helmet","useHistory","useParams","RfiDashboardView","selectRfiHistoryList","selectRfiHistoryDocumentList","selectClaimsTasksProcessingListSelected","getMultipleContextDocuments","selectorMultipleContextDocs","utils","config","constants","RfiDashboard","history","params","dispatch","brand","state","ui","tasksProcessingSelected","rfiHistory","rfiHistoryDocList","rfiLinkedDocs","tab","selectedTab","setSelectedTab","selectedTask","dmsDocListParams","setDmsDocListParams","rfiOriginType","claimsRfi","checkRfiOriginType","refType","isParentTaskTypeRFI","parentTaskRef","isRfiTask","length","taskRef","replace","routes","claimsFNOL","root","handleSelectTab","tabName","allReferenceIds","map","item","referenceId","taskId","caseIncidentNotesID","sectionType","DMS_CONTEXT_TASK","generic","isValidArray","tabs","value","label","string","t","breadcrumbs","name","link","lossRef","loss","claimRef","processRef","claim","task","rfi","active","largeFont","app","getAppName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\n// app\r\nimport { RfiDashboardView } from './RfiDashboard.view';\r\nimport {\r\n  selectRfiHistoryList,\r\n  selectRfiHistoryDocumentList,\r\n  selectClaimsTasksProcessingListSelected,\r\n  getMultipleContextDocuments,\r\n  selectorMultipleContextDocs,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nexport default function RfiDashboard() {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const brand = useSelector((state) => state.ui.brand);\r\n\r\n  // Redux management\r\n  const tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\r\n  const rfiHistory = useSelector(selectRfiHistoryList);\r\n  const rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList);\r\n  const rfiLinkedDocs = useSelector(selectorMultipleContextDocs);\r\n\r\n  // State management\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'rfiDetails');\r\n  const [selectedTask] = useState(tasksProcessingSelected[0]);\r\n  const [dmsDocListParams, setDmsDocListParams] = useState([]);\r\n\r\n  const rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedTask?.refType);\r\n  const isParentTaskTypeRFI = selectedTask?.parentTaskRef ? utils.claimsRfi.isRfiTask(selectedTask?.parentTaskRef) : false;\r\n\r\n  useEffect(() => {\r\n    if (tasksProcessingSelected?.length !== 1 || !tasksProcessingSelected?.[0]?.taskRef) {\r\n      history.replace(config.routes.claimsFNOL.root);\r\n    }\r\n  }, [history, tasksProcessingSelected]);\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n    if (tabName === 'documents') {\r\n      const allReferenceIds = [\r\n        ...rfiHistory?.map((item) => {\r\n          return {\r\n            referenceId: `${tasksProcessingSelected[0]?.taskId}-${item?.caseIncidentNotesID}`,\r\n            sectionType: constants.DMS_CONTEXT_TASK,\r\n          };\r\n        }),\r\n        ...[\r\n          utils.generic.isValidArray(tasksProcessingSelected, true) && {\r\n            referenceId: tasksProcessingSelected[0]?.taskId,\r\n            sectionType: constants.DMS_CONTEXT_TASK,\r\n          },\r\n        ],\r\n      ];\r\n      setDmsDocListParams(allReferenceIds);\r\n      if (utils.generic.isValidArray(allReferenceIds, true)) dispatch(getMultipleContextDocuments(allReferenceIds));\r\n    }\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'rfiDetails', label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail') },\r\n    { value: 'documents', label: utils.string.t('claims.rfiDashboard.tabs.documents') },\r\n  ];\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsProcessing',\r\n      label: utils.string.t('claims.loss.title'),\r\n      link: config.routes.claimsFNOL.root,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', { lossRef: selectedTask?.lossRef })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${selectedTask?.lossRef}`,\r\n    },\r\n    ...(rfiOriginType === 'claim' || rfiOriginType === 'task'\r\n      ? [\r\n          {\r\n            name: 'claim',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\r\n              claimRef: selectedTask?.claimRef || selectedTask?.processRef,\r\n            })}`,\r\n            link: `${config.routes.claimsFNOL.claim}/${selectedTask?.claimRef || selectedTask?.processRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(rfiOriginType === 'task' && !isParentTaskTypeRFI\r\n      ? [\r\n          {\r\n            name: 'task',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', { taskRef: selectedTask?.parentTaskRef })}`,\r\n            link: `${config.routes.claimsFNOL.task}/${selectedTask?.parentTaskRef}`,\r\n          },\r\n        ]\r\n      : rfiOriginType === 'task' && isParentTaskTypeRFI\r\n      ? [\r\n          {\r\n            name: 'rfiTask',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', { taskRef: selectedTask?.parentTaskRef })}`,\r\n            link: `${config.routes.claimsFNOL.rfi}/${selectedTask?.parentTaskRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'rfiTask',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', { taskRef: selectedTask?.taskRef })}`,\r\n      link: `${config.routes.claimsFNOL.rfi}/${selectedTask?.taskRef}`,\r\n      active: true,\r\n      largeFont: true,\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!selectedTask) return '';\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('claims.processing.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <RfiDashboardView\r\n        rfiTask={selectedTask}\r\n        rfiOriginType={rfiOriginType}\r\n        tabs={tabs}\r\n        rfiHistory={utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory}\r\n        selectedTab={selectedTab}\r\n        breadcrumbs={breadcrumbs}\r\n        handleSelectTab={handleSelectTab}\r\n        rfiLinkedDocs={rfiLinkedDocs}\r\n        dmsDocListParams={dmsDocListParams}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}