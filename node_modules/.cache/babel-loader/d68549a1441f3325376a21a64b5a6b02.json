{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Search\\\\Search.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport { SearchView } from './Search.view';\nimport styles from './Search.styles';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSearch.propTypes = {\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  submitButton: PropTypes.bool,\n  submitButtonProps: PropTypes.object,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    focus: PropTypes.func\n  }).isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    btn: PropTypes.string,\n    formControlRoot: PropTypes.string,\n    inputPropsRoot: PropTypes.string\n  }),\n  minChars: PropTypes.number,\n  searchByTerm: PropTypes.string,\n  isSearchByActive: PropTypes.bool\n};\nSearch.defaultProps = {\n  submitButton: true,\n  handlers: {},\n  nestedClasses: {},\n  minChars: 1,\n  searchByTerm: '',\n  isSearchByActive: false\n};\nexport default function Search(_ref) {\n  _s();\n\n  var _classnames;\n\n  var text = _ref.text,\n      minChars = _ref.minChars,\n      placeholder = _ref.placeholder,\n      submitButton = _ref.submitButton,\n      submitButtonProps = _ref.submitButtonProps,\n      searchByTerm = _ref.searchByTerm,\n      isSearchByActive = _ref.isSearchByActive,\n      handlers = _ref.handlers,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'Search'\n  })();\n  var isSearchByNull = isSearchByActive ? !Boolean(searchByTerm) : false;\n  var searchByPrevValue = useRef(isSearchByActive ? searchByTerm : null);\n\n  var checkSearchByChanged = function checkSearchByChanged() {\n    return !isSearchByNull && (searchByPrevValue === null || searchByPrevValue === void 0 ? void 0 : searchByPrevValue.current) !== searchByTerm;\n  };\n\n  var _useState = useState(checkSearchByChanged()),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSearchByChanged = _useState2[0],\n      setIsSearchByChanged = _useState2[1];\n\n  useEffect(function () {\n    if (isSearchByActive && (searchByPrevValue === null || searchByPrevValue === void 0 ? void 0 : searchByPrevValue.current) !== searchByTerm) {\n      setIsSearchByChanged(checkSearchByChanged());\n      searchByPrevValue.current = searchByTerm;\n    }\n  }, [searchByTerm]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClear = function handleClear(reset) {\n    return function (event) {\n      reset();\n\n      if (utils.generic.isFunction(handlers.reset)) {\n        handlers.reset();\n      }\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var query = values.query;\n\n    if (query) {\n      if (text !== query) {\n        return handlers.search(query === null || query === void 0 ? void 0 : query.trim());\n      }\n\n      if (text === query && isSearchByActive && isSearchByChanged) {\n        setIsSearchByChanged(false);\n        return handlers.search(query === null || query === void 0 ? void 0 : query.trim(), searchByTerm);\n      }\n    }\n  };\n\n  var fields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: placeholder || '',\n    defaultValue: submitButton ? text || '' : '',\n    onChange: submitButton ? undefined : function (value) {\n      var searchTerm = value ? value.trim() : '';\n      handlers.search(searchTerm);\n      return value;\n    },\n    muiComponentProps: _objectSpread(_objectSpread({\n      autoComplete: 'off'\n    }, utils.generic.isFunction(handlers.focus) && {\n      onFocus: function onFocus() {\n        handlers.focus();\n      }\n    }), {}, {\n      classes: {\n        root: classnames((_classnames = {}, _defineProperty(_classnames, classes.input, true), _defineProperty(_classnames, nestedClasses.formControlRoot, Boolean(nestedClasses.formControlRoot)), _classnames))\n      },\n      InputProps: {\n        classes: {\n          root: classnames(_defineProperty({}, nestedClasses.inputPropsRoot, Boolean(nestedClasses.inputPropsRoot)))\n        }\n      },\n      'data-testid': 'search-field'\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(SearchView, {\n    query: text,\n    fields: fields,\n    submitButton: submitButton,\n    submitButtonProps: submitButtonProps,\n    minChars: minChars,\n    isSearchByNull: isSearchByNull,\n    isSearchByChanged: isSearchByChanged,\n    handlers: {\n      clear: handleClear,\n      search: handleSubmit\n    },\n    nestedClasses: nestedClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 132,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Search, \"sHMxvA+ylfRWj1C7gjJXdWwJ9XA=\");\n\n_c = Search;\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Search/Search.js"],"names":["React","useState","useEffect","useRef","PropTypes","classnames","SearchView","styles","utils","makeStyles","Search","propTypes","text","string","placeholder","submitButton","bool","submitButtonProps","object","handlers","shape","search","func","isRequired","reset","focus","nestedClasses","root","btn","formControlRoot","inputPropsRoot","minChars","number","searchByTerm","isSearchByActive","defaultProps","classes","name","isSearchByNull","Boolean","searchByPrevValue","checkSearchByChanged","current","isSearchByChanged","setIsSearchByChanged","handleClear","event","generic","isFunction","handleSubmit","values","query","trim","fields","type","defaultValue","onChange","undefined","value","searchTerm","muiComponentProps","autoComplete","onFocus","input","InputProps","clear"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport { SearchView } from './Search.view';\r\nimport styles from './Search.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nSearch.propTypes = {\r\n  text: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  submitButton: PropTypes.bool,\r\n  submitButtonProps: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    focus: PropTypes.func,\r\n  }).isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    formControlRoot: PropTypes.string,\r\n    inputPropsRoot: PropTypes.string,\r\n  }),\r\n  minChars: PropTypes.number,\r\n  searchByTerm: PropTypes.string,\r\n  isSearchByActive: PropTypes.bool,\r\n};\r\n\r\nSearch.defaultProps = {\r\n  submitButton: true,\r\n  handlers: {},\r\n  nestedClasses: {},\r\n  minChars: 1,\r\n  searchByTerm: '',\r\n  isSearchByActive: false,\r\n};\r\n\r\nexport default function Search({\r\n  text,\r\n  minChars,\r\n  placeholder,\r\n  submitButton,\r\n  submitButtonProps,\r\n  searchByTerm,\r\n  isSearchByActive,\r\n  handlers,\r\n  nestedClasses,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Search' })();\r\n\r\n  const isSearchByNull = isSearchByActive ? !Boolean(searchByTerm) : false;\r\n  const searchByPrevValue = useRef(isSearchByActive ? searchByTerm : null);\r\n\r\n  const checkSearchByChanged = () => !isSearchByNull && searchByPrevValue?.current !== searchByTerm;\r\n\r\n  const [isSearchByChanged, setIsSearchByChanged] = useState(checkSearchByChanged());\r\n\r\n  useEffect(() => {\r\n    if (isSearchByActive && searchByPrevValue?.current !== searchByTerm) {\r\n      setIsSearchByChanged(checkSearchByChanged());\r\n      searchByPrevValue.current = searchByTerm;\r\n    }\r\n  }, [searchByTerm]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleClear = (reset) => (event) => {\r\n    reset();\r\n\r\n    if (utils.generic.isFunction(handlers.reset)) {\r\n      handlers.reset();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (values = {}) => {\r\n    const { query } = values;\r\n\r\n    if (query) {\r\n      if (text !== query) {\r\n        return handlers.search(query?.trim());\r\n      }\r\n      if (text === query && isSearchByActive && isSearchByChanged) {\r\n        setIsSearchByChanged(false);\r\n        return handlers.search(query?.trim(), searchByTerm);\r\n      }\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: placeholder || '',\r\n      defaultValue: submitButton ? text || '' : '',\r\n      onChange: submitButton\r\n        ? undefined\r\n        : (value) => {\r\n            const searchTerm = value ? value.trim() : '';\r\n            handlers.search(searchTerm);\r\n\r\n            return value;\r\n          },\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        ...(utils.generic.isFunction(handlers.focus) && {\r\n          onFocus: () => {\r\n            handlers.focus();\r\n          },\r\n        }),\r\n        classes: {\r\n          root: classnames({\r\n            [classes.input]: true,\r\n            [nestedClasses.formControlRoot]: Boolean(nestedClasses.formControlRoot),\r\n          }),\r\n        },\r\n        InputProps: {\r\n          classes: {\r\n            root: classnames({\r\n              [nestedClasses.inputPropsRoot]: Boolean(nestedClasses.inputPropsRoot),\r\n            }),\r\n          },\r\n        },\r\n        'data-testid': 'search-field',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SearchView\r\n      query={text}\r\n      fields={fields}\r\n      submitButton={submitButton}\r\n      submitButtonProps={submitButtonProps}\r\n      minChars={minChars}\r\n      isSearchByNull={isSearchByNull}\r\n      isSearchByChanged={isSearchByChanged}\r\n      handlers={{\r\n        clear: handleClear,\r\n        search: handleSubmit,\r\n      }}\r\n      nestedClasses={nestedClasses}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}