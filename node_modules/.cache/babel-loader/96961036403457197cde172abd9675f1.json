{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AdminUser\\\\AdminUser.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './AdminUser.styles';\nimport { Button, TableCell, TableHead, Pagination, FilterBar, Overflow, Translate, PopoverMenu } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Table, TableRow, TableBody, makeStyles, Box, Grid } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAdminUserView.propTypes = {\n  userList: PropTypes.array,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number\n  }).isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleCreateUser: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  refDataDepartments: PropTypes.array.isRequired,\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  popoverActions: PropTypes.array.isRequired\n};\nexport function AdminUserView(_ref) {\n  var _this = this;\n\n  var _ref$userList = _ref.userList,\n      userList = _ref$userList === void 0 ? [] : _ref$userList,\n      pagination = _ref.pagination,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      handleCreateUser = _ref.handleCreateUser,\n      sort = _ref.sort,\n      refDataDepartments = _ref.refDataDepartments,\n      fields = _ref.fields,\n      actions = _ref.actions,\n      popoverActions = _ref.popoverActions;\n  var classes = makeStyles(styles, {\n    name: 'AdminUser'\n  })();\n  var cols = [{\n    id: 'fullname',\n    label: utils.string.t('admin.fullName')\n  }, {\n    id: 'emailAddress',\n    label: utils.string.t('admin.emailAddress')\n  }, {\n    id: 'departments',\n    label: utils.string.t('admin.department_plural')\n  }, {\n    id: 'offices',\n    label: utils.string.t('admin.office_plural')\n  }, {\n    id: 'role',\n    label: utils.string.t('admin.role')\n  }, {\n    id: 'admin',\n    label: utils.string.t('admin.title')\n  }, {\n    id: 'menu'\n  }];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      id: \"userFilter\",\n      fields: fields,\n      actions: actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"user-list\",\n          children: userList.map(function (user, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              \"data-testid\": \"user-\".concat(user.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-fullname\",\n                children: user.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-emailId\",\n                children: user.emailId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"user-departments\",\n                className: classes.departmentCell,\n                children: utils.departments.getDepartmentList(refDataDepartments, user.departmentIds)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"user-offices\",\n                className: classes.officeCell,\n                children: utils.client.offices.getNameList(user.offices)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-role\",\n                children: utils.user.getRoleString(user.role)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classes.isAdminCell,\n                \"data-testid\": \"user-isAdmin\",\n                children: user.isAdmin && /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  className: classes.adminIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 38\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                \"data-testid\": \"user-menu\",\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"admin-user-table-popover\",\n                  data: {\n                    user: user\n                  },\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 19\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 64,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            color: \"primary\",\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"admin.createUser\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, this),\n            \"data-testid\": \"admin-create-button\",\n            onClick: function onClick() {\n              return handleCreateUser();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = AdminUserView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminUserView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AdminUser/AdminUser.view.js"],"names":["React","PropTypes","styles","Button","TableCell","TableHead","Pagination","FilterBar","Overflow","Translate","PopoverMenu","utils","Table","TableRow","TableBody","makeStyles","Box","Grid","AddIcon","CheckIcon","AdminUserView","propTypes","userList","array","pagination","shape","page","number","isRequired","rowsPerPage","rowsTotal","handleChangePage","func","handleChangeRowsPerPage","handleCreateUser","sort","object","refDataDepartments","fields","actions","popoverActions","classes","name","cols","id","label","string","t","map","user","index","fullName","emailId","departmentCell","departments","getDepartmentList","departmentIds","officeCell","client","offices","getNameList","getRoleString","role","isAdminCell","isAdmin","adminIcon"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './AdminUser.styles';\r\nimport { Button, TableCell, TableHead, Pagination, FilterBar, Overflow, Translate, PopoverMenu } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Table, TableRow, TableBody, makeStyles, Box, Grid } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nAdminUserView.propTypes = {\r\n  userList: PropTypes.array,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number,\r\n  }).isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  handleCreateUser: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  refDataDepartments: PropTypes.array.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function AdminUserView({\r\n  userList = [],\r\n  pagination,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleCreateUser,\r\n  sort,\r\n  refDataDepartments,\r\n  fields,\r\n  actions,\r\n  popoverActions,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'AdminUser' })();\r\n\r\n  const cols = [\r\n    { id: 'fullname', label: utils.string.t('admin.fullName') },\r\n    { id: 'emailAddress', label: utils.string.t('admin.emailAddress') },\r\n    { id: 'departments', label: utils.string.t('admin.department_plural') },\r\n    { id: 'offices', label: utils.string.t('admin.office_plural') },\r\n    { id: 'role', label: utils.string.t('admin.role') },\r\n    { id: 'admin', label: utils.string.t('admin.title') },\r\n    { id: 'menu' },\r\n  ];\r\n\r\n  return (\r\n    <div>\r\n      <FilterBar id=\"userFilter\" fields={fields} actions={actions} />\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody data-testid=\"user-list\">\r\n            {userList.map((user, index) => {\r\n              return (\r\n                <TableRow key={index} hover data-testid={`user-${user.id}`}>\r\n                  <TableCell nowrap data-testid=\"user-fullname\">\r\n                    {user.fullName}\r\n                  </TableCell>\r\n                  <TableCell nowrap data-testid=\"user-emailId\">\r\n                    {user.emailId}\r\n                  </TableCell>\r\n                  <TableCell data-testid=\"user-departments\" className={classes.departmentCell}>\r\n                    {utils.departments.getDepartmentList(refDataDepartments, user.departmentIds)}\r\n                  </TableCell>\r\n                  <TableCell data-testid=\"user-offices\" className={classes.officeCell}>\r\n                    {utils.client.offices.getNameList(user.offices)}\r\n                  </TableCell>\r\n                  <TableCell nowrap data-testid=\"user-role\">\r\n                    {utils.user.getRoleString(user.role)}\r\n                  </TableCell>\r\n                  <TableCell className={classes.isAdminCell} data-testid=\"user-isAdmin\">\r\n                    {user.isAdmin && <CheckIcon className={classes.adminIcon} />}\r\n                  </TableCell>\r\n                  <TableCell menu data-testid={`user-menu`}>\r\n                    <PopoverMenu id=\"admin-user-table-popover\" data={{ user }} items={popoverActions} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box mt={2}>\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              text={<Translate label=\"admin.createUser\" />}\r\n              data-testid=\"admin-create-button\"\r\n              onClick={() => handleCreateUser()}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Pagination\r\n            page={pagination.page}\r\n            count={pagination.rowsTotal}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}