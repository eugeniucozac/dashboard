{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsRiskRefTabTable\\\\ProcessingInstructionsRiskRefTabTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './ProcessingInstructionsRiskRefTabTable.styles';\nimport { Badge, Overflow, TableCell, TableHead, Button } from 'components';\nimport * as utils from 'utils';\nimport { useMedia } from 'hooks'; // mui\n\nimport { makeStyles, Checkbox, TableContainer, Table, TableBody, TableRow } from '@material-ui/core';\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\nimport CheckIcon from '@material-ui/icons/Check';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nProcessingInstructionsRiskRefTabTableView.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  selectedRefinementColumns: PropTypes.bool,\n  isDocumentsEditable: PropTypes.bool,\n  handlers: PropTypes.shape({\n    download: PropTypes.func.isRequired,\n    manageSetting: PropTypes.func.isRequired,\n    confirmRemoveDocumentModal: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsRiskRefTabTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var documents = _ref.documents,\n      columns = _ref.columns,\n      selectedRefinementColumns = _ref.selectedRefinementColumns,\n      isDocumentsEditable = _ref.isDocumentsEditable,\n      handlers = _ref.handlers;\n\n  var _useMedia = useMedia(),\n      mobile = _useMedia.mobile,\n      tablet = _useMedia.tablet,\n      wideUp = _useMedia.wideUp;\n\n  var classes = makeStyles(styles, {\n    name: 'ProcessingInstructionsRiskRefTabTable'\n  })({\n    isMobile: mobile,\n    isTablet: tablet,\n    wide: wideUp\n  });\n  return /*#__PURE__*/_jsxDEV(Overflow, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      className: classes.tableContainer,\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        \"data-testid\": \"riskRefs-grid\",\n        stickyHeader: true,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: columns,\n          nestedClasses: {\n            tableHead: classes.tableHead\n          },\n          \"data-testid\": \"riskRefs-grid-th\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"riskRef-grid-body\",\n          children: documents === null || documents === void 0 ? void 0 : documents.riskReferences.map(function (riskRef, idx) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                left: true,\n                children: (riskRef.leadPolicy || riskRef.isLeadPolicy === 'Yes') && /*#__PURE__*/_jsxDEV(Badge, {\n                  badgeContent: /*#__PURE__*/_jsxDEV(CheckIcon, {\n                    className: classes.icon\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 52,\n                    columnNumber: 44\n                  }, _this),\n                  type: \"success\",\n                  compact: true,\n                  standalone: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                children: riskRef.riskRefId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                children: riskRef.assuredName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: riskRef.yoa\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: riskRef.xbInstance\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: riskRef.clientName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: riskRef.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                children: riskRef.riskDetails\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, _this), selectedRefinementColumns && /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  children: riskRef.endorsementNumber\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    color: \"primary\",\n                    checked: riskRef.isNonPremium === 'Yes',\n                    disabled: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 66,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 65,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true), isDocumentsEditable && /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                center: true,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: InsertDriveFileIcon,\n                  size: \"medium\",\n                  variant: \"text\",\n                  color: \"default\",\n                  tooltip: {\n                    title: utils.string.t('app.uploadDocuments')\n                  },\n                  light: true,\n                  onClick: function onClick() {\n                    handlers.manageSetting({\n                      riskRef: riskRef\n                    });\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, _this)]\n            }, riskRef.riskRefId + '_' + idx, true, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsRiskRefTabTableView, \"g+nDwyDAruIxvhLkYhqycdwO758=\", false, function () {\n  return [useMedia];\n});\n\n_c = ProcessingInstructionsRiskRefTabTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsRiskRefTabTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsRiskRefTabTable/ProcessingInstructionsRiskRefTabTable.view.js"],"names":["React","PropTypes","styles","Badge","Overflow","TableCell","TableHead","Button","utils","useMedia","makeStyles","Checkbox","TableContainer","Table","TableBody","TableRow","InsertDriveFileIcon","CheckIcon","ProcessingInstructionsRiskRefTabTableView","propTypes","instruction","object","isRequired","columns","array","selectedRefinementColumns","bool","isDocumentsEditable","handlers","shape","download","func","manageSetting","confirmRemoveDocumentModal","documents","mobile","tablet","wideUp","classes","name","isMobile","isTablet","wide","tableContainer","tableHead","riskReferences","map","riskRef","idx","leadPolicy","isLeadPolicy","icon","riskRefId","assuredName","yoa","xbInstance","clientName","status","riskDetails","endorsementNumber","isNonPremium","title","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './ProcessingInstructionsRiskRefTabTable.styles';\r\nimport { Badge, Overflow, TableCell, TableHead, Button } from 'components';\r\nimport * as utils from 'utils';\r\nimport { useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { makeStyles, Checkbox, TableContainer, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport InsertDriveFileIcon from '@material-ui/icons/InsertDriveFile';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\n\r\nProcessingInstructionsRiskRefTabTableView.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  selectedRefinementColumns: PropTypes.bool,\r\n  isDocumentsEditable: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    download: PropTypes.func.isRequired,\r\n    manageSetting: PropTypes.func.isRequired,\r\n    confirmRemoveDocumentModal: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsRiskRefTabTableView({\r\n  documents,\r\n  columns,\r\n  selectedRefinementColumns,\r\n  isDocumentsEditable,\r\n  handlers,\r\n}) {\r\n  const { mobile, tablet, wideUp } = useMedia();\r\n  const classes = makeStyles(styles, { name: 'ProcessingInstructionsRiskRefTabTable' })({\r\n    isMobile: mobile,\r\n    isTablet: tablet,\r\n    wide: wideUp,\r\n  });\r\n\r\n  return (\r\n    <Overflow>\r\n      <TableContainer className={classes.tableContainer}>\r\n        <Table size=\"small\" data-testid=\"riskRefs-grid\" stickyHeader>\r\n          <TableHead columns={columns} nestedClasses={{ tableHead: classes.tableHead }} data-testid=\"riskRefs-grid-th\" />\r\n          <TableBody data-testid=\"riskRef-grid-body\">\r\n            {documents?.riskReferences.map((riskRef, idx) => {\r\n              return (\r\n                <TableRow key={riskRef.riskRefId + '_' + idx} hover>\r\n                  <TableCell nowrap left>\r\n                    {(riskRef.leadPolicy || riskRef.isLeadPolicy === 'Yes') && (\r\n                      <Badge badgeContent={<CheckIcon className={classes.icon} />} type=\"success\" compact standalone />\r\n                    )}\r\n                  </TableCell>\r\n                  <TableCell nowrap>{riskRef.riskRefId}</TableCell>\r\n                  <TableCell nowrap>{riskRef.assuredName}</TableCell>\r\n                  <TableCell>{riskRef.yoa}</TableCell>\r\n                  <TableCell>{riskRef.xbInstance}</TableCell>\r\n                  <TableCell>{riskRef.clientName}</TableCell>\r\n                  <TableCell>{riskRef.status}</TableCell>\r\n                  <TableCell>{riskRef.riskDetails}</TableCell>\r\n                  {selectedRefinementColumns && (\r\n                    <>\r\n                      <TableCell>{riskRef.endorsementNumber}</TableCell>\r\n                      <TableCell>\r\n                        <Checkbox color=\"primary\" checked={riskRef.isNonPremium === 'Yes'} disabled />\r\n                      </TableCell>\r\n                    </>\r\n                  )}\r\n                  {isDocumentsEditable && (\r\n                    <TableCell menu center>\r\n                      <Button\r\n                        icon={InsertDriveFileIcon}\r\n                        size=\"medium\"\r\n                        variant=\"text\"\r\n                        color=\"default\"\r\n                        tooltip={{ title: utils.string.t('app.uploadDocuments') }}\r\n                        light\r\n                        onClick={() => {\r\n                          handlers.manageSetting({ riskRef });\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                  )}\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n    </Overflow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}