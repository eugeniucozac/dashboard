{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ReportGroupSearchUsers\\\\ReportGroupSearchUsers.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useMedia } from 'hooks'; // app\n\nimport { Overflow, TableCell, TableHead } from 'components';\nimport * as utils from 'utils';\nimport styles from './ReportGroupSearchUsers.styles';\nimport config from 'config'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody, Grid } from '@material-ui/core';\nimport CheckIcon from '@material-ui/icons/Check';\nimport AddIcon from '@material-ui/icons/Add';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReportGroupSearchUsersView.propTypes = {\n  userList: PropTypes.array,\n  sort: PropTypes.object,\n  handleAddUser: PropTypes.func.isRequired\n};\nexport function ReportGroupSearchUsersView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$userList = _ref.userList,\n      userList = _ref$userList === void 0 ? [] : _ref$userList,\n      handleAddUser = _ref.handleAddUser;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'ReportGroupSearch'\n  })();\n\n  var _config$ui = config === null || config === void 0 ? void 0 : config.ui,\n      pagination = _config$ui.pagination;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(media.mobile ? pagination.defaultMobile : pagination.default),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  var cols = [{\n    id: 'fullname',\n    label: utils.string.t('admin.fullName')\n  }, {\n    id: 'emailAddress',\n    label: utils.string.t('admin.emailAddress')\n  }, {\n    id: 'addUser',\n    label: utils.string.t('app.addUser')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"user-list\",\n          children: userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (user, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              \"data-testid\": \"user-\".concat(user.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-fullname\",\n                children: user.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-emailId\",\n                children: user.emailId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"user-hasAccess\",\n                children: user.hasAccess ? /*#__PURE__*/_jsxDEV(CheckIcon, {\n                  className: classes.checkIcon\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 23\n                }, _this) : /*#__PURE__*/_jsxDEV(AddIcon, {\n                  className: classes.hover,\n                  onClick: function onClick(e) {\n                    return handleAddUser(user);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 19\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(TablePagination, {\n        rowsPerPageOptions: pagination.options,\n        component: \"div\",\n        count: userList.length,\n        rowsPerPage: rowsPerPage,\n        page: page,\n        onPageChange: handleChangePage,\n        onRowsPerPageChange: handleChangeRowsPerPage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReportGroupSearchUsersView, \"pDuT93PWrEwsPpI+h/LcC9wP6FY=\", false, function () {\n  return [useMedia];\n});\n\n_c = ReportGroupSearchUsersView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportGroupSearchUsersView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ReportGroupSearchUsers/ReportGroupSearchUsers.view.js"],"names":["React","useState","PropTypes","useMedia","Overflow","TableCell","TableHead","utils","styles","config","makeStyles","Table","TableRow","TableBody","Grid","CheckIcon","AddIcon","TablePagination","ReportGroupSearchUsersView","propTypes","userList","array","sort","object","handleAddUser","func","isRequired","media","classes","name","ui","pagination","page","setPage","mobile","defaultMobile","default","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","cols","id","label","string","t","slice","map","user","index","fullName","emailId","hasAccess","checkIcon","hover","e","options","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useMedia } from 'hooks';\r\n\r\n// app\r\nimport { Overflow, TableCell, TableHead } from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './ReportGroupSearchUsers.styles';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody, Grid } from '@material-ui/core';\r\nimport CheckIcon from '@material-ui/icons/Check';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nReportGroupSearchUsersView.propTypes = {\r\n  userList: PropTypes.array,\r\n  sort: PropTypes.object,\r\n  handleAddUser: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ReportGroupSearchUsersView({ userList = [], handleAddUser }) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'ReportGroupSearch' })();\r\n  const { pagination } = config?.ui;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(media.mobile ? pagination.defaultMobile : pagination.default);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const cols = [\r\n    { id: 'fullname', label: utils.string.t('admin.fullName') },\r\n    { id: 'emailAddress', label: utils.string.t('admin.emailAddress') },\r\n    { id: 'addUser', label: utils.string.t('app.addUser') },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} />\r\n          <TableBody data-testid=\"user-list\">\r\n            {userList.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((user, index) => {\r\n              return (\r\n                <TableRow key={index} hover data-testid={`user-${user.id}`}>\r\n                  <TableCell nowrap data-testid=\"user-fullname\">\r\n                    {user.fullName}\r\n                  </TableCell>\r\n                  <TableCell nowrap data-testid=\"user-emailId\">\r\n                    {user.emailId}\r\n                  </TableCell>\r\n                  <TableCell data-testid=\"user-hasAccess\">\r\n                    {user.hasAccess ? (\r\n                      <CheckIcon className={classes.checkIcon} />\r\n                    ) : (\r\n                      <AddIcon className={classes.hover} onClick={(e) => handleAddUser(user)} />\r\n                    )}\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      <Grid container>\r\n        <TablePagination\r\n          rowsPerPageOptions={pagination.options}\r\n          component=\"div\"\r\n          count={userList.length}\r\n          rowsPerPage={rowsPerPage}\r\n          page={page}\r\n          onPageChange={handleChangePage}\r\n          onRowsPerPageChange={handleChangeRowsPerPage}\r\n        />\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}