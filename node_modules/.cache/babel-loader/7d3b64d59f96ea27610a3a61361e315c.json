{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nexport var getReportingDetails = function getReportingDetails(reportId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reporting.actions.getReportingDetails'\n    };\n    dispatch(getReportingDetailsRequest(reportId));\n    dispatch(addLoader('getReportingDetails'));\n\n    if (!reportId) {\n      dispatch(getReportingDetailsFailure(defaultError));\n      dispatch(removeLoader('getReportingDetails'));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/report/\".concat(reportId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getReportingDetailsSuccess(data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getReportingDetailsFailure(err));\n\n      if (err.response.status === 500) {\n        dispatch(enqueueNotification('notification.reporting.reportDetails.notFound', 'error'));\n      }\n\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getReportingDetails'));\n    });\n  };\n};\nexport var getReportingDetailsRequest = function getReportingDetailsRequest(payload) {\n  return {\n    type: 'REPORTING_DETAILS_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getReportingDetailsSuccess = function getReportingDetailsSuccess(payload) {\n  return {\n    type: 'REPORTING_DETAILS_GET_SUCCESS',\n    payload: payload\n  };\n};\nexport var getReportingDetailsFailure = function getReportingDetailsFailure(error) {\n  return {\n    type: 'REPORTING_DETAILS_GET_FAILURE',\n    payload: error\n  };\n};\nexport var getReport = function getReport(payload) {\n  return {\n    type: 'REPORTING_REPORT_SELECTED',\n    payload: payload\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.reportDetails.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","utils","getReportingDetails","reportId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getReportingDetailsRequest","getReportingDetailsFailure","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getReportingDetailsSuccess","err","handleError","handleUnauthorized","status","payload","type","error","getReport"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getReportingDetails = (reportId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.getReportingDetails',\r\n  };\r\n\r\n  dispatch(getReportingDetailsRequest(reportId));\r\n  dispatch(addLoader('getReportingDetails'));\r\n\r\n  if (!reportId) {\r\n    dispatch(getReportingDetailsFailure(defaultError));\r\n    dispatch(removeLoader('getReportingDetails'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/report/${reportId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getReportingDetailsSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getReportingDetailsFailure(err));\r\n      if (err.response.status === 500) {\r\n        dispatch(enqueueNotification('notification.reporting.reportDetails.notFound', 'error'));\r\n      }\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReportingDetails'));\r\n    });\r\n};\r\n\r\nexport const getReportingDetailsRequest = (payload) => {\r\n  return {\r\n    type: 'REPORTING_DETAILS_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportingDetailsSuccess = (payload) => {\r\n  return {\r\n    type: 'REPORTING_DETAILS_GET_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportingDetailsFailure = (error) => {\r\n  return {\r\n    type: 'REPORTING_DETAILS_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getReport = (payload) => {\r\n  return {\r\n    type: 'REPORTING_REPORT_SELECTED',\r\n    payload,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}