{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditPlacementMarketsLayers\\\\EditPlacementMarketsLayers.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport get from 'lodash/get'; // app\n\nimport styles from './EditPlacementMarketsLayers.styles';\nimport { Button, Empty, FormActions, FormAutocompleteMui, FormCheckbox, FormContainer, FormDate, FormFields, FormGrid, FormHidden, FormSelect, FormText, PreventNavigation } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport AddIcon from '@material-ui/icons/Add';\nimport { useFormActions, useMedia } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditPlacementMarketsLayersView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  hasLayers: PropTypes.bool,\n  handlers: PropTypes.shape({\n    isStatusDeclined: PropTypes.func,\n    isStatusQuoted: PropTypes.func,\n    handleAddLayerClick: PropTypes.func\n  })\n};\nexport function EditPlacementMarketsLayersView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      hasLayers = _ref.hasLayers,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'EditPlacementMarketsLayers'\n  })();\n  var media = useMedia();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      watch = _useForm.watch,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState; // DO NO REMOVE!!!\n  // formState needs to be read/invoked before render otherwise it isn't updated\n  // https://react-hook-form.com/api/#formState\n\n\n  var _useState = useState(formState.dirtyFields),\n      _useState2 = _slicedToArray(_useState, 1),\n      dirtyFields = _useState2[0];\n\n  var layerValue = watch('layer');\n  useEffect(function () {\n    (layerValue === null || layerValue === void 0 ? void 0 : layerValue.id) === 0 && handlers.resetLayer(); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [layerValue]);\n\n  var _useFormActions = useFormActions(actions, reset, dirtyFields),\n      submit = _useFormActions.submit,\n      secondary = _useFormActions.secondary;\n\n  var closeAction = actions && actions.find(function (action) {\n    return action.name === 'close';\n  }) || {};\n  var resetAction = actions && actions.find(function (action) {\n    return action.name === 'reset';\n  }) || {};\n  var isMarketStatusDeclined = handlers.isStatusDeclined(watch('market_statusId'));\n  var isLayerMarketStatusDeclined = handlers.isStatusDeclined(watch('layerMarket_statusId'));\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"edit-placement-market\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.container,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            pr: 4,\n            className: classes.left,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'market', control, errors)), {}, {\n                  disabled: formState.isDirty\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 5,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'market_statusId', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 7,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'market_rationales', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 90,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                nestedClasses: isMarketStatusDeclined ? {} : {\n                  root: classes.declinature\n                },\n                children: /*#__PURE__*/_jsxDEV(Collapse, {\n                  \"in\": isMarketStatusDeclined,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'market_declinatures', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 95,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 94,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'market_underwriter', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'market_notes', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            pl: 4,\n            className: classes.right,\n            children: hasLayers ? /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 3,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'layer', control, errors)), {}, {\n                  disabled: formState.isDirty\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 5,\n                children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_statusId', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 115,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 7,\n                style: {\n                  paddingTop: media.desktopUp ? 38 : 16\n                },\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_quoteOptions', control, errors)), {}, {\n                  register: register,\n                  watch: watch\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                nestedClasses: isLayerMarketStatusDeclined ? {} : {\n                  root: classes.declinature\n                },\n                children: /*#__PURE__*/_jsxDEV(Collapse, {\n                  \"in\": isLayerMarketStatusDeclined,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_declinatures', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 129,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 9,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_uniqueMarketReference', control)), {}, {\n                  error: get(errors, 'layerMarket_uniqueMadd LaarketReference.id')\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                sm: 3,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_section', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 140,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_currency', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_premium', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 3,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_writtenLinePercentage', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_quoteDate', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 6,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_validUntilDate', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 161,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket_subjectivities', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'layerMarket', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n              width: 300,\n              title: utils.string.t('placement.marketing.noLayerTitle'),\n              text: \"\".concat(utils.string.t('placement.marketing.noLayerHint')),\n              button: {\n                text: utils.string.t('placement.marketing.addLayer'),\n                disabled: formState.isSubmitting || formState.isDirty,\n                icon: AddIcon,\n                action: handlers.handleAddLayerClick\n              },\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 180,\n                columnNumber: 25\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [closeAction && !formState.isDirty && /*#__PURE__*/_jsxDEV(Button, {\n          text: closeAction.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: closeAction.callback\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, this), resetAction && formState.isDirty && /*#__PURE__*/_jsxDEV(Button, {\n          text: resetAction.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: resetAction.callback(reset)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 13\n        }, this), secondary && /*#__PURE__*/_jsxDEV(Button, {\n          text: secondary.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          onClick: handleSubmit(secondary.handler),\n          color: \"secondary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 196,\n          columnNumber: 13\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: formState.isDirty\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 215,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPlacementMarketsLayersView, \"nwfs7QE7S1gP9yxONlhQHsMfACA=\", false, function () {\n  return [useMedia, useForm, useFormActions];\n});\n\n_c = EditPlacementMarketsLayersView;\nEditPlacementMarketsLayersView.displayName = \"EditPlacementMarketsLayersView\";\nEditPlacementMarketsLayersView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditPlacementMarketsLayersView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasLayers\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"isStatusDeclined\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"isStatusQuoted\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleAddLayerClick\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditPlacementMarketsLayers\\\\EditPlacementMarketsLayers.view.js\"] = {\n    name: \"EditPlacementMarketsLayersView\",\n    docgenInfo: EditPlacementMarketsLayersView.__docgenInfo,\n    path: \"src\\\\forms\\\\EditPlacementMarketsLayers\\\\EditPlacementMarketsLayers.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlacementMarketsLayersView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditPlacementMarketsLayers/EditPlacementMarketsLayers.view.js"],"names":["React","useState","useEffect","PropTypes","useForm","yupResolver","get","styles","Button","Empty","FormActions","FormAutocompleteMui","FormCheckbox","FormContainer","FormDate","FormFields","FormGrid","FormHidden","FormSelect","FormText","PreventNavigation","AddIcon","useFormActions","useMedia","utils","makeStyles","Box","Collapse","EditPlacementMarketsLayersView","propTypes","fields","array","actions","hasLayers","bool","handlers","shape","isStatusDeclined","func","isStatusQuoted","handleAddLayerClick","classes","name","media","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","watch","register","reset","handleSubmit","formState","dirtyFields","layerValue","id","resetLayer","submit","secondary","closeAction","find","action","resetAction","isMarketStatusDeclined","isLayerMarketStatusDeclined","root","handler","container","left","getFieldProps","isDirty","declinature","right","paddingTop","desktopUp","string","t","text","disabled","isSubmitting","icon","label","callback"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './EditPlacementMarketsLayers.styles';\r\nimport {\r\n  Button,\r\n  Empty,\r\n  FormActions,\r\n  FormAutocompleteMui,\r\n  FormCheckbox,\r\n  FormContainer,\r\n  FormDate,\r\n  FormFields,\r\n  FormGrid,\r\n  FormHidden,\r\n  FormSelect,\r\n  FormText,\r\n  PreventNavigation,\r\n} from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport { useFormActions, useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\r\n\r\nEditPlacementMarketsLayersView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  hasLayers: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    isStatusDeclined: PropTypes.func,\r\n    isStatusQuoted: PropTypes.func,\r\n    handleAddLayerClick: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function EditPlacementMarketsLayersView({ fields, actions, hasLayers, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'EditPlacementMarketsLayers' })();\r\n  const media = useMedia();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, watch, register, reset, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  // DO NO REMOVE!!!\r\n  // formState needs to be read/invoked before render otherwise it isn't updated\r\n  // https://react-hook-form.com/api/#formState\r\n  const [dirtyFields] = useState(formState.dirtyFields);\r\n\r\n  const layerValue = watch('layer');\r\n\r\n  useEffect(() => {\r\n    layerValue?.id === 0 && handlers.resetLayer();\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [layerValue]);\r\n\r\n  const { submit, secondary } = useFormActions(actions, reset, dirtyFields);\r\n  const closeAction = (actions && actions.find((action) => action.name === 'close')) || {};\r\n  const resetAction = (actions && actions.find((action) => action.name === 'reset')) || {};\r\n\r\n  const isMarketStatusDeclined = handlers.isStatusDeclined(watch('market_statusId'));\r\n  const isLayerMarketStatusDeclined = handlers.isStatusDeclined(watch('layerMarket_statusId'));\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"edit-placement-market\">\r\n        <FormFields type=\"dialog\">\r\n          <div className={classes.container}>\r\n            <Box pr={4} className={classes.left}>\r\n              <FormGrid container spacing={3}>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'market', control, errors)} disabled={formState.isDirty} />\r\n                </FormGrid>\r\n\r\n                <FormGrid item xs={12} sm={5}>\r\n                  <FormSelect {...utils.form.getFieldProps(fields, 'market_statusId', control, errors)} />\r\n                </FormGrid>\r\n\r\n                <FormGrid item xs={12} sm={7}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'market_rationales', control, errors)} />\r\n                </FormGrid>\r\n\r\n                <FormGrid item xs={12} nestedClasses={isMarketStatusDeclined ? {} : { root: classes.declinature }}>\r\n                  <Collapse in={isMarketStatusDeclined}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'market_declinatures', control, errors)} />\r\n                  </Collapse>\r\n                </FormGrid>\r\n\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'market_underwriter', control, errors)} />\r\n                </FormGrid>\r\n\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'market_notes', control, errors)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </Box>\r\n            <Box pl={4} className={classes.right}>\r\n              {hasLayers ? (\r\n                <FormGrid container spacing={3}>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'layer', control, errors)} disabled={formState.isDirty} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={5}>\r\n                    <FormSelect {...utils.form.getFieldProps(fields, 'layerMarket_statusId', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={7} style={{ paddingTop: media.desktopUp ? 38 : 16 }}>\r\n                    <FormCheckbox\r\n                      {...utils.form.getFieldProps(fields, 'layerMarket_quoteOptions', control, errors)}\r\n                      register={register}\r\n                      watch={watch}\r\n                    />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} nestedClasses={isLayerMarketStatusDeclined ? {} : { root: classes.declinature }}>\r\n                    <Collapse in={isLayerMarketStatusDeclined}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'layerMarket_declinatures', control, errors)} />\r\n                    </Collapse>\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={9}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'layerMarket_uniqueMarketReference', control)}\r\n                      error={get(errors, 'layerMarket_uniqueMadd LaarketReference.id')}\r\n                    />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={3}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'layerMarket_section', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'layerMarket_currency', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'layerMarket_premium', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'layerMarket_writtenLinePercentage', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'layerMarket_quoteDate', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'layerMarket_validUntilDate', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'layerMarket_subjectivities', control, errors)} />\r\n                  </FormGrid>\r\n                  <FormHidden {...utils.form.getFieldProps(fields, 'layerMarket', control, errors)} />\r\n                </FormGrid>\r\n              ) : (\r\n                <Empty\r\n                  width={300}\r\n                  title={utils.string.t('placement.marketing.noLayerTitle')}\r\n                  text={`${utils.string.t('placement.marketing.noLayerHint')}`}\r\n                  button={{\r\n                    text: utils.string.t('placement.marketing.addLayer'),\r\n                    disabled: formState.isSubmitting || formState.isDirty,\r\n                    icon: AddIcon,\r\n                    action: handlers.handleAddLayerClick,\r\n                  }}\r\n                  icon={<IconSearchFile />}\r\n                  padding\r\n                />\r\n              )}\r\n            </Box>\r\n          </div>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {closeAction && !formState.isDirty && (\r\n            <Button text={closeAction.label} variant=\"text\" disabled={formState.isSubmitting} onClick={closeAction.callback} />\r\n          )}\r\n          {resetAction && formState.isDirty && (\r\n            <Button text={resetAction.label} variant=\"text\" disabled={formState.isSubmitting} onClick={resetAction.callback(reset)} />\r\n          )}\r\n          {secondary && (\r\n            <Button\r\n              text={secondary.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              onClick={handleSubmit(secondary.handler)}\r\n              color=\"secondary\"\r\n            />\r\n          )}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n      <PreventNavigation dirty={formState.isDirty} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}