{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { updatePiGridDataLoading, authLogout, updatePiHasNoGridData } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getProcessingInstructionsGridData = function getProcessingInstructionsGridData() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    var _processingInstructio, _processingInstructio2, _processingInstructio3, _processingInstructio4, _processingInstructio5;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        processingInstructions = _getState.processingInstructions;\n\n    var page = params.page,\n        size = params.size,\n        sortBy = params.sortBy,\n        direction = params.direction,\n        query = params.query,\n        _params$filters = params.filters,\n        filters = _params$filters === void 0 ? {} : _params$filters;\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getProcessingInstructionsGridData'\n    };\n    var prevQuery = get(processingInstructions, 'gridData.query') || '';\n    var newQuery = params.hasOwnProperty('query') ? query : prevQuery;\n    var prevFilters = get(processingInstructions, 'gridData.filters') || {};\n    var newFilters = params.hasOwnProperty('filters') ? filters : prevFilters;\n    var filtersObject = Object.entries(newFilters).reduce(function (acc, _ref) {\n      var _ref2 = _slicedToArray(_ref, 2),\n          key = _ref2[0],\n          value = _ref2[1];\n\n      var filterValues = value.map(function (v) {\n        return v.id;\n      }).join('|');\n      return filterValues ? _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, encodeURIComponent(filterValues))) : acc;\n    }, {});\n    dispatch(getGridDataRequest(params));\n    dispatch(updatePiGridDataLoading(true));\n\n    var apiParams = _objectSpread(_objectSpread({\n      page: page || 1,\n      pageSize: size || (processingInstructions === null || processingInstructions === void 0 ? void 0 : (_processingInstructio = processingInstructions.gridData) === null || _processingInstructio === void 0 ? void 0 : _processingInstructio.pageSize),\n      sortBy: sortBy || (processingInstructions === null || processingInstructions === void 0 ? void 0 : (_processingInstructio2 = processingInstructions.gridData) === null || _processingInstructio2 === void 0 ? void 0 : (_processingInstructio3 = _processingInstructio2.sort) === null || _processingInstructio3 === void 0 ? void 0 : _processingInstructio3.by),\n      direction: direction || (processingInstructions === null || processingInstructions === void 0 ? void 0 : (_processingInstructio4 = processingInstructions.gridData) === null || _processingInstructio4 === void 0 ? void 0 : (_processingInstructio5 = _processingInstructio4.sort) === null || _processingInstructio5 === void 0 ? void 0 : _processingInstructio5.direction) || ''\n    }, newQuery && {\n      searchBy: newQuery\n    }), filtersObject);\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: 'instructions',\n      params: apiParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getGridDataSuccess(data, newFilters));\n      return data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.post)'\n      }));\n      dispatch(updatePiHasNoGridData(true));\n      dispatch(getGridDataFailure(err));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(updatePiGridDataLoading(false));\n    });\n  };\n};\nexport var getGridDataRequest = function getGridDataRequest(params) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getGridDataSuccess = function getGridDataSuccess(json, filters) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_SUCCESS',\n    payload: {\n      items: json.data,\n      pagination: json.pagination,\n      filters: filters || {}\n    }\n  };\n};\nexport var getGridDataFailure = function getGridDataFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.getGridData.js"],"names":["updatePiGridDataLoading","authLogout","updatePiHasNoGridData","utils","get","getProcessingInstructionsGridData","params","dispatch","getState","auth","user","endpoint","config","vars","processingInstructions","page","size","sortBy","direction","query","filters","defaultError","file","prevQuery","newQuery","hasOwnProperty","prevFilters","newFilters","filtersObject","Object","entries","reduce","acc","key","value","filterValues","map","v","id","join","encodeURIComponent","getGridDataRequest","apiParams","pageSize","gridData","sort","by","searchBy","api","token","accessToken","ppService","path","then","response","handleResponse","json","handleNewData","data","getGridDataSuccess","catch","err","handleError","message","getGridDataFailure","handleUnauthorized","finally","type","payload","items","pagination","error"],"mappings":"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","sourcesContent":["import { updatePiGridDataLoading, authLogout, updatePiHasNoGridData } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getProcessingInstructionsGridData =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}, processingInstructions} = getState();\r\n    const { page, size, sortBy, direction, query, filters = {} } = params;\r\n\r\n    const defaultError = {\r\n      file: 'stores/processingInstructions.actions.getProcessingInstructionsGridData',\r\n    };\r\n\r\n    const prevQuery = get(processingInstructions, 'gridData.query') || '';\r\n    const newQuery = params.hasOwnProperty('query') ? query : prevQuery;\r\n\r\n    const prevFilters = get(processingInstructions, 'gridData.filters') || {};\r\n    const newFilters = params.hasOwnProperty('filters') ? filters : prevFilters;\r\n\r\n    const filtersObject = Object.entries(newFilters).reduce((acc, [key, value]) => {\r\n      const filterValues = value.map((v) => v.id).join('|');\r\n\r\n      return filterValues\r\n        ? {\r\n            ...acc,\r\n            [key]: encodeURIComponent(filterValues),\r\n          }\r\n        : acc;\r\n    }, {});\r\n\r\n    dispatch(getGridDataRequest(params));\r\n    dispatch(updatePiGridDataLoading(true));\r\n\r\n    const apiParams = {\r\n      page: page || 1,\r\n      pageSize: size || processingInstructions?.gridData?.pageSize,\r\n      sortBy: sortBy || processingInstructions?.gridData?.sort?.by,\r\n      direction: direction || processingInstructions?.gridData?.sort?.direction || '',\r\n      ...(newQuery && { searchBy: newQuery }),\r\n      ...filtersObject,\r\n    };\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.ppService,\r\n        path: 'instructions',\r\n        params: apiParams,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleNewData(json))\r\n      .then((data) => {\r\n        dispatch(getGridDataSuccess(data, newFilters));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.post)' });\r\n        dispatch(updatePiHasNoGridData(true));\r\n        dispatch(getGridDataFailure(err));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        dispatch(updatePiGridDataLoading(false));\r\n      });\r\n  };\r\n\r\nexport const getGridDataRequest = (params) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getGridDataSuccess = (json, filters) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_SUCCESS',\r\n    payload: {\r\n      items: json.data,\r\n      pagination: json.pagination,\r\n      filters: filters || {},\r\n    },\r\n  };\r\n};\r\n\r\nexport const getGridDataFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GRID_DATA_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}