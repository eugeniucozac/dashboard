{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { Button, FormActions, FormCheckbox, FormContainer, FormFields } from 'components';\nimport { withKnobs, boolean as _boolean, text, select } from '@storybook/addon-knobs';\nimport * as utils from 'utils';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Form',\n  component: FormCheckbox,\n  decorators: [withKnobs]\n};\nexport var Checkbox = function Checkbox() {\n  _s();\n\n  var fields = [{\n    name: 'single_value',\n    type: 'checkbox',\n    value: false,\n    label: 'Banana',\n    title: 'Single Value',\n    muiComponentProps: {\n      onChange: function onChange(name, value) {\n        console.log('[Single Value]', name, value);\n      }\n    }\n  }, {\n    name: 'single_option',\n    type: 'checkbox',\n    title: 'Single Option',\n    options: [{\n      label: 'Apple',\n      name: 'apple',\n      value: false\n    }],\n    value: ['apple'],\n    muiComponentProps: {\n      onChange: function onChange(group, name, value) {\n        console.log('[Single Option]', group, name, value);\n      }\n    }\n  }, {\n    name: 'multiple_options',\n    type: 'checkbox',\n    title: 'Multiple Options',\n    options: [{\n      label: 'Grapes',\n      name: 'grapes',\n      value: false\n    }, {\n      label: 'Kiwi',\n      name: 'kiwi',\n      value: false\n    }, {\n      label: 'Lime',\n      name: 'lime',\n      value: true\n    }, {\n      label: 'Lemon',\n      name: 'lemon',\n      value: true,\n      disabled: true\n    }, {\n      label: 'Orange',\n      name: 'orange',\n      value: false\n    }, {\n      label: 'Pineapple',\n      name: 'pineapple',\n      value: false\n    }],\n    value: ['lime', 'lemon'],\n    muiComponentProps: {\n      onChange: function onChange(group, name, value) {\n        console.log('[Multiple Options]', group, name, value);\n      }\n    }\n  }];\n  var type = select('Type', ['Single Value', 'Single Option', 'Multiple Options'], 'Single Value');\n  var defaultValues = utils.form.getInitialValues(fields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      handleSubmit = _useForm.handleSubmit;\n\n  var color = select('Color', ['primary', 'secondary'], 'primary');\n\n  var row = _boolean('Row', false);\n\n  var hint = text('Hint', 'Select at least one option...');\n  var error = _boolean('Error', false) ? {\n    message: 'Dummy error',\n    type: 'required'\n  } : undefined;\n\n  var submitHandler = function submitHandler(values) {\n    console.log('[submit]', values);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: handleSubmit(submitHandler),\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        children: [type === 'Single Value' && /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n          control: control,\n          register: register,\n          watch: watch\n        }, fields[0]), {}, {\n          hint: hint,\n          error: error,\n          color: color\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, _this), type === 'Single Option' && /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n          control: control\n        }, fields[1]), {}, {\n          color: color,\n          hint: hint,\n          error: error\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 40\n        }, _this), type === 'Multiple Options' && /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n          control: control,\n          register: register\n        }, fields[2]), {}, {\n          color: color,\n          hint: hint,\n          error: error,\n          muiFormGroupProps: {\n            row: row\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(FormActions, {\n        align: \"left\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: \"Submit\",\n          type: \"submit\",\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Checkbox, \"nGFMqtjumBjdqKpHrYmgz0Xo23k=\", false, function () {\n  return [useForm];\n});\n\nCheckbox.displayName = \"Checkbox\";\n_c = Checkbox;\nCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Checkbox\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\"] = {\n    name: \"Checkbox\",\n    docgenInfo: Checkbox.__docgenInfo,\n    path: \"src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormCheckbox/FormCheckbox.stories.js"],"names":["React","Button","FormActions","FormCheckbox","FormContainer","FormFields","withKnobs","boolean","text","select","utils","useForm","Box","title","component","decorators","Checkbox","fields","name","type","value","label","muiComponentProps","onChange","console","log","options","group","disabled","defaultValues","form","getInitialValues","control","register","watch","handleSubmit","color","row","hint","error","message","undefined","submitHandler","values"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Button, FormActions, FormCheckbox, FormContainer, FormFields } from 'components';\r\nimport { withKnobs, boolean, text, select } from '@storybook/addon-knobs';\r\nimport * as utils from 'utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'Form',\r\n  component: FormCheckbox,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Checkbox = () => {\r\n  const fields = [\r\n    {\r\n      name: 'single_value',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: 'Banana',\r\n      title: 'Single Value',\r\n      muiComponentProps: {\r\n        onChange: (name, value) => {\r\n          console.log('[Single Value]', name, value);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'single_option',\r\n      type: 'checkbox',\r\n      title: 'Single Option',\r\n      options: [{ label: 'Apple', name: 'apple', value: false }],\r\n      value: ['apple'],\r\n      muiComponentProps: {\r\n        onChange: (group, name, value) => {\r\n          console.log('[Single Option]', group, name, value);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'multiple_options',\r\n      type: 'checkbox',\r\n      title: 'Multiple Options',\r\n      options: [\r\n        { label: 'Grapes', name: 'grapes', value: false },\r\n        { label: 'Kiwi', name: 'kiwi', value: false },\r\n        { label: 'Lime', name: 'lime', value: true },\r\n        { label: 'Lemon', name: 'lemon', value: true, disabled: true },\r\n        { label: 'Orange', name: 'orange', value: false },\r\n        { label: 'Pineapple', name: 'pineapple', value: false },\r\n      ],\r\n      value: ['lime', 'lemon'],\r\n      muiComponentProps: {\r\n        onChange: (group, name, value) => {\r\n          console.log('[Multiple Options]', group, name, value);\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const type = select('Type', ['Single Value', 'Single Option', 'Multiple Options'], 'Single Value');\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const { control, register, watch, handleSubmit } = useForm({ defaultValues });\r\n\r\n  const color = select('Color', ['primary', 'secondary'], 'primary');\r\n  const row = boolean('Row', false);\r\n  const hint = text('Hint', 'Select at least one option...');\r\n  const error = boolean('Error', false) ? { message: 'Dummy error', type: 'required' } : undefined;\r\n\r\n  const submitHandler = (values) => {\r\n    console.log('[submit]', values);\r\n  };\r\n\r\n  return (\r\n    <Box width={1}>\r\n      <FormContainer onSubmit={handleSubmit(submitHandler)}>\r\n        <FormFields>\r\n          {type === 'Single Value' && (\r\n            <FormCheckbox control={control} register={register} watch={watch} {...fields[0]} hint={hint} error={error} color={color} />\r\n          )}\r\n          {type === 'Single Option' && <FormCheckbox control={control} {...fields[1]} color={color} hint={hint} error={error} />}\r\n          {type === 'Multiple Options' && (\r\n            <FormCheckbox\r\n              control={control}\r\n              register={register}\r\n              {...fields[2]}\r\n              color={color}\r\n              hint={hint}\r\n              error={error}\r\n              muiFormGroupProps={{ row }}\r\n            />\r\n          )}\r\n        </FormFields>\r\n\r\n        <FormActions align=\"left\">\r\n          <Button text=\"Submit\" type=\"submit\" color=\"primary\" />\r\n        </FormActions>\r\n      </FormContainer>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}