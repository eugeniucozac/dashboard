{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddProductsCarrier\\\\AddProductsCarrier.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { AddProductsCarrierView } from './AddProductsCarrier.view';\nimport { postCarrier } from 'stores';\nimport { productAdminSchema } from 'schemas';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddProductsCarrier.propTypes = {\n  fields: PropTypes.array,\n  handleClose: PropTypes.func.isRequired\n};\nAddProductsCarrier.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function AddProductsCarrier(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      submitHandler = _ref.submitHandler,\n      cancelHandler = _ref.cancelHandler,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var carriersLoading = useSelector(function (state) {\n    return state.party.carriers.loading;\n  });\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    return dispatch(postCarrier(values, true)).then(function (response) {\n      var isSuccess = response && response.id && !response.ok; // success\n\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\n        if (utils.generic.isFunction(handleClose)) {\n          handleClose();\n        }\n\n        return submitHandler(response);\n      } // fail\n\n\n      handleCancel();\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(cancelHandler)) {\n      cancelHandler();\n    }\n\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('products.admin.carriers.create'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  var hasFields = utils.generic.isValidArray(fields, true);\n\n  var _productAdminSchema$g = productAdminSchema.getSchema('carriers'),\n      schemaFields = _productAdminSchema$g.fields;\n\n  var fieldsArray = hasFields ? [fields] : [hydrateLabels(schemaFields)];\n  var hasArrayFields = utils.generic.isValidArray(fieldsArray, true); // abort\n\n  if (!hasArrayFields) return null;\n  return /*#__PURE__*/_jsxDEV(AddProductsCarrierView, {\n    fields: fieldsArray,\n    actions: actions,\n    loading: carriersLoading,\n    defaultValues: utils.form.getInitialValues(fieldsArray),\n    validationSchema: utils.form.getValidationSchema(fieldsArray)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddProductsCarrier, \"qfupZkHsg3W56ePoHqedGMqaLB0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddProductsCarrier;\nAddProductsCarrier.displayName = \"AddProductsCarrier\";\nAddProductsCarrier.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddProductsCarrier\",\n  \"props\": {\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddProductsCarrier\\\\AddProductsCarrier.js\"] = {\n    name: \"AddProductsCarrier\",\n    docgenInfo: AddProductsCarrier.__docgenInfo,\n    path: \"src\\\\forms\\\\AddProductsCarrier\\\\AddProductsCarrier.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddProductsCarrier\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddProductsCarrier/AddProductsCarrier.js"],"names":["React","PropTypes","useDispatch","useSelector","AddProductsCarrierView","postCarrier","productAdminSchema","utils","AddProductsCarrier","propTypes","fields","array","handleClose","func","isRequired","defaultProps","submitHandler","cancelHandler","dispatch","carriersLoading","state","party","carriers","loading","hydrateLabels","map","field","label","string","t","handleSubmit","values","then","response","isSuccess","id","ok","generic","isFunction","handleCancel","actions","name","handler","hasFields","isValidArray","getSchema","schemaFields","fieldsArray","hasArrayFields","form","getInitialValues","getValidationSchema"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { AddProductsCarrierView } from './AddProductsCarrier.view';\r\nimport { postCarrier } from 'stores';\r\nimport { productAdminSchema } from 'schemas';\r\nimport * as utils from 'utils';\r\n\r\nAddProductsCarrier.propTypes = {\r\n  fields: PropTypes.array,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nAddProductsCarrier.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function AddProductsCarrier({ fields, submitHandler, cancelHandler, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const carriersLoading = useSelector((state) => state.party.carriers.loading);\r\n  const hydrateLabels = (fields) => fields.map((field) => ({ ...field, label: utils.string.t(field.label) }));\r\n\r\n  const handleSubmit = (values) => {\r\n    return dispatch(postCarrier(values, true)).then((response) => {\r\n      const isSuccess = response && response.id && !response.ok;\r\n\r\n      // success\r\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\r\n        if (utils.generic.isFunction(handleClose)) {\r\n          handleClose();\r\n        }\r\n        return submitHandler(response);\r\n      }\r\n\r\n      // fail\r\n      handleCancel();\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(cancelHandler)) {\r\n      cancelHandler();\r\n    }\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('products.admin.carriers.create'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  const hasFields = utils.generic.isValidArray(fields, true);\r\n\r\n  const { fields: schemaFields } = productAdminSchema.getSchema('carriers');\r\n\r\n  const fieldsArray = hasFields ? [fields] : [hydrateLabels(schemaFields)];\r\n\r\n  const hasArrayFields = utils.generic.isValidArray(fieldsArray, true);\r\n\r\n  // abort\r\n  if (!hasArrayFields) return null;\r\n\r\n  return (\r\n    <AddProductsCarrierView\r\n      fields={fieldsArray}\r\n      actions={actions}\r\n      loading={carriersLoading}\r\n      defaultValues={utils.form.getInitialValues(fieldsArray)}\r\n      validationSchema={utils.form.getValidationSchema(fieldsArray)}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}