{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEnterLossInformation\\\\ClaimsEnterLossInformationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment'; // app\n\nimport styles from './ClaimsEnterLossInformation.styles';\nimport { ClaimsEnterLossInformationView } from './ClaimsEnterLossInformation.view';\nimport { selectLossId, selectUser } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEnterLossInformationForm.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired\n};\nexport function ClaimsEnterLossInformationForm(props) {\n  _s();\n\n  var classes = makeStyles(styles, {\n    name: 'ClaimsEnterLossInformation'\n  })();\n  var lossInformation = useSelector(selectLossId);\n  var loggedInUser = useSelector(selectUser);\n  var hasLossRef = Boolean(lossInformation.lossRef);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDatesRequired = _useState2[0],\n      setIsDatesRequired = _useState2[1];\n\n  var fields = [{\n    name: 'lossRef',\n    label: utils.string.t('claims.lossInformation.ref'),\n    type: 'text',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) || '',\n    muiComponentProps: {\n      disabled: true\n    }\n  }, {\n    name: 'userID',\n    type: 'text',\n    value: (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id) || ''\n  }, {\n    name: 'catCodesID',\n    label: utils.string.t('claims.lossInformation.catCode'),\n    type: 'autocompletemui',\n    options: props.formattedCatCodes,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: props.formattedCatCodes.find(function (c) {\n      var _c$id, _lossInformation$catC;\n\n      return ((_c$id = c.id) === null || _c$id === void 0 ? void 0 : _c$id.toString()) === (lossInformation === null || lossInformation === void 0 ? void 0 : (_lossInformation$catC = lossInformation.catCodesID) === null || _lossInformation$catC === void 0 ? void 0 : _lossInformation$catC.toString());\n    }) || props.formattedCatCodes[0],\n    muiComponentProps: {\n      classes: {\n        root: classes.catCodeSelect\n      }\n    },\n    callback: function callback(event, data) {\n      setIsDatesRequired(data !== null && (data === null || data === void 0 ? void 0 : data.id) !== '0');\n    }\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    label: \"\".concat(utils.string.t('claims.lossInformation.fromDate'), \" \").concat(isDatesRequired ? '*' : ''),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || null,\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('catCodesID', {\n      is: function is(val) {\n        return val !== null && (val === null || val === void 0 ? void 0 : val.id) !== '0';\n      },\n      then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\n      otherwise: Yup.date().nullable()\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    label: \"\".concat(utils.string.t('claims.lossInformation.toDate'), \" \").concat(isDatesRequired ? '*' : ''),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || null,\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    }).when('catCodesID', {\n      is: function is(val) {\n        return val !== null && (val === null || val === void 0 ? void 0 : val.id) !== '0';\n      },\n      then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.toDate')),\n      otherwise: Yup.date().nullable()\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'lossName',\n    label: \"\".concat(utils.string.t('claims.lossInformation.name'), \"*\"),\n    type: 'text',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName) || '',\n    validation: Yup.string().min(1, utils.string.t('claims.lossInformation.validation.minLossName')).max(50, utils.string.t('claims.lossInformation.validation.maxLossName')).required(utils.string.t('claims.lossInformation.validation.lossName')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 51\n      },\n      multiline: true,\n      rows: 1,\n      rowsMax: 1\n    }\n  }, {\n    name: 'lossDescription',\n    label: \"\".concat(utils.string.t('claims.lossInformation.details'), \"*\"),\n    type: 'textarea',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription) || '',\n    validation: Yup.string().max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription')).required(utils.string.t('claims.lossInformation.validation.lossDescription')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 351\n      },\n      multiline: true,\n      rows: 8,\n      rowsMax: 8\n    }\n  }, {\n    type: 'datepicker',\n    name: 'firstContactDate',\n    label: utils.string.t('claims.lossInformation.dateAndTime'),\n    icon: 'TodayIcon',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || utils.date.today(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'firstContactTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || new Date(),\n        format: 'HH:mm'\n      }\n    }),\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformationView, _objectSpread(_objectSpread({}, props), {}, {\n    fields: fields,\n    hasLossRef: hasLossRef,\n    lossInformation: lossInformation,\n    loggedInUser: loggedInUser\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 168,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ClaimsEnterLossInformationForm, \"tTJWS+qKKkM2sn8ZglIZaNDwx9A=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = ClaimsEnterLossInformationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEnterLossInformationForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEnterLossInformation/ClaimsEnterLossInformationForm.js"],"names":["React","useState","PropTypes","useSelector","Yup","moment","styles","ClaimsEnterLossInformationView","selectLossId","selectUser","utils","makeStyles","ClaimsEnterLossInformationForm","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","props","classes","name","lossInformation","loggedInUser","hasLossRef","Boolean","lossRef","isDatesRequired","setIsDatesRequired","fields","label","string","t","type","value","muiComponentProps","disabled","id","options","formattedCatCodes","optionKey","optionLabel","find","c","toString","catCodesID","root","catCodeSelect","callback","event","data","fromDate","icon","fullWidth","datepicker","validation","date","test","parent","toDate","isSameOrBefore","when","is","val","then","nullable","required","otherwise","outputFormat","isSameOrAfter","lossName","min","max","inputProps","maxLength","multiline","rows","rowsMax","lossDescription","firstContactDate","today","Date","format"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAcC,QAAd,QAA6B,OAA7B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,qCAAnB;AACA,SAASC,8BAAT,QAA+C,mCAA/C;AACA,SAASC,YAAT,EAAsBC,UAAtB,QAAwC,QAAxC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEAC,8BAA8B,CAACC,SAA/B,GAA2C;AACzCC,EAAAA,mBAAmB,EAAEZ,SAAS,CAACa,IAAV,CAAeC,UADK;AAEzCC,EAAAA,UAAU,EAAEf,SAAS,CAACgB,MAAV,CAAiBF,UAFY;AAGzCG,EAAAA,QAAQ,EAAEjB,SAAS,CAACa,IAAV,CAAeC,UAHgB;AAIzCI,EAAAA,YAAY,EAAElB,SAAS,CAACmB,IAAV,CAAeL,UAJY;AAKzCM,EAAAA,YAAY,EAAEpB,SAAS,CAACmB,IAAV,CAAeL,UALY;AAMzCO,EAAAA,UAAU,EAAErB,SAAS,CAACmB,IAAV,CAAeL,UANc;AAOzCQ,EAAAA,UAAU,EAAEtB,SAAS,CAACmB,IAAV,CAAeL,UAPc;AAQzCS,EAAAA,UAAU,EAAEvB,SAAS,CAACmB,IAAV,CAAeL;AARc,CAA3C;AAWA,OAAO,SAASJ,8BAAT,CAAwCc,KAAxC,EAA+C;AAAA;;AACpD,MAAMC,OAAO,GAAGhB,UAAU,CAACL,MAAD,EAAS;AAAEsB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,eAAe,GAAG1B,WAAW,CAACK,YAAD,CAAnC;AACA,MAAMsB,YAAY,GAAG3B,WAAW,CAACM,UAAD,CAAhC;AACA,MAAMsB,UAAU,GAAGC,OAAO,CAACH,eAAe,CAACI,OAAjB,CAA1B;;AAJoD,kBAMNhC,QAAQ,CAAC,KAAD,CANF;AAAA;AAAA,MAM7CiC,eAN6C;AAAA,MAM5BC,kBAN4B;;AASpD,MAAMC,MAAM,GAAG,CACb;AACER,IAAAA,IAAI,EAAE,SADR;AAEES,IAAAA,KAAK,EAAE3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,4BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEI,OAAjB,KAA4B,EAJrC;AAKES,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAE;AADO;AALrB,GADa,EAUb;AACEf,IAAAA,IAAI,EAAE,QADR;AAEEY,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE,CAAAX,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEc,EAAd,KAAoB;AAH7B,GAVa,EAeb;AACEhB,IAAAA,IAAI,EAAE,YADR;AAEES,IAAAA,KAAK,EAAE3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE,iBAHR;AAIEK,IAAAA,OAAO,EAAEnB,KAAK,CAACoB,iBAJjB;AAKEC,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,MANf;AAOEP,IAAAA,KAAK,EACHf,KAAK,CAACoB,iBAAN,CAAwBG,IAAxB,CAA6B,UAACC,CAAD;AAAA;;AAAA,aAAO,UAAAA,CAAC,CAACN,EAAF,gDAAMO,QAAN,SAAqBtB,eAArB,aAAqBA,eAArB,gDAAqBA,eAAe,CAAEuB,UAAtC,0DAAqB,sBAA6BD,QAA7B,EAArB,CAAP;AAAA,KAA7B,KAAqGzB,KAAK,CAACoB,iBAAN,CAAwB,CAAxB,CARzG;AASEJ,IAAAA,iBAAiB,EAAE;AACjBf,MAAAA,OAAO,EAAE;AACP0B,QAAAA,IAAI,EAAE1B,OAAO,CAAC2B;AADP;AADQ,KATrB;AAcEC,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQC,IAAR,EAAiB;AACzBtB,MAAAA,kBAAkB,CAACsB,IAAI,KAAK,IAAT,IAAiB,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEb,EAAN,MAAa,GAA/B,CAAlB;AACD;AAhBH,GAfa,EAiCb;AACEJ,IAAAA,IAAI,EAAE,YADR;AAEEZ,IAAAA,IAAI,EAAE,UAFR;AAGES,IAAAA,KAAK,YAAK3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAAL,cAA0DL,eAAe,GAAG,GAAH,GAAS,EAAlF,CAHP;AAIEO,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE6B,QAAjB,KAA6B,IAJtC;AAKEC,IAAAA,IAAI,EAAE,WALR;AAMEjB,IAAAA,iBAAiB,EAAE;AACjBkB,MAAAA,SAAS,EAAE,IADM;AAEjBjC,MAAAA,OAAO,EAAE;AACP0B,QAAAA,IAAI,EAAE1B,OAAO,CAACkC;AADP;AAFQ,KANrB;AAYEC,IAAAA,UAAU,EAAE1D,GAAG,CAAC2D,IAAJ,GACTC,IADS,CACJ,MADI,EACItD,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,mDAAf,CADJ,EACyE,UAAUE,KAAV,EAAiB;AAClG,aAAOA,KAAK,IAAI,KAAKI,OAAL,CAAaoB,MAAb,CAAoBC,MAA7B,GAAsC7D,MAAM,CAACoC,KAAD,CAAN,CAAc0B,cAAd,CAA6B,KAAKtB,OAAL,CAAaoB,MAAb,CAAoBC,MAAjD,CAAtC,GAAiG,IAAxG;AACD,KAHS,EAITE,IAJS,CAIJ,YAJI,EAIU;AAClBC,MAAAA,EAAE,EAAE,YAACC,GAAD;AAAA,eAASA,GAAG,KAAK,IAAR,IAAgB,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAE1B,EAAL,MAAY,GAArC;AAAA,OADc;AAElB2B,MAAAA,IAAI,EAAEnE,GAAG,CAAC2D,IAAJ,GAAWS,QAAX,GAAsBC,QAAtB,CAA+B/D,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,4CAAf,CAA/B,CAFY;AAGlBmC,MAAAA,SAAS,EAAEtE,GAAG,CAAC2D,IAAJ,GAAWS,QAAX;AAHO,KAJV,CAZd;AAqBEG,IAAAA,YAAY,EAAE;AArBhB,GAjCa,EAwDb;AACEnC,IAAAA,IAAI,EAAE,YADR;AAEEZ,IAAAA,IAAI,EAAE,QAFR;AAGES,IAAAA,KAAK,YAAK3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAAL,cAAwDL,eAAe,GAAG,GAAH,GAAS,EAAhF,CAHP;AAIEO,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEqC,MAAjB,KAA2B,IAJpC;AAKExB,IAAAA,iBAAiB,EAAE;AACjBkB,MAAAA,SAAS,EAAE,IADM;AAEjBjC,MAAAA,OAAO,EAAE;AACP0B,QAAAA,IAAI,EAAE1B,OAAO,CAACkC;AADP;AAFQ,KALrB;AAWEC,IAAAA,UAAU,EAAE1D,GAAG,CAAC2D,IAAJ,GACTC,IADS,CACJ,MADI,EACItD,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,kDAAf,CADJ,EACwE,UAAUE,KAAV,EAAiB;AACjG,aAAOA,KAAK,IAAI,KAAKI,OAAL,CAAaoB,MAAb,CAAoBP,QAA7B,GAAwCrD,MAAM,CAACoC,KAAD,CAAN,CAAcmC,aAAd,CAA4B,KAAK/B,OAAL,CAAaoB,MAAb,CAAoBP,QAAhD,CAAxC,GAAoG,IAA3G;AACD,KAHS,EAITU,IAJS,CAIJ,YAJI,EAIU;AAClBC,MAAAA,EAAE,EAAE,YAACC,GAAD;AAAA,eAASA,GAAG,KAAK,IAAR,IAAgB,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAE1B,EAAL,MAAY,GAArC;AAAA,OADc;AAElB2B,MAAAA,IAAI,EAAEnE,GAAG,CAAC2D,IAAJ,GAAWS,QAAX,GAAsBC,QAAtB,CAA+B/D,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,0CAAf,CAA/B,CAFY;AAGlBmC,MAAAA,SAAS,EAAEtE,GAAG,CAAC2D,IAAJ,GAAWS,QAAX;AAHO,KAJV,CAXd;AAoBEG,IAAAA,YAAY,EAAE;AApBhB,GAxDa,EA8Eb;AACE/C,IAAAA,IAAI,EAAE,UADR;AAEES,IAAAA,KAAK,YAAK3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,6BAAf,CAAL,MAFP;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEgD,QAAjB,KAA6B,EAJtC;AAKEf,IAAAA,UAAU,EAAE1D,GAAG,CAACkC,MAAJ,GACTwC,GADS,CACL,CADK,EACFpE,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,+CAAf,CADE,EAETwC,GAFS,CAEL,EAFK,EAEDrE,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,+CAAf,CAFC,EAGTkC,QAHS,CAGA/D,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,4CAAf,CAHA,CALd;AASEG,IAAAA,iBAAiB,EAAE;AACjBsC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADK;AAEjBC,MAAAA,SAAS,EAAE,IAFM;AAGjBC,MAAAA,IAAI,EAAE,CAHW;AAIjBC,MAAAA,OAAO,EAAE;AAJQ;AATrB,GA9Ea,EA8Fb;AACExD,IAAAA,IAAI,EAAE,iBADR;AAEES,IAAAA,KAAK,YAAK3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAAL,MAFP;AAGEC,IAAAA,IAAI,EAAE,UAHR;AAIEC,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEwD,eAAjB,KAAoC,EAJ7C;AAKEvB,IAAAA,UAAU,EAAE1D,GAAG,CAACkC,MAAJ,GACTyC,GADS,CACL,GADK,EACArE,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,sDAAf,CADA,EAETkC,QAFS,CAEA/D,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,mDAAf,CAFA,CALd;AAQEG,IAAAA,iBAAiB,EAAE;AACjBsC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADK;AAEjBC,MAAAA,SAAS,EAAE,IAFM;AAGjBC,MAAAA,IAAI,EAAE,CAHW;AAIjBC,MAAAA,OAAO,EAAE;AAJQ;AARrB,GA9Fa,EA6Gb;AACE5C,IAAAA,IAAI,EAAE,YADR;AAEEZ,IAAAA,IAAI,EAAE,kBAFR;AAGES,IAAAA,KAAK,EAAE3B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAHT;AAIEoB,IAAAA,IAAI,EAAE,WAJR;AAKElB,IAAAA,KAAK,EAAE,CAAAZ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEyD,gBAAjB,KAAqC5E,KAAK,CAACqD,IAAN,CAAWwB,KAAX,EAL9C;AAME7C,IAAAA,iBAAiB,EAAE;AACjBkB,MAAAA,SAAS,EAAE;AADM,KANrB;AASEE,IAAAA,UAAU,EAAE1D,GAAG,CAAC2D,IAAJ,GAAWgB,GAAX,CAAe,IAAIS,IAAJ,EAAf,EAA2B9E,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAA3B,CATd;AAUEoC,IAAAA,YAAY,EAAE;AAVhB,GA7Ga,EAyHb;AACEnC,IAAAA,IAAI,EAAE,MADR;AAEEZ,IAAAA,IAAI,EAAE,kBAFR;AAGE+B,IAAAA,IAAI,EAAE,gBAHR;AAIElB,IAAAA,KAAK,EAAE/B,KAAK,CAAC4B,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEE,MAAAA,KAAK,EAAE;AAAEsB,QAAAA,IAAI,EAAE,CAAAlC,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEyD,gBAAjB,KAAqC,IAAIE,IAAJ,EAA7C;AAAyDC,QAAAA,MAAM,EAAE;AAAjE;AAAT,KAA9B,CAJT;AAKE/C,IAAAA,iBAAiB,EAAE;AACjBkB,MAAAA,SAAS,EAAE;AADM;AALrB,GAzHa,CAAf;AAoIA,sBAAO,QAAC,8BAAD,kCAAoClC,KAApC;AAA2C,IAAA,MAAM,EAAEU,MAAnD;AAA2D,IAAA,UAAU,EAAEL,UAAvE;AAAmF,IAAA,eAAe,EAAEF,eAApG;AAAqH,IAAA,YAAY,EAAEC;AAAnI;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA9IelB,8B;UAEUT,W,EACHA,W;;;KAHPS,8B","sourcesContent":["import React,{useState} from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './ClaimsEnterLossInformation.styles';\r\nimport { ClaimsEnterLossInformationView } from './ClaimsEnterLossInformation.view';\r\nimport { selectLossId,selectUser } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nClaimsEnterLossInformationForm.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsEnterLossInformationForm(props) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsEnterLossInformation' })();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const loggedInUser = useSelector(selectUser);\r\n  const hasLossRef = Boolean(lossInformation.lossRef);\r\n\r\n  const [isDatesRequired, setIsDatesRequired] = useState(false);\r\n\r\n\r\n  const fields = [\r\n    {\r\n      name: 'lossRef',\r\n      label: utils.string.t('claims.lossInformation.ref'),\r\n      type: 'text',\r\n      value: lossInformation?.lossRef || '',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'userID',\r\n      type: 'text',\r\n      value: loggedInUser?.id || '',\r\n    },\r\n    {\r\n      name: 'catCodesID',\r\n      label: utils.string.t('claims.lossInformation.catCode'),\r\n      type: 'autocompletemui',\r\n      options: props.formattedCatCodes,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value:\r\n        props.formattedCatCodes.find((c) => c.id?.toString() === lossInformation?.catCodesID?.toString()) || props.formattedCatCodes[0],\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.catCodeSelect,\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        setIsDatesRequired(data !== null && data?.id !== '0');\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      label: `${utils.string.t('claims.lossInformation.fromDate')} ${isDatesRequired ? '*' : ''}`,\r\n      value: lossInformation?.fromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n          return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n        })\r\n        .when('catCodesID', {\r\n          is: (val) => val !== null && val?.id !== '0',\r\n          then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\r\n          otherwise: Yup.date().nullable(),\r\n        }),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      label: `${utils.string.t('claims.lossInformation.toDate')} ${isDatesRequired ? '*' : ''}`,\r\n      value: lossInformation?.toDate || null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n          return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n        })\r\n        .when('catCodesID', {\r\n          is: (val) => val !== null && val?.id !== '0',\r\n          then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.toDate')),\r\n          otherwise: Yup.date().nullable(),\r\n        }),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossName',\r\n      label: `${utils.string.t('claims.lossInformation.name')}*`,\r\n      type: 'text',\r\n      value: lossInformation?.lossName || '',\r\n      validation: Yup.string()\r\n        .min(1, utils.string.t('claims.lossInformation.validation.minLossName'))\r\n        .max(50, utils.string.t('claims.lossInformation.validation.maxLossName'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossName')),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 51 },\r\n        multiline: true,\r\n        rows: 1,\r\n        rowsMax: 1,\r\n      },\r\n    },\r\n    {\r\n      name: 'lossDescription',\r\n      label: `${utils.string.t('claims.lossInformation.details')}*`,\r\n      type: 'textarea',\r\n      value: lossInformation?.lossDescription || '',\r\n      validation: Yup.string()\r\n        .max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossDescription')),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 351 },\r\n        multiline: true,\r\n        rows: 8,\r\n        rowsMax: 8,\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'firstContactDate',\r\n      label: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      icon: 'TodayIcon',\r\n      value: lossInformation?.firstContactDate || utils.date.today(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'firstContactTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || new Date(), format: 'HH:mm' } }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <ClaimsEnterLossInformationView {...props} fields={fields} hasLossRef={hasLossRef} lossInformation={lossInformation} loggedInUser={loggedInUser} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}