{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport get from 'lodash/get';\nimport { addLoader, removeLoader, enqueueNotification, getComplexityReferralValues, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var removeComplexityReferralRuleValue = function removeComplexityReferralRuleValue(updatedMatrixData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.removeComplexityReferralRuleValue'\n    };\n    var complexRuleValueId = get(claims, 'complexityManagement.complexityReferralValueId').complexityRulesID;\n    dispatch(removeComplexityReferralRuleValueRequest(updatedMatrixData));\n    dispatch(addLoader('removeComplexityReferralRuleValue'));\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims-triage/complex/referral-values/\".concat(complexRuleValueId, \"/remove\"),\n      data: updatedMatrixData\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(removeComplexityReferralRuleValueSuccess());\n      dispatch(enqueueNotification('notification.removeReferral.success', 'success'));\n      dispatch(getComplexityReferralValues());\n      return data;\n    })[\"catch\"](function (err) {\n      dispatch(removeComplexityReferralRuleValueFailure(err, defaultError));\n      dispatch(enqueueNotification('notification.removeReferral.fail', 'error'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('removeComplexityReferralRuleValue'));\n    });\n  };\n};\nexport var removeComplexityReferralRuleValueRequest = function removeComplexityReferralRuleValueRequest(updatedMatrixData) {\n  return {\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_REQUEST',\n    payload: updatedMatrixData\n  };\n};\nexport var removeComplexityReferralRuleValueSuccess = function removeComplexityReferralRuleValueSuccess() {\n  return {\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_SUCCESS'\n  };\n};\nexport var removeComplexityReferralRuleValueFailure = function removeComplexityReferralRuleValueFailure(err) {\n  return {\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.removeComplexityReferralRuleValue.js"],"names":["get","addLoader","removeLoader","enqueueNotification","getComplexityReferralValues","authLogout","utils","removeComplexityReferralRuleValue","updatedMatrixData","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","complexRuleValueId","complexityRulesID","removeComplexityReferralRuleValueRequest","api","token","accessToken","claimService","path","data","then","response","handleResponse","json","handleNewData","removeComplexityReferralRuleValueSuccess","err","removeComplexityReferralRuleValueFailure","handleUnauthorized","type","payload"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,YAAhB;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,mBAAlC,EAAuDC,2BAAvD,EAAoFC,UAApF,QAAsG,QAAtG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,CAACC,iBAAD;AAAA,SAAuB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC9F;AAD8F,oBAE3BA,QAAQ,EAFmB;AAAA,QAE9EC,IAF8E,aAEtFC,IAFsF,CAE9ED,IAF8E;AAAA,QAEpDE,QAFoD,aAEtEC,MAFsE,CAE5DC,IAF4D,CAEpDF,QAFoD;AAAA,QAEtCG,MAFsC,aAEtCA,MAFsC;;AAI9F,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,kBAAkB,GAAGnB,GAAG,CAACgB,MAAD,EAAS,gDAAT,CAAH,CAA8DI,iBAAzF;AAEAX,IAAAA,QAAQ,CAACY,wCAAwC,CAACb,iBAAD,CAAzC,CAAR;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAAC,mCAAD,CAAV,CAAR;AAEA,WAAOK,KAAK,CAACgB,GAAN,WACG;AACNC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADN;AAENX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,YAFb;AAGNC,MAAAA,IAAI,2DAAoDP,kBAApD,YAHE;AAINQ,MAAAA,IAAI,EAAEnB;AAJA,KADH,EAOJoB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACgB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACgB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdlB,MAAAA,QAAQ,CAACwB,wCAAwC,EAAzC,CAAR;AACAxB,MAAAA,QAAQ,CAACN,mBAAmB,CAAC,qCAAD,EAAwC,SAAxC,CAApB,CAAR;AACAM,MAAAA,QAAQ,CAACL,2BAA2B,EAA5B,CAAR;AACA,aAAOuB,IAAP;AACD,KAdI,WAeE,UAACO,GAAD,EAAS;AACdzB,MAAAA,QAAQ,CAAC0B,wCAAwC,CAACD,GAAD,EAAMjB,YAAN,CAAzC,CAAR;AACAR,MAAAA,QAAQ,CAACN,mBAAmB,CAAC,kCAAD,EAAqC,OAArC,CAApB,CAAR;AACAG,MAAAA,KAAK,CAACgB,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CJ,UAA5C;AACA,aAAO6B,GAAP;AACD,KApBI,aAqBI,YAAM;AACbzB,MAAAA,QAAQ,CAACP,YAAY,CAAC,mCAAD,CAAb,CAAR;AACD,KAvBI,CAAP;AAwBD,GArCgD;AAAA,CAA1C;AAuCP,OAAO,IAAMmB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACb,iBAAD,EAAuB;AAC7E,SAAO;AACL6B,IAAAA,IAAI,EAAE,uCADD;AAELC,IAAAA,OAAO,EAAE9B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMyB,wCAAwC,GAAG,SAA3CA,wCAA2C,GAAM;AAC5D,SAAO;AACLI,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMF,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACD,GAAD,EAAS;AAC/D,SAAO;AACLG,IAAAA,IAAI,EAAE,uCADD;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import get from 'lodash/get';\r\n\r\nimport { addLoader, removeLoader, enqueueNotification, getComplexityReferralValues, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const removeComplexityReferralRuleValue = (updatedMatrixData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.removeComplexityReferralRuleValue',\r\n  };\r\n\r\n  const complexRuleValueId = get(claims, 'complexityManagement.complexityReferralValueId').complexityRulesID;\r\n\r\n  dispatch(removeComplexityReferralRuleValueRequest(updatedMatrixData));\r\n  dispatch(addLoader('removeComplexityReferralRuleValue'));\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims-triage/complex/referral-values/${complexRuleValueId}/remove`,\r\n      data: updatedMatrixData,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(removeComplexityReferralRuleValueSuccess());\r\n      dispatch(enqueueNotification('notification.removeReferral.success', 'success'));\r\n      dispatch(getComplexityReferralValues());\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(removeComplexityReferralRuleValueFailure(err, defaultError));\r\n      dispatch(enqueueNotification('notification.removeReferral.fail', 'error'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('removeComplexityReferralRuleValue'));\r\n    });\r\n};\r\n\r\nexport const removeComplexityReferralRuleValueRequest = (updatedMatrixData) => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_REQUEST',\r\n    payload: updatedMatrixData,\r\n  };\r\n};\r\n\r\nexport const removeComplexityReferralRuleValueSuccess = () => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_SUCCESS',\r\n  };\r\n};\r\n\r\nexport const removeComplexityReferralRuleValueFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_REFERRAL_VALUES_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}