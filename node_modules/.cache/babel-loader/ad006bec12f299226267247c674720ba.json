{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout, updateRiskListItemsStatus } from 'stores';\nimport * as utils from 'utils';\nexport var getRiskDetails = function getRiskDetails(id, refresh) {\n  var showLoading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getDetails'\n    };\n    showLoading && dispatch(getRiskDetailsRequest(id));\n\n    if (!id) {\n      dispatch(getRiskDetailsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'ID missing'\n      })));\n      return _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'ID missing'\n      });\n    }\n\n    var path = refresh ? \"api/v1/risks/\".concat(id, \"/refresh\") : \"api/v1/risks/\".concat(id);\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json);\n    }).then(function (data) {\n      refresh ? dispatch(getRiskDetailsRefreshSuccess(data)) : dispatch(getRiskDetailsSuccess(data));\n      return data;\n    }).then(function (_ref) {\n      var id = _ref.id,\n          riskStatus = _ref.riskStatus;\n      dispatch(updateRiskListItemsStatus(id, riskStatus));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getRiskDetailsFailure(err));\n      return err;\n    });\n  };\n};\nexport var getRiskDetailsRequest = function getRiskDetailsRequest(id) {\n  return {\n    type: 'RISK_DETAILS_GET_REQUEST',\n    payload: id\n  };\n};\nexport var getRiskDetailsSuccess = function getRiskDetailsSuccess(data) {\n  return {\n    type: 'RISK_DETAILS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getRiskDetailsRefreshSuccess = function getRiskDetailsRefreshSuccess(data) {\n  return {\n    type: 'RISK_DETAILS_REFRESH_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getRiskDetailsFailure = function getRiskDetailsFailure(error) {\n  return {\n    type: 'RISK_DETAILS_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getDetails.js"],"names":["authLogout","updateRiskListItemsStatus","utils","getRiskDetails","id","refresh","showLoading","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getRiskDetailsRequest","getRiskDetailsFailure","message","path","api","get","token","accessToken","then","response","handleResponse","json","handleResponseJsonObject","data","getRiskDetailsRefreshSuccess","getRiskDetailsSuccess","riskStatus","catch","err","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import { authLogout, updateRiskListItemsStatus } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getRiskDetails =\r\n  (id, refresh, showLoading = true) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/risk.actions.getDetails',\r\n    };\r\n\r\n    showLoading && dispatch(getRiskDetailsRequest(id));\r\n\r\n    if (!id) {\r\n      dispatch(getRiskDetailsFailure({ ...defaultError, message: 'ID missing' }));\r\n      return { ...defaultError, message: 'ID missing' };\r\n    }\r\n    const path = refresh ? `api/v1/risks/${id}/refresh` : `api/v1/risks/${id}`;\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.auth,\r\n        path,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleResponseJsonObject(json))\r\n      .then((data) => {\r\n        refresh ? dispatch(getRiskDetailsRefreshSuccess(data)) : dispatch(getRiskDetailsSuccess(data));\r\n        return data;\r\n      })\r\n      .then(({ id, riskStatus }) => {\r\n        dispatch(updateRiskListItemsStatus(id, riskStatus));\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, defaultError);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(getRiskDetailsFailure(err));\r\n        return err;\r\n      });\r\n  };\r\n\r\nexport const getRiskDetailsRequest = (id) => {\r\n  return {\r\n    type: 'RISK_DETAILS_GET_REQUEST',\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const getRiskDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'RISK_DETAILS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getRiskDetailsRefreshSuccess = (data) => {\r\n  return {\r\n    type: 'RISK_DETAILS_REFRESH_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getRiskDetailsFailure = (error) => {\r\n  return {\r\n    type: 'RISK_DETAILS_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}