{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseNonBureau\\\\PremiumProcessingCaseNonBureau.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; //app\n\nimport styles from './PremiumProcessingCaseNonBureau.styles';\nimport { EmailManagementService, TableCell, TableHead, Button, Warning, Tooltip } from 'components';\nimport { useFlexiColumns, useSort } from 'hooks';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; //mui\n\nimport { Box, makeStyles, Table, TableBody, TableRow, TableContainer, Hidden } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseNonBureauView.propTypes = {\n  accountName: PropTypes.string.isRequired,\n  columnsData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired\n  })).isRequired,\n  nonBureauInsurers: PropTypes.array.isRequired,\n  openEms: PropTypes.bool.isRequired,\n  nonBureauDetails: PropTypes.object.isRequired,\n  caseDetailsObject: PropTypes.object,\n  isSendEmailAllowed: PropTypes.bool.isRequired,\n  hasViewOrEditAccess: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    sendEmail: PropTypes.func.isRequired\n  }).isRequired,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseNonBureauView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var accountName = _ref.accountName,\n      columnsData = _ref.columnsData,\n      nonBureauInsurers = _ref.nonBureauInsurers,\n      isSendEmailAllowed = _ref.isSendEmailAllowed,\n      openEms = _ref.openEms,\n      nonBureauDetails = _ref.nonBureauDetails,\n      caseDetailsObject = _ref.caseDetailsObject,\n      hasViewOrEditAccess = _ref.hasViewOrEditAccess,\n      handlers = _ref.handlers,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseNonBureau'\n  })();\n\n  var _useFlexiColumns = useFlexiColumns(columnsData),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps;\n\n  var _useSort = useSort(columnsArray, {}),\n      cols = _useSort.cols;\n\n  var isValidRpFlag = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.bpmFlag) === constants.BPM_STAGE_REJECTED_PENDING_ACTION ? true : false;\n  var caseId = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseId;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: openEms && caseId ? /*#__PURE__*/_jsxDEV(EmailManagementService, {\n      accountName: accountName,\n      caseDetailsObject: caseDetailsObject,\n      objectId: caseId,\n      objectCode: constants.EMS_CONTEXT_CASE,\n      emailType: constants.EMS_EMAIL_TYPE_NON_BUREAU,\n      accountLabel: utils.string.t('ems.nonBureauInsurerName'),\n      accountDetails: nonBureauDetails,\n      handlers: {\n        goBack: handlers.goBack\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [columnsArray && /*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"non-bureau-list\",\n          children: utils.generic.isValidArray(nonBureauInsurers, true) && nonBureauInsurers.map(function (insurer) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('nonBureauInsurer')), {}, {\n                children: /*#__PURE__*/_jsxDEV(Hidden, {\n                  xsDown: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    disableFocusListener: !hasViewOrEditAccess || isNotMyTaskView,\n                    disableHoverListener: !hasViewOrEditAccess || isNotMyTaskView,\n                    disableTouchListener: !hasViewOrEditAccess || isNotMyTaskView,\n                    title: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.toolTipTitle),\n                      children: \"NBI Name: \".concat(insurer.underWriterAccountName, \" \\n Address: \").concat(insurer.uwAddress)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 85,\n                      columnNumber: 31\n                    }, _this),\n                    placement: \"top\",\n                    nestedClasses: {\n                      tooltip: classnames(classes.toolTip)\n                    },\n                    children: insurer.underWriterAccountName.substr(0, 30)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 80,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n                children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n                  className: insurer.status ? classes.enabled : classes.disabled\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 25\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('sentDate')), {}, {\n                children: insurer.sendDate\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('emailDocument')), {}, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: function onClick() {\n                    handlers.sendEmail(insurer);\n                  },\n                  size: \"xsmall\",\n                  tooltip: {\n                    title: utils.string.t('premiumProcessing.nonBureauColumns.emailDocument')\n                  },\n                  variant: \"outlined\",\n                  color: \"default\",\n                  text: insurer.sendEmailDocument ? utils.string.t('premiumProcessing.nonBureauColumns.viewEmail') : utils.string.t('premiumProcessing.nonBureauColumns.sendEmail'),\n                  light: true,\n                  disabled: isValidRpFlag || !isSendEmailAllowed || isNotMyTaskView\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 27\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, _this)]\n            }, insurer.underWriterAccountName, true, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this), !utils.generic.isValidArray(nonBureauInsurers, true) && /*#__PURE__*/_jsxDEV(Box, {\n        p: 2,\n        children: /*#__PURE__*/_jsxDEV(Warning, {\n          text: utils.string.t('premiumProcessing.noNonBureauDetails'),\n          type: \"info\",\n          align: \"left\",\n          size: \"small\",\n          icon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 13\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PremiumProcessingCaseNonBureauView, \"rlV9TZ/2e1v2kX+0/tFX8ECGvcs=\", false, function () {\n  return [useFlexiColumns, useSort];\n});\n\n_c = PremiumProcessingCaseNonBureauView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseNonBureauView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseNonBureau/PremiumProcessingCaseNonBureau.view.js"],"names":["React","PropTypes","classnames","styles","EmailManagementService","TableCell","TableHead","Button","Warning","Tooltip","useFlexiColumns","useSort","utils","constants","Box","makeStyles","Table","TableBody","TableRow","TableContainer","Hidden","CheckCircleOutlineIcon","PremiumProcessingCaseNonBureauView","propTypes","accountName","string","isRequired","columnsData","arrayOf","shape","id","label","node","nonBureauInsurers","array","openEms","bool","nonBureauDetails","object","caseDetailsObject","isSendEmailAllowed","hasViewOrEditAccess","handlers","sendEmail","func","isNotMyTaskView","classes","name","columnsArray","columns","columnProps","cols","isValidRpFlag","bpmFlag","BPM_STAGE_REJECTED_PENDING_ACTION","caseId","EMS_CONTEXT_CASE","EMS_EMAIL_TYPE_NON_BUREAU","t","goBack","generic","isValidArray","map","insurer","toolTipTitle","underWriterAccountName","uwAddress","tooltip","toolTip","substr","status","enabled","disabled","sendDate","title","sendEmailDocument"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n//app\r\nimport styles from './PremiumProcessingCaseNonBureau.styles';\r\nimport { EmailManagementService, TableCell, TableHead, Button, Warning, Tooltip } from 'components';\r\nimport { useFlexiColumns, useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { Box, makeStyles, Table, TableBody, TableRow, TableContainer, Hidden } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nPremiumProcessingCaseNonBureauView.propTypes = {\r\n  accountName: PropTypes.string.isRequired,\r\n  columnsData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.node.isRequired,\r\n    })\r\n  ).isRequired,\r\n  nonBureauInsurers: PropTypes.array.isRequired,\r\n  openEms: PropTypes.bool.isRequired,\r\n  nonBureauDetails: PropTypes.object.isRequired,\r\n  caseDetailsObject: PropTypes.object,\r\n  isSendEmailAllowed: PropTypes.bool.isRequired,\r\n  hasViewOrEditAccess: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    sendEmail: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseNonBureauView({\r\n  accountName,\r\n  columnsData,\r\n  nonBureauInsurers,\r\n  isSendEmailAllowed,\r\n  openEms,\r\n  nonBureauDetails,\r\n  caseDetailsObject,\r\n  hasViewOrEditAccess,\r\n  handlers,\r\n  isNotMyTaskView,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseNonBureau' })();\r\n  const { columns: columnsArray, columnProps } = useFlexiColumns(columnsData);\r\n  const { cols } = useSort(columnsArray, {});\r\n  const isValidRpFlag = caseDetailsObject?.bpmFlag === constants.BPM_STAGE_REJECTED_PENDING_ACTION ? true : false;\r\n  const caseId = caseDetailsObject?.caseId;\r\n\r\n  return (\r\n    <>\r\n      {openEms && caseId ? (\r\n        <EmailManagementService\r\n          accountName={accountName}\r\n          caseDetailsObject={caseDetailsObject}\r\n          objectId={caseId}\r\n          objectCode={constants.EMS_CONTEXT_CASE}\r\n          emailType={constants.EMS_EMAIL_TYPE_NON_BUREAU}\r\n          accountLabel={utils.string.t('ems.nonBureauInsurerName')}\r\n          accountDetails={nonBureauDetails}\r\n          handlers={{\r\n            goBack: handlers.goBack,\r\n          }}\r\n        />\r\n      ) : (\r\n        <TableContainer>\r\n          <Table size=\"small\">\r\n            {columnsArray && <TableHead columns={cols} />}\r\n            <TableBody data-testid=\"non-bureau-list\">\r\n              {utils.generic.isValidArray(nonBureauInsurers, true) &&\r\n                nonBureauInsurers.map((insurer) => {\r\n                  return (\r\n                    <TableRow key={insurer.underWriterAccountName}>\r\n                      <TableCell {...columnProps('nonBureauInsurer')}>\r\n                        <Hidden xsDown>\r\n                          <Tooltip\r\n                            disableFocusListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                            disableHoverListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                            disableTouchListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                            title={\r\n                              <span\r\n                                className={classnames(classes.toolTipTitle)}\r\n                              >{`NBI Name: ${insurer.underWriterAccountName} \\n Address: ${insurer.uwAddress}`}</span>\r\n                            }\r\n                            placement=\"top\"\r\n                            nestedClasses={{ tooltip: classnames(classes.toolTip) }}\r\n                          >\r\n                            {insurer.underWriterAccountName.substr(0, 30)}\r\n                          </Tooltip>\r\n                        </Hidden>\r\n                      </TableCell>\r\n                      <TableCell {...columnProps('status')}>\r\n                        <CheckCircleOutlineIcon className={insurer.status ? classes.enabled : classes.disabled} />\r\n                      </TableCell>\r\n                      <TableCell {...columnProps('sentDate')}>{insurer.sendDate}</TableCell>\r\n                      <TableCell {...columnProps('emailDocument')}>\r\n                        {\r\n                          <Button\r\n                            onClick={() => {\r\n                              handlers.sendEmail(insurer);\r\n                            }}\r\n                            size=\"xsmall\"\r\n                            tooltip={{ title: utils.string.t('premiumProcessing.nonBureauColumns.emailDocument') }}\r\n                            variant=\"outlined\"\r\n                            color=\"default\"\r\n                            text={\r\n                              insurer.sendEmailDocument\r\n                                ? utils.string.t('premiumProcessing.nonBureauColumns.viewEmail')\r\n                                : utils.string.t('premiumProcessing.nonBureauColumns.sendEmail')\r\n                            }\r\n                            light\r\n                            disabled={isValidRpFlag || !isSendEmailAllowed || isNotMyTaskView}\r\n                          />\r\n                        }\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n          {!utils.generic.isValidArray(nonBureauInsurers, true) && (\r\n            <Box p={2}>\r\n              <Warning text={utils.string.t('premiumProcessing.noNonBureauDetails')} type=\"info\" align=\"left\" size=\"small\" icon />\r\n            </Box>\r\n          )}\r\n        </TableContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}