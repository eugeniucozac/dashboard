{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormToggle\\\\FormToggle.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormToggle } from 'components';\nimport { withKnobs, text, boolean as _boolean, select } from '@storybook/addon-knobs';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'FormToggle',\n  component: FormToggle,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: []\n  }),\n      control = _useForm.control,\n      errors = _useForm.errors;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var label = text('Label', 'Label');\n  var size = select('Size', ['small', 'medium', 'large'], 'small');\n\n  var exclusive = _boolean('Exclusive', true);\n\n  var disabled = _boolean('Disabled', false);\n\n  var error = text('Error', '');\n  var errorObj = error ? {\n    message: error\n  } : null;\n  useEffect(function () {\n    setResetKey(new Date().getTime());\n  }, [exclusive]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: /*#__PURE__*/_jsxDEV(FormToggle, {\n      control: control,\n      name: \"toggle1\",\n      label: label,\n      options: [{\n        id: 'INBOX',\n        value: 'INBOX',\n        label: 'Inbox'\n      }, {\n        id: 'SENT',\n        value: 'SENT',\n        label: 'Sent'\n      }, {\n        id: 'BIN',\n        value: 'BIN',\n        label: 'Bin'\n      }],\n      error: errorObj,\n      hint: text('Hint', 'Choose an option'),\n      buttonGroupProps: {\n        disabled: disabled,\n        exclusive: exclusive,\n        size: size\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, resetKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Default, \"188h1nYsA17L1Tn8IfPAUMCkyeE=\", false, function () {\n  return [useForm];\n});\n\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormToggle\\\\FormToggle.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\FormToggle\\\\FormToggle.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormToggle/FormToggle.stories.js"],"names":["React","useEffect","useState","useForm","FormToggle","withKnobs","text","boolean","select","Box","title","component","decorators","Default","defaultValues","control","errors","resetKey","setResetKey","label","size","exclusive","disabled","error","errorObj","message","Date","getTime","id","value"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAAO,IAAPA,QAA1B,EAAmCC,MAAnC,QAAiD,wBAAjD;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,YADM;AAEbC,EAAAA,SAAS,EAAEP,UAFE;AAGbQ,EAAAA,UAAU,EAAE,CAACP,SAAD;AAHC,CAAf;AAMA,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,iBACCV,OAAO,CAAC;AAClCW,IAAAA,aAAa,EAAE;AADmB,GAAD,CADR;AAAA,MACnBC,OADmB,YACnBA,OADmB;AAAA,MACVC,MADU,YACVA,MADU;;AAAA,kBAKKd,QAAQ,EALb;AAAA;AAAA,MAKpBe,QALoB;AAAA,MAKVC,WALU;;AAO3B,MAAMC,KAAK,GAAGb,IAAI,CAAC,OAAD,EAAU,OAAV,CAAlB;AACA,MAAMc,IAAI,GAAGZ,MAAM,CAAC,MAAD,EAAS,CAAC,OAAD,EAAU,QAAV,EAAoB,OAApB,CAAT,EAAuC,OAAvC,CAAnB;;AACA,MAAMa,SAAS,GAAGd,QAAO,CAAC,WAAD,EAAc,IAAd,CAAzB;;AACA,MAAMe,QAAQ,GAAGf,QAAO,CAAC,UAAD,EAAa,KAAb,CAAxB;;AACA,MAAMgB,KAAK,GAAGjB,IAAI,CAAC,OAAD,EAAU,EAAV,CAAlB;AACA,MAAMkB,QAAQ,GAAGD,KAAK,GAAG;AAAEE,IAAAA,OAAO,EAAEF;AAAX,GAAH,GAAwB,IAA9C;AAEAtB,EAAAA,SAAS,CAAC,YAAM;AACdiB,IAAAA,WAAW,CAAC,IAAIQ,IAAJ,GAAWC,OAAX,EAAD,CAAX;AACD,GAFQ,EAEN,CAACN,SAAD,CAFM,CAAT;AAIA,sBACE,QAAC,GAAD;AAAK,IAAA,KAAK,EAAE,CAAZ;AAAA,2BACE,QAAC,UAAD;AACE,MAAA,OAAO,EAAEN,OADX;AAEE,MAAA,IAAI,EAAC,SAFP;AAGE,MAAA,KAAK,EAAEI,KAHT;AAIE,MAAA,OAAO,EAAE,CACP;AAAES,QAAAA,EAAE,EAAE,OAAN;AAAeC,QAAAA,KAAK,EAAE,OAAtB;AAA+BV,QAAAA,KAAK,EAAE;AAAtC,OADO,EAEP;AAAES,QAAAA,EAAE,EAAE,MAAN;AAAcC,QAAAA,KAAK,EAAE,MAArB;AAA6BV,QAAAA,KAAK,EAAE;AAApC,OAFO,EAGP;AAAES,QAAAA,EAAE,EAAE,KAAN;AAAaC,QAAAA,KAAK,EAAE,KAApB;AAA2BV,QAAAA,KAAK,EAAE;AAAlC,OAHO,CAJX;AASE,MAAA,KAAK,EAAEK,QATT;AAUE,MAAA,IAAI,EAAElB,IAAI,CAAC,MAAD,EAAS,kBAAT,CAVZ;AAWE,MAAA,gBAAgB,EAAE;AAChBgB,QAAAA,QAAQ,EAARA,QADgB;AAEhBD,QAAAA,SAAS,EAATA,SAFgB;AAGhBD,QAAAA,IAAI,EAAJA;AAHgB;AAXpB;AAAA;AAAA;AAAA;AAAA;AADF,KAAoBH,QAApB;AAAA;AAAA;AAAA;AAAA,WADF;AAqBD,CAvCM;;GAAMJ,O;UACiBV,O;;;AADjBU,O;KAAAA,O","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { FormToggle } from 'components';\r\nimport { withKnobs, text, boolean, select } from '@storybook/addon-knobs';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'FormToggle',\r\n  component: FormToggle,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const { control, errors } = useForm({\r\n    defaultValues: [],\r\n  });\r\n\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const label = text('Label', 'Label');\r\n  const size = select('Size', ['small', 'medium', 'large'], 'small');\r\n  const exclusive = boolean('Exclusive', true);\r\n  const disabled = boolean('Disabled', false);\r\n  const error = text('Error', '');\r\n  const errorObj = error ? { message: error } : null;\r\n\r\n  useEffect(() => {\r\n    setResetKey(new Date().getTime());\r\n  }, [exclusive]);\r\n\r\n  return (\r\n    <Box width={1} key={resetKey}>\r\n      <FormToggle\r\n        control={control}\r\n        name=\"toggle1\"\r\n        label={label}\r\n        options={[\r\n          { id: 'INBOX', value: 'INBOX', label: 'Inbox' },\r\n          { id: 'SENT', value: 'SENT', label: 'Sent' },\r\n          { id: 'BIN', value: 'BIN', label: 'Bin' },\r\n        ]}\r\n        error={errorObj}\r\n        hint={text('Hint', 'Choose an option')}\r\n        buttonGroupProps={{\r\n          disabled,\r\n          exclusive,\r\n          size,\r\n        }}\r\n      />\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}