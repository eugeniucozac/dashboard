{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddRiskQuote\\\\AddRiskQuote.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { AddRiskQuoteView } from './AddRiskQuote.view';\nimport { postRiskQuote } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskQuote.propTypes = {\n  risk: PropTypes.object.isRequired,\n  quote: PropTypes.object.isRequired,\n  handleClose: PropTypes.func\n};\nexport function AddRiskQuote(_ref) {\n  _s();\n\n  var risk = _ref.risk,\n      quote = _ref.quote,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n\n  var handleSubmit = function handleSubmit(data) {\n    return dispatch(postRiskQuote(data));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  }; // abort\n\n\n  if (!(risk === null || risk === void 0 ? void 0 : risk.id) || !(quote === null || quote === void 0 ? void 0 : quote.facility)) return null;\n  var facility = {\n    label: quote.facility.name,\n    value: JSON.stringify({\n      facilityId: quote.facility.id,\n      carrierId: quote.facility.carrierId\n    })\n  };\n  var fields = [[{\n    gridSize: {\n      xs: 12\n    },\n    type: 'select',\n    name: 'facility',\n    disabled: true,\n    value: facility.value || '',\n    options: [facility],\n    label: utils.string.t('app.facility')\n  }, {\n    gridSize: {\n      xs: 12,\n      sm: 6\n    },\n    type: 'number',\n    name: 'premium',\n    value: '',\n    label: \"\".concat(utils.string.t('risks.netPremium')).concat((quote === null || quote === void 0 ? void 0 : quote.currency) ? \" (\".concat(quote === null || quote === void 0 ? void 0 : quote.currency.trim(), \")\") : \"\"),\n    validation: Yup.number().nullable().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).currency().required(utils.string.t('validation.required'))\n  }, {\n    gridSize: {\n      xs: 12,\n      sm: 6\n    },\n    type: 'datepicker',\n    name: 'validUntil',\n    label: utils.string.t('form.dateValidUntil.label'),\n    value: null,\n    outputFormat: 'iso',\n    muiPickerProps: {\n      minDate: utils.date.tomorrow()\n    },\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.string().nullable().required(utils.string.t('form.dateValidUntil.required'))\n  }], {\n    type: 'hidden',\n    name: 'riskId',\n    value: risk.id\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(AddRiskQuoteView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddRiskQuote, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddRiskQuote;\nexport default AddRiskQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskQuote\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddRiskQuote/AddRiskQuote.js"],"names":["React","PropTypes","useDispatch","Yup","AddRiskQuoteView","postRiskQuote","utils","AddRiskQuote","propTypes","risk","object","isRequired","quote","handleClose","func","dispatch","handleSubmit","data","handleCancel","generic","isFunction","id","facility","label","name","value","JSON","stringify","facilityId","carrierId","fields","gridSize","xs","type","disabled","options","string","t","sm","currency","trim","validation","number","nullable","transform","originalvalue","isType","Number","isNaN","required","outputFormat","muiPickerProps","minDate","date","tomorrow","muiComponentProps","fullWidth","actions","handler"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { AddRiskQuoteView } from './AddRiskQuote.view';\r\nimport { postRiskQuote } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nAddRiskQuote.propTypes = {\r\n  risk: PropTypes.object.isRequired,\r\n  quote: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func,\r\n};\r\n\r\nexport function AddRiskQuote({ risk, quote, handleClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleSubmit = (data) => {\r\n    return dispatch(postRiskQuote(data));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  // abort\r\n  if (!risk?.id || !quote?.facility) return null;\r\n\r\n  const facility = {\r\n    label: quote.facility.name,\r\n    value: JSON.stringify({\r\n      facilityId: quote.facility.id,\r\n      carrierId: quote.facility.carrierId,\r\n    }),\r\n  };\r\n\r\n  const fields = [\r\n    [\r\n      {\r\n        gridSize: { xs: 12 },\r\n        type: 'select',\r\n        name: 'facility',\r\n        disabled: true,\r\n        value: facility.value || '',\r\n        options: [facility],\r\n        label: utils.string.t('app.facility'),\r\n      },\r\n      {\r\n        gridSize: { xs: 12, sm: 6 },\r\n        type: 'number',\r\n        name: 'premium',\r\n        value: '',\r\n        label: `${utils.string.t('risks.netPremium')}${quote?.currency ? ` (${quote?.currency.trim()})` : ``}`,\r\n        validation: Yup.number()\r\n          .nullable()\r\n          .transform(function (value, originalvalue) {\r\n            return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n          })\r\n          .currency()\r\n          .required(utils.string.t('validation.required')),\r\n      },\r\n      {\r\n        gridSize: { xs: 12, sm: 6 },\r\n        type: 'datepicker',\r\n        name: 'validUntil',\r\n        label: utils.string.t('form.dateValidUntil.label'),\r\n        value: null,\r\n        outputFormat: 'iso',\r\n        muiPickerProps: {\r\n          minDate: utils.date.tomorrow(),\r\n        },\r\n        muiComponentProps: {\r\n          fullWidth: true,\r\n        },\r\n        validation: Yup.string().nullable().required(utils.string.t('form.dateValidUntil.required')),\r\n      },\r\n    ],\r\n    {\r\n      type: 'hidden',\r\n      name: 'riskId',\r\n      value: risk.id,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <AddRiskQuoteView fields={fields} actions={actions} />;\r\n}\r\n\r\nexport default AddRiskQuote;\r\n"]},"metadata":{},"sourceType":"module"}