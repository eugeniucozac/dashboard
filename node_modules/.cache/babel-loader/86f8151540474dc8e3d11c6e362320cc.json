{"ast":null,"code":"import \"core-js/modules/es.string.search\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport moment from 'moment';\nimport get from 'lodash/get'; // app\n\nimport * as utils from 'utils';\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport { CLAIM_TEAM_TYPE, CLAIM_PROCESSING_REQ_TYPES } from 'consts';\nexport var getClaimsTabDetails = function getClaimsTabDetails() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimsTabDetails'\n    };\n    var newRequestType = (params === null || params === void 0 ? void 0 : params.requestType) || CLAIM_PROCESSING_REQ_TYPES.search;\n    var prevDirection = get(claims, 'claimsTab.tableDetails.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'claimsTab.tableDetails.query') || '';\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'claimsTab.tableDetails.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy && params.hasOwnProperty('firstTimeSort') ? params.firstTimeSort : prevSortBy;\n    var prevSearchBy = get(claims, 'claimsTab.tableDetails.searchBy') || '';\n    var newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\n    var datesExceptionFields = ['createdDate', 'dateAndTimeCreated'];\n    var prevFilterQuery = get(claims, 'claimsProcessingData') || '';\n    var newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : prevFilterQuery === null || prevFilterQuery === void 0 ? void 0 : prevFilterQuery.filters;\n    var constructFilter = Object.entries(newFilterQuery);\n    var updatedFilter = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n      var column = filter[0];\n      var values = filter[1];\n      var isPriorityFilter = column === 'priority';\n      var isDateFilter = datesExceptionFields.includes(column) && values;\n      var filterValue = values;\n      if (isPriorityFilter) filterValue = values.map(function (_ref) {\n        var id = _ref.id,\n            name = _ref.name;\n        return {\n          id: id,\n          name: name\n        };\n      });\n      if (isDateFilter) filterValue = [{\n        id: 1,\n        name: moment(new Date(values)).format('DD-MM-YYYY')\n      }];\n      return utils.generic.isValidArray(filterValue, true) && {\n        column: column,\n        filterValue: filterValue\n      };\n    }).filter(function (item) {\n      return item;\n    }) : [];\n    var appliedParams = {\n      newRequestType: newRequestType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newSearchBy: newSearchBy,\n      updatedFilter: updatedFilter\n    };\n    var isNonFilterTypeCall = newRequestType !== CLAIM_PROCESSING_REQ_TYPES.filter;\n    dispatch(getClaimsTabDetailsRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n    if (isNonFilterTypeCall) dispatch(addLoader('getClaimsTabDetails'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/workflow/claims/process/claims/search/\".concat(params === null || params === void 0 ? void 0 : params.claimsType),\n      data: _objectSpread({\n        requestType: newRequestType,\n        direction: newDirection,\n        filterLossClaimsCriteria: null,\n        filterSearch: constructFilter.length ? updatedFilter : null,\n        page: params && params.page || 0,\n        pageSize: params && params.size || claims.processing.pageSize,\n        search: newQuery,\n        searchBy: newSearchBy,\n        sortBy: newSortBy\n      }, (params === null || params === void 0 ? void 0 : params.claimsType) !== CLAIM_TEAM_TYPE.allClaims && {\n        pullClosedRecords: params === null || params === void 0 ? void 0 : params.pullClosedRecords\n      })\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getClaimsTabDetailsSuccess(data, newRequestType, newQuery));\n      return data;\n    })[\"catch\"](function (err) {\n      dispatch(getClaimsTabDetailsFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      if (isNonFilterTypeCall) dispatch(removeLoader('getClaimsTabDetails'));\n    });\n  };\n};\nexport var getClaimsTabDetailsRequest = function getClaimsTabDetailsRequest(params) {\n  return {\n    type: 'CLAIMS_TAB_DETAILS_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getClaimsTabDetailsSuccess = function getClaimsTabDetailsSuccess(data, newRequestType, newQuery) {\n  return {\n    type: 'CLAIMS_TAB_DETAILS_GET_SUCCESS',\n    payload: {\n      items: data.data,\n      pagination: _objectSpread(_objectSpread({}, data.pagination), {}, {\n        search: newQuery\n      }),\n      requestType: newRequestType\n    }\n  };\n};\nexport var getClaimsTabDetailsFailure = function getClaimsTabDetailsFailure(error) {\n  console.log('getClaimsTabDetailsFailure called');\n  return {\n    type: 'CLAIMS_TAB_DETAILS_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimsTabDetails.js"],"names":["moment","get","utils","authLogout","addLoader","removeLoader","CLAIM_TEAM_TYPE","CLAIM_PROCESSING_REQ_TYPES","getClaimsTabDetails","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","newRequestType","requestType","search","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","firstTimeSort","prevSearchBy","newSearchBy","searchBy","datesExceptionFields","prevFilterQuery","newFilterQuery","filterTerm","filters","constructFilter","Object","entries","updatedFilter","generic","isValidArray","map","filter","column","values","isPriorityFilter","isDateFilter","includes","filterValue","id","name","Date","format","item","appliedParams","isNonFilterTypeCall","getClaimsTabDetailsRequest","api","post","token","accessToken","claimService","path","claimsType","data","filterLossClaimsCriteria","filterSearch","length","page","pageSize","size","processing","allClaims","pullClosedRecords","then","response","handleResponse","json","handleNewData","getClaimsTabDetailsSuccess","err","getClaimsTabDetailsFailure","handleUnauthorized","type","payload","items","pagination","error","console","log"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport { CLAIM_TEAM_TYPE, CLAIM_PROCESSING_REQ_TYPES } from 'consts';\r\n\r\nexport const getClaimsTabDetails =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getClaimsTabDetails',\r\n    };\r\n    const newRequestType = params?.requestType || CLAIM_PROCESSING_REQ_TYPES.search;\r\n\r\n    const prevDirection = get(claims, 'claimsTab.tableDetails.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const prevQuery = get(claims, 'claimsTab.tableDetails.query') || '';\r\n    const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n    const prevSortBy = get(claims, 'claimsTab.tableDetails.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy')\r\n      ? params.sortBy\r\n      : prevSortBy && params.hasOwnProperty('firstTimeSort')\r\n      ? params.firstTimeSort\r\n      : prevSortBy;\r\n\r\n    const prevSearchBy = get(claims, 'claimsTab.tableDetails.searchBy') || '';\r\n    const newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\r\n\r\n    const datesExceptionFields = ['createdDate', 'dateAndTimeCreated'];\r\n\r\n    const prevFilterQuery = get(claims, 'claimsProcessingData') || '';\r\n    const newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : prevFilterQuery?.filters;\r\n\r\n    const constructFilter = Object.entries(newFilterQuery);\r\n    const updatedFilter = utils.generic.isValidArray(constructFilter, true)\r\n      ? constructFilter\r\n          .map((filter) => {\r\n            const column = filter[0];\r\n            const values = filter[1];\r\n            const isPriorityFilter = column === 'priority';\r\n            const isDateFilter = datesExceptionFields.includes(column) && values;\r\n\r\n            let filterValue = values;\r\n            if (isPriorityFilter) filterValue = values.map(({ id, name }) => ({ id, name: name }));\r\n            if (isDateFilter) filterValue = [{ id: 1, name: moment(new Date(values)).format('DD-MM-YYYY') }];\r\n\r\n            return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n          })\r\n          .filter((item) => item)\r\n      : [];\r\n\r\n    const appliedParams = { newRequestType, newDirection, newQuery, newSortBy, newSearchBy, updatedFilter };\r\n    const isNonFilterTypeCall = newRequestType !== CLAIM_PROCESSING_REQ_TYPES.filter;\r\n\r\n    dispatch(getClaimsTabDetailsRequest({ params, appliedParams }));\r\n    if (isNonFilterTypeCall) dispatch(addLoader('getClaimsTabDetails'));\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: `api/workflow/claims/process/claims/search/${params?.claimsType}`,\r\n        data: {\r\n          requestType: newRequestType,\r\n          direction: newDirection,\r\n          filterLossClaimsCriteria: null,\r\n          filterSearch: constructFilter.length ? updatedFilter : null,\r\n          page: (params && params.page) || 0,\r\n          pageSize: (params && params.size) || claims.processing.pageSize,\r\n          search: newQuery,\r\n          searchBy: newSearchBy,\r\n          sortBy: newSortBy,\r\n          ...(params?.claimsType !== CLAIM_TEAM_TYPE.allClaims && { pullClosedRecords: params?.pullClosedRecords }),\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleNewData(json))\r\n      .then((data) => {\r\n        dispatch(getClaimsTabDetailsSuccess(data, newRequestType, newQuery));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getClaimsTabDetailsFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        if (isNonFilterTypeCall) dispatch(removeLoader('getClaimsTabDetails'));\r\n      });\r\n  };\r\n\r\nexport const getClaimsTabDetailsRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_DETAILS_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getClaimsTabDetailsSuccess = (data, newRequestType, newQuery) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_DETAILS_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n      pagination: { ...data.pagination, search: newQuery },\r\n      requestType: newRequestType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getClaimsTabDetailsFailure = (error) => {\r\n    console.log('getClaimsTabDetailsFailure called');\r\n  return {\r\n    type: 'CLAIMS_TAB_DETAILS_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}