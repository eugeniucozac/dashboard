{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DmsWidget\\\\ClaimsProcessingDmsWidget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport PropTypes from 'prop-types'; //app\n\nimport { TreeView } from 'components';\nimport { selectClaimsInformation, selectLossId, selectClaimAssociateWithLoss, getClaimsAssociateWithLoss, getViewTableDocuments, selectDmsWidgetClaimDocs } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsProcessingDmsWidget.propTypes = {\n  isLossDashboard: PropTypes.bool\n};\nexport default function ClaimsProcessingDmsWidget(_ref) {\n  _s();\n\n  var _associatedClaims$map, _data$children;\n\n  var isLossDashboard = _ref.isLossDashboard;\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var associatedClaims = useSelector(selectClaimAssociateWithLoss);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setFilteredData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchQuery = _useState4[0],\n      setSearchQuery = _useState4[1];\n\n  var currentLossDetailId = get(lossInformation, 'lossDetailID');\n  var currentLossRef = get(lossInformation, 'lossRef');\n  var currentClaimRef = get(claimsInformation, 'claimReference');\n  var dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\n  var lossDocDetails = dmsWidgetClaimDocs.hasOwnProperty(currentLossRef) ? dmsWidgetClaimDocs[currentLossRef] : [];\n  var claimsDocDetails = dmsWidgetClaimDocs.hasOwnProperty(currentClaimRef) ? dmsWidgetClaimDocs[currentClaimRef] : [];\n  useEffect(function () {\n    if (currentLossDetailId) {\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\n    }\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimsArr = [];\n  associatedClaims === null || associatedClaims === void 0 ? void 0 : associatedClaims.forEach(function (item) {\n    claimsArr.push({\n      referenceId: item.claimReference,\n      sectionType: 'Claim'\n    });\n  });\n  useEffect(function () {\n    if (currentLossRef) {\n      dispatch(getViewTableDocuments({\n        dmsWidgetReqParams: [{\n          referenceId: currentLossRef,\n          sectionType: 'Loss'\n        }],\n        isFromDmsWidget: true\n      }));\n    }\n  }, [currentLossRef]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!utils.generic.isInvalidOrEmptyArray(claimsArr)) {\n      dispatch(getViewTableDocuments({\n        dmsWidgetReqParams: claimsArr,\n        isFromDmsWidget: true\n      }));\n    }\n  }, [claimsArr.length]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimRefsArray = associatedClaims === null || associatedClaims === void 0 ? void 0 : (_associatedClaims$map = associatedClaims.map(function (item) {\n    return item.claimReference;\n  })) === null || _associatedClaims$map === void 0 ? void 0 : _associatedClaims$map.filter(function (claimref) {\n    return claimref !== currentClaimRef;\n  });\n\n  var createSortedDocs = function createSortedDocs(docs) {\n    return docs === null || docs === void 0 ? void 0 : docs.sort(function (doc1, doc2) {\n      return new Date(doc1 === null || doc1 === void 0 ? void 0 : doc1.createdDate) - new Date(doc2 === null || doc2 === void 0 ? void 0 : doc2.createdDate);\n    });\n  };\n\n  var lossDocuments = createSortedDocs(lossDocDetails === null || lossDocDetails === void 0 ? void 0 : lossDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  }));\n  var currentClaimDocuments = createSortedDocs(claimsDocDetails === null || claimsDocDetails === void 0 ? void 0 : claimsDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  }));\n  var openedChild = [],\n      closedChild = [];\n  openedChild = [].concat(_toConsumableArray(lossDocuments), _toConsumableArray(currentClaimRef ? [{\n    id: 'child1',\n    label: (currentClaimDocuments === null || currentClaimDocuments === void 0 ? void 0 : currentClaimDocuments.length) ? \"Claim \".concat(currentClaimRef) : '',\n    labelInfo: '',\n    children: currentClaimDocuments\n  }] : []));\n  closedChild = (claimRefsArray === null || claimRefsArray === void 0 ? void 0 : claimRefsArray.length) > 0 ? claimRefsArray === null || claimRefsArray === void 0 ? void 0 : claimRefsArray.map(function (item) {\n    var _dmsWidgetClaimDocs$i;\n\n    return {\n      id: item,\n      label: item ? \"Claim \".concat(item) : '',\n      labelInfo: '',\n      children: createSortedDocs(dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item]) ? (_dmsWidgetClaimDocs$i = dmsWidgetClaimDocs[item]) === null || _dmsWidgetClaimDocs$i === void 0 ? void 0 : _dmsWidgetClaimDocs$i.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc), {}, {\n          id: doc.documentId,\n          label: doc.documentName,\n          labelInfo: utils.string.t('format.date', {\n            value: {\n              date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n              format: config.ui.format.date.text\n            }\n          })\n        });\n      }) : [{}])\n    };\n  }) : [];\n\n  if (isLossDashboard) {\n    openedChild = lossDocuments;\n    closedChild = [].concat(_toConsumableArray(currentClaimRef ? [{\n      id: 'child1',\n      label: (currentClaimDocuments === null || currentClaimDocuments === void 0 ? void 0 : currentClaimDocuments.length) ? \"Claim \".concat(currentClaimRef) : '',\n      labelInfo: '',\n      children: currentClaimDocuments\n    }] : []), _toConsumableArray(closedChild));\n  }\n\n  var rootChildren = [].concat(_toConsumableArray(openedChild), _toConsumableArray(closedChild));\n  var data = {\n    id: 'root',\n    label: (rootChildren === null || rootChildren === void 0 ? void 0 : rootChildren.length) ? \"Loss Reference \".concat(currentLossRef) : '',\n    labelInfo: '',\n    children: rootChildren\n  };\n  var treeArr = [];\n  data === null || data === void 0 ? void 0 : (_data$children = data.children) === null || _data$children === void 0 ? void 0 : _data$children.forEach(function (child) {\n    if (child.labelInfo) {\n      treeArr.push(child);\n    } else {\n      var _child$children;\n\n      child === null || child === void 0 ? void 0 : (_child$children = child.children) === null || _child$children === void 0 ? void 0 : _child$children.forEach(function (child) {\n        if (child) {\n          treeArr.push(child);\n        }\n      });\n    }\n  });\n\n  var submitSearch = function submitSearch(query) {\n    var filteredData = createSortedDocs(treeArr === null || treeArr === void 0 ? void 0 : treeArr.filter(function (_ref2) {\n      var _ref3;\n\n      var documentName = _ref2.documentName,\n          labelInfo = _ref2.labelInfo;\n      return !isEmpty((_ref3 = [documentName, labelInfo]) === null || _ref3 === void 0 ? void 0 : _ref3.find(function (item) {\n        var _item$toLowerCase;\n\n        return item === null || item === void 0 ? void 0 : (_item$toLowerCase = item.toLowerCase()) === null || _item$toLowerCase === void 0 ? void 0 : _item$toLowerCase.includes(query);\n      }));\n    }));\n    setFilteredData(filteredData);\n    setSearchQuery(query);\n  };\n\n  var resetSearch = function resetSearch() {\n    setFilteredData([]);\n    setSearchQuery('');\n  };\n\n  var rowClick = function rowClick(e, doc) {\n    e.preventDefault();\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    treeData: data,\n    rootRef: currentLossRef,\n    widgetTitle: utils.string.t('dms.view.documents.title'),\n    columns: [{\n      header: utils.string.t('dms.upload.file'),\n      flex: '0.8',\n      ml: '8px'\n    }, {\n      header: utils.string.t('dms.upload.uploadedOn'),\n      flex: '0.375'\n    }],\n    defaultExpanded: ['child1', 'root'],\n    filteredData: filteredData,\n    searchQuery: searchQuery,\n    handlers: {\n      submitSearch: submitSearch,\n      resetSearch: resetSearch,\n      rowClick: rowClick\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsProcessingDmsWidget, \"mq2vNyObilokstvVYKDxCL3PUSQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsProcessingDmsWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsProcessingDmsWidget\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DmsWidget/ClaimsProcessingDmsWidget.js"],"names":["React","useEffect","useState","useSelector","useDispatch","get","isEmpty","PropTypes","TreeView","selectClaimsInformation","selectLossId","selectClaimAssociateWithLoss","getClaimsAssociateWithLoss","getViewTableDocuments","selectDmsWidgetClaimDocs","config","utils","ClaimsProcessingDmsWidget","propTypes","isLossDashboard","bool","dispatch","lossInformation","claimsInformation","associatedClaims","filteredData","setFilteredData","searchQuery","setSearchQuery","currentLossDetailId","currentLossRef","currentClaimRef","dmsWidgetClaimDocs","lossDocDetails","hasOwnProperty","claimsDocDetails","claimsArr","forEach","item","push","referenceId","claimReference","sectionType","dmsWidgetReqParams","isFromDmsWidget","generic","isInvalidOrEmptyArray","length","claimRefsArray","map","filter","claimref","createSortedDocs","docs","sort","doc1","doc2","Date","createdDate","lossDocuments","doc","id","documentId","label","documentName","labelInfo","string","t","value","date","format","ui","text","currentClaimDocuments","openedChild","closedChild","children","rootChildren","data","treeArr","child","submitSearch","query","find","toLowerCase","includes","resetSearch","rowClick","e","preventDefault","dms","dmsDocumentViewLauncher","header","flex","ml"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { TreeView } from 'components';\r\nimport {\r\n  selectClaimsInformation,\r\n  selectLossId,\r\n  selectClaimAssociateWithLoss,\r\n  getClaimsAssociateWithLoss,\r\n  getViewTableDocuments,\r\n  selectDmsWidgetClaimDocs,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nClaimsProcessingDmsWidget.propTypes = {\r\n  isLossDashboard: PropTypes.bool,\r\n};\r\n\r\nexport default function ClaimsProcessingDmsWidget({ isLossDashboard }) {\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const associatedClaims = useSelector(selectClaimAssociateWithLoss);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const currentLossDetailId = get(lossInformation, 'lossDetailID');\r\n  const currentLossRef = get(lossInformation, 'lossRef');\r\n  const currentClaimRef = get(claimsInformation, 'claimReference');\r\n  const dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\r\n  const lossDocDetails = dmsWidgetClaimDocs.hasOwnProperty(currentLossRef) ? dmsWidgetClaimDocs[currentLossRef] : [];\r\n  const claimsDocDetails = dmsWidgetClaimDocs.hasOwnProperty(currentClaimRef) ? dmsWidgetClaimDocs[currentClaimRef] : [];\r\n\r\n  useEffect(() => {\r\n    if (currentLossDetailId) {\r\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\r\n    }\r\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimsArr = [];\r\n\r\n  associatedClaims?.forEach((item) => {\r\n    claimsArr.push({ referenceId: item.claimReference, sectionType: 'Claim' });\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currentLossRef) {\r\n      dispatch(\r\n        getViewTableDocuments({ dmsWidgetReqParams: [{ referenceId: currentLossRef, sectionType: 'Loss' }], isFromDmsWidget: true })\r\n      );\r\n    }\r\n  }, [currentLossRef]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isInvalidOrEmptyArray(claimsArr)) {\r\n      dispatch(getViewTableDocuments({ dmsWidgetReqParams: claimsArr, isFromDmsWidget: true }));\r\n    }\r\n  }, [claimsArr.length]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimRefsArray = associatedClaims?.map((item) => item.claimReference)?.filter((claimref) => claimref !== currentClaimRef);\r\n\r\n  const createSortedDocs = (docs) => docs?.sort((doc1, doc2) => new Date(doc1?.createdDate) - new Date(doc2?.createdDate));\r\n\r\n  const lossDocuments = createSortedDocs(\r\n    lossDocDetails?.map((doc) => {\r\n      return {\r\n        ...doc,\r\n        id: doc.documentId,\r\n        label: doc.documentName,\r\n        labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n      };\r\n    })\r\n  );\r\n\r\n  const currentClaimDocuments = createSortedDocs(\r\n    claimsDocDetails?.map((doc) => {\r\n      return {\r\n        ...doc,\r\n        id: doc.documentId,\r\n        label: doc.documentName,\r\n        labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n      };\r\n    })\r\n  );\r\n\r\n  let openedChild = [],\r\n    closedChild = [];\r\n\r\n  openedChild = [\r\n    ...lossDocuments,\r\n    ...(currentClaimRef\r\n      ? [\r\n          {\r\n            id: 'child1',\r\n            label: currentClaimDocuments?.length ? `Claim ${currentClaimRef}` : '',\r\n            labelInfo: '',\r\n            children: currentClaimDocuments,\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  closedChild =\r\n    claimRefsArray?.length > 0\r\n      ? claimRefsArray?.map((item) => {\r\n          return {\r\n            id: item,\r\n            label: item ? `Claim ${item}` : '',\r\n            labelInfo: '',\r\n            children: createSortedDocs(\r\n              dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item])\r\n                ? dmsWidgetClaimDocs[item]?.map((doc) => {\r\n                    return {\r\n                      ...doc,\r\n                      id: doc.documentId,\r\n                      label: doc.documentName,\r\n                      labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n                    };\r\n                  })\r\n                : [{}]\r\n            ),\r\n          };\r\n        })\r\n      : [];\r\n\r\n  if (isLossDashboard) {\r\n    openedChild = lossDocuments;\r\n    closedChild = [\r\n      ...(currentClaimRef\r\n        ? [\r\n            {\r\n              id: 'child1',\r\n              label: currentClaimDocuments?.length ? `Claim ${currentClaimRef}` : '',\r\n              labelInfo: '',\r\n              children: currentClaimDocuments,\r\n            },\r\n          ]\r\n        : []),\r\n      ...closedChild,\r\n    ];\r\n  }\r\n\r\n  const rootChildren = [...openedChild, ...closedChild];\r\n\r\n  const data = {\r\n    id: 'root',\r\n    label: rootChildren?.length ? `Loss Reference ${currentLossRef}` : '',\r\n    labelInfo: '',\r\n    children: rootChildren,\r\n  };\r\n\r\n  const treeArr = [];\r\n  data?.children?.forEach((child) => {\r\n    if (child.labelInfo) {\r\n      treeArr.push(child);\r\n    } else {\r\n      child?.children?.forEach((child) => {\r\n        if (child) {\r\n          treeArr.push(child);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const submitSearch = (query) => {\r\n    const filteredData = createSortedDocs(\r\n      treeArr?.filter(\r\n        ({ documentName, labelInfo }) =>\r\n          !isEmpty(\r\n            [documentName, labelInfo]?.find((item) =>\r\n              item?.toLowerCase()?.includes(query)\r\n            )\r\n          )\r\n      )\r\n    );\r\n    setFilteredData(filteredData);\r\n    setSearchQuery(query);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setFilteredData([]);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const rowClick = (e, doc) => {\r\n    e.preventDefault();\r\n    const { documentId, documentName } = doc;\r\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\r\n  };\r\n\r\n  return (\r\n    <TreeView\r\n      treeData={data}\r\n      rootRef={currentLossRef}\r\n      widgetTitle={utils.string.t('dms.view.documents.title')}\r\n      columns={[\r\n        { header: utils.string.t('dms.upload.file'), flex: '0.8', ml: '8px' },\r\n        { header: utils.string.t('dms.upload.uploadedOn'), flex: '0.375' },\r\n      ]}\r\n      defaultExpanded={['child1', 'root']}\r\n      filteredData={filteredData}\r\n      searchQuery={searchQuery}\r\n      handlers={{\r\n        submitSearch,\r\n        resetSearch,\r\n        rowClick,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}