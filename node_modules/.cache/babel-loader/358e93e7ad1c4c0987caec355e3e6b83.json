{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { get } from 'lodash';\nimport types from './types';\nvar initialState = {\n  view: {\n    files: [],\n    versionHistory: {}\n  },\n  search: {\n    files: []\n  },\n  upload: {\n    documentMetaData: {},\n    document: {},\n    documentUploaded: {}\n  },\n  contextSubType: {\n    type: '',\n    caseIncidentID: '',\n    caseIncidentNotesID: '',\n    refId: ''\n  }\n};\n\nvar dmsReducers = function dmsReducers() {\n  var _state$search, _state$upload, _action$payload, _state$upload2, _state$upload3, _state$upload4, _state$upload4$docume, _state$upload5, _state$upload5$docume, _state$upload5$docume2, _state$upload5$docume3, _state$upload6;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        documentTypes: action.payload\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: action.payload,\n          itemsTotal: get(action.payload, 'totalElements', 0),\n          query: get(action.payload, 'searchBy') || '',\n          filters: (state === null || state === void 0 ? void 0 : (_state$search = state.search) === null || _state$search === void 0 ? void 0 : _state$search.filters) || []\n        })\n      });\n\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: _objectSpread(_objectSpread({}, state.search), {}, {\n          files: action.payload || [],\n          query: get(action.payload, 'searchBy') || [],\n          filters: get(action.payload, 'data.filterValue') || []\n        })\n      });\n\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        search: initialState.search\n      });\n\n    case types.GET_DOCUMENT_META_DATA_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'PENDING',\n            data: {},\n            error: null\n          }\n        })\n      });\n\n    case types.GET_DOCUMENT_META_DATA_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'SUCCESS',\n            data: action.payload,\n            error: false\n          }\n        })\n      });\n\n    case types.GET_DOCUMENT_META_DATA_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentMetaData: {\n            status: 'REJECTED',\n            error: action.payload\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'PENDING',\n            data: {},\n            error: null\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'SUCCESS',\n            data: action.payload,\n            error: false\n          }\n        })\n      });\n\n    case types.GET_DMS_DOCUMENT_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          document: {\n            status: 'REJECTED',\n            error: action.payload\n          }\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_PENDING:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload = state.upload) === null || _state$upload === void 0 ? void 0 : _state$upload.documentUploaded), {}, {\n            status: 'PENDING',\n            error: null\n          })\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: {\n            status: 'SUCCESS',\n            data: action.payload,\n            refDocumentDto: (_action$payload = action.payload) === null || _action$payload === void 0 ? void 0 : _action$payload.documentDto,\n            error: false\n          }\n        })\n      });\n\n    case types.POST_DMS_DOCUMENT_REJECTED:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload2 = state.upload) === null || _state$upload2 === void 0 ? void 0 : _state$upload2.documentUploaded), {}, {\n            status: 'REJECTED',\n            error: action.payload\n          })\n        })\n      });\n\n    case types.UPDATE_DMS_UPLOAD_DOCUMENT_DTO:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload3 = state.upload) === null || _state$upload3 === void 0 ? void 0 : _state$upload3.documentUploaded), {}, {\n            data: _objectSpread(_objectSpread({}, (_state$upload4 = state.upload) === null || _state$upload4 === void 0 ? void 0 : (_state$upload4$docume = _state$upload4.documentUploaded) === null || _state$upload4$docume === void 0 ? void 0 : _state$upload4$docume.data), {}, {\n              documentDto: _toConsumableArray((_state$upload5 = state.upload) === null || _state$upload5 === void 0 ? void 0 : (_state$upload5$docume = _state$upload5.documentUploaded) === null || _state$upload5$docume === void 0 ? void 0 : (_state$upload5$docume2 = _state$upload5$docume.data) === null || _state$upload5$docume2 === void 0 ? void 0 : (_state$upload5$docume3 = _state$upload5$docume2.documentDto) === null || _state$upload5$docume3 === void 0 ? void 0 : _state$upload5$docume3.filter(function (item) {\n                return item.documentName !== action.payload;\n              }))\n            })\n          })\n        })\n      });\n\n    case types.RESET_DMS_UPLOAD_STATUS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread(_objectSpread({}, state.upload), {}, {\n          documentUploaded: _objectSpread(_objectSpread({}, (_state$upload6 = state.upload) === null || _state$upload6 === void 0 ? void 0 : _state$upload6.documentUploaded), {}, {\n            status: ''\n          })\n        })\n      });\n\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        upload: _objectSpread({}, initialState.upload)\n      });\n\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          files: action.payload\n        })\n      });\n\n    case 'DMS_VIEW_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread({}, initialState.view)\n      });\n\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: action.payload\n        })\n      });\n\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        view: _objectSpread(_objectSpread({}, state.view), {}, {\n          versionHistory: initialState.view.versionHistory\n        })\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: _objectSpread(_objectSpread({}, state.contextSubType), action.payload)\n      });\n\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        contextSubType: initialState.contextSubType\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default dmsReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.reducers.js"],"names":["get","types","initialState","view","files","versionHistory","search","upload","documentMetaData","document","documentUploaded","contextSubType","type","caseIncidentID","caseIncidentNotesID","refId","dmsReducers","state","action","documentTypes","payload","itemsTotal","query","filters","GET_DOCUMENT_META_DATA_PENDING","status","data","error","GET_DOCUMENT_META_DATA_SUCCESS","GET_DOCUMENT_META_DATA_REJECTED","GET_DMS_DOCUMENT_PENDING","GET_DMS_DOCUMENT_SUCCESS","GET_DMS_DOCUMENT_REJECTED","POST_DMS_DOCUMENT_PENDING","POST_DMS_DOCUMENT_SUCCESS","refDocumentDto","documentDto","POST_DMS_DOCUMENT_REJECTED","UPDATE_DMS_UPLOAD_DOCUMENT_DTO","filter","item","documentName","RESET_DMS_UPLOAD_STATUS","GET_DMS_VERSION_HISTORY_SUCCESS"],"mappings":"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","sourcesContent":["import { get } from 'lodash';\r\nimport types from './types';\r\n\r\nconst initialState = {\r\n  view: {\r\n    files: [],\r\n    versionHistory: {},\r\n  },\r\n  search: {\r\n    files: [],\r\n  },\r\n  upload: {\r\n    documentMetaData: {},\r\n    document: {},\r\n    documentUploaded: {},\r\n  },\r\n  contextSubType: {\r\n    type: '',\r\n    caseIncidentID: '',\r\n    caseIncidentNotesID: '',\r\n    refId: '',\r\n  },\r\n};\r\n\r\nconst dmsReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'DMS_DOCUMENT_TYPES_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        documentTypes: action.payload,\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: action.payload,\r\n          itemsTotal: get(action.payload, 'totalElements', 0),\r\n          query: get(action.payload, 'searchBy') || '',\r\n          filters: state?.search?.filters || [],\r\n        },\r\n      };\r\n\r\n    case 'DMS_FILTER_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        search: {\r\n          ...state.search,\r\n          files: action.payload || [],\r\n          query: get(action.payload, 'searchBy') || [],\r\n          filters: get(action.payload, 'data.filterValue') || [],\r\n        },\r\n      };\r\n\r\n    case 'DMS_SEARCH_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        search: initialState.search,\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'PENDING',\r\n            data: {},\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DOCUMENT_META_DATA_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentMetaData: {\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'PENDING',\r\n            data: {},\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_DOCUMENT_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          document: {\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_PENDING:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: 'PENDING',\r\n            error: null,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_SUCCESS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            status: 'SUCCESS',\r\n            data: action.payload,\r\n            refDocumentDto: action.payload?.documentDto,\r\n            error: false,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.POST_DMS_DOCUMENT_REJECTED:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: 'REJECTED',\r\n            error: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.UPDATE_DMS_UPLOAD_DOCUMENT_DTO:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            data: {\r\n              ...state.upload?.documentUploaded?.data,\r\n              documentDto: [...state.upload?.documentUploaded?.data?.documentDto?.filter((item) => item.documentName !== action.payload)],\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case types.RESET_DMS_UPLOAD_STATUS:\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...state.upload,\r\n          documentUploaded: {\r\n            ...state.upload?.documentUploaded,\r\n            status: '',\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'DMS_UPLOAD_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        upload: {\r\n          ...initialState.upload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          files: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_VIEW_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...initialState.view,\r\n        },\r\n      };\r\n\r\n    case types.GET_DMS_VERSION_HISTORY_SUCCESS:\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_HISTORY_DOCUMENTS_RESET':\r\n      return {\r\n        ...state,\r\n        view: {\r\n          ...state.view,\r\n          versionHistory: initialState.view.versionHistory,\r\n        },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_SET':\r\n      return {\r\n        ...state,\r\n        contextSubType: {\r\n          ...state.contextSubType,\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case 'DMS_TASK_CONTEXT_TYPE_RESET':\r\n      return {\r\n        ...state,\r\n        contextSubType: initialState.contextSubType,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default dmsReducers;\r\n"]},"metadata":{},"sourceType":"module"}