{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TooltipList\\\\TooltipList.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { TooltipListView } from './TooltipList.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTooltipListView.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\n    label: PropTypes.string.isRequired,\n    amount: PropTypes.number.isRequired\n  })).isRequired\n};\nexport function TooltipList(_ref) {\n  var items = _ref.items;\n  if (!utils.generic.isValidArray(items, true)) return null;\n  return /*#__PURE__*/_jsxDEV(TooltipListView, {\n    items: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 20,\n    columnNumber: 10\n  }, this);\n}\n_c = TooltipList;\nTooltipList.displayName = \"TooltipList\";\nTooltipList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TooltipList\"\n};\nexport default TooltipList;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\TooltipList\\\\TooltipList.js\"] = {\n    name: \"TooltipList\",\n    docgenInfo: TooltipList.__docgenInfo,\n    path: \"src\\\\components\\\\TooltipList\\\\TooltipList.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TooltipList\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TooltipList/TooltipList.js"],"names":["React","PropTypes","TooltipListView","utils","propTypes","items","arrayOf","shape","id","oneOfType","number","isRequired","string","label","amount","TooltipList","generic","isValidArray"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAD,eAAe,CAACE,SAAhB,GAA4B;AAC1BC,EAAAA,KAAK,EAAEJ,SAAS,CAACK,OAAV,CACLL,SAAS,CAACM,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEP,SAAS,CAACQ,SAAV,CAAoB,CAACR,SAAS,CAACS,MAAV,CAAiBC,UAAlB,EAA8BV,SAAS,CAACW,MAAV,CAAiBD,UAA/C,CAApB,CADU;AAEdE,IAAAA,KAAK,EAAEZ,SAAS,CAACW,MAAV,CAAiBD,UAFV;AAGdG,IAAAA,MAAM,EAAEb,SAAS,CAACS,MAAV,CAAiBC;AAHX,GAAhB,CADK,EAMLA;AAPwB,CAA5B;AAUA,OAAO,SAASI,WAAT,OAAgC;AAAA,MAATV,KAAS,QAATA,KAAS;AACrC,MAAI,CAACF,KAAK,CAACa,OAAN,CAAcC,YAAd,CAA2BZ,KAA3B,EAAkC,IAAlC,CAAL,EAA8C,OAAO,IAAP;AAC9C,sBAAO,QAAC,eAAD;AAAiB,IAAA,KAAK,EAAEA;AAAxB;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAHeU,W;AAAAA,W;;;;;;AAKhB,eAAeA,WAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { TooltipListView } from './TooltipList.view';\r\nimport * as utils from 'utils';\r\n\r\nTooltipListView.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.number.isRequired, PropTypes.string.isRequired]),\r\n      label: PropTypes.string.isRequired,\r\n      amount: PropTypes.number.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport function TooltipList({ items }) {\r\n  if (!utils.generic.isValidArray(items, true)) return null;\r\n  return <TooltipListView items={items} />;\r\n}\r\n\r\nexport default TooltipList;\r\n"]},"metadata":{},"sourceType":"module"}