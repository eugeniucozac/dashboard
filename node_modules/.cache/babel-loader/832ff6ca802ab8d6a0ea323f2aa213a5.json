{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _this = this;\n\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nvar utilsDmsFormatter = {\n  formatDocumentMetaData: function formatDocumentMetaData(data, context, refDataXbInstances, catCodesData) {\n    var _refDataXbInstances$f, _catCodesData$find;\n\n    return {\n      commonInfo: [{\n        id: 1,\n        name: utils.string.t('dms.upload.commonInfoSection.gxbInstance'),\n        value: (data === null || data === void 0 ? void 0 : data.xbInstanceId) ? refDataXbInstances === null || refDataXbInstances === void 0 ? void 0 : (_refDataXbInstances$f = refDataXbInstances.find(function (xbInstance) {\n          return (xbInstance === null || xbInstance === void 0 ? void 0 : xbInstance.sourceID.toString()) === (data === null || data === void 0 ? void 0 : data.xbInstanceId.toString());\n        })) === null || _refDataXbInstances$f === void 0 ? void 0 : _refDataXbInstances$f.edgeSourceName : constants.DMS_DEFAULT_XB_INSTANCE\n      }, {\n        id: 2,\n        name: utils.string.t('dms.upload.commonInfoSection.sectionType'),\n        value: context\n      }, {\n        id: 3,\n        name: utils.string.t('dms.upload.commonInfoSection.yearOfInception'),\n        value: data === null || data === void 0 ? void 0 : data.year\n      }, {\n        id: 4,\n        name: utils.string.t('dms.upload.commonInfoSection.department'),\n        value: data === null || data === void 0 ? void 0 : data.departmentName\n      }, {\n        id: 5,\n        name: utils.string.t('dms.upload.commonInfoSection.uploadOn'),\n        value: \"\".concat(utils.string.t('format.date', {\n          value: {\n            date: data === null || data === void 0 ? void 0 : data.createdDate,\n            format: config.ui.format.date.text\n          }\n        }))\n      }],\n      lossInfo: [{\n        id: 6,\n        name: utils.string.t('dms.upload.lossInfoSection.lossRef'),\n        value: data === null || data === void 0 ? void 0 : data.lossRef\n      }, {\n        id: 7,\n        name: utils.string.t('dms.upload.lossInfoSection.dateOfLoss'),\n        value: \"\".concat(utils.string.t('format.date', {\n          value: {\n            date: data === null || data === void 0 ? void 0 : data.lossCreatedDate,\n            format: config.ui.format.date.text\n          }\n        }))\n      }, {\n        id: 8,\n        name: utils.string.t('dms.upload.lossInfoSection.lossDescription'),\n        value: data === null || data === void 0 ? void 0 : data.lossDescription\n      }, {\n        id: 9,\n        name: utils.string.t('dms.upload.lossInfoSection.catCode'),\n        value: utils.generic.isValidArray(catCodesData) ? catCodesData === null || catCodesData === void 0 ? void 0 : (_catCodesData$find = catCodesData.find(function (catCode) {\n          return (catCode === null || catCode === void 0 ? void 0 : catCode.catCodesID) === (data === null || data === void 0 ? void 0 : data.catCodesID);\n        })) === null || _catCodesData$find === void 0 ? void 0 : _catCodesData$find.catCodeDisplay : data === null || data === void 0 ? void 0 : data.catCodesID\n      }],\n      claimInfo: [{\n        id: 10,\n        name: utils.string.t('dms.upload.claimInfoSection.claimRef'),\n        value: data === null || data === void 0 ? void 0 : data.claimRef\n      }, {\n        id: 11,\n        name: utils.string.t('dms.upload.claimInfoSection.policyId'),\n        value: data === null || data === void 0 ? void 0 : data.policyId\n      }, {\n        id: 12,\n        name: utils.string.t('dms.upload.claimInfoSection.umr'),\n        value: data === null || data === void 0 ? void 0 : data.uniqueMarketRef\n      }, {\n        id: 13,\n        name: utils.string.t('dms.upload.claimInfoSection.insuredName'),\n        value: data === null || data === void 0 ? void 0 : data.insuredName\n      }, {\n        id: 14,\n        name: utils.string.t('dms.upload.claimInfoSection.claimant'),\n        value: data === null || data === void 0 ? void 0 : data.claimantName\n      }, {\n        id: 15,\n        name: utils.string.t('dms.upload.claimInfoSection.ucr'),\n        value: data === null || data === void 0 ? void 0 : data.ucr\n      }],\n      policyInfo: [{\n        id: 16,\n        name: utils.string.t('dms.upload.policyInfoSection.policyRef'),\n        value: data === null || data === void 0 ? void 0 : data.policyRef\n      }, {\n        id: 17,\n        name: utils.string.t('dms.upload.policyInfoSection.umr'),\n        value: data === null || data === void 0 ? void 0 : data.uniqueMarketRef\n      }, {\n        id: 18,\n        name: utils.string.t('dms.upload.policyInfoSection.insuredName'),\n        value: data === null || data === void 0 ? void 0 : data.insuredName\n      }, {\n        id: 19,\n        name: utils.string.t('dms.upload.policyInfoSection.inceptionDate'),\n        value: data === null || data === void 0 ? void 0 : data.inceptionDate\n      }]\n    };\n  },\n  getDuplicateIndexes: function getDuplicateIndexes(fieldsArray, documentDetails) {\n    //TODO - get rid of Combinator and procedural pattern. To replace with pure function\n    var indexesArray = [];\n\n    if (Boolean(documentDetails.length)) {\n      var _loop = function _loop(i) {\n        fieldsArray.forEach(function (item, index) {\n          if (item.name === documentDetails[i].documentName) {\n            indexesArray.push(index);\n          }\n        });\n      };\n\n      for (var i = 0; i < documentDetails.length; i++) {\n        _loop(i);\n      }\n\n      return indexesArray;\n    }\n  },\n  getContextReferenceId: function getContextReferenceId(state, context, subcontext) {\n    var _state$claims$lossInf, _state$claims$claimDa, _state$claims$process, _state$claims, _state$claims$claimsI, _state$claims$policyI, _state$processingInst, _state$processingInst2, _Object$keys, _state$processingInst3, _state$premiumProcess, _state$premiumProcess2;\n\n    switch (context) {\n      case constants.DMS_CONTEXT_LOSS:\n        return (_state$claims$lossInf = state.claims.lossInformation) === null || _state$claims$lossInf === void 0 ? void 0 : _state$claims$lossInf.lossRef;\n\n      case constants.DMS_CONTEXT_CLAIM:\n        return ((_state$claims$claimDa = state.claims.claimData) === null || _state$claims$claimDa === void 0 ? void 0 : _state$claims$claimDa.claimRef) || ((_state$claims$process = state.claims.processing.selected[0]) === null || _state$claims$process === void 0 ? void 0 : _state$claims$process.claimRef) || ((_state$claims = state.claims) === null || _state$claims === void 0 ? void 0 : (_state$claims$claimsI = _state$claims.claimsInformation) === null || _state$claims$claimsI === void 0 ? void 0 : _state$claims$claimsI.claimReference);\n\n      case constants.DMS_CONTEXT_POLICY:\n        return ((_state$claims$policyI = state.claims.policyInformation) === null || _state$claims$policyI === void 0 ? void 0 : _state$claims$policyI.policyRef) || ((_state$processingInst = state.processingInstructions) === null || _state$processingInst === void 0 ? void 0 : (_state$processingInst2 = _state$processingInst.selectedRiskRef) === null || _state$processingInst2 === void 0 ? void 0 : _state$processingInst2.riskRefId);\n\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\n        return ((_Object$keys = Object.keys((_state$processingInst3 = state.processingInstructions) === null || _state$processingInst3 === void 0 ? void 0 : _state$processingInst3.instructions)) === null || _Object$keys === void 0 ? void 0 : _Object$keys[0]) || '';\n\n      case constants.DMS_CONTEXT_TASK:\n        var taskDetail = state.claims.tasksProcessing.selected[0];\n\n        if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE) {\n          var refCond = state.dms.contextSubType;\n          var respectiveRfiResponse = state.claims.rfiHistory.find(function (itr) {\n            return (itr === null || itr === void 0 ? void 0 : itr.caseIncidentNotesID) === (refCond === null || refCond === void 0 ? void 0 : refCond.caseIncidentNotesID);\n          });\n          return utils.generic.isValidObject(respectiveRfiResponse, 'caseIncidentNotesID') ? (taskDetail === null || taskDetail === void 0 ? void 0 : taskDetail.taskId) + '-' + (respectiveRfiResponse === null || respectiveRfiResponse === void 0 ? void 0 : respectiveRfiResponse.caseIncidentNotesID) : (refCond === null || refCond === void 0 ? void 0 : refCond.caseIncidentNotesID) ? (taskDetail === null || taskDetail === void 0 ? void 0 : taskDetail.taskId) + '-' + (refCond === null || refCond === void 0 ? void 0 : refCond.caseIncidentNotesID) : taskDetail === null || taskDetail === void 0 ? void 0 : taskDetail.taskId;\n        } else if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_RFI) {\n          var _state$claims$rfiCrea;\n\n          return (_state$claims$rfiCrea = state.claims.rfiCreated) === null || _state$claims$rfiCrea === void 0 ? void 0 : _state$claims$rfiCrea.id;\n        } else if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_ADHOC) {\n          var _state$claims$adhocTa, _state$claims$adhocTa2;\n\n          return (_state$claims$adhocTa = state.claims.adhocTask) === null || _state$claims$adhocTa === void 0 ? void 0 : (_state$claims$adhocTa2 = _state$claims$adhocTa.data) === null || _state$claims$adhocTa2 === void 0 ? void 0 : _state$claims$adhocTa2.id;\n        } else {\n          return taskDetail === null || taskDetail === void 0 ? void 0 : taskDetail.taskId;\n        }\n\n      case constants.DMS_CONTEXT_CASE:\n        return (_state$premiumProcess = state.premiumProcessing) === null || _state$premiumProcess === void 0 ? void 0 : (_state$premiumProcess2 = _state$premiumProcess.caseDetails) === null || _state$premiumProcess2 === void 0 ? void 0 : _state$premiumProcess2.caseId;\n\n      default:\n        return '';\n    }\n  },\n  getActionDispatched: function getActionDispatched(isPending, isFulfilled, isRejected) {\n    return !isPending && !isFulfilled && !isRejected;\n  },\n  getPaymentDocumentType: function getPaymentDocumentType(selected) {\n    return selected.documentTypeDescription === constants.DMS_DOCUMENT_TYPE_PAYMENT;\n  },\n  getDocumentTypeFilterKeys: function getDocumentTypeFilterKeys(context, source, documentTypeKey) {\n    switch (context) {\n      case constants.DMS_CONTEXT_LOSS:\n      case constants.DMS_CONTEXT_CLAIM:\n      case constants.DMS_CONTEXT_TASK:\n        return {\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          dmsSourceId: constants.DMS_CLAIM_SOURCE_ID,\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE\n        };\n\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\n        return {\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.instruction,\n          dmsSourceId: 0,\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE\n        };\n\n      case constants.DMS_CONTEXT_POLICY:\n        if ([constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned].includes(documentTypeKey)) {\n          return {\n            dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\n            dmsSourceId: source,\n            dmsDocTypeSource: constants.DMS_SHAREPATH_SOURCES.gxb\n          };\n        } else {\n          var isClaim = documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim;\n          return {\n            dmsSectionKey: isClaim ? constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim : constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.instruction,\n            dmsSourceId: constants.DMS_CLAIM_SOURCE_ID,\n            dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE\n          };\n        }\n\n      case constants.DMS_CONTEXT_CASE:\n        return {\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\n          dmsSourceId: source,\n          dmsDocTypeSource: constants.DMS_SHAREPATH_SOURCES.gxb\n        };\n\n      default:\n        return {\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\n          dmsSourceId: 0,\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE\n        };\n    }\n  },\n  getMetaDataParams: function getMetaDataParams(state, context, sourceId, metaDataSectionRef) {\n    var _state$claims2, _state$claims3, _state$claims4, _state$claims4$proces, _state$claims5, _state$claims6, _state$claims6$claimD, _state$claims7, _state$claims7$policy, _state$claims8, _state$claims9, _state$claims9$proces, _state$claims10, _state$claims10$claim, _state$claims11, _state$claims11$polic, _state$premiumProcess3, _state$premiumProcess4, _state$premiumProcess5, _state$premiumProcess6, _state$processingInst4, _state$processingInst5, _state$processingInst6, _state$processingInst7, _state$processingInst8, _state$processingInst9, _state$processingInst10, _state$processingInst11;\n\n    switch (context) {\n      case constants.DMS_CONTEXT_LOSS:\n        var lossInfoStore = (_state$claims2 = state.claims) === null || _state$claims2 === void 0 ? void 0 : _state$claims2.lossInformation;\n        return {\n          sectionType: context,\n          sourceId: 1,\n          divisionId: null,\n          referenceId: lossInfoStore === null || lossInfoStore === void 0 ? void 0 : lossInfoStore.lossDetailID,\n          sectionRef: lossInfoStore === null || lossInfoStore === void 0 ? void 0 : lossInfoStore.lossRef\n        };\n\n      case constants.DMS_CONTEXT_CLAIM:\n        var claimData = (_state$claims3 = state.claims) === null || _state$claims3 === void 0 ? void 0 : _state$claims3.claimData;\n        var claimGridSelectionData = (_state$claims4 = state.claims) === null || _state$claims4 === void 0 ? void 0 : (_state$claims4$proces = _state$claims4.processing) === null || _state$claims4$proces === void 0 ? void 0 : _state$claims4$proces.selected[0];\n        var claimsInformation = (_state$claims5 = state.claims) === null || _state$claims5 === void 0 ? void 0 : _state$claims5.claimsInformation;\n        return {\n          sectionType: context,\n          sourceId: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.sourceID) || ((_state$claims6 = state.claims) === null || _state$claims6 === void 0 ? void 0 : (_state$claims6$claimD = _state$claims6.claimDetailInformationSuccess) === null || _state$claims6$claimD === void 0 ? void 0 : _state$claims6$claimD.sourceID) || (claimGridSelectionData === null || claimGridSelectionData === void 0 ? void 0 : claimGridSelectionData.sourceId),\n          divisionId: ((_state$claims7 = state.claims) === null || _state$claims7 === void 0 ? void 0 : (_state$claims7$policy = _state$claims7.policyInformation) === null || _state$claims7$policy === void 0 ? void 0 : _state$claims7$policy.divisionID) || (claimGridSelectionData === null || claimGridSelectionData === void 0 ? void 0 : claimGridSelectionData.divisionID),\n          referenceId: (claimData === null || claimData === void 0 ? void 0 : claimData.claimId) || (claimGridSelectionData === null || claimGridSelectionData === void 0 ? void 0 : claimGridSelectionData.claimID),\n          sectionRef: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) || (claimGridSelectionData === null || claimGridSelectionData === void 0 ? void 0 : claimGridSelectionData.claimRef) || (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference)\n        };\n\n      case constants.DMS_CONTEXT_TASK:\n        var claimInfoStore = (_state$claims8 = state.claims) === null || _state$claims8 === void 0 ? void 0 : _state$claims8.claimsInformation;\n        var claimGridSelectedData = (_state$claims9 = state.claims) === null || _state$claims9 === void 0 ? void 0 : (_state$claims9$proces = _state$claims9.processing) === null || _state$claims9$proces === void 0 ? void 0 : _state$claims9$proces.selected[0];\n        return {\n          sectionType: constants.DMS_CONTEXT_CLAIM,\n          sourceId: (claimInfoStore === null || claimInfoStore === void 0 ? void 0 : claimInfoStore.sourceID) || ((_state$claims10 = state.claims) === null || _state$claims10 === void 0 ? void 0 : (_state$claims10$claim = _state$claims10.claimDetailInformationSuccess) === null || _state$claims10$claim === void 0 ? void 0 : _state$claims10$claim.sourceID) || (claimGridSelectedData === null || claimGridSelectedData === void 0 ? void 0 : claimGridSelectedData.sourceId),\n          divisionId: ((_state$claims11 = state.claims) === null || _state$claims11 === void 0 ? void 0 : (_state$claims11$polic = _state$claims11.policyInformation) === null || _state$claims11$polic === void 0 ? void 0 : _state$claims11$polic.divisionID) || (claimGridSelectedData === null || claimGridSelectedData === void 0 ? void 0 : claimGridSelectedData.divisionID),\n          referenceId: (claimInfoStore === null || claimInfoStore === void 0 ? void 0 : claimInfoStore.claimID) || (claimGridSelectedData === null || claimGridSelectedData === void 0 ? void 0 : claimGridSelectedData.claimID) || (claimInfoStore === null || claimInfoStore === void 0 ? void 0 : claimInfoStore.policyID),\n          sectionRef: (claimInfoStore === null || claimInfoStore === void 0 ? void 0 : claimInfoStore.claimRef) || (claimGridSelectedData === null || claimGridSelectedData === void 0 ? void 0 : claimGridSelectedData.claimRef) || (claimInfoStore === null || claimInfoStore === void 0 ? void 0 : claimInfoStore.policyRef)\n        };\n\n      case constants.DMS_CONTEXT_CASE:\n        return {\n          sectionType: constants.DMS_CONTEXT_POLICY,\n          sourceId: sourceId,\n          divisionId: null,\n          referenceId: (_state$premiumProcess3 = state.premiumProcessing) === null || _state$premiumProcess3 === void 0 ? void 0 : (_state$premiumProcess4 = _state$premiumProcess3.caseDetails) === null || _state$premiumProcess4 === void 0 ? void 0 : _state$premiumProcess4.policyId,\n          sectionRef: (_state$premiumProcess5 = state.premiumProcessing) === null || _state$premiumProcess5 === void 0 ? void 0 : (_state$premiumProcess6 = _state$premiumProcess5.caseDetails) === null || _state$premiumProcess6 === void 0 ? void 0 : _state$premiumProcess6.policyRef\n        };\n\n      case constants.DMS_CONTEXT_POLICY:\n        return {\n          sectionType: constants.DMS_CONTEXT_POLICY,\n          sourceId: sourceId,\n          divisionId: null,\n          referenceId: (_state$processingInst4 = state.processingInstructions) === null || _state$processingInst4 === void 0 ? void 0 : (_state$processingInst5 = _state$processingInst4.selectedRiskRef) === null || _state$processingInst5 === void 0 ? void 0 : _state$processingInst5.xbPolicyId,\n          sectionRef: (_state$processingInst6 = state.processingInstructions) === null || _state$processingInst6 === void 0 ? void 0 : (_state$processingInst7 = _state$processingInst6.selectedRiskRef) === null || _state$processingInst7 === void 0 ? void 0 : _state$processingInst7.riskRefId\n        };\n\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\n        return {\n          sectionType: constants.DMS_CONTEXT_POLICY,\n          sourceId: sourceId,\n          divisionId: null,\n          referenceId: (_state$processingInst8 = state.processingInstructions) === null || _state$processingInst8 === void 0 ? void 0 : (_state$processingInst9 = _state$processingInst8.instructions[metaDataSectionRef]) === null || _state$processingInst9 === void 0 ? void 0 : (_state$processingInst10 = _state$processingInst9.riskReferences) === null || _state$processingInst10 === void 0 ? void 0 : (_state$processingInst11 = _state$processingInst10.find(function (r) {\n            return r.leadPolicy;\n          })) === null || _state$processingInst11 === void 0 ? void 0 : _state$processingInst11.xbPolicyId,\n          sectionRef: metaDataSectionRef\n        };\n\n      default:\n        return null;\n    }\n  },\n  getUploadMetaDataParams: function getUploadMetaDataParams(state, context, referenceId) {\n    var _state$claims12, _state$claims12$lossI, _state$dms, _state$dms$upload, _state$dms$upload$met, _state$dms$upload$met2, _state$dms$upload$met3, _state$dms2, _state$dms2$upload, _state$dms2$upload$me, _state$dms2$upload$me2, _state$dms2$upload$me3, _state$claims13, _state$claims13$polic, _state$dms3, _state$dms3$upload, _state$dms3$upload$me, _state$dms3$upload$me2, _state$dms3$upload$me3, _state$dms4, _state$dms4$upload, _state$dms4$upload$me, _state$dms4$upload$me2, _state$dms4$upload$me3, _state$claims14, _state$claims14$polic;\n\n    // TODO refactor getContextReferenceId() into getUploadMetaDataParams()\n    switch (context) {\n      case constants.DMS_CONTEXT_LOSS:\n        return {\n          lossRef: referenceId,\n          claimRef: '',\n          uniqueMarketRef: null,\n          ucr: null,\n          expiryDate: null\n        };\n\n      case constants.DMS_CONTEXT_CLAIM:\n        return {\n          lossRef: ((_state$claims12 = state.claims) === null || _state$claims12 === void 0 ? void 0 : (_state$claims12$lossI = _state$claims12.lossInformation) === null || _state$claims12$lossI === void 0 ? void 0 : _state$claims12$lossI.lossRef) || '',\n          claimRef: referenceId,\n          uniqueMarketRef: ((_state$dms = state.dms) === null || _state$dms === void 0 ? void 0 : (_state$dms$upload = _state$dms.upload) === null || _state$dms$upload === void 0 ? void 0 : (_state$dms$upload$met = _state$dms$upload.metaData) === null || _state$dms$upload$met === void 0 ? void 0 : (_state$dms$upload$met2 = _state$dms$upload$met.data) === null || _state$dms$upload$met2 === void 0 ? void 0 : (_state$dms$upload$met3 = _state$dms$upload$met2.data) === null || _state$dms$upload$met3 === void 0 ? void 0 : _state$dms$upload$met3.uniqueMarketRef) || null,\n          ucr: ((_state$dms2 = state.dms) === null || _state$dms2 === void 0 ? void 0 : (_state$dms2$upload = _state$dms2.upload) === null || _state$dms2$upload === void 0 ? void 0 : (_state$dms2$upload$me = _state$dms2$upload.metaData) === null || _state$dms2$upload$me === void 0 ? void 0 : (_state$dms2$upload$me2 = _state$dms2$upload$me.data) === null || _state$dms2$upload$me2 === void 0 ? void 0 : (_state$dms2$upload$me3 = _state$dms2$upload$me2.data) === null || _state$dms2$upload$me3 === void 0 ? void 0 : _state$dms2$upload$me3.ucr) || null,\n          expiryDate: ((_state$claims13 = state.claims) === null || _state$claims13 === void 0 ? void 0 : (_state$claims13$polic = _state$claims13.policyInformation) === null || _state$claims13$polic === void 0 ? void 0 : _state$claims13$polic.expiryDate) || null\n        };\n\n      case constants.DMS_CONTEXT_TASK:\n        var selectedClaim = state.claims.processing.selected[0];\n        return {\n          lossRef: (selectedClaim === null || selectedClaim === void 0 ? void 0 : selectedClaim.lossRef) || '',\n          claimRef: (selectedClaim === null || selectedClaim === void 0 ? void 0 : selectedClaim.claimReference) || (selectedClaim === null || selectedClaim === void 0 ? void 0 : selectedClaim.claimRef) || '',\n          uniqueMarketRef: ((_state$dms3 = state.dms) === null || _state$dms3 === void 0 ? void 0 : (_state$dms3$upload = _state$dms3.upload) === null || _state$dms3$upload === void 0 ? void 0 : (_state$dms3$upload$me = _state$dms3$upload.metaData) === null || _state$dms3$upload$me === void 0 ? void 0 : (_state$dms3$upload$me2 = _state$dms3$upload$me.data) === null || _state$dms3$upload$me2 === void 0 ? void 0 : (_state$dms3$upload$me3 = _state$dms3$upload$me2.data) === null || _state$dms3$upload$me3 === void 0 ? void 0 : _state$dms3$upload$me3.uniqueMarketRef) || null,\n          ucr: ((_state$dms4 = state.dms) === null || _state$dms4 === void 0 ? void 0 : (_state$dms4$upload = _state$dms4.upload) === null || _state$dms4$upload === void 0 ? void 0 : (_state$dms4$upload$me = _state$dms4$upload.metaData) === null || _state$dms4$upload$me === void 0 ? void 0 : (_state$dms4$upload$me2 = _state$dms4$upload$me.data) === null || _state$dms4$upload$me2 === void 0 ? void 0 : (_state$dms4$upload$me3 = _state$dms4$upload$me2.data) === null || _state$dms4$upload$me3 === void 0 ? void 0 : _state$dms4$upload$me3.ucr) || null,\n          expiryDate: ((_state$claims14 = state.claims) === null || _state$claims14 === void 0 ? void 0 : (_state$claims14$polic = _state$claims14.policyInformation) === null || _state$claims14$polic === void 0 ? void 0 : _state$claims14$polic.expiryDate) || null\n        };\n\n      case constants.DMS_CONTEXT_CASE:\n        return {\n          lossRef: '',\n          claimRef: '',\n          uniqueMarketRef: null,\n          ucr: null,\n          expiryDate: null\n        };\n\n      default:\n        return {\n          lossRef: '',\n          claimRef: '',\n          uniqueMarketRef: null,\n          ucr: null,\n          expiryDate: null\n        };\n    }\n  },\n  getIcons: function getIcons(isFulfilled, isRejected, hasPartialSuccess) {\n    if (isFulfilled && hasPartialSuccess) {\n      return CheckCircleIcon;\n    } else if (isRejected || isFulfilled && !hasPartialSuccess) {\n      return ErrorOutlineIcon;\n    } else {\n      return HighlightOffIcon;\n    }\n  },\n  getFileKey: function getFileKey(file) {\n    return \"\".concat(file === null || file === void 0 ? void 0 : file.name, \"-\").concat(file === null || file === void 0 ? void 0 : file.size, \"-\").concat(file === null || file === void 0 ? void 0 : file.lastModified);\n  },\n  getUniqueFiles: function getUniqueFiles(files, uploadedFiles) {\n    return files === null || files === void 0 ? void 0 : files.reduce(function (acc, cur) {\n      var isDuplicate = utils.generic.isValidArray(uploadedFiles, true) && (uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.find(function (f) {\n        return utils.generic.isValidObject(f.file, true) && utils.generic.isValidObject(cur, true) ? _this.getFileKey(f.file) === _this.getFileKey(cur) : false;\n      }));\n      return isDuplicate ? acc : [].concat(_toConsumableArray(acc), [cur]);\n    }, []).map(function (f) {\n      return {\n        file: f,\n        name: f.name,\n        type: null\n      };\n    });\n  },\n  getSelectedDocumentType: function getSelectedDocumentType(value, uploadedFiles) {\n    var unFilledIndex = [];\n    Array.from(Array(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.length).keys()).forEach(function (doc, index) {\n      var _value;\n\n      if ((value === null || value === void 0 ? void 0 : (_value = value['files' + doc]) === null || _value === void 0 ? void 0 : _value.documentTypeDescription) === undefined) {\n        unFilledIndex.push(index);\n      }\n    });\n    return unFilledIndex;\n  },\n  getInvalidInputs: function getInvalidInputs(fieldsArray, value, callback) {\n    fieldsArray.forEach(function (char, ind) {\n      Object.keys(value).filter(function (item, index) {\n        return item.includes(\"files\".concat(ind, \"name\"));\n      }).forEach(function (field, i) {\n        if (constants.DMS_UPLOAD_FORBIDDEN_CHAR.test(value[field])) {\n          callback(field, {\n            type: 'manual',\n            message: utils.string.t('dms.upload.warning.invalidInputWarning')\n          });\n        }\n      });\n    });\n  },\n  setCurrentFieldValues: function setCurrentFieldValues(index, getValues) {\n    var _getValues, _getValues2;\n\n    var currentValues = {};\n    currentValues[\"files\".concat(index)] = {\n      documentTypeDescription: (_getValues = getValues(\"files\".concat(index))) === null || _getValues === void 0 ? void 0 : _getValues.documentTypeDescription,\n      documentTypeID: (_getValues2 = getValues(\"files\".concat(index))) === null || _getValues2 === void 0 ? void 0 : _getValues2.documentTypeID\n    };\n    currentValues[\"files\".concat(index, \"name\")] = getValues(\"files\".concat(index, \"name\"));\n    currentValues[\"filesClassification\".concat(index)] = getValues(\"filesClassification\".concat(index));\n    return currentValues;\n  },\n  getDocumentTypeInfo: function getDocumentTypeInfo(documentTypeKey, sourceId) {\n    switch (documentTypeKey) {\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement:\n        return {\n          documentTypeDescription: constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription,\n          sectionKey: constants.PI_ENDORSEMENT_TYPE_DOCUMENT.sectionKey,\n          dmsSourceID: sourceId\n        };\n\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder:\n        return {\n          documentTypeDescription: constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription,\n          sectionKey: constants.PI_FABORDER_TYPE_DOCUMENT.sectionKey,\n          dmsSourceID: sourceId\n        };\n\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo:\n        return {\n          documentTypeDescription: constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription,\n          sectionKey: constants.PI_CLOSING_FDO_TYPE_DOCUMENT.sectionKey,\n          dmsSourceID: sourceId\n        };\n\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation:\n        return {\n          documentTypeDescription: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.documentTypeDescription,\n          sectionKey: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.sectionKey,\n          dmsSourceID: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.sourceID\n        };\n\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned:\n        return {\n          documentTypeDescription: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.documentTypeDescription,\n          sectionKey: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.sectionKey,\n          dmsSourceID: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.sourceID\n        };\n\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piGeneratePdfSubmit:\n        return {\n          documentTypeDescription: constants.PI_GENERATE_PDF_SUBMIT.documentTypeDescription,\n          sectionKey: constants.PI_GENERATE_PDF_SUBMIT.sectionKey,\n          dmsSourceID: constants.PI_GENERATE_PDF_SUBMIT.sourceID\n        };\n\n      default:\n        return null;\n    }\n  },\n  isDmsFromPi: function isDmsFromPi(documentTypeKey) {\n    return [constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned].includes(documentTypeKey);\n  },\n  isDmsFromPiRiskRef: function isDmsFromPiRiskRef(documentTypeKey) {\n    var isDmsFromRiskRef = [constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo].includes(documentTypeKey);\n    return isDmsFromRiskRef;\n  },\n  isDmsFromPiInstruction: function isDmsFromPiInstruction(documentTypeKey) {\n    return [constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned].includes(documentTypeKey);\n  },\n  getDocumentClassificationList: function getDocumentClassificationList() {\n    return [{\n      id: 1,\n      value: utils.string.t('dms.upload.modalItems.classificationType.low')\n    }, {\n      id: 2,\n      value: utils.string.t('dms.upload.modalItems.classificationType.guarded')\n    }, {\n      id: 3,\n      value: utils.string.t('dms.upload.modalItems.classificationType.high')\n    }, {\n      id: 4,\n      value: utils.string.t('dms.upload.modalItems.classificationType.severe')\n    }];\n  }\n};\nexport default utilsDmsFormatter;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/dms/dmsFormatter.js"],"names":["config","utils","constants","CheckCircleIcon","ErrorOutlineIcon","HighlightOffIcon","utilsDmsFormatter","formatDocumentMetaData","data","context","refDataXbInstances","catCodesData","commonInfo","id","name","string","t","value","xbInstanceId","find","xbInstance","sourceID","toString","edgeSourceName","DMS_DEFAULT_XB_INSTANCE","year","departmentName","date","createdDate","format","ui","text","lossInfo","lossRef","lossCreatedDate","lossDescription","generic","isValidArray","catCode","catCodesID","catCodeDisplay","claimInfo","claimRef","policyId","uniqueMarketRef","insuredName","claimantName","ucr","policyInfo","policyRef","inceptionDate","getDuplicateIndexes","fieldsArray","documentDetails","indexesArray","Boolean","length","i","forEach","item","index","documentName","push","getContextReferenceId","state","subcontext","DMS_CONTEXT_LOSS","claims","lossInformation","DMS_CONTEXT_CLAIM","claimData","processing","selected","claimsInformation","claimReference","DMS_CONTEXT_POLICY","policyInformation","processingInstructions","selectedRiskRef","riskRefId","DMS_CONTEXT_PROCESSING_INSTRUCTION","Object","keys","instructions","DMS_CONTEXT_TASK","taskDetail","tasksProcessing","DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE","refCond","dms","contextSubType","respectiveRfiResponse","rfiHistory","itr","caseIncidentNotesID","isValidObject","taskId","DMS_TASK_CONTEXT_TYPE_RFI","rfiCreated","DMS_TASK_CONTEXT_TYPE_ADHOC","adhocTask","DMS_CONTEXT_CASE","premiumProcessing","caseDetails","caseId","getActionDispatched","isPending","isFulfilled","isRejected","getPaymentDocumentType","documentTypeDescription","DMS_DOCUMENT_TYPE_PAYMENT","getDocumentTypeFilterKeys","source","documentTypeKey","dmsSectionKey","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","dmsSourceId","DMS_CLAIM_SOURCE_ID","dmsDocTypeSource","DMS_EDGE_DOC_TYPE_SOURCE","instruction","piClosingFdo","piEndorsement","piFABorder","piPremiumCalculation","piMarketSigned","includes","policy","DMS_SHAREPATH_SOURCES","gxb","isClaim","getMetaDataParams","sourceId","metaDataSectionRef","lossInfoStore","sectionType","divisionId","referenceId","lossDetailID","sectionRef","claimGridSelectionData","claimDetailInformationSuccess","divisionID","claimId","claimID","claimInfoStore","claimGridSelectedData","policyID","xbPolicyId","riskReferences","r","leadPolicy","getUploadMetaDataParams","expiryDate","upload","metaData","selectedClaim","getIcons","hasPartialSuccess","getFileKey","file","size","lastModified","getUniqueFiles","files","uploadedFiles","reduce","acc","cur","isDuplicate","f","map","type","getSelectedDocumentType","unFilledIndex","Array","from","doc","undefined","getInvalidInputs","callback","char","ind","filter","field","DMS_UPLOAD_FORBIDDEN_CHAR","test","message","setCurrentFieldValues","getValues","currentValues","documentTypeID","getDocumentTypeInfo","PI_ENDORSEMENT_TYPE_DOCUMENT","sectionKey","dmsSourceID","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT","PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT","piGeneratePdfSubmit","PI_GENERATE_PDF_SUBMIT","isDmsFromPi","isDmsFromPiRiskRef","isDmsFromRiskRef","isDmsFromPiInstruction","getDocumentClassificationList"],"mappings":"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","sourcesContent":["import config from 'config';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport ErrorOutlineIcon from '@material-ui/icons/ErrorOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nconst utilsDmsFormatter = {\r\n  formatDocumentMetaData: (data, context, refDataXbInstances, catCodesData) => ({\r\n    commonInfo: [\r\n      {\r\n        id: 1,\r\n        name: utils.string.t('dms.upload.commonInfoSection.gxbInstance'),\r\n        value: data?.xbInstanceId\r\n          ? refDataXbInstances?.find((xbInstance) => xbInstance?.sourceID.toString() === data?.xbInstanceId.toString())?.edgeSourceName\r\n          : constants.DMS_DEFAULT_XB_INSTANCE,\r\n      },\r\n      {\r\n        id: 2,\r\n        name: utils.string.t('dms.upload.commonInfoSection.sectionType'),\r\n        value: context,\r\n      },\r\n      {\r\n        id: 3,\r\n        name: utils.string.t('dms.upload.commonInfoSection.yearOfInception'),\r\n        value: data?.year,\r\n      },\r\n      {\r\n        id: 4,\r\n        name: utils.string.t('dms.upload.commonInfoSection.department'),\r\n        value: data?.departmentName,\r\n      },\r\n      {\r\n        id: 5,\r\n        name: utils.string.t('dms.upload.commonInfoSection.uploadOn'),\r\n        value: `${utils.string.t('format.date', {\r\n          value: { date: data?.createdDate, format: config.ui.format.date.text },\r\n        })}`,\r\n      },\r\n    ],\r\n    lossInfo: [\r\n      {\r\n        id: 6,\r\n        name: utils.string.t('dms.upload.lossInfoSection.lossRef'),\r\n        value: data?.lossRef,\r\n      },\r\n      {\r\n        id: 7,\r\n        name: utils.string.t('dms.upload.lossInfoSection.dateOfLoss'),\r\n        value: `${utils.string.t('format.date', {\r\n          value: { date: data?.lossCreatedDate, format: config.ui.format.date.text },\r\n        })}`,\r\n      },\r\n      {\r\n        id: 8,\r\n        name: utils.string.t('dms.upload.lossInfoSection.lossDescription'),\r\n        value: data?.lossDescription,\r\n      },\r\n      {\r\n        id: 9,\r\n        name: utils.string.t('dms.upload.lossInfoSection.catCode'),\r\n        value: utils.generic.isValidArray(catCodesData)\r\n          ? catCodesData?.find((catCode) => catCode?.catCodesID === data?.catCodesID)?.catCodeDisplay\r\n          : data?.catCodesID,\r\n      },\r\n    ],\r\n    claimInfo: [\r\n      {\r\n        id: 10,\r\n        name: utils.string.t('dms.upload.claimInfoSection.claimRef'),\r\n        value: data?.claimRef,\r\n      },\r\n      {\r\n        id: 11,\r\n        name: utils.string.t('dms.upload.claimInfoSection.policyId'),\r\n        value: data?.policyId,\r\n      },\r\n      {\r\n        id: 12,\r\n        name: utils.string.t('dms.upload.claimInfoSection.umr'),\r\n        value: data?.uniqueMarketRef,\r\n      },\r\n      {\r\n        id: 13,\r\n        name: utils.string.t('dms.upload.claimInfoSection.insuredName'),\r\n        value: data?.insuredName,\r\n      },\r\n      {\r\n        id: 14,\r\n        name: utils.string.t('dms.upload.claimInfoSection.claimant'),\r\n        value: data?.claimantName,\r\n      },\r\n      {\r\n        id: 15,\r\n        name: utils.string.t('dms.upload.claimInfoSection.ucr'),\r\n        value: data?.ucr,\r\n      },\r\n    ],\r\n    policyInfo: [\r\n      {\r\n        id: 16,\r\n        name: utils.string.t('dms.upload.policyInfoSection.policyRef'),\r\n        value: data?.policyRef,\r\n      },\r\n      {\r\n        id: 17,\r\n        name: utils.string.t('dms.upload.policyInfoSection.umr'),\r\n        value: data?.uniqueMarketRef,\r\n      },\r\n      {\r\n        id: 18,\r\n        name: utils.string.t('dms.upload.policyInfoSection.insuredName'),\r\n        value: data?.insuredName,\r\n      },\r\n      {\r\n        id: 19,\r\n        name: utils.string.t('dms.upload.policyInfoSection.inceptionDate'),\r\n        value: data?.inceptionDate,\r\n      },\r\n    ],\r\n  }),\r\n  getDuplicateIndexes: (fieldsArray, documentDetails) => {\r\n    //TODO - get rid of Combinator and procedural pattern. To replace with pure function\r\n    const indexesArray = [];\r\n    if (Boolean(documentDetails.length)) {\r\n      for (let i = 0; i < documentDetails.length; i++) {\r\n        fieldsArray.forEach((item, index) => {\r\n          if (item.name === documentDetails[i].documentName) {\r\n            indexesArray.push(index);\r\n          }\r\n        });\r\n      }\r\n      return indexesArray;\r\n    }\r\n  },\r\n  getContextReferenceId: (state, context, subcontext) => {\r\n    switch (context) {\r\n      case constants.DMS_CONTEXT_LOSS:\r\n        return state.claims.lossInformation?.lossRef;\r\n      case constants.DMS_CONTEXT_CLAIM:\r\n        return (\r\n          state.claims.claimData?.claimRef ||\r\n          state.claims.processing.selected[0]?.claimRef ||\r\n          state.claims?.claimsInformation?.claimReference\r\n        );\r\n      case constants.DMS_CONTEXT_POLICY:\r\n        return state.claims.policyInformation?.policyRef || state.processingInstructions?.selectedRiskRef?.riskRefId;\r\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\r\n        return Object.keys(state.processingInstructions?.instructions)?.[0] || '';\r\n      case constants.DMS_CONTEXT_TASK:\r\n        const taskDetail = state.claims.tasksProcessing.selected[0];\r\n        if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE) {\r\n          const refCond = state.dms.contextSubType;\r\n          const respectiveRfiResponse = state.claims.rfiHistory.find((itr) => itr?.caseIncidentNotesID === refCond?.caseIncidentNotesID);\r\n          return utils.generic.isValidObject(respectiveRfiResponse, 'caseIncidentNotesID')\r\n            ? taskDetail?.taskId + '-' + respectiveRfiResponse?.caseIncidentNotesID\r\n            : refCond?.caseIncidentNotesID\r\n            ? taskDetail?.taskId + '-' + refCond?.caseIncidentNotesID\r\n            : taskDetail?.taskId;\r\n        } else if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_RFI) {\r\n          return state.claims.rfiCreated?.id;\r\n        } else if (subcontext === constants.DMS_TASK_CONTEXT_TYPE_ADHOC) {\r\n          return state.claims.adhocTask?.data?.id;\r\n        } else {\r\n          return taskDetail?.taskId;\r\n        }\r\n\r\n      case constants.DMS_CONTEXT_CASE:\r\n        return state.premiumProcessing?.caseDetails?.caseId;\r\n      default:\r\n        return '';\r\n    }\r\n  },\r\n\r\n  getActionDispatched: (isPending, isFulfilled, isRejected) => !isPending && !isFulfilled && !isRejected,\r\n  getPaymentDocumentType: (selected) => selected.documentTypeDescription === constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n\r\n  getDocumentTypeFilterKeys: (context, source, documentTypeKey) => {\r\n    switch (context) {\r\n      case constants.DMS_CONTEXT_LOSS:\r\n      case constants.DMS_CONTEXT_CLAIM:\r\n      case constants.DMS_CONTEXT_TASK:\r\n        return {\r\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\r\n          dmsSourceId: constants.DMS_CLAIM_SOURCE_ID,\r\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE,\r\n        };\r\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\r\n        return {\r\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.instruction,\r\n          dmsSourceId: 0,\r\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE,\r\n        };\r\n      case constants.DMS_CONTEXT_POLICY:\r\n        if (\r\n          [\r\n            constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo,\r\n            constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement,\r\n            constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder,\r\n            constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation,\r\n            constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned,\r\n          ].includes(documentTypeKey)\r\n        ) {\r\n          return {\r\n            dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n            dmsSourceId: source,\r\n            dmsDocTypeSource: constants.DMS_SHAREPATH_SOURCES.gxb,\r\n          };\r\n        } else {\r\n          const isClaim = documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim;\r\n          return {\r\n            dmsSectionKey: isClaim ? constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim : constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.instruction,\r\n            dmsSourceId: constants.DMS_CLAIM_SOURCE_ID,\r\n            dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE,\r\n          };\r\n        }\r\n      case constants.DMS_CONTEXT_CASE:\r\n        return {\r\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n          dmsSourceId: source,\r\n          dmsDocTypeSource: constants.DMS_SHAREPATH_SOURCES.gxb,\r\n        };\r\n      default:\r\n        return {\r\n          dmsSectionKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n          dmsSourceId: 0,\r\n          dmsDocTypeSource: constants.DMS_EDGE_DOC_TYPE_SOURCE,\r\n        };\r\n    }\r\n  },\r\n\r\n  getMetaDataParams: (state, context, sourceId, metaDataSectionRef) => {\r\n    switch (context) {\r\n      case constants.DMS_CONTEXT_LOSS:\r\n        const lossInfoStore = state.claims?.lossInformation;\r\n        return {\r\n          sectionType: context,\r\n          sourceId: 1,\r\n          divisionId: null,\r\n          referenceId: lossInfoStore?.lossDetailID,\r\n          sectionRef: lossInfoStore?.lossRef,\r\n        };\r\n      case constants.DMS_CONTEXT_CLAIM:\r\n        const claimData = state.claims?.claimData;\r\n        const claimGridSelectionData = state.claims?.processing?.selected[0];\r\n        const claimsInformation = state.claims?.claimsInformation;\r\n        return {\r\n          sectionType: context,\r\n          sourceId:\r\n            claimsInformation?.sourceID || state.claims?.claimDetailInformationSuccess?.sourceID || claimGridSelectionData?.sourceId,\r\n          divisionId: state.claims?.policyInformation?.divisionID || claimGridSelectionData?.divisionID,\r\n          referenceId: claimData?.claimId || claimGridSelectionData?.claimID,\r\n          sectionRef: claimData?.claimRef || claimGridSelectionData?.claimRef || claimsInformation?.claimReference,\r\n        };\r\n      case constants.DMS_CONTEXT_TASK:\r\n        const claimInfoStore = state.claims?.claimsInformation;\r\n        const claimGridSelectedData = state.claims?.processing?.selected[0];\r\n        return {\r\n          sectionType: constants.DMS_CONTEXT_CLAIM,\r\n          sourceId: claimInfoStore?.sourceID || state.claims?.claimDetailInformationSuccess?.sourceID || claimGridSelectedData?.sourceId,\r\n          divisionId: state.claims?.policyInformation?.divisionID || claimGridSelectedData?.divisionID,\r\n          referenceId: claimInfoStore?.claimID || claimGridSelectedData?.claimID || claimInfoStore?.policyID,\r\n          sectionRef: claimInfoStore?.claimRef || claimGridSelectedData?.claimRef || claimInfoStore?.policyRef,\r\n        };\r\n      case constants.DMS_CONTEXT_CASE:\r\n        return {\r\n          sectionType: constants.DMS_CONTEXT_POLICY,\r\n          sourceId,\r\n          divisionId: null,\r\n          referenceId: state.premiumProcessing?.caseDetails?.policyId,\r\n          sectionRef: state.premiumProcessing?.caseDetails?.policyRef,\r\n        };\r\n      case constants.DMS_CONTEXT_POLICY:\r\n        return {\r\n          sectionType: constants.DMS_CONTEXT_POLICY,\r\n          sourceId,\r\n          divisionId: null,\r\n          referenceId: state.processingInstructions?.selectedRiskRef?.xbPolicyId,\r\n          sectionRef: state.processingInstructions?.selectedRiskRef?.riskRefId,\r\n        };\r\n      case constants.DMS_CONTEXT_PROCESSING_INSTRUCTION:\r\n        return {\r\n          sectionType: constants.DMS_CONTEXT_POLICY,\r\n          sourceId,\r\n          divisionId: null,\r\n          referenceId: state.processingInstructions?.instructions[metaDataSectionRef]?.riskReferences?.find((r) => r.leadPolicy)\r\n            ?.xbPolicyId,\r\n          sectionRef: metaDataSectionRef,\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n\r\n  getUploadMetaDataParams: (state, context, referenceId) => {\r\n    // TODO refactor getContextReferenceId() into getUploadMetaDataParams()\r\n    switch (context) {\r\n      case constants.DMS_CONTEXT_LOSS:\r\n        return { lossRef: referenceId, claimRef: '', uniqueMarketRef: null, ucr: null, expiryDate: null };\r\n      case constants.DMS_CONTEXT_CLAIM:\r\n        return {\r\n          lossRef: state.claims?.lossInformation?.lossRef || '',\r\n          claimRef: referenceId,\r\n          uniqueMarketRef: state.dms?.upload?.metaData?.data?.data?.uniqueMarketRef || null,\r\n          ucr: state.dms?.upload?.metaData?.data?.data?.ucr || null,\r\n          expiryDate: state.claims?.policyInformation?.expiryDate || null,\r\n        };\r\n      case constants.DMS_CONTEXT_TASK:\r\n        const selectedClaim = state.claims.processing.selected[0];\r\n        return {\r\n          lossRef: selectedClaim?.lossRef || '',\r\n          claimRef: selectedClaim?.claimReference || selectedClaim?.claimRef || '',\r\n          uniqueMarketRef: state.dms?.upload?.metaData?.data?.data?.uniqueMarketRef || null,\r\n          ucr: state.dms?.upload?.metaData?.data?.data?.ucr || null,\r\n          expiryDate: state.claims?.policyInformation?.expiryDate || null,\r\n        };\r\n      case constants.DMS_CONTEXT_CASE:\r\n        return { lossRef: '', claimRef: '', uniqueMarketRef: null, ucr: null, expiryDate: null };\r\n      default:\r\n        return { lossRef: '', claimRef: '', uniqueMarketRef: null, ucr: null, expiryDate: null };\r\n    }\r\n  },\r\n  getIcons: (isFulfilled, isRejected, hasPartialSuccess) => {\r\n    if (isFulfilled && hasPartialSuccess) {\r\n      return CheckCircleIcon;\r\n    } else if (isRejected || (isFulfilled && !hasPartialSuccess)) {\r\n      return ErrorOutlineIcon;\r\n    } else {\r\n      return HighlightOffIcon;\r\n    }\r\n  },\r\n  getFileKey: function (file) {\r\n    return `${file?.name}-${file?.size}-${file?.lastModified}`;\r\n  },\r\n  getUniqueFiles: (files, uploadedFiles) =>\r\n    files\r\n      ?.reduce((acc, cur) => {\r\n        const isDuplicate =\r\n          utils.generic.isValidArray(uploadedFiles, true) &&\r\n          uploadedFiles?.find((f) => {\r\n            return utils.generic.isValidObject(f.file, true) && utils.generic.isValidObject(cur, true)\r\n              ? this.getFileKey(f.file) === this.getFileKey(cur)\r\n              : false;\r\n          });\r\n\r\n        return isDuplicate ? acc : [...acc, cur];\r\n      }, [])\r\n      .map((f) => ({ file: f, name: f.name, type: null })),\r\n  getSelectedDocumentType: (value, uploadedFiles) => {\r\n    const unFilledIndex = [];\r\n    Array.from(Array(uploadedFiles?.length).keys()).forEach((doc, index) => {\r\n      if (value?.['files' + doc]?.documentTypeDescription === undefined) {\r\n        unFilledIndex.push(index);\r\n      }\r\n    });\r\n    return unFilledIndex;\r\n  },\r\n  getInvalidInputs: (fieldsArray, value, callback) => {\r\n    fieldsArray.forEach((char, ind) => {\r\n      Object.keys(value)\r\n        .filter((item, index) => item.includes(`files${ind}name`))\r\n        .forEach((field, i) => {\r\n          if (constants.DMS_UPLOAD_FORBIDDEN_CHAR.test(value[field])) {\r\n            callback(field, {\r\n              type: 'manual',\r\n              message: utils.string.t('dms.upload.warning.invalidInputWarning'),\r\n            });\r\n          }\r\n        });\r\n    });\r\n  },\r\n  setCurrentFieldValues: (index, getValues) => {\r\n    const currentValues = {};\r\n\r\n    currentValues[`files${index}`] = {\r\n      documentTypeDescription: getValues(`files${index}`)?.documentTypeDescription,\r\n      documentTypeID: getValues(`files${index}`)?.documentTypeID,\r\n    };\r\n    currentValues[`files${index}name`] = getValues(`files${index}name`);\r\n    currentValues[`filesClassification${index}`] = getValues(`filesClassification${index}`);\r\n\r\n    return currentValues;\r\n  },\r\n  getDocumentTypeInfo: (documentTypeKey, sourceId) => {\r\n    switch (documentTypeKey) {\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement:\r\n        return {\r\n          documentTypeDescription: constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription,\r\n          sectionKey: constants.PI_ENDORSEMENT_TYPE_DOCUMENT.sectionKey,\r\n          dmsSourceID: sourceId,\r\n        };\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder:\r\n        return {\r\n          documentTypeDescription: constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription,\r\n          sectionKey: constants.PI_FABORDER_TYPE_DOCUMENT.sectionKey,\r\n          dmsSourceID: sourceId,\r\n        };\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo:\r\n        return {\r\n          documentTypeDescription: constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription,\r\n          sectionKey: constants.PI_CLOSING_FDO_TYPE_DOCUMENT.sectionKey,\r\n          dmsSourceID: sourceId,\r\n        };\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation:\r\n        return {\r\n          documentTypeDescription: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.documentTypeDescription,\r\n          sectionKey: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.sectionKey,\r\n          dmsSourceID: constants.PI_PREMIUM_CALCULATION_SHEET_TYPE_DOCUMENT.sourceID,\r\n        };\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned:\r\n        return {\r\n          documentTypeDescription: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.documentTypeDescription,\r\n          sectionKey: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.sectionKey,\r\n          dmsSourceID: constants.PI_MARKET_SIGNED_SLIP_TYPE_DOCUMENT.sourceID,\r\n        };\r\n      case constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piGeneratePdfSubmit:\r\n        return {\r\n          documentTypeDescription: constants.PI_GENERATE_PDF_SUBMIT.documentTypeDescription,\r\n          sectionKey: constants.PI_GENERATE_PDF_SUBMIT.sectionKey,\r\n          dmsSourceID: constants.PI_GENERATE_PDF_SUBMIT.sourceID,\r\n        };\r\n      default:\r\n        return null;\r\n    }\r\n  },\r\n  isDmsFromPi: (documentTypeKey) => {\r\n    return [\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned,\r\n    ].includes(documentTypeKey);\r\n  },\r\n  isDmsFromPiRiskRef: (documentTypeKey) => {\r\n    let isDmsFromRiskRef = [\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo,\r\n    ].includes(documentTypeKey);\r\n    return isDmsFromRiskRef;\r\n  },\r\n  isDmsFromPiInstruction: (documentTypeKey) => {\r\n    return [\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation,\r\n      constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned,\r\n    ].includes(documentTypeKey);\r\n  },\r\n  getDocumentClassificationList: () => {\r\n    return [\r\n      { id: 1, value: utils.string.t('dms.upload.modalItems.classificationType.low') },\r\n      { id: 2, value: utils.string.t('dms.upload.modalItems.classificationType.guarded') },\r\n      { id: 3, value: utils.string.t('dms.upload.modalItems.classificationType.high') },\r\n      { id: 4, value: utils.string.t('dms.upload.modalItems.classificationType.severe') },\r\n    ];\r\n  },\r\n};\r\n\r\nexport default utilsDmsFormatter;\r\n"]},"metadata":{},"sourceType":"module"}