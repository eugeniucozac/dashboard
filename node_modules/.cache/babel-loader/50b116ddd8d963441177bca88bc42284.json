{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //app\n\nimport styles from './LossActionTable.styles';\nimport { Empty, Overflow, TableHead } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { useSort } from 'hooks';\nimport { RowTheme } from './RowTheme';\nimport * as utils from 'utils';\nimport { TableRowHeader } from 'modules'; //mui\n\nimport { makeStyles, Table, TableBody, Grid, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLossActionTableView.prototype = {};\nexport function LossActionTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var rows = _ref.rows,\n      sortObj = _ref.sort,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      handleSort = _ref.handleSort,\n      handleViewClaimClick = _ref.handleViewClaimClick,\n      handleCreateClaim = _ref.handleCreateClaim,\n      handleEditClaim = _ref.handleEditClaim;\n  var classes = makeStyles(styles, {\n    name: 'SearchTable'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var hasRows = utils.generic.isValidArray(rows, true);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-search-table\",\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"data-testid\": \"claims-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort,\n          nestedClasses: {\n            tableHead: classes.tableHead\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"claims-list\",\n          className: \"level1\",\n          children: hasRows && rows.map(function (itemLevelOne, index) {\n            var dataLevelTwo = itemLevelOne.actionChildItemList.map(function (itemLevelTwo, index) {\n              return itemLevelTwo.isClaim ? /*#__PURE__*/_jsxDEV(TableRowHeader, {\n                title: \"Claim \".concat(itemLevelTwo.claimRef),\n                subtitle: \"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\",\n                expanded: isOpen,\n                setIsOpen: setIsOpen,\n                padding: 25,\n                color: \"yellow\",\n                children: itemLevelTwo.actionChildItemList.map(function (itemLevelThree, index) {\n                  var _itemLevelThree$actio;\n\n                  var dataLevelThree = itemLevelThree === null || itemLevelThree === void 0 ? void 0 : (_itemLevelThree$actio = itemLevelThree.actionChildItemList) === null || _itemLevelThree$actio === void 0 ? void 0 : _itemLevelThree$actio.map(function (itemLevelFourth, index) {\n                    return /*#__PURE__*/_jsxDEV(RowTheme, {\n                      columnProps: columnProps,\n                      data: itemLevelFourth,\n                      padding: 45,\n                      arrow: itemLevelFourth.actionChildItemList,\n                      color: \"orange\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 54,\n                      columnNumber: 29\n                    }, _this);\n                  });\n                  return /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [/*#__PURE__*/_jsxDEV(RowTheme, {\n                      columnProps: columnProps,\n                      data: itemLevelThree,\n                      padding: 35,\n                      arrow: itemLevelThree.actionChildItemList,\n                      color: \"green\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 65,\n                      columnNumber: 29\n                    }, _this), dataLevelThree]\n                  }, void 0, true);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 21\n              }, _this) : /*#__PURE__*/_jsxDEV(RowTheme, {\n                columnProps: columnProps,\n                data: itemLevelTwo,\n                padding: 25,\n                arrow: itemLevelTwo.actionChildItemList,\n                color: \"yellow\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, _this);\n            });\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(RowTheme, {\n                columnProps: columnProps,\n                data: itemLevelOne,\n                arrow: itemLevelOne.actionChildItemList,\n                padding: 0,\n                color: \"violet\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 23\n              }, _this), dataLevelTwo]\n            }, void 0, true);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), rows ? rows.length ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('claims.noMatchFound'),\n        icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 72\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 114,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('claims.searchLossAndClaims'),\n        icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 77\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossActionTableView, \"mtaKmYaVJhHtxQoJvlQ7e3XI+U4=\", false, function () {\n  return [useSort];\n});\n\n_c = LossActionTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTable.view.js"],"names":["React","useState","styles","Empty","Overflow","TableHead","useSort","RowTheme","utils","TableRowHeader","makeStyles","Table","TableBody","Grid","Box","LossActionTableView","prototype","rows","sortObj","sort","colsArr","cols","columnProps","handleSort","handleViewClaimClick","handleCreateClaim","handleEditClaim","classes","name","hasRows","generic","isValidArray","isOpen","setIsOpen","wrapper","tableHead","map","itemLevelOne","index","dataLevelTwo","actionChildItemList","itemLevelTwo","isClaim","claimRef","itemLevelThree","dataLevelThree","itemLevelFourth","length","string","t"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n//app\r\nimport styles from './LossActionTable.styles';\r\nimport { Empty, Overflow, TableHead } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { useSort } from 'hooks';\r\nimport { RowTheme } from './RowTheme';\r\nimport * as utils from 'utils';\r\nimport { TableRowHeader } from 'modules';\r\n\r\n//mui\r\nimport { makeStyles, Table, TableBody, Grid, Box } from '@material-ui/core';\r\n\r\nLossActionTableView.prototype = {};\r\n\r\nexport function LossActionTableView({\r\n  rows,\r\n  sort: sortObj,\r\n  cols: colsArr,\r\n  columnProps,\r\n  handleSort,\r\n  handleViewClaimClick,\r\n  handleCreateClaim,\r\n  handleEditClaim,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'SearchTable' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const hasRows = utils.generic.isValidArray(rows, true);\r\n  const [isOpen, setIsOpen] = useState(true);\r\n\r\n  return (\r\n    <Box data-testid=\"claims-search-table\" className={classes.wrapper}>\r\n      <Overflow>\r\n        <Table data-testid=\"claims-table\">\r\n          <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n          <TableBody data-testid=\"claims-list\" className=\"level1\">\r\n            {hasRows &&\r\n              rows.map((itemLevelOne, index) => {\r\n                const dataLevelTwo = itemLevelOne.actionChildItemList.map((itemLevelTwo, index) => {\r\n                  return itemLevelTwo.isClaim \r\n                    ?\r\n                    <TableRowHeader \r\n                      title={`Claim ${itemLevelTwo.claimRef}`}\r\n                      subtitle=\"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\"\r\n                      expanded={isOpen}\r\n                      setIsOpen={setIsOpen}\r\n                      padding={25}\r\n                      color='yellow'\r\n                    >\r\n                      {itemLevelTwo.actionChildItemList.map((itemLevelThree, index) => {\r\n                        const dataLevelThree = itemLevelThree?.actionChildItemList?.map((itemLevelFourth, index) => {\r\n                          return (\r\n                            <RowTheme\r\n                              columnProps={columnProps}\r\n                              data={itemLevelFourth}\r\n                              padding={45}\r\n                              arrow={itemLevelFourth.actionChildItemList}\r\n                              color=\"orange\"\r\n                            />\r\n                          )\r\n                        });\r\n                        return(\r\n                          <>\r\n                            <RowTheme\r\n                              columnProps={columnProps}\r\n                              data={itemLevelThree}\r\n                              padding={35}\r\n                              arrow={itemLevelThree.actionChildItemList}\r\n                              color=\"green\"\r\n                            />\r\n                            {dataLevelThree}\r\n                          </>\r\n                        )\r\n                      })}\r\n                    </TableRowHeader>\r\n                    :\r\n                    <RowTheme\r\n                      columnProps={columnProps}\r\n                      data={itemLevelTwo}\r\n                      padding={25}\r\n                      arrow={itemLevelTwo.actionChildItemList}\r\n                      color='yellow'\r\n                    />\r\n                    \r\n                });\r\n                return (\r\n                  <>\r\n                    \r\n                      <RowTheme\r\n                        columnProps={columnProps}\r\n                        data={itemLevelOne}\r\n                        arrow={itemLevelOne.actionChildItemList}\r\n                        padding={0}\r\n                        color=\"violet\"\r\n                      />\r\n            \r\n            \r\n                      {dataLevelTwo}\r\n            \r\n                  </>\r\n                );\r\n              })}\r\n              </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {rows ? (\r\n        rows.length ? (\r\n          <Grid container>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n          </Grid>\r\n        )\r\n      ) : (\r\n        <Grid item xs={12}>\r\n          <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}