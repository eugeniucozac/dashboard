{"ast":null,"code":"import \"core-js/modules/es.string.split\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseIssueDocuments\\\\PremiumProcessingCaseIssueDocuments.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router'; //app\n\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport PremiumProcessingCaseIssueDocumentsView from './PremiumProcessingCaseIssueDocuments.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseIssueDocuments.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  tab: PropTypes.string.isRequired,\n  caseDetailsObject: PropTypes.object,\n  handlers: PropTypes.shape({\n    confirmNavigation: PropTypes.func.isRequired,\n    setIsPageDirty: PropTypes.func.isRequired\n  }),\n  isPageDirty: PropTypes.bool.isRequired\n};\n\nfunction PremiumProcessingCaseIssueDocuments(_ref) {\n  _s();\n\n  var _history$location, _history$location$pat;\n\n  var taskId = _ref.taskId,\n      tab = _ref.tab,\n      _ref$caseDetailsObjec = _ref.caseDetailsObject,\n      caseDetailsObject = _ref$caseDetailsObjec === void 0 ? {} : _ref$caseDetailsObjec,\n      handlers = _ref.handlers,\n      isPageDirty = _ref.isPageDirty;\n  var history = useHistory();\n  var subTabs = [{\n    value: constants.PREMIUM_PROCESSING_TAB_NON_BUREAU,\n    label: utils.string.t('premiumProcessing.subTabs.nonBureau')\n  }, {\n    value: constants.PREMIUM_PROCESSING_TAB_BUREAU,\n    label: utils.string.t('premiumProcessing.subTabs.bureau')\n  }, {\n    value: constants.PREMIUM_PROCESSING_TAB_CLIENT,\n    label: utils.string.t('premiumProcessing.subTabs.client')\n  }];\n  var pathNameArr = history === null || history === void 0 ? void 0 : (_history$location = history.location) === null || _history$location === void 0 ? void 0 : (_history$location$pat = _history$location.pathname) === null || _history$location$pat === void 0 ? void 0 : _history$location$pat.split('/');\n  var subTabStr = pathNameArr[pathNameArr.length - 1];\n  var isValidTab = subTabs.map(function (item) {\n    return item.value;\n  }).includes(subTabStr);\n\n  var _useState = useState(isValidTab ? subTabStr : constants.PREMIUM_PROCESSING_TAB_NON_BUREAU),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var isNotMyTaskView = caseDetailsObject.taskView !== constants.WORKLIST;\n\n  var switchTab = function switchTab(subTab) {\n    setSelectedTab(subTab);\n\n    if (taskId && subTab) {\n      if (subTab === constants.PREMIUM_PROCESSING_TAB_BUREAU) {\n        handlers.setIsPageDirty(false);\n      } else if (isPageDirty) {\n        handlers.setIsPageDirty(false);\n      }\n\n      history.replace(\"\".concat(config.routes.premiumProcessing[\"case\"], \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS, \"/\").concat(subTab));\n    } else {\n      if (isPageDirty) {\n        handlers.setIsPageDirty(false);\n      }\n\n      history.replace(\"\".concat(config.routes.premiumProcessing));\n    }\n  };\n\n  var handleSelectTab = function handleSelectTab(subTab) {\n    if (isPageDirty && subTab !== constants.PREMIUM_PROCESSING_TAB_BUREAU) {\n      handlers.confirmNavigation(function () {\n        switchTab(subTab);\n        return;\n      }, function () {\n        setSelectedTab(constants.PREMIUM_PROCESSING_TAB_BUREAU);\n        return;\n      });\n      return;\n    } else {\n      switchTab(subTab);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseIssueDocumentsView, {\n    taskId: taskId,\n    subTabs: subTabs,\n    selectedTab: selectedTab,\n    caseDetailsObject: caseDetailsObject,\n    handlers: _objectSpread({\n      handleSelectTab: handleSelectTab\n    }, handlers),\n    isPageDirty: isPageDirty,\n    isNotMyTaskView: isNotMyTaskView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseIssueDocuments, \"zroH0/yzeSYcBnila0EsmT1ZRts=\", false, function () {\n  return [useHistory];\n});\n\n_c = PremiumProcessingCaseIssueDocuments;\nPremiumProcessingCaseIssueDocuments.displayName = \"PremiumProcessingCaseIssueDocuments\";\nPremiumProcessingCaseIssueDocuments.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseIssueDocuments\",\n  \"props\": {\n    \"caseDetailsObject\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"taskId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"tab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"confirmNavigation\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"setIsPageDirty\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isPageDirty\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default PremiumProcessingCaseIssueDocuments;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseIssueDocuments\\\\PremiumProcessingCaseIssueDocuments.js\"] = {\n    name: \"PremiumProcessingCaseIssueDocuments\",\n    docgenInfo: PremiumProcessingCaseIssueDocuments.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseIssueDocuments\\\\PremiumProcessingCaseIssueDocuments.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseIssueDocuments\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseIssueDocuments/PremiumProcessingCaseIssueDocuments.js"],"names":["React","useState","PropTypes","useHistory","config","utils","constants","PremiumProcessingCaseIssueDocumentsView","PremiumProcessingCaseIssueDocuments","propTypes","taskId","string","isRequired","tab","caseDetailsObject","object","handlers","shape","confirmNavigation","func","setIsPageDirty","isPageDirty","bool","history","subTabs","value","PREMIUM_PROCESSING_TAB_NON_BUREAU","label","t","PREMIUM_PROCESSING_TAB_BUREAU","PREMIUM_PROCESSING_TAB_CLIENT","pathNameArr","location","pathname","split","subTabStr","length","isValidTab","map","item","includes","selectedTab","setSelectedTab","isNotMyTaskView","taskView","WORKLIST","switchTab","subTab","replace","routes","premiumProcessing","PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS","handleSelectTab"],"mappings":"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","sourcesContent":["import { React, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\n//app\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport PremiumProcessingCaseIssueDocumentsView from './PremiumProcessingCaseIssueDocuments.view';\r\n\r\nPremiumProcessingCaseIssueDocuments.propTypes = {\r\n  taskId: PropTypes.string.isRequired,\r\n  tab: PropTypes.string.isRequired,\r\n  caseDetailsObject: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    confirmNavigation: PropTypes.func.isRequired,\r\n    setIsPageDirty: PropTypes.func.isRequired,\r\n  }),\r\n  isPageDirty: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction PremiumProcessingCaseIssueDocuments({ taskId, tab, caseDetailsObject = {}, handlers, isPageDirty }) {\r\n  const history = useHistory();\r\n  const subTabs = [\r\n    { value: constants.PREMIUM_PROCESSING_TAB_NON_BUREAU, label: utils.string.t('premiumProcessing.subTabs.nonBureau') },\r\n    { value: constants.PREMIUM_PROCESSING_TAB_BUREAU, label: utils.string.t('premiumProcessing.subTabs.bureau') },\r\n    { value: constants.PREMIUM_PROCESSING_TAB_CLIENT, label: utils.string.t('premiumProcessing.subTabs.client') },\r\n  ];\r\n\r\n  const pathNameArr = history?.location?.pathname?.split('/');\r\n  const subTabStr = pathNameArr[pathNameArr.length - 1];\r\n  const isValidTab = subTabs.map((item) => item.value).includes(subTabStr);\r\n  const [selectedTab, setSelectedTab] = useState(isValidTab ? subTabStr : constants.PREMIUM_PROCESSING_TAB_NON_BUREAU);\r\n  const isNotMyTaskView = caseDetailsObject.taskView !== constants.WORKLIST;\r\n  const switchTab = (subTab) => {\r\n    setSelectedTab(subTab);\r\n    if (taskId && subTab) {\r\n      if (subTab === constants.PREMIUM_PROCESSING_TAB_BUREAU) {\r\n        handlers.setIsPageDirty(false);\r\n      } else if (isPageDirty) {\r\n        handlers.setIsPageDirty(false);\r\n      }\r\n      history.replace(`${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS}/${subTab}`);\r\n    } else {\r\n      if (isPageDirty) {\r\n        handlers.setIsPageDirty(false);\r\n      }\r\n      history.replace(`${config.routes.premiumProcessing}`);\r\n    }\r\n  };\r\n\r\n  const handleSelectTab = (subTab) => {\r\n    if (isPageDirty && subTab !== constants.PREMIUM_PROCESSING_TAB_BUREAU) {\r\n      handlers.confirmNavigation(\r\n        () => {\r\n          switchTab(subTab);\r\n          return;\r\n        },\r\n        () => {\r\n          setSelectedTab(constants.PREMIUM_PROCESSING_TAB_BUREAU);\r\n          return;\r\n        }\r\n      );\r\n      return;\r\n    } else {\r\n      switchTab(subTab);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PremiumProcessingCaseIssueDocumentsView\r\n      taskId={taskId}\r\n      subTabs={subTabs}\r\n      selectedTab={selectedTab}\r\n      caseDetailsObject={caseDetailsObject}\r\n      handlers={{ handleSelectTab, ...handlers }}\r\n      isPageDirty={isPageDirty}\r\n      isNotMyTaskView={isNotMyTaskView}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PremiumProcessingCaseIssueDocuments;\r\n"]},"metadata":{},"sourceType":"module"}