{"ast":null,"code":"// app\nimport * as utils from 'utils';\nvar utilsReferenceData = {\n  departments: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (dept) {\n        return id === dept.id;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var deptObj = utilsReferenceData.departments.getById(arr, id);\n      return deptObj && deptObj.name || '';\n    },\n    getBusinessTypes: function getBusinessTypes(departmentArray, id) {\n      if (!id || !utils.generic.isValidArray(departmentArray)) return [];\n      var dept = utilsReferenceData.departments.getById(departmentArray, id);\n      return (dept === null || dept === void 0 ? void 0 : dept.businessTypes) || [];\n    },\n    getUsers: function getUsers(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return [];\n      var dept = utilsReferenceData.departments.getById(arr, id);\n      return dept && dept.users ? dept.users : [];\n    }\n  },\n  businessTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (type) {\n        return id === type.id;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var obj = utilsReferenceData.businessTypes.getById(arr, id);\n      return obj && obj.id && obj.description || '';\n    }\n  },\n  markets: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (market) {\n        return id === market.id;\n      });\n    }\n  },\n  underwriters: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (uw) {\n        return id === uw.underwriter.id;\n      });\n    }\n  },\n  clients: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (client) {\n        return id === client.id;\n      });\n    }\n  },\n  insureds: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (insured) {\n        return id === insured.id;\n      });\n    }\n  },\n  newRenewalBusinesses: {\n    getLabelById: function getLabelById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var obj = arr.find(function (business) {\n        return id === business.id;\n      });\n      return obj && obj.code && obj.description || '';\n    }\n  },\n  status: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (status) {\n        return id === status.id;\n      });\n    },\n    getByCode: function getByCode(arr, code) {\n      if (!code || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (status) {\n        return status.code === code;\n      });\n    },\n    getIdByCode: function getIdByCode(arr, code) {\n      if (!code || !utils.generic.isValidArray(arr)) return;\n      var obj = utilsReferenceData.status.getByCode(arr, code);\n      return obj && obj.id;\n    },\n    getLabelById: function getLabelById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      var obj = arr.find(function (status) {\n        return id === status.id;\n      });\n      return obj && obj.code ? utils.string.replaceLowerCase(obj.code) : '';\n    },\n    getKey: function getKey(status) {\n      return status ? utils.string.replaceLowerCase(status.code) : '';\n    }\n  },\n  countries: {\n    getOptionsIso2: function getOptionsIso2(countries) {\n      if (!utils.generic.isValidArray(countries)) return [];\n      return countries.map(function (country) {\n        return {\n          value: country.codeAlpha2,\n          label: country.name\n        };\n      });\n    }\n  },\n  currencies: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return {};\n      return arr.find(function (currency) {\n        return id === currency.id;\n      }) || {};\n    },\n    getByCode: function getByCode(arr, code) {\n      if (!code || !utils.generic.isValidArray(arr)) return {};\n      return arr.find(function (currency) {\n        return code === currency.code;\n      }) || {};\n    }\n  },\n  processTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (processType) {\n        return id === processType.processTypeID;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var processTypeObj = utilsReferenceData.processTypes.getById(arr, id);\n      return processTypeObj && processTypeObj.processTypeDetails || '';\n    }\n  },\n  facilityTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (facilityType) {\n        return id === facilityType.facilityTypeID;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var facilityTypeObj = utilsReferenceData.facilityTypes.getById(arr, id);\n      return facilityTypeObj && facilityTypeObj.facilityTypeDetails || '';\n    }\n  },\n  bordereauTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (bordereauType) {\n        return id === bordereauType.bordereauTypeID;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var bordereauTypeObj = utilsReferenceData.bordereauTypes.getById(arr, id);\n      return bordereauTypeObj && bordereauTypeObj.bordereauTypeDetails || '';\n    }\n  },\n  bordereauPolicyTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (bordereauPolicyType) {\n        return id === bordereauPolicyType.bordereauPolicyTypeID;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var bordereauPolicyTypeObj = utilsReferenceData.bordereauPolicyTypes.getById(arr, id);\n      return bordereauPolicyTypeObj && bordereauPolicyTypeObj.bordereauPolicyTypeDetails || '';\n    }\n  },\n  resolutionCodeTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (resolutionCodeType) {\n        return id === resolutionCodeType.resolutionCd;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var resolutionCodeTypeObj = utilsReferenceData.resolutionCodeTypes.getById(arr, id);\n      return resolutionCodeTypeObj && resolutionCodeTypeObj.resolutionCodeDescription || '';\n    }\n  },\n  queryCodeTypes: {\n    getById: function getById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.find(function (queryCodeType) {\n        return id === queryCodeType.queryCodeDetails;\n      });\n    },\n    getNameById: function getNameById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return '';\n      var queryCodeTypeObj = utilsReferenceData.queryCodeTypes.getById(arr, id);\n      return queryCodeTypeObj && queryCodeTypeObj.queryCodeDescription || '';\n    }\n  },\n  settlementCurrencyTypes: {\n    getAllById: function getAllById(arr, id) {\n      if (!id || !utils.generic.isValidArray(arr)) return;\n      return arr.filter(function (currency) {\n        return id === currency.instanceId;\n      }) || [];\n    }\n  }\n};\nexport default utilsReferenceData;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/referenceData/referenceData.js"],"names":["utils","utilsReferenceData","departments","getById","arr","id","generic","isValidArray","find","dept","getNameById","deptObj","name","getBusinessTypes","departmentArray","businessTypes","getUsers","users","type","obj","description","markets","market","underwriters","uw","underwriter","clients","client","insureds","insured","newRenewalBusinesses","getLabelById","business","code","status","getByCode","getIdByCode","string","replaceLowerCase","getKey","countries","getOptionsIso2","map","country","value","codeAlpha2","label","currencies","currency","processTypes","processType","processTypeID","processTypeObj","processTypeDetails","facilityTypes","facilityType","facilityTypeID","facilityTypeObj","facilityTypeDetails","bordereauTypes","bordereauType","bordereauTypeID","bordereauTypeObj","bordereauTypeDetails","bordereauPolicyTypes","bordereauPolicyType","bordereauPolicyTypeID","bordereauPolicyTypeObj","bordereauPolicyTypeDetails","resolutionCodeTypes","resolutionCodeType","resolutionCd","resolutionCodeTypeObj","resolutionCodeDescription","queryCodeTypes","queryCodeType","queryCodeDetails","queryCodeTypeObj","queryCodeDescription","settlementCurrencyTypes","getAllById","filter","instanceId"],"mappings":"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","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\n\r\nconst utilsReferenceData = {\r\n  departments: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((dept) => id === dept.id);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const deptObj = utilsReferenceData.departments.getById(arr, id);\r\n\r\n      return (deptObj && deptObj.name) || '';\r\n    },\r\n    getBusinessTypes: (departmentArray, id) => {\r\n      if (!id || !utils.generic.isValidArray(departmentArray)) return [];\r\n\r\n      const dept = utilsReferenceData.departments.getById(departmentArray, id);\r\n      return dept?.businessTypes || [];\r\n    },\r\n    getUsers: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return [];\r\n\r\n      const dept = utilsReferenceData.departments.getById(arr, id);\r\n      return dept && dept.users ? dept.users : [];\r\n    },\r\n  },\r\n  businessTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((type) => id === type.id);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const obj = utilsReferenceData.businessTypes.getById(arr, id);\r\n      return (obj && obj.id && obj.description) || '';\r\n    },\r\n  },\r\n  markets: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((market) => id === market.id);\r\n    },\r\n  },\r\n  underwriters: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((uw) => id === uw.underwriter.id);\r\n    },\r\n  },\r\n  clients: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((client) => id === client.id);\r\n    },\r\n  },\r\n  insureds: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((insured) => id === insured.id);\r\n    },\r\n  },\r\n  newRenewalBusinesses: {\r\n    getLabelById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n      const obj = arr.find((business) => id === business.id);\r\n      return (obj && obj.code && obj.description) || '';\r\n    },\r\n  },\r\n  status: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((status) => id === status.id);\r\n    },\r\n    getByCode: (arr, code) => {\r\n      if (!code || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((status) => status.code === code);\r\n    },\r\n    getIdByCode: (arr, code) => {\r\n      if (!code || !utils.generic.isValidArray(arr)) return;\r\n      const obj = utilsReferenceData.status.getByCode(arr, code);\r\n      return obj && obj.id;\r\n    },\r\n    getLabelById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      const obj = arr.find((status) => id === status.id);\r\n      return obj && obj.code ? utils.string.replaceLowerCase(obj.code) : '';\r\n    },\r\n    getKey: (status) => {\r\n      return status ? utils.string.replaceLowerCase(status.code) : '';\r\n    },\r\n  },\r\n  countries: {\r\n    getOptionsIso2: (countries) => {\r\n      if (!utils.generic.isValidArray(countries)) return [];\r\n\r\n      return countries.map((country) => ({\r\n        value: country.codeAlpha2,\r\n        label: country.name,\r\n      }));\r\n    },\r\n  },\r\n  currencies: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return {};\r\n      return arr.find((currency) => id === currency.id) || {};\r\n    },\r\n    getByCode: (arr, code) => {\r\n      if (!code || !utils.generic.isValidArray(arr)) return {};\r\n      return arr.find((currency) => code === currency.code) || {};\r\n    },\r\n  },\r\n  processTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((processType) => id === processType.processTypeID);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const processTypeObj = utilsReferenceData.processTypes.getById(arr, id);\r\n\r\n      return (processTypeObj && processTypeObj.processTypeDetails) || '';\r\n    },\r\n  },\r\n  facilityTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((facilityType) => id === facilityType.facilityTypeID);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const facilityTypeObj = utilsReferenceData.facilityTypes.getById(arr, id);\r\n\r\n      return (facilityTypeObj && facilityTypeObj.facilityTypeDetails) || '';\r\n    },\r\n  },\r\n  bordereauTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((bordereauType) => id === bordereauType.bordereauTypeID);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const bordereauTypeObj = utilsReferenceData.bordereauTypes.getById(arr, id);\r\n\r\n      return (bordereauTypeObj && bordereauTypeObj.bordereauTypeDetails) || '';\r\n    },\r\n  },\r\n  bordereauPolicyTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((bordereauPolicyType) => id === bordereauPolicyType.bordereauPolicyTypeID);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const bordereauPolicyTypeObj = utilsReferenceData.bordereauPolicyTypes.getById(arr, id);\r\n\r\n      return (bordereauPolicyTypeObj && bordereauPolicyTypeObj.bordereauPolicyTypeDetails) || '';\r\n    },\r\n  },\r\n  resolutionCodeTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((resolutionCodeType) => id === resolutionCodeType.resolutionCd);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const resolutionCodeTypeObj = utilsReferenceData.resolutionCodeTypes.getById(arr, id);\r\n\r\n      return (resolutionCodeTypeObj && resolutionCodeTypeObj.resolutionCodeDescription) || '';\r\n    },\r\n  },\r\n  queryCodeTypes: {\r\n    getById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.find((queryCodeType) => id === queryCodeType.queryCodeDetails);\r\n    },\r\n    getNameById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return '';\r\n\r\n      const queryCodeTypeObj = utilsReferenceData.queryCodeTypes.getById(arr, id);\r\n\r\n      return (queryCodeTypeObj && queryCodeTypeObj.queryCodeDescription) || '';\r\n    },\r\n  },\r\n  settlementCurrencyTypes: {\r\n    getAllById: (arr, id) => {\r\n      if (!id || !utils.generic.isValidArray(arr)) return;\r\n      return arr.filter((currency) => id === currency.instanceId) || [];\r\n    },\r\n  }\r\n};\r\n\r\nexport default utilsReferenceData;\r\n"]},"metadata":{},"sourceType":"module"}