{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nexport var premiumProcessingCheckSigningCancelCase = function premiumProcessingCheckSigningCancelCase(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.postCheckSigningCancelCase'\n    };\n    var caseId = params.caseId,\n        notesField = params.notesField;\n    var requestBody = {\n      caseId: caseId,\n      notes: notesField\n    };\n    dispatch(premiumProcessingCheckSigningCancelCaseRequest(requestBody));\n    dispatch(addLoader('premiumProcessingCheckSigningCancelCase'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'checksigning/task/cancelled',\n      data: requestBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(premiumProcessingCheckSigningCancelCaseSuccess(data === null || data === void 0 ? void 0 : data.data));\n      dispatch(enqueueNotification('premiumProcessing.checkSigningCancel.cancelSuccessMessage', 'success'));\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.getRejectcloseCase)'\n      }));\n      dispatch(premiumProcessingCheckSigningCancelCaseError(error));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('premiumProcessingCheckSigningCancelCase'));\n    });\n  };\n};\nexport var premiumProcessingCheckSigningCancelCaseRequest = function premiumProcessingCheckSigningCancelCaseRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_REQUEST',\n    payload: payload\n  };\n};\nexport var premiumProcessingCheckSigningCancelCaseSuccess = function premiumProcessingCheckSigningCancelCaseSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_SUCCESS',\n    payload: data\n  };\n};\nexport var premiumProcessingCheckSigningCancelCaseError = function premiumProcessingCheckSigningCancelCaseError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postCheckSigningCancelCase.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","premiumProcessingCheckSigningCancelCase","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","caseId","notesField","requestBody","notes","premiumProcessingCheckSigningCancelCaseRequest","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","premiumProcessingCheckSigningCancelCaseSuccess","catch","error","handleError","message","premiumProcessingCheckSigningCancelCaseError","handleUnauthorized","finally","payload","type"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\n\r\nexport const premiumProcessingCheckSigningCancelCase = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.postCheckSigningCancelCase',\r\n  };\r\n\r\n  const { caseId, notesField } = params;\r\n\r\n  const requestBody = {\r\n    caseId: caseId,\r\n    notes: notesField,\r\n  };\r\n\r\n  dispatch(premiumProcessingCheckSigningCancelCaseRequest(requestBody));\r\n  dispatch(addLoader('premiumProcessingCheckSigningCancelCase'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'checksigning/task/cancelled',\r\n      data: requestBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(premiumProcessingCheckSigningCancelCaseSuccess(data?.data));\r\n      dispatch(enqueueNotification('premiumProcessing.checkSigningCancel.cancelSuccessMessage', 'success'));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.getRejectcloseCase)' });\r\n      dispatch(premiumProcessingCheckSigningCancelCaseError(error));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('premiumProcessingCheckSigningCancelCase'));\r\n    });\r\n};\r\n\r\nexport const premiumProcessingCheckSigningCancelCaseRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingCheckSigningCancelCaseSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingCheckSigningCancelCaseError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}