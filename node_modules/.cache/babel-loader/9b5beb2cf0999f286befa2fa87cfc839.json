{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils'; //app\n\nimport { authLogout } from 'stores';\nexport var getNewInstructionsId = function getNewInstructionsId(params) {\n  return function (dispatch, getState) {\n    var state = getState();\n    var auth = state.user.auth,\n        user = state.user,\n        endpoint = state.config.vars.endpoint;\n    var businessProcessID = params.businessProcessID,\n        processTypeID = params.processTypeID;\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getNewInstructionsId'\n    };\n    dispatch(getNewInstructionsIdRequest());\n    var getParams = {\n      businessProcessId: businessProcessID,\n      processTypeId: processTypeID,\n      lastVisitedPage: 'grid',\n      createdDate: utils.date.toISOString(new Date()),\n      updatedDate: utils.date.toISOString(new Date()),\n      createdBy: user.id,\n      updatedBy: user.id\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: 'instruction',\n      data: getParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getNewInstructionsIdSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.getNewInstructionsId)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getNewInstructionsIdFailure(err));\n      return err;\n    });\n  };\n};\nexport var getNewInstructionsIdRequest = function getNewInstructionsIdRequest() {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_REQUEST'\n  };\n};\nexport var getNewInstructionsIdSuccess = function getNewInstructionsIdSuccess(response) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_SUCCESS',\n    payload: response\n  };\n};\nexport var getNewInstructionsIdFailure = function getNewInstructionsIdFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.getNewInstructionsId.js"],"names":["utils","authLogout","getNewInstructionsId","params","dispatch","getState","state","auth","user","endpoint","config","vars","businessProcessID","processTypeID","defaultError","file","getNewInstructionsIdRequest","getParams","businessProcessId","processTypeId","lastVisitedPage","createdDate","date","toISOString","Date","updatedDate","createdBy","id","updatedBy","api","post","token","accessToken","ppService","path","data","then","response","handleResponse","json","handleNewData","getNewInstructionsIdSuccess","catch","err","handleError","message","handleUnauthorized","getNewInstructionsIdFailure","type","payload","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\n\r\n//app\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getNewInstructionsId = (params) => (dispatch, getState) => {\r\n  const state = getState();\r\n  const {\r\n    user: { auth },\r\n    user,\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = state;\r\n\r\n  const { businessProcessID, processTypeID } = params;\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.getNewInstructionsId',\r\n  };\r\n\r\n  dispatch(getNewInstructionsIdRequest());\r\n\r\n  const getParams = {\r\n    businessProcessId: businessProcessID,\r\n    processTypeId: processTypeID,\r\n    lastVisitedPage: 'grid',\r\n    createdDate: utils.date.toISOString(new Date()),\r\n    updatedDate: utils.date.toISOString(new Date()),\r\n    createdBy: user.id,\r\n    updatedBy: user.id,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: 'instruction',\r\n      data: getParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getNewInstructionsIdSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.getNewInstructionsId)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getNewInstructionsIdFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getNewInstructionsIdRequest = () => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getNewInstructionsIdSuccess = (response) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_SUCCESS',\r\n    payload: response,\r\n  };\r\n};\r\n\r\nexport const getNewInstructionsIdFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_NEW_INSTRUCTIONS_ID_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}