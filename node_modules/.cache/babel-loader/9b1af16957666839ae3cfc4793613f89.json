{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './ClaimsTab.styles';\nimport { selectUser, selectClaimsTabData, getClaimsTabData, getClaimsTabDetails, resetClaimsTabSearch, resetClaimsTabFilters } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { useFlexiColumns } from 'hooks';\nimport { MultiSelect } from 'components';\nimport ClaimsTabView from './ClaimsTab.view'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsTab() {\n  _s();\n\n  var _claimsTabData$tableD, _claimsTabData$tableD2, _claimsTabData$tableD3, _claimsTabData$tableD4, _selectOptions$find, _selectOptions$find2, _claimsTabData$tableD5;\n\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTab'\n  })();\n  var dispatch = useDispatch();\n  var user = useSelector(selectUser);\n  var userHasMyClaimsPermission = utils.app.access.feature('claimsFNOL.myClaims', ['read', 'create', 'update'], user);\n  var userHasMyTeamClaimsPermission = utils.app.access.feature('claimsFNOL.myTeamClaims', ['read', 'create', 'update'], user);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchBy = _useState4[0],\n      setSearchBy = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      myClaimsFirstTimeLoad = _useState6[0],\n      setMyClaimsFirstTimeLoad = _useState6[1];\n\n  var _useState7 = useState(true),\n      _useState8 = _slicedToArray(_useState7, 2),\n      myTeamClaimsFirstTimeLoad = _useState8[0],\n      setMyTeamClaimsFirstTimeLoad = _useState8[1];\n\n  var firstTimeSortColumns = 'processRef';\n  var searchTypeCall = constants.CLAIMS_TAB_REQ_TYPES.search;\n  var filterTypeCall = constants.CLAIMS_TAB_REQ_TYPES.filter;\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      resetKey = _useState10[0],\n      setResetKey = _useState10[1];\n\n  var claimsTabData = useSelector(selectClaimsTabData);\n  var claimsTabTableRowDetails = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD = claimsTabData.tableDetails) === null || _claimsTabData$tableD === void 0 ? void 0 : _claimsTabData$tableD.items;\n  var claimsTabFilterDropDown = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD2 = claimsTabData.tableDetails) === null || _claimsTabData$tableD2 === void 0 ? void 0 : _claimsTabData$tableD2.filters;\n  var isFetchingFilters = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD3 = claimsTabData.tableDetails) === null || _claimsTabData$tableD3 === void 0 ? void 0 : _claimsTabData$tableD3.isloadingFilters;\n\n  var _useState11 = useState((claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.view) || constants.CLAIM_TEAM_TYPE.myClaims),\n      _useState12 = _slicedToArray(_useState11, 2),\n      claimsType = _useState12[0],\n      setClaimsType = _useState12[1];\n\n  var selectOptions = [{\n    label: utils.string.t('claims.searchByClaims.options.Insured'),\n    value: constants.CLAIMS_TAB_SEARCH_OPTION_INSURED\n  }, {\n    label: utils.string.t('claims.searchByClaims.options.ClaimRef'),\n    value: constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF\n  }, {\n    label: utils.string.t('claims.searchByClaims.options.LossRef'),\n    value: constants.CLAIMS_TAB_SEARCH_OPTION_LOSS_REF\n  }, {\n    label: utils.string.t('claims.searchByClaims.options.PolicyRef'),\n    value: constants.CLAIMS_TAB_SEARCH_OPTION_POLICY_REF\n  }, {\n    label: utils.string.t('claims.searchByClaims.options.Division'),\n    value: constants.CLAIMS_TAB_SEARCH_OPTION_DIVISION\n  }];\n  var selectedFilters = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD4 = claimsTabData.tableDetails) === null || _claimsTabData$tableD4 === void 0 ? void 0 : _claimsTabData$tableD4.selectedFilters;\n  var viewFields = [{\n    name: 'views',\n    type: 'radio',\n    value: claimsType,\n    defaultValue: claimsType,\n    muiFormGroupProps: {\n      row: true,\n      nestedClasses: {\n        root: classes.radioGroup\n      },\n      onChange: function onChange(value) {\n        setClaimsType(value);\n        setValue('includeClosedClaims', false);\n      }\n    },\n    options: [].concat(_toConsumableArray(userHasMyClaimsPermission ? [{\n      value: constants.CLAIM_TEAM_TYPE.myClaims,\n      label: utils.string.t('claims.claimsTab.myClaims')\n    }] : []), _toConsumableArray(userHasMyTeamClaimsPermission ? [{\n      value: constants.CLAIM_TEAM_TYPE.myTeamClaims,\n      label: utils.string.t('claims.claimsTab.myTeamClaims')\n    }] : []))\n  }, {\n    name: 'searchBy',\n    type: 'select',\n    options: selectOptions,\n    value: (claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.searchBy) === '' ? (selectOptions === null || selectOptions === void 0 ? void 0 : (_selectOptions$find = selectOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.value) === constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF;\n    })) === null || _selectOptions$find === void 0 ? void 0 : _selectOptions$find.value) || null : selectOptions === null || selectOptions === void 0 ? void 0 : (_selectOptions$find2 = selectOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.value) === (claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.searchBy);\n    })) === null || _selectOptions$find2 === void 0 ? void 0 : _selectOptions$find2.value,\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'claimLossFromDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'multiSelect',\n    type: 'switch',\n    value: false\n  }];\n  var defaultValues = utils.form.getInitialValues(viewFields);\n  var validationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      setValue = _useForm.setValue,\n      watch = _useForm.watch;\n\n  var searchByWatcher = watch('searchBy');\n  var tableFilterFields = [{\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.insured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.insured, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.insured : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.insured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.insured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.division'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.division, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.division : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.division,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.division\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'status',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.workflowStatus'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.workflowStatus, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.workflowStatus : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.workflowStatus,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"status\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.workflowStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'claimStage',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.claimStage'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.claimStage, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.claimStage : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.claimStage,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"claimStage\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.claimStage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 16\n    }, this)\n  }].concat(_toConsumableArray(claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims ? [{\n    id: 'assignedTo',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.assignedTo'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.assignedTo, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.assignedTo : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.assignedTo,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"assignedTo\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.assignedTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 22\n    }, this)\n  }] : []), [{\n    id: 'team',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.team'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.team, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.team : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.team,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"team\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.team\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'priority',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimsTab.filtercolumns.priority'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: utils.generic.isValidArray(selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.priority, true) ? selectedFilters === null || selectedFilters === void 0 ? void 0 : selectedFilters.priority : [],\n    options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.priority,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"priority\",\n      search: true,\n      options: claimsTabFilterDropDown === null || claimsTabFilterDropDown === void 0 ? void 0 : claimsTabFilterDropDown.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 191,\n      columnNumber: 16\n    }, this)\n  }]);\n  useEffect(function () {\n    if (!(claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.isClaimsTabLoaded)) {\n      getClaimsData();\n\n      var claimsData = _objectSpread({}, claimsTabData);\n\n      claimsData.isClaimsTabLoaded = true;\n      claimsData.view = claimsType;\n      dispatch(getClaimsTabData(claimsData));\n    } else if ((claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.isClaimsTabLoaded) && (claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.view) !== claimsType) {\n      getClaimsData();\n\n      var _claimsData = _objectSpread({}, claimsTabData);\n\n      _claimsData.view = claimsType;\n      dispatch(getClaimsTabData(_claimsData));\n    }\n\n    return function () {\n      setSearchTerm('');\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [claimsType]);\n  useEffect(function () {\n    setSearchBy(searchByWatcher);\n  }, [searchByWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var getClaimsData = function getClaimsData() {\n    if (claimsType) {\n      setValue('processRef', null); // defect - 14469 - Default sorting is not applying on Date &Time created and Priority columns\n      // First Time Table Grid load for MyClaims, MyTeamClaims, All Claims passing createdDate and Priority columns from UI.\n\n      if (myClaimsFirstTimeLoad && claimsType === constants.CLAIM_TEAM_TYPE.myClaims || myTeamClaimsFirstTimeLoad && claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims) {\n        if (claimsType === constants.CLAIM_TEAM_TYPE.myClaims) setMyClaimsFirstTimeLoad(!myClaimsFirstTimeLoad);\n        if (claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims) setMyTeamClaimsFirstTimeLoad(!myTeamClaimsFirstTimeLoad);\n        dispatch(getClaimsTabDetails({\n          requestType: searchTypeCall,\n          claimsType: claimsType,\n          searchBy: searchBy,\n          firstTimeSort: firstTimeSortColumns\n        }));\n        dispatch(getClaimsTabDetails({\n          requestType: filterTypeCall,\n          claimsType: claimsType,\n          searchBy: searchBy,\n          firstTimeSort: firstTimeSortColumns\n        }));\n      } else {\n        // From second time onwards, table grid load from else part for single column sorting.\n        dispatch(getClaimsTabDetails({\n          requestType: searchTypeCall,\n          claimsType: claimsType,\n          searchBy: searchBy\n        }));\n        dispatch(getClaimsTabDetails({\n          requestType: filterTypeCall,\n          claimsType: claimsType,\n          searchBy: searchBy\n        }));\n      }\n    }\n  };\n\n  var handleSearch = function handleSearch(queryObject) {\n    setResetKey(new Date().getTime());\n    dispatch(resetClaimsTabFilters());\n    setValue('processRef', null);\n    setSearchTerm(queryObject.search);\n\n    var claimsData = _objectSpread({}, claimsTabData);\n\n    claimsData.searchText = queryObject === null || queryObject === void 0 ? void 0 : queryObject.search;\n    claimsData.tableDetails.selectedFilters = queryObject === null || queryObject === void 0 ? void 0 : queryObject.filters;\n    dispatch(getClaimsTabData(claimsData));\n\n    if (queryObject === null || queryObject === void 0 ? void 0 : queryObject.search) {\n      dispatch(getClaimsTabDetails({\n        requestType: searchTypeCall,\n        claimsType: claimsType,\n        term: queryObject.search,\n        direction: 'desc',\n        searchBy: searchBy\n      }));\n      dispatch(getClaimsTabDetails({\n        requestType: filterTypeCall,\n        claimsType: claimsType,\n        term: queryObject.search,\n        direction: 'desc',\n        searchBy: searchBy,\n        filterTerm: queryObject.filters\n      }));\n    }\n  };\n\n  var handleResetFilter = function handleResetFilter() {\n    var claimsData = _objectSpread({}, claimsTabData);\n\n    claimsData.tableDetails.selectedFilters = [];\n    dispatch(getClaimsTabData(claimsData));\n    setValue('processRef', null);\n    dispatch(resetClaimsTabFilters());\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      term: searchTerm,\n      filterTerm: '',\n      direction: 'desc',\n      searchBy: searchBy\n    }));\n    dispatch(getClaimsTabDetails({\n      requestType: filterTypeCall,\n      claimsType: claimsType,\n      term: searchTerm,\n      filterTerm: '',\n      direction: 'desc',\n      searchBy: searchBy\n    }));\n  };\n\n  var handleSearchFilter = function handleSearchFilter(data) {\n    var claimsData = _objectSpread({}, claimsTabData);\n\n    claimsData.tableDetails.selectedFilters = data === null || data === void 0 ? void 0 : data.filters;\n    dispatch(getClaimsTabData(claimsData));\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      term: data.search,\n      filterTerm: data.filters,\n      searchBy: searchBy\n    }));\n    dispatch(getClaimsTabDetails({\n      requestType: filterTypeCall,\n      claimsType: claimsType,\n      term: data.search,\n      filterTerm: data.filters,\n      searchBy: searchBy\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm,\n      searchBy: searchBy\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      page: newPage,\n      term: searchTerm,\n      searchBy: searchBy\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      size: rowsPerPage,\n      term: searchTerm,\n      searchBy: searchBy\n    }));\n  };\n\n  var handleResetSearch = function handleResetSearch() {\n    setResetKey(new Date().getTime());\n    dispatch(resetClaimsTabSearch());\n    dispatch(resetClaimsTabFilters());\n    setValue('processRef', null);\n    dispatch(getClaimsTabDetails({\n      requestType: searchTypeCall,\n      claimsType: claimsType,\n      filterTerm: [],\n      searchBy: searchBy\n    }));\n    dispatch(getClaimsTabDetails({\n      requestType: filterTypeCall,\n      claimsType: claimsType,\n      filterTerm: [],\n      searchBy: searchBy\n    }));\n  };\n\n  var onSelectSearchBy = function onSelectSearchBy(searchByValue) {\n    setSearchBy(searchByValue);\n\n    var claimsData = _objectSpread({}, claimsTabData);\n\n    claimsData.searchBy = searchByValue;\n    dispatch(getClaimsTabData(claimsData));\n  };\n\n  var columns = [{\n    id: 'claimRef',\n    label: utils.string.t('claims.claimsTab.tablecolumns.claimRef'),\n    narrow: true,\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'lossRef',\n    label: utils.string.t('claims.claimsTab.tablecolumns.lossRef'),\n    narrow: true,\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'assured',\n    label: utils.string.t('claims.claimsTab.tablecolumns.insured'),\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'policyRef',\n    label: utils.string.t('claims.claimsTab.tablecolumns.policyRef'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.claimsTab.tablecolumns.division'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'claimStatus',\n    label: utils.string.t('claims.claimsTab.tablecolumns.workflowStatus'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'claimStage',\n    label: utils.string.t('claims.claimsTab.tablecolumns.claimStage'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'assignedTo',\n    label: utils.string.t('claims.claimsTab.tablecolumns.assignedTo'),\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.claimsTab.tablecolumns.team'),\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.claimsTab.tablecolumns.priority'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'catCodesID',\n    label: utils.string.t('claims.claimsTab.tablecolumns.catCode'),\n    ellipsis: true\n  }, {\n    id: 'claimReceivedDateTime',\n    label: utils.string.t('claims.claimsTab.tablecolumns.claimReceivedDateTime'),\n    narrow: true,\n    nowrap: true\n  }, {\n    id: 'createdDate',\n    label: utils.string.t('claims.claimsTab.tablecolumns.createdDate'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'closedDate',\n    label: utils.string.t('claims.claimsTab.tablecolumns.closedDate'),\n    nowrap: true\n  }, {\n    id: 'complexity',\n    label: utils.string.t('claims.claimsTab.tablecolumns.complexity'),\n    visible: false\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.claimsTab.tablecolumns.ucr'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'policyType',\n    label: utils.string.t('claims.claimsTab.tablecolumns.policyType'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'claimantName',\n    label: utils.string.t('claims.claimsTab.tablecolumns.claimant'),\n    visible: false,\n    ellipsis: true\n  }, {\n    id: 'reinsured',\n    label: utils.string.t('claims.claimsTab.tablecolumns.reinsured'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'client',\n    label: utils.string.t('claims.claimsTab.tablecolumns.client')\n  }, {\n    id: 'interest',\n    label: utils.string.t('claims.claimsTab.tablecolumns.interest'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'createdBy',\n    label: utils.string.t('claims.claimsTab.tablecolumns.createdBy'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'company',\n    label: utils.string.t('claims.claimsTab.tablecolumns.company')\n  }, {\n    id: 'coverholder',\n    label: utils.string.t('claims.claimsTab.tablecolumns.coverholder'),\n    nowrap: true,\n    visible: false\n  }, {\n    id: 'lossToDate',\n    label: utils.string.t('claims.claimsTab.tablecolumns.lossDateTo'),\n    nowrap: true\n  }, {\n    id: 'lossDateQualifier',\n    label: utils.string.t('claims.claimsTab.tablecolumns.lossDateQualifier'),\n    nowrap: true\n  }, {\n    id: 'lossDetails',\n    label: utils.string.t('claims.claimsTab.tablecolumns.lossDetails'),\n    nowrap: true,\n    ellipsis: true\n  }, {\n    id: 'pasClaimRef',\n    label: utils.string.t('claims.claimsTab.tablecolumns.pasClaimRef'),\n    nowrap: true\n  }, {\n    id: 'pasStatus',\n    label: utils.string.t('claims.claimsTab.tablecolumns.pasStatus'),\n    nowrap: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(ClaimsTabView, {\n    claims: claimsTabTableRowDetails,\n    searchTerm: (claimsTabData === null || claimsTabData === void 0 ? void 0 : claimsTabData.searchText) || '',\n    searchByTerm: searchBy,\n    sort: _objectSpread({}, claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD5 = claimsTabData.tableDetails) === null || _claimsTabData$tableD5 === void 0 ? void 0 : _claimsTabData$tableD5.sort),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    viewFields: viewFields,\n    tableFilterFields: tableFilterFields,\n    isFetchingFilters: isFetchingFilters,\n    control: control,\n    resetKey: resetKey,\n    handlers: {\n      search: handleSearch,\n      searchFilter: handleSearchFilter,\n      resetFilter: handleResetFilter,\n      sort: handleSort,\n      changePage: handleChangePage,\n      changeRowsPerPage: handleChangeRowsPerPage,\n      toggleColumn: toggleColumn,\n      resetSearch: handleResetSearch,\n      onSelectSearchBy: onSelectSearchBy\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 586,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTab, \"b6Whfglj8mFAhqiJ/+3Korum/IQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = ClaimsTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTab\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","Yup","useForm","yupResolver","styles","selectUser","selectClaimsTabData","getClaimsTabData","getClaimsTabDetails","resetClaimsTabSearch","resetClaimsTabFilters","constants","utils","useFlexiColumns","MultiSelect","ClaimsTabView","makeStyles","ClaimsTab","classes","name","dispatch","user","userHasMyClaimsPermission","app","access","feature","userHasMyTeamClaimsPermission","searchTerm","setSearchTerm","CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF","searchBy","setSearchBy","myClaimsFirstTimeLoad","setMyClaimsFirstTimeLoad","myTeamClaimsFirstTimeLoad","setMyTeamClaimsFirstTimeLoad","firstTimeSortColumns","searchTypeCall","CLAIMS_TAB_REQ_TYPES","search","filterTypeCall","filter","resetKey","setResetKey","claimsTabData","claimsTabTableRowDetails","tableDetails","items","claimsTabFilterDropDown","filters","isFetchingFilters","isloadingFilters","view","CLAIM_TEAM_TYPE","myClaims","claimsType","setClaimsType","selectOptions","label","string","t","value","CLAIMS_TAB_SEARCH_OPTION_INSURED","CLAIMS_TAB_SEARCH_OPTION_LOSS_REF","CLAIMS_TAB_SEARCH_OPTION_POLICY_REF","CLAIMS_TAB_SEARCH_OPTION_DIVISION","selectedFilters","viewFields","type","defaultValue","muiFormGroupProps","row","nestedClasses","root","radioGroup","onChange","setValue","options","myTeamClaims","find","item","validation","required","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","searchByWatcher","tableFilterFields","id","placeholder","generic","isValidArray","insured","content","division","workflowStatus","claimStage","assignedTo","team","priority","isClaimsTabLoaded","getClaimsData","claimsData","requestType","firstTimeSort","handleSearch","queryObject","Date","getTime","searchText","term","direction","filterTerm","handleResetFilter","handleSearchFilter","data","handleSort","by","dir","sortBy","toUpperCase","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleResetSearch","onSelectSearchBy","searchByValue","columns","narrow","nowrap","visible","mandatory","ellipsis","columnsArray","columnProps","toggleColumn","sort","searchFilter","resetFilter","changePage","changeRowsPerPage","resetSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './ClaimsTab.styles';\r\nimport {\r\n  selectUser,\r\n  selectClaimsTabData,\r\n  getClaimsTabData,\r\n  getClaimsTabDetails,\r\n  resetClaimsTabSearch,\r\n  resetClaimsTabFilters,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport { MultiSelect } from 'components';\r\nimport ClaimsTabView from './ClaimsTab.view';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function ClaimsTab() {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTab' })();\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n  const userHasMyClaimsPermission = utils.app.access.feature('claimsFNOL.myClaims', ['read', 'create', 'update'], user);\r\n  const userHasMyTeamClaimsPermission = utils.app.access.feature('claimsFNOL.myTeamClaims', ['read', 'create', 'update'], user);\r\n\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [searchBy, setSearchBy] = useState(constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF);\r\n\r\n  const [myClaimsFirstTimeLoad, setMyClaimsFirstTimeLoad] = useState(true);\r\n  const [myTeamClaimsFirstTimeLoad, setMyTeamClaimsFirstTimeLoad] = useState(true);\r\n  const firstTimeSortColumns = 'processRef';\r\n\r\n  const searchTypeCall = constants.CLAIMS_TAB_REQ_TYPES.search;\r\n  const filterTypeCall = constants.CLAIMS_TAB_REQ_TYPES.filter;\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const claimsTabData = useSelector(selectClaimsTabData);\r\n  const claimsTabTableRowDetails = claimsTabData?.tableDetails?.items;\r\n  const claimsTabFilterDropDown = claimsTabData?.tableDetails?.filters;\r\n  const isFetchingFilters = claimsTabData?.tableDetails?.isloadingFilters;\r\n\r\n  const [claimsType, setClaimsType] = useState(claimsTabData?.view || constants.CLAIM_TEAM_TYPE.myClaims);\r\n\r\n  const selectOptions = [\r\n    { label: utils.string.t('claims.searchByClaims.options.Insured'), value: constants.CLAIMS_TAB_SEARCH_OPTION_INSURED },\r\n    { label: utils.string.t('claims.searchByClaims.options.ClaimRef'), value: constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF },\r\n    { label: utils.string.t('claims.searchByClaims.options.LossRef'), value: constants.CLAIMS_TAB_SEARCH_OPTION_LOSS_REF },\r\n    { label: utils.string.t('claims.searchByClaims.options.PolicyRef'), value: constants.CLAIMS_TAB_SEARCH_OPTION_POLICY_REF },\r\n    { label: utils.string.t('claims.searchByClaims.options.Division'), value: constants.CLAIMS_TAB_SEARCH_OPTION_DIVISION },\r\n  ];\r\n\r\n  const selectedFilters = claimsTabData?.tableDetails?.selectedFilters;\r\n\r\n  const viewFields = [\r\n    {\r\n      name: 'views',\r\n      type: 'radio',\r\n      value: claimsType,\r\n      defaultValue: claimsType,\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        nestedClasses: {\r\n          root: classes.radioGroup,\r\n        },\r\n        onChange: (value) => {\r\n          setClaimsType(value);\r\n          setValue('includeClosedClaims', false);\r\n        },\r\n      },\r\n      options: [\r\n        ...(userHasMyClaimsPermission\r\n          ? [\r\n              {\r\n                value: constants.CLAIM_TEAM_TYPE.myClaims,\r\n                label: utils.string.t('claims.claimsTab.myClaims'),\r\n              },\r\n            ]\r\n          : []),\r\n        ...(userHasMyTeamClaimsPermission\r\n          ? [\r\n              {\r\n                value: constants.CLAIM_TEAM_TYPE.myTeamClaims,\r\n                label: utils.string.t('claims.claimsTab.myTeamClaims'),\r\n              },\r\n            ]\r\n          : []),\r\n      ],\r\n    },\r\n    {\r\n      name: 'searchBy',\r\n      type: 'select',\r\n      options: selectOptions,\r\n      value:\r\n        claimsTabData?.searchBy === ''\r\n          ? selectOptions?.find((item) => item?.value === constants.CLAIMS_TAB_SEARCH_OPTION_CLAIM_REF)?.value || null\r\n          : selectOptions?.find((item) => item?.value === claimsTabData?.searchBy)?.value,\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    { name: 'claimLossFromDate', type: 'datepicker', value: null },\r\n    {\r\n      name: 'multiSelect',\r\n      type: 'switch',\r\n      value: false,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(viewFields);\r\n  const validationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control, setValue, watch } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const searchByWatcher = watch('searchBy');\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.insured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.insured, true) ? selectedFilters?.insured : [],\r\n      options: claimsTabFilterDropDown?.insured,\r\n      content: <MultiSelect id=\"insured\" search options={claimsTabFilterDropDown?.insured} />,\r\n    },\r\n\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.division'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.division, true) ? selectedFilters?.division : [],\r\n      options: claimsTabFilterDropDown?.division,\r\n      content: <MultiSelect id=\"division\" search options={claimsTabFilterDropDown?.division} />,\r\n    },\r\n    {\r\n      id: 'status',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.workflowStatus'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.workflowStatus, true) ? selectedFilters?.workflowStatus : [],\r\n      options: claimsTabFilterDropDown?.workflowStatus,\r\n      content: <MultiSelect id=\"status\" search options={claimsTabFilterDropDown?.workflowStatus} />,\r\n    },\r\n    {\r\n      id: 'claimStage',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.claimStage'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.claimStage, true) ? selectedFilters?.claimStage : [],\r\n      options: claimsTabFilterDropDown?.claimStage,\r\n      content: <MultiSelect id=\"claimStage\" search options={claimsTabFilterDropDown?.claimStage} />,\r\n    },\r\n    ...(claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims\r\n      ? [\r\n          {\r\n            id: 'assignedTo',\r\n            type: 'multiSelect',\r\n            label: utils.string.t('claims.claimsTab.filtercolumns.assignedTo'),\r\n            placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n            value: utils.generic.isValidArray(selectedFilters?.assignedTo, true) ? selectedFilters?.assignedTo : [],\r\n            options: claimsTabFilterDropDown?.assignedTo,\r\n            content: <MultiSelect id=\"assignedTo\" search options={claimsTabFilterDropDown?.assignedTo} />,\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      id: 'team',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.team'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.team, true) ? selectedFilters?.team : [],\r\n      options: claimsTabFilterDropDown?.team,\r\n      content: <MultiSelect id=\"team\" search options={claimsTabFilterDropDown?.team} />,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimsTab.filtercolumns.priority'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: utils.generic.isValidArray(selectedFilters?.priority, true) ? selectedFilters?.priority : [],\r\n      options: claimsTabFilterDropDown?.priority,\r\n      content: <MultiSelect id=\"priority\" search options={claimsTabFilterDropDown?.priority} />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (!claimsTabData?.isClaimsTabLoaded) {\r\n      getClaimsData();\r\n      const claimsData = { ...claimsTabData };\r\n      claimsData.isClaimsTabLoaded = true;\r\n      claimsData.view = claimsType;\r\n      dispatch(getClaimsTabData(claimsData));\r\n    } else if (claimsTabData?.isClaimsTabLoaded && claimsTabData?.view !== claimsType) {\r\n      getClaimsData();\r\n      const claimsData = { ...claimsTabData };\r\n      claimsData.view = claimsType;\r\n      dispatch(getClaimsTabData(claimsData));\r\n    }\r\n    return () => {\r\n      setSearchTerm('');\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [claimsType]);\r\n\r\n  useEffect(() => {\r\n    setSearchBy(searchByWatcher);\r\n  }, [searchByWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const getClaimsData = () => {\r\n    if (claimsType) {\r\n      setValue('processRef', null);\r\n\r\n      // defect - 14469 - Default sorting is not applying on Date &Time created and Priority columns\r\n      // First Time Table Grid load for MyClaims, MyTeamClaims, All Claims passing createdDate and Priority columns from UI.\r\n      if (\r\n        (myClaimsFirstTimeLoad && claimsType === constants.CLAIM_TEAM_TYPE.myClaims) ||\r\n        (myTeamClaimsFirstTimeLoad && claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims)\r\n      ) {\r\n        if (claimsType === constants.CLAIM_TEAM_TYPE.myClaims) setMyClaimsFirstTimeLoad(!myClaimsFirstTimeLoad);\r\n        if (claimsType === constants.CLAIM_TEAM_TYPE.myTeamClaims) setMyTeamClaimsFirstTimeLoad(!myTeamClaimsFirstTimeLoad);\r\n\r\n        dispatch(\r\n          getClaimsTabDetails({\r\n            requestType: searchTypeCall,\r\n            claimsType,\r\n            searchBy,\r\n            firstTimeSort: firstTimeSortColumns,\r\n          })\r\n        );\r\n        dispatch(\r\n          getClaimsTabDetails({\r\n            requestType: filterTypeCall,\r\n            claimsType,\r\n            searchBy,\r\n            firstTimeSort: firstTimeSortColumns,\r\n          })\r\n        );\r\n      } else {\r\n        // From second time onwards, table grid load from else part for single column sorting.\r\n        dispatch(\r\n          getClaimsTabDetails({\r\n            requestType: searchTypeCall,\r\n            claimsType,\r\n            searchBy,\r\n          })\r\n        );\r\n        dispatch(\r\n          getClaimsTabDetails({\r\n            requestType: filterTypeCall,\r\n            claimsType,\r\n            searchBy,\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleSearch = (queryObject) => {\r\n    setResetKey(new Date().getTime());\r\n    dispatch(resetClaimsTabFilters());\r\n    setValue('processRef', null);\r\n    setSearchTerm(queryObject.search);\r\n    const claimsData = { ...claimsTabData };\r\n    claimsData.searchText = queryObject?.search;\r\n    claimsData.tableDetails.selectedFilters = queryObject?.filters;\r\n    dispatch(getClaimsTabData(claimsData));\r\n    if (queryObject?.search) {\r\n      dispatch(\r\n        getClaimsTabDetails({\r\n          requestType: searchTypeCall,\r\n          claimsType,\r\n          term: queryObject.search,\r\n          direction: 'desc',\r\n          searchBy,\r\n        })\r\n      );\r\n      dispatch(\r\n        getClaimsTabDetails({\r\n          requestType: filterTypeCall,\r\n          claimsType,\r\n          term: queryObject.search,\r\n          direction: 'desc',\r\n          searchBy,\r\n          filterTerm: queryObject.filters,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    const claimsData = { ...claimsTabData };\r\n    claimsData.tableDetails.selectedFilters = [];\r\n    dispatch(getClaimsTabData(claimsData));\r\n    setValue('processRef', null);\r\n    dispatch(resetClaimsTabFilters());\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: searchTypeCall,\r\n        claimsType,\r\n        term: searchTerm,\r\n        filterTerm: '',\r\n        direction: 'desc',\r\n        searchBy,\r\n      })\r\n    );\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: filterTypeCall,\r\n        claimsType,\r\n        term: searchTerm,\r\n        filterTerm: '',\r\n        direction: 'desc',\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSearchFilter = (data) => {\r\n    const claimsData = { ...claimsTabData };\r\n    claimsData.tableDetails.selectedFilters = data?.filters;\r\n    dispatch(getClaimsTabData(claimsData));\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: searchTypeCall,\r\n        claimsType,\r\n        term: data.search,\r\n        filterTerm: data.filters,\r\n        searchBy,\r\n      })\r\n    );\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: filterTypeCall,\r\n        claimsType,\r\n        term: data.search,\r\n        filterTerm: data.filters,\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: searchTypeCall,\r\n        claimsType,\r\n        sortBy: by,\r\n        direction: dir.toUpperCase(),\r\n        term: searchTerm,\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: searchTypeCall,\r\n        claimsType,\r\n        page: newPage,\r\n        term: searchTerm,\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: searchTypeCall,\r\n        claimsType,\r\n        size: rowsPerPage,\r\n        term: searchTerm,\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n    setResetKey(new Date().getTime());\r\n    dispatch(resetClaimsTabSearch());\r\n    dispatch(resetClaimsTabFilters());\r\n    setValue('processRef', null);\r\n    dispatch(getClaimsTabDetails({ requestType: searchTypeCall, claimsType, filterTerm: [], searchBy }));\r\n    dispatch(\r\n      getClaimsTabDetails({\r\n        requestType: filterTypeCall,\r\n        claimsType,\r\n        filterTerm: [],\r\n        searchBy,\r\n      })\r\n    );\r\n  };\r\n\r\n  const onSelectSearchBy = (searchByValue) => {\r\n    setSearchBy(searchByValue);\r\n    const claimsData = { ...claimsTabData };\r\n    claimsData.searchBy = searchByValue;\r\n    dispatch(getClaimsTabData(claimsData));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'claimRef',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.claimRef'),\r\n      narrow: true,\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.lossRef'),\r\n      narrow: true,\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'assured',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.insured'),\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'policyRef',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.policyRef'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.division'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'claimStatus',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.workflowStatus'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'claimStage',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.claimStage'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'assignedTo',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.assignedTo'),\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.team'),\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.priority'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'catCodesID',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.catCode'),\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'claimReceivedDateTime',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.claimReceivedDateTime'),\r\n      narrow: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'createdDate',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.createdDate'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'closedDate',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.closedDate'),\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'complexity',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.complexity'),\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.ucr'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.policyType'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'claimantName',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.claimant'),\r\n      visible: false,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'reinsured',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.reinsured'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'client',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.client'),\r\n    },\r\n    {\r\n      id: 'interest',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.interest'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.createdBy'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'company',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.company'),\r\n    },\r\n    {\r\n      id: 'coverholder',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.coverholder'),\r\n      nowrap: true,\r\n      visible: false,\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.lossDateTo'),\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossDateQualifier',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.lossDateQualifier'),\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossDetails',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.lossDetails'),\r\n      nowrap: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'pasClaimRef',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.pasClaimRef'),\r\n      nowrap: true,\r\n    },\r\n\r\n    {\r\n      id: 'pasStatus',\r\n      label: utils.string.t('claims.claimsTab.tablecolumns.pasStatus'),\r\n      nowrap: true,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <ClaimsTabView\r\n      claims={claimsTabTableRowDetails}\r\n      searchTerm={claimsTabData?.searchText || ''}\r\n      searchByTerm={searchBy}\r\n      sort={{\r\n        ...claimsTabData?.tableDetails?.sort,\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      viewFields={viewFields}\r\n      tableFilterFields={tableFilterFields}\r\n      isFetchingFilters={isFetchingFilters}\r\n      control={control}\r\n      resetKey={resetKey}\r\n      handlers={{\r\n        search: handleSearch,\r\n        searchFilter: handleSearchFilter,\r\n        resetFilter: handleResetFilter,\r\n        sort: handleSort,\r\n        changePage: handleChangePage,\r\n        changeRowsPerPage: handleChangeRowsPerPage,\r\n        toggleColumn,\r\n        resetSearch: handleResetSearch,\r\n        onSelectSearchBy,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}