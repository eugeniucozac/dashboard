{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\RfiQueryResponseLogs\\\\RfiQueryResponseLogs.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport RfiQueryResponseLogsView from './RfiQueryResponseLogs.view';\nimport * as utils from 'utils';\nimport { getRfiQueryHistory } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RfiQueryResponseLogs = function RfiQueryResponseLogs() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLoading = _useState2[0],\n      setIsLoading = _useState2[1];\n\n  var rfiType = 'Internal';\n  var sendTo = 'John Wood';\n  var queryCode = 'Document Version Incorrect';\n  var expectedResponseDate = '7 Jan 2021';\n  var queryId = '11111';\n  var documents = [{\n    id: '1',\n    name: 'Slip Document',\n    type: 'pdf',\n    version: '1.5',\n    owner: 'John Wood'\n  }];\n  var resolutionCodes = [{\n    id: '1',\n    label: 'ResCode1',\n    value: 'resCode1'\n  }, {\n    id: '2',\n    label: 'ResCode2',\n    value: 'resCode2'\n  }, {\n    id: '3',\n    label: 'ResCode3',\n    value: 'resCode3'\n  }, {\n    id: '4',\n    label: 'ResCode4',\n    value: 'resCode4'\n  }, {\n    id: '5',\n    label: 'ResCode5',\n    value: 'resCode5'\n  }, {\n    id: '6',\n    label: 'ResCode6',\n    value: 'resCode6'\n  }];\n  var fields = [{\n    name: 'resolutionCode',\n    label: 'Resolution code',\n    value: '',\n    type: 'select',\n    options: resolutionCodes,\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      'data-testid': 'resolutionCode'\n    }\n  }];\n\n  var handleSubmit = function handleSubmit() {\n    setIsLoading(true);\n    setInterval(function () {\n      setIsLoading(false);\n    }, 2000);\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: 'Close Ticket',\n    handler: handleSubmit\n  }]; //This has to be moved to redux and then has to be returned from an API\n\n  var caseTeamMembers = [{\n    userId: 1,\n    userName: 'John Wood',\n    userRole: 'Premium Processing Technician'\n  }, {\n    userId: 2,\n    userName: 'Harry Taylor',\n    userRole: 'Front End Contact'\n  }, {\n    userId: 3,\n    userName: 'Amy Dante',\n    userRole: 'Premium Processing Technician'\n  }, {\n    userId: 4,\n    userName: 'Robert Pattinson',\n    userRole: 'Front End Contact'\n  }, {\n    userId: 5,\n    userName: 'Olive Brown',\n    userRole: 'Premium Processing Technician'\n  }, {\n    userId: 6,\n    userName: 'Pam Smith',\n    userRole: 'Front End Contact'\n  }];\n\n  var _useState3 = useState(1),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedTab = _useState4[0],\n      setSelectedTab = _useState4[1];\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    dispatch(getRfiQueryHistory());\n    setSelectedTab(tabName);\n  };\n\n  var tabs = caseTeamMembers.map(function (caseTeamMember) {\n    return {\n      value: caseTeamMember.userId,\n      label: caseTeamMember.userName,\n      subLabel: caseTeamMember.userRole\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(RfiQueryResponseLogsView, {\n    fields: fields,\n    actions: actions,\n    isLoading: isLoading,\n    rfiType: rfiType,\n    sendTo: sendTo,\n    queryCode: queryCode,\n    expectedResponseDate: expectedResponseDate,\n    queryId: queryId,\n    documents: documents,\n    tabs: tabs,\n    selectedTab: selectedTab,\n    handleSelectTab: handleSelectTab\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RfiQueryResponseLogs, \"awkcmF+squV8UC//BF4cgfnBXAs=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RfiQueryResponseLogs;\nexport default RfiQueryResponseLogs;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiQueryResponseLogs\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/RfiQueryResponseLogs/RfiQueryResponseLogs.js"],"names":["React","useState","useDispatch","Yup","RfiQueryResponseLogsView","utils","getRfiQueryHistory","RfiQueryResponseLogs","dispatch","isLoading","setIsLoading","rfiType","sendTo","queryCode","expectedResponseDate","queryId","documents","id","name","type","version","owner","resolutionCodes","label","value","fields","options","validation","string","required","t","muiComponentProps","handleSubmit","setInterval","actions","handler","caseTeamMembers","userId","userName","userRole","selectedTab","setSelectedTab","handleSelectTab","tabName","tabs","map","caseTeamMember","subLabel"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport RfiQueryResponseLogsView from './RfiQueryResponseLogs.view';\r\nimport * as utils from 'utils';\r\nimport { getRfiQueryHistory } from 'stores';\r\n\r\nconst RfiQueryResponseLogs = () => {\r\n  const dispatch = useDispatch();\r\n  const [isLoading, setIsLoading] = useState(false);\r\n  const rfiType = 'Internal';\r\n  const sendTo = 'John Wood';\r\n  const queryCode = 'Document Version Incorrect';\r\n  const expectedResponseDate = '7 Jan 2021';\r\n  const queryId = '11111';\r\n  const documents = [\r\n    {\r\n      id: '1',\r\n      name: 'Slip Document',\r\n      type: 'pdf',\r\n      version: '1.5',\r\n      owner: 'John Wood',\r\n    },\r\n  ];\r\n\r\n  const resolutionCodes = [\r\n    { id: '1', label: 'ResCode1', value: 'resCode1' },\r\n    { id: '2', label: 'ResCode2', value: 'resCode2' },\r\n    { id: '3', label: 'ResCode3', value: 'resCode3' },\r\n    { id: '4', label: 'ResCode4', value: 'resCode4' },\r\n    { id: '5', label: 'ResCode5', value: 'resCode5' },\r\n    { id: '6', label: 'ResCode6', value: 'resCode6' },\r\n  ];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'resolutionCode',\r\n      label: 'Resolution code',\r\n      value: '',\r\n      type: 'select',\r\n      options: resolutionCodes,\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'resolutionCode',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleSubmit = () => {\r\n    setIsLoading(true);\r\n    setInterval(() => {\r\n      setIsLoading(false);\r\n    }, 2000);\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: 'Close Ticket',\r\n      handler: handleSubmit,\r\n    },\r\n  ];\r\n\r\n  //This has to be moved to redux and then has to be returned from an API\r\n  const caseTeamMembers = [\r\n    {\r\n      userId: 1,\r\n      userName: 'John Wood',\r\n      userRole: 'Premium Processing Technician',\r\n    },\r\n    {\r\n      userId: 2,\r\n      userName: 'Harry Taylor',\r\n      userRole: 'Front End Contact',\r\n    },\r\n    {\r\n      userId: 3,\r\n      userName: 'Amy Dante',\r\n      userRole: 'Premium Processing Technician',\r\n    },\r\n    {\r\n      userId: 4,\r\n      userName: 'Robert Pattinson',\r\n      userRole: 'Front End Contact',\r\n    },\r\n    {\r\n      userId: 5,\r\n      userName: 'Olive Brown',\r\n      userRole: 'Premium Processing Technician',\r\n    },\r\n    {\r\n      userId: 6,\r\n      userName: 'Pam Smith',\r\n      userRole: 'Front End Contact',\r\n    },\r\n  ];\r\n\r\n  const [selectedTab, setSelectedTab] = useState(1);\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    dispatch(getRfiQueryHistory());\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  const tabs = caseTeamMembers.map((caseTeamMember) => {\r\n    return { value: caseTeamMember.userId, label: caseTeamMember.userName, subLabel: caseTeamMember.userRole };\r\n  });\r\n\r\n  return (\r\n    <RfiQueryResponseLogsView\r\n      fields={fields}\r\n      actions={actions}\r\n      isLoading={isLoading}\r\n      rfiType={rfiType}\r\n      sendTo={sendTo}\r\n      queryCode={queryCode}\r\n      expectedResponseDate={expectedResponseDate}\r\n      queryId={queryId}\r\n      documents={documents}\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      handleSelectTab={handleSelectTab}\r\n    />\r\n  );\r\n};\r\n\r\nexport default RfiQueryResponseLogs;\r\n"]},"metadata":{},"sourceType":"module"}