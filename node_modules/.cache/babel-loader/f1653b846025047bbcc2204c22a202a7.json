{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\Placement\\\\Placement.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Route, Switch } from 'react-router'; // app\n\nimport styles from './Placement.styles';\nimport { useMedia } from 'hooks';\nimport { Breadcrumb, Layout } from 'components';\nimport { Bound, Marketing, MarketSheet, Documents, OpeningMemo, OpeningMemoSummary, ModellingList, PlacementOverview, PlacementSummaryTop, PlacementSummary } from 'modules';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, Divider, Hidden } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPlacementView.propTypes = {\n  isDev: PropTypes.bool,\n  isReady: PropTypes.bool,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n      name: PropTypes.string.isRequired,\n      label: PropTypes.string.isRequired,\n      route: PropTypes.string.isRequired,\n      showForIsBroker: PropTypes.bool,\n      showForPhysicalLoss: PropTypes.bool\n    })),\n    placement: PropTypes.object,\n    isBroker: PropTypes.bool,\n    statusBoundId: PropTypes.number\n  })),\n  isBroker: PropTypes.bool,\n  placementSelected: PropTypes.object,\n  placementExpanded: PropTypes.bool,\n  openingMemo: PropTypes.object,\n  market: PropTypes.object,\n  handlers: PropTypes.shape({\n    expandPlacement: PropTypes.func\n  })\n};\nexport function PlacementView(_ref) {\n  _s();\n\n  var isDev = _ref.isDev,\n      isReady = _ref.isReady,\n      breadcrumbs = _ref.breadcrumbs,\n      isBroker = _ref.isBroker,\n      placementSelected = _ref.placementSelected,\n      placementExpanded = _ref.placementExpanded,\n      openingMemo = _ref.openingMemo,\n      market = _ref.market,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'Placement'\n  })();\n  var media = useMedia(); // abort\n\n  if (!isReady) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.placementContainer,\n      children: [/*#__PURE__*/_jsxDEV(Hidden, {\n        smDown: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(PlacementSummaryTop, {\n            placement: placementSelected,\n            showToggle: true,\n            expanded: placementExpanded,\n            expandToggle: \"btn\",\n            handleExpand: handlers.expandPlacement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.breadcrumbBox,\n          children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n            links: breadcrumbs\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        testid: \"placement\",\n        isCentered: true,\n        children: [/*#__PURE__*/_jsxDEV(Layout, {\n          main: true,\n          padding: false,\n          children: [/*#__PURE__*/_jsxDEV(Hidden, {\n            mdUp: true,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mb: 5,\n              className: classes.breadcrumb,\n              children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n                links: breadcrumbs\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 95,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            \"data-testid\": \"placement-content\",\n            className: classes.placementContent,\n            children: /*#__PURE__*/_jsxDEV(Switch, {\n              children: [/*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.overview, \"/:id\"),\n                component: PlacementOverview\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.marketSheet, \"/:id\"),\n                component: MarketSheet\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: [\"\".concat(config.routes.placement.marketing.markets, \"/:id\"), \"\".concat(config.routes.placement.marketing.structuring, \"/:id\"), \"\".concat(config.routes.placement.marketing.mudmap, \"/:id\")],\n                component: Marketing\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 17\n              }, this), isBroker && /*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.modelling, \"/:id\"),\n                component: ModellingList\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 30\n              }, this), isBroker && /*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.checklist, \"/:id\"),\n                children: /*#__PURE__*/_jsxDEV(OpeningMemo, {\n                  origin: {\n                    path: 'placement',\n                    id: placementSelected.id\n                  },\n                  route: config.routes.placement.checklist,\n                  routeWithId: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.bound, \"/:id\"),\n                component: Bound\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Route, {\n                path: \"\".concat(config.routes.placement.documents, \"/:id\"),\n                component: Documents\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Layout, {\n          sidebar: media.tablet,\n          padding: false,\n          children: [openingMemo && /*#__PURE__*/_jsxDEV(Route, {\n            path: \"\".concat(config.routes.placement.checklist, \"/:id/:policyId\"),\n            children: [/*#__PURE__*/_jsxDEV(OpeningMemoSummary, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this), media.tablet ? /*#__PURE__*/_jsxDEV(PlacementSummary, {\n            placement: placementSelected,\n            showToggle: true,\n            expanded: placementExpanded,\n            expandToggle: \"btn\",\n            handleExpand: handlers.expandPlacement\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 136,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PlacementView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = PlacementView;\nPlacementView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PlacementView\",\n  \"props\": {\n    \"isDev\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isReady\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"breadcrumbs\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"breadcrumbs\": {\n              \"name\": \"arrayOf\",\n              \"value\": {\n                \"name\": \"shape\",\n                \"value\": {\n                  \"name\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  },\n                  \"label\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  },\n                  \"route\": {\n                    \"name\": \"string\",\n                    \"required\": true\n                  },\n                  \"showForIsBroker\": {\n                    \"name\": \"bool\",\n                    \"required\": false\n                  },\n                  \"showForPhysicalLoss\": {\n                    \"name\": \"bool\",\n                    \"required\": false\n                  }\n                }\n              },\n              \"required\": false\n            },\n            \"placement\": {\n              \"name\": \"object\",\n              \"required\": false\n            },\n            \"isBroker\": {\n              \"name\": \"bool\",\n              \"required\": false\n            },\n            \"statusBoundId\": {\n              \"name\": \"number\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isBroker\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placementSelected\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placementExpanded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"openingMemo\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"market\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"expandPlacement\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\Placement\\\\Placement.view.js\"] = {\n    name: \"PlacementView\",\n    docgenInfo: PlacementView.__docgenInfo,\n    path: \"src\\\\pages\\\\Placement\\\\Placement.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacementView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/Placement/Placement.view.js"],"names":["React","PropTypes","Route","Switch","styles","useMedia","Breadcrumb","Layout","Bound","Marketing","MarketSheet","Documents","OpeningMemo","OpeningMemoSummary","ModellingList","PlacementOverview","PlacementSummaryTop","PlacementSummary","config","makeStyles","Box","Divider","Hidden","PlacementView","propTypes","isDev","bool","isReady","breadcrumbs","arrayOf","shape","name","string","isRequired","label","route","showForIsBroker","showForPhysicalLoss","placement","object","isBroker","statusBoundId","number","placementSelected","placementExpanded","openingMemo","market","handlers","expandPlacement","func","classes","media","placementContainer","breadcrumbBox","breadcrumb","placementContent","routes","overview","marketSheet","marketing","markets","structuring","mudmap","modelling","checklist","path","id","bound","documents","tablet"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Route, Switch } from 'react-router';\r\n\r\n// app\r\nimport styles from './Placement.styles';\r\n\r\nimport { useMedia } from 'hooks';\r\nimport { Breadcrumb, Layout } from 'components';\r\nimport {\r\n  Bound,\r\n  Marketing,\r\n  MarketSheet,\r\n  Documents,\r\n  OpeningMemo,\r\n  OpeningMemoSummary,\r\n  ModellingList,\r\n  PlacementOverview,\r\n  PlacementSummaryTop,\r\n  PlacementSummary,\r\n} from 'modules';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, Divider, Hidden } from '@material-ui/core';\r\n\r\nPlacementView.propTypes = {\r\n  isDev: PropTypes.bool,\r\n  isReady: PropTypes.bool,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      breadcrumbs: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          name: PropTypes.string.isRequired,\r\n          label: PropTypes.string.isRequired,\r\n          route: PropTypes.string.isRequired,\r\n          showForIsBroker: PropTypes.bool,\r\n          showForPhysicalLoss: PropTypes.bool,\r\n        })\r\n      ),\r\n      placement: PropTypes.object,\r\n      isBroker: PropTypes.bool,\r\n      statusBoundId: PropTypes.number,\r\n    })\r\n  ),\r\n  isBroker: PropTypes.bool,\r\n  placementSelected: PropTypes.object,\r\n  placementExpanded: PropTypes.bool,\r\n  openingMemo: PropTypes.object,\r\n  market: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    expandPlacement: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function PlacementView({\r\n  isDev,\r\n  isReady,\r\n  breadcrumbs,\r\n  isBroker,\r\n  placementSelected,\r\n  placementExpanded,\r\n  openingMemo,\r\n  market,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Placement' })();\r\n  const media = useMedia();\r\n  // abort\r\n  if (!isReady) return null;\r\n\r\n  return (\r\n    <>\r\n      <Box className={classes.placementContainer}>\r\n        <Hidden smDown>\r\n          <Box>\r\n            <PlacementSummaryTop\r\n              placement={placementSelected}\r\n              showToggle={true}\r\n              expanded={placementExpanded}\r\n              expandToggle=\"btn\"\r\n              handleExpand={handlers.expandPlacement}\r\n            />\r\n          </Box>\r\n          <Box className={classes.breadcrumbBox}>\r\n            <Breadcrumb links={breadcrumbs} />\r\n            <Divider />\r\n          </Box>\r\n        </Hidden>\r\n\r\n        <Layout testid=\"placement\" isCentered>\r\n          <Layout main padding={false}>\r\n            <Hidden mdUp>\r\n              <Box mb={5} className={classes.breadcrumb}>\r\n                <Breadcrumb links={breadcrumbs} />\r\n                <Divider />\r\n              </Box>\r\n            </Hidden>\r\n            <Box data-testid=\"placement-content\" className={classes.placementContent}>\r\n              <Switch>\r\n                <Route path={`${config.routes.placement.overview}/:id`} component={PlacementOverview} />\r\n                <Route path={`${config.routes.placement.marketSheet}/:id`} component={MarketSheet} />\r\n                <Route\r\n                  path={[\r\n                    `${config.routes.placement.marketing.markets}/:id`,\r\n                    `${config.routes.placement.marketing.structuring}/:id`,\r\n                    `${config.routes.placement.marketing.mudmap}/:id`,\r\n                  ]}\r\n                  component={Marketing}\r\n                />\r\n                {isBroker && <Route path={`${config.routes.placement.modelling}/:id`} component={ModellingList} />}\r\n                {isBroker && (\r\n                  <Route path={`${config.routes.placement.checklist}/:id`}>\r\n                    <OpeningMemo\r\n                      origin={{ path: 'placement', id: placementSelected.id }}\r\n                      route={config.routes.placement.checklist}\r\n                      routeWithId\r\n                    />\r\n                  </Route>\r\n                )}\r\n                <Route path={`${config.routes.placement.bound}/:id`} component={Bound} />\r\n                <Route path={`${config.routes.placement.documents}/:id`} component={Documents} />\r\n              </Switch>\r\n            </Box>\r\n          </Layout>\r\n\r\n          <Layout sidebar={media.tablet} padding={false}>\r\n            {openingMemo && (\r\n              <Route path={`${config.routes.placement.checklist}/:id/:policyId`}>\r\n                <OpeningMemoSummary />\r\n                <Divider />\r\n              </Route>\r\n            )}\r\n\r\n            {media.tablet ? (\r\n              <PlacementSummary\r\n                placement={placementSelected}\r\n                showToggle={true}\r\n                expanded={placementExpanded}\r\n                expandToggle=\"btn\"\r\n                handleExpand={handlers.expandPlacement}\r\n              />\r\n            ) : null}\r\n          </Layout>\r\n        </Layout>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}