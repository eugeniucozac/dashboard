{"ast":null,"code":"import \"core-js/modules/es.parse-float\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var postPlacementAddLayer = function postPlacementAddLayer(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.addLayer',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postPlacementAddLayerRequest(formData));\n    dispatch(addLoader('postPlacementAddLayer'));\n\n    if (!formData || !formData.businessType) {\n      dispatch(postPlacementAddLayerFailure(defaultError));\n      dispatch(enqueueNotification('notification.addLayer.fail', 'error'));\n      dispatch(hideModal('ADD_PLACEMENT_LAYER'));\n      dispatch(removeLoader('postPlacementAddLayer'));\n      return;\n    } // get the data for POST\n\n\n    var body = {\n      placementId: get(getState(), 'placement.selected.id'),\n      departmentId: get(getState(), 'placement.selected.departmentId'),\n      businessTypeId: get(formData, 'businessType[0].id'),\n      isoCurrencyCode: get(formData, 'currency'),\n      notes: formData.notes,\n      amount: !formData.buydown ? parseFloat(formData.amount) : '',\n      excess: !formData.buydown ? parseFloat(formData.excess) : ''\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/placementlayer',\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postPlacementAddLayerSuccess(data));\n      dispatch(enqueueNotification('notification.addLayer.success', 'success'));\n      dispatch(hideModal('ADD_PLACEMENT_LAYER'));\n      dispatch(removeLoader('postPlacementAddLayer'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (placement.addLayer)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postPlacementAddLayerFailure(err));\n      dispatch(enqueueNotification('notification.addLayer.fail', 'error'));\n      dispatch(hideModal('ADD_PLACEMENT_LAYER'));\n      dispatch(removeLoader('postPlacementAddLayer'));\n      return err;\n    });\n  };\n};\nexport var postPlacementAddLayerRequest = function postPlacementAddLayerRequest(data) {\n  return {\n    type: 'PLACEMENT_LAYER_POST_REQUEST',\n    payload: data\n  };\n};\nexport var postPlacementAddLayerSuccess = function postPlacementAddLayerSuccess(data) {\n  return {\n    type: 'PLACEMENT_LAYER_POST_SUCCESS',\n    payload: data\n  };\n};\nexport var postPlacementAddLayerFailure = function postPlacementAddLayerFailure(error) {\n  return {\n    type: 'PLACEMENT_LAYER_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.addPlacementLayer.js"],"names":["get","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","postPlacementAddLayer","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postPlacementAddLayerRequest","businessType","postPlacementAddLayerFailure","body","placementId","departmentId","businessTypeId","isoCurrencyCode","notes","amount","buydown","parseFloat","excess","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","postPlacementAddLayerSuccess","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postPlacementAddLayer = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.addLayer',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postPlacementAddLayerRequest(formData));\r\n  dispatch(addLoader('postPlacementAddLayer'));\r\n\r\n  if (!formData || !formData.businessType) {\r\n    dispatch(postPlacementAddLayerFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.addLayer.fail', 'error'));\r\n    dispatch(hideModal('ADD_PLACEMENT_LAYER'));\r\n    dispatch(removeLoader('postPlacementAddLayer'));\r\n    return;\r\n  }\r\n\r\n  // get the data for POST\r\n  const body = {\r\n    placementId: get(getState(), 'placement.selected.id'),\r\n    departmentId: get(getState(), 'placement.selected.departmentId'),\r\n    businessTypeId: get(formData, 'businessType[0].id'),\r\n    isoCurrencyCode: get(formData, 'currency'),\r\n    notes: formData.notes,\r\n    amount: !formData.buydown ? parseFloat(formData.amount) : '',\r\n    excess: !formData.buydown ? parseFloat(formData.excess) : '',\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/placementlayer',\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postPlacementAddLayerSuccess(data));\r\n      dispatch(enqueueNotification('notification.addLayer.success', 'success'));\r\n      dispatch(hideModal('ADD_PLACEMENT_LAYER'));\r\n      dispatch(removeLoader('postPlacementAddLayer'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (placement.addLayer)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postPlacementAddLayerFailure(err));\r\n      dispatch(enqueueNotification('notification.addLayer.fail', 'error'));\r\n      dispatch(hideModal('ADD_PLACEMENT_LAYER'));\r\n      dispatch(removeLoader('postPlacementAddLayer'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postPlacementAddLayerRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_POST_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementAddLayerSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_POST_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementAddLayerFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}