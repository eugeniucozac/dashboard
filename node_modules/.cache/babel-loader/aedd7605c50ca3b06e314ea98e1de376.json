{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DepartmentAccounts\\\\DepartmentAccounts.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport toNumber from 'lodash/toNumber';\nimport get from 'lodash/get';\nimport * as Yup from 'yup'; // app\n\nimport { DepartmentAccountsView } from './DepartmentAccounts.view';\nimport { Translate } from 'components';\nimport { getPlacementList, getPlacementDetails, ntuPlacement, deselectPlacement, removePlacement, showModal, getLocationGroupsForPlacement, selectPlacementList, selectPlacementSort } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DepartmentAccounts() {\n  _s();\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var media = useMedia();\n  var today = utils.date.today();\n  var initialMonths = media.mobile ? [today] : [today, utils.date.nextMonth(today).date];\n  var urlDepartmentId = toNumber(get(params, 'id'));\n  var placementList = useSelector(selectPlacementList);\n  var placementSort = useSelector(selectPlacementSort);\n  var isPhysicalLoss = useSelector(function (state) {\n    return utils.departments.isPhysicalLoss(get(state, 'user.departmentSelected'));\n  });\n\n  var _useState = useState({\n    insured: null,\n    department: null\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      filters = _useState2[0],\n      setFilters = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      calendarView = _useState4[0],\n      setCalendarView = _useState4[1];\n\n  var _useState5 = useState(initialMonths),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayMonthList = _useState6[0],\n      setDisplayMonthList = _useState6[1];\n\n  useEffect(function () {\n    dispatch(deselectPlacement());\n    setDisplayMonthList(initialMonths);\n  }, [urlDepartmentId] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var clickNewEnquiry = function clickNewEnquiry(event) {\n    dispatch(showModal({\n      component: 'NEW_ENQUIRY',\n      props: {\n        title: 'submission.createNew',\n        fullWidth: true,\n        maxWidth: 'sm',\n        disableAutoFocus: true\n      }\n    }));\n  };\n\n  var handleMonthChange = function handleMonthChange(date) {\n    setDisplayMonthList([date]);\n  };\n\n  var handleSearch = function handleSearch(query, dept) {\n    setCalendarView(false);\n    return dispatch(getPlacementList({\n      query: query,\n      dept: dept\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getPlacementList({\n      page: newPage + 1\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getPlacementList({\n      size: rowsPerPage\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getPlacementList({\n      orderBy: by,\n      direction: dir\n    }));\n  };\n\n  var handleClickRow = function handleClickRow(id) {\n    return function (event) {\n      dispatch(getPlacementDetails(id));\n    };\n  };\n\n  var handleClickRowMobile = function handleClickRowMobile(id) {\n    return function (event) {\n      dispatch(getLocationGroupsForPlacement(id));\n    };\n  };\n\n  var handleDoubleClickRow = function handleDoubleClickRow(id) {\n    return function (event) {\n      var route = isPhysicalLoss ? config.routes.placement.overview : config.routes.placement.marketing.markets;\n      history.push(\"\".concat(route, \"/\").concat(id));\n    };\n  };\n\n  var handleNtuClick = function handleNtuClick(popoverData) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: 'renewals.ntuPlacement',\n        subtitle: utils.string.t('renewals.ntuPlacementHint', {\n          placement: popoverData.title\n        }),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          submitHandler: function submitHandler() {\n            dispatch(ntuPlacement(popoverData.placement, popoverData === null || popoverData === void 0 ? void 0 : popoverData.calendarView));\n          }\n        }\n      }\n    }));\n  };\n\n  var handleEditPlacementClick = function handleEditPlacementClick(popoverData) {\n    dispatch(showModal({\n      component: 'EDIT_PLACEMENT',\n      props: {\n        title: 'renewals.editPlacement',\n        subtitle: utils.string.t('renewals.editPlacementHint', {\n          placement: popoverData.title\n        }),\n        fullWidth: true,\n        maxWidth: 'md',\n        componentProps: {\n          placement: popoverData.placement,\n          calendarView: popoverData.calendarView\n        }\n      }\n    }));\n  };\n\n  var handleRemovePlacementClick = function handleRemovePlacementClick(popoverData) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: 'renewals.removePlacement',\n        subtitle: utils.string.t('renewals.removePlacementHint', {\n          placement: popoverData.title\n        }),\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          submitHandler: function submitHandler() {\n            dispatch(removePlacement(popoverData.placement, popoverData === null || popoverData === void 0 ? void 0 : popoverData.calendarView));\n          }\n        }\n      }\n    }));\n  };\n\n  var handleAddButtonClick = function handleAddButtonClick(date, next) {\n    var monthList = _toConsumableArray(displayMonthList);\n\n    next ? monthList.push(date) : monthList.unshift(date);\n    setDisplayMonthList(monthList);\n  };\n\n  var fields = [{\n    gridSize: {\n      xs: 12\n    },\n    name: 'insured',\n    type: 'text',\n    placeholder: utils.string.t('renewals.searchInsureds'),\n    value: '',\n    validation: Yup.string().test({\n      name: 'insuredLength',\n      test: function test(value) {\n        return value ? value.length >= 2 : true;\n      },\n      message: utils.string.t('validation.string.min'),\n      params: {\n        min: 2\n      }\n    })\n  }];\n  var actions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {\n      var insured = get(values, 'insured');\n      setFilters({\n        insured: insured\n      });\n      handleSearch(insured, urlDepartmentId);\n    }\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: function handler() {\n      if (filters.insured || filters.department) {\n        setFilters({\n          insured: null,\n          department: null\n        });\n        handleSearch('', null);\n        setCalendarView(true);\n      }\n    }\n  }];\n  var cols = [{\n    id: 'insureds',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.insured_plural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 30\n    }, this),\n    style: {\n      width: '18vw'\n    }\n  }, {\n    id: 'clients',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.client_plural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 29\n    }, this),\n    style: {\n      minWidth: '8vw',\n      maxWidth: '8vw'\n    }\n  }, {\n    id: 'office',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.office_plural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 28\n    }, this),\n    style: {\n      minWidth: '9vw',\n      maxWidth: '9vw'\n    }\n  }, {\n    id: 'inceptionDate',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: media.wideUp ? 'app.inceptionDate' : 'app.inception'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 207,\n      columnNumber: 14\n    }, this),\n    nowrap: true,\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    }\n  }, {\n    id: 'statusLabel',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 211,\n      columnNumber: 33\n    }, this)\n  }, {\n    id: 'brokers',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.broker_plural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 212,\n      columnNumber: 29\n    }, this)\n  }, {\n    id: 'cobrokers',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"app.cobroker_plural\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 31\n    }, this),\n    nowrap: true\n  }, {\n    id: 'actions',\n    empty: true\n  }];\n  return /*#__PURE__*/_jsxDEV(DepartmentAccountsView, {\n    props: {\n      rows: placementList.items,\n      cols: cols,\n      sort: _objectSpread(_objectSpread({}, placementSort), {}, {\n        type: 'date'\n      }),\n      pagination: {\n        page: placementList.page - 1,\n        rowsTotal: placementList.itemsTotal,\n        rowsPerPage: placementList.pageSize\n      },\n      handlers: {\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage,\n        handleSort: handleSort,\n        handleClickRow: media.mobile ? handleClickRowMobile : handleClickRow,\n        handleDoubleClickRow: handleDoubleClickRow,\n        handleNtuClick: handleNtuClick,\n        handleEditPlacementClick: handleEditPlacementClick,\n        handleRemovePlacementClick: handleRemovePlacementClick\n      }\n    },\n    fields: fields,\n    actions: actions,\n    deptId: urlDepartmentId,\n    media: media,\n    calendarView: calendarView,\n    displayMonthList: displayMonthList,\n    handleAddButtonClick: handleAddButtonClick,\n    handleMonthChange: handleMonthChange,\n    clickNewEnquiry: clickNewEnquiry\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 218,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartmentAccounts, \"2ZGIjOMqf9XOD1btuaNTq5AtNcc=\", false, function () {\n  return [useDispatch, useHistory, useParams, useMedia, useSelector, useSelector, useSelector];\n});\n\n_c = DepartmentAccounts;\nDepartmentAccounts.displayName = \"DepartmentAccounts\";\nDepartmentAccounts.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DepartmentAccounts\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\DepartmentAccounts\\\\DepartmentAccounts.js\"] = {\n    name: \"DepartmentAccounts\",\n    docgenInfo: DepartmentAccounts.__docgenInfo,\n    path: \"src\\\\modules\\\\DepartmentAccounts\\\\DepartmentAccounts.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentAccounts\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DepartmentAccounts/DepartmentAccounts.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useHistory","useParams","toNumber","get","Yup","DepartmentAccountsView","Translate","getPlacementList","getPlacementDetails","ntuPlacement","deselectPlacement","removePlacement","showModal","getLocationGroupsForPlacement","selectPlacementList","selectPlacementSort","useMedia","utils","config","DepartmentAccounts","dispatch","history","params","media","today","date","initialMonths","mobile","nextMonth","urlDepartmentId","placementList","placementSort","isPhysicalLoss","state","departments","insured","department","filters","setFilters","calendarView","setCalendarView","displayMonthList","setDisplayMonthList","clickNewEnquiry","event","component","props","title","fullWidth","maxWidth","disableAutoFocus","handleMonthChange","handleSearch","query","dept","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","orderBy","direction","handleClickRow","id","handleClickRowMobile","handleDoubleClickRow","route","routes","placement","overview","marketing","markets","push","handleNtuClick","popoverData","subtitle","string","t","componentProps","submitHandler","handleEditPlacementClick","handleRemovePlacementClick","handleAddButtonClick","next","monthList","unshift","fields","gridSize","xs","name","type","placeholder","value","validation","test","length","message","min","actions","label","handler","values","cols","style","width","minWidth","wideUp","nowrap","sort","empty","rows","items","pagination","rowsTotal","itemsTotal","pageSize","handlers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport toNumber from 'lodash/toNumber';\r\nimport get from 'lodash/get';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { DepartmentAccountsView } from './DepartmentAccounts.view';\r\nimport { Translate } from 'components';\r\nimport {\r\n  getPlacementList,\r\n  getPlacementDetails,\r\n  ntuPlacement,\r\n  deselectPlacement,\r\n  removePlacement,\r\n  showModal,\r\n  getLocationGroupsForPlacement,\r\n  selectPlacementList,\r\n  selectPlacementSort,\r\n} from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function DepartmentAccounts() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const media = useMedia();\r\n\r\n  const today = utils.date.today();\r\n  const initialMonths = media.mobile ? [today] : [today, utils.date.nextMonth(today).date];\r\n\r\n  const urlDepartmentId = toNumber(get(params, 'id'));\r\n  const placementList = useSelector(selectPlacementList);\r\n  const placementSort = useSelector(selectPlacementSort);\r\n  const isPhysicalLoss = useSelector((state) => utils.departments.isPhysicalLoss(get(state, 'user.departmentSelected')));\r\n  const [filters, setFilters] = useState({ insured: null, department: null });\r\n  const [calendarView, setCalendarView] = useState(true);\r\n  const [displayMonthList, setDisplayMonthList] = useState(initialMonths);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(deselectPlacement());\r\n      setDisplayMonthList(initialMonths);\r\n    },\r\n    [urlDepartmentId] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const clickNewEnquiry = (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'NEW_ENQUIRY',\r\n        props: {\r\n          title: 'submission.createNew',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          disableAutoFocus: true,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleMonthChange = (date) => {\r\n    setDisplayMonthList([date]);\r\n  };\r\n\r\n  const handleSearch = (query, dept) => {\r\n    setCalendarView(false);\r\n    return dispatch(getPlacementList({ query, dept }));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getPlacementList({ page: newPage + 1 }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getPlacementList({ size: rowsPerPage }));\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getPlacementList({ orderBy: by, direction: dir }));\r\n  };\r\n\r\n  const handleClickRow = (id) => (event) => {\r\n    dispatch(getPlacementDetails(id));\r\n  };\r\n\r\n  const handleClickRowMobile = (id) => (event) => {\r\n    dispatch(getLocationGroupsForPlacement(id));\r\n  };\r\n\r\n  const handleDoubleClickRow = (id) => (event) => {\r\n    const route = isPhysicalLoss ? config.routes.placement.overview : config.routes.placement.marketing.markets;\r\n    history.push(`${route}/${id}`);\r\n  };\r\n\r\n  const handleNtuClick = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: 'renewals.ntuPlacement',\r\n          subtitle: utils.string.t('renewals.ntuPlacementHint', { placement: popoverData.title }),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            submitHandler: () => {\r\n              dispatch(ntuPlacement(popoverData.placement, popoverData?.calendarView));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditPlacementClick = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_PLACEMENT',\r\n        props: {\r\n          title: 'renewals.editPlacement',\r\n          subtitle: utils.string.t('renewals.editPlacementHint', { placement: popoverData.title }),\r\n          fullWidth: true,\r\n          maxWidth: 'md',\r\n          componentProps: {\r\n            placement: popoverData.placement,\r\n            calendarView: popoverData.calendarView,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleRemovePlacementClick = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: 'renewals.removePlacement',\r\n          subtitle: utils.string.t('renewals.removePlacementHint', { placement: popoverData.title }),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            submitHandler: () => {\r\n              dispatch(removePlacement(popoverData.placement, popoverData?.calendarView));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAddButtonClick = (date, next) => {\r\n    const monthList = [...displayMonthList];\r\n    next ? monthList.push(date) : monthList.unshift(date);\r\n    setDisplayMonthList(monthList);\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      gridSize: { xs: 12 },\r\n      name: 'insured',\r\n      type: 'text',\r\n      placeholder: utils.string.t('renewals.searchInsureds'),\r\n      value: '',\r\n      validation: Yup.string().test({\r\n        name: 'insuredLength',\r\n        test: (value) => (value ? value.length >= 2 : true),\r\n        message: utils.string.t('validation.string.min'),\r\n        params: { min: 2 },\r\n      }),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.searchLabel'),\r\n      handler: (values) => {\r\n        const insured = get(values, 'insured');\r\n\r\n        setFilters({ insured });\r\n        handleSearch(insured, urlDepartmentId);\r\n      },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: () => {\r\n        if (filters.insured || filters.department) {\r\n          setFilters({ insured: null, department: null });\r\n          handleSearch('', null);\r\n          setCalendarView(true);\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  const cols = [\r\n    { id: 'insureds', label: <Translate label=\"app.insured_plural\" />, style: { width: '18vw' } },\r\n    { id: 'clients', label: <Translate label=\"app.client_plural\" />, style: { minWidth: '8vw', maxWidth: '8vw' } },\r\n    { id: 'office', label: <Translate label=\"app.office_plural\" />, style: { minWidth: '9vw', maxWidth: '9vw' } },\r\n    {\r\n      id: 'inceptionDate',\r\n      label: <Translate label={media.wideUp ? 'app.inceptionDate' : 'app.inception'} />,\r\n      nowrap: true,\r\n      sort: { type: 'date', direction: 'asc' },\r\n    },\r\n    { id: 'statusLabel', label: <Translate label=\"app.status\" /> },\r\n    { id: 'brokers', label: <Translate label=\"app.broker_plural\" /> },\r\n    { id: 'cobrokers', label: <Translate label=\"app.cobroker_plural\" />, nowrap: true },\r\n    { id: 'actions', empty: true },\r\n  ];\r\n\r\n  return (\r\n    <DepartmentAccountsView\r\n      props={{\r\n        rows: placementList.items,\r\n        cols: cols,\r\n        sort: {\r\n          ...placementSort,\r\n          type: 'date',\r\n        },\r\n        pagination: {\r\n          page: placementList.page - 1,\r\n          rowsTotal: placementList.itemsTotal,\r\n          rowsPerPage: placementList.pageSize,\r\n        },\r\n        handlers: {\r\n          handleChangePage,\r\n          handleChangeRowsPerPage,\r\n          handleSort,\r\n          handleClickRow: media.mobile ? handleClickRowMobile : handleClickRow,\r\n          handleDoubleClickRow,\r\n          handleNtuClick,\r\n          handleEditPlacementClick,\r\n          handleRemovePlacementClick,\r\n        },\r\n      }}\r\n      fields={fields}\r\n      actions={actions}\r\n      deptId={urlDepartmentId}\r\n      media={media}\r\n      calendarView={calendarView}\r\n      displayMonthList={displayMonthList}\r\n      handleAddButtonClick={handleAddButtonClick}\r\n      handleMonthChange={handleMonthChange}\r\n      clickNewEnquiry={clickNewEnquiry}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}