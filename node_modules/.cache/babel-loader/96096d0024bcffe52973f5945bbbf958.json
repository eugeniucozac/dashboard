{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TaskDetails.view.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { TasksAdditionInfo } from './TasksAdditionInfo';\nimport * as utils from 'utils';\nimport { Layout, FormGrid, FormRadio, FormText, Button, FormLabel, TableToolbar } from 'components';\nimport styles from './TaskDetails.styles';\nimport { TaskCheckList } from 'modules';\nimport { ADVICE_AND_SETTLEMENT, FIRST_ADVICE_FEEDBACK, SANCTIONS_CHECK_KEY } from 'consts'; // mui\n\nimport { makeStyles, Card } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskDetailsView.propTypes = {\n  taskObj: PropTypes.object.isRequired,\n  fields: PropTypes.array.isRequired,\n  taskInfo: PropTypes.array.isRequired,\n  currencyPurchasedValue: PropTypes.string.isRequired,\n  sanctionsCheckState: PropTypes.string,\n  control: PropTypes.object,\n  currencyValue: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    setCurrencyValue: PropTypes.func.isRequired,\n    handleClose: PropTypes.func,\n    setStatusType: PropTypes.func,\n    handleCancel: PropTypes.func\n  }),\n  isDirtyRef: PropTypes.bool.isRequired,\n  setIsDirty: PropTypes.func.isRequired,\n  handleDirtyCheck: PropTypes.func.isRequired,\n  handleSubmit: PropTypes.func.isRequired,\n  errors: PropTypes.object.isRequired,\n  handleEditLoss: PropTypes.func.isRequired\n};\nexport function TaskDetailsView(_ref) {\n  _s();\n\n  var taskObj = _ref.taskObj,\n      taskInfo = _ref.taskInfo,\n      fields = _ref.fields,\n      isTaskDetailsLoading = _ref.isTaskDetailsLoading,\n      currencyPurchasedValue = _ref.currencyPurchasedValue,\n      control = _ref.control,\n      currencyValue = _ref.currencyValue,\n      handlers = _ref.handlers,\n      lossInfo = _ref.lossInfo,\n      policyInfo = _ref.policyInfo,\n      claimInfo = _ref.claimInfo,\n      underWritingInfo = _ref.underWritingInfo,\n      underWritingGroupColumns = _ref.underWritingGroupColumns,\n      isDirtyRef = _ref.isDirtyRef,\n      setIsDirty = _ref.setIsDirty,\n      handleDirtyCheck = _ref.handleDirtyCheck,\n      handleSubmit = _ref.handleSubmit,\n      errors = _ref.errors,\n      getValues = _ref.getValues,\n      setValue = _ref.setValue,\n      sanctionCheckStatus = _ref.sanctionCheckStatus,\n      handleEditLoss = _ref.handleEditLoss;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPurchasedCurrencyRequired = _useState2[0],\n      setIsPurchasedCurrencyRequired = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCurrencyChanged = _useState4[0],\n      setIsCurrencyChanged = _useState4[1];\n\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n  var isTaskSanctionsCheck = (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === SANCTIONS_CHECK_KEY;\n  useEffect(function () {\n    if (currencyPurchasedValue !== currencyValue) {\n      if ((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT) {\n        setIsCurrencyChanged(true);\n      }\n\n      handlers.setCurrencyValue(currencyPurchasedValue);\n    }\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setIsPurchasedCurrencyRequired((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT ? true : false);\n  }, [taskObj]);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      padding: true,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(TasksAdditionInfo, {\n          lossInfo: lossInfo,\n          policyInfo: policyInfo,\n          claimInfo: claimInfo,\n          taskInfo: taskInfo,\n          underWritingInfo: underWritingInfo,\n          underWritingGroupColumns: underWritingGroupColumns,\n          taskObj: taskObj,\n          handleEditLoss: handleEditLoss,\n          isTaskDetailsLoading: isTaskDetailsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, this), isPurchasedCurrencyRequired && /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased'), ' ', '? :', '   ', '*'),\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 100,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sanctionCheckContainer,\n        children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n          nestedClasses: {\n            root: classes.tableToolbar\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'), \": \"),\n              align: \"left\",\n              nestedClasses: {\n                root: classes.sanctionCheckLabel\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'sanctionsCheckState')), {}, {\n              control: control\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.commmentsContainer,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.comments'), \" \"),\n              align: \"left\",\n              nestedClasses: {\n                root: classes.commmentsLabel\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'comments')), {}, {\n              control: control,\n              error: errors.comments\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this), (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === FIRST_ADVICE_FEEDBACK && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.notesContainer,\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.notes'), \" \"),\n            align: \"left\",\n            nestedClasses: {\n              root: classes.commmentsLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'details')), {}, {\n            control: control,\n            error: errors.details\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this), !isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TaskCheckList, _objectSpread({\n        task: taskObj,\n        currencyPurchasedValue: currencyPurchasedValue,\n        isCurrencyChanged: isCurrencyChanged,\n        isDirtyRef: isDirtyRef,\n        setIsDirty: setIsDirty,\n        handleDirtyCheck: handleDirtyCheck,\n        sanctionCheckStatus: sanctionCheckStatus || ''\n      }, (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === FIRST_ADVICE_FEEDBACK ? {\n        formHandlers: {\n          getValues: getValues,\n          setValue: setValue\n        }\n      } : null), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && (taskObj === null || taskObj === void 0 ? void 0 : taskObj.status) !== utils.string.t('claims.claimRefTasks.status.completed') && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.fotterButtonGroup,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.cancel'),\n          onClick: handlers.handleCancel,\n          variant: \"outlined\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.button\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.complete'),\n          onClick: handleSubmit(handlers.handleClose),\n          color: \"primary\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.button\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 170,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 162,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskDetailsView, \"e43bqQRue/gTeh8KEIJFFaRf9Vk=\");\n\n_c = TaskDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetailsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TaskDetails.view.js"],"names":["React","useState","useEffect","PropTypes","TasksAdditionInfo","utils","Layout","FormGrid","FormRadio","FormText","Button","FormLabel","TableToolbar","styles","TaskCheckList","ADVICE_AND_SETTLEMENT","FIRST_ADVICE_FEEDBACK","SANCTIONS_CHECK_KEY","makeStyles","Card","TaskDetailsView","propTypes","taskObj","object","isRequired","fields","array","taskInfo","currencyPurchasedValue","string","sanctionsCheckState","control","currencyValue","handlers","shape","setCurrencyValue","func","handleClose","setStatusType","handleCancel","isDirtyRef","bool","setIsDirty","handleDirtyCheck","handleSubmit","errors","handleEditLoss","isTaskDetailsLoading","lossInfo","policyInfo","claimInfo","underWritingInfo","underWritingGroupColumns","getValues","setValue","sanctionCheckStatus","isPurchasedCurrencyRequired","setIsPurchasedCurrencyRequired","isCurrencyChanged","setIsCurrencyChanged","classes","name","isTaskSanctionsCheck","taskDefKey","wrapper","root","tableToolbar","t","viewLabel","form","getFieldProps","sanctionCheckContainer","sanctionCheckLabel","commmentsContainer","commmentsLabel","comments","notesContainer","details","formHandlers","status","fotterButtonGroup","btn","button"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { TasksAdditionInfo } from './TasksAdditionInfo';\r\nimport * as utils from 'utils';\r\nimport { Layout, FormGrid, FormRadio, FormText, Button, FormLabel, TableToolbar } from 'components';\r\nimport styles from './TaskDetails.styles';\r\nimport { TaskCheckList } from 'modules';\r\nimport { ADVICE_AND_SETTLEMENT, FIRST_ADVICE_FEEDBACK, SANCTIONS_CHECK_KEY } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Card } from '@material-ui/core';\r\n\r\nTaskDetailsView.propTypes = {\r\n  taskObj: PropTypes.object.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  taskInfo: PropTypes.array.isRequired,\r\n  currencyPurchasedValue: PropTypes.string.isRequired,\r\n  sanctionsCheckState: PropTypes.string,\r\n  control: PropTypes.object,\r\n  currencyValue: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    setCurrencyValue: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func,\r\n    setStatusType: PropTypes.func,\r\n    handleCancel: PropTypes.func,\r\n  }),\r\n  isDirtyRef: PropTypes.bool.isRequired,\r\n  setIsDirty: PropTypes.func.isRequired,\r\n  handleDirtyCheck: PropTypes.func.isRequired,\r\n  handleSubmit: PropTypes.func.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  handleEditLoss: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function TaskDetailsView({\r\n  taskObj,\r\n  taskInfo,\r\n  fields,\r\n  isTaskDetailsLoading,\r\n  currencyPurchasedValue,\r\n  control,\r\n  currencyValue,\r\n  handlers,\r\n  lossInfo,\r\n  policyInfo,\r\n  claimInfo,\r\n  underWritingInfo,\r\n  underWritingGroupColumns,\r\n  isDirtyRef,\r\n  setIsDirty,\r\n  handleDirtyCheck,\r\n  handleSubmit,\r\n  errors,\r\n  getValues,\r\n  setValue,\r\n  sanctionCheckStatus,\r\n  handleEditLoss,\r\n}) {\r\n  const [isPurchasedCurrencyRequired, setIsPurchasedCurrencyRequired] = useState(false);\r\n  const [isCurrencyChanged, setIsCurrencyChanged] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n\r\n  const isTaskSanctionsCheck = taskObj?.taskDefKey === SANCTIONS_CHECK_KEY;\r\n\r\n  useEffect(() => {\r\n    if (currencyPurchasedValue !== currencyValue) {\r\n      if (taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT) {\r\n        setIsCurrencyChanged(true);\r\n      }\r\n      handlers.setCurrencyValue(currencyPurchasedValue);\r\n    }\r\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsPurchasedCurrencyRequired(taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT ? true : false);\r\n  }, [taskObj]);\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Layout main padding>\r\n        <Card className={classes.root}>\r\n          <TasksAdditionInfo\r\n            lossInfo={lossInfo}\r\n            policyInfo={policyInfo}\r\n            claimInfo={claimInfo}\r\n            taskInfo={taskInfo}\r\n            underWritingInfo={underWritingInfo}\r\n            underWritingGroupColumns={underWritingGroupColumns}\r\n            taskObj={taskObj}\r\n            handleEditLoss={handleEditLoss}\r\n            isTaskDetailsLoading={isTaskDetailsLoading}\r\n          />\r\n        </Card>\r\n\r\n        {isPurchasedCurrencyRequired && (\r\n          <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased')}${' '}${'? :'}${'   '}${'*'}`}\r\n                nestedClasses={{ root: classes.viewLabel }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)} />\r\n            </FormGrid>\r\n          </TableToolbar>\r\n        )}\r\n        {isTaskSanctionsCheck && (\r\n          <div className={classes.sanctionCheckContainer}>\r\n            <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n              <FormGrid>\r\n                <FormLabel\r\n                  label={`${utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus')}: `}\r\n                  align=\"left\"\r\n                  nestedClasses={{ root: classes.sanctionCheckLabel }}\r\n                />\r\n              </FormGrid>\r\n              <FormGrid>\r\n                <FormRadio {...utils.form.getFieldProps(fields, 'sanctionsCheckState')} control={control} />\r\n              </FormGrid>\r\n            </TableToolbar>\r\n            <div className={classes.commmentsContainer}>\r\n              <FormGrid>\r\n                <FormLabel\r\n                  label={`${utils.string.t('claims.processing.taskDetailsLabels.comments')} `}\r\n                  align=\"left\"\r\n                  nestedClasses={{ root: classes.commmentsLabel }}\r\n                />\r\n                <FormText {...utils.form.getFieldProps(fields, 'comments')} control={control} error={errors.comments} />\r\n              </FormGrid>\r\n            </div>\r\n          </div>\r\n        )}\r\n        {taskObj?.taskDefKey === FIRST_ADVICE_FEEDBACK && (\r\n          <div className={classes.notesContainer}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.notes')} `}\r\n                align=\"left\"\r\n                nestedClasses={{ root: classes.commmentsLabel }}\r\n              />\r\n              <FormText {...utils.form.getFieldProps(fields, 'details')} control={control} error={errors.details} />\r\n            </FormGrid>\r\n          </div>\r\n        )}\r\n\r\n        {!isTaskSanctionsCheck && (\r\n          <TaskCheckList\r\n            task={taskObj}\r\n            currencyPurchasedValue={currencyPurchasedValue}\r\n            isCurrencyChanged={isCurrencyChanged}\r\n            isDirtyRef={isDirtyRef}\r\n            setIsDirty={setIsDirty}\r\n            handleDirtyCheck={handleDirtyCheck}\r\n            sanctionCheckStatus={sanctionCheckStatus || ''}\r\n            {...(taskObj?.taskDefKey === FIRST_ADVICE_FEEDBACK ? { formHandlers: { getValues: getValues, setValue: setValue } } : null)}\r\n          />\r\n        )}\r\n        {isTaskSanctionsCheck && taskObj?.status !== utils.string.t('claims.claimRefTasks.status.completed') && (\r\n          <div className={classes.fotterButtonGroup}>\r\n            <Button\r\n              text={utils.string.t('app.cancel')}\r\n              onClick={handlers.handleCancel}\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              nestedClasses={{ btn: classes.button }}\r\n            />\r\n            <Button\r\n              text={utils.string.t('app.complete')}\r\n              onClick={handleSubmit(handlers.handleClose)}\r\n              color=\"primary\"\r\n              size=\"medium\"\r\n              nestedClasses={{ btn: classes.button }}\r\n            />\r\n          </div>\r\n        )}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}