{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as constants from 'consts';\nimport types from './types';\nexport var expandNav = function expandNav() {\n  return {\n    type: 'NAV_EXPAND'\n  };\n};\nexport var collapseNav = function collapseNav() {\n  return {\n    type: 'NAV_COLLAPSE'\n  };\n};\nexport var expandSidebar = function expandSidebar() {\n  return {\n    type: 'SIDEBAR_EXPAND'\n  };\n};\nexport var collapseSidebar = function collapseSidebar() {\n  return {\n    type: 'SIDEBAR_COLLAPSE'\n  };\n};\nexport var addLoader = function addLoader(payload) {\n  return {\n    type: 'LOADER_ADD',\n    payload: payload\n  };\n};\nexport var removeLoader = function removeLoader(payload) {\n  return {\n    type: 'LOADER_REMOVE',\n    payload: payload\n  };\n};\nexport var showModal = function showModal(payload) {\n  return {\n    type: types.MODAL_SHOW,\n    payload: payload\n  };\n};\nexport var hideModal = function hideModal(type) {\n  return {\n    type: types.MODAL_HIDE,\n    payload: type\n  };\n};\nexport var fullScreenModal = function fullScreenModal(payload) {\n  return {\n    type: 'MODAL_FULLSCREEN',\n    payload: payload\n  };\n};\nexport var enqueueNotification = function enqueueNotification(str, type) {\n  var _ref = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : {},\n      data = _ref.data,\n      delay = _ref.delay,\n      keepAfterUrlChange = _ref.keepAfterUrlChange;\n\n  return function (dispatch, getState) {\n    var defaultNotification = {\n      key: new Date().getTime(),\n      visible: true,\n      type: type,\n      data: data,\n      delay: delay,\n      message: str,\n      keepAfterUrlChange: keepAfterUrlChange\n    };\n    var currentNotification = getState().ui.notification.queue[0]; // if it's the 1st notification, we add it (visible by default)\n    // if not, we add it to the list (hidden) then process the queue\n\n    if (!currentNotification) {\n      dispatch(addNotification(defaultNotification));\n    } else {\n      dispatch(hideNotification(currentNotification.key));\n      dispatch(addNotification(_objectSpread({}, defaultNotification)));\n    }\n  };\n};\nexport var addNotification = function addNotification(payload) {\n  return {\n    type: 'NOTIFICATION_ADD',\n    payload: payload\n  };\n};\nexport var hideNotification = function hideNotification(payload) {\n  return {\n    type: 'NOTIFICATION_HIDE',\n    payload: payload\n  };\n};\nexport var removeNotification = function removeNotification(payload) {\n  return {\n    type: 'NOTIFICATION_REMOVE',\n    payload: payload\n  };\n};\nexport var updateApp = function updateApp(payload) {\n  return {\n    type: 'SW_UPDATE',\n    payload: payload\n  };\n};\nexport var setBrand = function setBrand(hostname) {\n  // set brand based on domain name (default to priceforbes)\n  var brand = constants.BRAND_PRICEFORBES;\n  if (hostname.includes(constants.BRAND_BISHOPSGATE)) brand = constants.BRAND_BISHOPSGATE;\n  return {\n    type: 'BRAND_SET',\n    payload: brand\n  };\n};\nexport var uploadFiles = function uploadFiles(payload) {\n  return {\n    type: types.DMS_FILE_UPLOAD,\n    payload: payload\n  };\n};\nexport var removeFileUpload = function removeFileUpload(payload) {\n  return {\n    type: types.REMOVE_DMS_FILE_UPLOAD,\n    payload: payload\n  };\n};\nexport var resetFileUpload = function resetFileUpload(payload) {\n  return {\n    type: types.DMS_FILE_UPLOAD_RESET,\n    payload: payload\n  };\n};\nexport var setDmsContext = function setDmsContext(payload) {\n  return {\n    type: types.SET_DMS_CONTEXT,\n    payload: payload\n  };\n};\nexport var resetFilesUploaded = function resetFilesUploaded() {\n  return {\n    type: 'RESET_DMS_FILES_UPLOADED'\n  };\n};\nexport var updateFileName = function updateFileName(payload) {\n  return {\n    type: types.UPDATE_FILE_NAME,\n    payload: payload\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/ui/ui.actions.js"],"names":["constants","types","expandNav","type","collapseNav","expandSidebar","collapseSidebar","addLoader","payload","removeLoader","showModal","MODAL_SHOW","hideModal","MODAL_HIDE","fullScreenModal","enqueueNotification","str","data","delay","keepAfterUrlChange","dispatch","getState","defaultNotification","key","Date","getTime","visible","message","currentNotification","ui","notification","queue","addNotification","hideNotification","removeNotification","updateApp","setBrand","hostname","brand","BRAND_PRICEFORBES","includes","BRAND_BISHOPSGATE","uploadFiles","DMS_FILE_UPLOAD","removeFileUpload","REMOVE_DMS_FILE_UPLOAD","resetFileUpload","DMS_FILE_UPLOAD_RESET","setDmsContext","SET_DMS_CONTEXT","resetFilesUploaded","updateFileName","UPDATE_FILE_NAME"],"mappings":"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","sourcesContent":["import * as constants from 'consts';\r\nimport types from './types';\r\n\r\nexport const expandNav = () => {\r\n  return {\r\n    type: 'NAV_EXPAND',\r\n  };\r\n};\r\n\r\nexport const collapseNav = () => {\r\n  return {\r\n    type: 'NAV_COLLAPSE',\r\n  };\r\n};\r\n\r\nexport const expandSidebar = () => {\r\n  return {\r\n    type: 'SIDEBAR_EXPAND',\r\n  };\r\n};\r\n\r\nexport const collapseSidebar = () => {\r\n  return {\r\n    type: 'SIDEBAR_COLLAPSE',\r\n  };\r\n};\r\n\r\nexport const addLoader = (payload) => {\r\n  return {\r\n    type: 'LOADER_ADD',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeLoader = (payload) => {\r\n  return {\r\n    type: 'LOADER_REMOVE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const showModal = (payload) => {\r\n  return {\r\n    type: types.MODAL_SHOW,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const hideModal = (type) => {\r\n  return {\r\n    type: types.MODAL_HIDE,\r\n    payload: type,\r\n  };\r\n};\r\n\r\nexport const fullScreenModal = (payload) => {\r\n  return {\r\n    type: 'MODAL_FULLSCREEN',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const enqueueNotification =\r\n  (str, type, { data, delay, keepAfterUrlChange } = {}) =>\r\n  (dispatch, getState) => {\r\n    const defaultNotification = {\r\n      key: new Date().getTime(),\r\n      visible: true,\r\n      type,\r\n      data,\r\n      delay,\r\n      message: str,\r\n      keepAfterUrlChange,\r\n    };\r\n\r\n    const currentNotification = getState().ui.notification.queue[0];\r\n\r\n    // if it's the 1st notification, we add it (visible by default)\r\n    // if not, we add it to the list (hidden) then process the queue\r\n    if (!currentNotification) {\r\n      dispatch(addNotification(defaultNotification));\r\n    } else {\r\n      dispatch(hideNotification(currentNotification.key));\r\n      dispatch(addNotification({ ...defaultNotification }));\r\n    }\r\n  };\r\n\r\nexport const addNotification = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_ADD',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const hideNotification = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_HIDE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeNotification = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_REMOVE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const updateApp = (payload) => {\r\n  return {\r\n    type: 'SW_UPDATE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setBrand = (hostname) => {\r\n  // set brand based on domain name (default to priceforbes)\r\n  let brand = constants.BRAND_PRICEFORBES;\r\n  if (hostname.includes(constants.BRAND_BISHOPSGATE)) brand = constants.BRAND_BISHOPSGATE;\r\n\r\n  return {\r\n    type: 'BRAND_SET',\r\n    payload: brand,\r\n  };\r\n};\r\n\r\nexport const uploadFiles = (payload) => {\r\n  return {\r\n    type: types.DMS_FILE_UPLOAD,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeFileUpload = (payload) => {\r\n  return {\r\n    type: types.REMOVE_DMS_FILE_UPLOAD,\r\n    payload,\r\n  };\r\n};\r\nexport const resetFileUpload = (payload) => {\r\n  return {\r\n    type: types.DMS_FILE_UPLOAD_RESET,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setDmsContext = (payload) => {\r\n  return {\r\n    type: types.SET_DMS_CONTEXT,\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const resetFilesUploaded = () => {\r\n  return {\r\n    type: 'RESET_DMS_FILES_UPLOADED',\r\n  };\r\n};\r\n\r\nexport const updateFileName = (payload) => {\r\n  return {\r\n    type: types.UPDATE_FILE_NAME,\r\n    payload,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}