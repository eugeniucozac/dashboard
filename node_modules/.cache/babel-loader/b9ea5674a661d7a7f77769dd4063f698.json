{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Chip\\\\Chip.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './Chip.styles'; // mui\n\nimport { makeStyles, Chip as MuiChip } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChipView.propTypes = {\n  type: PropTypes.oneOf(['new', 'info', 'success', 'alert', 'light', 'error', 'unknown', 'pink']),\n  label: PropTypes.node.isRequired,\n  testid: PropTypes.string,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    label: PropTypes.string\n  })\n};\nChipView.defaultProps = {\n  nestedClasses: {}\n};\nexport function ChipView(_ref) {\n  var type = _ref.type,\n      testid = _ref.testid,\n      nestedClasses = _ref.nestedClasses,\n      rest = _objectWithoutProperties(_ref, [\"type\", \"testid\", \"nestedClasses\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'Chip'\n  })(_objectSpread({\n    type: type\n  }, rest));\n  return /*#__PURE__*/_jsxDEV(MuiChip, _objectSpread(_objectSpread({}, rest), {}, {\n    classes: nestedClasses,\n    className: classes.root,\n    \"data-testid\": testid\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 27,\n    columnNumber: 10\n  }, this);\n}\n_c = ChipView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChipView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Chip/Chip.view.js"],"names":["React","PropTypes","styles","makeStyles","Chip","MuiChip","ChipView","propTypes","type","oneOf","label","node","isRequired","testid","string","nestedClasses","shape","root","defaultProps","rest","classes","name"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,IAAI,IAAIC,OAA7B,QAA4C,mBAA5C;;AAEAC,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,IAAI,EAAEP,SAAS,CAACQ,KAAV,CAAgB,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,SAAtD,EAAiE,MAAjE,CAAhB,CADa;AAEnBC,EAAAA,KAAK,EAAET,SAAS,CAACU,IAAV,CAAeC,UAFH;AAGnBC,EAAAA,MAAM,EAAEZ,SAAS,CAACa,MAHC;AAInBC,EAAAA,aAAa,EAAEd,SAAS,CAACe,KAAV,CAAgB;AAC7BC,IAAAA,IAAI,EAAEhB,SAAS,CAACa,MADa;AAE7BJ,IAAAA,KAAK,EAAET,SAAS,CAACa;AAFY,GAAhB;AAJI,CAArB;AAUAR,QAAQ,CAACY,YAAT,GAAwB;AACtBH,EAAAA,aAAa,EAAE;AADO,CAAxB;AAIA,OAAO,SAAST,QAAT,OAA4D;AAAA,MAAxCE,IAAwC,QAAxCA,IAAwC;AAAA,MAAlCK,MAAkC,QAAlCA,MAAkC;AAAA,MAA1BE,aAA0B,QAA1BA,aAA0B;AAAA,MAARI,IAAQ;;AACjE,MAAMC,OAAO,GAAGjB,UAAU,CAACD,MAAD,EAAS;AAAEmB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV;AAAuCb,IAAAA,IAAI,EAAJA;AAAvC,KAAgDW,IAAhD,EAAhB;AAEA,sBAAO,QAAC,OAAD,kCAAaA,IAAb;AAAmB,IAAA,OAAO,EAAEJ,aAA5B;AAA2C,IAAA,SAAS,EAAEK,OAAO,CAACH,IAA9D;AAAoE,mBAAaJ;AAAjF;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;KAJeP,Q","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './Chip.styles';\r\n\r\n// mui\r\nimport { makeStyles, Chip as MuiChip } from '@material-ui/core';\r\n\r\nChipView.propTypes = {\r\n  type: PropTypes.oneOf(['new', 'info', 'success', 'alert', 'light', 'error', 'unknown', 'pink']),\r\n  label: PropTypes.node.isRequired,\r\n  testid: PropTypes.string,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    label: PropTypes.string,\r\n  }),\r\n};\r\n\r\nChipView.defaultProps = {\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function ChipView({ type, testid, nestedClasses, ...rest }) {\r\n  const classes = makeStyles(styles, { name: 'Chip' })({ type, ...rest });\r\n\r\n  return <MuiChip {...rest} classes={nestedClasses} className={classes.root} data-testid={testid} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}