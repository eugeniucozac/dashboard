{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SignDown\\\\SignDown.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { SignDownView } from './SignDown.view';\nimport { postPlacementSignDown, selectRefDataStatusesMarketQuote } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSignDown.propTypes = {\n  policy: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function SignDown(_ref) {\n  _s();\n\n  var _ref$policy = _ref.policy,\n      policy = _ref$policy === void 0 ? {} : _ref$policy,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var statusId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\n  var marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusId]);\n  var writtenTotalLineToStand = utils.markets.getLineSize(utils.markets.filterByLineToStand(marketsQuoted));\n  var writtenTotal = utils.markets.getLineSize(marketsQuoted);\n  var fields = [{\n    name: 'signedDownPercentage',\n    type: 'number',\n    value: Math.min(writtenTotal, 100),\n    validation: Yup.number().nullable().min(writtenTotalLineToStand).max(Math.min(writtenTotal, 100)).percent().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('placement.form.signDown.label'),\n    hint: utils.string.t('placement.form.signDown.hint', {\n      min: writtenTotalLineToStand,\n      max: Math.min(writtenTotal, 100),\n      reason: writtenTotal <= 100 ? 'maxWritten' : 'maxAllowed'\n    }),\n    muiComponentProps: {\n      fullWidth: false,\n      autoComplete: 'off',\n      autoFocus: true,\n      'data-testid': 'signdown-percentage'\n    }\n  }, {\n    name: 'policy_id',\n    type: 'hidden',\n    value: policy.id\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      return dispatch(postPlacementSignDown(values));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(SignDownView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SignDown, \"Ugjj5iKFMeALE3wFgYr/M8omBbA=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SignDown;\n\nvar _c;\n\n$RefreshReg$(_c, \"SignDown\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SignDown/SignDown.js"],"names":["React","PropTypes","useDispatch","useSelector","Yup","SignDownView","postPlacementSignDown","selectRefDataStatusesMarketQuote","constants","utils","SignDown","propTypes","policy","object","isRequired","handleClose","func","dispatch","refDataStatusesMarketQuote","statusId","referenceData","status","getIdByCode","STATUS_MARKET_QUOTED","marketsQuoted","markets","getByStatusIds","getMarkets","writtenTotalLineToStand","getLineSize","filterByLineToStand","writtenTotal","fields","name","type","value","Math","min","validation","number","nullable","max","percent","transform","originalvalue","isType","Number","isNaN","label","string","t","hint","reason","muiComponentProps","fullWidth","autoComplete","autoFocus","id","actions","handler","values"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { SignDownView } from './SignDown.view';\r\nimport { postPlacementSignDown, selectRefDataStatusesMarketQuote } from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nSignDown.propTypes = {\r\n  policy: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function SignDown({ policy = {}, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n\r\n  const statusId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n  const marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusId]);\r\n  const writtenTotalLineToStand = utils.markets.getLineSize(utils.markets.filterByLineToStand(marketsQuoted));\r\n  const writtenTotal = utils.markets.getLineSize(marketsQuoted);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'signedDownPercentage',\r\n      type: 'number',\r\n      value: Math.min(writtenTotal, 100),\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(writtenTotalLineToStand)\r\n        .max(Math.min(writtenTotal, 100))\r\n        .percent()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('placement.form.signDown.label'),\r\n      hint: utils.string.t('placement.form.signDown.hint', {\r\n        min: writtenTotalLineToStand,\r\n        max: Math.min(writtenTotal, 100),\r\n        reason: writtenTotal <= 100 ? 'maxWritten' : 'maxAllowed',\r\n      }),\r\n      muiComponentProps: {\r\n        fullWidth: false,\r\n        autoComplete: 'off',\r\n        autoFocus: true,\r\n        'data-testid': 'signdown-percentage',\r\n      },\r\n    },\r\n    {\r\n      name: 'policy_id',\r\n      type: 'hidden',\r\n      value: policy.id,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => dispatch(postPlacementSignDown(values)),\r\n    },\r\n  ];\r\n\r\n  return <SignDownView fields={fields} actions={actions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}