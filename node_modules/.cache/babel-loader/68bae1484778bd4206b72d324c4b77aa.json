{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams } from 'react-router';\nimport { useSelector } from 'react-redux'; // app\n\nimport { LossDashboardView } from './LossDashboard.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { selectLossSelected } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossDashboard() {\n  _s();\n\n  var params = useParams();\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'lossDetail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var lossSelected = useSelector(selectLossSelected);\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n  };\n\n  var breadcrumbs = [{\n    name: 'claimsFNOL',\n    label: utils.string.t('loss.title'),\n    link: config.routes.claimsFNOL.root\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('loss.text', {\n      lossRef: lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef),\n    active: true\n  }];\n  var tabs = [{\n    value: 'lossDetail',\n    label: utils.string.t('loss.tabMenu.details')\n  }, {\n    value: 'lossAction',\n    label: utils.string.t('loss.tabMenu.actions')\n  }, {\n    value: 'lossDocs',\n    label: utils.string.t('loss.tabMenu.docs')\n  }, {\n    value: 'lossNotes',\n    label: utils.string.t('loss.tabMenu.notes')\n  }, {\n    value: 'lossAuditTrail',\n    label: utils.string.t('loss.tabMenu.auditTrail')\n  }]; // abort\n\n  if (!utils.generic.isValidObject(lossSelected)) return null;\n  return /*#__PURE__*/_jsxDEV(LossDashboardView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    lossSelected: lossSelected,\n    handleSelectTab: handleSelectTab,\n    breadcrumbs: breadcrumbs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 45,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LossDashboard, \"mre1M0jYpUzKEBdddxa/ZHQKo8o=\", false, function () {\n  return [useParams, useSelector];\n});\n\n_c = LossDashboard;\nLossDashboard.displayName = \"LossDashboard\";\nLossDashboard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LossDashboard\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\LossDashboard\\\\LossDashboard.js\"] = {\n    name: \"LossDashboard\",\n    docgenInfo: LossDashboard.__docgenInfo,\n    path: \"src\\\\pages\\\\LossDashboard\\\\LossDashboard.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.js"],"names":["React","useState","useParams","useSelector","LossDashboardView","utils","config","selectLossSelected","LossDashboard","params","tab","selectedTab","setSelectedTab","lossSelected","handleSelectTab","tabName","breadcrumbs","name","label","string","t","link","routes","claimsFNOL","root","lossRef","loss","active","tabs","value","generic","isValidObject"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,kBAAT,QAAmC,QAAnC;;AAEA,eAAe,SAASC,aAAT,GAAyB;AAAA;;AACtC,MAAMC,MAAM,GAAGP,SAAS,EAAxB;;AADsC,kBAEAD,QAAQ,CAAC,CAAAQ,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEC,GAAR,KAAe,YAAhB,CAFR;AAAA;AAAA,MAE/BC,WAF+B;AAAA,MAElBC,cAFkB;;AAGtC,MAAMC,YAAY,GAAGV,WAAW,CAACI,kBAAD,CAAhC;;AACA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;AACnCH,IAAAA,cAAc,CAACG,OAAD,CAAd;AACD,GAFD;;AAGA,MAAMC,WAAW,GAAG,CAClB;AACEC,IAAAA,IAAI,EAAE,YADR;AAEEC,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEC,IAAAA,IAAI,EAAEf,MAAM,CAACgB,MAAP,CAAcC,UAAd,CAAyBC;AAHjC,GADkB,EAMlB;AACEP,IAAAA,IAAI,EAAE,MADR;AAEEC,IAAAA,KAAK,YAAKb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,WAAf,EAA4B;AACpCK,MAAAA,OAAO,EAAEZ,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEY;AADa,KAA5B,CAAL,CAFP;AAKEJ,IAAAA,IAAI,YAAKf,MAAM,CAACgB,MAAP,CAAcC,UAAd,CAAyBG,IAA9B,cAAsCb,YAAtC,aAAsCA,YAAtC,uBAAsCA,YAAY,CAAEY,OAApD,CALN;AAMEE,IAAAA,MAAM,EAAE;AANV,GANkB,CAApB;AAgBA,MAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBX,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,sBAAf;AAA9B,GADW,EAEX;AAAES,IAAAA,KAAK,EAAE,YAAT;AAAuBX,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,sBAAf;AAA9B,GAFW,EAGX;AAAES,IAAAA,KAAK,EAAE,UAAT;AAAqBX,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,mBAAf;AAA5B,GAHW,EAIX;AAAES,IAAAA,KAAK,EAAE,WAAT;AAAsBX,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,oBAAf;AAA7B,GAJW,EAKX;AAAES,IAAAA,KAAK,EAAE,gBAAT;AAA2BX,IAAAA,KAAK,EAAEb,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,yBAAf;AAAlC,GALW,CAAb,CAvBsC,CA+BtC;;AACA,MAAI,CAACf,KAAK,CAACyB,OAAN,CAAcC,aAAd,CAA4BlB,YAA5B,CAAL,EAAgD,OAAO,IAAP;AAEhD,sBAAO,QAAC,iBAAD;AAAmB,IAAA,IAAI,EAAEe,IAAzB;AAA+B,IAAA,WAAW,EAAEjB,WAA5C;AAAyD,IAAA,YAAY,EAAEE,YAAvE;AAAqF,IAAA,eAAe,EAAEC,eAAtG;AAAuH,IAAA,WAAW,EAAEE;AAApI;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnCuBR,a;UACPN,S,EAEMC,W;;;KAHCK,a;AAAAA,a","sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { LossDashboardView } from './LossDashboard.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { selectLossSelected } from 'stores';\r\n\r\nexport default function LossDashboard() {\r\n  const params = useParams();\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'lossDetail');\r\n  const lossSelected = useSelector(selectLossSelected);\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n  };\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsFNOL',\r\n      label: utils.string.t('loss.title'),\r\n      link: config.routes.claimsFNOL.root,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('loss.text', {\r\n        lossRef: lossSelected?.lossRef,\r\n      })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${lossSelected?.lossRef}`,\r\n      active: true,\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'lossDetail', label: utils.string.t('loss.tabMenu.details') },\r\n    { value: 'lossAction', label: utils.string.t('loss.tabMenu.actions') },\r\n    { value: 'lossDocs', label: utils.string.t('loss.tabMenu.docs') },\r\n    { value: 'lossNotes', label: utils.string.t('loss.tabMenu.notes') },\r\n    { value: 'lossAuditTrail', label: utils.string.t('loss.tabMenu.auditTrail') },\r\n  ];\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(lossSelected)) return null;\r\n\r\n  return <LossDashboardView tabs={tabs} selectedTab={selectedTab} lossSelected={lossSelected} handleSelectTab={handleSelectTab} breadcrumbs={breadcrumbs} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}