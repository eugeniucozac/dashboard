{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskSummary\\\\TaskSummary.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'; // app\n\nimport { Accordion, Summary } from 'components';\nimport { TaskClaimDetailsSidebar, TaskSidebarNotes, TaskSidebarDocument, TaskSummaryActions } from 'modules';\nimport * as utils from 'utils';\nimport { selectClaimsTasksProcessingSelected, selectClaimsTasksProcessingType } from 'stores';\nimport { TASK_TEAM_TYPE, TASK_ROW_TYPE } from 'consts'; // mui\n\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskSummaryView.propTypes = {\n  allowNavigation: PropTypes.func.isRequired\n};\nexport function TaskSummaryView(_ref) {\n  _s();\n\n  var allowNavigation = _ref.allowNavigation;\n  var tasksProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\n  var taskTabTypeSelected = useSelector(selectClaimsTasksProcessingType);\n  var selectedTask = tasksProcessingSelected[0];\n  var isNotesRequired = taskTabTypeSelected === TASK_TEAM_TYPE.myTask && (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskType) === TASK_ROW_TYPE.rfi;\n  return /*#__PURE__*/_jsxDEV(Summary, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: true,\n        title: utils.string.t('claims.processing.summary.accordions.details'),\n        children: /*#__PURE__*/_jsxDEV(TaskClaimDetailsSidebar, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: true,\n        title: utils.string.t('claims.processing.summary.accordions.actions'),\n        children: /*#__PURE__*/_jsxDEV(TaskSummaryActions, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: true,\n        title: utils.string.t('claims.processing.summary.accordions.documents'),\n        children: /*#__PURE__*/_jsxDEV(TaskSidebarDocument, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, this), !isNotesRequired && /*#__PURE__*/_jsxDEV(Accordion, {\n        expanded: true,\n        title: utils.string.t('claims.processing.summary.accordions.notes'),\n        children: /*#__PURE__*/_jsxDEV(TaskSidebarNotes, {\n          allowNavigation: allowNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 26,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskSummaryView, \"IXXJ2n8HbMzA5ibKXuU2i1oXYOk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = TaskSummaryView;\nTaskSummaryView.displayName = \"TaskSummaryView\";\nTaskSummaryView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskSummaryView\",\n  \"props\": {\n    \"allowNavigation\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskSummary\\\\TaskSummary.view.js\"] = {\n    name: \"TaskSummaryView\",\n    docgenInfo: TaskSummaryView.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskSummary\\\\TaskSummary.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSummaryView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskSummary/TaskSummary.view.js"],"names":["React","PropTypes","useSelector","Accordion","Summary","TaskClaimDetailsSidebar","TaskSidebarNotes","TaskSidebarDocument","TaskSummaryActions","utils","selectClaimsTasksProcessingSelected","selectClaimsTasksProcessingType","TASK_TEAM_TYPE","TASK_ROW_TYPE","Box","TaskSummaryView","propTypes","allowNavigation","func","isRequired","tasksProcessingSelected","taskTabTypeSelected","selectedTask","isNotesRequired","myTask","taskType","rfi","string","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,SAAT,EAAoBC,OAApB,QAAmC,YAAnC;AACA,SAASC,uBAAT,EAAkCC,gBAAlC,EAAoDC,mBAApD,EAAyEC,kBAAzE,QAAmG,SAAnG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,mCAAT,EAA8CC,+BAA9C,QAAqF,QAArF;AACA,SAASC,cAAT,EAAyBC,aAAzB,QAA8C,QAA9C,C,CAEA;;AACA,SAASC,GAAT,QAAoB,mBAApB;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,eAAe,EAAEhB,SAAS,CAACiB,IAAV,CAAeC;AADN,CAA5B;AAIA,OAAO,SAASJ,eAAT,OAA8C;AAAA;;AAAA,MAAnBE,eAAmB,QAAnBA,eAAmB;AACnD,MAAMG,uBAAuB,GAAGlB,WAAW,CAACQ,mCAAD,CAA3C;AACA,MAAMW,mBAAmB,GAAGnB,WAAW,CAACS,+BAAD,CAAvC;AACA,MAAMW,YAAY,GAAGF,uBAAuB,CAAC,CAAD,CAA5C;AACA,MAAMG,eAAe,GAAGF,mBAAmB,KAAKT,cAAc,CAACY,MAAvC,IAAiD,CAAAF,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEG,QAAd,MAA2BZ,aAAa,CAACa,GAAlH;AAEA,sBACE,QAAC,OAAD;AAAA,2BACE,QAAC,GAAD;AAAA,8BACE,QAAC,SAAD;AAAW,QAAA,QAAQ,MAAnB;AAAoB,QAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAA3B;AAAA,+BACE,QAAC,uBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAIE,QAAC,SAAD;AAAW,QAAA,QAAQ,MAAnB;AAAoB,QAAA,KAAK,EAAEnB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAA3B;AAAA,+BACE,QAAC,kBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAJF,eAOE,QAAC,SAAD;AAAW,QAAA,QAAQ,MAAnB;AAAoB,QAAA,KAAK,EAAEnB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,gDAAf,CAA3B;AAAA,+BACE,QAAC,mBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAPF,EAUG,CAACL,eAAD,iBACC,QAAC,SAAD;AAAW,QAAA,QAAQ,MAAnB;AAAoB,QAAA,KAAK,EAAEd,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,4CAAf,CAA3B;AAAA,+BACE,QAAC,gBAAD;AAAkB,UAAA,eAAe,EAAEX;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAXJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GA1BeF,e;UACkBb,W,EACJA,W;;;KAFda,e;AAAAA,e","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { Accordion, Summary } from 'components';\r\nimport { TaskClaimDetailsSidebar, TaskSidebarNotes, TaskSidebarDocument, TaskSummaryActions } from 'modules';\r\nimport * as utils from 'utils';\r\nimport { selectClaimsTasksProcessingSelected, selectClaimsTasksProcessingType } from 'stores';\r\nimport { TASK_TEAM_TYPE, TASK_ROW_TYPE } from 'consts';\r\n\r\n// mui\r\nimport { Box } from '@material-ui/core';\r\n\r\nTaskSummaryView.propTypes = {\r\n  allowNavigation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function TaskSummaryView({ allowNavigation }) {\r\n  const tasksProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\r\n  const taskTabTypeSelected = useSelector(selectClaimsTasksProcessingType);\r\n  const selectedTask = tasksProcessingSelected[0];\r\n  const isNotesRequired = taskTabTypeSelected === TASK_TEAM_TYPE.myTask && selectedTask?.taskType === TASK_ROW_TYPE.rfi;\r\n\r\n  return (\r\n    <Summary>\r\n      <Box>\r\n        <Accordion expanded title={utils.string.t('claims.processing.summary.accordions.details')}>\r\n          <TaskClaimDetailsSidebar />\r\n        </Accordion>\r\n        <Accordion expanded title={utils.string.t('claims.processing.summary.accordions.actions')}>\r\n          <TaskSummaryActions />\r\n        </Accordion>\r\n        <Accordion expanded title={utils.string.t('claims.processing.summary.accordions.documents')}>\r\n          <TaskSidebarDocument />\r\n        </Accordion>\r\n        {!isNotesRequired && (\r\n          <Accordion expanded title={utils.string.t('claims.processing.summary.accordions.notes')}>\r\n            <TaskSidebarNotes allowNavigation={allowNavigation} />\r\n          </Accordion>\r\n        )}\r\n      </Box>\r\n    </Summary>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}