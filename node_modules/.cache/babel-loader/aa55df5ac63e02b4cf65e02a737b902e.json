{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DmsLinkToLossAndClaim\\\\DmsLinkToLossAndClaim.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport DmsLinkToLossAndClaimView from './DmsLinkToLossAndClaim.view';\nimport { linkMultipleDmsDocuments, selectLossInformation, selectClaimsInformation, hideModal } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsLinkToLossAndClaim.propTypes = {\n  docData: PropTypes.object.isRequired,\n  resetToDefaultValues: PropTypes.func.isRequired\n};\nexport default function DmsLinkToLossAndClaim(_ref) {\n  _s();\n\n  var _useSelector, _useSelector2;\n\n  var docData = _ref.docData,\n      resetToDefaultValues = _ref.resetToDefaultValues;\n  var dispatch = useDispatch();\n  var lossRefID = (_useSelector = useSelector(selectLossInformation)) === null || _useSelector === void 0 ? void 0 : _useSelector.lossRef;\n  var claimRefID = (_useSelector2 = useSelector(selectClaimsInformation)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.claimReference;\n\n  var confirmDocumentlink = function confirmDocumentlink(docs) {\n    var fnolSecType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n      return {\n        documentId: d.documentId,\n        referenceId: fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID,\n        sectionType: fnolSecType\n      };\n    });\n\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\n      var claimParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n        return {\n          documentId: d.documentId,\n          referenceId: claimRefID,\n          sectionType: constants.DMS_CONTEXT_CLAIM\n        };\n      });\n      requestParams === null || requestParams === void 0 ? void 0 : requestParams.push.apply(requestParams, _toConsumableArray(claimParams));\n    }\n\n    if (requestParams === null || requestParams === void 0 ? void 0 : requestParams.length) {\n      dispatch(linkMultipleDmsDocuments(requestParams)).then(function (response) {\n        if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n          resetToDefaultValues();\n          dispatch(hideModal('DMS_LINK_TO_LOSS_AND_CLAIM'));\n        }\n      });\n    }\n  };\n\n  var handleLinkTo = function handleLinkTo(formValues) {\n    if (docData === null || docData === void 0 ? void 0 : docData.isLinked) {\n      return;\n    }\n\n    if (formValues === null || formValues === void 0 ? void 0 : formValues.linkToLoss) {\n      confirmDocumentlink(docData, constants.DMS_CONTEXT_LOSS);\n    }\n\n    if (formValues === null || formValues === void 0 ? void 0 : formValues.linkToClaim) {\n      confirmDocumentlink(docData, constants.DMS_CONTEXT_CLAIM);\n    }\n  };\n\n  var fields = [{\n    name: 'linkToLoss',\n    type: 'checkbox',\n    defaultValue: false\n  }, {\n    name: 'linkToClaim',\n    type: 'checkbox',\n    defaultValue: false\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      dispatch(hideModal('DMS_LINK_TO_LOSS_AND_CLAIM'));\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.link'),\n    handler: function handler(values) {\n      handleLinkTo(values);\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  return /*#__PURE__*/_jsxDEV(DmsLinkToLossAndClaimView, {\n    fields: fields,\n    control: control,\n    actions: actions,\n    reset: reset,\n    handleSubmit: handleSubmit,\n    formState: formState\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsLinkToLossAndClaim, \"c8Z8689pz9uz7or2dd58n7YZsZY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = DmsLinkToLossAndClaim;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsLinkToLossAndClaim\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DmsLinkToLossAndClaim/DmsLinkToLossAndClaim.js"],"names":["React","PropTypes","useForm","yupResolver","useDispatch","useSelector","DmsLinkToLossAndClaimView","linkMultipleDmsDocuments","selectLossInformation","selectClaimsInformation","hideModal","constants","utils","DmsLinkToLossAndClaim","propTypes","docData","object","isRequired","resetToDefaultValues","func","dispatch","lossRefID","lossRef","claimRefID","claimReference","confirmDocumentlink","docs","fnolSecType","requestParams","map","d","documentId","referenceId","DMS_CONTEXT_LOSS","sectionType","claimParams","DMS_CONTEXT_CLAIM","push","length","then","response","status","API_RESPONSE_OK","handleLinkTo","formValues","isLinked","linkToLoss","linkToClaim","fields","name","type","defaultValue","actions","label","string","t","handler","values","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","handleSubmit","formState"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport DmsLinkToLossAndClaimView from './DmsLinkToLossAndClaim.view';\r\nimport { linkMultipleDmsDocuments, selectLossInformation, selectClaimsInformation, hideModal } from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nDmsLinkToLossAndClaim.propTypes = {\r\n  docData: PropTypes.object.isRequired,\r\n  resetToDefaultValues: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function DmsLinkToLossAndClaim({ docData, resetToDefaultValues }) {\r\n  const dispatch = useDispatch();\r\n  const lossRefID = useSelector(selectLossInformation)?.lossRef;\r\n  const claimRefID = useSelector(selectClaimsInformation)?.claimReference;\r\n\r\n  const confirmDocumentlink = (docs, fnolSecType = '') => {\r\n    const requestParams = docs?.map((d) => {\r\n      return {\r\n        documentId: d.documentId,\r\n        referenceId: fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID,\r\n        sectionType: fnolSecType,\r\n      };\r\n    });\r\n\r\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\r\n      const claimParams = docs?.map((d) => {\r\n        return {\r\n          documentId: d.documentId,\r\n          referenceId: claimRefID,\r\n          sectionType: constants.DMS_CONTEXT_CLAIM,\r\n        };\r\n      });\r\n      requestParams?.push(...claimParams);\r\n    }\r\n\r\n    if (requestParams?.length) {\r\n      dispatch(linkMultipleDmsDocuments(requestParams)).then((response) => {\r\n        if (response?.status === constants.API_RESPONSE_OK) {\r\n          resetToDefaultValues();\r\n          dispatch(hideModal('DMS_LINK_TO_LOSS_AND_CLAIM'));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleLinkTo = (formValues) => {\r\n    if (docData?.isLinked) {\r\n      return;\r\n    }\r\n    if (formValues?.linkToLoss) {\r\n      confirmDocumentlink(docData, constants.DMS_CONTEXT_LOSS);\r\n    }\r\n    if (formValues?.linkToClaim) {\r\n      confirmDocumentlink(docData, constants.DMS_CONTEXT_CLAIM);\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'linkToLoss',\r\n      type: 'checkbox',\r\n      defaultValue: false,\r\n    },\r\n    {\r\n      name: 'linkToClaim',\r\n      type: 'checkbox',\r\n      defaultValue: false,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        dispatch(hideModal('DMS_LINK_TO_LOSS_AND_CLAIM'));\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.link'),\r\n      handler: (values) => {\r\n        handleLinkTo(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, reset, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  return (\r\n    <DmsLinkToLossAndClaimView\r\n      fields={fields}\r\n      control={control}\r\n      actions={actions}\r\n      reset={reset}\r\n      handleSubmit={handleSubmit}\r\n      formState={formState}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}