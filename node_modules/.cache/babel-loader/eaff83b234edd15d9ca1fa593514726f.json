{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\PremiumProcessingTasks\\\\PremiumProcessingTasks.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get'; // app\n\nimport { PremiumProcessingTasksView } from './PremiumProcessingTasks.view';\nimport { selectTechnicians, selectUser, showModal, resetCasesSelected, hideModal } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { Tooltip, Badge, StatusIcon } from 'components';\nimport styles from './PremiumProcessingTasks.styles'; // mui\n\nimport { Box, makeStyles } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PremiumProcessingTasks() {\n  _s();\n\n  var _this = this;\n\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingTasks'\n  })();\n  var dispatch = useDispatch();\n  var uiBrand = useSelector(function (state) {\n    return get(state, 'ui.brand');\n  });\n  var technicians = useSelector(selectTechnicians);\n  var technicianAssigning = true;\n  var loggedUserDetails = useSelector(selectUser);\n  var userRoleDetails = loggedUserDetails === null || loggedUserDetails === void 0 ? void 0 : loggedUserDetails.userRole;\n\n  var showAssignedToModal = function showAssignedToModal(displayMessages) {\n    var _successMessages$, _successMessages$2, _successMessages$2$ca, _successMessages$3, _failureMessages$, _failureMessages$2, _failureMessages$2$ca, _failureMessages$3, _juniorTechnicianMess, _juniorTechnicianMess2, _juniorTechnicianMess3, _juniorTechnicianMess4, _crossAssignmentUserM, _crossAssignmentUserM2, _crossAssignmentUserM3, _crossAssignmentUserM4;\n\n    var successMessages = displayMessages === null || displayMessages === void 0 ? void 0 : displayMessages.filter(function (data) {\n      return data.flag === constants.ASSINGED_TO_SUCCESS_STATUS;\n    });\n    var failureMessages = displayMessages === null || displayMessages === void 0 ? void 0 : displayMessages.filter(function (data) {\n      return data.flag === constants.ASSINGED_TO_FAIL_STATUS;\n    });\n    var juniorTechnicianMessages = displayMessages === null || displayMessages === void 0 ? void 0 : displayMessages.filter(function (data) {\n      return data.flag === constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS;\n    });\n    var crossAssignmentUserMessages = displayMessages === null || displayMessages === void 0 ? void 0 : displayMessages.filter(function (data) {\n      return data.flag === constants.ASSINGED_TO_CROSS_USER_STATUS;\n    });\n    var statusList = [{\n      id: 1,\n      code: 'success',\n      type: 'success'\n    }, {\n      id: 2,\n      code: 'error',\n      type: 'error'\n    }];\n    var width = '80%';\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('premiumProcessing.assignedToModalTitle'),\n        hideCompOnBlur: false,\n        disableAutoFocus: true,\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('app.ok'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [(successMessages === null || successMessages === void 0 ? void 0 : successMessages.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    pr: 1,\n                    display: 'flex',\n                    width: width,\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    children: (_successMessages$ = successMessages[0]) === null || _successMessages$ === void 0 ? void 0 : _successMessages$.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(StatusIcon, {\n                    list: statusList,\n                    translationPath: \"status\",\n                    id: 1\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 58,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Case Id : \".concat(((_successMessages$2 = successMessages[0]) === null || _successMessages$2 === void 0 ? void 0 : (_successMessages$2$ca = _successMessages$2.caseId) === null || _successMessages$2$ca === void 0 ? void 0 : _successMessages$2$ca.length) > 0 && ((_successMessages$3 = successMessages[0]) === null || _successMessages$3 === void 0 ? void 0 : _successMessages$3.caseId.join())),\n                    placement: 'top',\n                    arrow: true,\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      badgeContent: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                        className: classes.infoStyle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 48\n                      }, _this),\n                      type: \"info\",\n                      compact: true,\n                      standalone: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 64,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 59,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, _this), (failureMessages === null || failureMessages === void 0 ? void 0 : failureMessages.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    pr: 1,\n                    display: 'flex',\n                    width: width,\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    children: (_failureMessages$ = failureMessages[0]) === null || _failureMessages$ === void 0 ? void 0 : _failureMessages$.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(StatusIcon, {\n                    list: statusList,\n                    id: 2,\n                    translationPath: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 75,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Case Id : \".concat(((_failureMessages$2 = failureMessages[0]) === null || _failureMessages$2 === void 0 ? void 0 : (_failureMessages$2$ca = _failureMessages$2.caseId) === null || _failureMessages$2$ca === void 0 ? void 0 : _failureMessages$2$ca.length) > 0 && ((_failureMessages$3 = failureMessages[0]) === null || _failureMessages$3 === void 0 ? void 0 : _failureMessages$3.caseId.join())),\n                    placement: 'top',\n                    arrow: true,\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      badgeContent: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                        className: classes.infoStyle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 81,\n                        columnNumber: 48\n                      }, _this),\n                      type: \"info\",\n                      compact: true,\n                      standalone: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 21\n              }, _this), (juniorTechnicianMessages === null || juniorTechnicianMessages === void 0 ? void 0 : juniorTechnicianMessages.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    pr: 1,\n                    display: 'flex',\n                    width: width,\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    children: (_juniorTechnicianMess = juniorTechnicianMessages[0]) === null || _juniorTechnicianMess === void 0 ? void 0 : _juniorTechnicianMess.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(StatusIcon, {\n                    list: statusList,\n                    id: 2,\n                    translationPath: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Case Id : \".concat(((_juniorTechnicianMess2 = juniorTechnicianMessages[0]) === null || _juniorTechnicianMess2 === void 0 ? void 0 : (_juniorTechnicianMess3 = _juniorTechnicianMess2.caseId) === null || _juniorTechnicianMess3 === void 0 ? void 0 : _juniorTechnicianMess3.length) > 0 && ((_juniorTechnicianMess4 = juniorTechnicianMessages[0]) === null || _juniorTechnicianMess4 === void 0 ? void 0 : _juniorTechnicianMess4.caseId.join())),\n                    placement: 'top',\n                    arrow: true,\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      badgeContent: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                        className: classes.infoStyle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 100,\n                        columnNumber: 48\n                      }, _this),\n                      type: \"info\",\n                      compact: true,\n                      standalone: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 21\n              }, _this), (crossAssignmentUserMessages === null || crossAssignmentUserMessages === void 0 ? void 0 : crossAssignmentUserMessages.length) > 0 && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: 'flex',\n                  alignItems: 'center',\n                  justifyContent: 'space-between',\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    pr: 1,\n                    display: 'flex',\n                    width: width,\n                    alignItems: 'center',\n                    justifyContent: 'flex-start',\n                    children: (_crossAssignmentUserM = crossAssignmentUserMessages[0]) === null || _crossAssignmentUserM === void 0 ? void 0 : _crossAssignmentUserM.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(StatusIcon, {\n                    list: statusList,\n                    id: 2,\n                    translationPath: \"status\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: \"Case Id : \".concat(((_crossAssignmentUserM2 = crossAssignmentUserMessages[0]) === null || _crossAssignmentUserM2 === void 0 ? void 0 : (_crossAssignmentUserM3 = _crossAssignmentUserM2.caseId) === null || _crossAssignmentUserM3 === void 0 ? void 0 : _crossAssignmentUserM3.length) > 0 && ((_crossAssignmentUserM4 = crossAssignmentUserMessages[0]) === null || _crossAssignmentUserM4 === void 0 ? void 0 : _crossAssignmentUserM4.caseId.join())),\n                    placement: 'top',\n                    arrow: true,\n                    children: /*#__PURE__*/_jsxDEV(Badge, {\n                      badgeContent: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                        className: classes.infoStyle\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 48\n                      }, _this),\n                      type: \"info\",\n                      compact: true,\n                      standalone: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 119,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 106,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 15\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {\n            dispatch(hideModal());\n          },\n          handleClose: function handleClose() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n    dispatch(resetCasesSelected());\n  };\n\n  var assignedToModalObject = function assignedToModalObject(flagValue, dataList, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus) {\n    var displayObject = {\n      message: '',\n      flag: flagValue,\n      caseId: []\n    };\n\n    if (flagValue === constants.ASSINGED_TO_SUCCESS_STATUS) {\n      displayObject.message = utils.string.t('premiumProcessing.casesAssignedSuccessfully', {\n        count: successStatus === null || successStatus === void 0 ? void 0 : successStatus.length\n      });\n      displayObject.caseId = utils.generic.isValidArray(dataList, true) ? dataList.filter(function (data) {\n        return data.status === constants.SUCCESS_STATUS_CASE_ASSIGN;\n      }).map(function (a) {\n        return a.caseIncidentId;\n      }) : [];\n    } else if (flagValue === constants.ASSINGED_TO_FAIL_STATUS) {\n      displayObject.message = utils.string.t('premiumProcessing.casesAssignmentFailure', {\n        failureCount: failureStatus === null || failureStatus === void 0 ? void 0 : failureStatus.length\n      });\n      displayObject.caseId = utils.generic.isValidArray(dataList, true) ? dataList.filter(function (data) {\n        return data.status === constants.FAILURE_STATUS_CASE_ASSIGN;\n      }).map(function (a) {\n        return a.caseIncidentId;\n      }) : [];\n    } else if (flagValue === constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS) {\n      displayObject.message = utils.string.t('premiumProcessing.caseNotAssignedToJuniorTechnician', {\n        juniorTechCount: juniorTechnicianStatus === null || juniorTechnicianStatus === void 0 ? void 0 : juniorTechnicianStatus.length\n      });\n      displayObject.caseId = utils.generic.isValidArray(dataList, true) ? dataList.filter(function (data) {\n        return data.isJuniorTechnician === constants.SUCCESS_STATUS_CASE_ASSIGN;\n      }).map(function (a) {\n        return a.caseIncidentId;\n      }) : [];\n    } else if (flagValue === constants.ASSINGED_TO_CROSS_USER_STATUS) {\n      displayObject.message = utils.string.t('premiumProcessing.crossGroupAssignmentStatus', {\n        crossGroupCount: crossGroupAssignmentStatus === null || crossGroupAssignmentStatus === void 0 ? void 0 : crossGroupAssignmentStatus.length\n      });\n      displayObject.caseId = utils.generic.isValidArray(dataList, true) ? dataList.filter(function (data) {\n        return data.isCrossGroupAssignment === constants.SUCCESS_STATUS_CASE_ASSIGN;\n      }).map(function (a) {\n        return a.caseIncidentId;\n      }) : [];\n    }\n\n    return displayObject;\n  };\n\n  var handleAssignedUserToCase = function handleAssignedUserToCase(response) {\n    var _response$data;\n\n    var responseObject = response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.assignCaseRequest;\n    var successStatus = utils.generic.isValidArray(responseObject, true) ? responseObject.filter(function (data) {\n      return data.status === constants.SUCCESS_STATUS_CASE_ASSIGN;\n    }) : [];\n    var failureStatus = utils.generic.isValidArray(responseObject, true) ? responseObject.filter(function (data) {\n      return data.status === constants.FAILURE_STATUS_CASE_ASSIGN && (data === null || data === void 0 ? void 0 : data.isJuniorTechnician) !== constants.SUCCESS_STATUS_CASE_ASSIGN && (data === null || data === void 0 ? void 0 : data.isCrossGroupAssignment) !== constants.SUCCESS_STATUS_CASE_ASSIGN;\n    }) : [];\n    var juniorTechnicianStatus = utils.generic.isValidArray(responseObject, true) ? responseObject.filter(function (data) {\n      return data.isJuniorTechnician === constants.SUCCESS_STATUS_CASE_ASSIGN;\n    }) : [];\n    var crossGroupAssignmentStatus = utils.generic.isValidArray(responseObject, true) ? responseObject.filter(function (data) {\n      return data.isCrossGroupAssignment === constants.SUCCESS_STATUS_CASE_ASSIGN;\n    }) : [];\n    var displayAssignedToResponse = []; //For Cross user assignment\n\n    if ((crossGroupAssignmentStatus === null || crossGroupAssignmentStatus === void 0 ? void 0 : crossGroupAssignmentStatus.length) > 0) {\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_CROSS_USER_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n    } // All success\n\n\n    if ((successStatus === null || successStatus === void 0 ? void 0 : successStatus.length) > 0 && (failureStatus === null || failureStatus === void 0 ? void 0 : failureStatus.length) === 0) {\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_SUCCESS_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n    } // All failed\n\n\n    if ((successStatus === null || successStatus === void 0 ? void 0 : successStatus.length) === 0 && (failureStatus === null || failureStatus === void 0 ? void 0 : failureStatus.length) > 0) {\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_FAIL_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n    }\n\n    if ((juniorTechnicianStatus === null || juniorTechnicianStatus === void 0 ? void 0 : juniorTechnicianStatus.length) > 0) {\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n    } // Mixed some are success and some or failure\n\n\n    if ((successStatus === null || successStatus === void 0 ? void 0 : successStatus.length) > 0 && (failureStatus === null || failureStatus === void 0 ? void 0 : failureStatus.length) > 0) {\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_SUCCESS_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n      displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_FAIL_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n\n      if ((juniorTechnicianStatus === null || juniorTechnicianStatus === void 0 ? void 0 : juniorTechnicianStatus.length) > 0) {\n        displayAssignedToResponse.push(assignedToModalObject(constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS, responseObject, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus));\n      }\n    }\n\n    showAssignedToModal(displayAssignedToResponse);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('premiumProcessing.title'), \" - \").concat(utils.app.getAppName(uiBrand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 292,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PremiumProcessingTasksView, {\n      technicians: technicians,\n      technicianAssigning: technicianAssigning,\n      userRoleDetails: userRoleDetails,\n      handleAssignedUserToCase: handleAssignedUserToCase\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 294,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PremiumProcessingTasks, \"+pa5Zh+vdKcpfgcPSe3FACrrsxQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PremiumProcessingTasks;\nPremiumProcessingTasks.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingTasks\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\PremiumProcessingTasks\\\\PremiumProcessingTasks.js\"] = {\n    name: \"PremiumProcessingTasks\",\n    docgenInfo: PremiumProcessingTasks.__docgenInfo,\n    path: \"src\\\\pages\\\\PremiumProcessingTasks\\\\PremiumProcessingTasks.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingTasks\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/PremiumProcessingTasks/PremiumProcessingTasks.js"],"names":["React","useDispatch","useSelector","Helmet","get","PremiumProcessingTasksView","selectTechnicians","selectUser","showModal","resetCasesSelected","hideModal","utils","constants","Tooltip","Badge","StatusIcon","styles","Box","makeStyles","InfoIcon","PremiumProcessingTasks","classes","name","dispatch","uiBrand","state","technicians","technicianAssigning","loggedUserDetails","userRoleDetails","userRole","showAssignedToModal","displayMessages","successMessages","filter","data","flag","ASSINGED_TO_SUCCESS_STATUS","failureMessages","ASSINGED_TO_FAIL_STATUS","juniorTechnicianMessages","ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS","crossAssignmentUserMessages","ASSINGED_TO_CROSS_USER_STATUS","statusList","id","code","type","width","component","props","fullWidth","title","string","t","hideCompOnBlur","disableAutoFocus","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","length","message","caseId","join","infoStyle","buttonColors","confirm","submitHandler","handleClose","assignedToModalObject","flagValue","dataList","successStatus","failureStatus","juniorTechnicianStatus","crossGroupAssignmentStatus","displayObject","count","generic","isValidArray","status","SUCCESS_STATUS_CASE_ASSIGN","map","a","caseIncidentId","failureCount","FAILURE_STATUS_CASE_ASSIGN","juniorTechCount","isJuniorTechnician","crossGroupCount","isCrossGroupAssignment","handleAssignedUserToCase","response","responseObject","assignCaseRequest","displayAssignedToResponse","push","app","getAppName"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,SAASC,0BAAT,QAA2C,+BAA3C;AACA,SAASC,iBAAT,EAA4BC,UAA5B,EAAwCC,SAAxC,EAAmDC,kBAAnD,EAAuEC,SAAvE,QAAwF,QAAxF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,SAASC,OAAT,EAAkBC,KAAlB,EAAyBC,UAAzB,QAA2C,YAA3C;AACA,OAAOC,MAAP,MAAmB,iCAAnB,C,CACA;;AACA,SAASC,GAAT,EAAcC,UAAd,QAAgC,mBAAhC;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;AAEA,eAAe,SAASC,sBAAT,GAAkC;AAAA;;AAAA;;AAC/C,MAAMC,OAAO,GAAGH,UAAU,CAACF,MAAD,EAAS;AAAEM,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AAEA,MAAMC,QAAQ,GAAGtB,WAAW,EAA5B;AACA,MAAMuB,OAAO,GAAGtB,WAAW,CAAC,UAACuB,KAAD;AAAA,WAAWrB,GAAG,CAACqB,KAAD,EAAQ,UAAR,CAAd;AAAA,GAAD,CAA3B;AACA,MAAMC,WAAW,GAAGxB,WAAW,CAACI,iBAAD,CAA/B;AACA,MAAMqB,mBAAmB,GAAG,IAA5B;AACA,MAAMC,iBAAiB,GAAG1B,WAAW,CAACK,UAAD,CAArC;AACA,MAAMsB,eAAe,GAAGD,iBAAH,aAAGA,iBAAH,uBAAGA,iBAAiB,CAAEE,QAA3C;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,eAAD,EAAqB;AAAA;;AAC/C,QAAMC,eAAe,GAAGD,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEE,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcxB,SAAS,CAACyB,0BAAlC;AAAA,KAAxB,CAAxB;AACA,QAAMC,eAAe,GAAGN,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEE,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcxB,SAAS,CAAC2B,uBAAlC;AAAA,KAAxB,CAAxB;AACA,QAAMC,wBAAwB,GAAGR,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEE,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcxB,SAAS,CAAC6B,yCAAlC;AAAA,KAAxB,CAAjC;AACA,QAAMC,2BAA2B,GAAGV,eAAH,aAAGA,eAAH,uBAAGA,eAAe,CAAEE,MAAjB,CAAwB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,IAAL,KAAcxB,SAAS,CAAC+B,6BAAlC;AAAA,KAAxB,CAApC;AACA,QAAMC,UAAU,GAAG,CACjB;AAAEC,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,SAAf;AAA0BC,MAAAA,IAAI,EAAE;AAAhC,KADiB,EAEjB;AAAEF,MAAAA,EAAE,EAAE,CAAN;AAASC,MAAAA,IAAI,EAAE,OAAf;AAAwBC,MAAAA,IAAI,EAAE;AAA9B,KAFiB,CAAnB;AAIA,QAAMC,KAAK,GAAG,KAAd;AACAzB,IAAAA,QAAQ,CACNf,SAAS,CAAC;AACRyC,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAEzC,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,wCAAf,CAFF;AAGLC,QAAAA,cAAc,EAAE,KAHX;AAILC,QAAAA,gBAAgB,EAAE,IAJb;AAKLC,QAAAA,QAAQ,EAAE,IALL;AAMLC,QAAAA,cAAc,EAAE;AACdC,UAAAA,gBAAgB,EAAE,IADJ;AAEdC,UAAAA,YAAY,EAAEjD,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,QAAf,CAFA;AAGdO,UAAAA,cAAc,eACZ,QAAC,GAAD;AAAA,mCACE;AAAA,yBACG,CAAA5B,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE6B,MAAjB,IAA0B,CAA1B,iBACC;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAE,MAAd;AAAsB,kBAAA,UAAU,EAAE,QAAlC;AAA4C,kBAAA,cAAc,EAAE,eAA5D;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,OAAO,EAAE,MAArB;AAA6B,oBAAA,KAAK,EAAEd,KAApC;AAA2C,oBAAA,UAAU,EAAE,QAAvD;AAAiE,oBAAA,cAAc,EAAE,YAAjF;AAAA,mDACGf,eAAe,CAAC,CAAD,CADlB,sDACG,kBAAoB8B;AADvB;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAEnB,UAAlB;AAA8B,oBAAA,eAAe,EAAC,QAA9C;AAAuD,oBAAA,EAAE,EAAE;AAA3D;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE,QAAC,OAAD;AACE,oBAAA,KAAK,sBAAe,uBAAAX,eAAe,CAAC,CAAD,CAAf,mGAAoB+B,MAApB,gFAA4BF,MAA5B,IAAqC,CAArC,2BAA0C7B,eAAe,CAAC,CAAD,CAAzD,uDAA0C,mBAAoB+B,MAApB,CAA2BC,IAA3B,EAA1C,CAAf,CADP;AAEE,oBAAA,SAAS,EAAE,KAFb;AAGE,oBAAA,KAAK,EAAE,IAHT;AAAA,2CAKE,QAAC,KAAD;AAAO,sBAAA,YAAY,eAAE,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE5C,OAAO,CAAC6C;AAA7B;AAAA;AAAA;AAAA;AAAA,+BAArB;AAAiE,sBAAA,IAAI,EAAC,MAAtE;AAA6E,sBAAA,OAAO,MAApF;AAAqF,sBAAA,UAAU;AAA/F;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,2BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAFJ,EAkBG,CAAA5B,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEwB,MAAjB,IAA0B,CAA1B,iBACC;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAE,MAAd;AAAsB,kBAAA,UAAU,EAAE,QAAlC;AAA4C,kBAAA,cAAc,EAAE,eAA5D;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,OAAO,EAAE,MAArB;AAA6B,oBAAA,KAAK,EAAEd,KAApC;AAA2C,oBAAA,UAAU,EAAE,QAAvD;AAAiE,oBAAA,cAAc,EAAE,YAAjF;AAAA,mDACGV,eAAe,CAAC,CAAD,CADlB,sDACG,kBAAoByB;AADvB;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAEnB,UAAlB;AAA8B,oBAAA,EAAE,EAAE,CAAlC;AAAqC,oBAAA,eAAe,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE,QAAC,OAAD;AACE,oBAAA,KAAK,sBAAe,uBAAAN,eAAe,CAAC,CAAD,CAAf,mGAAoB0B,MAApB,gFAA4BF,MAA5B,IAAqC,CAArC,2BAA0CxB,eAAe,CAAC,CAAD,CAAzD,uDAA0C,mBAAoB0B,MAApB,CAA2BC,IAA3B,EAA1C,CAAf,CADP;AAEE,oBAAA,SAAS,EAAE,KAFb;AAGE,oBAAA,KAAK,EAAE,IAHT;AAAA,2CAKE,QAAC,KAAD;AAAO,sBAAA,YAAY,eAAE,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE5C,OAAO,CAAC6C;AAA7B;AAAA;AAAA;AAAA;AAAA,+BAArB;AAAiE,sBAAA,IAAI,EAAC,MAAtE;AAA6E,sBAAA,OAAO,MAApF;AAAqF,sBAAA,UAAU;AAA/F;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,2BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAnBJ,EAmCG,CAAA1B,wBAAwB,SAAxB,IAAAA,wBAAwB,WAAxB,YAAAA,wBAAwB,CAAEsB,MAA1B,IAAmC,CAAnC,iBACC;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAE,MAAd;AAAsB,kBAAA,UAAU,EAAE,QAAlC;AAA4C,kBAAA,cAAc,EAAE,eAA5D;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,OAAO,EAAE,MAArB;AAA6B,oBAAA,KAAK,EAAEd,KAApC;AAA2C,oBAAA,UAAU,EAAE,QAAvD;AAAiE,oBAAA,cAAc,EAAE,YAAjF;AAAA,uDACGR,wBAAwB,CAAC,CAAD,CAD3B,0DACG,sBAA6BuB;AADhC;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAEnB,UAAlB;AAA8B,oBAAA,EAAE,EAAE,CAAlC;AAAqC,oBAAA,eAAe,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE,QAAC,OAAD;AACE,oBAAA,KAAK,sBACH,2BAAAJ,wBAAwB,CAAC,CAAD,CAAxB,4GAA6BwB,MAA7B,kFAAqCF,MAArC,IAA8C,CAA9C,+BAAmDtB,wBAAwB,CAAC,CAAD,CAA3E,2DAAmD,uBAA6BwB,MAA7B,CAAoCC,IAApC,EAAnD,CADG,CADP;AAIE,oBAAA,SAAS,EAAE,KAJb;AAKE,oBAAA,KAAK,EAAE,IALT;AAAA,2CAOE,QAAC,KAAD;AAAO,sBAAA,YAAY,eAAE,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE5C,OAAO,CAAC6C;AAA7B;AAAA;AAAA;AAAA;AAAA,+BAArB;AAAiE,sBAAA,IAAI,EAAC,MAAtE;AAA6E,sBAAA,OAAO,MAApF;AAAqF,sBAAA,UAAU;AAA/F;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,2BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBApCJ,EAsDG,CAAAxB,2BAA2B,SAA3B,IAAAA,2BAA2B,WAA3B,YAAAA,2BAA2B,CAAEoB,MAA7B,IAAsC,CAAtC,iBACC;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,OAAO,EAAE,MAAd;AAAsB,kBAAA,UAAU,EAAE,QAAlC;AAA4C,kBAAA,cAAc,EAAE,eAA5D;AAAA,0CACE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,OAAO,EAAE,MAArB;AAA6B,oBAAA,KAAK,EAAEd,KAApC;AAA2C,oBAAA,UAAU,EAAE,QAAvD;AAAiE,oBAAA,cAAc,EAAE,YAAjF;AAAA,uDACGN,2BAA2B,CAAC,CAAD,CAD9B,0DACG,sBAAgCqB;AADnC;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,UAAD;AAAY,oBAAA,IAAI,EAAEnB,UAAlB;AAA8B,oBAAA,EAAE,EAAE,CAAlC;AAAqC,oBAAA,eAAe,EAAC;AAArD;AAAA;AAAA;AAAA;AAAA,2BAJF,eAKE,QAAC,OAAD;AACE,oBAAA,KAAK,sBACH,2BAAAF,2BAA2B,CAAC,CAAD,CAA3B,4GAAgCsB,MAAhC,kFAAwCF,MAAxC,IAAiD,CAAjD,+BAAsDpB,2BAA2B,CAAC,CAAD,CAAjF,2DAAsD,uBAAgCsB,MAAhC,CAAuCC,IAAvC,EAAtD,CADG,CADP;AAIE,oBAAA,SAAS,EAAE,KAJb;AAKE,oBAAA,KAAK,EAAE,IALT;AAAA,2CAOE,QAAC,KAAD;AAAO,sBAAA,YAAY,eAAE,QAAC,QAAD;AAAU,wBAAA,SAAS,EAAE5C,OAAO,CAAC6C;AAA7B;AAAA;AAAA;AAAA;AAAA,+BAArB;AAAiE,sBAAA,IAAI,EAAC,MAAtE;AAA6E,sBAAA,OAAO,MAApF;AAAqF,sBAAA,UAAU;AAA/F;AAAA;AAAA;AAAA;AAAA;AAPF;AAAA;AAAA;AAAA;AAAA,2BALF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAvDJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAJY;AAiFdC,UAAAA,YAAY,EAAE;AAAEC,YAAAA,OAAO,EAAE;AAAX,WAjFA;AAkFdC,UAAAA,aAAa,EAAE,yBAAM;AACnB9C,YAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD,WApFa;AAqFd4D,UAAAA,WAAW,EAAE,uBAAM;AACjB/C,YAAAA,QAAQ,CAACb,SAAS,EAAV,CAAR;AACD;AAvFa;AANX;AAFC,KAAD,CADH,CAAR;AAqGAa,IAAAA,QAAQ,CAACd,kBAAkB,EAAnB,CAAR;AACD,GAhHD;;AAiHA,MAAM8D,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,SAAD,EAAYC,QAAZ,EAAsBC,aAAtB,EAAqCC,aAArC,EAAoDC,sBAApD,EAA4EC,0BAA5E,EAA2G;AACvI,QAAMC,aAAa,GAAG;AACpBf,MAAAA,OAAO,EAAE,EADW;AAEpB3B,MAAAA,IAAI,EAAEoC,SAFc;AAGpBR,MAAAA,MAAM,EAAE;AAHY,KAAtB;;AAKA,QAAIQ,SAAS,KAAK5D,SAAS,CAACyB,0BAA5B,EAAwD;AACtDyC,MAAAA,aAAa,CAACf,OAAd,GAAwBpD,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,6CAAf,EAA8D;AACpFyB,QAAAA,KAAK,EAAEL,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEZ;AAD8D,OAA9D,CAAxB;AAGAgB,MAAAA,aAAa,CAACd,MAAd,GAAuBrD,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2BR,QAA3B,EAAqC,IAArC,IACnBA,QAAQ,CAACvC,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC+C,MAAL,KAAgBtE,SAAS,CAACuE,0BAApC;AAAA,OAAhB,EAAgFC,GAAhF,CAAoF,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,cAAT;AAAA,OAApF,CADmB,GAEnB,EAFJ;AAGD,KAPD,MAOO,IAAId,SAAS,KAAK5D,SAAS,CAAC2B,uBAA5B,EAAqD;AAC1DuC,MAAAA,aAAa,CAACf,OAAd,GAAwBpD,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,0CAAf,EAA2D;AACjFiC,QAAAA,YAAY,EAAEZ,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEb;AADoD,OAA3D,CAAxB;AAGAgB,MAAAA,aAAa,CAACd,MAAd,GAAuBrD,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2BR,QAA3B,EAAqC,IAArC,IACnBA,QAAQ,CAACvC,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAAC+C,MAAL,KAAgBtE,SAAS,CAAC4E,0BAApC;AAAA,OAAhB,EAAgFJ,GAAhF,CAAoF,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,cAAT;AAAA,OAApF,CADmB,GAEnB,EAFJ;AAGD,KAPM,MAOA,IAAId,SAAS,KAAK5D,SAAS,CAAC6B,yCAA5B,EAAuE;AAC5EqC,MAAAA,aAAa,CAACf,OAAd,GAAwBpD,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,qDAAf,EAAsE;AAC5FmC,QAAAA,eAAe,EAAEb,sBAAF,aAAEA,sBAAF,uBAAEA,sBAAsB,CAAEd;AADmD,OAAtE,CAAxB;AAGAgB,MAAAA,aAAa,CAACd,MAAd,GAAuBrD,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2BR,QAA3B,EAAqC,IAArC,IACnBA,QAAQ,CAACvC,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACuD,kBAAL,KAA4B9E,SAAS,CAACuE,0BAAhD;AAAA,OAAhB,EAA4FC,GAA5F,CAAgG,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,cAAT;AAAA,OAAhG,CADmB,GAEnB,EAFJ;AAGD,KAPM,MAOA,IAAId,SAAS,KAAK5D,SAAS,CAAC+B,6BAA5B,EAA2D;AAChEmC,MAAAA,aAAa,CAACf,OAAd,GAAwBpD,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,8CAAf,EAA+D;AACrFqC,QAAAA,eAAe,EAAEd,0BAAF,aAAEA,0BAAF,uBAAEA,0BAA0B,CAAEf;AADwC,OAA/D,CAAxB;AAGAgB,MAAAA,aAAa,CAACd,MAAd,GAAuBrD,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2BR,QAA3B,EAAqC,IAArC,IACnBA,QAAQ,CAACvC,MAAT,CAAgB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACyD,sBAAL,KAAgChF,SAAS,CAACuE,0BAApD;AAAA,OAAhB,EAAgGC,GAAhG,CAAoG,UAACC,CAAD;AAAA,eAAOA,CAAC,CAACC,cAAT;AAAA,OAApG,CADmB,GAEnB,EAFJ;AAGD;;AACD,WAAOR,aAAP;AACD,GApCD;;AAsCA,MAAMe,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,QAAD,EAAc;AAAA;;AAC7C,QAAMC,cAAc,GAAGD,QAAH,aAAGA,QAAH,yCAAGA,QAAQ,CAAE3D,IAAb,mDAAG,eAAgB6D,iBAAvC;AACA,QAAMtB,aAAa,GAAG/D,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2Bc,cAA3B,EAA2C,IAA3C,IAClBA,cAAc,CAAC7D,MAAf,CAAsB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAAC+C,MAAL,KAAgBtE,SAAS,CAACuE,0BAApC;AAAA,KAAtB,CADkB,GAElB,EAFJ;AAGA,QAAMR,aAAa,GAAGhE,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2Bc,cAA3B,EAA2C,IAA3C,IAClBA,cAAc,CAAC7D,MAAf,CACE,UAACC,IAAD;AAAA,aACEA,IAAI,CAAC+C,MAAL,KAAgBtE,SAAS,CAAC4E,0BAA1B,IACA,CAAArD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEuD,kBAAN,MAA6B9E,SAAS,CAACuE,0BADvC,IAEA,CAAAhD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEyD,sBAAN,MAAiChF,SAAS,CAACuE,0BAH7C;AAAA,KADF,CADkB,GAOlB,EAPJ;AAQA,QAAMP,sBAAsB,GAAGjE,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2Bc,cAA3B,EAA2C,IAA3C,IAC3BA,cAAc,CAAC7D,MAAf,CAAsB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACuD,kBAAL,KAA4B9E,SAAS,CAACuE,0BAAhD;AAAA,KAAtB,CAD2B,GAE3B,EAFJ;AAGA,QAAMN,0BAA0B,GAAGlE,KAAK,CAACqE,OAAN,CAAcC,YAAd,CAA2Bc,cAA3B,EAA2C,IAA3C,IAC/BA,cAAc,CAAC7D,MAAf,CAAsB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACyD,sBAAL,KAAgChF,SAAS,CAACuE,0BAApD;AAAA,KAAtB,CAD+B,GAE/B,EAFJ;AAGA,QAAIc,yBAAyB,GAAG,EAAhC,CAnB6C,CAoB7C;;AACA,QAAI,CAAApB,0BAA0B,SAA1B,IAAAA,0BAA0B,WAA1B,YAAAA,0BAA0B,CAAEf,MAA5B,IAAqC,CAAzC,EAA4C;AAC1CmC,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAAC+B,6BADS,EAEnBoD,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUD,KAhC4C,CAiC7C;;;AACA,QAAI,CAAAH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEZ,MAAf,IAAwB,CAAxB,IAA6B,CAAAa,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEb,MAAf,MAA0B,CAA3D,EAA8D;AAC5DmC,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAACyB,0BADS,EAEnB0D,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUD,KA7C4C,CA8C7C;;;AACA,QAAI,CAAAH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEZ,MAAf,MAA0B,CAA1B,IAA+B,CAAAa,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEb,MAAf,IAAwB,CAA3D,EAA8D;AAC5DmC,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAAC2B,uBADS,EAEnBwD,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUD;;AACD,QAAI,CAAAD,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEd,MAAxB,IAAiC,CAArC,EAAwC;AACtCmC,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAAC6B,yCADS,EAEnBsD,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUD,KAtE4C,CAwE7C;;;AACA,QAAI,CAAAH,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEZ,MAAf,IAAwB,CAAxB,IAA6B,CAAAa,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEb,MAAf,IAAwB,CAAzD,EAA4D;AAC1DmC,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAACyB,0BADS,EAEnB0D,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUAoB,MAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAAC2B,uBADS,EAEnBwD,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;;AAUA,UAAI,CAAAD,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEd,MAAxB,IAAiC,CAArC,EAAwC;AACtCmC,QAAAA,yBAAyB,CAACC,IAA1B,CACE3B,qBAAqB,CACnB3D,SAAS,CAAC6B,yCADS,EAEnBsD,cAFmB,EAGnBrB,aAHmB,EAInBC,aAJmB,EAKnBC,sBALmB,EAMnBC,0BANmB,CADvB;AAUD;AACF;;AAED9C,IAAAA,mBAAmB,CAACkE,yBAAD,CAAnB;AACD,GA7GD;;AA+GA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,4BAAWtF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,yBAAf,CAAX,gBAA0D3C,KAAK,CAACwF,GAAN,CAAUC,UAAV,CAAqB5E,OAArB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,0BAAD;AACE,MAAA,WAAW,EAAEE,WADf;AAEE,MAAA,mBAAmB,EAAEC,mBAFvB;AAGE,MAAA,eAAe,EAAEE,eAHnB;AAIE,MAAA,wBAAwB,EAAEgE;AAJ5B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAaD;;GA7RuBzE,sB;UAGLnB,W,EACDC,W,EACIA,W,EAEMA,W;;;KAPJkB,sB","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { PremiumProcessingTasksView } from './PremiumProcessingTasks.view';\r\nimport { selectTechnicians, selectUser, showModal, resetCasesSelected, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { Tooltip, Badge, StatusIcon } from 'components';\r\nimport styles from './PremiumProcessingTasks.styles';\r\n// mui\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nexport default function PremiumProcessingTasks() {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingTasks' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const uiBrand = useSelector((state) => get(state, 'ui.brand'));\r\n  const technicians = useSelector(selectTechnicians);\r\n  const technicianAssigning = true;\r\n  const loggedUserDetails = useSelector(selectUser);\r\n  const userRoleDetails = loggedUserDetails?.userRole;\r\n\r\n  const showAssignedToModal = (displayMessages) => {\r\n    const successMessages = displayMessages?.filter((data) => data.flag === constants.ASSINGED_TO_SUCCESS_STATUS);\r\n    const failureMessages = displayMessages?.filter((data) => data.flag === constants.ASSINGED_TO_FAIL_STATUS);\r\n    const juniorTechnicianMessages = displayMessages?.filter((data) => data.flag === constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS);\r\n    const crossAssignmentUserMessages = displayMessages?.filter((data) => data.flag === constants.ASSINGED_TO_CROSS_USER_STATUS);\r\n    const statusList = [\r\n      { id: 1, code: 'success', type: 'success' },\r\n      { id: 2, code: 'error', type: 'error' },\r\n    ];\r\n    const width = '80%';\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('premiumProcessing.assignedToModalTitle'),\r\n          hideCompOnBlur: false,\r\n          disableAutoFocus: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('app.ok'),\r\n            confirmMessage: (\r\n              <Box>\r\n                <ul>\r\n                  {successMessages?.length > 0 && (\r\n                    <li>\r\n                      <Box display={'flex'} alignItems={'center'} justifyContent={'space-between'}>\r\n                        <Box pr={1} display={'flex'} width={width} alignItems={'center'} justifyContent={'flex-start'}>\r\n                          {successMessages[0]?.message}\r\n                        </Box>\r\n                        <StatusIcon list={statusList} translationPath=\"status\" id={1} />\r\n                        <Tooltip\r\n                          title={`Case Id : ${successMessages[0]?.caseId?.length > 0 && successMessages[0]?.caseId.join()}`}\r\n                          placement={'top'}\r\n                          arrow={true}\r\n                        >\r\n                          <Badge badgeContent={<InfoIcon className={classes.infoStyle} />} type=\"info\" compact standalone />\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </li>\r\n                  )}\r\n                  {failureMessages?.length > 0 && (\r\n                    <li>\r\n                      <Box display={'flex'} alignItems={'center'} justifyContent={'space-between'}>\r\n                        <Box pr={1} display={'flex'} width={width} alignItems={'center'} justifyContent={'flex-start'}>\r\n                          {failureMessages[0]?.message}\r\n                        </Box>\r\n                        <StatusIcon list={statusList} id={2} translationPath=\"status\" />\r\n                        <Tooltip\r\n                          title={`Case Id : ${failureMessages[0]?.caseId?.length > 0 && failureMessages[0]?.caseId.join()}`}\r\n                          placement={'top'}\r\n                          arrow={true}\r\n                        >\r\n                          <Badge badgeContent={<InfoIcon className={classes.infoStyle} />} type=\"info\" compact standalone />\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </li>\r\n                  )}\r\n                  {juniorTechnicianMessages?.length > 0 && (\r\n                    <li>\r\n                      <Box display={'flex'} alignItems={'center'} justifyContent={'space-between'}>\r\n                        <Box pr={1} display={'flex'} width={width} alignItems={'center'} justifyContent={'flex-start'}>\r\n                          {juniorTechnicianMessages[0]?.message}\r\n                        </Box>\r\n                        <StatusIcon list={statusList} id={2} translationPath=\"status\" />\r\n                        <Tooltip\r\n                          title={`Case Id : ${\r\n                            juniorTechnicianMessages[0]?.caseId?.length > 0 && juniorTechnicianMessages[0]?.caseId.join()\r\n                          }`}\r\n                          placement={'top'}\r\n                          arrow={true}\r\n                        >\r\n                          <Badge badgeContent={<InfoIcon className={classes.infoStyle} />} type=\"info\" compact standalone />\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </li>\r\n                  )}\r\n                  {crossAssignmentUserMessages?.length > 0 && (\r\n                    <li>\r\n                      <Box display={'flex'} alignItems={'center'} justifyContent={'space-between'}>\r\n                        <Box pr={1} display={'flex'} width={width} alignItems={'center'} justifyContent={'flex-start'}>\r\n                          {crossAssignmentUserMessages[0]?.message}\r\n                        </Box>\r\n                        <StatusIcon list={statusList} id={2} translationPath=\"status\" />\r\n                        <Tooltip\r\n                          title={`Case Id : ${\r\n                            crossAssignmentUserMessages[0]?.caseId?.length > 0 && crossAssignmentUserMessages[0]?.caseId.join()\r\n                          }`}\r\n                          placement={'top'}\r\n                          arrow={true}\r\n                        >\r\n                          <Badge badgeContent={<InfoIcon className={classes.infoStyle} />} type=\"info\" compact standalone />\r\n                        </Tooltip>\r\n                      </Box>\r\n                    </li>\r\n                  )}\r\n                </ul>\r\n              </Box>\r\n            ),\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n            handleClose: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n    dispatch(resetCasesSelected());\r\n  };\r\n  const assignedToModalObject = (flagValue, dataList, successStatus, failureStatus, juniorTechnicianStatus, crossGroupAssignmentStatus) => {\r\n    const displayObject = {\r\n      message: '',\r\n      flag: flagValue,\r\n      caseId: [],\r\n    };\r\n    if (flagValue === constants.ASSINGED_TO_SUCCESS_STATUS) {\r\n      displayObject.message = utils.string.t('premiumProcessing.casesAssignedSuccessfully', {\r\n        count: successStatus?.length,\r\n      });\r\n      displayObject.caseId = utils.generic.isValidArray(dataList, true)\r\n        ? dataList.filter((data) => data.status === constants.SUCCESS_STATUS_CASE_ASSIGN).map((a) => a.caseIncidentId)\r\n        : [];\r\n    } else if (flagValue === constants.ASSINGED_TO_FAIL_STATUS) {\r\n      displayObject.message = utils.string.t('premiumProcessing.casesAssignmentFailure', {\r\n        failureCount: failureStatus?.length,\r\n      });\r\n      displayObject.caseId = utils.generic.isValidArray(dataList, true)\r\n        ? dataList.filter((data) => data.status === constants.FAILURE_STATUS_CASE_ASSIGN).map((a) => a.caseIncidentId)\r\n        : [];\r\n    } else if (flagValue === constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS) {\r\n      displayObject.message = utils.string.t('premiumProcessing.caseNotAssignedToJuniorTechnician', {\r\n        juniorTechCount: juniorTechnicianStatus?.length,\r\n      });\r\n      displayObject.caseId = utils.generic.isValidArray(dataList, true)\r\n        ? dataList.filter((data) => data.isJuniorTechnician === constants.SUCCESS_STATUS_CASE_ASSIGN).map((a) => a.caseIncidentId)\r\n        : [];\r\n    } else if (flagValue === constants.ASSINGED_TO_CROSS_USER_STATUS) {\r\n      displayObject.message = utils.string.t('premiumProcessing.crossGroupAssignmentStatus', {\r\n        crossGroupCount: crossGroupAssignmentStatus?.length,\r\n      });\r\n      displayObject.caseId = utils.generic.isValidArray(dataList, true)\r\n        ? dataList.filter((data) => data.isCrossGroupAssignment === constants.SUCCESS_STATUS_CASE_ASSIGN).map((a) => a.caseIncidentId)\r\n        : [];\r\n    }\r\n    return displayObject;\r\n  };\r\n\r\n  const handleAssignedUserToCase = (response) => {\r\n    const responseObject = response?.data?.assignCaseRequest;\r\n    const successStatus = utils.generic.isValidArray(responseObject, true)\r\n      ? responseObject.filter((data) => data.status === constants.SUCCESS_STATUS_CASE_ASSIGN)\r\n      : [];\r\n    const failureStatus = utils.generic.isValidArray(responseObject, true)\r\n      ? responseObject.filter(\r\n          (data) =>\r\n            data.status === constants.FAILURE_STATUS_CASE_ASSIGN &&\r\n            data?.isJuniorTechnician !== constants.SUCCESS_STATUS_CASE_ASSIGN &&\r\n            data?.isCrossGroupAssignment !== constants.SUCCESS_STATUS_CASE_ASSIGN\r\n        )\r\n      : [];\r\n    const juniorTechnicianStatus = utils.generic.isValidArray(responseObject, true)\r\n      ? responseObject.filter((data) => data.isJuniorTechnician === constants.SUCCESS_STATUS_CASE_ASSIGN)\r\n      : [];\r\n    const crossGroupAssignmentStatus = utils.generic.isValidArray(responseObject, true)\r\n      ? responseObject.filter((data) => data.isCrossGroupAssignment === constants.SUCCESS_STATUS_CASE_ASSIGN)\r\n      : [];\r\n    let displayAssignedToResponse = [];\r\n    //For Cross user assignment\r\n    if (crossGroupAssignmentStatus?.length > 0) {\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_CROSS_USER_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n    }\r\n    // All success\r\n    if (successStatus?.length > 0 && failureStatus?.length === 0) {\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_SUCCESS_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n    }\r\n    // All failed\r\n    if (successStatus?.length === 0 && failureStatus?.length > 0) {\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_FAIL_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n    }\r\n    if (juniorTechnicianStatus?.length > 0) {\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n    }\r\n\r\n    // Mixed some are success and some or failure\r\n    if (successStatus?.length > 0 && failureStatus?.length > 0) {\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_SUCCESS_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n      displayAssignedToResponse.push(\r\n        assignedToModalObject(\r\n          constants.ASSINGED_TO_FAIL_STATUS,\r\n          responseObject,\r\n          successStatus,\r\n          failureStatus,\r\n          juniorTechnicianStatus,\r\n          crossGroupAssignmentStatus\r\n        )\r\n      );\r\n      if (juniorTechnicianStatus?.length > 0) {\r\n        displayAssignedToResponse.push(\r\n          assignedToModalObject(\r\n            constants.ASSINGED_TO_FAIL_JUNIOR_TECHNICIAN_STATUS,\r\n            responseObject,\r\n            successStatus,\r\n            failureStatus,\r\n            juniorTechnicianStatus,\r\n            crossGroupAssignmentStatus\r\n          )\r\n        );\r\n      }\r\n    }\r\n\r\n    showAssignedToModal(displayAssignedToResponse);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('premiumProcessing.title')} - ${utils.app.getAppName(uiBrand)}`}</title>\r\n      </Helmet>\r\n      <PremiumProcessingTasksView\r\n        technicians={technicians}\r\n        technicianAssigning={technicianAssigning}\r\n        userRoleDetails={userRoleDetails}\r\n        handleAssignedUserToCase={handleAssignedUserToCase}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}