{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { addLoader, authLogout, storeProcessingInstructionDocuments, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var removeSlipDocument = function removeSlipDocument(formData) {\n  return function (dispatch, getState) {\n    var state = getState(); // prettier-ignore\n\n    var _state$user = state.user,\n        auth = _state$user.auth,\n        id = _state$user.id,\n        endpoint = state.config.vars.endpoint;\n    var instruction = formData.instruction,\n        documents = formData.documents,\n        riskRef = formData.riskRef,\n        file = formData.file;\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.removeSlipDocument'\n    };\n    dispatch(removeSlipDocumentRequest(formData));\n    dispatch(addLoader({\n      key: 'removeSlipDocument',\n      message: utils.string.t('fileRemove.removing')\n    }));\n    var validFormData = (riskRef === null || riskRef === void 0 ? void 0 : riskRef.departmentCode) && (riskRef === null || riskRef === void 0 ? void 0 : riskRef.policyUID) && (file === null || file === void 0 ? void 0 : file.folderUuid) && (file === null || file === void 0 ? void 0 : file.uuid) && (riskRef === null || riskRef === void 0 ? void 0 : riskRef.xbInstance);\n\n    if (!formData || !validFormData) {\n      dispatch(removeSlipDocumentFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: utils.string.t('processingInstructions.missingRemoveFileDataParameters')\n      })));\n      dispatch(enqueueNotification('notification.fileUpload.upload.fail', 'error'));\n      dispatch(removeLoader('removeSlipDocument'));\n      return;\n    }\n\n    var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n    return utils.api.delete({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: 'gxbRemoveDocument',\n      params: _objectSpread(_objectSpread({}, isEndorsement && {\n        endorsementUid: riskRef === null || riskRef === void 0 ? void 0 : riskRef.bulkEndorsementUid\n      }), {}, {\n        departmentCode: riskRef.departmentCode,\n        policyUid: riskRef.policyUID,\n        folderUid: file.folderUuid,\n        documentUid: file.uuid,\n        xbInstance: riskRef.xbInstance,\n        updatedBy: id //After RBAC implementation in the api side remove this updatedBy\n\n      })\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var toDelete = data.data.documentUid;\n      var index = riskRef === null || riskRef === void 0 ? void 0 : riskRef.gxbDocuments.findIndex(function (o) {\n        return utils.string.replaceLowerCase(o.uuid) === utils.string.replaceLowerCase(toDelete);\n      });\n      if (index !== -1) riskRef === null || riskRef === void 0 ? void 0 : riskRef.gxbDocuments.splice(index, 1);\n\n      var updatedRiskRef = _objectSpread(_objectSpread({}, riskRef), {}, {\n        gxbDocuments: riskRef === null || riskRef === void 0 ? void 0 : riskRef.gxbDocuments\n      });\n\n      var updatedDocuments = _objectSpread(_objectSpread({}, documents), {}, {\n        riskReferences: Object.values([].concat(_toConsumableArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences), [updatedRiskRef]).reduce(function (result, _ref) {\n          var riskRefId = _ref.riskRefId,\n              rest = _objectWithoutProperties(_ref, [\"riskRefId\"]);\n\n          result[riskRefId] = _objectSpread(_objectSpread({}, result[riskRefId] || {}), {}, {\n            riskRefId: riskRefId\n          }, rest);\n          return result;\n        }, {}))\n      });\n\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\n      dispatch(removeSlipDocumentSuccess(data.data));\n      dispatch(enqueueNotification(data.message, 'success'));\n    }).catch(function (err) {\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(removeSlipDocumentFailure(err));\n      dispatch(enqueueNotification('notification.fileRemove.remove.fail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('removeSlipDocument'));\n    });\n  };\n};\nexport var removeSlipDocumentRequest = function removeSlipDocumentRequest(payload) {\n  return {\n    type: 'REMOVE_SLIP_DOCUMENT_REQUEST',\n    payload: payload\n  };\n};\nexport var removeSlipDocumentSuccess = function removeSlipDocumentSuccess(data) {\n  return {\n    type: 'REMOVE_SLIP_DOCUMENT_SUCCESS',\n    payload: {\n      data: data\n    }\n  };\n};\nexport var removeSlipDocumentFailure = function removeSlipDocumentFailure(error) {\n  return {\n    type: 'REMOVE_SLIP_DOCUMENT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.removeSlipDocument.js"],"names":["addLoader","authLogout","storeProcessingInstructionDocuments","enqueueNotification","removeLoader","utils","removeSlipDocument","formData","dispatch","getState","state","user","auth","id","endpoint","config","vars","instruction","documents","riskRef","file","defaultError","removeSlipDocumentRequest","key","message","string","t","validFormData","departmentCode","policyUID","folderUuid","uuid","xbInstance","removeSlipDocumentFailure","isEndorsement","processingInstructions","processTypeId","api","delete","token","accessToken","dmsService","path","params","endorsementUid","bulkEndorsementUid","policyUid","folderUid","documentUid","updatedBy","then","response","handleResponse","json","handleNewData","data","toDelete","index","gxbDocuments","findIndex","o","replaceLowerCase","splice","updatedRiskRef","updatedDocuments","riskReferences","Object","values","reduce","result","riskRefId","rest","removeSlipDocumentSuccess","catch","err","handleUnauthorized","finally","payload","type","error"],"mappings":"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","sourcesContent":["// app\r\nimport { addLoader, authLogout, storeProcessingInstructionDocuments, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const removeSlipDocument = (formData) => (dispatch, getState) => {\r\n  const state = getState();\r\n\r\n  // prettier-ignore\r\n  const { user: { auth, id }, config: { vars: { endpoint } },  } = state;\r\n  const { instruction, documents, riskRef, file } = formData;\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.removeSlipDocument',\r\n  };\r\n\r\n  dispatch(removeSlipDocumentRequest(formData));\r\n  dispatch(addLoader({ key: 'removeSlipDocument', message: utils.string.t('fileRemove.removing') }));\r\n\r\n  const validFormData = riskRef?.departmentCode && riskRef?.policyUID && file?.folderUuid && file?.uuid && riskRef?.xbInstance;\r\n\r\n  if (!formData || !validFormData) {\r\n    dispatch(\r\n      removeSlipDocumentFailure({\r\n        ...defaultError,\r\n        message: utils.string.t('processingInstructions.missingRemoveFileDataParameters'),\r\n      })\r\n    );\r\n    dispatch(enqueueNotification('notification.fileUpload.upload.fail', 'error'));\r\n    dispatch(removeLoader('removeSlipDocument'));\r\n    return;\r\n  }\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: 'gxbRemoveDocument',\r\n      params: {\r\n        ...(isEndorsement && { endorsementUid: riskRef?.bulkEndorsementUid }),\r\n        departmentCode: riskRef.departmentCode,\r\n        policyUid: riskRef.policyUID,\r\n        folderUid: file.folderUuid,\r\n        documentUid: file.uuid,\r\n        xbInstance: riskRef.xbInstance,\r\n        updatedBy: id, //After RBAC implementation in the api side remove this updatedBy\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      const toDelete = data.data.documentUid;\r\n      const index = riskRef?.gxbDocuments.findIndex(\r\n        (o) => utils.string.replaceLowerCase(o.uuid) === utils.string.replaceLowerCase(toDelete)\r\n      );\r\n      if (index !== -1) riskRef?.gxbDocuments.splice(index, 1);\r\n      const updatedRiskRef = {\r\n        ...riskRef,\r\n        gxbDocuments: riskRef?.gxbDocuments,\r\n      };\r\n\r\n      const updatedDocuments = {\r\n        ...documents,\r\n        riskReferences: Object.values(\r\n          [...documents?.riskReferences, ...[updatedRiskRef]].reduce((result, { riskRefId, ...rest }) => {\r\n            result[riskRefId] = {\r\n              ...(result[riskRefId] || {}),\r\n              riskRefId,\r\n              ...rest,\r\n            };\r\n            return result;\r\n          }, {})\r\n        ),\r\n      };\r\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\r\n      dispatch(removeSlipDocumentSuccess(data.data));\r\n      dispatch(enqueueNotification(data.message, 'success'));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(removeSlipDocumentFailure(err));\r\n      dispatch(enqueueNotification('notification.fileRemove.remove.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('removeSlipDocument'));\r\n    });\r\n};\r\n\r\nexport const removeSlipDocumentRequest = (payload) => {\r\n  return {\r\n    type: 'REMOVE_SLIP_DOCUMENT_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removeSlipDocumentSuccess = (data) => {\r\n  return {\r\n    type: 'REMOVE_SLIP_DOCUMENT_SUCCESS',\r\n    payload: {\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const removeSlipDocumentFailure = (error) => {\r\n  return {\r\n    type: 'REMOVE_SLIP_DOCUMENT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}