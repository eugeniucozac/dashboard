{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\MarketingStructuring\\\\MarketingStructuring.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Button, Overflow, Restricted, Tabs, Translate } from 'components';\nimport { StructuringTable } from 'modules';\nimport * as constants from 'consts'; // mui\n\nimport { Box, makeStyles } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\nimport Switch from '@material-ui/core/Switch';\nimport styles from './MarketingStructuring.styles';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMarketingStructuringView.propTypes = {\n  layers: PropTypes.array,\n  tabs: PropTypes.array,\n  commentIDs: PropTypes.array,\n  bulk: PropTypes.shape({\n    type: PropTypes.string,\n    items: PropTypes.array.isRequired,\n    itemsMarkets: PropTypes.array.isRequired\n  }).isRequired,\n  handlers: PropTypes.shape({\n    getUpdateString: PropTypes.func.isRequired,\n    bulkUpdate: PropTypes.func.isRequired,\n    toggleTab: PropTypes.func.isRequired,\n    selectBulkAll: PropTypes.func.isRequired,\n    toggleBulkSelect: PropTypes.func.isRequired\n  }).isRequired,\n  isLayerChecked: PropTypes.bool,\n  isLineChecked: PropTypes.bool,\n  showBulkSelect: PropTypes.bool\n};\nexport function MarketingStructuringView(_ref) {\n  var layers = _ref.layers,\n      tabs = _ref.tabs,\n      commentIDs = _ref.commentIDs,\n      bulk = _ref.bulk,\n      handlers = _ref.handlers,\n      showBulkSelect = _ref.showBulkSelect;\n  var classes = makeStyles(styles, {\n    name: 'MarketingStructuring'\n  })();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"placement-marketing-structuring\",\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      tabs: tabs,\n      onChange: handlers.toggleTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(StructuringTable, {\n        layers: layers,\n        commentIDs: commentIDs\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), (layers === null || layers === void 0 ? void 0 : layers.length) ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER],\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          className: classes.formControlLabel,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            m: 1,\n            children: /*#__PURE__*/_jsxDEV(Translate, {\n              variant: \"body2\",\n              label: 'placement.marketing.multiSelectToggle'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            color: \"primary\",\n            size: \"small\",\n            onChange: handlers.toggleBulkSelect,\n            checked: showBulkSelect,\n            \"data-testid\": \"switch-selector\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 13\n        }, this), showBulkSelect && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            m: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: CheckBoxIcon,\n              color: \"primary\",\n              variant: \"outlined\",\n              size: \"xsmall\",\n              text: utils.string.t('placement.marketing.selectAll'),\n              onClick: handlers.selectBulkAll,\n              \"data-testid\": \"btn-select-all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            m: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: CheckBoxOutlineBlankIcon,\n              color: \"primary\",\n              variant: \"outlined\",\n              size: \"xsmall\",\n              text: utils.string.t('placement.marketing.deSelectAll'),\n              onClick: handlers.clearAllPlacement,\n              \"data-testid\": \"btn-clear-all\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, this), bulk.items && bulk.items.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            m: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: EditIcon,\n              color: \"primary\",\n              variant: \"outlined\",\n              disabled: !bulk.items || bulk.items.length <= 0,\n              size: \"xsmall\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: 'placement.marketing.editNumLayers',\n                options: {\n                  count: bulk.items && bulk.items.length\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 29\n              }, this),\n              onClick: function onClick(e) {\n                return handlers.bulkUpdate(e, true);\n              },\n              \"data-testid\": \"btn-edit-layer\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 19\n          }, this), bulk.itemsMarkets && bulk.itemsMarkets.length > 0 && /*#__PURE__*/_jsxDEV(Box, {\n            m: 0.5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: EditIcon,\n              color: \"primary\",\n              variant: \"outlined\",\n              disabled: !bulk.itemsMarkets || bulk.itemsMarkets.length <= 0,\n              size: \"xsmall\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: 'placement.marketing.editNumLines',\n                options: {\n                  count: bulk.itemsMarkets && bulk.itemsMarkets.length\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 25\n              }, this),\n              onClick: function onClick(e) {\n                return handlers.bulkUpdate(e, false);\n              },\n              \"data-testid\": \"btn-edit-market\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 103,\n            columnNumber: 19\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n_c = MarketingStructuringView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketingStructuringView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/MarketingStructuring/MarketingStructuring.view.js"],"names":["React","PropTypes","Button","Overflow","Restricted","Tabs","Translate","StructuringTable","constants","Box","makeStyles","EditIcon","CheckBoxIcon","CheckBoxOutlineBlankIcon","Switch","styles","utils","MarketingStructuringView","propTypes","layers","array","tabs","commentIDs","bulk","shape","type","string","items","isRequired","itemsMarkets","handlers","getUpdateString","func","bulkUpdate","toggleTab","selectBulkAll","toggleBulkSelect","isLayerChecked","bool","isLineChecked","showBulkSelect","classes","name","length","ROLE_BROKER","formControlLabel","t","clearAllPlacement","count","e"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Button, Overflow, Restricted, Tabs, Translate } from 'components';\r\nimport { StructuringTable } from 'modules';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Box, makeStyles } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport CheckBoxIcon from '@material-ui/icons/CheckBox';\r\nimport CheckBoxOutlineBlankIcon from '@material-ui/icons/CheckBoxOutlineBlank';\r\nimport Switch from '@material-ui/core/Switch';\r\n\r\nimport styles from './MarketingStructuring.styles';\r\nimport * as utils from 'utils';\r\n\r\nMarketingStructuringView.propTypes = {\r\n  layers: PropTypes.array,\r\n  tabs: PropTypes.array,\r\n  commentIDs: PropTypes.array,\r\n  bulk: PropTypes.shape({\r\n    type: PropTypes.string,\r\n    items: PropTypes.array.isRequired,\r\n    itemsMarkets: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    getUpdateString: PropTypes.func.isRequired,\r\n    bulkUpdate: PropTypes.func.isRequired,\r\n    toggleTab: PropTypes.func.isRequired,\r\n    selectBulkAll: PropTypes.func.isRequired,\r\n    toggleBulkSelect: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  isLayerChecked: PropTypes.bool,\r\n  isLineChecked: PropTypes.bool,\r\n  showBulkSelect: PropTypes.bool,\r\n};\r\n\r\nexport function MarketingStructuringView({ layers, tabs, commentIDs, bulk, handlers, showBulkSelect }) {\r\n  const classes = makeStyles(styles, { name: 'MarketingStructuring' })();\r\n  return (\r\n    <Box data-testid=\"placement-marketing-structuring\">\r\n      <Tabs tabs={tabs} onChange={handlers.toggleTab} />\r\n\r\n      <Overflow>\r\n        <StructuringTable layers={layers} commentIDs={commentIDs} />\r\n      </Overflow>\r\n      {layers?.length ? (\r\n        <Box display=\"flex\">\r\n          <Restricted include={[constants.ROLE_BROKER]}>\r\n            <Box display=\"flex\" alignItems=\"center\" className={classes.formControlLabel}>\r\n              <Box m={1}>\r\n                <Translate variant=\"body2\" label={'placement.marketing.multiSelectToggle'} />\r\n              </Box>\r\n              <Switch\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                onChange={handlers.toggleBulkSelect}\r\n                checked={showBulkSelect}\r\n                data-testid=\"switch-selector\"\r\n              />\r\n            </Box>\r\n            {showBulkSelect && (\r\n              <>\r\n                <Box m={0.5}>\r\n                  <Button\r\n                    icon={CheckBoxIcon}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    size=\"xsmall\"\r\n                    text={utils.string.t('placement.marketing.selectAll')}\r\n                    onClick={handlers.selectBulkAll}\r\n                    data-testid=\"btn-select-all\"\r\n                  />\r\n                </Box>\r\n                <Box m={0.5}>\r\n                  <Button\r\n                    icon={CheckBoxOutlineBlankIcon}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    size=\"xsmall\"\r\n                    text={utils.string.t('placement.marketing.deSelectAll')}\r\n                    onClick={handlers.clearAllPlacement}\r\n                    data-testid=\"btn-clear-all\"\r\n                  />\r\n                </Box>\r\n                {bulk.items && bulk.items.length > 0 && (\r\n                  <Box m={0.5}>\r\n                    <Button\r\n                      icon={EditIcon}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      disabled={!bulk.items || bulk.items.length <= 0}\r\n                      size=\"xsmall\"\r\n                      text={<Translate label={'placement.marketing.editNumLayers'} options={{ count: bulk.items && bulk.items.length }} />}\r\n                      onClick={(e) => handlers.bulkUpdate(e, true)}\r\n                      data-testid=\"btn-edit-layer\"\r\n                    />\r\n                  </Box>\r\n                )}\r\n                {bulk.itemsMarkets && bulk.itemsMarkets.length > 0 && (\r\n                  <Box m={0.5}>\r\n                    <Button\r\n                      icon={EditIcon}\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      disabled={!bulk.itemsMarkets || bulk.itemsMarkets.length <= 0}\r\n                      size=\"xsmall\"\r\n                      text={\r\n                        <Translate\r\n                          label={'placement.marketing.editNumLines'}\r\n                          options={{ count: bulk.itemsMarkets && bulk.itemsMarkets.length }}\r\n                        />\r\n                      }\r\n                      onClick={(e) => handlers.bulkUpdate(e, false)}\r\n                      data-testid=\"btn-edit-market\"\r\n                    />\r\n                  </Box>\r\n                )}\r\n              </>\r\n            )}\r\n          </Restricted>\r\n        </Box>\r\n      ) : null}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}