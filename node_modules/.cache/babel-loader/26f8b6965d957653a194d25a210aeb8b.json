{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpportunityLeads\\\\OpportunityLeads.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './OpportunityLeads.styles';\nimport { Empty, Link, Loader, SeparatedList, TableCell, TableHead, TableCheckbox, Translate, Warning } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, Collapse, Fade, Table, TableBody, TableRow } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nOpportunityLeadsView.propTypes = {\n  trip: PropTypes.object.isRequired,\n  leads: PropTypes.array.isRequired,\n  leadsLoading: PropTypes.bool.isRequired,\n  leadsEmpty: PropTypes.bool.isRequired,\n  expanded: PropTypes.array.isRequired,\n  selected: PropTypes.array.isRequired,\n  handleClickLeadExisting: PropTypes.func.isRequired,\n  handleClickCheckbox: PropTypes.func.isRequired,\n  handleClickLead: PropTypes.func.isRequired\n};\nexport function OpportunityLeadsView(_ref) {\n  var _this = this;\n\n  var trip = _ref.trip,\n      leads = _ref.leads,\n      leadsLoading = _ref.leadsLoading,\n      leadsEmpty = _ref.leadsEmpty,\n      expanded = _ref.expanded,\n      selected = _ref.selected,\n      handleClickLeadExisting = _ref.handleClickLeadExisting,\n      handleClickCheckbox = _ref.handleClickCheckbox,\n      handleClickLead = _ref.handleClickLead;\n  var classes = makeStyles(styles, {\n    name: 'OpportunityLeads'\n  })();\n  var hasLeads = utils.generic.isValidArray(leads, true);\n  var cols = [{\n    id: 'client',\n    label: utils.string.t('app.client')\n  }, {\n    id: 'checkbox',\n    label: utils.string.t('opportunity.addToTrip'),\n    narrow: true,\n    nowrap: true\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Collapse, {\n      in: hasLeads,\n      children: /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Fade, {\n          in: hasLeads,\n          children: /*#__PURE__*/_jsxDEV(Translate, {\n            variant: \"h3\",\n            label: \"opportunity.leadsFound\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          \"data-testid\": \"leads-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            columns: cols\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            \"data-testid\": \"leads-list\",\n            children: leads.map(function (lead) {\n              var rowHasVisits = utils.generic.isValidArray(lead.visits, true);\n              var rowIsExpanded = expanded.includes(lead.id);\n\n              var classesRow = _defineProperty({}, classes.rowExpanded, rowIsExpanded);\n\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  selected: selected.includes(lead.id),\n                  onClick: handleClickLead(lead),\n                  className: classnames(classesRow),\n                  \"data-testid\": \"leads-row-\".concat(lead.id),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    \"data-testid\": \"leads-cell-name-\".concat(lead.id),\n                    children: [get(lead, 'client.name'), rowHasVisits && /*#__PURE__*/_jsxDEV(\"div\", {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        text: utils.string.t('opportunity.existingTrips'),\n                        color: \"secondary\",\n                        icon: ArrowDropDownIcon,\n                        iconPosition: \"right\",\n                        handleClick: handleClickLeadExisting(lead.id)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 82,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 81,\n                      columnNumber: 27\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 77,\n                    columnNumber: 23\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    compact: true,\n                    narrow: true,\n                    center: true,\n                    \"data-testid\": \"leads-cell-checkbox-\".concat(lead.id),\n                    children: /*#__PURE__*/_jsxDEV(TableCheckbox, {\n                      checked: trip.visits.map(function (v) {\n                        return v.id;\n                      }).includes(lead.id),\n                      disabled: false,\n                      handleClick: handleClickCheckbox(lead)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 94,\n                      columnNumber: 25\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 23\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 70,\n                  columnNumber: 21\n                }, _this), rowHasVisits && expanded.includes(lead.id) && lead.visits.map(function (visit) {\n                  var hasUsers = utils.generic.isValidArray(visit.users, true);\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    onClick: handleClickLead(lead),\n                    className: classes.visitRow,\n                    \"data-testid\": \"leads-row-visit-\".concat(lead.id, \"-\").concat(visit.id),\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      compact: true,\n                      \"data-testid\": \"leads-cell-visit-name-\".concat(lead.id, \"-\").concat(visit.id),\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.visitWrapper,\n                        children: [/*#__PURE__*/_jsxDEV(SubdirectoryArrowRightIcon, {\n                          className: classes.iconSubdirectory\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 33\n                        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                          className: classes.visitDetails,\n                          children: [hasUsers && /*#__PURE__*/_jsxDEV(SeparatedList, {\n                            list: visit.users.map(function (user) {\n                              user.name = utils.user.fullname(user);\n                              return user;\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 120,\n                            columnNumber: 37\n                          }, _this), visit.visitingDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.visitDate,\n                            children: [\"(\", utils.string.t('format.date', {\n                              value: {\n                                date: visit.visitingDate,\n                                format: config.ui.format.date.text\n                              }\n                            }), \")\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 128,\n                            columnNumber: 37\n                          }, _this), !hasUsers && !visit.visitingDate && /*#__PURE__*/_jsxDEV(\"span\", {\n                            children: \"\\xA0\"\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 136,\n                            columnNumber: 72\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 118,\n                          columnNumber: 33\n                        }, _this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 116,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 115,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      minimal: true,\n                      narrow: true,\n                      center: true,\n                      \"data-testid\": \"leads-cell-visit-checkbox-\".concat(lead.id, \"-\").concat(visit.id),\n                      children: /*#__PURE__*/_jsxDEV(TableCheckbox, {\n                        checked: trip.visits.map(function (v) {\n                          return v.id;\n                        }).includes(visit.id),\n                        disabled: false,\n                        handleClick: handleClickCheckbox(lead, visit)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 142,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 29\n                    }, _this)]\n                  }, visit.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 27\n                  }, _this);\n                })]\n              }, lead.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Fade, {\n      in: !hasLeads,\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: !hasLeads,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: -3,\n          children: [/*#__PURE__*/_jsxDEV(Empty, {\n            text: utils.string.t('opportunity.searchHint')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this), leadsEmpty && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Warning, {\n              text: utils.string.t('opportunity.leadsEmpty'),\n              type: \"alert\",\n              icon: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 160,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Loader, {\n      visible: leadsLoading,\n      label: utils.string.t('opportunity.leadsLoading'),\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = OpportunityLeadsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpportunityLeadsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpportunityLeads/OpportunityLeads.view.js"],"names":["React","Fragment","PropTypes","classnames","get","styles","Empty","Link","Loader","SeparatedList","TableCell","TableHead","TableCheckbox","Translate","Warning","utils","config","makeStyles","Box","Collapse","Fade","Table","TableBody","TableRow","ArrowDropDownIcon","SubdirectoryArrowRightIcon","OpportunityLeadsView","propTypes","trip","object","isRequired","leads","array","leadsLoading","bool","leadsEmpty","expanded","selected","handleClickLeadExisting","func","handleClickCheckbox","handleClickLead","classes","name","hasLeads","generic","isValidArray","cols","id","label","string","t","narrow","nowrap","map","lead","rowHasVisits","visits","rowIsExpanded","includes","classesRow","rowExpanded","v","visit","hasUsers","users","visitRow","visitWrapper","iconSubdirectory","visitDetails","user","fullname","visitingDate","visitDate","value","date","format","ui","text"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './OpportunityLeads.styles';\r\nimport { Empty, Link, Loader, SeparatedList, TableCell, TableHead, TableCheckbox, Translate, Warning } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, Collapse, Fade, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport SubdirectoryArrowRightIcon from '@material-ui/icons/SubdirectoryArrowRight';\r\n\r\nOpportunityLeadsView.propTypes = {\r\n  trip: PropTypes.object.isRequired,\r\n  leads: PropTypes.array.isRequired,\r\n  leadsLoading: PropTypes.bool.isRequired,\r\n  leadsEmpty: PropTypes.bool.isRequired,\r\n  expanded: PropTypes.array.isRequired,\r\n  selected: PropTypes.array.isRequired,\r\n  handleClickLeadExisting: PropTypes.func.isRequired,\r\n  handleClickCheckbox: PropTypes.func.isRequired,\r\n  handleClickLead: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function OpportunityLeadsView({\r\n  trip,\r\n  leads,\r\n  leadsLoading,\r\n  leadsEmpty,\r\n  expanded,\r\n  selected,\r\n  handleClickLeadExisting,\r\n  handleClickCheckbox,\r\n  handleClickLead,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'OpportunityLeads' })();\r\n  const hasLeads = utils.generic.isValidArray(leads, true);\r\n\r\n  const cols = [\r\n    { id: 'client', label: utils.string.t('app.client') },\r\n    { id: 'checkbox', label: utils.string.t('opportunity.addToTrip'), narrow: true, nowrap: true },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Collapse in={hasLeads}>\r\n        <Fragment>\r\n          <Fade in={hasLeads}>\r\n            <Translate variant=\"h3\" label=\"opportunity.leadsFound\" />\r\n          </Fade>\r\n\r\n          <Table size=\"small\" data-testid=\"leads-table\">\r\n            <TableHead columns={cols} />\r\n\r\n            <TableBody data-testid=\"leads-list\">\r\n              {leads.map((lead) => {\r\n                const rowHasVisits = utils.generic.isValidArray(lead.visits, true);\r\n                const rowIsExpanded = expanded.includes(lead.id);\r\n\r\n                const classesRow = {\r\n                  [classes.rowExpanded]: rowIsExpanded,\r\n                };\r\n\r\n                return (\r\n                  <Fragment key={lead.id}>\r\n                    <TableRow\r\n                      hover\r\n                      selected={selected.includes(lead.id)}\r\n                      onClick={handleClickLead(lead)}\r\n                      className={classnames(classesRow)}\r\n                      data-testid={`leads-row-${lead.id}`}\r\n                    >\r\n                      <TableCell data-testid={`leads-cell-name-${lead.id}`}>\r\n                        {get(lead, 'client.name')}\r\n\r\n                        {rowHasVisits && (\r\n                          <div>\r\n                            <Link\r\n                              text={utils.string.t('opportunity.existingTrips')}\r\n                              color=\"secondary\"\r\n                              icon={ArrowDropDownIcon}\r\n                              iconPosition=\"right\"\r\n                              handleClick={handleClickLeadExisting(lead.id)}\r\n                            />\r\n                          </div>\r\n                        )}\r\n                      </TableCell>\r\n\r\n                      <TableCell compact narrow center data-testid={`leads-cell-checkbox-${lead.id}`}>\r\n                        <TableCheckbox\r\n                          checked={trip.visits.map((v) => v.id).includes(lead.id)}\r\n                          disabled={false}\r\n                          handleClick={handleClickCheckbox(lead)}\r\n                        />\r\n                      </TableCell>\r\n                    </TableRow>\r\n\r\n                    {rowHasVisits &&\r\n                      expanded.includes(lead.id) &&\r\n                      lead.visits.map((visit) => {\r\n                        const hasUsers = utils.generic.isValidArray(visit.users, true);\r\n\r\n                        return (\r\n                          <TableRow\r\n                            hover\r\n                            onClick={handleClickLead(lead)}\r\n                            className={classes.visitRow}\r\n                            data-testid={`leads-row-visit-${lead.id}-${visit.id}`}\r\n                            key={visit.id}\r\n                          >\r\n                            <TableCell compact data-testid={`leads-cell-visit-name-${lead.id}-${visit.id}`}>\r\n                              <div className={classes.visitWrapper}>\r\n                                <SubdirectoryArrowRightIcon className={classes.iconSubdirectory} />\r\n                                <div className={classes.visitDetails}>\r\n                                  {hasUsers && (\r\n                                    <SeparatedList\r\n                                      list={visit.users.map((user) => {\r\n                                        user.name = utils.user.fullname(user);\r\n                                        return user;\r\n                                      })}\r\n                                    />\r\n                                  )}\r\n                                  {visit.visitingDate && (\r\n                                    <span className={classes.visitDate}>\r\n                                      (\r\n                                      {utils.string.t('format.date', {\r\n                                        value: { date: visit.visitingDate, format: config.ui.format.date.text },\r\n                                      })}\r\n                                      )\r\n                                    </span>\r\n                                  )}\r\n                                  {!hasUsers && !visit.visitingDate && <span>&nbsp;</span>}\r\n                                </div>\r\n                              </div>\r\n                            </TableCell>\r\n\r\n                            <TableCell minimal narrow center data-testid={`leads-cell-visit-checkbox-${lead.id}-${visit.id}`}>\r\n                              <TableCheckbox\r\n                                checked={trip.visits.map((v) => v.id).includes(visit.id)}\r\n                                disabled={false}\r\n                                handleClick={handleClickCheckbox(lead, visit)}\r\n                              />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </Fragment>\r\n                );\r\n              })}\r\n            </TableBody>\r\n          </Table>\r\n        </Fragment>\r\n      </Collapse>\r\n\r\n      <Fade in={!hasLeads}>\r\n        <Collapse in={!hasLeads}>\r\n          <Box mt={-3}>\r\n            <Empty text={utils.string.t('opportunity.searchHint')} />\r\n            {leadsEmpty && (\r\n              <Box mt={2}>\r\n                <Warning text={utils.string.t('opportunity.leadsEmpty')} type=\"alert\" icon />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n        </Collapse>\r\n      </Fade>\r\n\r\n      <Loader visible={leadsLoading} label={utils.string.t('opportunity.leadsLoading')} absolute />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}