{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nuseFormActions.propTypes = {\n  actions: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n  })).isRequired,\n  dirtyFields: PropTypes.object.isRequired,\n  reset: PropTypes.func\n};\nexport default function useFormActions() {\n  var actions = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n  var reset = arguments.length > 1 ? arguments[1] : undefined;\n  var dirtyFields = arguments.length > 2 ? arguments[2] : undefined;\n  var setError = arguments.length > 3 ? arguments[3] : undefined;\n  // cancel\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  }) || {};\n  var cancelHandler = cancel === null || cancel === void 0 ? void 0 : cancel.handler;\n\n  if (cancel) {\n    cancel.handler = function (data) {\n      if (utils.generic.isFunction(cancelHandler)) {\n        cancelHandler(data);\n      }\n\n      if (utils.generic.isFunction(reset)) {\n        reset();\n      }\n    };\n  } // secondary\n\n\n  var secondary = actions && actions.find(function (action) {\n    return action.name === 'secondary';\n  });\n  var secondaryHandler = secondary === null || secondary === void 0 ? void 0 : secondary.handler;\n\n  if (secondary) {\n    secondary.handler = function (data) {\n      if (utils.generic.isFunction(secondaryHandler)) {\n        return secondaryHandler(data, dirtyFields);\n      }\n    };\n  } // submit\n\n\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n  var submitHandler = submit === null || submit === void 0 ? void 0 : submit.handler;\n\n  if (submit) {\n    submit.handler = function (data) {\n      if (utils.generic.isFunction(submitHandler)) {\n        return submitHandler(data, dirtyFields, setError);\n      }\n    };\n  }\n\n  return _objectSpread(_objectSpread(_objectSpread({}, cancel && {\n    cancel: cancel\n  }), secondary && {\n    secondary: secondary\n  }), submit && {\n    submit: submit\n  });\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/hooks/useFormActions/useFormActions.js"],"names":["PropTypes","utils","useFormActions","propTypes","actions","arrayOf","shape","name","string","isRequired","label","handler","func","dirtyFields","object","reset","setError","cancel","find","action","cancelHandler","data","generic","isFunction","secondary","secondaryHandler","submit","submitHandler"],"mappings":"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","sourcesContent":["import PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\n\r\nuseFormActions.propTypes = {\r\n  actions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      handler: PropTypes.func.isRequired,\r\n    })\r\n  ).isRequired,\r\n  dirtyFields: PropTypes.object.isRequired,\r\n  reset: PropTypes.func,\r\n};\r\n\r\nexport default function useFormActions(actions = [], reset, dirtyFields, setError) {\r\n  // cancel\r\n  const cancel = (actions && actions.find((action) => action.name === 'cancel')) || {};\r\n  const cancelHandler = cancel?.handler;\r\n\r\n  if (cancel) {\r\n    cancel.handler = (data) => {\r\n      if (utils.generic.isFunction(cancelHandler)) {\r\n        cancelHandler(data);\r\n      }\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset();\r\n      }\r\n    };\r\n  }\r\n\r\n  // secondary\r\n  const secondary = actions && actions.find((action) => action.name === 'secondary');\r\n  const secondaryHandler = secondary?.handler;\r\n\r\n  if (secondary) {\r\n    secondary.handler = (data) => {\r\n      if (utils.generic.isFunction(secondaryHandler)) {\r\n        return secondaryHandler(data, dirtyFields);\r\n      }\r\n    };\r\n  }\r\n\r\n  // submit\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n  const submitHandler = submit?.handler;\r\n\r\n  if (submit) {\r\n    submit.handler = (data) => {\r\n      if (utils.generic.isFunction(submitHandler)) {\r\n        return submitHandler(data, dirtyFields, setError);\r\n      }\r\n    };\r\n  }\r\n\r\n  return {\r\n    ...(cancel && { cancel }),\r\n    ...(secondary && { secondary }),\r\n    ...(submit && { submit }),\r\n  };\r\n}\r\n"]},"metadata":{},"sourceType":"module"}