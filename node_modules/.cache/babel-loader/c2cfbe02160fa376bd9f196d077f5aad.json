{"ast":null,"code":"import \"core-js/modules/es.parse-int\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTasksReporting\\\\ClaimsTasksReporting.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames'; // app\n\nimport styles from './ClaimsTasksReporting.styles';\nimport { Accordion, Chart } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Box, Grid, makeStyles, Typography } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTasksReportingView.propTypes = {\n  data: PropTypes.object.isRequired,\n  expanded: PropTypes.bool.isRequired,\n  isDataLoading: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    buildChartData: PropTypes.func.isRequired,\n    toggle: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTasksReportingView(_ref) {\n  var data = _ref.data,\n      expanded = _ref.expanded,\n      isDataLoading = _ref.isDataLoading,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTasksReporting'\n  })({\n    expanded: expanded\n  });\n  var claimsDataPoints = [data === null || data === void 0 ? void 0 : data.nonComplexClaimsProcess, data === null || data === void 0 ? void 0 : data.complexClaimsProcess, data === null || data === void 0 ? void 0 : data.unClassifiedClaimsProcess];\n  var tasksDataPoints = [parseInt((data === null || data === void 0 ? void 0 : data.nonComplexTaskAssignedProcess) + (data === null || data === void 0 ? void 0 : data.nonComplexTaskUnAssignedProcess)), parseInt((data === null || data === void 0 ? void 0 : data.complexTaskAssignedProcess) + (data === null || data === void 0 ? void 0 : data.complexTaskUnAssignedProcess)), parseInt((data === null || data === void 0 ? void 0 : data.unsureTaskAssignedProcess) + (data === null || data === void 0 ? void 0 : data.unsureTaskUnAssignedProcess))];\n  var claimsLabels = [utils.string.t('claims.processing.reportingView.nonComplex'), utils.string.t('claims.processing.reportingView.complex'), utils.string.t('claims.processing.reportingView.unclassified')];\n  var tasksLabel = [utils.string.t('claims.processing.reportingView.nonComplex'), utils.string.t('claims.processing.reportingView.complex'), utils.string.t('claims.processing.reportingView.unclassified')];\n  var claimsColorsPalette = ['rgb(27,204,12)', 'rgb(246, 100, 97)', 'rgb(127, 127, 127)'];\n  var tasksColorsPalette = ['rgb(27,204,12)', 'rgb(246, 100, 97)', 'rgb(127, 127, 127)'];\n  var claimsData = handlers.buildChartData(claimsDataPoints || 0, claimsLabels, claimsColorsPalette);\n  var tasksData = handlers.buildChartData(tasksDataPoints || 0, tasksLabel, tasksColorsPalette);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    \"data-testid\": \"reporting-claims-tasks\",\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      icon: false,\n      title: \"\".concat(utils.string.t('time.today'), \": \").concat(moment().format('DD MMM YYYY')),\n      expanded: expanded,\n      isDataLoading: isDataLoading,\n      actions: [{\n        id: 'reporting',\n        text: utils.string.t('claims.processing.reportingView.title'),\n        icon: KeyboardArrowUpIcon,\n        iconPosition: 'left',\n        color: 'primary',\n        onClick: handlers.toggle,\n        nestedClasses: {\n          link: classes.toggleBtnLink,\n          icon: classes.toggleBtnIcon\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.wrapper,\n          \"data-testid\": \"reporting-claims\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.canvas,\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              id: \"chart-claims\",\n              type: \"doughnut\",\n              data: claimsData,\n              options: _objectSpread(_objectSpread({}, config.ui.chart.doughnut), {}, {\n                tooltips: {\n                  enabled: true\n                }\n              }),\n              nestedClasses: {\n                root: classes.chartRoot,\n                chart: classes.chart\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1,\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(\"span\", {\n                  className: classes.layers,\n                  dangerouslySetInnerHTML: {\n                    __html: \"\".concat(utils.string.t('claims.processing.reportingView.totalActiveClaims', {\n                      count: (data === null || data === void 0 ? void 0 : data.totalActiveClaimsProcess) || 0\n                    }))\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 0,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot, classes.dotGreen)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 110,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.nonComplex')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.value,\n                      children: claimsDataPoints[0]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 112,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 109,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot, classes.dotOrange)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 116,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.complex')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.value,\n                      children: claimsDataPoints[1]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 118,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 115,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 122,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.unclassified')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 123,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.value,\n                      children: claimsDataPoints[2]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 124,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 121,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.wrapper,\n          \"data-testid\": \"reporting-tasks\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            className: classes.canvas,\n            children: /*#__PURE__*/_jsxDEV(Chart, {\n              id: \"chart-tasks\",\n              type: \"doughnut\",\n              data: tasksData,\n              options: _objectSpread(_objectSpread({}, config.ui.chart.doughnut), {}, {\n                tooltips: {\n                  enabled: true\n                }\n              }),\n              nestedClasses: {\n                root: classes.chartRoot,\n                chart: classes.chart\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.content,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"column\",\n              spacing: 1,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  spacing: 0,\n                  children: [/*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    justify: \"flex-end\",\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 6,\n                      className: classes.totalTasksSpacing,\n                      children: /*#__PURE__*/_jsxDEV(\"span\", {\n                        className: classes.layers,\n                        dangerouslySetInnerHTML: {\n                          __html: \"\".concat(utils.string.t('claims.processing.reportingView.totalActiveTasks', {\n                            count: (data === null || data === void 0 ? void 0 : data.totalActiveTasksProcess) || 0\n                          }))\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 153,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 152,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 6,\n                      className: classes.taskLabelBox,\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        className: classnames(classes.type, classes.taskBorderRight, classes.tasksLblBoxAlign),\n                        children: utils.string.t('claims.processing.reportingView.assigned')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                        className: classnames(classes.type, classes.tasksLblBoxAlign),\n                        children: utils.string.t('claims.processing.reportingView.unassigned')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot, classes.dotGreen)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 173,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.nonComplex')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.taskBorderRight, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.nonComplexTaskAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 175,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.nonComplexTaskUnAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 178,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot, classes.dotOrange)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.complex')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.taskBorderRight, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.complexTaskAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.complexTaskUnAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 183,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    xs: 12,\n                    className: classes.box,\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classnames(classes.dot)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classes.type,\n                      children: utils.string.t('claims.processing.reportingView.unclassified')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 196,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.taskBorderRight, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.unsureTaskAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 197,\n                      columnNumber: 23\n                    }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                      className: classnames(classes.value, classes.valueSpacing),\n                      children: data === null || data === void 0 ? void 0 : data.unsureTaskUnAssignedProcess\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTasksReportingView;\nClaimsTasksReportingView.displayName = \"ClaimsTasksReportingView\";\nClaimsTasksReportingView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsTasksReportingView\",\n  \"props\": {\n    \"data\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"expanded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isDataLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"buildChartData\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"toggle\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsTasksReporting\\\\ClaimsTasksReporting.view.js\"] = {\n    name: \"ClaimsTasksReportingView\",\n    docgenInfo: ClaimsTasksReportingView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsTasksReporting\\\\ClaimsTasksReporting.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTasksReportingView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTasksReporting/ClaimsTasksReporting.view.js"],"names":["React","PropTypes","moment","classnames","styles","Accordion","Chart","utils","config","Box","Grid","makeStyles","Typography","KeyboardArrowUpIcon","ClaimsTasksReportingView","propTypes","data","object","isRequired","expanded","bool","isDataLoading","handlers","shape","buildChartData","func","toggle","classes","name","claimsDataPoints","nonComplexClaimsProcess","complexClaimsProcess","unClassifiedClaimsProcess","tasksDataPoints","parseInt","nonComplexTaskAssignedProcess","nonComplexTaskUnAssignedProcess","complexTaskAssignedProcess","complexTaskUnAssignedProcess","unsureTaskAssignedProcess","unsureTaskUnAssignedProcess","claimsLabels","string","t","tasksLabel","claimsColorsPalette","tasksColorsPalette","claimsData","tasksData","root","format","id","text","icon","iconPosition","color","onClick","nestedClasses","link","toggleBtnLink","toggleBtnIcon","container","wrapper","canvas","ui","chart","doughnut","tooltips","enabled","chartRoot","content","layers","__html","count","totalActiveClaimsProcess","box","dot","dotGreen","type","value","dotOrange","totalTasksSpacing","totalActiveTasksProcess","taskLabelBox","taskBorderRight","tasksLblBoxAlign","valueSpacing"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ClaimsTasksReporting.styles';\r\nimport { Accordion, Chart } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, Grid, makeStyles, Typography } from '@material-ui/core';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nClaimsTasksReportingView.propTypes = {\r\n  data: PropTypes.object.isRequired,\r\n  expanded: PropTypes.bool.isRequired,\r\n  isDataLoading: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    buildChartData: PropTypes.func.isRequired,\r\n    toggle: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTasksReportingView({ data, expanded, isDataLoading, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTasksReporting' })({ expanded });\r\n\r\n  const claimsDataPoints = [data?.nonComplexClaimsProcess, data?.complexClaimsProcess, data?.unClassifiedClaimsProcess];\r\n\r\n  const tasksDataPoints = [\r\n    parseInt(data?.nonComplexTaskAssignedProcess + data?.nonComplexTaskUnAssignedProcess),\r\n    parseInt(data?.complexTaskAssignedProcess + data?.complexTaskUnAssignedProcess),\r\n    parseInt(data?.unsureTaskAssignedProcess + data?.unsureTaskUnAssignedProcess),\r\n  ];\r\n\r\n  const claimsLabels = [\r\n    utils.string.t('claims.processing.reportingView.nonComplex'),\r\n    utils.string.t('claims.processing.reportingView.complex'),\r\n    utils.string.t('claims.processing.reportingView.unclassified'),\r\n  ];\r\n\r\n  const tasksLabel = [\r\n    utils.string.t('claims.processing.reportingView.nonComplex'),\r\n    utils.string.t('claims.processing.reportingView.complex'),\r\n    utils.string.t('claims.processing.reportingView.unclassified'),\r\n  ];\r\n\r\n  const claimsColorsPalette = ['rgb(27,204,12)', 'rgb(246, 100, 97)', 'rgb(127, 127, 127)'];\r\n  const tasksColorsPalette = ['rgb(27,204,12)', 'rgb(246, 100, 97)', 'rgb(127, 127, 127)'];\r\n\r\n  const claimsData = handlers.buildChartData(claimsDataPoints || 0, claimsLabels, claimsColorsPalette);\r\n  const tasksData = handlers.buildChartData(tasksDataPoints || 0, tasksLabel, tasksColorsPalette);\r\n\r\n  return (\r\n    <div className={classes.root} data-testid=\"reporting-claims-tasks\">\r\n      <Accordion\r\n        icon={false}\r\n        title={`${utils.string.t('time.today')}: ${moment().format('DD MMM YYYY')}`}\r\n        expanded={expanded}\r\n        isDataLoading={isDataLoading}\r\n        actions={[\r\n          {\r\n            id: 'reporting',\r\n            text: utils.string.t('claims.processing.reportingView.title'),\r\n            icon: KeyboardArrowUpIcon,\r\n            iconPosition: 'left',\r\n            color: 'primary',\r\n            onClick: handlers.toggle,\r\n            nestedClasses: {\r\n              link: classes.toggleBtnLink,\r\n              icon: classes.toggleBtnIcon,\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <Box className={classes.container}>\r\n          <Box className={classes.wrapper} data-testid=\"reporting-claims\">\r\n            <Box className={classes.canvas}>\r\n              <Chart\r\n                id=\"chart-claims\"\r\n                type=\"doughnut\"\r\n                data={claimsData}\r\n                options={{\r\n                  ...config.ui.chart.doughnut,\r\n                  tooltips: {\r\n                    enabled: true,\r\n                  },\r\n                }}\r\n                nestedClasses={{ root: classes.chartRoot, chart: classes.chart }}\r\n              />\r\n            </Box>\r\n\r\n            <Box className={classes.content}>\r\n              <Grid container direction=\"column\" spacing={1}>\r\n                <Grid item>\r\n                  <span\r\n                    className={classes.layers}\r\n                    dangerouslySetInnerHTML={{\r\n                      __html: `${utils.string.t('claims.processing.reportingView.totalActiveClaims', {\r\n                        count: data?.totalActiveClaimsProcess || 0,\r\n                      })}`,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n\r\n                <Grid item>\r\n                  <Grid container spacing={0}>\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot, classes.dotGreen)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.nonComplex')}</Typography>\r\n                      <Typography className={classes.value}>{claimsDataPoints[0]}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot, classes.dotOrange)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.complex')}</Typography>\r\n                      <Typography className={classes.value}>{claimsDataPoints[1]}</Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.unclassified')}</Typography>\r\n                      <Typography className={classes.value}>{claimsDataPoints[2]}</Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n          <Box className={classes.wrapper} data-testid=\"reporting-tasks\">\r\n            <Box className={classes.canvas}>\r\n              <Chart\r\n                id=\"chart-tasks\"\r\n                type=\"doughnut\"\r\n                data={tasksData}\r\n                options={{\r\n                  ...config.ui.chart.doughnut,\r\n                  tooltips: {\r\n                    enabled: true,\r\n                  },\r\n                }}\r\n                nestedClasses={{ root: classes.chartRoot, chart: classes.chart }}\r\n              />\r\n            </Box>\r\n\r\n            <Box className={classes.content}>\r\n              <Grid container direction=\"column\" spacing={1}>\r\n                <Grid item>\r\n                  <Grid container spacing={0}>\r\n                    <Grid container justify=\"flex-end\">\r\n                      <Grid item xs={6} className={classes.totalTasksSpacing}>\r\n                        <span\r\n                          className={classes.layers}\r\n                          dangerouslySetInnerHTML={{\r\n                            __html: `${utils.string.t('claims.processing.reportingView.totalActiveTasks', {\r\n                              count: data?.totalActiveTasksProcess || 0,\r\n                            })}`,\r\n                          }}\r\n                        />\r\n                      </Grid>\r\n                      <Grid item xs={6} className={classes.taskLabelBox}>\r\n                        <Typography className={classnames(classes.type, classes.taskBorderRight, classes.tasksLblBoxAlign)}>\r\n                          {utils.string.t('claims.processing.reportingView.assigned')}\r\n                        </Typography>\r\n                        <Typography className={classnames(classes.type, classes.tasksLblBoxAlign)}>\r\n                          {utils.string.t('claims.processing.reportingView.unassigned')}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot, classes.dotGreen)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.nonComplex')}</Typography>\r\n                      <Typography className={classnames(classes.value, classes.taskBorderRight, classes.valueSpacing)}>\r\n                        {data?.nonComplexTaskAssignedProcess}\r\n                      </Typography>\r\n                      <Typography className={classnames(classes.value, classes.valueSpacing)}>\r\n                        {data?.nonComplexTaskUnAssignedProcess}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot, classes.dotOrange)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.complex')}</Typography>\r\n                      <Typography className={classnames(classes.value, classes.taskBorderRight, classes.valueSpacing)}>\r\n                        {data?.complexTaskAssignedProcess}\r\n                      </Typography>\r\n                      <Typography className={classnames(classes.value, classes.valueSpacing)}>\r\n                        {data?.complexTaskUnAssignedProcess}\r\n                      </Typography>\r\n                    </Grid>\r\n\r\n                    <Grid item xs={12} className={classes.box}>\r\n                      <span className={classnames(classes.dot)} />\r\n                      <Typography className={classes.type}>{utils.string.t('claims.processing.reportingView.unclassified')}</Typography>\r\n                      <Typography className={classnames(classes.value, classes.taskBorderRight, classes.valueSpacing)}>\r\n                        {data?.unsureTaskAssignedProcess}\r\n                      </Typography>\r\n                      <Typography className={classnames(classes.value, classes.valueSpacing)}>\r\n                        {data?.unsureTaskUnAssignedProcess}\r\n                      </Typography>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}