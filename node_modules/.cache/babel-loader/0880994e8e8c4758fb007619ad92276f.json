{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingSummary\\\\PremiumProcessingSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport isEmpty from 'lodash/isEmpty'; // app\n\nimport { PremiumProcessingSummaryView } from './PremiumProcessingSummary.view';\nimport { collapseSidebar, getCaseTeamDetails, selectCaseDetails, selectUserRole, showModal, selectCaseRfiDetails, selectPremiumProcessingCasesSelected, getCaseRFIDetails, selectRefDataNewFacilityType, selectRefDataNewProcessType, selectRefDataNewBordereauType, selectRefDataNewBordereauPolicyType, getCaseTeamDetailsSuccess, resetPremiumProcessingTaskSearch, resetPremiumProcessingTasksFilters, selectCaseTaskTypeView, getPremiumProcessingTasksDetails } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingSummary.propTypes = {\n  type: PropTypes.string.isRequired\n};\nexport default function PremiumProcessingSummary(_ref) {\n  _s();\n\n  var _caseStages$getActive,\n      _cases$6,\n      _this = this;\n\n  var type = _ref.type;\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var cases = useSelector(selectPremiumProcessingCasesSelected);\n  var caseDetails = useSelector(selectCaseDetails);\n  var caseRfiDetails = useSelector(selectCaseRfiDetails);\n  var currentUser = useSelector(selectUserRole);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      steps = _useState2[0],\n      setSteps = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var caseTaskTypeView = useSelector(selectCaseTaskTypeView);\n  var isValidCaseDetails = Boolean((caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.caseId) && !isEmpty(caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.caseTeamData));\n  var isValidRFICaseDetails = Boolean((caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.taskId) && !isEmpty(caseRfiDetails));\n  var caseStages = caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.caseStageDetails;\n  var isAllCases = type === constants.ALL_CASES;\n\n  var _ref2 = utils.generic.isValidArray(cases, true) && cases[0],\n      caseId = _ref2.caseId,\n      taskId = _ref2.taskId,\n      bpmProcessId = _ref2.bpmProcessId,\n      processId = _ref2.processId;\n\n  var isCheckSigningCase = caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.isCheckSigning;\n  var getActiveStageIndex = utils.generic.isValidArray(caseStages, true) ? caseStages === null || caseStages === void 0 ? void 0 : caseStages.findIndex(function (cs) {\n    return cs.active;\n  }) : 0;\n  var findActiveStep = utils.generic.isValidArray(caseStages, true) && getActiveStageIndex >= 0 ? ((_caseStages$getActive = caseStages[getActiveStageIndex]) === null || _caseStages$getActive === void 0 ? void 0 : _caseStages$getActive.bpmStageCode) === constants.BPM_STAGE_COMPLETED ? getActiveStageIndex + 1 : getActiveStageIndex : 0;\n  var facilityTypeRefData = useSelector(selectRefDataNewFacilityType) || [];\n  var bordereauTypeRefData = useSelector(selectRefDataNewBordereauType) || [];\n  var bordereauPolicyTypeRefData = useSelector(selectRefDataNewBordereauPolicyType) || [];\n  var processTypeRefData = useSelector(selectRefDataNewProcessType) || [];\n  var isTransactionCommitedRole = utils.generic.isValidArray(currentUser, true) && currentUser.some(function (item) {\n    return [constants.FRONT_END_CONTACT.toLowerCase(), constants.OPERATIONS_LEAD.toLowerCase()].includes(item.name.toLowerCase());\n  });\n  var isTransactionCommited = (caseStages === null || caseStages === void 0 ? void 0 : caseStages.some(function (cs) {\n    return [constants.BPM_STAGE_COMMIT_TRANSACTION].includes(cs.bpmStageCode) && cs.active;\n  })) && !isAllCases && !isTransactionCommitedRole;\n  var isUnassignedStage = caseStages === null || caseStages === void 0 ? void 0 : caseStages.some(function (cs) {\n    return [constants.BPM_STAGE_UNASSIGNED].includes(cs.bpmStageCode) && cs.active;\n  });\n  var isIssueDocumentStage = caseStages === null || caseStages === void 0 ? void 0 : caseStages.some(function (cs) {\n    return [constants.BPM_STAGE_ISSUE_DOCUMENTS].includes(cs.bpmStageCode) && cs.active;\n  });\n  var isRfiCase = utils.generic.isValidArray(cases, true) && utils.premiumProcessing.isRfi(cases === null || cases === void 0 ? void 0 : cases[0]);\n  useEffect(function () {\n    // cleanup\n    return function () {\n      dispatch(collapseSidebar());\n    };\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isRfiCase) {\n      var _cases$, _cases$2, _cases$3;\n\n      dispatch(getCaseRFIDetails({\n        taskId: (_cases$ = cases[0]) === null || _cases$ === void 0 ? void 0 : _cases$.taskId,\n        processId: (_cases$2 = cases[0]) === null || _cases$2 === void 0 ? void 0 : _cases$2.processId,\n        caseIncidentId: (_cases$3 = cases[0]) === null || _cases$3 === void 0 ? void 0 : _cases$3.caseId\n      }));\n    } else {\n      if (taskId || processId) {\n        var _cases$4, _cases$5;\n\n        dispatch(getCaseTeamDetails({\n          taskId: ((_cases$4 = cases[0]) === null || _cases$4 === void 0 ? void 0 : _cases$4.taskId) || ((_cases$5 = cases[0]) === null || _cases$5 === void 0 ? void 0 : _cases$5.processId),\n          taskView: type\n        })).then(function (response) {\n          if ((response === null || response === void 0 ? void 0 : response.message) === constants.API_RESPONSE_SUCCESS) {\n            var _response$status;\n\n            if ((response === null || response === void 0 ? void 0 : (_response$status = response.status) === null || _response$status === void 0 ? void 0 : _response$status.toUpperCase()) === constants.API_RESPONSE_OK) {\n              var _response$data, _response$data$caseDe, _response$data2, _response$data2$caseD, _response$data3, _response$data3$caseD, _response$data4, _response$data4$caseD, _response$data7, _response$data7$caseD;\n\n              response.data.caseDetails.processId = ((_response$data = response.data) === null || _response$data === void 0 ? void 0 : (_response$data$caseDe = _response$data.caseDetails) === null || _response$data$caseDe === void 0 ? void 0 : _response$data$caseDe.processId) && utils.referenceData.processTypes.getNameById(processTypeRefData, (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : (_response$data2$caseD = _response$data2.caseDetails) === null || _response$data2$caseD === void 0 ? void 0 : _response$data2$caseD.processId) || '';\n\n              if (((_response$data3 = response.data) === null || _response$data3 === void 0 ? void 0 : (_response$data3$caseD = _response$data3.caseDetails) === null || _response$data3$caseD === void 0 ? void 0 : _response$data3$caseD.processId) === constants.FDO && ((_response$data4 = response.data) === null || _response$data4 === void 0 ? void 0 : (_response$data4$caseD = _response$data4.caseDetails) === null || _response$data4$caseD === void 0 ? void 0 : _response$data4$caseD.facilityTypeId)) {\n                var _response$data5, _response$data5$caseD, _response$data6, _response$data6$caseD;\n\n                var facilityTypesName = utils.generic.isValidArray(facilityTypeRefData, true) && ((_response$data5 = response.data) === null || _response$data5 === void 0 ? void 0 : (_response$data5$caseD = _response$data5.caseDetails) === null || _response$data5$caseD === void 0 ? void 0 : _response$data5$caseD.facilityTypeId) && utils.referenceData.facilityTypes.getNameById(facilityTypeRefData, (_response$data6 = response.data) === null || _response$data6 === void 0 ? void 0 : (_response$data6$caseD = _response$data6.caseDetails) === null || _response$data6$caseD === void 0 ? void 0 : _response$data6$caseD.facilityTypeId) || '';\n                response.data.caseDetails.facilityTypeId = facilityTypesName;\n              }\n\n              if (((_response$data7 = response.data) === null || _response$data7 === void 0 ? void 0 : (_response$data7$caseD = _response$data7.caseDetails) === null || _response$data7$caseD === void 0 ? void 0 : _response$data7$caseD.processId) === constants.BORDEREAU) {\n                var _response$data8, _response$data8$caseD, _response$data11, _response$data11$case;\n\n                if ((_response$data8 = response.data) === null || _response$data8 === void 0 ? void 0 : (_response$data8$caseD = _response$data8.caseDetails) === null || _response$data8$caseD === void 0 ? void 0 : _response$data8$caseD.bordereauTypeId) {\n                  var _response$data9, _response$data9$caseD, _response$data10, _response$data10$case;\n\n                  var bordereauTypeName = utils.generic.isValidArray(bordereauTypeRefData, true) && ((_response$data9 = response.data) === null || _response$data9 === void 0 ? void 0 : (_response$data9$caseD = _response$data9.caseDetails) === null || _response$data9$caseD === void 0 ? void 0 : _response$data9$caseD.bordereauTypeId) && utils.referenceData.bordereauTypes.getNameById(bordereauTypeRefData, (_response$data10 = response.data) === null || _response$data10 === void 0 ? void 0 : (_response$data10$case = _response$data10.caseDetails) === null || _response$data10$case === void 0 ? void 0 : _response$data10$case.bordereauTypeId) || '';\n                  response.data.caseDetails.bordereauTypeId = bordereauTypeName;\n                }\n\n                if ((_response$data11 = response.data) === null || _response$data11 === void 0 ? void 0 : (_response$data11$case = _response$data11.caseDetails) === null || _response$data11$case === void 0 ? void 0 : _response$data11$case.policyTypeId) {\n                  var _response$data12, _response$data12$case, _response$data13, _response$data13$case;\n\n                  var bordereauPolicyTypeName = utils.generic.isValidArray(bordereauPolicyTypeRefData, true) && ((_response$data12 = response.data) === null || _response$data12 === void 0 ? void 0 : (_response$data12$case = _response$data12.caseDetails) === null || _response$data12$case === void 0 ? void 0 : _response$data12$case.policyTypeId) && utils.referenceData.bordereauPolicyTypes.getNameById(bordereauPolicyTypeRefData, (_response$data13 = response.data) === null || _response$data13 === void 0 ? void 0 : (_response$data13$case = _response$data13.caseDetails) === null || _response$data13$case === void 0 ? void 0 : _response$data13$case.policyTypeId) || '';\n                  response.data.caseDetails.policyTypeId = bordereauPolicyTypeName;\n                }\n              }\n\n              dispatch(getCaseTeamDetailsSuccess(response.data));\n            }\n          }\n        });\n      }\n    }\n\n    if (caseDetails) {}\n  }, [taskId, caseId, (_cases$6 = cases[0]) === null || _cases$6 === void 0 ? void 0 : _cases$6.caseStage]); //eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (caseStages && caseStages.length > 0) {\n      var caseSteps = caseStages === null || caseStages === void 0 ? void 0 : caseStages.map(function (cs) {\n        return {\n          label: cs.bpmShortStageName,\n          slug: cs.bpmStageCode,\n          isIcon: cs.bpmStageCode === constants.BPM_STAGE_REJECTED || cs.bpmStageCode === constants.BPM_STAGE_CANCELLED ? true : false\n        };\n      });\n      setSteps(caseSteps);\n      setActiveStep(findActiveStep === -1 ? 0 : findActiveStep);\n    }\n  }, [caseStages, findActiveStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var openUpdatingPopup = function openUpdatingPopup() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('premiumProcessing.alert'),\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: \"\".concat(utils.string.t('premiumProcessing.piHyperLinkErrorMessage'))\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var clickCaseTeam = function clickCaseTeam() {\n    if (bpmProcessId) {\n      dispatch(resetPremiumProcessingTaskSearch());\n      dispatch(resetPremiumProcessingTasksFilters());\n      dispatch(getPremiumProcessingTasksDetails({\n        requestType: 'search',\n        taskType: caseTaskTypeView,\n        filterTerm: []\n      }));\n      dispatch(getPremiumProcessingTasksDetails({\n        requestType: 'filter',\n        taskType: caseTaskTypeView,\n        filterTerm: []\n      }));\n      history.push(\"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId ? taskId : bpmProcessId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_CASE_DETAILS));\n    }\n  };\n\n  var clickRfiDetails = function clickRfiDetails() {\n    if ((caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.parentTaskId) && (caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.taskId)) {\n      dispatch(resetPremiumProcessingTaskSearch());\n      dispatch(resetPremiumProcessingTasksFilters());\n      dispatch(getPremiumProcessingTasksDetails({\n        requestType: 'search',\n        taskType: caseTaskTypeView,\n        filterTerm: []\n      }));\n      dispatch(getPremiumProcessingTasksDetails({\n        requestType: 'filter',\n        taskType: caseTaskTypeView,\n        filterTerm: []\n      }));\n      history.push(\"\".concat(config.routes.premiumProcessing.case, \"/\").concat(caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.parentTaskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_RFI, \"/\").concat(caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.taskId));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingSummaryView, {\n    type: type,\n    selectedCases: cases,\n    caseDetails: caseDetails,\n    caseRfiDetails: caseRfiDetails,\n    steps: steps,\n    activeStep: activeStep,\n    currentUser: currentUser,\n    isAllCases: isAllCases,\n    isCheckSigningCase: isCheckSigningCase,\n    isIssueDocumentStage: isIssueDocumentStage,\n    isTransactionCommited: isTransactionCommited,\n    isUnassignedStage: isUnassignedStage,\n    isValid: isValidCaseDetails,\n    isValidRFI: isValidRFICaseDetails,\n    handlers: {\n      openUpdatingPopup: openUpdatingPopup,\n      clickCaseTeam: clickCaseTeam,\n      clickRfiDetails: clickRfiDetails\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 207,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingSummary, \"HkTCINEoJztO7uCDTBffXO35oaM=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = PremiumProcessingSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingSummary\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingSummary/PremiumProcessingSummary.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","PropTypes","isEmpty","PremiumProcessingSummaryView","collapseSidebar","getCaseTeamDetails","selectCaseDetails","selectUserRole","showModal","selectCaseRfiDetails","selectPremiumProcessingCasesSelected","getCaseRFIDetails","selectRefDataNewFacilityType","selectRefDataNewProcessType","selectRefDataNewBordereauType","selectRefDataNewBordereauPolicyType","getCaseTeamDetailsSuccess","resetPremiumProcessingTaskSearch","resetPremiumProcessingTasksFilters","selectCaseTaskTypeView","getPremiumProcessingTasksDetails","constants","utils","config","PremiumProcessingSummary","propTypes","type","string","isRequired","dispatch","history","cases","caseDetails","caseRfiDetails","currentUser","steps","setSteps","activeStep","setActiveStep","caseTaskTypeView","isValidCaseDetails","Boolean","caseId","caseTeamData","isValidRFICaseDetails","taskId","caseStages","caseStageDetails","isAllCases","ALL_CASES","generic","isValidArray","bpmProcessId","processId","isCheckSigningCase","isCheckSigning","getActiveStageIndex","findIndex","cs","active","findActiveStep","bpmStageCode","BPM_STAGE_COMPLETED","facilityTypeRefData","bordereauTypeRefData","bordereauPolicyTypeRefData","processTypeRefData","isTransactionCommitedRole","some","item","FRONT_END_CONTACT","toLowerCase","OPERATIONS_LEAD","includes","name","isTransactionCommited","BPM_STAGE_COMMIT_TRANSACTION","isUnassignedStage","BPM_STAGE_UNASSIGNED","isIssueDocumentStage","BPM_STAGE_ISSUE_DOCUMENTS","isRfiCase","premiumProcessing","isRfi","caseIncidentId","taskView","then","response","message","API_RESPONSE_SUCCESS","status","toUpperCase","API_RESPONSE_OK","data","referenceData","processTypes","getNameById","FDO","facilityTypeId","facilityTypesName","facilityTypes","BORDEREAU","bordereauTypeId","bordereauTypeName","bordereauTypes","policyTypeId","bordereauPolicyTypeName","bordereauPolicyTypes","caseStage","length","caseSteps","map","label","bpmShortStageName","slug","isIcon","BPM_STAGE_REJECTED","BPM_STAGE_CANCELLED","openUpdatingPopup","component","props","fullWidth","title","t","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","__html","buttonColors","confirm","submitHandler","handleClose","clickCaseTeam","requestType","taskType","filterTerm","push","routes","case","PREMIUM_PROCESSING_TAB_CASE_DETAILS","clickRfiDetails","parentTaskId","PREMIUM_PROCESSING_TAB_RFI"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n// app\r\nimport { PremiumProcessingSummaryView } from './PremiumProcessingSummary.view';\r\nimport {\r\n  collapseSidebar,\r\n  getCaseTeamDetails,\r\n  selectCaseDetails,\r\n  selectUserRole,\r\n  showModal,\r\n  selectCaseRfiDetails,\r\n  selectPremiumProcessingCasesSelected,\r\n  getCaseRFIDetails,\r\n  selectRefDataNewFacilityType,\r\n  selectRefDataNewProcessType,\r\n  selectRefDataNewBordereauType,\r\n  selectRefDataNewBordereauPolicyType,\r\n  getCaseTeamDetailsSuccess,\r\n  resetPremiumProcessingTaskSearch,\r\n  resetPremiumProcessingTasksFilters,\r\n  selectCaseTaskTypeView,\r\n  getPremiumProcessingTasksDetails,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nPremiumProcessingSummary.propTypes = {\r\n  type: PropTypes.string.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingSummary({ type }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const cases = useSelector(selectPremiumProcessingCasesSelected);\r\n  const caseDetails = useSelector(selectCaseDetails);\r\n  const caseRfiDetails = useSelector(selectCaseRfiDetails);\r\n  const currentUser = useSelector(selectUserRole);\r\n\r\n  const [steps, setSteps] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const caseTaskTypeView = useSelector(selectCaseTaskTypeView);\r\n  const isValidCaseDetails = Boolean(caseDetails?.caseId && !isEmpty(caseDetails?.caseTeamData));\r\n  const isValidRFICaseDetails = Boolean(caseRfiDetails?.taskId && !isEmpty(caseRfiDetails));\r\n  const caseStages = caseDetails?.caseStageDetails;\r\n  const isAllCases = type === constants.ALL_CASES;\r\n  const { caseId, taskId, bpmProcessId, processId } = utils.generic.isValidArray(cases, true) && cases[0];\r\n  const isCheckSigningCase = caseDetails?.isCheckSigning;\r\n  const getActiveStageIndex = utils.generic.isValidArray(caseStages, true) ? caseStages?.findIndex((cs) => cs.active) : 0;\r\n  const findActiveStep =\r\n    utils.generic.isValidArray(caseStages, true) && getActiveStageIndex >= 0\r\n      ? caseStages[getActiveStageIndex]?.bpmStageCode === constants.BPM_STAGE_COMPLETED\r\n        ? getActiveStageIndex + 1\r\n        : getActiveStageIndex\r\n      : 0;\r\n\r\n  const facilityTypeRefData = useSelector(selectRefDataNewFacilityType) || [];\r\n  const bordereauTypeRefData = useSelector(selectRefDataNewBordereauType) || [];\r\n  const bordereauPolicyTypeRefData = useSelector(selectRefDataNewBordereauPolicyType) || [];\r\n  const processTypeRefData = useSelector(selectRefDataNewProcessType) || [];\r\n\r\n  const isTransactionCommitedRole =\r\n    utils.generic.isValidArray(currentUser, true) &&\r\n    currentUser.some((item) =>\r\n      [constants.FRONT_END_CONTACT.toLowerCase(), constants.OPERATIONS_LEAD.toLowerCase()].includes(item.name.toLowerCase())\r\n    );\r\n\r\n  const isTransactionCommited =\r\n    caseStages?.some((cs) => [constants.BPM_STAGE_COMMIT_TRANSACTION].includes(cs.bpmStageCode) && cs.active) &&\r\n    !isAllCases &&\r\n    !isTransactionCommitedRole;\r\n\r\n  const isUnassignedStage = caseStages?.some((cs) => [constants.BPM_STAGE_UNASSIGNED].includes(cs.bpmStageCode) && cs.active);\r\n  const isIssueDocumentStage = caseStages?.some((cs) => [constants.BPM_STAGE_ISSUE_DOCUMENTS].includes(cs.bpmStageCode) && cs.active);\r\n  const isRfiCase = utils.generic.isValidArray(cases, true) && utils.premiumProcessing.isRfi(cases?.[0]);\r\n\r\n  useEffect(() => {\r\n    // cleanup\r\n    return () => {\r\n      dispatch(collapseSidebar());\r\n    };\r\n  }, []); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isRfiCase) {\r\n      dispatch(getCaseRFIDetails({ taskId: cases[0]?.taskId, processId: cases[0]?.processId, caseIncidentId: cases[0]?.caseId }));\r\n    } else {\r\n      if (taskId || processId) {\r\n        dispatch(getCaseTeamDetails({ taskId: cases[0]?.taskId || cases[0]?.processId, taskView: type })).then((response) => {\r\n          if (response?.message === constants.API_RESPONSE_SUCCESS) {\r\n            if (response?.status?.toUpperCase() === constants.API_RESPONSE_OK) {\r\n              response.data.caseDetails.processId =\r\n                (response.data?.caseDetails?.processId &&\r\n                  utils.referenceData.processTypes.getNameById(processTypeRefData, response.data?.caseDetails?.processId)) ||\r\n                '';\r\n              if (response.data?.caseDetails?.processId === constants.FDO && response.data?.caseDetails?.facilityTypeId) {\r\n                const facilityTypesName =\r\n                  (utils.generic.isValidArray(facilityTypeRefData, true) &&\r\n                    response.data?.caseDetails?.facilityTypeId &&\r\n                    utils.referenceData.facilityTypes.getNameById(facilityTypeRefData, response.data?.caseDetails?.facilityTypeId)) ||\r\n                  '';\r\n                response.data.caseDetails.facilityTypeId = facilityTypesName;\r\n              }\r\n              if (response.data?.caseDetails?.processId === constants.BORDEREAU) {\r\n                if (response.data?.caseDetails?.bordereauTypeId) {\r\n                  const bordereauTypeName =\r\n                    (utils.generic.isValidArray(bordereauTypeRefData, true) &&\r\n                      response.data?.caseDetails?.bordereauTypeId &&\r\n                      utils.referenceData.bordereauTypes.getNameById(bordereauTypeRefData, response.data?.caseDetails?.bordereauTypeId)) ||\r\n                    '';\r\n                  response.data.caseDetails.bordereauTypeId = bordereauTypeName;\r\n                }\r\n                if (response.data?.caseDetails?.policyTypeId) {\r\n                  const bordereauPolicyTypeName =\r\n                    (utils.generic.isValidArray(bordereauPolicyTypeRefData, true) &&\r\n                      response.data?.caseDetails?.policyTypeId &&\r\n                      utils.referenceData.bordereauPolicyTypes.getNameById(\r\n                        bordereauPolicyTypeRefData,\r\n                        response.data?.caseDetails?.policyTypeId\r\n                      )) ||\r\n                    '';\r\n                  response.data.caseDetails.policyTypeId = bordereauPolicyTypeName;\r\n                }\r\n              }\r\n              dispatch(getCaseTeamDetailsSuccess(response.data));\r\n            }\r\n          }\r\n        });\r\n      }\r\n    }\r\n    if (caseDetails) {\r\n    }\r\n  }, [taskId, caseId, cases[0]?.caseStage]); //eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (caseStages && caseStages.length > 0) {\r\n      const caseSteps = caseStages?.map((cs) => {\r\n        return {\r\n          label: cs.bpmShortStageName,\r\n          slug: cs.bpmStageCode,\r\n          isIcon: cs.bpmStageCode === constants.BPM_STAGE_REJECTED || cs.bpmStageCode === constants.BPM_STAGE_CANCELLED ? true : false,\r\n        };\r\n      });\r\n      setSteps(caseSteps);\r\n      setActiveStep(findActiveStep === -1 ? 0 : findActiveStep);\r\n    }\r\n  }, [caseStages, findActiveStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const openUpdatingPopup = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('premiumProcessing.alert'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessage: (\r\n              <span\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${utils.string.t('premiumProcessing.piHyperLinkErrorMessage')}`,\r\n                }}\r\n              />\r\n            ),\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const clickCaseTeam = () => {\r\n    if (bpmProcessId) {\r\n      dispatch(resetPremiumProcessingTaskSearch());\r\n      dispatch(resetPremiumProcessingTasksFilters());\r\n      dispatch(getPremiumProcessingTasksDetails({ requestType: 'search', taskType: caseTaskTypeView, filterTerm: [] }));\r\n      dispatch(getPremiumProcessingTasksDetails({ requestType: 'filter', taskType: caseTaskTypeView, filterTerm: [] }));\r\n      history.push(\r\n        `${config.routes.premiumProcessing.case}/${taskId ? taskId : bpmProcessId}/${constants.PREMIUM_PROCESSING_TAB_CASE_DETAILS}`\r\n      );\r\n    }\r\n  };\r\n\r\n  const clickRfiDetails = () => {\r\n    if (caseRfiDetails?.parentTaskId && caseRfiDetails?.taskId) {\r\n      dispatch(resetPremiumProcessingTaskSearch());\r\n      dispatch(resetPremiumProcessingTasksFilters());\r\n      dispatch(getPremiumProcessingTasksDetails({ requestType: 'search', taskType: caseTaskTypeView, filterTerm: [] }));\r\n      dispatch(getPremiumProcessingTasksDetails({ requestType: 'filter', taskType: caseTaskTypeView, filterTerm: [] }));\r\n\r\n      history.push(\r\n        `${config.routes.premiumProcessing.case}/${caseRfiDetails?.parentTaskId}/${constants.PREMIUM_PROCESSING_TAB_RFI}/${caseRfiDetails?.taskId}`\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PremiumProcessingSummaryView\r\n      type={type}\r\n      selectedCases={cases}\r\n      caseDetails={caseDetails}\r\n      caseRfiDetails={caseRfiDetails}\r\n      steps={steps}\r\n      activeStep={activeStep}\r\n      currentUser={currentUser}\r\n      isAllCases={isAllCases}\r\n      isCheckSigningCase={isCheckSigningCase}\r\n      isIssueDocumentStage={isIssueDocumentStage}\r\n      isTransactionCommited={isTransactionCommited}\r\n      isUnassignedStage={isUnassignedStage}\r\n      isValid={isValidCaseDetails}\r\n      isValidRFI={isValidRFICaseDetails}\r\n      handlers={{ openUpdatingPopup, clickCaseTeam, clickRfiDetails }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}