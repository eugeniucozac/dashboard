{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkSearchPolicy\\\\LinkSearchPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\nimport { selectLossId, selectLossQualifiers, selectCatCodes, selectClaimsPolicyData, selectClaimsPolicyInformation, getClaimantNames, getPolicyInformation, selectorDmsViewFiles, selectDmsDocDetails, selectLinkPoliciesData } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LinkSearchPolicy(props) {\n  _s();\n\n  var _location$state;\n\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var claimData = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.linkPolicy;\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var policyData = useSelector(selectClaimsPolicyData);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validation = _useState2[0],\n      setValidation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirm = _useState4[0],\n      setConfirm = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      sectionEnabledValidationFlag = _useState6[0],\n      setSectionEnabledValidationFlag = _useState6[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var linkPoliciesData = useSelector(selectLinkPoliciesData);\n\n  var handleAddClaim = function handleAddClaim() {\n    dispatch(getClaimantNames());\n  };\n\n  var onSaveHandle = function onSaveHandle() {\n    setSectionEnabledValidationFlag(false);\n    props.handleSave(props.index);\n  };\n\n  var backStepperHandler = function backStepperHandler() {\n    props.setActiveStep(props.activeStep - 1);\n  };\n\n  var nextStepperhandler = function nextStepperhandler() {\n    setSectionEnabledValidationFlag(true);\n    props.setSaveStatus(new Date().getTime());\n    props.handleNext();\n  };\n\n  useEffect(function () {\n    if ((policyData === null || policyData === void 0 ? void 0 : policyData.xbInstanceID) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.loader)) {\n      dispatch(getPolicyInformation({\n        viewLoader: false\n      }));\n      setConfirm(true);\n    }\n  }, [policyData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {// func need to call apis for edit claims\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(LinkSearchPolicyView, _objectSpread(_objectSpread({}, props), {}, {\n    policyInformation: policyInformation,\n    handleAddClaim: handleAddClaim,\n    lossInformation: lossInformation,\n    policyData: policyData,\n    catCodes: catCodes,\n    lossQualifiers: lossQualifiers,\n    confirm: confirm,\n    setConfirm: setConfirm,\n    sectionEnabledValidationFlag: sectionEnabledValidationFlag,\n    validation: validation,\n    setValidation: setValidation,\n    onSaveHandle: onSaveHandle,\n    backStepperHandler: backStepperHandler,\n    nextStepperhandler: nextStepperhandler,\n    linkPolicyDocList: (viewDocumentList === null || viewDocumentList === void 0 ? void 0 : viewDocumentList.length) > 0 ? viewDocumentList : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LinkSearchPolicy, \"yEC7jUBdrrJXf1XmH21gMUxYfP8=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LinkSearchPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkSearchPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkSearchPolicy/LinkSearchPolicy.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useLocation","LinkSearchPolicyView","selectLossId","selectLossQualifiers","selectCatCodes","selectClaimsPolicyData","selectClaimsPolicyInformation","getClaimantNames","getPolicyInformation","selectorDmsViewFiles","selectDmsDocDetails","selectLinkPoliciesData","LinkSearchPolicy","props","dispatch","location","claimData","state","linkPolicy","lossInformation","catCodes","lossQualifiers","policyInformation","policyData","validation","setValidation","confirm","setConfirm","sectionEnabledValidationFlag","setSectionEnabledValidationFlag","viewDocumentList","savedDmsDocList","linkPoliciesData","handleAddClaim","onSaveHandle","handleSave","index","backStepperHandler","setActiveStep","activeStep","nextStepperhandler","setSaveStatus","Date","getTime","handleNext","xbInstanceID","loader","viewLoader","length","linkPolicyDocDetails"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,WAAT,QAA4B,cAA5B;AAEA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SACEC,YADF,EAEEC,oBAFF,EAGEC,cAHF,EAIEC,sBAJF,EAKEC,6BALF,EAMEC,gBANF,EAOEC,oBAPF,EAQEC,oBARF,EASEC,mBATF,EAUEC,sBAVF,QAWO,QAXP;;AAaA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAAA;;AAC9C,MAAMC,QAAQ,GAAGhB,WAAW,EAA5B;AACA,MAAMiB,QAAQ,GAAGf,WAAW,EAA5B;AACA,MAAMgB,SAAS,GAAGD,QAAH,aAAGA,QAAH,0CAAGA,QAAQ,CAAEE,KAAb,oDAAG,gBAAiBC,UAAnC;AACA,MAAMC,eAAe,GAAGpB,WAAW,CAACG,YAAD,CAAnC;AACA,MAAMkB,QAAQ,GAAGrB,WAAW,CAACK,cAAD,CAA5B;AACA,MAAMiB,cAAc,GAAGtB,WAAW,CAACI,oBAAD,CAAlC;AACA,MAAMmB,iBAAiB,GAAGvB,WAAW,CAACO,6BAAD,CAArC;AACA,MAAMiB,UAAU,GAAGxB,WAAW,CAACM,sBAAD,CAA9B;;AAR8C,kBASVR,QAAQ,CAAC,KAAD,CATE;AAAA;AAAA,MASvC2B,UATuC;AAAA,MAS3BC,aAT2B;;AAAA,mBAUhB5B,QAAQ,CAAC,KAAD,CAVQ;AAAA;AAAA,MAUvC6B,OAVuC;AAAA,MAU9BC,UAV8B;;AAAA,mBAW0B9B,QAAQ,CAAC,IAAD,CAXlC;AAAA;AAAA,MAWvC+B,4BAXuC;AAAA,MAWTC,+BAXS;;AAa9C,MAAMC,gBAAgB,GAAG/B,WAAW,CAACU,oBAAD,CAApC;AACA,MAAMsB,eAAe,GAAGhC,WAAW,CAACW,mBAAD,CAAnC;AACA,MAAMsB,gBAAgB,GAAGjC,WAAW,CAACY,sBAAD,CAApC;;AAEA,MAAMsB,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3BnB,IAAAA,QAAQ,CAACP,gBAAgB,EAAjB,CAAR;AACD,GAFD;;AAIA,MAAM2B,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBL,IAAAA,+BAA+B,CAAC,KAAD,CAA/B;AACAhB,IAAAA,KAAK,CAACsB,UAAN,CAAiBtB,KAAK,CAACuB,KAAvB;AACD,GAHD;;AAKA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BxB,IAAAA,KAAK,CAACyB,aAAN,CAAoBzB,KAAK,CAAC0B,UAAN,GAAmB,CAAvC;AACD,GAFD;;AAIA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAC/BX,IAAAA,+BAA+B,CAAC,IAAD,CAA/B;AACAhB,IAAAA,KAAK,CAAC4B,aAAN,CAAoB,IAAIC,IAAJ,GAAWC,OAAX,EAApB;AACA9B,IAAAA,KAAK,CAAC+B,UAAN;AACD,GAJD;;AAMAhD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAA2B,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEsB,YAAZ,KAA4B,EAACb,gBAAD,aAACA,gBAAD,uBAACA,gBAAgB,CAAEc,MAAnB,CAAhC,EAA2D;AACzDhC,MAAAA,QAAQ,CAACN,oBAAoB,CAAC;AAAEuC,QAAAA,UAAU,EAAE;AAAd,OAAD,CAArB,CAAR;AACApB,MAAAA,UAAU,CAAC,IAAD,CAAV;AACD;AACF,GALQ,EAKN,CAACJ,UAAD,CALM,CAAT,CApC8C,CAyC5B;;AAElB3B,EAAAA,SAAS,CAAC,YAAM,CACd;AACD,GAFQ,EAEN,CAACoB,SAAD,CAFM,CAAT,CA3C8C,CA6C7B;;AAEjB,sBACE,QAAC,oBAAD,kCACMH,KADN;AAEE,IAAA,iBAAiB,EAAES,iBAFrB;AAGE,IAAA,cAAc,EAAEW,cAHlB;AAIE,IAAA,eAAe,EAAEd,eAJnB;AAKE,IAAA,UAAU,EAAEI,UALd;AAME,IAAA,QAAQ,EAAEH,QANZ;AAOE,IAAA,cAAc,EAAEC,cAPlB;AAQE,IAAA,OAAO,EAAEK,OARX;AASE,IAAA,UAAU,EAAEC,UATd;AAUE,IAAA,4BAA4B,EAAEC,4BAVhC;AAWE,IAAA,UAAU,EAAEJ,UAXd;AAYE,IAAA,aAAa,EAAEC,aAZjB;AAaE,IAAA,YAAY,EAAES,YAbhB;AAcE,IAAA,kBAAkB,EAAEG,kBAdtB;AAeE,IAAA,kBAAkB,EAAEG,kBAftB;AAgBE,IAAA,iBAAiB,EAAE,CAAAV,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAEkB,MAAlB,IAA2B,CAA3B,GAA+BlB,gBAA/B,GAAkDC,eAAlD,aAAkDA,eAAlD,uBAAkDA,eAAe,CAAEkB;AAhBxF;AAAA;AAAA;AAAA;AAAA,UADF;AAoBD;;GAnEuBrC,gB;UACLd,W,EACAE,W,EAEOD,W,EACPA,W,EACMA,W,EACGA,W,EACPA,W,EAKMA,W,EACDA,W,EACCA,W;;;KAfHa,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\n\r\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\r\nimport {\r\n  selectLossId,\r\n  selectLossQualifiers,\r\n  selectCatCodes,\r\n  selectClaimsPolicyData,\r\n  selectClaimsPolicyInformation,\r\n  getClaimantNames,\r\n  getPolicyInformation,\r\n  selectorDmsViewFiles,\r\n  selectDmsDocDetails,\r\n  selectLinkPoliciesData,\r\n} from 'stores';\r\n\r\nexport default function LinkSearchPolicy(props) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const claimData = location?.state?.linkPolicy;\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const policyData = useSelector(selectClaimsPolicyData);\r\n  const [validation, setValidation] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);  \r\n  const [sectionEnabledValidationFlag, setSectionEnabledValidationFlag] = useState(true);\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const linkPoliciesData = useSelector(selectLinkPoliciesData);\r\n\r\n  const handleAddClaim = () => {\r\n    dispatch(getClaimantNames());\r\n  };\r\n\r\n  const onSaveHandle = () => {\r\n    setSectionEnabledValidationFlag(false);\r\n    props.handleSave(props.index);\r\n  };\r\n\r\n  const backStepperHandler = () => {\r\n    props.setActiveStep(props.activeStep - 1);\r\n  };\r\n\r\n  const nextStepperhandler = () => {\r\n    setSectionEnabledValidationFlag(true);\r\n    props.setSaveStatus(new Date().getTime());\r\n    props.handleNext();\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (policyData?.xbInstanceID && !linkPoliciesData?.loader) {\r\n      dispatch(getPolicyInformation({ viewLoader: false }));\r\n      setConfirm(true);\r\n    }\r\n  }, [policyData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    // func need to call apis for edit claims\r\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <LinkSearchPolicyView\r\n      {...props}\r\n      policyInformation={policyInformation}\r\n      handleAddClaim={handleAddClaim}\r\n      lossInformation={lossInformation}\r\n      policyData={policyData}\r\n      catCodes={catCodes}\r\n      lossQualifiers={lossQualifiers}\r\n      confirm={confirm}\r\n      setConfirm={setConfirm}\r\n      sectionEnabledValidationFlag={sectionEnabledValidationFlag}\r\n      validation={validation}\r\n      setValidation={setValidation}\r\n      onSaveHandle={onSaveHandle}\r\n      backStepperHandler={backStepperHandler}\r\n      nextStepperhandler={nextStepperhandler}\r\n      linkPolicyDocList={viewDocumentList?.length > 0 ? viewDocumentList : savedDmsDocList?.linkPolicyDocDetails}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}