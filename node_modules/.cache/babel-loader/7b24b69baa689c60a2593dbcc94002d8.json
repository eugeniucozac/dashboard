{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _toArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toArray\";\nimport round from 'lodash/round';\nimport isEqual from 'lodash/isEqual';\nimport xor from 'lodash/xor'; // app\n\nimport * as utils from 'utils';\nimport config from 'config';\nvar utilsGeneric = {\n  isInvalidOrEmptyArray: function isInvalidOrEmptyArray(arr) {\n    var isArray = arr && Array.isArray(arr);\n    var hasItems = isArray && arr.length > 0;\n    return !isArray || !hasItems;\n  },\n  isValidArray: function isValidArray(arr, checkIfArrayHasItems) {\n    var isArray = arr && Array.isArray(arr);\n    var hasItems = checkIfArrayHasItems ? isArray && arr.length > 0 : true;\n    return Boolean(isArray && hasItems);\n  },\n  isValidObject: function isValidObject(obj, checkIfObjectHasProperty) {\n    var isObject = obj && typeof obj === 'object' && !Array.isArray(obj);\n    var hasProperty = checkIfObjectHasProperty !== undefined ? isObject && obj.hasOwnProperty(checkIfObjectHasProperty) : true;\n    return isObject && hasProperty;\n  },\n  isFunction: function isFunction(method) {\n    return method && typeof method === 'function';\n  },\n  isBoolean: function isBoolean(val) {\n    return 'boolean' === typeof val;\n  },\n\n  /**\r\n   * Check if 2 ids are the same, whether they are string or number\r\n   * This is useful to avoid false negative when comparing id integer (from entities) with id string (from url params)\r\n   *\r\n   * @param {string|number} id1 The 1st id to compare.\r\n   * @param {string|number} id2 The 2nd id to compare.\r\n   * @returns {Boolean} Returns a boolean if all object properties are identical to the array strings.\r\n   */\n  isSameId: function isSameId(id1, id2) {\n    return Boolean(id1 && id2 && id1.toString() === id2.toString());\n  },\n\n  /**\r\n   * Check if an object has all/only the same object properties as the array of strings provided\r\n   *\r\n   * @example\r\n   * // returns true - no difference\r\n   * isObjectKeysIdentical([a, b], { a:1, b:2 });\r\n   *\r\n   * @example\r\n   * // returns false - b is NOT in the array\r\n   * isObjectKeysIdentical([a], { a:1, b:2 });\r\n   *\r\n   * @example\r\n   * // returns false - c is NOT in the object\r\n   * isObjectKeysIdentical([a, b, c], { a:1, b:2 });\r\n   *\r\n   * @param {array} base The array of properties to check.\r\n   * @param {object} obj The object in which to check the properties.\r\n   * @returns {Boolean} Returns a boolean if all object properties are identical to the array strings.\r\n   */\n  isObjectKeysIdentical: function isObjectKeysIdentical(base, obj) {\n    // abort\n    if (!base || !obj || !utilsGeneric.isValidArray(base) || !utilsGeneric.isValidObject(obj)) return false;\n    var comparison = obj && xor(base, Object.keys(obj));\n    return Array.isArray(comparison) && comparison.length === 0;\n  },\n\n  /**\r\n   * Transforms an array of value into an array of value pairs\r\n   *\r\n   * @example\r\n   * // returns [[1,2], [1,3], [2,3]]\r\n   * tuples(1,2,3);\r\n   *\r\n   * @example\r\n   * // returns [[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]]\r\n   * tuples(1,2,3,4);\r\n   *\r\n   * @returns {Number} Returns an array of all possible value pairs.\r\n   */\n  tuples: function tuples(arr) {\n    var current = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    // abort\n    if (!utilsGeneric.isValidArray(arr, true)) return [];\n\n    var _arr = _toArray(arr),\n        first = _arr[0],\n        rest = _arr.slice(1);\n\n    var arrayOfTuples = rest.reduce(function (acc, cur) {\n      return [].concat(_toConsumableArray(acc), [[first, cur]]);\n    }, current);\n\n    if (rest && rest.length) {\n      return utilsGeneric.tuples(rest, arrayOfTuples);\n    }\n\n    return arrayOfTuples;\n  },\n  getLabels: function getLabels(arr, path) {\n    var key = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : 'id';\n    if (!utilsGeneric.isValidArray(arr)) return;\n    if (!path) return arr;\n    return arr.map(function (item) {\n      var label = utils.string.replaceLowerCase(item[key], 'withDash');\n      return _objectSpread(_objectSpread({}, item), {}, {\n        label: label ? utils.string.t(\"\".concat(path, \".\").concat(label)) : label\n      });\n    });\n  },\n  getSumOfArray: function getSumOfArray(values, decimal) {\n    if (!utilsGeneric.isValidArray(values)) return;\n    var sum = values.filter(function (val) {\n      return !!val;\n    }).map(function (value) {\n      return Number(utils.string.stripNonNumeric(value));\n    }).reduce(function (acc, num) {\n      return acc + num;\n    }, 0);\n    return decimal ? round(sum, decimal) : sum;\n  },\n  getWithDynamicOperator: function getWithDynamicOperator(a, operator, b) {\n    if (!operator) return;\n    var operators = {\n      '<=': function _(a, b) {\n        return a <= b;\n      },\n      '!==': function _(a, b) {\n        return a !== b;\n      },\n      '===': function _(a, b) {\n        return a === b;\n      },\n      '>=': function _(a, b) {\n        return a >= b;\n      }\n    };\n    if (!operators[operator]) return;\n    return operators[operator](a, b);\n  },\n  getDifferences: function getDifferences(previous, current) {\n    if (!utilsGeneric.isValidObject(previous) || !utilsGeneric.isValidObject(current)) return {};\n    var obj = {};\n    Object.keys(current).forEach(function (key) {\n      if (!isEqual(current[key], previous[key])) {\n        obj[key] = current[key];\n      }\n    });\n    return obj;\n  },\n  getPagination: function getPagination() {\n    var obj = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    if (!utilsGeneric.isValidObject(obj)) return {\n      page: 0,\n      rowsTotal: 0,\n      rowsPerPage: config.ui.pagination.default\n    };\n    return {\n      page: obj.page ? obj.page - 1 : 0,\n      rowsTotal: obj.itemsTotal || 0,\n      rowsPerPage: obj.pageSize || config.ui.pagination.default\n    };\n  },\n  getAutocompleteValue: function getAutocompleteValue(value, options, optionKey) {\n    if (!value || !utilsGeneric.isValidArray(options, true) || !optionKey) return null;\n    var result = options.find(function (option) {\n      return option[optionKey] === value;\n    });\n    return result ? result : null;\n  },\n  getAutocompleteMultipleValues: function getAutocompleteMultipleValues(values, options, optionKey) {\n    if (!utilsGeneric.isValidArray(values, true) || !utilsGeneric.isValidArray(options, true) || !optionKey) return [];\n    var result = values === null || values === void 0 ? void 0 : values.map(function (value) {\n      return options.find(function (option) {\n        return option[optionKey] === value;\n      });\n    }).filter(function (value) {\n      return utils.generic.isValidObject(value, optionKey);\n    });\n    return result ? result : [];\n  },\n  getValueFromOptions: function getValueFromOptions(value, options) {\n    var result = options.find(function (option) {\n      var _option$label, _option$value;\n\n      return (option === null || option === void 0 ? void 0 : (_option$label = option.label) === null || _option$label === void 0 ? void 0 : _option$label.toUpperCase()) === (value === null || value === void 0 ? void 0 : value.toUpperCase()) || (option === null || option === void 0 ? void 0 : (_option$value = option.value) === null || _option$value === void 0 ? void 0 : _option$value.toUpperCase()) === (value === null || value === void 0 ? void 0 : value.toUpperCase());\n    });\n    return (result === null || result === void 0 ? void 0 : result.value) ? result === null || result === void 0 ? void 0 : result.value : null;\n  },\n  getObjectFromOptions: function getObjectFromOptions(value, options) {\n    var result = options.find(function (option) {\n      var _option$label2, _option$value2;\n\n      return (option === null || option === void 0 ? void 0 : (_option$label2 = option.label) === null || _option$label2 === void 0 ? void 0 : _option$label2.toUpperCase()) === (value === null || value === void 0 ? void 0 : value.toUpperCase()) || (option === null || option === void 0 ? void 0 : (_option$value2 = option.value) === null || _option$value2 === void 0 ? void 0 : _option$value2.toUpperCase()) === (value === null || value === void 0 ? void 0 : value.toUpperCase());\n    });\n    return (result === null || result === void 0 ? void 0 : result.value) ? result : null;\n  },\n  formatFields: function formatFields(obj, field) {\n    var formattedObj = {};\n    Object.keys(obj).forEach(function (item) {\n      var selectedField = field.find(function (fieldItem) {\n        return fieldItem.name === item;\n      });\n\n      if ((selectedField === null || selectedField === void 0 ? void 0 : selectedField.type) === 'select') {\n        formattedObj[item] = utils.generic.getValueFromOptions(obj[item], (selectedField === null || selectedField === void 0 ? void 0 : selectedField.options) || []);\n      }\n\n      if ((selectedField === null || selectedField === void 0 ? void 0 : selectedField.type) === 'autocompletemui') {\n        formattedObj[item] = utils.generic.getObjectFromOptions(obj[item], (selectedField === null || selectedField === void 0 ? void 0 : selectedField.options) || []);\n      }\n\n      if ((selectedField === null || selectedField === void 0 ? void 0 : selectedField.type) === 'toggle') {\n        formattedObj[item] = obj[item] ? obj[item] === true || obj[item].toUpperCase() === 'TRUE' || obj[item] === '1' || obj[item].toUpperCase() === 'YES' ? true : false : null;\n      }\n    });\n\n    var result = _objectSpread(_objectSpread({}, obj), formattedObj);\n\n    return result;\n  }\n};\nexport default utilsGeneric;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/generic/generic.js"],"names":["round","isEqual","xor","utils","config","utilsGeneric","isInvalidOrEmptyArray","arr","isArray","Array","hasItems","length","isValidArray","checkIfArrayHasItems","Boolean","isValidObject","obj","checkIfObjectHasProperty","isObject","hasProperty","undefined","hasOwnProperty","isFunction","method","isBoolean","val","isSameId","id1","id2","toString","isObjectKeysIdentical","base","comparison","Object","keys","tuples","current","first","rest","arrayOfTuples","reduce","acc","cur","getLabels","path","key","map","item","label","string","replaceLowerCase","t","getSumOfArray","values","decimal","sum","filter","value","Number","stripNonNumeric","num","getWithDynamicOperator","a","operator","b","operators","getDifferences","previous","forEach","getPagination","page","rowsTotal","rowsPerPage","ui","pagination","default","itemsTotal","pageSize","getAutocompleteValue","options","optionKey","result","find","option","getAutocompleteMultipleValues","generic","getValueFromOptions","toUpperCase","getObjectFromOptions","formatFields","field","formattedObj","selectedField","fieldItem","name","type"],"mappings":"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","sourcesContent":["import round from 'lodash/round';\r\nimport isEqual from 'lodash/isEqual';\r\nimport xor from 'lodash/xor';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nconst utilsGeneric = {\r\n  isInvalidOrEmptyArray: (arr) => {\r\n    const isArray = arr && Array.isArray(arr);\r\n    const hasItems = isArray && arr.length > 0;\r\n\r\n    return !isArray || !hasItems;\r\n  },\r\n\r\n  isValidArray: (arr, checkIfArrayHasItems) => {\r\n    const isArray = arr && Array.isArray(arr);\r\n    const hasItems = checkIfArrayHasItems ? isArray && arr.length > 0 : true;\r\n\r\n    return Boolean(isArray && hasItems);\r\n  },\r\n\r\n  isValidObject: (obj, checkIfObjectHasProperty) => {\r\n    const isObject = obj && typeof obj === 'object' && !Array.isArray(obj);\r\n    const hasProperty = checkIfObjectHasProperty !== undefined ? isObject && obj.hasOwnProperty(checkIfObjectHasProperty) : true;\r\n\r\n    return isObject && hasProperty;\r\n  },\r\n\r\n  isFunction: (method) => {\r\n    return method && typeof method === 'function';\r\n  },\r\n\r\n  isBoolean: (val) => 'boolean' === typeof val,\r\n\r\n  /**\r\n   * Check if 2 ids are the same, whether they are string or number\r\n   * This is useful to avoid false negative when comparing id integer (from entities) with id string (from url params)\r\n   *\r\n   * @param {string|number} id1 The 1st id to compare.\r\n   * @param {string|number} id2 The 2nd id to compare.\r\n   * @returns {Boolean} Returns a boolean if all object properties are identical to the array strings.\r\n   */\r\n  isSameId: (id1, id2) => {\r\n    return Boolean(id1 && id2 && id1.toString() === id2.toString());\r\n  },\r\n\r\n  /**\r\n   * Check if an object has all/only the same object properties as the array of strings provided\r\n   *\r\n   * @example\r\n   * // returns true - no difference\r\n   * isObjectKeysIdentical([a, b], { a:1, b:2 });\r\n   *\r\n   * @example\r\n   * // returns false - b is NOT in the array\r\n   * isObjectKeysIdentical([a], { a:1, b:2 });\r\n   *\r\n   * @example\r\n   * // returns false - c is NOT in the object\r\n   * isObjectKeysIdentical([a, b, c], { a:1, b:2 });\r\n   *\r\n   * @param {array} base The array of properties to check.\r\n   * @param {object} obj The object in which to check the properties.\r\n   * @returns {Boolean} Returns a boolean if all object properties are identical to the array strings.\r\n   */\r\n  isObjectKeysIdentical: (base, obj) => {\r\n    // abort\r\n    if (!base || !obj || !utilsGeneric.isValidArray(base) || !utilsGeneric.isValidObject(obj)) return false;\r\n\r\n    const comparison = obj && xor(base, Object.keys(obj));\r\n\r\n    return Array.isArray(comparison) && comparison.length === 0;\r\n  },\r\n\r\n  /**\r\n   * Transforms an array of value into an array of value pairs\r\n   *\r\n   * @example\r\n   * // returns [[1,2], [1,3], [2,3]]\r\n   * tuples(1,2,3);\r\n   *\r\n   * @example\r\n   * // returns [[1,2], [1,3], [1,4], [2,3], [2,4], [3,4]]\r\n   * tuples(1,2,3,4);\r\n   *\r\n   * @returns {Number} Returns an array of all possible value pairs.\r\n   */\r\n  tuples: (arr, current = []) => {\r\n    // abort\r\n    if (!utilsGeneric.isValidArray(arr, true)) return [];\r\n\r\n    const [first, ...rest] = arr;\r\n\r\n    const arrayOfTuples = rest.reduce((acc, cur) => {\r\n      return [...acc, [first, cur]];\r\n    }, current);\r\n\r\n    if (rest && rest.length) {\r\n      return utilsGeneric.tuples(rest, arrayOfTuples);\r\n    }\r\n\r\n    return arrayOfTuples;\r\n  },\r\n\r\n  getLabels: (arr, path, key = 'id') => {\r\n    if (!utilsGeneric.isValidArray(arr)) return;\r\n    if (!path) return arr;\r\n    return arr.map((item) => {\r\n      const label = utils.string.replaceLowerCase(item[key], 'withDash');\r\n      return {\r\n        ...item,\r\n        label: label ? utils.string.t(`${path}.${label}`) : label,\r\n      };\r\n    });\r\n  },\r\n\r\n  getSumOfArray: (values, decimal) => {\r\n    if (!utilsGeneric.isValidArray(values)) return;\r\n\r\n    const sum = values\r\n      .filter((val) => !!val)\r\n      .map((value) => Number(utils.string.stripNonNumeric(value)))\r\n      .reduce((acc, num) => acc + num, 0);\r\n\r\n    return decimal ? round(sum, decimal) : sum;\r\n  },\r\n\r\n  getWithDynamicOperator: (a, operator, b) => {\r\n    if (!operator) return;\r\n\r\n    const operators = {\r\n      '<=': (a, b) => a <= b,\r\n      '!==': (a, b) => a !== b,\r\n      '===': (a, b) => a === b,\r\n      '>=': (a, b) => a >= b,\r\n    };\r\n\r\n    if (!operators[operator]) return;\r\n\r\n    return operators[operator](a, b);\r\n  },\r\n\r\n  getDifferences: (previous, current) => {\r\n    if (!utilsGeneric.isValidObject(previous) || !utilsGeneric.isValidObject(current)) return {};\r\n\r\n    const obj = {};\r\n\r\n    Object.keys(current).forEach((key) => {\r\n      if (!isEqual(current[key], previous[key])) {\r\n        obj[key] = current[key];\r\n      }\r\n    });\r\n\r\n    return obj;\r\n  },\r\n\r\n  getPagination: (obj = {}) => {\r\n    if (!utilsGeneric.isValidObject(obj))\r\n      return {\r\n        page: 0,\r\n        rowsTotal: 0,\r\n        rowsPerPage: config.ui.pagination.default,\r\n      };\r\n\r\n    return {\r\n      page: obj.page ? obj.page - 1 : 0,\r\n      rowsTotal: obj.itemsTotal || 0,\r\n      rowsPerPage: obj.pageSize || config.ui.pagination.default,\r\n    };\r\n  },\r\n\r\n  getAutocompleteValue: (value, options, optionKey) => {\r\n    if (!value || !utilsGeneric.isValidArray(options, true) || !optionKey) return null;\r\n\r\n    const result = options.find((option) => option[optionKey] === value);\r\n\r\n    return result ? result : null;\r\n  },\r\n\r\n  getAutocompleteMultipleValues: (values, options, optionKey) => {\r\n    if (!utilsGeneric.isValidArray(values, true) || !utilsGeneric.isValidArray(options, true) || !optionKey) return [];\r\n\r\n    const result = values\r\n      ?.map((value) => options.find((option) => option[optionKey] === value))\r\n      .filter((value) => utils.generic.isValidObject(value, optionKey));\r\n\r\n    return result ? result : [];\r\n  },\r\n  getValueFromOptions: (value, options) => {\r\n    const result = options.find(\r\n      (option) => option?.label?.toUpperCase() === value?.toUpperCase() || option?.value?.toUpperCase() === value?.toUpperCase()\r\n    );\r\n\r\n    return result?.value ? result?.value : null;\r\n  },\r\n\r\n  getObjectFromOptions: (value, options) => {\r\n    const result = options.find(\r\n      (option) => option?.label?.toUpperCase() === value?.toUpperCase() || option?.value?.toUpperCase() === value?.toUpperCase()\r\n    );\r\n\r\n    return result?.value ? result : null;\r\n  },\r\n\r\n  formatFields: (obj, field) => {\r\n    let formattedObj = {};\r\n    Object.keys(obj).forEach((item) => {\r\n      const selectedField = field.find((fieldItem) => fieldItem.name === item);\r\n      if (selectedField?.type === 'select') {\r\n        formattedObj[item] = utils.generic.getValueFromOptions(obj[item], selectedField?.options || []);\r\n      }\r\n      if (selectedField?.type === 'autocompletemui') {\r\n        formattedObj[item] = utils.generic.getObjectFromOptions(obj[item], selectedField?.options || []);\r\n      }\r\n      if (selectedField?.type === 'toggle') {\r\n        formattedObj[item] = obj[item]\r\n          ? obj[item] === true || obj[item].toUpperCase() === 'TRUE' || obj[item] === '1' || obj[item].toUpperCase() === 'YES'\r\n            ? true\r\n            : false\r\n          : null;\r\n      }\r\n    });\r\n\r\n    const result = { ...obj, ...formattedObj };\r\n\r\n    return result;\r\n  },\r\n};\r\n\r\nexport default utilsGeneric;\r\n"]},"metadata":{},"sourceType":"module"}