{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { addLoader, removeLoader, enqueueNotification, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var userDelete = function userDelete(user) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(deleteUserRequest(user));\n    dispatch(addLoader('deleteUser'));\n    var defaultError = {\n      file: 'stores/admin.actions.deleteUser'\n    };\n\n    if (!(user === null || user === void 0 ? void 0 : user.id)) {\n      dispatch(deleteUserFailure(defaultError));\n      dispatch(enqueueNotification('notification.user.delete.fail', 'error'));\n      dispatch(removeLoader('deleteUser'));\n      dispatch(hideModal());\n      return;\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: \"api/users/\".concat(user.id)\n    }).then(function (response) {\n      if (response.status === 204) {\n        dispatch(deleteUserSuccess(user === null || user === void 0 ? void 0 : user.id));\n        dispatch(enqueueNotification('notification.user.delete.ok', 'success'));\n      } else {\n        dispatch(deleteUserFailure(response));\n        dispatch(enqueueNotification('notification.user.delete.fail', 'error'));\n      }\n    })[\"finally\"](function () {\n      dispatch(removeLoader('deleteUser'));\n      dispatch(hideModal());\n    });\n  };\n};\nexport var deleteUserRequest = function deleteUserRequest(payload) {\n  return {\n    type: 'USER_DELETE_REQUEST',\n    payload: payload\n  };\n};\nexport var deleteUserSuccess = function deleteUserSuccess(userId) {\n  return {\n    type: 'ADMINISTRATION_USER_DELETE_SUCCESS',\n    payload: userId\n  };\n};\nexport var deleteUserFailure = function deleteUserFailure(error) {\n  return {\n    type: 'USER_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/administration/administration.actions.deleteUser.js"],"names":["addLoader","removeLoader","enqueueNotification","hideModal","utils","userDelete","user","dispatch","getState","auth","endpoint","config","vars","deleteUserRequest","defaultError","file","id","deleteUserFailure","api","token","accessToken","authService","path","then","response","status","deleteUserSuccess","payload","type","userId","error"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,mBAAlC,EAAuDC,SAAvD,QAAwE,QAAxE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC1D;AAD0D,oBAEDA,QAAQ,EAFP;AAAA,QAE1CC,IAF0C,aAElDH,IAFkD,CAE1CG,IAF0C;AAAA,QAEhBC,QAFgB,aAElCC,MAFkC,CAExBC,IAFwB,CAEhBF,QAFgB;;AAI1DH,IAAAA,QAAQ,CAACM,iBAAiB,CAACP,IAAD,CAAlB,CAAR;AACAC,IAAAA,QAAQ,CAACP,SAAS,CAAC,YAAD,CAAV,CAAR;AAEA,QAAMc,YAAY,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;;AAEA,QAAI,EAACT,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEU,EAAP,CAAJ,EAAe;AACbT,MAAAA,QAAQ,CAACU,iBAAiB,CAACH,YAAD,CAAlB,CAAR;AACAP,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,+BAAD,EAAkC,OAAlC,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACN,YAAY,CAAC,YAAD,CAAb,CAAR;AACAM,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACA;AACD;;AAED,WAAOC,KAAK,CAACc,GAAN,WACG;AACNC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADN;AAENV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,WAFb;AAGNC,MAAAA,IAAI,sBAAehB,IAAI,CAACU,EAApB;AAHE,KADH,EAMJO,IANI,CAMC,UAACC,QAAD,EAAc;AAClB,UAAIA,QAAQ,CAACC,MAAT,KAAoB,GAAxB,EAA6B;AAC3BlB,QAAAA,QAAQ,CAACmB,iBAAiB,CAACpB,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEU,EAAP,CAAlB,CAAR;AACAT,QAAAA,QAAQ,CAACL,mBAAmB,CAAC,6BAAD,EAAgC,SAAhC,CAApB,CAAR;AACD,OAHD,MAGO;AACLK,QAAAA,QAAQ,CAACU,iBAAiB,CAACO,QAAD,CAAlB,CAAR;AACAjB,QAAAA,QAAQ,CAACL,mBAAmB,CAAC,+BAAD,EAAkC,OAAlC,CAApB,CAAR;AACD;AACF,KAdI,aAeI,YAAM;AACbK,MAAAA,QAAQ,CAACN,YAAY,CAAC,YAAD,CAAb,CAAR;AACAM,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,KAlBI,CAAP;AAmBD,GApCyB;AAAA,CAAnB;AAsCP,OAAO,IAAMU,iBAAiB,GAAG,SAApBA,iBAAoB,CAACc,OAAD,EAAa;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,qBADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMD,iBAAiB,GAAG,SAApBA,iBAAoB,CAACG,MAAD,EAAY;AAC3C,SAAO;AACLD,IAAAA,IAAI,EAAE,oCADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMZ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACa,KAAD,EAAW;AAC1C,SAAO;AACLF,IAAAA,IAAI,EAAE,qBADD;AAELD,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const userDelete = (user) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  dispatch(deleteUserRequest(user));\r\n  dispatch(addLoader('deleteUser'));\r\n\r\n  const defaultError = { file: 'stores/admin.actions.deleteUser' };\r\n\r\n  if (!user?.id) {\r\n    dispatch(deleteUserFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.user.delete.fail', 'error'));\r\n    dispatch(removeLoader('deleteUser'));\r\n    dispatch(hideModal());\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: `api/users/${user.id}`,\r\n    })\r\n    .then((response) => {\r\n      if (response.status === 204) {\r\n        dispatch(deleteUserSuccess(user?.id));\r\n        dispatch(enqueueNotification('notification.user.delete.ok', 'success'));\r\n      } else {\r\n        dispatch(deleteUserFailure(response));\r\n        dispatch(enqueueNotification('notification.user.delete.fail', 'error'));\r\n      }\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('deleteUser'));\r\n      dispatch(hideModal());\r\n    });\r\n};\r\n\r\nexport const deleteUserRequest = (payload) => {\r\n  return {\r\n    type: 'USER_DELETE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const deleteUserSuccess = (userId) => {\r\n  return {\r\n    type: 'ADMINISTRATION_USER_DELETE_SUCCESS',\r\n    payload: userId,\r\n  };\r\n};\r\n\r\nexport const deleteUserFailure = (error) => {\r\n  return {\r\n    type: 'USER_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}