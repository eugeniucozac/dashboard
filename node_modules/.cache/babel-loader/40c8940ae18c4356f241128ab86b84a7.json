{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseHistory\\\\PremiumProcessingCaseHistory.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport orderBy from 'lodash/orderBy'; // app\n\nimport styles from './PremiumProcessingCaseHistory.styles';\nimport { FormGrid, Warning, Tooltip } from 'components';\nimport * as utils from 'utils';\nimport { selectRefDataNewProcessType } from 'stores'; //mui\n\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseHistoryView.propTypes = {\n  taskId: PropTypes.string,\n  caseDetailsObject: PropTypes.object\n};\nexport default function PremiumProcessingCaseHistoryView(_ref) {\n  _s();\n\n  var _caseDetailsObject$ch,\n      _this = this;\n\n  var caseDetailsObject = _ref.caseDetailsObject;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseHistory'\n  })();\n  var caseHistory = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ch = caseDetailsObject.checkSigningCaseHistory) === null || _caseDetailsObject$ch === void 0 ? void 0 : _caseDetailsObject$ch.data;\n  var hasNoHistory = (caseHistory === null || caseHistory === void 0 ? void 0 : caseHistory.length) === 0;\n  var processTypeRefData = useSelector(selectRefDataNewProcessType) || [];\n  var processTypeIdFromHistory = caseHistory.map(function (type) {\n    return {\n      processTypeId: type === null || type === void 0 ? void 0 : type.processTypeId\n    };\n  });\n  var processName = processTypeIdFromHistory === null || processTypeIdFromHistory === void 0 ? void 0 : processTypeIdFromHistory[0];\n  var processTypeName = utils.generic.isValidArray(processTypeRefData, true) && (processName === null || processName === void 0 ? void 0 : processName.processTypeId) && utils.referenceData.processTypes.getNameById(processTypeRefData, parseInt(processName === null || processName === void 0 ? void 0 : processName.processTypeId)) || '';\n  var caseHistoryDesc = orderBy(caseHistory, ['dateAndTime'], ['desc']);\n  return /*#__PURE__*/_jsxDEV(FormGrid, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      \"data-testid\": \"notes\",\n      marginTop: 2,\n      children: caseHistoryDesc === null || caseHistoryDesc === void 0 ? void 0 : caseHistoryDesc.map(function (history) {\n        return /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            py: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              justify: \"flex-start\",\n              spacing: 1,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: [/*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.noteStatus,\n                  children: history.message\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 46,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: history.dateAndTime\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 47,\n                  columnNumber: 21\n                }, _this), (history === null || history === void 0 ? void 0 : history.oldCaseId) && /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [utils.string.t('premiumProcessing.checkSigningHistory.oldCheckSigning'), \": \", history.oldCaseId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 49,\n                  columnNumber: 23\n                }, _this), history.parentCaseId && /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [utils.string.t('premiumProcessing.checkSigningHistory.parentCheckSigning'), \": \", history.parentCaseId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: [processTypeName, utils.string.t('premiumProcessing.checkSigningHistory.caseID'), \": \", history.caseId]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: history === null || history === void 0 ? void 0 : history.email,\n                    placement: \"bottom\",\n                    arrow: true,\n                    children: utils.string.t('premiumProcessing.checkSigningHistory.by') + \"\".concat(history.userName, \" ( \").concat(history.role, \" )\")\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 63,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 45,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 44,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), hasNoHistory && /*#__PURE__*/_jsxDEV(Box, {\n      p: 5,\n      children: /*#__PURE__*/_jsxDEV(Warning, {\n        text: utils.string.t('premiumProcessing.checkSigningHistory.noHistoryIsAvailable'),\n        type: \"info\",\n        align: \"center\",\n        size: \"large\",\n        icon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseHistoryView, \"nKHvd/QB6hocKEk0fSJoSYcCyR8=\", false, function () {\n  return [useSelector];\n});\n\n_c = PremiumProcessingCaseHistoryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseHistoryView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseHistory/PremiumProcessingCaseHistory.view.js"],"names":["React","PropTypes","useSelector","orderBy","styles","FormGrid","Warning","Tooltip","utils","selectRefDataNewProcessType","Box","makeStyles","Typography","PremiumProcessingCaseHistoryView","propTypes","taskId","string","caseDetailsObject","object","classes","name","caseHistory","checkSigningCaseHistory","data","hasNoHistory","length","processTypeRefData","processTypeIdFromHistory","map","type","processTypeId","processName","processTypeName","generic","isValidArray","referenceData","processTypes","getNameById","parseInt","caseHistoryDesc","history","noteStatus","message","dateAndTime","oldCaseId","t","parentCaseId","caseId","email","userName","role"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCaseHistory.styles';\r\nimport { FormGrid, Warning, Tooltip } from 'components';\r\nimport * as utils from 'utils';\r\nimport { selectRefDataNewProcessType } from 'stores';\r\n\r\n//mui\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nPremiumProcessingCaseHistoryView.propTypes = {\r\n  taskId: PropTypes.string,\r\n  caseDetailsObject: PropTypes.object,\r\n};\r\nexport default function PremiumProcessingCaseHistoryView({ caseDetailsObject }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseHistory' })();\r\n  const caseHistory = caseDetailsObject?.checkSigningCaseHistory?.data;\r\n  const hasNoHistory = caseHistory?.length === 0;\r\n  const processTypeRefData = useSelector(selectRefDataNewProcessType) || [];\r\n  const processTypeIdFromHistory = caseHistory.map((type) => {\r\n    return {\r\n      processTypeId: type?.processTypeId,\r\n    };\r\n  });\r\n  const processName = processTypeIdFromHistory?.[0];\r\n  const processTypeName =\r\n    (utils.generic.isValidArray(processTypeRefData, true) &&\r\n      processName?.processTypeId &&\r\n      utils.referenceData.processTypes.getNameById(processTypeRefData, parseInt(processName?.processTypeId))) ||\r\n    '';\r\n  const caseHistoryDesc = orderBy(caseHistory, ['dateAndTime'], ['desc']);\r\n  \r\n  return (\r\n    <FormGrid>\r\n      <Box data-testid=\"notes\" marginTop={2}>\r\n        {caseHistoryDesc?.map((history) => {\r\n          return (\r\n            <Box>\r\n              <Box py={2}>\r\n                <FormGrid container alignItems=\"center\" justify=\"flex-start\" spacing={1}>\r\n                  <FormGrid item>\r\n                    <Typography className={classes.noteStatus}>{history.message}</Typography>\r\n                    <Typography>{history.dateAndTime}</Typography>\r\n                    {history?.oldCaseId && (\r\n                      <Typography>\r\n                        {utils.string.t('premiumProcessing.checkSigningHistory.oldCheckSigning')}: {history.oldCaseId}\r\n                      </Typography>\r\n                    )}\r\n                    {history.parentCaseId && (\r\n                      <Typography>\r\n                        {utils.string.t('premiumProcessing.checkSigningHistory.parentCheckSigning')}: {history.parentCaseId}\r\n                      </Typography>\r\n                    )}\r\n                    <Typography>\r\n                      {processTypeName}\r\n                      {utils.string.t('premiumProcessing.checkSigningHistory.caseID')}: {history.caseId}\r\n                    </Typography>\r\n                    <Typography>\r\n                      <Tooltip title={history?.email} placement=\"bottom\" arrow>\r\n                        {utils.string.t('premiumProcessing.checkSigningHistory.by') + `${history.userName} ( ${history.role} )`}\r\n                      </Tooltip>\r\n                    </Typography>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </Box>\r\n          );\r\n        })}\r\n      </Box>\r\n      {hasNoHistory && (\r\n        <Box p={5}>\r\n          <Warning\r\n            text={utils.string.t('premiumProcessing.checkSigningHistory.noHistoryIsAvailable')}\r\n            type=\"info\"\r\n            align=\"center\"\r\n            size=\"large\"\r\n            icon\r\n          />\r\n        </Box>\r\n      )}\r\n    </FormGrid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}