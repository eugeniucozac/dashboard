{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nimport { API_STATUS_NOT_FOUND } from 'consts';\nexport var viewDocumentsDownload = function viewDocumentsDownload(doc) {\n  var viewDoc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (dispatch, getState) {\n    var _files$data, _files$data$searchVal, _files$data$searchVal2;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        _getState$dms$search$ = _getState.dms.search.files,\n        files = _getState$dms$search$ === void 0 ? [] : _getState$dms$search$;\n\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    var documentSource = files === null || files === void 0 ? void 0 : (_files$data = files.data) === null || _files$data === void 0 ? void 0 : (_files$data$searchVal = _files$data.searchValue) === null || _files$data$searchVal === void 0 ? void 0 : (_files$data$searchVal2 = _files$data$searchVal.find(function (file) {\n      return file.documentId === documentId;\n    })) === null || _files$data$searchVal2 === void 0 ? void 0 : _files$data$searchVal2.documentSource;\n    var defaultError = {\n      file: 'stores/dms.actions.viewDocumentsDownload'\n    };\n    dispatch(addLoader('viewDocumentsDownload'));\n    dispatch(viewDocumentsDownloadRequest(doc));\n\n    if (!documentId || !documentName) {\n      dispatch(removeLoader('viewDocumentsDownload'));\n      dispatch(viewDocumentsDownloadFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing file parameters'\n      })));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/download/\".concat(documentId)\n    }).then(function (response) {\n      if (!response.ok) {\n        dispatch(documentSource === 'GXB' ? enqueueNotification('dms.fileDownload.fileNotFound', 'error') : (response === null || response === void 0 ? void 0 : response.status) === API_STATUS_NOT_FOUND ? enqueueNotification('dms.fileDownload.fileNotFound', 'error') : enqueueNotification('dms.fileDownload.fail', 'error'));\n      } else {\n        return viewDoc ? response.arrayBuffer() : response.blob();\n      }\n    }).then(function (blob) {\n      return viewDoc ? utils.file.viewDoc(blob, documentName) : utils.file.download(blob, documentName);\n    }).catch(function (err) {\n      var errorParams = {\n        file: 'stores/dms.actions',\n        message: 'API fetch error (viewDocumentsDownload)'\n      };\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n    }).finally(function () {\n      dispatch(removeLoader('viewDocumentsDownload'));\n    });\n  };\n};\nexport var viewDocumentsDownloadRequest = function viewDocumentsDownloadRequest(doc) {\n  return {\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_REQUEST',\n    payload: doc\n  };\n};\nexport var viewDocumentsDownloadFailure = function viewDocumentsDownloadFailure(error) {\n  return {\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.viewDocumentsDownload.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","utils","API_STATUS_NOT_FOUND","viewDocumentsDownload","doc","viewDoc","dispatch","getState","auth","user","endpoint","config","vars","dms","search","files","documentId","documentName","documentSource","data","searchValue","find","file","defaultError","viewDocumentsDownloadRequest","viewDocumentsDownloadFailure","message","api","get","token","accessToken","dmsService","path","then","response","ok","status","arrayBuffer","blob","download","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload","error"],"mappings":"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","sourcesContent":["// app\r\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { API_STATUS_NOT_FOUND } from 'consts';\r\n\r\nexport const viewDocumentsDownload = (doc, viewDoc = false) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }, }, dms: { search: { files = [] } } } = getState();\r\n\r\n  const { documentId, documentName } = doc;\r\n  const documentSource = files?.data?.searchValue?.find((file) => file.documentId === documentId)?.documentSource;\r\n\r\n  const defaultError = {\r\n    file: 'stores/dms.actions.viewDocumentsDownload',\r\n  };\r\n\r\n  dispatch(addLoader('viewDocumentsDownload'));\r\n  dispatch(viewDocumentsDownloadRequest(doc));\r\n\r\n  if (!documentId || !documentName) {\r\n    dispatch(removeLoader('viewDocumentsDownload'));\r\n    dispatch(viewDocumentsDownloadFailure({ ...defaultError, message: 'Missing file parameters' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/download/${documentId}`,\r\n    })\r\n    .then((response) => {\r\n      if (!response.ok) {\r\n        dispatch(\r\n          documentSource === 'GXB'\r\n            ? enqueueNotification('dms.fileDownload.fileNotFound', 'error')\r\n            : response?.status === API_STATUS_NOT_FOUND\r\n              ? enqueueNotification('dms.fileDownload.fileNotFound', 'error')\r\n              : enqueueNotification('dms.fileDownload.fail', 'error')\r\n        );\r\n      } else {\r\n        return viewDoc ? response.arrayBuffer() : response.blob();\r\n      }\r\n    })\r\n    .then((blob) => {\r\n      return viewDoc ? utils.file.viewDoc(blob, documentName) : utils.file.download(blob, documentName);\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        file: 'stores/dms.actions',\r\n        message: 'API fetch error (viewDocumentsDownload)',\r\n      };\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('viewDocumentsDownload'));\r\n    });\r\n};\r\n\r\nexport const viewDocumentsDownloadRequest = (doc) => {\r\n  return {\r\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_REQUEST',\r\n    payload: doc,\r\n  };\r\n};\r\n\r\nexport const viewDocumentsDownloadFailure = (error) => {\r\n  return {\r\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}