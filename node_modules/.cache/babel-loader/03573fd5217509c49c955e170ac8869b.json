{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddClaimTaskNote\\\\AddClaimTaskNote.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './AddClaimTaskNote.styles';\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormHidden, FormLabel, FormText } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddClaimTaskNoteView.propTypes = {\n  fields: PropTypes.array,\n  buttons: PropTypes.shape({\n    cancel: PropTypes.object.isRequired,\n    submit: PropTypes.object.isRequired\n  }),\n  formProps: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.array.isRequired\n};\nexport function AddClaimTaskNoteView(_ref) {\n  var _this = this;\n\n  var fields = _ref.fields,\n      _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? {} : _ref$buttons,\n      formProps = _ref.formProps,\n      breadcrumbs = _ref.breadcrumbs;\n  var classes = makeStyles(styles, {\n    name: 'AddClaimTaskNote'\n  })();\n  var control = formProps.control,\n      errors = formProps.errors,\n      handleSubmit = formProps.handleSubmit,\n      formState = formProps.formState;\n  var textOnlyFields = fields.filter(function (f) {\n    return f.textOnly;\n  }).map(function (f) {\n    return f.name;\n  });\n  var getNotesBreadCrumb = breadcrumbs === null || breadcrumbs === void 0 ? void 0 : breadcrumbs.filter(function (_ref2) {\n    var name = _ref2.name;\n    return name === 'lossRef' || name === 'claimRef' || name === 'taskRef';\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [(getNotesBreadCrumb === null || getNotesBreadCrumb === void 0 ? void 0 : getNotesBreadCrumb.length) > 0 ? /*#__PURE__*/_jsxDEV(FormGrid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        classes: {\n          root: classes.breadcrumbSpacing\n        },\n        children: getNotesBreadCrumb === null || getNotesBreadCrumb === void 0 ? void 0 : getNotesBreadCrumb.map(function (_ref3) {\n          var name = _ref3.name,\n              label = _ref3.label;\n          return name !== 'taskRef' ? label + ' / ' : label;\n        }).join('')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 34\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 11\n    }, this) : null, /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(buttons.submit.handler),\n      \"data-testid\": \"form-addClaimTaskNote\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [textOnlyFields.map(function (field) {\n          var _utils$form$getFieldP;\n\n          return /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t(\"claims.notes.addNoteFields.\".concat(field, \".label\")),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 44,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 9,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                classes: {\n                  root: classes.textOnly\n                },\n                children: (_utils$form$getFieldP = utils.form.getFieldProps(fields, field)) === null || _utils$form$getFieldP === void 0 ? void 0 : _utils$form$getFieldP.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, field, control)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, _this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.addNoteFields.details.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 9,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'details', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [buttons.cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: buttons.cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 13\n        }, this), buttons.submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          onClick: handleSubmit(buttons.submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = AddClaimTaskNoteView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClaimTaskNoteView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddClaimTaskNote/AddClaimTaskNote.view.js"],"names":["React","PropTypes","styles","Button","FormActions","FormContainer","FormFields","FormGrid","FormHidden","FormLabel","FormText","utils","makeStyles","Typography","AddClaimTaskNoteView","propTypes","fields","array","buttons","shape","cancel","object","isRequired","submit","formProps","breadcrumbs","classes","name","control","errors","handleSubmit","formState","textOnlyFields","filter","f","textOnly","map","getNotesBreadCrumb","root","length","breadcrumbSpacing","label","join","handler","field","string","t","form","getFieldProps","value","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './AddClaimTaskNote.styles';\r\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormHidden, FormLabel, FormText } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nAddClaimTaskNoteView.propTypes = {\r\n  fields: PropTypes.array,\r\n  buttons: PropTypes.shape({\r\n    cancel: PropTypes.object.isRequired,\r\n    submit: PropTypes.object.isRequired,\r\n  }),\r\n  formProps: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function AddClaimTaskNoteView({ fields, buttons = {}, formProps, breadcrumbs }) {\r\n  const classes = makeStyles(styles, { name: 'AddClaimTaskNote' })();\r\n\r\n  const { control, errors, handleSubmit, formState } = formProps;\r\n\r\n  const textOnlyFields = fields.filter((f) => f.textOnly).map((f) => f.name);\r\n\r\n  const getNotesBreadCrumb = breadcrumbs?.filter(({name}) => name === 'lossRef' || name === 'claimRef' || name === 'taskRef' );\r\n  \r\n  return (\r\n    <div className={classes.root}>\r\n      {getNotesBreadCrumb?.length > 0\r\n        ? <FormGrid item xs={12}><Typography variant=\"body2\" classes={{ root: classes.breadcrumbSpacing }}>{getNotesBreadCrumb?.map(({name, label}) => (name !== 'taskRef' ?  label+' / ' : label)).join('')}</Typography></FormGrid>\r\n        : null\r\n      }\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(buttons.submit.handler)} data-testid=\"form-addClaimTaskNote\">\r\n\r\n        <FormFields type=\"dialog\">\r\n          {textOnlyFields.map((field) => {\r\n            return (\r\n              <FormGrid container alignItems=\"center\" key={field}>\r\n                <FormGrid item xs={3}>\r\n                  <FormLabel label={utils.string.t(`claims.notes.addNoteFields.${field}.label`)} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={9}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {utils.form.getFieldProps(fields, field)?.value}\r\n                  </Typography>\r\n                  <FormHidden {...utils.form.getFieldProps(fields, field, control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            );\r\n          })}\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.addNoteFields.details.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={9}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'details', control, errors)} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {buttons.cancel && (\r\n            <Button text={buttons.cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={buttons.cancel.handler} />\r\n          )}\r\n          {buttons.submit && (\r\n            <Button\r\n              text={buttons.submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              onClick={handleSubmit(buttons.submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}