{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityContractPolicyRef\\\\ClaimsComplexityContractPolicyRef.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; //app\n\nimport styles from './ClaimsComplexityContractPolicyRef.styles';\nimport * as utils from 'utils';\nimport { Button, TableCell, Overflow, TableHead, Search, Pagination, Empty, Tooltip, FormCheckbox } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks'; //mui\n\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsComplexityContractPolicyRefView.propTypes = {\n  cols: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  setIsSelectedTabDirty: PropTypes.func.isRequired,\n  handlers: PropTypes.shape({\n    handleSort: PropTypes.func.isRequired,\n    handleSearch: PropTypes.func.isRequired,\n    handleReset: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    addPolicy: PropTypes.func.isRequired,\n    removingPolicy: PropTypes.func.isRequired\n  }).isRequired,\n  resetKey: PropTypes.string\n};\nexport function ClaimsComplexityContractPolicyRefView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      setIsSelectedTabDirty = _ref.setIsSelectedTabDirty,\n      handlers = _ref.handlers,\n      resetKey = _ref.resetKey;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsComplexityContractPolicyRef'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handlers.handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\n  var cellLength = 25;\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch;\n\n  var selectedPolicies = watch();\n  var someCheckedPolicies = Object.values(selectedPolicies).some(function (value) {\n    return value;\n  });\n  useEffect(function () {\n    setIsSelectedTabDirty(someCheckedPolicies);\n  }, [someCheckedPolicies]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var fields = utils.generic.isValidArray(rows, true) && rows.map(function (field) {\n    return {\n      name: field === null || field === void 0 ? void 0 : field.xbPolicyID.toString(),\n      type: 'checkbox'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.add'),\n          \"data-testid\": \"addComplexPolicy\",\n          onClick: function onClick() {\n            return handlers.addPolicy();\n          },\n          color: \"primary\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.actionButton\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.remove'),\n          \"data-testid\": \"removeComplexPolicy\",\n          disabled: !someCheckedPolicies,\n          onClick: function onClick() {\n            return handlers.removingPolicy(selectedPolicies);\n          },\n          color: \"primary\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.actionButton\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.searchWrapper,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: utils.string.t('claims.complexityContractPolicy.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          text: \"\",\n          placeholder: \"\",\n          minChars: 4,\n          nestedClasses: {\n            root: classes.search\n          },\n          handlers: {\n            search: handlers.handleSearch,\n            reset: handlers.handleReset\n          }\n        }, resetKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: utils.string.t('claims.searchPolicy.minimumCharacters')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        ml: 2,\n        className: classes.tableWrapper,\n        children: utils.generic.isValidArray(rows, true) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"data-testid\": \"claims-table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: cols,\n                sorting: sort,\n                nestedClasses: {\n                  tableHead: classes.tableHead\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                \"data-testid\": \"claims-list\",\n                children: rows.map(function (item) {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    children: cols.map(function (col, i) {\n                      if (col.id === 'actions') {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          \"data-testid\": \"row-col-\".concat(col.id),\n                          children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, item.xbPolicyID.toString())), {}, {\n                            control: control,\n                            register: register,\n                            watch: watch\n                          }), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 118,\n                            columnNumber: 35\n                          }, _this)\n                        }, col.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 117,\n                          columnNumber: 33\n                        }, _this);\n                      }\n\n                      if (col.id === 'riskDetails') {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          \"data-testid\": \"row-col-\".concat(item[col.id]),\n                          children: item[col.id].length > cellLength ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                            block: true,\n                            title: item[col.id],\n                            children: [item[col.id].slice(0, cellLength), \"...\"]\n                          }, void 0, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 131,\n                            columnNumber: 37\n                          }, _this) : item[col.id]\n                        }, col.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 129,\n                          columnNumber: 33\n                        }, _this);\n                      }\n\n                      if (col.id === 'company') {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          \"data-testid\": \"row-col-\".concat(item[col.id]),\n                          children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                            children: item[col.id]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 143,\n                            columnNumber: 35\n                          }, _this)\n                        }, col.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 142,\n                          columnNumber: 33\n                        }, _this);\n                      } else {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          \"data-testid\": \"row-col-\".concat(item[col.id]),\n                          children: item[col.id]\n                        }, col.id, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 148,\n                          columnNumber: 33\n                        }, _this);\n                      }\n                    })\n                  }, item.xbPolicyID, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 113,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 110,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                page: get(paginationObj, 'obj.page'),\n                count: get(paginationObj, 'obj.rowsTotal'),\n                rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n                onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n                onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Empty, {\n            title: utils.string.t('claims.noMatchFound'),\n            text: utils.string.t('claims.noMatchDetails'),\n            icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 23\n            }, this),\n            padding: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsComplexityContractPolicyRefView, \"g+YuCbFSAlMm6bEJPxiYvTp7wts=\", false, function () {\n  return [useSort, usePagination, useForm];\n});\n\n_c = ClaimsComplexityContractPolicyRefView;\nClaimsComplexityContractPolicyRefView.displayName = \"ClaimsComplexityContractPolicyRefView\";\nClaimsComplexityContractPolicyRefView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexityContractPolicyRefView\",\n  \"props\": {\n    \"rows\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cols\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"setIsSelectedTabDirty\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"handleSort\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleSearch\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleReset\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleChangePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleChangeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"addPolicy\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"removingPolicy\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"resetKey\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexityContractPolicyRef\\\\ClaimsComplexityContractPolicyRef.view.js\"] = {\n    name: \"ClaimsComplexityContractPolicyRefView\",\n    docgenInfo: ClaimsComplexityContractPolicyRefView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexityContractPolicyRef\\\\ClaimsComplexityContractPolicyRef.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityContractPolicyRefView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityContractPolicyRef/ClaimsComplexityContractPolicyRef.view.js"],"names":["React","useEffect","useForm","PropTypes","get","styles","utils","Button","TableCell","Overflow","TableHead","Search","Pagination","Empty","Tooltip","FormCheckbox","usePagination","useSort","makeStyles","Grid","Table","TableRow","TableBody","Typography","Box","ClaimsComplexityContractPolicyRefView","propTypes","cols","array","isRequired","rows","sort","object","pagination","setIsSelectedTabDirty","func","handlers","shape","handleSort","handleSearch","handleReset","handleChangePage","handleChangeRowsPerPage","addPolicy","removingPolicy","resetKey","string","colsArr","sortObj","classes","name","paginationObj","cellLength","control","register","watch","selectedPolicies","someCheckedPolicies","Object","values","some","value","fields","generic","isValidArray","map","field","xbPolicyID","toString","type","t","btn","actionButton","searchWrapper","root","search","reset","tableWrapper","tableHead","item","col","i","id","form","getFieldProps","length","slice"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport styles from './ClaimsComplexityContractPolicyRef.styles';\r\nimport * as utils from 'utils';\r\nimport { Button, TableCell, Overflow, TableHead, Search, Pagination, Empty, Tooltip, FormCheckbox } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\r\n\r\nClaimsComplexityContractPolicyRefView.propTypes = {\r\n  cols: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  setIsSelectedTabDirty: PropTypes.func.isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleSort: PropTypes.func.isRequired,\r\n    handleSearch: PropTypes.func.isRequired,\r\n    handleReset: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    addPolicy: PropTypes.func.isRequired,\r\n    removingPolicy: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  resetKey: PropTypes.string,\r\n};\r\n\r\nexport function ClaimsComplexityContractPolicyRefView({\r\n  cols: colsArr,\r\n  rows = [],\r\n  sort: sortObj,\r\n  pagination,\r\n  setIsSelectedTabDirty,\r\n  handlers,\r\n  resetKey,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsComplexityContractPolicyRef' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers.handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\r\n  const cellLength = 25;\r\n\r\n  const { control, register, watch } = useForm();\r\n  const selectedPolicies = watch();\r\n  const someCheckedPolicies = Object.values(selectedPolicies).some((value) => value);\r\n\r\n  useEffect(() => {\r\n    setIsSelectedTabDirty(someCheckedPolicies);\r\n  }, [someCheckedPolicies]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fields =\r\n    utils.generic.isValidArray(rows, true) &&\r\n    rows.map((field) => ({\r\n      name: field?.xbPolicyID.toString(),\r\n      type: 'checkbox',\r\n    }));\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            text={utils.string.t('app.add')}\r\n            data-testid=\"addComplexPolicy\"\r\n            onClick={() => handlers.addPolicy()}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            nestedClasses={{ btn: classes.actionButton }}\r\n          />\r\n          <Button\r\n            text={utils.string.t('app.remove')}\r\n            data-testid=\"removeComplexPolicy\"\r\n            disabled={!someCheckedPolicies}\r\n            onClick={() => handlers.removingPolicy(selectedPolicies)}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            nestedClasses={{ btn: classes.actionButton }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.searchWrapper}>\r\n        <Box>\r\n          <Typography variant=\"h5\">{utils.string.t('claims.complexityContractPolicy.title')}</Typography>\r\n          <Search\r\n            key={resetKey}\r\n            text=\"\"\r\n            placeholder=\"\"\r\n            minChars={4}\r\n            nestedClasses={{ root: classes.search }}\r\n            handlers={{\r\n              search: handlers.handleSearch,\r\n              reset: handlers.handleReset,\r\n            }}\r\n          />\r\n          <Typography variant=\"h5\">{utils.string.t('claims.searchPolicy.minimumCharacters')}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box ml={2} className={classes.tableWrapper}>\r\n          {utils.generic.isValidArray(rows, true) ? (\r\n            <>\r\n              <Overflow>\r\n                <Table data-testid=\"claims-table\">\r\n                  <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                  <TableBody data-testid=\"claims-list\">\r\n                    {rows.map((item) => {\r\n                      return (\r\n                        <TableRow key={item.xbPolicyID} hover>\r\n                          {cols.map((col, i) => {\r\n                            if (col.id === 'actions') {\r\n                              return (\r\n                                <TableCell compact key={col.id} data-testid={`row-col-${col.id}`}>\r\n                                  <FormCheckbox\r\n                                    {...utils.form.getFieldProps(fields, item.xbPolicyID.toString())}\r\n                                    control={control}\r\n                                    register={register}\r\n                                    watch={watch}\r\n                                  />\r\n                                </TableCell>\r\n                              );\r\n                            }\r\n                            if (col.id === 'riskDetails') {\r\n                              return (\r\n                                <TableCell key={col.id} data-testid={`row-col-${item[col.id]}`}>\r\n                                  {item[col.id].length > cellLength ? (\r\n                                    <Tooltip block title={item[col.id]}>\r\n                                      {item[col.id].slice(0, cellLength)}...\r\n                                    </Tooltip>\r\n                                  ) : (\r\n                                    item[col.id]\r\n                                  )}\r\n                                </TableCell>\r\n                              );\r\n                            }\r\n                            if (col.id === 'company') {\r\n                              return (\r\n                                <TableCell key={col.id} data-testid={`row-col-${item[col.id]}`}>\r\n                                  <strong>{item[col.id]}</strong>\r\n                                </TableCell>\r\n                              );\r\n                            } else {\r\n                              return (\r\n                                <TableCell key={col.id} data-testid={`row-col-${item[col.id]}`}>\r\n                                  {item[col.id]}\r\n                                </TableCell>\r\n                              );\r\n                            }\r\n                          })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </Overflow>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Pagination\r\n                    page={get(paginationObj, 'obj.page')}\r\n                    count={get(paginationObj, 'obj.rowsTotal')}\r\n                    rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                    onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                    onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : (\r\n            <Grid item xs={12}>\r\n              <Empty\r\n                title={utils.string.t('claims.noMatchFound')}\r\n                text={utils.string.t('claims.noMatchDetails')}\r\n                icon={<IconSearchFile />}\r\n                padding\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}