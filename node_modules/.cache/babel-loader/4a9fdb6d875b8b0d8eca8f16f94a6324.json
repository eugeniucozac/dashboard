{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimDashboard\\\\ClaimDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useParams, useLocation } from 'react-router'; // app\n\nimport { ClaimDashboardView } from './ClaimDashboard.view';\nimport { Breadcrumb } from 'components';\nimport { selectClaimsTabRowSelected, showModal, hideModal, setClaimsStepperControl, selectDmsWidgetExpanded, getSelectedClaimDetails, selectFnolSelectedTab, selectLossSelected, resetDmsWidgetDocuments, selectClaimsInformation, getCaseIncidentDetails, selectRefDataNewProcessType, resetCaseIncidentDetails, selectCaseIncidentDetails, resetLossPolicyClaimData, selectBpmClaimInformation } from 'stores';\nimport { STATUS_CLAIMS_DRAFT_UPPER, STATUS_CLAIMS_GXBSYNCED, CLAIM_MAIN_PROCESS, STATUS_CLAIMS_DRAFT, RFI_ON_CLAIMS } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClaimDashboard() {\n  _s();\n\n  var _location$state,\n      _processTypes$find,\n      _useSelector,\n      _this = this,\n      _bpmClaimInfo$status;\n\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var params = useParams();\n  var pathname = history.location.pathname;\n  var isInflightClaim = location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.isInflightClaim;\n  var isFormDirtyRef = useRef(false);\n  var claimsRowSelected = useSelector(selectClaimsTabRowSelected);\n  var isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\n  var fnolSelectedTab = useSelector(selectFnolSelectedTab);\n  var lossSelected = useSelector(selectLossSelected);\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var processTypes = useSelector(selectRefDataNewProcessType);\n  var caseIncidentDetails = useSelector(selectCaseIncidentDetails);\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'claimRefDetail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      checkRedirectLocation = _useState4[0],\n      setCheckRedirectLocation = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      claimRefFromLossObj = _useState6[0],\n      setClaimRefFromLossObj = _useState6[1];\n\n  var claimSelected = claimsRowSelected === null || claimsRowSelected === void 0 ? void 0 : claimsRowSelected[0];\n  var processTypeId = processTypes === null || processTypes === void 0 ? void 0 : (_processTypes$find = processTypes.find(function (item) {\n    return item.processTypeDetails === CLAIM_MAIN_PROCESS;\n  })) === null || _processTypes$find === void 0 ? void 0 : _processTypes$find.processTypeID;\n  var bpmClaimInfo = (_useSelector = useSelector(selectBpmClaimInformation)) === null || _useSelector === void 0 ? void 0 : _useSelector.data;\n\n  var setCheckPage = function setCheckPage(val, associateClaimData, lossRef) {\n    setCheckRedirectLocation(val);\n    setClaimRefFromLossObj({\n      claimID: associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.claimID,\n      claimRef: associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.claimReference,\n      lossRef: lossRef,\n      sourceId: associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.sourceID,\n      policyId: associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.xbPolicyID\n    });\n\n    if (associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.claimReference) {\n      history.push(\"\".concat(config.routes.claimsProcessing.claim, \"/\").concat(associateClaimData === null || associateClaimData === void 0 ? void 0 : associateClaimData.claimReference));\n    }\n  };\n\n  useEffect(function () {\n    return function () {\n      dispatch(resetDmsWidgetDocuments());\n      dispatch(resetCaseIncidentDetails());\n      dispatch(resetLossPolicyClaimData());\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(function () {\n    if ((claimsRowSelected === null || claimsRowSelected === void 0 ? void 0 : claimsRowSelected.length) !== 1 || !(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimReference)) {\n      history.replace(config.routes.claimsFNOL.root);\n      return;\n    }\n\n    dispatch(getSelectedClaimDetails({\n      claimId: (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimId) || (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimID),\n      claimRefParams: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimReference,\n      sourceIdParams: (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.sourceId) || (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.sourceID),\n      divisionIDParams: (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.divisionId) || (claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.departmentID),\n      viewLoader: false\n    }));\n  }, [history, claimsRowSelected]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n\n    if (!utils.generic.isValidObject(caseIncidentDetails, 'caseIncidentID') && tabName === 'claimRefNotes') {\n      dispatch(getCaseIncidentDetails({\n        processTypeId: processTypeId,\n        referenceId: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimId,\n        viewLoader: false\n      }));\n    }\n  };\n\n  var setIsFormDirty = function setIsFormDirty(isDirty) {\n    isFormDirtyRef.current = isDirty;\n  };\n\n  var handleTabDisabled = function handleTabDisabled(claimStatus) {\n    return claimStatus === STATUS_CLAIMS_GXBSYNCED || isInflightClaim;\n  };\n\n  var confirmHideModal = function confirmHideModal(modalName) {\n    if (isFormDirtyRef.current) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('navigation.form.subtitle'),\n          hint: utils.string.t('navigation.form.title'),\n          fullWidth: true,\n          maxWidth: 'xs',\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            submitHandler: function submitHandler() {\n              dispatch(hideModal(modalName));\n            }\n          }\n        }\n      }));\n    } else {\n      dispatch(hideModal(modalName));\n    }\n  };\n\n  var handleChangeComplexityPriorityAssignmentClaim = function handleChangeComplexityPriorityAssignmentClaim(claim) {\n    dispatch(showModal({\n      component: 'CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT',\n      props: {\n        title: 'claims.processing.summary.buttons.changeComplexityPriorityAssignment',\n        fullWidth: true,\n        maxWidth: 'sm',\n        hideCompOnBlur: false,\n        componentProps: {\n          claims: [claim],\n          setIsDirty: setIsFormDirty,\n          clickXHandler: function clickXHandler() {\n            confirmHideModal('CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT');\n          },\n          cancelHandler: function cancelHandler() {\n            confirmHideModal('CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT');\n          }\n        }\n      }\n    }));\n  };\n\n  var handleCreateRFIModal = function handleCreateRFIModal(claim) {\n    var breadcrumbs = [{\n      name: 'lossRef',\n      label: utils.string.t('claims.loss.text', {\n        lossRef: claim === null || claim === void 0 ? void 0 : claim.lossRef\n      }),\n      link: pathname,\n      active: true\n    }, {\n      name: 'claimRef',\n      label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\n        claimRef: claim === null || claim === void 0 ? void 0 : claim.claimReference\n      })),\n      link: pathname,\n      active: true,\n      largeFont: true\n    }];\n\n    var TitleWBreadCrumb = function TitleWBreadCrumb() {\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n          links: breadcrumbs\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h2\",\n          style: {\n            paddingLeft: '1.2rem'\n          },\n          children: utils.string.t('claims.processing.taskFunction.createRFI')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true);\n    };\n\n    dispatch(showModal({\n      component: 'CLAIMS_CREATE_RFI_STEPPER',\n      props: {\n        titleChildren: /*#__PURE__*/_jsxDEV(TitleWBreadCrumb, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 26\n        }, _this),\n        hideCompOnBlur: false,\n        fullWidth: true,\n        maxWidth: 'lg',\n        disableAutoFocus: true,\n        componentProps: {\n          claim: claim,\n          type: RFI_ON_CLAIMS,\n          cancelHandler: function cancelHandler() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n  };\n\n  var handleCreateAdhocTask = function handleCreateAdhocTask(claim) {\n    dispatch(showModal({\n      component: 'CREATE_AD_HOC_TASK_WIZARD',\n      props: {\n        title: 'claims.processing.taskFunction.createAdhocTask',\n        fullWidth: true,\n        maxWidth: 'xl',\n        hideCompOnBlur: false,\n        componentProps: {\n          claim: claim\n        }\n      }\n    }));\n  };\n\n  var handleEditClaim = function handleEditClaim(claim) {\n    dispatch(setClaimsStepperControl(1));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        linkPolicy: {\n          isSearchTerm: '',\n          claimObj: claim\n        },\n        redirectUrl: location === null || location === void 0 ? void 0 : location.pathname\n      }\n    });\n  }; // added temporary fix will remove this after redux cleanup\n\n\n  var status = (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus) || '';\n  var popoverItems = [{\n    id: 'editClaim',\n    label: utils.string.t('claims.processing.summary.buttons.editClaim'),\n    disabled: status !== STATUS_CLAIMS_DRAFT_UPPER,\n    callback: function callback() {\n      return handleEditClaim(claimSelected);\n    }\n  }, {\n    id: 'changeComplexityPriorityAssignment',\n    label: utils.string.t('claims.processing.summary.buttons.changeComplexityPriorityAssignment'),\n    callback: function callback() {\n      return handleChangeComplexityPriorityAssignmentClaim(claimSelected);\n    }\n  }, {\n    id: 'createRFI',\n    label: utils.string.t('claims.processing.summary.buttons.createNewRFI'),\n    callback: function callback() {\n      return handleCreateRFIModal(claimSelected);\n    }\n  }, {\n    id: 'createAdhocTask',\n    label: utils.string.t('claims.claimsTab.popOverButtonItems.createAdhocTask'),\n    disabled: (bpmClaimInfo === null || bpmClaimInfo === void 0 ? void 0 : (_bpmClaimInfo$status = bpmClaimInfo.status) === null || _bpmClaimInfo$status === void 0 ? void 0 : _bpmClaimInfo$status.toLowerCase()) === (STATUS_CLAIMS_DRAFT === null || STATUS_CLAIMS_DRAFT === void 0 ? void 0 : STATUS_CLAIMS_DRAFT.toLowerCase()),\n    callback: function callback() {\n      return handleCreateAdhocTask(claimSelected);\n    }\n  }];\n  var breadcrumbs = [{\n    name: 'claimsFnol',\n    label: utils.string.t('claims.loss.title'),\n    link: \"\".concat(config.routes.claimsFNOL.root).concat(fnolSelectedTab ? \"/tab/\".concat(fnolSelectedTab) : '')\n  }, {\n    name: 'lossRef',\n    label: \"\".concat(utils.string.t('claims.loss.text', {\n      lossRef: !(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.lossRef) ? lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef : claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(!(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.lossRef) ? lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef : claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.lossRef),\n    active: true\n  }, {\n    name: 'claimRef',\n    label: \"\".concat(utils.string.t('claims.claimRef.text', {\n      claimRef: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimReference\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimReference),\n    active: true,\n    largeFont: true\n  }];\n  var tabs = [{\n    value: 'claimRefDetail',\n    disabled: false,\n    label: utils.string.t('claims.claimRef.detail')\n  }, {\n    value: 'claimRefActions',\n    disabled: handleTabDisabled(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimStatus),\n    label: utils.string.t('claims.claimRef.actions')\n  }, {\n    value: 'claimRefDocs',\n    disabled: false,\n    label: utils.string.t('claims.claimRef.docs')\n  }, {\n    value: 'claimRefNotes',\n    disabled: handleTabDisabled(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimStatus),\n    label: utils.string.t('claims.claimRef.notes')\n  }, {\n    value: 'claimRefAuditTrail',\n    disabled: handleTabDisabled(claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.claimStatus),\n    label: utils.string.t('claims.claimRef.auditTrail')\n  }]; // abort\n\n  if (!utils.generic.isValidObject(claimSelected, 'claimReference')) return null;\n  return /*#__PURE__*/_jsxDEV(ClaimDashboardView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    handleSelectTab: handleSelectTab,\n    popoverItems: popoverItems,\n    claimObj: claimSelected,\n    claimRefFromLossObj: claimRefFromLossObj,\n    breadcrumbs: breadcrumbs,\n    setCheckPage: setCheckPage,\n    checkRedirectLocation: checkRedirectLocation,\n    isDmsWidgetExpanded: isDmsWidgetExpanded,\n    isInflightClaim: isInflightClaim\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 310,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimDashboard, \"LeSOK6FDxluKCcgdCrdLcAB9KZc=\", false, function () {\n  return [useHistory, useDispatch, useLocation, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimDashboard/ClaimDashboard.js"],"names":["React","useEffect","useState","useRef","useSelector","useDispatch","useHistory","useParams","useLocation","ClaimDashboardView","Breadcrumb","selectClaimsTabRowSelected","showModal","hideModal","setClaimsStepperControl","selectDmsWidgetExpanded","getSelectedClaimDetails","selectFnolSelectedTab","selectLossSelected","resetDmsWidgetDocuments","selectClaimsInformation","getCaseIncidentDetails","selectRefDataNewProcessType","resetCaseIncidentDetails","selectCaseIncidentDetails","resetLossPolicyClaimData","selectBpmClaimInformation","STATUS_CLAIMS_DRAFT_UPPER","STATUS_CLAIMS_GXBSYNCED","CLAIM_MAIN_PROCESS","STATUS_CLAIMS_DRAFT","RFI_ON_CLAIMS","utils","config","Typography","ClaimDashboard","history","dispatch","location","params","pathname","isInflightClaim","state","isFormDirtyRef","claimsRowSelected","isDmsWidgetExpanded","fnolSelectedTab","lossSelected","claimsInformation","processTypes","caseIncidentDetails","tab","selectedTab","setSelectedTab","checkRedirectLocation","setCheckRedirectLocation","claimRefFromLossObj","setClaimRefFromLossObj","claimSelected","processTypeId","find","item","processTypeDetails","processTypeID","bpmClaimInfo","data","setCheckPage","val","associateClaimData","lossRef","claimID","claimRef","claimReference","sourceId","sourceID","policyId","xbPolicyID","push","routes","claimsProcessing","claim","length","replace","claimsFNOL","root","claimId","claimRefParams","sourceIdParams","divisionIDParams","divisionId","departmentID","viewLoader","handleSelectTab","tabName","generic","isValidObject","referenceId","setIsFormDirty","isDirty","current","handleTabDisabled","claimStatus","confirmHideModal","modalName","component","props","title","string","t","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","handleChangeComplexityPriorityAssignmentClaim","hideCompOnBlur","claims","setIsDirty","clickXHandler","cancelHandler","handleCreateRFIModal","breadcrumbs","name","label","link","active","largeFont","TitleWBreadCrumb","paddingLeft","titleChildren","disableAutoFocus","type","handleCreateAdhocTask","handleEditClaim","newLoss","linkPolicy","isSearchTerm","claimObj","redirectUrl","status","popoverItems","id","disabled","callback","toLowerCase","loss","tabs","value"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useParams, useLocation } from 'react-router';\r\n\r\n// app\r\nimport { ClaimDashboardView } from './ClaimDashboard.view';\r\nimport { Breadcrumb } from 'components';\r\nimport {\r\n  selectClaimsTabRowSelected,\r\n  showModal,\r\n  hideModal,\r\n  setClaimsStepperControl,\r\n  selectDmsWidgetExpanded,\r\n  getSelectedClaimDetails,\r\n  selectFnolSelectedTab,\r\n  selectLossSelected,\r\n  resetDmsWidgetDocuments,\r\n  selectClaimsInformation,\r\n  getCaseIncidentDetails,\r\n  selectRefDataNewProcessType,\r\n  resetCaseIncidentDetails,\r\n  selectCaseIncidentDetails,\r\n  resetLossPolicyClaimData,\r\n  selectBpmClaimInformation,\r\n} from 'stores';\r\nimport { STATUS_CLAIMS_DRAFT_UPPER, STATUS_CLAIMS_GXBSYNCED, CLAIM_MAIN_PROCESS, STATUS_CLAIMS_DRAFT, RFI_ON_CLAIMS } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n// mui\r\nimport { Typography } from '@material-ui/core';\r\n\r\nexport default function ClaimDashboard() {\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const params = useParams();\r\n  const { pathname } = history.location;\r\n\r\n  const isInflightClaim = location?.state?.isInflightClaim;\r\n  const isFormDirtyRef = useRef(false);\r\n\r\n  const claimsRowSelected = useSelector(selectClaimsTabRowSelected);\r\n  const isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\r\n  const fnolSelectedTab = useSelector(selectFnolSelectedTab);\r\n  const lossSelected = useSelector(selectLossSelected);\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const processTypes = useSelector(selectRefDataNewProcessType);\r\n  const caseIncidentDetails = useSelector(selectCaseIncidentDetails);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'claimRefDetail');\r\n  const [checkRedirectLocation, setCheckRedirectLocation] = useState(false);\r\n  const [claimRefFromLossObj, setClaimRefFromLossObj] = useState({});\r\n\r\n  const claimSelected = claimsRowSelected?.[0];\r\n\r\n  const processTypeId = processTypes?.find((item) => item.processTypeDetails === CLAIM_MAIN_PROCESS)?.processTypeID;\r\n  const bpmClaimInfo = useSelector(selectBpmClaimInformation)?.data;\r\n\r\n  const setCheckPage = (val, associateClaimData, lossRef) => {\r\n    setCheckRedirectLocation(val);\r\n    setClaimRefFromLossObj({\r\n      claimID: associateClaimData?.claimID,\r\n      claimRef: associateClaimData?.claimReference,\r\n      lossRef: lossRef,\r\n      sourceId: associateClaimData?.sourceID,\r\n      policyId: associateClaimData?.xbPolicyID,\r\n    });\r\n    if (associateClaimData?.claimReference) {\r\n      history.push(`${config.routes.claimsProcessing.claim}/${associateClaimData?.claimReference}`);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    return () => {\r\n      dispatch(resetDmsWidgetDocuments());\r\n      dispatch(resetCaseIncidentDetails());\r\n      dispatch(resetLossPolicyClaimData());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n\r\n  useEffect(() => {\r\n    if (claimsRowSelected?.length !== 1 || !claimSelected?.claimReference) {\r\n      history.replace(config.routes.claimsFNOL.root);\r\n      return;\r\n    }\r\n    dispatch(\r\n      getSelectedClaimDetails({\r\n        claimId: claimSelected?.claimId || claimSelected?.claimID,\r\n        claimRefParams: claimSelected?.claimReference,\r\n        sourceIdParams: claimSelected?.sourceId || claimSelected?.sourceID,\r\n        divisionIDParams: claimSelected?.divisionId || claimSelected?.departmentID,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n  }, [history, claimsRowSelected]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n    if (!utils.generic.isValidObject(caseIncidentDetails, 'caseIncidentID') && tabName === 'claimRefNotes') {\r\n      dispatch(getCaseIncidentDetails({ processTypeId: processTypeId, referenceId: claimSelected?.claimId, viewLoader: false }));\r\n    }\r\n  };\r\n\r\n  const setIsFormDirty = (isDirty) => {\r\n    isFormDirtyRef.current = isDirty;\r\n  };\r\n\r\n  const handleTabDisabled = (claimStatus) => {\r\n    return claimStatus === STATUS_CLAIMS_GXBSYNCED || isInflightClaim;\r\n  };\r\n\r\n  const confirmHideModal = (modalName) => {\r\n    if (isFormDirtyRef.current) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            title: utils.string.t('navigation.form.subtitle'),\r\n            hint: utils.string.t('navigation.form.title'),\r\n            fullWidth: true,\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              submitHandler: () => {\r\n                dispatch(hideModal(modalName));\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(hideModal(modalName));\r\n    }\r\n  };\r\n\r\n  const handleChangeComplexityPriorityAssignmentClaim = (claim) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT',\r\n        props: {\r\n          title: 'claims.processing.summary.buttons.changeComplexityPriorityAssignment',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          hideCompOnBlur: false,\r\n          componentProps: {\r\n            claims: [claim],\r\n            setIsDirty: setIsFormDirty,\r\n            clickXHandler: () => {\r\n              confirmHideModal('CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT');\r\n            },\r\n            cancelHandler: () => {\r\n              confirmHideModal('CHANGE_COMPLEXITY_PRIORITY_ASSIGNMENT');\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCreateRFIModal = (claim) => {\r\n    const breadcrumbs = [\r\n      {\r\n        name: 'lossRef',\r\n        label: utils.string.t('claims.loss.text', { lossRef: claim?.lossRef }),\r\n        link: pathname,\r\n        active: true,\r\n      },\r\n      {\r\n        name: 'claimRef',\r\n        label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', { claimRef: claim?.claimReference })}`,\r\n        link: pathname,\r\n        active: true,\r\n        largeFont: true,\r\n      },\r\n    ];\r\n\r\n    const TitleWBreadCrumb = () => {\r\n      return (\r\n        <>\r\n          <Breadcrumb links={breadcrumbs} />\r\n          <Typography variant=\"h2\" style={{ paddingLeft: '1.2rem' }}>\r\n            {utils.string.t('claims.processing.taskFunction.createRFI')}\r\n          </Typography>\r\n        </>\r\n      );\r\n    };\r\n    dispatch(\r\n      showModal({\r\n        component: 'CLAIMS_CREATE_RFI_STEPPER',\r\n        props: {\r\n          titleChildren: <TitleWBreadCrumb />,\r\n          hideCompOnBlur: false,\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            claim,\r\n            type: RFI_ON_CLAIMS,\r\n            cancelHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCreateAdhocTask = (claim) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CREATE_AD_HOC_TASK_WIZARD',\r\n        props: {\r\n          title: 'claims.processing.taskFunction.createAdhocTask',\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          hideCompOnBlur: false,\r\n          componentProps: {\r\n            claim: claim,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditClaim = (claim) => {\r\n    dispatch(setClaimsStepperControl(1));\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        linkPolicy: {\r\n          isSearchTerm: '',\r\n          claimObj: claim,\r\n        },\r\n        redirectUrl: location?.pathname,\r\n      },\r\n    });\r\n  };\r\n\r\n  // added temporary fix will remove this after redux cleanup\r\n  const status = claimsInformation?.claimStatus || '';\r\n\r\n  const popoverItems = [\r\n    {\r\n      id: 'editClaim',\r\n      label: utils.string.t('claims.processing.summary.buttons.editClaim'),\r\n      disabled: status !== STATUS_CLAIMS_DRAFT_UPPER,\r\n      callback: () => handleEditClaim(claimSelected),\r\n    },\r\n    {\r\n      id: 'changeComplexityPriorityAssignment',\r\n      label: utils.string.t('claims.processing.summary.buttons.changeComplexityPriorityAssignment'),\r\n      callback: () => handleChangeComplexityPriorityAssignmentClaim(claimSelected),\r\n    },\r\n    {\r\n      id: 'createRFI',\r\n      label: utils.string.t('claims.processing.summary.buttons.createNewRFI'),\r\n      callback: () => handleCreateRFIModal(claimSelected),\r\n    },\r\n    {\r\n      id: 'createAdhocTask',\r\n      label: utils.string.t('claims.claimsTab.popOverButtonItems.createAdhocTask'),\r\n      disabled: bpmClaimInfo?.status?.toLowerCase() === STATUS_CLAIMS_DRAFT?.toLowerCase(),\r\n      callback: () => handleCreateAdhocTask(claimSelected),\r\n    },\r\n  ];\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsFnol',\r\n      label: utils.string.t('claims.loss.title'),\r\n      link: `${config.routes.claimsFNOL.root}${fnolSelectedTab ? `/tab/${fnolSelectedTab}` : ''}`,\r\n    },\r\n    {\r\n      name: 'lossRef',\r\n      label: `${utils.string.t('claims.loss.text', {\r\n        lossRef: !claimSelected?.lossRef ? lossSelected?.lossRef : claimSelected?.lossRef,\r\n      })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${!claimSelected?.lossRef ? lossSelected?.lossRef : claimSelected?.lossRef}`,\r\n      active: true,\r\n    },\r\n    {\r\n      name: 'claimRef',\r\n      label: `${utils.string.t('claims.claimRef.text', {\r\n        claimRef: claimSelected?.claimReference,\r\n      })}`,\r\n      link: `${config.routes.claimsFNOL.claim}/${claimSelected?.claimReference}`,\r\n      active: true,\r\n      largeFont: true,\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'claimRefDetail', disabled: false, label: utils.string.t('claims.claimRef.detail') },\r\n    { value: 'claimRefActions', disabled: handleTabDisabled(claimSelected?.claimStatus), label: utils.string.t('claims.claimRef.actions') },\r\n    { value: 'claimRefDocs', disabled: false, label: utils.string.t('claims.claimRef.docs') },\r\n    { value: 'claimRefNotes', disabled: handleTabDisabled(claimSelected?.claimStatus), label: utils.string.t('claims.claimRef.notes') },\r\n    {\r\n      value: 'claimRefAuditTrail',\r\n      disabled: handleTabDisabled(claimSelected?.claimStatus),\r\n      label: utils.string.t('claims.claimRef.auditTrail'),\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(claimSelected, 'claimReference')) return null;\r\n\r\n  return (\r\n    <ClaimDashboardView\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      handleSelectTab={handleSelectTab}\r\n      popoverItems={popoverItems}\r\n      claimObj={claimSelected}\r\n      claimRefFromLossObj={claimRefFromLossObj}\r\n      breadcrumbs={breadcrumbs}\r\n      setCheckPage={setCheckPage}\r\n      checkRedirectLocation={checkRedirectLocation}\r\n      isDmsWidgetExpanded={isDmsWidgetExpanded}\r\n      isInflightClaim={isInflightClaim}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}