{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Documents\\\\Documents.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { DocumentsView } from './Documents.view';\nimport { showModal, downloadDocument, deleteDocument } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDocuments.propTypes = {\n  documents: PropTypes.array,\n  folders: PropTypes.array,\n  inlineComponent: PropTypes.bool,\n  showDelete: PropTypes.bool,\n  isReportingDoc: PropTypes.bool,\n  showPagination: PropTypes.bool\n};\nDocuments.defaultProps = {\n  documents: [],\n  folders: [],\n  showDelete: true,\n  isReportingDoc: false,\n  showPagination: false\n};\nexport function Documents(_ref) {\n  _s();\n\n  var documents = _ref.documents,\n      folders = _ref.folders,\n      inlineComponent = _ref.inlineComponent,\n      showDelete = _ref.showDelete,\n      isReportingDoc = _ref.isReportingDoc,\n      showPagination = _ref.showPagination;\n  var dispatch = useDispatch();\n  var cols = [{\n    id: 'folder',\n    label: utils.string.t('app.folder')\n  }, {\n    id: 'filename',\n    label: utils.string.t('app.filename')\n  }, {\n    id: 'uploadedBy',\n    label: utils.string.t('app.uploadedBy'),\n    style: {\n      display: !isReportingDoc && 'none'\n    }\n  }, {\n    id: 'uploadedDate',\n    label: utils.string.t('app.uploadedDate'),\n    style: {\n      display: !isReportingDoc && 'none'\n    }\n  }, {\n    id: 'actions',\n    empty: true\n  }];\n  var documentGroupsReporting = null;\n  var folderNames = folders.reduce(function (map, f) {\n    map[f.id] = f.label;\n    return map;\n  }, {});\n  /**\r\n   * Creates a grouping of documents by folder\r\n   *\r\n   * @example\r\n   * // returns {\"FOLDER_NAME\": { \"documents\": [{}], \"label\": \"FOLDER_NAME\" }}\r\n   *\r\n   */\n\n  if (isReportingDoc) {\n    documents.sort(function (a, b) {\n      var _b$reportGroupFolder, _a$reportGroupFolder;\n\n      return new Date((_b$reportGroupFolder = b.reportGroupFolder) === null || _b$reportGroupFolder === void 0 ? void 0 : _b$reportGroupFolder.createdAt).getTime() - new Date((_a$reportGroupFolder = a.reportGroupFolder) === null || _a$reportGroupFolder === void 0 ? void 0 : _a$reportGroupFolder.createdAt).getTime();\n    });\n  }\n\n  var documentGroups = documents.reduce(function (map, d) {\n    if (!map[d.folder]) map[d.folder] = {\n      documents: [],\n      label: folderNames[d.folder]\n    };\n    map[d.folder].documents.push(d);\n    return map;\n  }, {});\n\n  if (isReportingDoc) {\n    documentGroupsReporting = documents.reduce(function (map, d) {\n      var _d$reportGroupFolder, _d$reportGroupFolder2, _d$reportGroupFolder3;\n\n      if (!map[d === null || d === void 0 ? void 0 : (_d$reportGroupFolder = d.reportGroupFolder) === null || _d$reportGroupFolder === void 0 ? void 0 : _d$reportGroupFolder.folderName]) map[d === null || d === void 0 ? void 0 : d.reportGroupFolder.folderName] = {\n        documents: [],\n        label: d === null || d === void 0 ? void 0 : (_d$reportGroupFolder2 = d.reportGroupFolder) === null || _d$reportGroupFolder2 === void 0 ? void 0 : _d$reportGroupFolder2.folderName\n      };\n      map[(_d$reportGroupFolder3 = d.reportGroupFolder) === null || _d$reportGroupFolder3 === void 0 ? void 0 : _d$reportGroupFolder3.folderName].documents.push(d);\n\n      for (var x in map) {\n        var _map$x$documents;\n\n        if (((_map$x$documents = map[x].documents) === null || _map$x$documents === void 0 ? void 0 : _map$x$documents.length) > 1) {\n          map[x].documents.sort(function (a, b) {\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\n          });\n        }\n      }\n\n      return map;\n    }, {});\n  }\n\n  var handleDownloadDocument = function handleDownloadDocument(data) {\n    dispatch(downloadDocument(data));\n  };\n\n  var handleDeleteClick = function handleDeleteClick(data) {\n    dispatch(showModal({\n      component: 'CONFIRM_DELETE',\n      props: {\n        title: 'placement.document.delete',\n        subtitle: data.fileName,\n        fullWidth: true,\n        maxWidth: 'xs',\n        disableAutoFocus: true,\n        componentProps: {\n          submitHandler: function submitHandler() {\n            dispatch(deleteDocument(data.id));\n          }\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DocumentsView, {\n    inlineComponent: inlineComponent,\n    folders: folders,\n    handleDeleteClick: handleDeleteClick,\n    cols: cols,\n    documentGroups: isReportingDoc ? documentGroupsReporting : documentGroups,\n    handleDownloadDocument: handleDownloadDocument,\n    showDelete: showDelete,\n    isReportingDoc: isReportingDoc,\n    showPagination: showPagination\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Documents, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = Documents;\nexport default Documents;\n\nvar _c;\n\n$RefreshReg$(_c, \"Documents\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Documents/Documents.js"],"names":["React","PropTypes","useDispatch","DocumentsView","showModal","downloadDocument","deleteDocument","utils","Documents","propTypes","documents","array","folders","inlineComponent","bool","showDelete","isReportingDoc","showPagination","defaultProps","dispatch","cols","id","label","string","t","style","display","empty","documentGroupsReporting","folderNames","reduce","map","f","sort","a","b","Date","reportGroupFolder","createdAt","getTime","documentGroups","d","folder","push","folderName","x","length","handleDownloadDocument","data","handleDeleteClick","component","props","title","subtitle","fileName","fullWidth","maxWidth","disableAutoFocus","componentProps","submitHandler"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SAASC,SAAT,EAAoBC,gBAApB,EAAsCC,cAAtC,QAA4D,QAA5D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,SAAS,EAAET,SAAS,CAACU,KADD;AAEpBC,EAAAA,OAAO,EAAEX,SAAS,CAACU,KAFC;AAGpBE,EAAAA,eAAe,EAAEZ,SAAS,CAACa,IAHP;AAIpBC,EAAAA,UAAU,EAAEd,SAAS,CAACa,IAJF;AAKpBE,EAAAA,cAAc,EAAEf,SAAS,CAACa,IALN;AAMpBG,EAAAA,cAAc,EAAEhB,SAAS,CAACa;AANN,CAAtB;AASAN,SAAS,CAACU,YAAV,GAAyB;AACvBR,EAAAA,SAAS,EAAE,EADY;AAEvBE,EAAAA,OAAO,EAAE,EAFc;AAGvBG,EAAAA,UAAU,EAAE,IAHW;AAIvBC,EAAAA,cAAc,EAAE,KAJO;AAKvBC,EAAAA,cAAc,EAAE;AALO,CAAzB;AAQA,OAAO,SAAST,SAAT,OAAwG;AAAA;;AAAA,MAAnFE,SAAmF,QAAnFA,SAAmF;AAAA,MAAxEE,OAAwE,QAAxEA,OAAwE;AAAA,MAA/DC,eAA+D,QAA/DA,eAA+D;AAAA,MAA9CE,UAA8C,QAA9CA,UAA8C;AAAA,MAAlCC,cAAkC,QAAlCA,cAAkC;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;AAC7G,MAAME,QAAQ,GAAGjB,WAAW,EAA5B;AACA,MAAMkB,IAAI,GAAG,CACX;AAAEC,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,YAAf;AAAvB,GADW,EAEX;AAAEH,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,cAAf;AAAzB,GAFW,EAGX;AAAEH,IAAAA,EAAE,EAAE,YAAN;AAAoBC,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,gBAAf,CAA3B;AAA6DC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAACV,cAAD,IAAmB;AAA9B;AAApE,GAHW,EAIX;AAAEK,IAAAA,EAAE,EAAE,cAAN;AAAsBC,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,kBAAf,CAA7B;AAAiEC,IAAAA,KAAK,EAAE;AAAEC,MAAAA,OAAO,EAAE,CAACV,cAAD,IAAmB;AAA9B;AAAxE,GAJW,EAKX;AAAEK,IAAAA,EAAE,EAAE,SAAN;AAAiBM,IAAAA,KAAK,EAAE;AAAxB,GALW,CAAb;AAOA,MAAIC,uBAAuB,GAAG,IAA9B;AAEA,MAAIC,WAAW,GAAGjB,OAAO,CAACkB,MAAR,CAAe,UAACC,GAAD,EAAMC,CAAN,EAAY;AAC3CD,IAAAA,GAAG,CAACC,CAAC,CAACX,EAAH,CAAH,GAAYW,CAAC,CAACV,KAAd;AACA,WAAOS,GAAP;AACD,GAHiB,EAGf,EAHe,CAAlB;AAKA;AACF;AACA;AACA;AACA;AACA;AACA;;AAEE,MAAIf,cAAJ,EAAoB;AAClBN,IAAAA,SAAS,CAACuB,IAAV,CAAe,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAAA;;AACvB,aAAO,IAAIC,IAAJ,yBAASD,CAAC,CAACE,iBAAX,yDAAS,qBAAqBC,SAA9B,EAAyCC,OAAzC,KAAqD,IAAIH,IAAJ,yBAASF,CAAC,CAACG,iBAAX,yDAAS,qBAAqBC,SAA9B,EAAyCC,OAAzC,EAA5D;AACD,KAFD;AAGD;;AACD,MAAIC,cAAc,GAAG9B,SAAS,CAACoB,MAAV,CAAiB,UAACC,GAAD,EAAMU,CAAN,EAAY;AAChD,QAAI,CAACV,GAAG,CAACU,CAAC,CAACC,MAAH,CAAR,EAAoBX,GAAG,CAACU,CAAC,CAACC,MAAH,CAAH,GAAgB;AAAEhC,MAAAA,SAAS,EAAE,EAAb;AAAiBY,MAAAA,KAAK,EAAEO,WAAW,CAACY,CAAC,CAACC,MAAH;AAAnC,KAAhB;AACpBX,IAAAA,GAAG,CAACU,CAAC,CAACC,MAAH,CAAH,CAAchC,SAAd,CAAwBiC,IAAxB,CAA6BF,CAA7B;AACA,WAAOV,GAAP;AACD,GAJoB,EAIlB,EAJkB,CAArB;;AAMA,MAAIf,cAAJ,EAAoB;AAClBY,IAAAA,uBAAuB,GAAGlB,SAAS,CAACoB,MAAV,CAAiB,UAACC,GAAD,EAAMU,CAAN,EAAY;AAAA;;AACrD,UAAI,CAACV,GAAG,CAACU,CAAD,aAACA,CAAD,+CAACA,CAAC,CAAEJ,iBAAJ,yDAAC,qBAAsBO,UAAvB,CAAR,EACEb,GAAG,CAACU,CAAD,aAACA,CAAD,uBAACA,CAAC,CAAEJ,iBAAH,CAAqBO,UAAtB,CAAH,GAAuC;AAAElC,QAAAA,SAAS,EAAE,EAAb;AAAiBY,QAAAA,KAAK,EAAEmB,CAAF,aAAEA,CAAF,gDAAEA,CAAC,CAAEJ,iBAAL,0DAAE,sBAAsBO;AAA9C,OAAvC;AACFb,MAAAA,GAAG,0BAACU,CAAC,CAACJ,iBAAH,0DAAC,sBAAqBO,UAAtB,CAAH,CAAqClC,SAArC,CAA+CiC,IAA/C,CAAoDF,CAApD;;AACA,WAAK,IAAII,CAAT,IAAcd,GAAd,EAAmB;AAAA;;AACjB,YAAI,qBAAAA,GAAG,CAACc,CAAD,CAAH,CAAOnC,SAAP,sEAAkBoC,MAAlB,IAA2B,CAA/B,EAAkC;AAChCf,UAAAA,GAAG,CAACc,CAAD,CAAH,CAAOnC,SAAP,CAAiBuB,IAAjB,CAAsB,UAACC,CAAD,EAAIC,CAAJ,EAAU;AAC9B,mBAAO,IAAIC,IAAJ,CAASD,CAAC,CAACG,SAAX,EAAsBC,OAAtB,KAAkC,IAAIH,IAAJ,CAASF,CAAC,CAACI,SAAX,EAAsBC,OAAtB,EAAzC;AACD,WAFD;AAGD;AACF;;AACD,aAAOR,GAAP;AACD,KAZyB,EAYvB,EAZuB,CAA1B;AAaD;;AAED,MAAMgB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAU;AACvC7B,IAAAA,QAAQ,CAACd,gBAAgB,CAAC2C,IAAD,CAAjB,CAAR;AACD,GAFD;;AAIA,MAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACD,IAAD,EAAU;AAClC7B,IAAAA,QAAQ,CACNf,SAAS,CAAC;AACR8C,MAAAA,SAAS,EAAE,gBADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,2BADF;AAELC,QAAAA,QAAQ,EAAEL,IAAI,CAACM,QAFV;AAGLC,QAAAA,SAAS,EAAE,IAHN;AAILC,QAAAA,QAAQ,EAAE,IAJL;AAKLC,QAAAA,gBAAgB,EAAE,IALb;AAMLC,QAAAA,cAAc,EAAE;AACdC,UAAAA,aAAa,EAAE,yBAAM;AACnBxC,YAAAA,QAAQ,CAACb,cAAc,CAAC0C,IAAI,CAAC3B,EAAN,CAAf,CAAR;AACD;AAHa;AANX;AAFC,KAAD,CADH,CAAR;AAiBD,GAlBD;;AAoBA,sBACE,QAAC,aAAD;AACE,IAAA,eAAe,EAAER,eADnB;AAEE,IAAA,OAAO,EAAED,OAFX;AAGE,IAAA,iBAAiB,EAAEqC,iBAHrB;AAIE,IAAA,IAAI,EAAE7B,IAJR;AAKE,IAAA,cAAc,EAAEJ,cAAc,GAAGY,uBAAH,GAA6BY,cAL7D;AAME,IAAA,sBAAsB,EAAEO,sBAN1B;AAOE,IAAA,UAAU,EAAEhC,UAPd;AAQE,IAAA,cAAc,EAAEC,cARlB;AASE,IAAA,cAAc,EAAEC;AATlB;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAxFeT,S;UACGN,W;;;KADHM,S;AA0FhB,eAAeA,SAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { DocumentsView } from './Documents.view';\r\nimport { showModal, downloadDocument, deleteDocument } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nDocuments.propTypes = {\r\n  documents: PropTypes.array,\r\n  folders: PropTypes.array,\r\n  inlineComponent: PropTypes.bool,\r\n  showDelete: PropTypes.bool,\r\n  isReportingDoc: PropTypes.bool,\r\n  showPagination: PropTypes.bool,\r\n};\r\n\r\nDocuments.defaultProps = {\r\n  documents: [],\r\n  folders: [],\r\n  showDelete: true,\r\n  isReportingDoc: false,\r\n  showPagination: false,\r\n};\r\n\r\nexport function Documents({ documents, folders, inlineComponent, showDelete, isReportingDoc, showPagination }) {\r\n  const dispatch = useDispatch();\r\n  const cols = [\r\n    { id: 'folder', label: utils.string.t('app.folder') },\r\n    { id: 'filename', label: utils.string.t('app.filename') },\r\n    { id: 'uploadedBy', label: utils.string.t('app.uploadedBy'), style: { display: !isReportingDoc && 'none' } },\r\n    { id: 'uploadedDate', label: utils.string.t('app.uploadedDate'), style: { display: !isReportingDoc && 'none' } },\r\n    { id: 'actions', empty: true },\r\n  ];\r\n  let documentGroupsReporting = null;\r\n\r\n  let folderNames = folders.reduce((map, f) => {\r\n    map[f.id] = f.label;\r\n    return map;\r\n  }, {});\r\n\r\n  /**\r\n   * Creates a grouping of documents by folder\r\n   *\r\n   * @example\r\n   * // returns {\"FOLDER_NAME\": { \"documents\": [{}], \"label\": \"FOLDER_NAME\" }}\r\n   *\r\n   */\r\n\r\n  if (isReportingDoc) {\r\n    documents.sort((a, b) => {\r\n      return new Date(b.reportGroupFolder?.createdAt).getTime() - new Date(a.reportGroupFolder?.createdAt).getTime();\r\n    });\r\n  }\r\n  let documentGroups = documents.reduce((map, d) => {\r\n    if (!map[d.folder]) map[d.folder] = { documents: [], label: folderNames[d.folder] };\r\n    map[d.folder].documents.push(d);\r\n    return map;\r\n  }, {});\r\n\r\n  if (isReportingDoc) {\r\n    documentGroupsReporting = documents.reduce((map, d) => {\r\n      if (!map[d?.reportGroupFolder?.folderName])\r\n        map[d?.reportGroupFolder.folderName] = { documents: [], label: d?.reportGroupFolder?.folderName };\r\n      map[d.reportGroupFolder?.folderName].documents.push(d);\r\n      for (let x in map) {\r\n        if (map[x].documents?.length > 1) {\r\n          map[x].documents.sort((a, b) => {\r\n            return new Date(b.createdAt).getTime() - new Date(a.createdAt).getTime();\r\n          });\r\n        }\r\n      }\r\n      return map;\r\n    }, {});\r\n  }\r\n\r\n  const handleDownloadDocument = (data) => {\r\n    dispatch(downloadDocument(data));\r\n  };\r\n\r\n  const handleDeleteClick = (data) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM_DELETE',\r\n        props: {\r\n          title: 'placement.document.delete',\r\n          subtitle: data.fileName,\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            submitHandler: () => {\r\n              dispatch(deleteDocument(data.id));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <DocumentsView\r\n      inlineComponent={inlineComponent}\r\n      folders={folders}\r\n      handleDeleteClick={handleDeleteClick}\r\n      cols={cols}\r\n      documentGroups={isReportingDoc ? documentGroupsReporting : documentGroups}\r\n      handleDownloadDocument={handleDownloadDocument}\r\n      showDelete={showDelete}\r\n      isReportingDoc={isReportingDoc}\r\n      showPagination={showPagination}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Documents;\r\n"]},"metadata":{},"sourceType":"module"}