{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditClientOffice\\\\AddEditClientOffice.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './AddEditClientOffice.styles';\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormText, FormAutocomplete } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditClientOfficeView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  getAccountOptions: PropTypes.func\n};\nexport function AddEditClientOfficeView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      getAccountOptions = _ref.getAccountOptions;\n  var classes = makeStyles(styles, {\n    name: 'AddEditClientOffice'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      \"data-testid\": \"form-addClientOffice\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'parent')), {}, {\n              control: control,\n              error: errors.parent,\n              handleUpdate: function handleUpdate(id, value) {\n                getAccountOptions(value);\n                setValue(id, value);\n                setValue('clients', []);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'clients')), {}, {\n              error: errors.clients,\n              control: control,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'name')), {}, {\n              control: control,\n              error: errors.name\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          onClick: onCancel,\n          disabled: formState.isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 44,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditClientOfficeView, \"F/gfmVsoEp5MgnkoGPGMtLAfyPE=\", false, function () {\n  return [useForm];\n});\n\n_c = AddEditClientOfficeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditClientOfficeView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditClientOffice/AddEditClientOffice.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormContainer","FormFields","FormActions","FormGrid","FormText","FormAutocomplete","utils","makeStyles","AddEditClientOfficeView","propTypes","fields","array","actions","getAccountOptions","func","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","setValue","cancel","find","action","submit","onCancel","generic","isFunction","handler","onSubmit","data","root","getFieldProps","parent","id","value","clients","label","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './AddEditClientOffice.styles';\r\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormText, FormAutocomplete } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nAddEditClientOfficeView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  getAccountOptions: PropTypes.func,\r\n};\r\n\r\nexport function AddEditClientOfficeView({ fields, actions, getAccountOptions }) {\r\n  const classes = makeStyles(styles, { name: 'AddEditClientOffice' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} data-testid=\"form-addClientOffice\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'parent')}\r\n                control={control}\r\n                error={errors.parent}\r\n                handleUpdate={(id, value) => {\r\n                  getAccountOptions(value);\r\n                  setValue(id, value);\r\n                  setValue('clients', []);\r\n                }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'clients')}\r\n                error={errors.clients}\r\n                control={control}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value);\r\n                }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'name')} control={control} error={errors.name} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" onClick={onCancel} disabled={formState.isSubmitting} />}\r\n          {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" />}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}