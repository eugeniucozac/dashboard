{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsPreviewDashboard\\\\ClaimsPreviewDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\nimport { selectClaimsInformation, selectLossId, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectCatCodes, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections, setClaimData, setClaimsStepperControl, getCatCodes } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClaimsPreviewDashboard(props) {\n  _s();\n\n  var _get, _useSelector, _catCodes$find, _policySections$find, _interests$find, _useState3;\n\n  var claimData = props.claimDataFromRef;\n  var claimId = (_get = get(claimData, 'claimID')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var catCodes = useSelector(selectCatCodes);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.id) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? 'Our Share' : '100%',\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  useEffect(function () {\n    if (claimData) {\n      dispatch(getLossInformation({\n        lossDetailsId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n        sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        divisionIdParam: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n        claimRefParam: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        viewLoader: false\n      }));\n      dispatch(getClaimsPreviewInformation({\n        claimId: claimId,\n        claimRefParams: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        divisionIDParams: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID),\n        viewLoader: false\n      }));\n      dispatch(getPolicyInformation({\n        viewLoader: false\n      }));\n      dispatch(getPolicySections({\n        viewLoader: false\n      }));\n      dispatch(getCatCodes());\n    }\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleEditClaim = function handleEditClaim() {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(setClaimData({\n                  lossId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n                  claimId: claimId,\n                  policyRef: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  policyNumber: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  xbInstanceID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbInstanceID,\n                  xbPolicyID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbPolicyID,\n                  divisionID: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n                  sourceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n                  claimReference: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference\n                }));\n                _context.next = 3;\n                return dispatch(setClaimsStepperControl(1));\n\n              case 3:\n                _context.next = 5;\n                return history.push(config.routes.claimsFNOL.newLoss);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.claimInformation.location') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.complexityBasis') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No'\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA'\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.referral') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }, {\n    title: utils.string.t('claims.claimInformation.workflowStatus') + '*',\n    value: claimData === null || claimData === void 0 ? void 0 : claimData.workflowStatus\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStage'),\n    value: claimData === null || claimData === void 0 ? void 0 : claimData.stage\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n\n  var _useState = useState((_useState3 = {}, _defineProperty(_useState3, utils.string.t('claims.lossInformation.title'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.policyTitle'), true), _defineProperty(_useState3, utils.string.t('claims.underWritingGroups.title'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.title'), true), _useState3)),\n      _useState2 = _slicedToArray(_useState, 2),\n      accordionsExpandStatus = _useState2[0],\n      setAccordiansStatus = _useState2[1];\n\n  var setAccordiansIsExpanded = function setAccordiansIsExpanded(cardName, isExpand) {\n    var accordionsStatus = _objectSpread({}, accordionsExpandStatus);\n\n    accordionsStatus[cardName] = isExpand;\n    setAccordiansStatus(accordionsStatus);\n  };\n\n  var detailsCard = [{\n    title: utils.string.t('claims.claimInformation.title'),\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\n    },\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\n    data: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isClaimInfoLoading\n      });\n    })\n  }, {\n    title: utils.string.t('claims.claimInformation.policyTitle'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\n    },\n    data: policyInfo\n  }, {\n    title: utils.string.t('claims.underWritingGroups.title'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.title')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.title'), isExpanded);\n    },\n    data: underWritingInfo\n  }, {\n    title: utils.string.t('claims.lossInformation.title'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\n    },\n    data: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ClaimsPreviewDashboardView, _objectSpread(_objectSpread({}, props), {}, {\n      detailsCard: detailsCard,\n      handleEditClaim: handleEditClaim,\n      claimsInformation: claimsInformation,\n      underWritingGroupColumns: underWritingGroupColumns\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 372,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsPreviewDashboard, \"A0urQMW1wLX0rTn0NgeGf7twpHM=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = ClaimsPreviewDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsPreviewDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsPreviewDashboard/ClaimsPreviewDashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","get","moment","utils","ClaimsPreviewDashboardView","selectClaimsInformation","selectLossId","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectCatCodes","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","setClaimData","setClaimsStepperControl","getCatCodes","config","constants","ClaimsPreviewDashboard","props","claimData","claimDataFromRef","claimId","claimsInformation","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","catCodes","catCode","find","item","Number","id","catCodesID","description","policySections","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","origCurrencies","state","countriesList","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","toString","name","dispatch","history","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","lossDetailsId","lossDetailID","sourceIdParams","sourceId","divisionIdParam","divisionID","claimRefParam","claimReference","viewLoader","claimRefParams","divisionIDParams","departmentID","handleEditClaim","fetchData","lossId","policyRef","policyNumber","xbInstanceID","xbPolicyID","sourceID","push","routes","claimsFNOL","newLoss","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","firstContactDate","slashNumericDateAndTime","lossName","lossDescription","assignedToName","claimInfo","claimReceivedDate","claimantName","lossQualifierName","lossFromDate","lossToDate","location","fgunarrative","beAdjusterID","complexity","bordereauClaim","bordereauPeriod","adjusterName","nonBEAdjusterName","referralValue","claimStatus","workflowStatus","adjusterReference","referralResponseDescription","priorityDescription","stage","policyInfo","statusCode","policyNote","inceptionDate","expiryDate","client","insured","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","reInsured","company","division","originalCurrency","settlementCurrencyCode","policyInterestID","settlementCountry","underWritingGroupColumns","label","accordionsExpandStatus","setAccordiansStatus","setAccordiansIsExpanded","cardName","isExpand","accordionsStatus","detailsCard","handleExpanded","isExpanded","data","map","info"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from 'utils';\r\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\r\nimport {\r\n  selectClaimsInformation,\r\n  selectLossId,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectCatCodes,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections,\r\n  setClaimData,\r\n  setClaimsStepperControl,\r\n  getCatCodes,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ClaimsPreviewDashboard(props) {\r\n  const claimData = props.claimDataFromRef;\r\n  const claimId = get(claimData, 'claimID') ?? '';\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const catCode = catCodes.find((item) => Number(item.id) === lossInformation.catCodesID)?.description;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder ? 'Our Share' : '100%',\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(\r\n      (currency) => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase()\r\n    )?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`;\r\n  };\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find((country) => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName;\r\n    return countryName;\r\n  };\r\n  useEffect(() => {\r\n    if (claimData) {\r\n      dispatch(\r\n        getLossInformation({\r\n          lossDetailsId: claimData?.lossDetailID,\r\n          sourceIdParams: claimData?.sourceId,\r\n          divisionIdParam: claimData?.divisionID,\r\n          claimRefParam: claimData?.claimReference,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(\r\n        getClaimsPreviewInformation({\r\n          claimId: claimId,\r\n          claimRefParams: claimData?.claimReference,\r\n          sourceIdParams: claimData?.sourceId,\r\n          divisionIDParams: claimData?.divisionID || claimData?.departmentID,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(getPolicyInformation({ viewLoader: false }));\r\n      dispatch(getPolicySections({ viewLoader: false }));\r\n      dispatch(getCatCodes());\r\n    }\r\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleEditClaim = () => {\r\n    async function fetchData() {\r\n      dispatch(\r\n        setClaimData({\r\n          lossId: claimData?.lossDetailID,\r\n          claimId: claimId,\r\n          policyRef: policyInformation?.policyRef,\r\n          policyNumber: policyInformation?.policyRef,\r\n          xbInstanceID: policyInformation?.xbInstanceID,\r\n          xbPolicyID: policyInformation?.xbPolicyID,\r\n          divisionID: claimData?.divisionID,\r\n          sourceID: claimData?.sourceID,\r\n          claimReference: claimData?.claimReference,\r\n        })\r\n      );\r\n      await dispatch(setClaimsStepperControl(1));\r\n      await history.push(config.routes.claimsFNOL.newLoss);\r\n    }\r\n    fetchData();\r\n  };\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        lossInformation?.firstContactDate &&\r\n        moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.assignedToName },\r\n  ];\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value:\r\n        claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.location') + '*', value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.complexityBasis') + '*', value: claimsInformation?.complexity },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim') + '*',\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*',\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.referral') + '*', value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus') + '*', value: claimsInformation?.claimStatus },\r\n    { title: utils.string.t('claims.claimInformation.workflowStatus') + '*', value: claimData?.workflowStatus },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse') + '*', value: claimsInformation?.referralResponseDescription },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    { title: utils.string.t('claims.claimInformation.claimStage'), value: claimData?.stage },\r\n  ];\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value:\r\n        policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n          moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n          moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  const [accordionsExpandStatus, setAccordiansStatus] = useState({\r\n    [utils.string.t('claims.lossInformation.title')]: true,\r\n    [utils.string.t('claims.claimInformation.policyTitle')]: true,\r\n    [utils.string.t('claims.underWritingGroups.title')]: true,\r\n    [utils.string.t('claims.claimInformation.title')]: true,\r\n  });\r\n  const setAccordiansIsExpanded = (cardName, isExpand) => {\r\n    const accordionsStatus = { ...accordionsExpandStatus };\r\n    accordionsStatus[cardName] = isExpand;\r\n    setAccordiansStatus(accordionsStatus);\r\n  };\r\n  const detailsCard = [\r\n    {\r\n      title: utils.string.t('claims.claimInformation.title'),\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\r\n      },\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\r\n      data: claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isClaimInfoLoading,\r\n      })),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.policyTitle'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\r\n      },\r\n      data: policyInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.underWritingGroups.title'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.title')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.title'), isExpanded);\r\n      },\r\n      data: underWritingInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.title'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\r\n      },\r\n      data: lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      })),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ClaimsPreviewDashboardView\r\n        {...props}\r\n        detailsCard={detailsCard}\r\n        handleEditClaim={handleEditClaim}\r\n        claimsInformation={claimsInformation}\r\n        underWritingGroupColumns={underWritingGroupColumns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}