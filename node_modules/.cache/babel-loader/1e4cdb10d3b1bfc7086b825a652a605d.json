{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddMarket\\\\AddMarket.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, Controller } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './AddMarket.styles';\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormLegend, FormDate, FormAutocomplete, FormCheckbox, FormSelect, FormText, Translate } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Collapse, Grid } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddMarketView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  setNonPFMarket: PropTypes.func.isRequired,\n  nonPFMarket: PropTypes.object\n};\nexport function AddMarketView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      isQuoteVisible = _ref.isQuoteVisible,\n      handleShowQuote = _ref.handleShowQuote,\n      handleUpdateUnderwriters = _ref.handleUpdateUnderwriters,\n      setNonPFMarket = _ref.setNonPFMarket,\n      nonPFMarket = _ref.nonPFMarket;\n  var classes = makeStyles(styles, {\n    name: 'AddMarket'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue,\n      trigger = _useForm.trigger,\n      formState = _useForm.formState;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      \"data-testid\": \"form-addMarket\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"placement.generic.market\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 29\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'market')), {}, {\n          control: control,\n          error: errors.market,\n          handleUpdate: function handleUpdate(id, value) {\n            var isNew = value[0] && value[0].__isNew__;\n            var market = isNew ? [_objectSpread(_objectSpread({}, value[0]), {}, {\n              edgeName: value[0].label,\n              name: value[0].label\n            })] : value;\n            setValue(id, market);\n            setNonPFMarket(isNew ? market[0] : undefined); // reset the underwriter dropdown field\n            // populate underwriters field with the array from selected market\n\n            setValue('underwriter', []);\n            handleUpdateUnderwriters(value[0]);\n            trigger(id);\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this), nonPFMarket && /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'capacityTypeId')), {}, {\n          control: control,\n          error: errors.capacityTypeId,\n          hint: utils.string.t('placement.form.capacityType.hint', {\n            market: nonPFMarket.name\n          })\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 85,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'underwriter')), {}, {\n          control: control,\n          error: errors.underwriter,\n          handleUpdate: function handleUpdate(id, value) {\n            setValue(id, value);\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          name: \"policy\",\n          render: function render(props) {\n            return /*#__PURE__*/_jsxDEV(\"input\", _objectSpread(_objectSpread({}, props), utils.form.getFieldProps(fields, 'policy')), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 32\n            }, _this);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: !isQuoteVisible,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"placement.sheet.addQuote\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 112,\n                  columnNumber: 25\n                }, this),\n                icon: AddIcon,\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: function onClick() {\n                  return handleShowQuote(true);\n                },\n                disabled: formState.isSubmitting,\n                nestedClasses: {\n                  btn: classes.addQuote\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 111,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isQuoteVisible,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"placement.generic.quote\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 31\n            }, this),\n            nestedClasses: {\n              root: classes.quoteLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isQuoteVisible,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'status')), {}, {\n                control: control,\n                error: errors.status\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              style: {\n                paddingTop: 24\n              },\n              children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'quoteOptions')), {}, {\n                control: control,\n                register: register,\n                watch: watch,\n                error: errors.quoteOptions\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'currency')), {}, {\n                control: control,\n                error: errors.currency\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'premium')), {}, {\n                control: control,\n                error: errors.premium\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'writtenLinePercentage')), {}, {\n                control: control,\n                error: errors.writtenLinePercentage\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'subjectivities')), {}, {\n            control: control,\n            error: errors.subjectivities\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            nestedClasses: {\n              root: classes.dateFields\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'quoteDate')), {}, {\n                control: control,\n                error: errors.quoteDate\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'validUntilDate')), {}, {\n                control: control,\n                error: errors.validUntilDate\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 167,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: !isQuoteVisible,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            style: {\n              height: 150\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          onClick: onCancel,\n          disabled: formState.isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 179,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddMarketView, \"Mh7tRWj3veEwb3JmBxJpVtoP/Dk=\", false, function () {\n  return [useForm];\n});\n\n_c = AddMarketView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddMarketView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddMarket/AddMarket.view.js"],"names":["React","PropTypes","useForm","Controller","yupResolver","styles","Button","FormContainer","FormFields","FormActions","FormGrid","FormLegend","FormDate","FormAutocomplete","FormCheckbox","FormSelect","FormText","Translate","utils","makeStyles","Box","Collapse","Grid","AddIcon","AddMarketView","propTypes","fields","array","actions","setNonPFMarket","func","isRequired","nonPFMarket","object","isQuoteVisible","handleShowQuote","handleUpdateUnderwriters","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","register","watch","reset","errors","handleSubmit","setValue","trigger","formState","cancel","find","action","submit","onCancel","generic","isFunction","handler","onSubmit","data","root","getFieldProps","market","id","value","isNew","__isNew__","edgeName","label","undefined","capacityTypeId","string","t","underwriter","props","isSubmitting","btn","addQuote","quoteLegend","status","paddingTop","quoteOptions","currency","premium","writtenLinePercentage","subjectivities","dateFields","quoteDate","validUntilDate","height"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './AddMarket.styles';\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormFields,\r\n  FormActions,\r\n  FormGrid,\r\n  FormLegend,\r\n  FormDate,\r\n  FormAutocomplete,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  FormText,\r\n  Translate,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Collapse, Grid } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nAddMarketView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  setNonPFMarket: PropTypes.func.isRequired,\r\n  nonPFMarket: PropTypes.object,\r\n};\r\n\r\nexport function AddMarketView({ fields, actions, isQuoteVisible, handleShowQuote, handleUpdateUnderwriters, setNonPFMarket, nonPFMarket }) {\r\n  const classes = makeStyles(styles, { name: 'AddMarket' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, register, watch, reset, errors, handleSubmit, setValue, trigger, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} data-testid=\"form-addMarket\">\r\n        <FormFields type=\"dialog\">\r\n          <FormLegend text={<Translate label=\"placement.generic.market\" />} />\r\n\r\n          <FormAutocomplete\r\n            {...utils.form.getFieldProps(fields, 'market')}\r\n            control={control}\r\n            error={errors.market}\r\n            handleUpdate={(id, value) => {\r\n              const isNew = value[0] && value[0].__isNew__;\r\n              const market = isNew ? [{ ...value[0], edgeName: value[0].label, name: value[0].label }] : value;\r\n              setValue(id, market);\r\n\r\n              setNonPFMarket(isNew ? market[0] : undefined);\r\n\r\n              // reset the underwriter dropdown field\r\n              // populate underwriters field with the array from selected market\r\n              setValue('underwriter', []);\r\n              handleUpdateUnderwriters(value[0]);\r\n\r\n              trigger(id);\r\n            }}\r\n          />\r\n\r\n          {nonPFMarket && (\r\n            <FormSelect\r\n              {...utils.form.getFieldProps(fields, 'capacityTypeId')}\r\n              control={control}\r\n              error={errors.capacityTypeId}\r\n              hint={utils.string.t('placement.form.capacityType.hint', { market: nonPFMarket.name })}\r\n            />\r\n          )}\r\n\r\n          <FormAutocomplete\r\n            {...utils.form.getFieldProps(fields, 'underwriter')}\r\n            control={control}\r\n            error={errors.underwriter}\r\n            handleUpdate={(id, value) => {\r\n              setValue(id, value);\r\n            }}\r\n          />\r\n\r\n          <Controller\r\n            control={control}\r\n            name=\"policy\"\r\n            render={(props) => <input {...props} {...utils.form.getFieldProps(fields, 'policy')} />}\r\n          />\r\n\r\n          <Collapse in={!isQuoteVisible}>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  text={<Translate label=\"placement.sheet.addQuote\" />}\r\n                  icon={AddIcon}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => handleShowQuote(true)}\r\n                  disabled={formState.isSubmitting}\r\n                  nestedClasses={{ btn: classes.addQuote }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n\r\n          <Collapse in={isQuoteVisible}>\r\n            <FormLegend text={<Translate label=\"placement.generic.quote\" />} nestedClasses={{ root: classes.quoteLegend }} />\r\n          </Collapse>\r\n\r\n          <Collapse in={isQuoteVisible}>\r\n            <FormGrid container>\r\n              <FormGrid item xs={6}>\r\n                <FormSelect {...utils.form.getFieldProps(fields, 'status')} control={control} error={errors.status} />\r\n              </FormGrid>\r\n              <FormGrid item xs={6} style={{ paddingTop: 24 }}>\r\n                <FormCheckbox\r\n                  {...utils.form.getFieldProps(fields, 'quoteOptions')}\r\n                  control={control}\r\n                  register={register}\r\n                  watch={watch}\r\n                  error={errors.quoteOptions}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n\r\n            <FormGrid container>\r\n              <FormGrid item xs={3}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'currency')} control={control} error={errors.currency} />\r\n              </FormGrid>\r\n              <FormGrid item xs={6}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'premium')} control={control} error={errors.premium} />\r\n              </FormGrid>\r\n              <FormGrid item xs={3}>\r\n                <FormText\r\n                  {...utils.form.getFieldProps(fields, 'writtenLinePercentage')}\r\n                  control={control}\r\n                  error={errors.writtenLinePercentage}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n\r\n            <FormText {...utils.form.getFieldProps(fields, 'subjectivities')} control={control} error={errors.subjectivities} />\r\n\r\n            <FormGrid container nestedClasses={{ root: classes.dateFields }}>\r\n              <FormGrid item xs={6}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'quoteDate')} control={control} error={errors.quoteDate} />\r\n              </FormGrid>\r\n              <FormGrid item xs={6}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'validUntilDate')} control={control} error={errors.validUntilDate} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </Collapse>\r\n\r\n          <Collapse in={!isQuoteVisible}>\r\n            <Box style={{ height: 150 }} />\r\n          </Collapse>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" onClick={onCancel} disabled={formState.isSubmitting} />}\r\n          {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" />}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}