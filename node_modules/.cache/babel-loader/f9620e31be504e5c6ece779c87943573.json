{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useLayoutEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { postEditClaimDetailsInformation, linkLossDocuments } from 'stores';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts'; // mui\n\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  lossQualifiers: PropTypes.object,\n  resetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool.isRequired,\n  claimsDocsList: PropTypes.array,\n  parentLossRef: PropTypes.string,\n  savedClaimInfo: PropTypes.object\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _watch, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      claimsDocsList = _ref.claimsDocsList,\n      claimRefId = _ref.claimRefId,\n      claimData = _ref.claimData,\n      policyInformation = _ref.policyInformation,\n      complexityValues = _ref.complexityValues,\n      index = _ref.index,\n      handleNext = _ref.handleNext,\n      handleSave = _ref.handleSave,\n      _handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      isBordereauChecked = _ref.isBordereauChecked,\n      lossQualifiers = _ref.lossQualifiers,\n      handleFormStatus = _ref.handleFormStatus,\n      lossInformation = _ref.lossInformation,\n      parentLossRef = _ref.parentLossRef,\n      savedClaimInfo = _ref.savedClaimInfo;\n  var classes = makeStyles(styles, {\n    name: 'RegisterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n  var claimCardRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refResponseDisable = _useState4[0],\n      setRefResponseDisable = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refValuesDisable = _useState6[0],\n      setRefValueDisable = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      isDirty = _useForm.formState.isDirty;\n\n  var lossQualifierID = (_watch = watch('lossQualifierID')) === null || _watch === void 0 ? void 0 : _watch.id;\n  var complexValues = watch('complexity');\n  var refValues = watch('referral');\n  var isBordereauClaim = watch('bordereauClaim');\n  var firstUpdate = useRef(true);\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n      setRefResponseDisable(refResponseState);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setRefResponseDisable(true);\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var submitLinkLossDocuments = function submitLinkLossDocuments() {\n    var lossRef = lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef;\n    var activeClaimRefList = [];\n    activeClaimRefList.push(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef);\n    dispatch(linkLossDocuments({\n      lossRef: lossRef,\n      activeClaimRefList: activeClaimRefList\n    }));\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    submitLinkLossDocuments();\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) {\n        typeof (response === null || response === void 0 ? void 0 : response.claimReference) === 'string' && handleNext(index);\n      }\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  useLayoutEffect(function () {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n    } else {\n      // do things after first render\n      handleFormStatus();\n    }\n  }, [claimsDocsList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _Object$keys, _claimCardRef$current;\n\n    isDirty && handleFormStatus();\n    if (((_Object$keys = Object.keys(errors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) claimCardRef === null || claimCardRef === void 0 ? void 0 : (_claimCardRef$current = claimCardRef.current) === null || _claimCardRef$current === void 0 ? void 0 : _claimCardRef$current.scrollIntoView();\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n      return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n        return itr === item.name;\n      });\n    }).map(function (item) {\n      return item.id;\n    });\n    var isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\n    setDateValidation(!isRequired);\n\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\n      var fromDate = (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossFromDate);\n      var toDate = (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossToDate);\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\n    } else {\n      setValue('fromDate', null);\n      setValue('toDate', null);\n    }\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (complexValues) {\n      var _complexityValues$fin;\n\n      var getComplexityStatus = ((_complexityValues$fin = complexityValues.find(function (item) {\n        return item.complexityRulesID === (complexValues === null || complexValues === void 0 ? void 0 : complexValues.complexityRulesID);\n      })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      setRefValueDisable(getComplexityStatus);\n      getRefValues(refValues);\n    } else if (complexValues === null) {\n      setRefValueDisable(false);\n    }\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 4,\n      flex: \"1 1 auto\",\n      className: classes.container,\n      \"data-testid\": \"register-claim-card-information\",\n      ref: claimCardRef,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        mb: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n          text: utils.string.t('claims.claimInformation.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 175,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: -2.5,\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"\".concat((claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef), \" | \").concat(policyInformation.policyRef, \" | \").concat(policyInformation.insured)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 177,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 174,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        \"data-testid\": \"form-claimsCardInformation\",\n        children: /*#__PURE__*/_jsxDEV(FormFields, {\n          type: \"blank\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, {\n                name: \"claimRefReadonly\",\n                label: utils.string.t('claims.claimInformation.claimRef'),\n                value: (_ref2 = (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                muiComponentProps: {\n                  disabled: true,\n                  readOnly: true\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 188,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 187,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                alignItems: \"center\",\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 7,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                    error: errors.claimReceivedDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 5,\n                  nestedClasses: {\n                    root: classes.lossTime\n                  },\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 205,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                error: errors.claimantName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                error: errors.fromDate,\n                muiComponentProps: {\n                  disabled: dateValidation,\n                  fullWidth: true,\n                  classes: {\n                    root: classes.datepicker\n                  }\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 215,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                error: errors.toDate,\n                muiComponentProps: {\n                  disabled: dateValidation,\n                  fullWidth: true,\n                  classes: {\n                    root: classes.datepicker\n                  }\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 229,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 228,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                error: errors.lossQualifierID\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 243,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                error: errors.location\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                error: errors.fgunarrative\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 251,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 250,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                error: errors.priority\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 254,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 259,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 15\n            }, this), watch('adjuster') === 'beAdjuster' ? /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 264,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 263,\n              columnNumber: 17\n            }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'nonBeAdjuster', control)), {}, {\n                error: errors.nonBeAdjuster\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                error: errors.adjusterReference\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 273,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 272,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                error: errors.complexity\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 277,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                error: errors.referral,\n                muiComponentProps: {\n                  disabled: !refValuesDisable\n                },\n                callback: function callback(e, data) {\n                  getRefValues(data);\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 280,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 279,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                error: errors.rfiResponse,\n                muiComponentProps: {\n                  disabled: refResponseDisable\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 15\n            }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                error: errors.bordereauClaim,\n                nestedClasses: {\n                  root: classes.checkbox\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 17\n            }, this), isBordereauChecked && isBordereauClaim && /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                error: errors.bordereauPeriod\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 184,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: claimData,\n          refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n          ,\n          dmsContext: DMS_CONTEXT_CLAIM,\n          documentTypeKey: DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          isTabView: false,\n          fnolViewOptions: {\n            isClaimsFNOL: true,\n            isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n            claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments')\n          },\n          docList: claimsDocsList,\n          parentLossRef: parentLossRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 322,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 321,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n        activeStep: activeStep,\n        isAllStepsCompleted: isAllStepsCompleted,\n        handleBack: function handleBack() {\n          _handleBack(index);\n        },\n        handleSave: handleSubmit(handleSaveForm),\n        handleNextSubmit: handleSubmit(handleSubmitForm),\n        save: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 342,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 341,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 172,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterClaimCardInformationView, \"y2BbjBKbVFNEWOzH1mgtVwfZ/2s=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useEffect","useState","useRef","useLayoutEffect","useDispatch","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","postEditClaimDetailsInformation","linkLossDocuments","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","makeStyles","Box","Typography","RegisterClaimCardInformationView","prototype","claimantNames","array","isRequired","referralValues","lossQualifiers","object","resetKey","number","hasClaimRef","bool","claimsDocsList","parentLossRef","string","savedClaimInfo","fields","claimRefId","claimData","policyInformation","complexityValues","index","handleNext","handleSave","handleBack","activeStep","isAllStepsCompleted","isBordereauChecked","handleFormStatus","lossInformation","classes","name","dispatch","claimCardRef","dateValidation","setDateValidation","refResponseDisable","setRefResponseDisable","refValuesDisable","setRefValueDisable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","setValue","handleSubmit","watch","isDirty","formState","lossQualifierID","id","complexValues","refValues","isBordereauClaim","firstUpdate","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","submitLinkLossDocuments","lossRef","activeClaimRefList","push","claimRef","handleSubmitForm","values","then","response","claimReference","handleSaveForm","current","Object","keys","length","scrollIntoView","dateDisabledLossQualifiers","filter","itr","map","fromDate","lossFromDate","toDate","lossToDate","getComplexityStatus","container","t","policyRef","insured","disabled","readOnly","getFieldProps","claimReceivedDate","root","lossTime","claimantName","fullWidth","datepicker","location","fgunarrative","priority","nonBeAdjuster","adjusterReference","complexity","referral","e","data","rfiResponse","bordereauClaim","checkbox","bordereauPeriod","claim","isClaimsFNOL","isClaimsUploadDisabled","claimsUploadWarningMsg","claimsSearchDocumentsTxt","uploadDocumentsTitle"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useLayoutEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { postEditClaimDetailsInformation, linkLossDocuments } from 'stores';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, Typography } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  lossQualifiers: PropTypes.object,\r\n  resetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  claimsDocsList: PropTypes.array,\r\n  parentLossRef: PropTypes.string,\r\n  savedClaimInfo: PropTypes.object,\r\n};\r\n\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  claimsDocsList,\r\n  claimRefId,\r\n  claimData,\r\n  policyInformation,\r\n  complexityValues,\r\n  index,\r\n  handleNext,\r\n  handleSave,\r\n  handleBack,\r\n  activeStep,\r\n  isAllStepsCompleted,\r\n  isBordereauChecked,\r\n  lossQualifiers,\r\n  handleFormStatus,\r\n  lossInformation,\r\n  parentLossRef,\r\n  savedClaimInfo,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'RegisterClaimCardInformation' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const claimCardRef = useRef();\r\n\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const [refResponseDisable, setRefResponseDisable] = useState(true);\r\n  const [refValuesDisable, setRefValueDisable] = useState(false);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const {\r\n    control,\r\n    errors,\r\n    setValue,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { isDirty },\r\n  } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const lossQualifierID = watch('lossQualifierID')?.id;\r\n  const complexValues = watch('complexity');\r\n  const refValues = watch('referral');\r\n  const isBordereauClaim = watch('bordereauClaim');\r\n  const firstUpdate = useRef(true);\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      setRefResponseDisable(refResponseState);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setRefResponseDisable(true);\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const submitLinkLossDocuments = () => {\r\n    const lossRef = lossInformation?.lossRef;\r\n    const activeClaimRefList = [];\r\n    activeClaimRefList.push(claimRefId?.claimRef);\r\n    dispatch(linkLossDocuments({ lossRef, activeClaimRefList }));\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    submitLinkLossDocuments();\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) {\r\n        typeof response?.claimReference === 'string' && handleNext(index);\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) handleSave();\r\n    });\r\n  };\r\n\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n    } else {\r\n      // do things after first render\r\n      handleFormStatus();\r\n    }\r\n  }, [claimsDocsList]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    isDirty && handleFormStatus();\r\n    if (Object.keys(errors)?.length > 0) claimCardRef?.current?.scrollIntoView();\r\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const dateDisabledLossQualifiers = lossQualifiers\r\n      .filter((item) => CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name))\r\n      .map((item) => item.id);\r\n    const isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\r\n    setDateValidation(!isRequired);\r\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\r\n      const fromDate = lossInformation?.fromDate || savedClaimInfo?.lossFromDate;\r\n      const toDate = lossInformation?.toDate || savedClaimInfo?.lossToDate;\r\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\r\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\r\n    } else {\r\n      setValue('fromDate', null);\r\n      setValue('toDate', null);\r\n    }\r\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (complexValues) {\r\n      const getComplexityStatus =\r\n        complexityValues.find((item) => item.complexityRulesID === complexValues?.complexityRulesID)?.complexityRulesValue ===\r\n        'Referral Required';\r\n      setRefValueDisable(getComplexityStatus);\r\n      getRefValues(refValues);\r\n    } else if (complexValues === null) {\r\n      setRefValueDisable(false);\r\n    }\r\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box mb={4} flex=\"1 1 auto\" className={classes.container} data-testid=\"register-claim-card-information\" ref={claimCardRef}>\r\n        <Box mt={4} mb={4}>\r\n          <FormLegend text={utils.string.t('claims.claimInformation.title')} />\r\n\r\n          <Box mt={-2.5}>\r\n            <Typography variant=\"h5\">{`${claimRefId?.claimReference || claimRefId?.claimRef} | ${policyInformation.policyRef} | ${\r\n              policyInformation.insured\r\n            }`}</Typography>\r\n          </Box>\r\n        </Box>\r\n\r\n        <FormContainer data-testid=\"form-claimsCardInformation\">\r\n          <FormFields type=\"blank\">\r\n            <FormGrid container spacing={3}>\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormText\r\n                  name=\"claimRefReadonly\"\r\n                  label={utils.string.t('claims.claimInformation.claimRef')}\r\n                  value={(claimRefId?.claimReference || claimRefId?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')}\r\n                  muiComponentProps={{\r\n                    disabled: true,\r\n                    readOnly: true,\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container alignItems=\"center\" spacing={2}>\r\n                  <FormGrid item xs={7}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormDate\r\n                  {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                  error={errors.fromDate}\r\n                  muiComponentProps={{\r\n                    disabled: dateValidation,\r\n                    fullWidth: true,\r\n                    classes: {\r\n                      root: classes.datepicker,\r\n                    },\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormDate\r\n                  {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                  error={errors.toDate}\r\n                  muiComponentProps={{\r\n                    disabled: dateValidation,\r\n                    fullWidth: true,\r\n                    classes: {\r\n                      root: classes.datepicker,\r\n                    },\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n              </FormGrid>\r\n\r\n              {watch('adjuster') === 'beAdjuster' ? (\r\n                <FormGrid item xs={12} sm={4}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} />\r\n                </FormGrid>\r\n              ) : (\r\n                <FormGrid item xs={12} sm={4}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'nonBeAdjuster', control)} error={errors.nonBeAdjuster} />\r\n                </FormGrid>\r\n              )}\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'referral', control)}\r\n                  error={errors.referral}\r\n                  muiComponentProps={{\r\n                    disabled: !refValuesDisable,\r\n                  }}\r\n                  callback={(e, data) => {\r\n                    getRefValues(data);\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'rfiResponse', control)}\r\n                  error={errors.rfiResponse}\r\n                  muiComponentProps={{\r\n                    disabled: refResponseDisable,\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n\r\n              {isBordereauChecked && (\r\n                <FormGrid item xs={12} sm={4}>\r\n                  <FormCheckbox\r\n                    {...utils.form.getFieldProps(fields, 'bordereauClaim', control)}\r\n                    error={errors.bordereauClaim}\r\n                    nestedClasses={{ root: classes.checkbox }}\r\n                  />\r\n                </FormGrid>\r\n              )}\r\n\r\n              {isBordereauChecked && isBordereauClaim && (\r\n                <FormGrid item xs={12} sm={4}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)} error={errors.bordereauPeriod} />\r\n                </FormGrid>\r\n              )}\r\n            </FormGrid>\r\n          </FormFields>\r\n        </FormContainer>\r\n\r\n        <Box mt={6}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={claimData}\r\n            refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n            dmsContext={DMS_CONTEXT_CLAIM}\r\n            documentTypeKey={DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n            isTabView={false}\r\n            fnolViewOptions={{\r\n              isClaimsFNOL: true,\r\n              isClaimsUploadDisabled: !claimRefId?.claimRef,\r\n              claimsUploadWarningMsg: !claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\r\n              claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\r\n              uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\r\n            }}\r\n            docList={claimsDocsList}\r\n            parentLossRef={parentLossRef}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flex=\"0 1 auto\">\r\n        <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => {\r\n            handleBack(index);\r\n          }}\r\n          handleSave={handleSubmit(handleSaveForm)}\r\n          handleNextSubmit={handleSubmit(handleSubmitForm)}\r\n          save={true}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}