{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PortfolioMap\\\\PortfolioMap.view.js\";\nimport React from 'react';\nimport propTypes from 'prop-types'; // app\n\nimport config from 'config';\nimport { mapLayers } from 'utils/map/mapLayers';\nimport * as utils from 'utils';\nimport { MapBox, ChartTooltip, Translate, Button } from 'components';\nimport { PortfolioData, PortfolioAccounts } from 'modules';\nimport styles from './PortfolioMap.styles'; // mui\n\nimport { makeStyles, Collapse } from '@material-ui/core';\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPortfolioMapView.propTypes = {\n  token: propTypes.string.isRequired,\n  locations: propTypes.array.isRequired,\n  mapKeyFilter: propTypes.func.isRequired,\n  mapKeyFilterAll: propTypes.func.isRequired,\n  getLocations: propTypes.func.isRequired,\n  mapKey: propTypes.array.isRequired,\n  isLoading: propTypes.bool.isRequired,\n  level: propTypes.string.isRequired,\n  handleUpdateCenter: propTypes.func.isRequired,\n  handleToggleTable: propTypes.func.isRequired,\n  center: propTypes.array\n};\nexport function PortfolioMapView(_ref) {\n  var _this = this;\n\n  var handleUpdateCenter = _ref.handleUpdateCenter,\n      center = _ref.center,\n      token = _ref.token,\n      locations = _ref.locations,\n      getLocations = _ref.getLocations,\n      mapKey = _ref.mapKey,\n      mapKeyFilter = _ref.mapKeyFilter,\n      mapKeyFilterAll = _ref.mapKeyFilterAll,\n      isLoading = _ref.isLoading,\n      level = _ref.level,\n      levelOverride = _ref.levelOverride,\n      showTable = _ref.showTable,\n      handleToggleTable = _ref.handleToggleTable;\n  var classes = makeStyles(styles, {\n    name: 'PortfolioMap'\n  })({\n    showTable: showTable,\n    levelOverride: !!levelOverride\n  });\n\n  var ClientLocationTooltip = function ClientLocationTooltip(_ref2) {\n    var tooltip = _ref2.tooltip;\n    var accounts = tooltip.accounts,\n        address = tooltip.address,\n        tivTotal = tooltip.tivTotal;\n    return /*#__PURE__*/_jsxDEV(ChartTooltip, {\n      title: address,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(PortfolioAccounts, {\n          accounts: accounts\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 12\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.valueLabel,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.label,\n            children: [utils.string.t('app.total'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"format.currency\",\n            options: {\n              value: {\n                number: tivTotal,\n                currency: 'USD'\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(MapBox, {\n      id: \"client-map\",\n      reCenter: false,\n      center: center,\n      height: \"100%\",\n      levelOverride: levelOverride,\n      layers: mapLayers,\n      onLevelChange: getLocations,\n      isLoading: isLoading,\n      allowMarkerClickZoom: false,\n      markerType: config.mapbox.markerType.doughnut,\n      showMarkers: true,\n      tooltipComponent: ClientLocationTooltip,\n      locations: locations,\n      nestedClasses: {\n        map: classes.map\n      },\n      mapKey: {\n        title: utils.string.t('client.accountsKey'),\n        items: mapKey,\n        onToggle: mapKeyFilter,\n        onToggleAll: mapKeyFilterAll,\n        colorMode: 'dark',\n        nestedClasses: {\n          root: classes.mapKeyRoot\n        },\n        allowCollapse: true\n      },\n      instanceObject: {\n        transformRequest: function transformRequest(url, resourceType) {\n          if (resourceType === 'Source' && url.includes('api/locations')) {\n            return {\n              url: url,\n              headers: {\n                Authorization: 'Bearer ' + token\n              }\n            };\n          }\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.bottomPanel,\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.toggleButtonContainer,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          nestedClasses: {\n            btn: classes.toggleButton,\n            icon: classes.toggleIcon\n          },\n          icon: DoubleArrowOutlinedIcon,\n          onClick: handleToggleTable,\n          text: utils.string.t(showTable ? 'portfolioMap.hideTable' : 'portfolioMap.viewTable'),\n          variant: \"text\",\n          light: true,\n          size: \"small\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 100,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n        \"in\": showTable,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tableContainer,\n          children: [/*#__PURE__*/_jsxDEV(Translate, {\n            variant: \"h4\",\n            label: utils.string.t('portfolioMap.dataLabel', {\n              level: levelOverride || level\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(PortfolioData, {\n            handleUpdateCenter: handleUpdateCenter,\n            locations: locations.sort(function (a, b) {\n              return b.tivTotal - a.tivTotal;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = PortfolioMapView;\nPortfolioMapView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PortfolioMapView\",\n  \"props\": {\n    \"token\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"locations\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"mapKeyFilter\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"mapKeyFilterAll\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"getLocations\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"mapKey\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"level\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleUpdateCenter\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleToggleTable\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"center\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PortfolioMap\\\\PortfolioMap.view.js\"] = {\n    name: \"PortfolioMapView\",\n    docgenInfo: PortfolioMapView.__docgenInfo,\n    path: \"src\\\\modules\\\\PortfolioMap\\\\PortfolioMap.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PortfolioMapView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PortfolioMap/PortfolioMap.view.js"],"names":["React","propTypes","config","mapLayers","utils","MapBox","ChartTooltip","Translate","Button","PortfolioData","PortfolioAccounts","styles","makeStyles","Collapse","DoubleArrowOutlinedIcon","PortfolioMapView","token","string","isRequired","locations","array","mapKeyFilter","func","mapKeyFilterAll","getLocations","mapKey","isLoading","bool","level","handleUpdateCenter","handleToggleTable","center","levelOverride","showTable","classes","name","ClientLocationTooltip","tooltip","accounts","address","tivTotal","valueLabel","label","t","value","number","currency","mapbox","markerType","doughnut","map","title","items","onToggle","onToggleAll","colorMode","nestedClasses","root","mapKeyRoot","allowCollapse","transformRequest","url","resourceType","includes","headers","Authorization","bottomPanel","toggleButtonContainer","btn","toggleButton","icon","toggleIcon","tableContainer","sort","a","b"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport propTypes from 'prop-types';\r\n\r\n// app\r\nimport config from 'config';\r\nimport { mapLayers } from 'utils/map/mapLayers';\r\nimport * as utils from 'utils';\r\nimport { MapBox, ChartTooltip, Translate, Button } from 'components';\r\nimport { PortfolioData, PortfolioAccounts } from 'modules';\r\nimport styles from './PortfolioMap.styles';\r\n\r\n// mui\r\nimport { makeStyles, Collapse } from '@material-ui/core';\r\nimport DoubleArrowOutlinedIcon from '@material-ui/icons/DoubleArrowOutlined';\r\n\r\nPortfolioMapView.propTypes = {\r\n  token: propTypes.string.isRequired,\r\n  locations: propTypes.array.isRequired,\r\n  mapKeyFilter: propTypes.func.isRequired,\r\n  mapKeyFilterAll: propTypes.func.isRequired,\r\n  getLocations: propTypes.func.isRequired,\r\n  mapKey: propTypes.array.isRequired,\r\n  isLoading: propTypes.bool.isRequired,\r\n  level: propTypes.string.isRequired,\r\n  handleUpdateCenter: propTypes.func.isRequired,\r\n  handleToggleTable: propTypes.func.isRequired,\r\n  center: propTypes.array,\r\n};\r\n\r\nexport function PortfolioMapView({\r\n  handleUpdateCenter,\r\n  center,\r\n  token,\r\n  locations,\r\n  getLocations,\r\n  mapKey,\r\n  mapKeyFilter,\r\n  mapKeyFilterAll,\r\n  isLoading,\r\n  level,\r\n  levelOverride,\r\n  showTable,\r\n  handleToggleTable,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PortfolioMap' })({ showTable, levelOverride: !!levelOverride });\r\n\r\n  const ClientLocationTooltip = ({ tooltip }) => {\r\n    const { accounts, address, tivTotal } = tooltip;\r\n    return (\r\n      <ChartTooltip title={address}>\r\n        <div>\r\n          {<PortfolioAccounts accounts={accounts} />}\r\n          <div className={classes.valueLabel}>\r\n            <span className={classes.label}>{utils.string.t('app.total')}:</span>\r\n            <Translate label=\"format.currency\" options={{ value: { number: tivTotal, currency: 'USD' } }} />\r\n          </div>\r\n        </div>\r\n      </ChartTooltip>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <MapBox\r\n        id=\"client-map\"\r\n        reCenter={false}\r\n        center={center}\r\n        height=\"100%\"\r\n        levelOverride={levelOverride}\r\n        layers={mapLayers}\r\n        onLevelChange={getLocations}\r\n        isLoading={isLoading}\r\n        allowMarkerClickZoom={false}\r\n        markerType={config.mapbox.markerType.doughnut}\r\n        showMarkers={true}\r\n        tooltipComponent={ClientLocationTooltip}\r\n        locations={locations}\r\n        nestedClasses={{ map: classes.map }}\r\n        mapKey={{\r\n          title: utils.string.t('client.accountsKey'),\r\n          items: mapKey,\r\n          onToggle: mapKeyFilter,\r\n          onToggleAll: mapKeyFilterAll,\r\n          colorMode: 'dark',\r\n          nestedClasses: { root: classes.mapKeyRoot },\r\n          allowCollapse: true,\r\n        }}\r\n        instanceObject={{\r\n          transformRequest: (url, resourceType) => {\r\n            if (resourceType === 'Source' && url.includes('api/locations')) {\r\n              return {\r\n                url: url,\r\n                headers: { Authorization: 'Bearer ' + token },\r\n              };\r\n            }\r\n          },\r\n        }}\r\n      />\r\n      <div className={classes.bottomPanel}>\r\n        <div className={classes.toggleButtonContainer}>\r\n          <Button\r\n            nestedClasses={{ btn: classes.toggleButton, icon: classes.toggleIcon }}\r\n            icon={DoubleArrowOutlinedIcon}\r\n            onClick={handleToggleTable}\r\n            text={utils.string.t(showTable ? 'portfolioMap.hideTable' : 'portfolioMap.viewTable')}\r\n            variant=\"text\"\r\n            light\r\n            size=\"small\"\r\n          />\r\n        </div>\r\n        <Collapse in={showTable}>\r\n          <div className={classes.tableContainer}>\r\n            <Translate variant=\"h4\" label={utils.string.t('portfolioMap.dataLabel', { level: levelOverride || level })} />\r\n            <PortfolioData handleUpdateCenter={handleUpdateCenter} locations={locations.sort((a, b) => b.tivTotal - a.tivTotal)} />\r\n          </div>\r\n        </Collapse>\r\n      </div>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}