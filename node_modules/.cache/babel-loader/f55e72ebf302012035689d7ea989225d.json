{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ReportingGroup\\\\ReportingGroup.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Layout, Overflow, SectionHeader, TableCell, TableHead, Breadcrumb, PopoverMenu, Button } from 'components';\nimport * as utils from 'utils';\nimport styles from './ReportingGroup.styles';\nimport { ReportingGroupUser } from 'modules';\nimport config from 'config'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody, Divider, Grid, Box } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nReportingGroupView.propTypes = {\n  groupTitle: PropTypes.string,\n  groupId: PropTypes.string,\n  list: PropTypes.array.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired,\n    active: PropTypes.bool\n  })).isRequired,\n  handleClickRow: PropTypes.func.isRequired,\n  handleAdd: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  loader: PropTypes.array,\n  isReportAdmin: PropTypes.bool.isRequired\n};\nexport function ReportingGroupView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var groupTitle = _ref.groupTitle,\n      groupId = _ref.groupId,\n      list = _ref.list,\n      breadcrumbs = _ref.breadcrumbs,\n      handleClickRow = _ref.handleClickRow,\n      handleAdd = _ref.handleAdd,\n      handleEdit = _ref.handleEdit,\n      handleDelete = _ref.handleDelete,\n      isReportAdmin = _ref.isReportAdmin;\n  var classes = makeStyles(styles, {\n    name: 'ReportingGroup'\n  })();\n\n  var _config$ui = config === null || config === void 0 ? void 0 : config.ui,\n      pagination = _config$ui.pagination;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(pagination.defaultMobile),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(event.target.value);\n    setPage(0);\n  };\n\n  var cols = [{\n    id: 'title',\n    label: utils.string.t('reportingReport.title')\n  }, {\n    id: 'description',\n    label: utils.string.t('reportingReport.description')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"reporting\",\n      children: [/*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: groupTitle,\n          testid: \"reportingGroup_header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 73,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              columns: cols\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              \"data-testid\": \"reporting-list\",\n              children: list && list.length > 0 && list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (report) {\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  className: classes.row,\n                  onClick: handleClickRow(report),\n                  hover: true,\n                  \"data-testid\": \"reporting-row-\".concat(report.id),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    \"data-testid\": \"reporting-title-\".concat(report.id),\n                    className: classes.cellName,\n                    children: report.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 89,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    \"data-testid\": \"reporting-description-\".concat(report.id),\n                    children: report.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 92,\n                    columnNumber: 25\n                  }, _this), isReportAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.dataCellLast\n                    },\n                    menu: true,\n                    \"data-testid\": \"reporting-isReportAdmin\",\n                    children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                      id: \"renewal-list\",\n                      data: {\n                        id: report.id,\n                        title: report.title\n                      },\n                      items: [{\n                        id: 'edit',\n                        label: 'app.edit',\n                        callback: function callback(e) {\n                          return handleEdit(report);\n                        }\n                      }, {\n                        id: 'delete',\n                        label: 'app.delete',\n                        callback: handleDelete\n                      }]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 95,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 94,\n                    columnNumber: 27\n                  }, _this)]\n                }, report.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 82,\n                  columnNumber: 23\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [isReportAdmin && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                icon: AddIcon,\n                size: \"small\",\n                text: utils.string.t('app.report'),\n                variant: \"contained\",\n                color: \"primary\",\n                onClick: handleAdd\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 126,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 8,\n            children: /*#__PURE__*/_jsxDEV(TablePagination, {\n              rowsPerPageOptions: pagination.options,\n              component: \"div\",\n              count: list.length,\n              rowsPerPage: rowsPerPage,\n              page: page,\n              onPageChange: handleChangePage,\n              onRowsPerPageChange: handleChangeRowsPerPage\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 9\n      }, this), isReportAdmin && /*#__PURE__*/_jsxDEV(Layout, {\n        sidebar: true,\n        padding: false,\n        children: /*#__PURE__*/_jsxDEV(ReportingGroupUser, {\n          groupTitle: groupTitle,\n          groupId: groupId\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReportingGroupView, \"7heiFq/tcLN5ESuhz6j5aBSaABQ=\");\n\n_c = ReportingGroupView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportingGroupView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ReportingGroup/ReportingGroup.view.js"],"names":["React","useState","PropTypes","Layout","Overflow","SectionHeader","TableCell","TableHead","Breadcrumb","PopoverMenu","Button","utils","styles","ReportingGroupUser","config","makeStyles","Table","TableRow","TableBody","Divider","Grid","Box","AddIcon","TablePagination","ReportingGroupView","propTypes","groupTitle","string","groupId","list","array","isRequired","breadcrumbs","arrayOf","shape","name","label","link","active","bool","handleClickRow","func","handleAdd","handleEdit","handleDelete","loader","isReportAdmin","classes","ui","pagination","page","setPage","defaultMobile","rowsPerPage","setRowsPerPage","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","cols","id","t","length","slice","map","report","row","cellName","title","description","root","dataCellLast","callback","e","options"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Layout, Overflow, SectionHeader, TableCell, TableHead, Breadcrumb, PopoverMenu, Button } from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './ReportingGroup.styles';\r\nimport { ReportingGroupUser } from 'modules';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody, Divider, Grid, Box } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\n\r\nReportingGroupView.propTypes = {\r\n  groupTitle: PropTypes.string,\r\n  groupId: PropTypes.string,\r\n  list: PropTypes.array.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n      active: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n  handleClickRow: PropTypes.func.isRequired,\r\n  handleAdd: PropTypes.func.isRequired,\r\n  handleEdit: PropTypes.func.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n  loader: PropTypes.array,\r\n  isReportAdmin: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function ReportingGroupView({\r\n  groupTitle,\r\n  groupId,\r\n  list,\r\n  breadcrumbs,\r\n  handleClickRow,\r\n  handleAdd,\r\n  handleEdit,\r\n  handleDelete,\r\n  isReportAdmin,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ReportingGroup' })();\r\n  const { pagination } = config?.ui;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(pagination.defaultMobile);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  const cols = [\r\n    { id: 'title', label: utils.string.t('reportingReport.title') },\r\n    { id: 'description', label: utils.string.t('reportingReport.description') },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n\r\n      <Layout testid=\"reporting\">\r\n        <Layout main>\r\n          <SectionHeader title={groupTitle} testid=\"reportingGroup_header\"></SectionHeader>\r\n          <Overflow>\r\n            <Table size=\"small\">\r\n              <TableHead columns={cols} />\r\n              <TableBody data-testid=\"reporting-list\">\r\n                {list &&\r\n                  list.length > 0 &&\r\n                  list.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((report) => {\r\n                    return (\r\n                      <TableRow\r\n                        key={report.id}\r\n                        className={classes.row}\r\n                        onClick={handleClickRow(report)}\r\n                        hover\r\n                        data-testid={`reporting-row-${report.id}`}\r\n                      >\r\n                        <TableCell data-testid={`reporting-title-${report.id}`} className={classes.cellName}>\r\n                          {report.title}\r\n                        </TableCell>\r\n                        <TableCell data-testid={`reporting-description-${report.id}`}>{report.description}</TableCell>\r\n                        {isReportAdmin && (\r\n                          <TableCell nestedClasses={{ root: classes.dataCellLast }} menu data-testid=\"reporting-isReportAdmin\">\r\n                            <PopoverMenu\r\n                              id=\"renewal-list\"\r\n                              data={{\r\n                                id: report.id,\r\n                                title: report.title,\r\n                              }}\r\n                              items={[\r\n                                {\r\n                                  id: 'edit',\r\n                                  label: 'app.edit',\r\n                                  callback: (e) => handleEdit(report),\r\n                                },\r\n                                {\r\n                                  id: 'delete',\r\n                                  label: 'app.delete',\r\n                                  callback: handleDelete,\r\n                                },\r\n                              ]}\r\n                            />\r\n                          </TableCell>\r\n                        )}\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n              </TableBody>\r\n            </Table>\r\n          </Overflow>\r\n          <Grid container>\r\n            {isReportAdmin && (\r\n              <Grid item xs={12} sm={4}>\r\n                <Box mt={2}>\r\n                  <Button\r\n                    icon={AddIcon}\r\n                    size=\"small\"\r\n                    text={utils.string.t('app.report')}\r\n                    variant=\"contained\"\r\n                    color=\"primary\"\r\n                    onClick={handleAdd}\r\n                  />\r\n                </Box>\r\n              </Grid>\r\n            )}\r\n            <Grid item xs={12} sm={8}>\r\n              <TablePagination\r\n                rowsPerPageOptions={pagination.options}\r\n                component=\"div\"\r\n                count={list.length}\r\n                rowsPerPage={rowsPerPage}\r\n                page={page}\r\n                onPageChange={handleChangePage}\r\n                onRowsPerPageChange={handleChangeRowsPerPage}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        </Layout>\r\n        {isReportAdmin && (\r\n          <Layout sidebar padding={false}>\r\n            <ReportingGroupUser groupTitle={groupTitle} groupId={groupId} />\r\n          </Layout>\r\n        )}\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}