{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TaskDetails.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory, useLocation } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport * as Yup from 'yup'; //app\n\nimport { TaskDetailsView } from './TaskDetails.view';\nimport * as utils from 'utils';\nimport { SANCTIONS_CHECK_STATUSES } from 'consts';\nimport styles from './TaskDetails.styles';\nimport { CURRENCY_PURCHASED_STATUS } from 'consts';\nimport { closeSanctionsCheck, selectCurrencyPurchasedValue, selectClaimsInformation, selectLossInformation, selectClaimsPolicyInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectPolicyInfoIsLoading, selectLossInfoIsLoading, selectPolicySectionIsLoading, selectCatCodes, selectClaimsPolicySections, selectIsTaskDashboardTaskDetailsLoading, showModal, getSanctionsCheckStatus, selectSanctionsCheckStatus } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskDetails.propTypes = {\n  taskObj: PropTypes.object.isRequired,\n  isDirtyRef: PropTypes.bool.isRequired,\n  setIsDirty: PropTypes.func.isRequired,\n  handleDirtyCheck: PropTypes.func.isRequired\n};\nexport default function TaskDetails(_ref) {\n  _s();\n\n  var _useSelector, _catCodes$find, _policySections$find, _interests$find;\n\n  var taskObj = _ref.taskObj,\n      isDirtyRef = _ref.isDirtyRef,\n      setIsDirty = _ref.setIsDirty,\n      handleDirtyCheck = _ref.handleDirtyCheck;\n  var currencyPurchased = useSelector(selectCurrencyPurchasedValue);\n\n  var _useState = useState(currencyPurchased),\n      _useState2 = _slicedToArray(_useState, 2),\n      currencyValue = _useState2[0],\n      setCurrencyValue = _useState2[1];\n\n  var location = useLocation();\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossInformation);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var isTaskDetailsLoading = useSelector(selectIsTaskDashboardTaskDetailsLoading);\n  var catCodes = useSelector(selectCatCodes);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.id) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var sanctionCheckStatus = useSelector(selectSanctionsCheckStatus);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? 'Our Share' : '100%',\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.claimInformation.lossQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.complexityBasis'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.referral'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  var taskInfo = [{\n    title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskRef,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n    value: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.targetDueDate) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.targetDueDate).format(config.ui.format.date.text),\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.status'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.status,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskType,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.assigneeFullName,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.priority,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\n    value: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn).format(config.ui.format.date.text),\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\n    value: sanctionCheckStatus === null || sanctionCheckStatus === void 0 ? void 0 : sanctionCheckStatus.value,\n    isLoading: isTaskDetailsLoading\n  }];\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n  var fields = [{\n    name: 'currencyPurchasedRadio',\n    type: 'radio',\n    value: currencyValue,\n    defaultValue: currencyValue,\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      value: CURRENCY_PURCHASED_STATUS.Yes,\n      label: utils.string.t('claims.processing.taskDetailsLabels.yes')\n    }, {\n      value: CURRENCY_PURCHASED_STATUS.No,\n      label: utils.string.t('claims.processing.taskDetailsLabels.no')\n    }, {\n      value: CURRENCY_PURCHASED_STATUS.notRequired,\n      label: utils.string.t('claims.processing.taskDetailsLabels.notRequired')\n    }]\n  }, {\n    name: 'sanctionsCheckState',\n    type: 'radio',\n    defaultValue: SANCTIONS_CHECK_STATUSES.approved,\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      value: SANCTIONS_CHECK_STATUSES.approved,\n      label: utils.string.t('status.approved')\n    }, {\n      value: SANCTIONS_CHECK_STATUSES.rejected,\n      label: utils.string.t('status.rejected')\n    }]\n  }, {\n    name: 'comments',\n    type: 'text',\n    defaultValue: '',\n    muiComponentProps: {\n      multiline: true,\n      rows: 3,\n      rowsMax: 3\n    },\n    validation: Yup.string().when('sanctionsCheckState', {\n      is: function is(val) {\n        return val === SANCTIONS_CHECK_STATUSES.rejected;\n      },\n      then: Yup.string().required(utils.string.t('claims.processing.taskDetailsLabels.minimumRequirement')),\n      otherwise: Yup.string().nullable()\n    })\n  }, {\n    name: 'details',\n    type: 'text',\n    defaultValue: '',\n    muiComponentProps: {\n      multiline: true,\n      rows: 3,\n      rowsMax: 3\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      getValues = _useForm.getValues,\n      isDirty = _useForm.formState.isDirty,\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors;\n\n  useEffect(function () {\n    if (currencyPurchased !== '') {\n      setValue('currencyPurchasedRadio', currencyPurchased);\n      setCurrencyValue(currencyPurchased);\n    }\n  }, [currencyPurchased]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    dispatch(getSanctionsCheckStatus(taskObj === null || taskObj === void 0 ? void 0 : taskObj.rootProcessId));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var currencyPurchasedValue = watch('currencyPurchasedRadio');\n  var sanctionsCheckState = watch('sanctionsCheckState');\n  var comments = watch('comments');\n\n  var handleClose = function handleClose() {\n    var params = {\n      sanctionsResult: sanctionsCheckState,\n      taskId: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskId,\n      resolutionComments: comments,\n      caseIncidentID: taskObj === null || taskObj === void 0 ? void 0 : taskObj.caseIncidentID,\n      processId: taskObj === null || taskObj === void 0 ? void 0 : taskObj.processId\n    };\n    dispatch(closeSanctionsCheck(params, function () {\n      return history.push(config.routes.claimsProcessing.root);\n    }));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (isDirty) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('status.alert'),\n          hint: utils.string.t('navigation.title'),\n          fullWidth: true,\n          maxWidth: 'xs',\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            submitHandler: function submitHandler() {\n              var _location$state, _location$state2;\n\n              (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.redirectUrl) ? history.push(location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.redirectUrl) : history.push(config.routes.claimsFNOL.root);\n            }\n          }\n        }\n      }));\n    } else {\n      var _location$state3, _location$state4;\n\n      (location === null || location === void 0 ? void 0 : (_location$state3 = location.state) === null || _location$state3 === void 0 ? void 0 : _location$state3.redirectUrl) ? history.push(location === null || location === void 0 ? void 0 : (_location$state4 = location.state) === null || _location$state4 === void 0 ? void 0 : _location$state4.redirectUrl) : history.push(config.routes.claimsFNOL.root);\n    }\n  };\n\n  var isAnyClaimSubmitted = lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.isAnyClaimSubmitted; // This is used to check any claim is submitted for particular loss\n\n  var handleEditLoss = function handleEditLoss() {\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        redirectUrl: \"\".concat(config.routes.claimsFNOL.task, \"/\").concat(taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskRef),\n        loss: {\n          isNextDiabled: true,\n          isClaimSubmitted: isAnyClaimSubmitted\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskDetailsView, {\n    taskObj: taskObj,\n    fields: fields,\n    currencyPurchasedValue: currencyPurchasedValue,\n    control: control,\n    currencyValue: currencyValue,\n    handlers: {\n      handleClose: handleClose,\n      setCurrencyValue: setCurrencyValue,\n      handleCancel: handleCancel\n    },\n    lossInfo: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    }),\n    policyInfo: policyInfo,\n    claimInfo: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isClaimInfoLoading\n      });\n    }),\n    taskInfo: taskInfo,\n    underWritingInfo: underWritingInfo,\n    underWritingGroupColumns: underWritingGroupColumns,\n    isTaskDetailsLoading: isTaskDetailsLoading,\n    isDirtyRef: isDirtyRef,\n    setIsDirty: setIsDirty,\n    handleDirtyCheck: handleDirtyCheck,\n    handleSubmit: handleSubmit,\n    errors: errors,\n    getValues: getValues,\n    setValue: setValue,\n    sanctionCheckStatus: sanctionCheckStatus,\n    handleEditLoss: handleEditLoss\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 475,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskDetails, \"pSkjelTlafm4G3y146jr0TJX9Gs=\", false, function () {\n  return [useSelector, useLocation, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useHistory, useDispatch, useForm];\n});\n\n_c = TaskDetails;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TaskDetails.js"],"names":["React","useState","useEffect","PropTypes","useForm","yupResolver","useHistory","useLocation","useDispatch","useSelector","get","moment","Yup","TaskDetailsView","utils","SANCTIONS_CHECK_STATUSES","styles","CURRENCY_PURCHASED_STATUS","closeSanctionsCheck","selectCurrencyPurchasedValue","selectClaimsInformation","selectLossInformation","selectClaimsPolicyInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectPolicyInfoIsLoading","selectLossInfoIsLoading","selectPolicySectionIsLoading","selectCatCodes","selectClaimsPolicySections","selectIsTaskDashboardTaskDetailsLoading","showModal","getSanctionsCheckStatus","selectSanctionsCheckStatus","config","constants","makeStyles","TaskDetails","propTypes","taskObj","object","isRequired","isDirtyRef","bool","setIsDirty","func","handleDirtyCheck","currencyPurchased","currencyValue","setCurrencyValue","location","claimsInformation","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","isTaskDetailsLoading","catCodes","catCode","find","item","Number","id","catCodesID","description","policySections","sanctionCheckStatus","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","origCurrencies","state","countriesList","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","toString","name","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","lossDescription","claimInfo","claimReference","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","claimStatus","policyInfo","policyRef","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","bordereauClaim","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","bordereauPeriod","settlementCountry","originalCurrency","settlementCurrencyCode","underWritingGroupColumns","label","taskInfo","taskRef","targetDueDate","text","status","taskType","assigneeFullName","priority","createdOn","history","dispatch","classes","fields","type","defaultValue","muiFormGroupProps","row","root","radioLabel","options","Yes","No","notRequired","approved","rejected","muiComponentProps","multiline","rows","rowsMax","validation","when","is","val","then","required","otherwise","nullable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","setValue","getValues","isDirty","formState","handleSubmit","errors","rootProcessId","currencyPurchasedValue","sanctionsCheckState","comments","handleClose","params","sanctionsResult","taskId","resolutionComments","caseIncidentID","processId","push","routes","claimsProcessing","handleCancel","component","props","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","redirectUrl","claimsFNOL","isAnyClaimSubmitted","handleEditLoss","pathname","newLoss","task","loss","isNextDiabled","isClaimSubmitted","map","info"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\nimport * as Yup from 'yup';\r\n\r\n//app\r\nimport { TaskDetailsView } from './TaskDetails.view';\r\nimport * as utils from 'utils';\r\nimport { SANCTIONS_CHECK_STATUSES } from 'consts';\r\nimport styles from './TaskDetails.styles';\r\nimport { CURRENCY_PURCHASED_STATUS } from 'consts';\r\nimport {\r\n  closeSanctionsCheck,\r\n  selectCurrencyPurchasedValue,\r\n  selectClaimsInformation,\r\n  selectLossInformation,\r\n  selectClaimsPolicyInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectPolicyInfoIsLoading,\r\n  selectLossInfoIsLoading,\r\n  selectPolicySectionIsLoading,\r\n  selectCatCodes,\r\n  selectClaimsPolicySections,\r\n  selectIsTaskDashboardTaskDetailsLoading,\r\n  showModal,\r\n  getSanctionsCheckStatus,\r\n  selectSanctionsCheckStatus,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nTaskDetails.propTypes = {\r\n  taskObj: PropTypes.object.isRequired,\r\n  isDirtyRef: PropTypes.bool.isRequired,\r\n  setIsDirty: PropTypes.func.isRequired,\r\n  handleDirtyCheck: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function TaskDetails({ taskObj, isDirtyRef, setIsDirty, handleDirtyCheck }) {\r\n  const currencyPurchased = useSelector(selectCurrencyPurchasedValue);\r\n  const [currencyValue, setCurrencyValue] = useState(currencyPurchased);\r\n  const location = useLocation();\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const isTaskDetailsLoading = useSelector(selectIsTaskDashboardTaskDetailsLoading);\r\n\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const catCode = catCodes.find((item) => Number(item.id) === lossInformation.catCodesID)?.description;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const sanctionCheckStatus = useSelector(selectSanctionsCheckStatus);\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder ? 'Our Share' : '100%',\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(\r\n      (currency) => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase()\r\n    )?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`;\r\n  };\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find((country) => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName;\r\n    return countryName;\r\n  };\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        lossInformation?.firstContactDate &&\r\n        moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.lossRef },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n  ];\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value:\r\n        claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.lossQualifier'), value: claimsInformation?.lossQualifierName },\r\n    { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.complexityBasis'), value: claimsInformation?.complexity },\r\n    { title: utils.string.t('claims.claimInformation.referral'), value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse'), value: claimsInformation?.referralResponseDescription },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus'), value: claimsInformation?.claimStatus },\r\n  ];\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value:\r\n        policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n          moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n          moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n  const taskInfo = [\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\r\n      value: taskObj?.taskRef,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n      value: taskObj?.targetDueDate && moment(taskObj?.targetDueDate).format(config.ui.format.date.text),\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.status'),\r\n      value: taskObj?.status,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\r\n      value: taskObj?.taskType,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\r\n      value: taskObj?.assigneeFullName,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\r\n      value: taskObj?.priority,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\r\n      value: taskObj?.createdOn && moment(taskObj?.createdOn).format(config.ui.format.date.text),\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\r\n      value: sanctionCheckStatus?.value,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n  ];\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'currencyPurchasedRadio',\r\n      type: 'radio',\r\n      value: currencyValue,\r\n      defaultValue: currencyValue,\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        { value: CURRENCY_PURCHASED_STATUS.Yes, label: utils.string.t('claims.processing.taskDetailsLabels.yes') },\r\n        { value: CURRENCY_PURCHASED_STATUS.No, label: utils.string.t('claims.processing.taskDetailsLabels.no') },\r\n        {\r\n          value: CURRENCY_PURCHASED_STATUS.notRequired,\r\n          label: utils.string.t('claims.processing.taskDetailsLabels.notRequired'),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'sanctionsCheckState',\r\n      type: 'radio',\r\n      defaultValue: SANCTIONS_CHECK_STATUSES.approved,\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        { value: SANCTIONS_CHECK_STATUSES.approved, label: utils.string.t('status.approved') },\r\n        { value: SANCTIONS_CHECK_STATUSES.rejected, label: utils.string.t('status.rejected') },\r\n      ],\r\n    },\r\n    {\r\n      name: 'comments',\r\n      type: 'text',\r\n      defaultValue: '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 3,\r\n      },\r\n      validation: Yup.string().when('sanctionsCheckState', {\r\n        is: (val) => val === SANCTIONS_CHECK_STATUSES.rejected,\r\n        then: Yup.string().required(utils.string.t('claims.processing.taskDetailsLabels.minimumRequirement')),\r\n        otherwise: Yup.string().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'details',\r\n      type: 'text',\r\n      defaultValue: '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 3,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const {\r\n    control,\r\n    watch,\r\n    setValue,\r\n    getValues,\r\n    formState: { isDirty },\r\n    handleSubmit,\r\n    errors,\r\n  } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currencyPurchased !== '') {\r\n      setValue('currencyPurchasedRadio', currencyPurchased);\r\n      setCurrencyValue(currencyPurchased);\r\n    }\r\n  }, [currencyPurchased]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    dispatch(getSanctionsCheckStatus(taskObj?.rootProcessId));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const currencyPurchasedValue = watch('currencyPurchasedRadio');\r\n  const sanctionsCheckState = watch('sanctionsCheckState');\r\n  const comments = watch('comments');\r\n\r\n  const handleClose = () => {\r\n    const params = {\r\n      sanctionsResult: sanctionsCheckState,\r\n      taskId: taskObj?.taskId,\r\n      resolutionComments: comments,\r\n      caseIncidentID: taskObj?.caseIncidentID,\r\n      processId: taskObj?.processId,\r\n    };\r\n    dispatch(closeSanctionsCheck(params, () => history.push(config.routes.claimsProcessing.root)));\r\n  };\r\n  const handleCancel = () => {\r\n    if (isDirty) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            title: utils.string.t('status.alert'),\r\n            hint: utils.string.t('navigation.title'),\r\n            fullWidth: true,\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              submitHandler: () => {\r\n                location?.state?.redirectUrl ? history.push(location?.state?.redirectUrl) : history.push(config.routes.claimsFNOL.root);\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      location?.state?.redirectUrl ? history.push(location?.state?.redirectUrl) : history.push(config.routes.claimsFNOL.root);\r\n    }\r\n  };\r\n  const isAnyClaimSubmitted = lossInformation?.isAnyClaimSubmitted;\r\n  // This is used to check any claim is submitted for particular loss\r\n  const handleEditLoss = () => {\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        redirectUrl: `${config.routes.claimsFNOL.task}/${taskObj?.taskRef}`,\r\n        loss: { isNextDiabled: true, isClaimSubmitted: isAnyClaimSubmitted },\r\n      },\r\n    });\r\n  };\r\n  return (\r\n    <TaskDetailsView\r\n      taskObj={taskObj}\r\n      fields={fields}\r\n      currencyPurchasedValue={currencyPurchasedValue}\r\n      control={control}\r\n      currencyValue={currencyValue}\r\n      handlers={{ handleClose, setCurrencyValue, handleCancel }}\r\n      lossInfo={lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      }))}\r\n      policyInfo={policyInfo}\r\n      claimInfo={claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isClaimInfoLoading,\r\n      }))}\r\n      taskInfo={taskInfo}\r\n      underWritingInfo={underWritingInfo}\r\n      underWritingGroupColumns={underWritingGroupColumns}\r\n      isTaskDetailsLoading={isTaskDetailsLoading}\r\n      isDirtyRef={isDirtyRef}\r\n      setIsDirty={setIsDirty}\r\n      handleDirtyCheck={handleDirtyCheck}\r\n      handleSubmit={handleSubmit}\r\n      errors={errors}\r\n      getValues={getValues}\r\n      setValue={setValue}\r\n      sanctionCheckStatus={sanctionCheckStatus}\r\n      handleEditLoss={handleEditLoss}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}