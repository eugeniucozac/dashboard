{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nimport moment from 'moment';\nexport var getPremiumProcessingTasksDetails = function getPremiumProcessingTasksDetails() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        premiumProcessing = _getState.premiumProcessing;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.getPremiumProcessingTasksDetails'\n    };\n    var newRequestType = (params === null || params === void 0 ? void 0 : params.requestType) || 'search';\n    var prevDirection = get(premiumProcessing, 'casesList.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(premiumProcessing, 'casesList.query') || '';\n    var newQuery = params.hasOwnProperty('query') ? params.query : prevQuery;\n    var prevSortBy = get(premiumProcessing, 'casesList.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var prevSearchBy = get(premiumProcessing, 'casesList.searchBy') || '';\n    var newSearchBy = params.hasOwnProperty('searchType') ? params.searchType : (params === null || params === void 0 ? void 0 : params.requestType) === 'filter' ? '' : prevSearchBy;\n    var prevIsCheckSigning = get(premiumProcessing, 'casesList.isCheckSigning') || false;\n    var newIsCheckSigning = params.hasOwnProperty('isCheckSigning') ? params.isCheckSigning : prevIsCheckSigning;\n    var newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : get(premiumProcessing, 'casesList.appliedFilters') || [];\n    var datesExceptionFields = ['caseCreatedOn', 'targetDueDate', 'inceptionDate'];\n    var constructFilter = Object.entries(newFilterQuery);\n    var updatedFilter = null;\n\n    if (params.hasOwnProperty('filterTerm') && params.filterTerm !== '') {\n      updatedFilter = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n        var column = filter[0];\n        var filterValue = datesExceptionFields.indexOf(column) > -1 && filter[1] ? [{\n          id: 1,\n          name: moment(new Date(filter[1])).format('DD-MM-YYYY')\n        }] : filter[1];\n        return utils.generic.isValidArray(filterValue, true) && {\n          column: column,\n          filterValue: filterValue\n        };\n      }).filter(function (item) {\n        return item;\n      }) : null;\n    } else {\n      updatedFilter = !(params.hasOwnProperty('filterTerm') && params.filterTerm !== '') && get(premiumProcessing, 'casesList.appliedFilters');\n    }\n\n    var appliedParams = {\n      newRequestType: newRequestType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newSearchBy: newSearchBy,\n      updatedFilter: updatedFilter\n    };\n    var isNonFilterTypeCall = newRequestType !== 'filter';\n    dispatch(getPremiumProcessingTasksDetailsRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n\n    if (isNonFilterTypeCall) {\n      dispatch(addLoader('getPremiumProcessingTasksDetails'));\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"workflow/process/taskSummaryV1/\".concat(params.taskType),\n      data: {\n        requestType: newRequestType,\n        direction: newDirection,\n        page: params && params.page || 0,\n        pageSize: params && params.size || premiumProcessing.casesList.pageSize,\n        sortBy: newSortBy,\n        searchBy: newSearchBy,\n        search: newQuery,\n        filterSearch: updatedFilter,\n        isCheckSigning: newIsCheckSigning\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getPremiumProcessingTasksDetailsSuccess(json, newRequestType, params.taskType, newSortBy, newDirection, newQuery, newSearchBy, updatedFilter, params.navigation, newIsCheckSigning));\n      return json;\n    }).catch(function (err) {\n      dispatch(getPremiumProcessingTasksDetailsFailure(err, defaultError, params === null || params === void 0 ? void 0 : params.requestType));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      if (isNonFilterTypeCall) {\n        dispatch(removeLoader('getPremiumProcessingTasksDetails'));\n      }\n    });\n  };\n};\nexport var getPremiumProcessingTasksDetailsRequest = function getPremiumProcessingTasksDetailsRequest(params) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASKS_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getPremiumProcessingTasksDetailsSuccess = function getPremiumProcessingTasksDetailsSuccess(json, newRequestType, taskType, newSortBy, newDirection, newQuery, newSearchBy, updatedFilter, navigation, newIsCheckSigning) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASKS_GET_SUCCESS',\n    payload: {\n      requestType: newRequestType,\n      taskType: taskType,\n      items: json.data,\n      pagination: json.pagination,\n      sortBy: newSortBy,\n      dir: newDirection,\n      query: newQuery,\n      searchBy: newSearchBy,\n      appliedFilters: updatedFilter,\n      navigation: navigation,\n      isCheckSigning: newIsCheckSigning\n    }\n  };\n};\nexport var getPremiumProcessingTasksDetailsFailure = function getPremiumProcessingTasksDetailsFailure(error, defaultError, type) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASKS_GET_FAILURE',\n    payload: {\n      error: error,\n      defaultError: defaultError,\n      type: type\n    }\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getPremiumProcessingTasksDetails.js"],"names":["authLogout","addLoader","removeLoader","utils","get","moment","getPremiumProcessingTasksDetails","params","dispatch","getState","auth","user","endpoint","config","vars","premiumProcessing","defaultError","file","newRequestType","requestType","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","query","prevSortBy","newSortBy","sortBy","prevSearchBy","newSearchBy","searchType","prevIsCheckSigning","newIsCheckSigning","isCheckSigning","newFilterQuery","filterTerm","datesExceptionFields","constructFilter","Object","entries","updatedFilter","generic","isValidArray","map","filter","column","filterValue","indexOf","id","name","Date","format","item","appliedParams","isNonFilterTypeCall","getPremiumProcessingTasksDetailsRequest","api","post","token","accessToken","bpmService","path","taskType","data","page","pageSize","size","casesList","searchBy","search","filterSearch","then","response","handleResponse","handleNewData","json","getPremiumProcessingTasksDetailsSuccess","navigation","catch","err","getPremiumProcessingTasksDetailsFailure","handleUnauthorized","finally","type","payload","items","pagination","dir","appliedFilters","error"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\nexport const getPremiumProcessingTasksDetails =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    const {\r\n      user: { auth },\r\n      config: {\r\n        vars: { endpoint },\r\n      },\r\n      premiumProcessing,\r\n    } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/premiumProcessing.actions.getPremiumProcessingTasksDetails',\r\n    };\r\n\r\n    const newRequestType = params?.requestType || 'search';\r\n\r\n    const prevDirection = get(premiumProcessing, 'casesList.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const prevQuery = get(premiumProcessing, 'casesList.query') || '';\r\n    const newQuery = params.hasOwnProperty('query') ? params.query : prevQuery;\r\n\r\n    const prevSortBy = get(premiumProcessing, 'casesList.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n    const prevSearchBy = get(premiumProcessing, 'casesList.searchBy') || '';\r\n    const newSearchBy = params.hasOwnProperty('searchType') ? params.searchType : params?.requestType === 'filter' ? '' : prevSearchBy;\r\n\r\n    const prevIsCheckSigning = get(premiumProcessing, 'casesList.isCheckSigning') || false;\r\n    const newIsCheckSigning = params.hasOwnProperty('isCheckSigning') ? params.isCheckSigning : prevIsCheckSigning;\r\n\r\n    const newFilterQuery =\r\n      params.hasOwnProperty('filterTerm') && params.filterTerm !== ''\r\n        ? params.filterTerm\r\n        : get(premiumProcessing, 'casesList.appliedFilters') || [];\r\n    const datesExceptionFields = ['caseCreatedOn', 'targetDueDate', 'inceptionDate'];\r\n    const constructFilter = Object.entries(newFilterQuery);\r\n    let updatedFilter = null;\r\n    if (params.hasOwnProperty('filterTerm') && params.filterTerm !== '') {\r\n      updatedFilter = utils.generic.isValidArray(constructFilter, true)\r\n        ? constructFilter\r\n            .map((filter) => {\r\n              const column = filter[0];\r\n              const filterValue =\r\n                datesExceptionFields.indexOf(column) > -1 && filter[1]\r\n                  ? [{ id: 1, name: moment(new Date(filter[1])).format('DD-MM-YYYY') }]\r\n                  : filter[1];\r\n              return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n            })\r\n            .filter((item) => item)\r\n        : null;\r\n    } else {\r\n      updatedFilter =\r\n        !(params.hasOwnProperty('filterTerm') && params.filterTerm !== '') && get(premiumProcessing, 'casesList.appliedFilters');\r\n    }\r\n    const appliedParams = { newRequestType, newDirection, newQuery, newSortBy, newSearchBy, updatedFilter };\r\n    const isNonFilterTypeCall = newRequestType !== 'filter';\r\n\r\n    dispatch(getPremiumProcessingTasksDetailsRequest({ params, appliedParams }));\r\n    if (isNonFilterTypeCall) {\r\n      dispatch(addLoader('getPremiumProcessingTasksDetails'));\r\n    }\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.bpmService,\r\n        path: `workflow/process/taskSummaryV1/${params.taskType}`,\r\n        data: {\r\n          requestType: newRequestType,\r\n          direction: newDirection,\r\n          page: (params && params.page) || 0,\r\n          pageSize: (params && params.size) || premiumProcessing.casesList.pageSize,\r\n          sortBy: newSortBy,\r\n          searchBy: newSearchBy,\r\n          search: newQuery,\r\n          filterSearch: updatedFilter,\r\n          isCheckSigning: newIsCheckSigning,\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => utils.api.handleNewData(data))\r\n      .then((json) => {\r\n        dispatch(\r\n          getPremiumProcessingTasksDetailsSuccess(\r\n            json,\r\n            newRequestType,\r\n            params.taskType,\r\n            newSortBy,\r\n            newDirection,\r\n            newQuery,\r\n            newSearchBy,\r\n            updatedFilter,\r\n            params.navigation,\r\n            newIsCheckSigning\r\n          )\r\n        );\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getPremiumProcessingTasksDetailsFailure(err, defaultError, params?.requestType));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        if (isNonFilterTypeCall) {\r\n          dispatch(removeLoader('getPremiumProcessingTasksDetails'));\r\n        }\r\n      });\r\n  };\r\n\r\nexport const getPremiumProcessingTasksDetailsRequest = (params) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASKS_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\nexport const getPremiumProcessingTasksDetailsSuccess = (\r\n  json,\r\n  newRequestType,\r\n  taskType,\r\n  newSortBy,\r\n  newDirection,\r\n  newQuery,\r\n  newSearchBy,\r\n  updatedFilter,\r\n  navigation,\r\n  newIsCheckSigning\r\n) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASKS_GET_SUCCESS',\r\n    payload: {\r\n      requestType: newRequestType,\r\n      taskType,\r\n      items: json.data,\r\n      pagination: json.pagination,\r\n      sortBy: newSortBy,\r\n      dir: newDirection,\r\n      query: newQuery,\r\n      searchBy: newSearchBy,\r\n      appliedFilters: updatedFilter,\r\n      navigation,\r\n      isCheckSigning: newIsCheckSigning,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getPremiumProcessingTasksDetailsFailure = (error, defaultError, type) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASKS_GET_FAILURE',\r\n    payload: { error, defaultError, type },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}