{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminClients\\\\ProductsAdminClients.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { ProductsAdminClientsView } from './ProductsAdminClients.view';\nimport { showModal, getClients, selectPartyClientsSorted, selectPartyClientsPagination, selectRiskCountries } from 'stores';\nimport { productAdminSchema } from 'schemas';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductsAdminClients() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      schema = _useState2[0],\n      setSchema = _useState2[1];\n\n  var clients = useSelector(selectPartyClientsSorted);\n  var countries = useSelector(selectRiskCountries);\n  var clientsLoading = useSelector(function (state) {\n    return state.party.clients.loading;\n  });\n  var clientsPagination = useSelector(selectPartyClientsPagination);\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      });\n    });\n  };\n\n  useEffect(function () {\n    dispatch(getClients({\n      size: config.ui.pagination[\"default\"]\n    }));\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!clients) return;\n\n    var _productAdminSchema$g = productAdminSchema.getSchema('clients'),\n        fields = _productAdminSchema$g.fields,\n        rest = _objectWithoutProperties(_productAdminSchema$g, [\"fields\"]);\n\n    setSchema(_objectSpread(_objectSpread({}, rest), {}, {\n      fields: hydrateLabels(fields),\n      items: clients,\n      pagination: clientsPagination\n    }));\n  }, [clients] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getClients({\n      page: newPage + 1\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getClients({\n      size: rowsPerPage\n    }));\n  };\n\n  var handleAddClient = function handleAddClient(fields) {\n    return function (event) {\n      dispatch(showModal({\n        component: 'ADD_PRODUCTS_CLIENT',\n        props: {\n          title: 'products.admin.clients.add',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            productsAdmin: true,\n            fields: fields\n          }\n        }\n      }));\n    };\n  };\n\n  var handleEditClient = function handleEditClient(data) {\n    dispatch(showModal({\n      component: 'EDIT_PRODUCTS_CLIENT',\n      props: {\n        title: 'products.admin.clients.edit',\n        fullWidth: true,\n        maxWidth: 'lg',\n        componentProps: {\n          productsAdmin: true,\n          id: data === null || data === void 0 ? void 0 : data.id\n        }\n      }\n    }));\n  };\n\n  var popoverActions = [{\n    id: 'products-admin-edit-insured',\n    label: 'products.admin.clients.edit',\n    callback: function callback(data) {\n      return handleEditClient(data);\n    }\n  }];\n  var pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage); // abort\n\n  if (!schema || !schema.items) return null;\n  return /*#__PURE__*/_jsxDEV(ProductsAdminClientsView, {\n    schema: schema,\n    countries: countries,\n    loading: clientsLoading,\n    pagination: pagination.obj,\n    popoverActions: popoverActions,\n    handlers: {\n      addClient: handleAddClient,\n      changePage: pagination.handlers.handleChangePage,\n      changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsAdminClients, \"kIgwbmvY9B9y0aDokUYFou+X400=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = ProductsAdminClients;\nProductsAdminClients.displayName = \"ProductsAdminClients\";\nProductsAdminClients.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProductsAdminClients\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProductsAdminClients\\\\ProductsAdminClients.js\"] = {\n    name: \"ProductsAdminClients\",\n    docgenInfo: ProductsAdminClients.__docgenInfo,\n    path: \"src\\\\modules\\\\ProductsAdminClients\\\\ProductsAdminClients.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminClients\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminClients/ProductsAdminClients.js"],"names":["React","useEffect","useState","useSelector","useDispatch","ProductsAdminClientsView","showModal","getClients","selectPartyClientsSorted","selectPartyClientsPagination","selectRiskCountries","productAdminSchema","usePagination","utils","config","ProductsAdminClients","dispatch","schema","setSchema","clients","countries","clientsLoading","state","party","loading","clientsPagination","hydrateLabels","fields","map","field","label","string","t","size","ui","pagination","getSchema","rest","items","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleAddClient","event","component","props","title","fullWidth","maxWidth","componentProps","productsAdmin","handleEditClient","data","id","popoverActions","callback","obj","addClient","changePage","handlers","changeRowsPerPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { ProductsAdminClientsView } from './ProductsAdminClients.view';\r\nimport { showModal, getClients, selectPartyClientsSorted, selectPartyClientsPagination, selectRiskCountries } from 'stores';\r\nimport { productAdminSchema } from 'schemas';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function ProductsAdminClients() {\r\n  const dispatch = useDispatch();\r\n  const [schema, setSchema] = useState({});\r\n  const clients = useSelector(selectPartyClientsSorted);\r\n  const countries = useSelector(selectRiskCountries);\r\n  const clientsLoading = useSelector((state) => state.party.clients.loading);\r\n  const clientsPagination = useSelector(selectPartyClientsPagination);\r\n  const hydrateLabels = (fields) => fields.map((field) => ({ ...field, label: utils.string.t(field.label) }));\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getClients({ size: config.ui.pagination.default }));\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!clients) return;\r\n\r\n      const { fields, ...rest } = productAdminSchema.getSchema('clients');\r\n\r\n      setSchema({\r\n        ...rest,\r\n        fields: hydrateLabels(fields),\r\n        items: clients,\r\n        pagination: clientsPagination,\r\n      });\r\n    },\r\n    [clients] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getClients({ page: newPage + 1 }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getClients({ size: rowsPerPage }));\r\n  };\r\n\r\n  const handleAddClient = (fields) => (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_PRODUCTS_CLIENT',\r\n        props: {\r\n          title: 'products.admin.clients.add',\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            productsAdmin: true,\r\n            fields,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditClient = (data) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_PRODUCTS_CLIENT',\r\n        props: {\r\n          title: 'products.admin.clients.edit',\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            productsAdmin: true,\r\n            id: data?.id,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'products-admin-edit-insured',\r\n      label: 'products.admin.clients.edit',\r\n      callback: (data) => handleEditClient(data),\r\n    },\r\n  ];\r\n\r\n  const pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  // abort\r\n  if (!schema || !schema.items) return null;\r\n\r\n  return (\r\n    <ProductsAdminClientsView\r\n      schema={schema}\r\n      countries={countries}\r\n      loading={clientsLoading}\r\n      pagination={pagination.obj}\r\n      popoverActions={popoverActions}\r\n      handlers={{\r\n        addClient: handleAddClient,\r\n        changePage: pagination.handlers.handleChangePage,\r\n        changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}