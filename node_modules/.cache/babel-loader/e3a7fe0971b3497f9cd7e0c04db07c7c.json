{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n// app\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nexport var getReportByPlacement = function getReportByPlacement(placementId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/analytics.actions'\n    };\n    dispatch(getReportByPlacementRequest(placementId));\n    dispatch(addLoader('getReportByPlacement'));\n\n    if (!placementId) {\n      dispatch(getReportByPlacementFailure(defaultError));\n      dispatch(removeLoader('getReportByPlacement'));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/analytics/placement/\".concat(placementId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      if (!utils.generic.isValidArray(data)) return;\n      var reports = data.map(function (report) {\n        var reportId = report.reportId,\n            embedUrl = report.embedUrl,\n            embedToken = report.embedToken,\n            insuredName = report.insuredName,\n            modellingDueDate = report.modellingDueDate,\n            rest = _objectWithoutProperties(report, [\"reportId\", \"embedUrl\", \"embedToken\", \"insuredName\", \"modellingDueDate\"]);\n\n        if (!reportId || !embedUrl || !embedToken) return null;\n        return _objectSpread({\n          id: reportId,\n          embedUrl: embedUrl,\n          accessToken: embedToken,\n          label: \"\".concat(insuredName, \" - \").concat(utils.string.t('format.date', {\n            value: {\n              date: modellingDueDate,\n              format: config.ui.format.date.text\n            }\n          }))\n        }, rest);\n      }).filter(function (report) {\n        return !!report;\n      });\n      dispatch(getReportByPlacementSuccess({\n        reports: reports,\n        placementId: placementId\n      }));\n      return reports;\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getReportByPlacementFailure(err));\n    }).finally(function () {\n      dispatch(removeLoader('getReportByPlacement'));\n    });\n  };\n};\nexport var getReportByPlacementRequest = function getReportByPlacementRequest(payload) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_REQUEST',\n    payload: payload\n  };\n};\nexport var getReportByPlacementSuccess = function getReportByPlacementSuccess(payload) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_SUCCESS',\n    payload: payload\n  };\n};\nexport var getReportByPlacementFailure = function getReportByPlacementFailure(error) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_FAILURE',\n    payload: error\n  };\n};\nexport var getReportByModelRequest = function getReportByModelRequest(payload) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_REQUEST',\n    payload: payload\n  };\n};\nexport var getReportByModelSuccess = function getReportByModelSuccess(payload) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_SUCCESS',\n    payload: payload\n  };\n};\nexport var getReportByModelFailure = function getReportByModelFailure(error) {\n  return {\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/analytics/analytics.actions.js"],"names":["authLogout","addLoader","removeLoader","utils","config","getReportByPlacement","placementId","dispatch","getState","auth","user","endpoint","vars","defaultError","file","getReportByPlacementRequest","getReportByPlacementFailure","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","generic","isValidArray","reports","map","report","reportId","embedUrl","embedToken","insuredName","modellingDueDate","rest","id","label","string","t","value","date","format","ui","text","filter","getReportByPlacementSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","error","getReportByModelRequest","getReportByModelSuccess","getReportByModelFailure"],"mappings":"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","sourcesContent":["// app\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport const getReportByPlacement = (placementId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/analytics.actions',\r\n  };\r\n\r\n  dispatch(getReportByPlacementRequest(placementId));\r\n  dispatch(addLoader('getReportByPlacement'));\r\n\r\n  if (!placementId) {\r\n    dispatch(getReportByPlacementFailure(defaultError));\r\n    dispatch(removeLoader('getReportByPlacement'));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/analytics/placement/${placementId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      if (!utils.generic.isValidArray(data)) return;\r\n      const reports = data\r\n        .map((report) => {\r\n          const { reportId, embedUrl, embedToken, insuredName, modellingDueDate, ...rest } = report;\r\n          if (!reportId || !embedUrl || !embedToken) return null;\r\n          return {\r\n            id: reportId,\r\n            embedUrl: embedUrl,\r\n            accessToken: embedToken,\r\n            label: `${insuredName} - ${utils.string.t('format.date', {\r\n              value: { date: modellingDueDate, format: config.ui.format.date.text },\r\n            })}`,\r\n            ...rest,\r\n          };\r\n        })\r\n        .filter((report) => !!report);\r\n      dispatch(getReportByPlacementSuccess({ reports, placementId }));\r\n      return reports;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getReportByPlacementFailure(err));\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReportByPlacement'));\r\n    });\r\n};\r\n\r\nexport const getReportByPlacementRequest = (payload) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportByPlacementSuccess = (payload) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportByPlacementFailure = (error) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_PLACEMENT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getReportByModelRequest = (payload) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportByModelSuccess = (payload) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportByModelFailure = (error) => {\r\n  return {\r\n    type: 'ANALYTICS_GET_REPORT_BY_MODEL_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}