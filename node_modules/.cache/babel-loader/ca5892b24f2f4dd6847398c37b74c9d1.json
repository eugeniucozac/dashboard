{"ast":null,"code":"import \"core-js/modules/es.array.includes\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport * as utils from 'utils';\nimport * as Yup from 'yup';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport xor from 'lodash/xor';\nimport groupBy from 'lodash/groupBy';\nimport isString from 'lodash/isString';\nimport isEmpty from 'lodash/isEmpty';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'; // private\n\nexport var _getValidation = function _getValidation(field, allFields) {\n  var validateRequired = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : true;\n  // abort\n  if (!field || !field.validation) return;\n  var yupValidation = Yup.mixed();\n  yupValidation = _validationType(yupValidation, field);\n  yupValidation = _validationMinMax(yupValidation, field);\n  yupValidation = _validationFormatting(yupValidation, field);\n\n  if (validateRequired) {\n    yupValidation = _validationRequired(yupValidation, field, allFields);\n  }\n\n  return yupValidation;\n};\nexport var _validationType = function _validationType(obj, field) {\n  var type = field && field.type ? field.type.toLowerCase() : '';\n  var allowedTypes = ['text', 'textarea', 'date', 'datepicker', 'select', 'autocomplete', 'integer', 'double', 'checkbox', 'radio', 'boolean']; // abort\n\n  if (!utils.generic.isValidObject(obj)) return {};\n\n  if (['date'].includes(type)) {\n    obj = Yup.string().nullable();\n  }\n\n  if (['text', 'textarea'].includes(type)) {\n    obj = Yup.string().nullable(); // prevent the min/max validation to appear if field is NOT dirty\n\n    if (field.validation && (field.validation.min || field.validation.max)) {\n      obj = obj.transform(function (value) {\n        return value === '' ? undefined : value;\n      });\n    }\n  }\n\n  if (['select'].includes(type)) {\n    if (field.autocomplete) {\n      obj = field.multi ? Yup.array().of(Yup.object()) : Yup.object().nullable();\n    } else {\n      obj = field.multi ? Yup.array().of(Yup.mixed()) : Yup.string().nullable();\n      obj = obj.notOneOf(['__placeholder__'], utils.string.t('validation.required'));\n    }\n  }\n\n  if (['integer', 'double'].includes(type)) {\n    obj = field.step ? Yup.number().nullable().multiple(field.step).transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }) : Yup.number().nullable().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    });\n  }\n\n  if (['checkbox'].includes(type)) {\n    if (utils.generic.isValidArray(field.options) && field.options.length >= 2) {\n      obj = Yup.array();\n    } else {\n      obj = Yup.mixed();\n    }\n  }\n\n  if (['radio'].includes(type)) {\n    obj = Yup.string();\n  }\n\n  if (['toggle'].includes(type)) {\n    obj = Yup[\"boolean\"]();\n  }\n\n  if (['object', 'address'].includes(type)) {\n    if (!utils.generic.isValidArray(field.objectDef, true)) return obj;\n    var fieldsWithValidation = field.objectDef.reduce(function (acc, def) {\n      return def.validation && !isEmpty(def.validation) ? [].concat(_toConsumableArray(acc), [def]) : acc;\n    }, []);\n    obj = Yup.object().shape(fieldsWithValidation.reduce(function (acc, def) {\n      var type = def.type ? def.type.toLowerCase() : ''; // skip if type isn't allowed\n\n      if (!allowedTypes.includes(type)) return acc;\n      return Object.assign(acc, _defineProperty({}, def.name, _getValidation(def)));\n    }, {}));\n  }\n\n  if (['array'].includes(type)) {\n    if (!utils.generic.isValidArray(field.arrayItemDef, true)) return Yup.array();\n\n    var _fieldsWithValidation = field.arrayItemDef.reduce(function (acc, def) {\n      return def.validation && !isEmpty(def.validation) ? [].concat(_toConsumableArray(acc), [def]) : acc;\n    }, []);\n\n    var fieldsName = _fieldsWithValidation.map(function (def) {\n      return def.name;\n    });\n\n    obj = Yup.array().of(Yup.object().shape(_fieldsWithValidation.reduce(function (acc, def) {\n      var type = def.type ? def.type.toLowerCase() : ''; // skip if type isn't allowed\n\n      if (!allowedTypes.includes(type)) return acc;\n      return Object.assign(acc, _defineProperty({}, def.name, Yup.mixed().when(xor(fieldsName, [def.name]), {\n        is: function is() {\n          for (var _len = arguments.length, rest = new Array(_len), _key = 0; _key < _len; _key++) {\n            rest[_key] = arguments[_key];\n          }\n\n          return rest.some(Boolean);\n        },\n        then: _getValidation(def),\n        otherwise: _getValidation(def, null, false)\n      })));\n    }, {}), utils.generic.tuples(fieldsName)));\n  }\n\n  return obj;\n};\nexport var _validationMinMax = function _validationMinMax(obj, field) {\n  var type = field && field.type && field.type.toLowerCase(); // abort\n\n  if (!obj || !utils.generic.isValidObject(obj)) return;\n  if (!field || !type || !field.validation || !(field.validation.min || field.validation.max)) return obj; // abort for Yup types that don't support min/max\n\n  if (!['string', 'date', 'number', 'array'].includes(obj._type)) return obj; // abort if field type is radio (only 1 option selectable)\n\n  if (type === 'radio') return obj;\n  var hasMin = has(field, 'validation.min');\n  var hasMax = has(field, 'validation.max');\n  var min = get(field, 'validation.min');\n  var max = get(field, 'validation.max');\n  var map = {\n    date: 'date',\n    integer: 'number',\n    \"double\": 'number',\n    text: 'string',\n    textarea: 'string',\n    select: 'options',\n    radio: 'options',\n    checkbox: 'options'\n  }; // we prevent min/max validation if select/autocomplete field isn't supporting multiple options\n\n  if (['select'].includes(type)) {\n    if (!field.multi) {\n      return obj;\n    }\n  } // if min/max are the same value, show special error message\n\n\n  if (hasMin && hasMax && min === max) {\n    obj = obj.min(min, utils.string.t(\"validation.\".concat(map[type], \".exactly\"), {\n      count: min\n    })).max(max, utils.string.t(\"validation.\".concat(map[type], \".exactly\"), {\n      count: max\n    }));\n  } else {\n    obj = hasMin ? obj.min(min, utils.string.t(\"validation.\".concat(map[type], \".min\"))) : obj;\n    obj = hasMax ? obj.max(max, utils.string.t(\"validation.\".concat(map[type], \".max\"))) : obj;\n  }\n\n  return obj;\n};\nexport var _validationFormatting = function _validationFormatting(obj, field) {\n  var type = field && field.type && field.type.toLowerCase(); // abort\n\n  if (!utils.generic.isValidObject(obj)) return {};\n  if (!field || !type) return obj;\n\n  if (type === 'integer') {\n    return obj.integer();\n  } else {\n    return obj;\n  }\n};\nexport var _validationRequired = function _validationRequired(obj, field, allFields) {\n  var type = field && field.type && field.type.toLowerCase();\n  var validation = field && field.validation; // abort\n\n  if (!utils.generic.isValidObject(obj)) return {};\n  if (!field || !type || !validation || allFields && !utils.generic.isValidArray(allFields, true)) return obj;\n  var isRequired = get(field, 'validation.required');\n  var group = get(field, 'validation.group.name');\n  var min = get(field, 'validation.group.min');\n  var max = get(field, 'validation.group.max');\n  var isMin = min && min > 0;\n  var isMax = max && max > 0;\n  var isRange = isMin && isMax;\n  var isOnly = isMin && isMax && min === max; // distance to coast\n\n  if (field.name === 'distanceToCoast' && isRequired === true) {\n    return obj.required(utils.string.t('risks.address.distanceToCoastRequired'));\n  } // select multi required\n\n\n  if (isRequired && type === 'select' && field.multi) {\n    return obj.test({\n      name: 'select-required-placeholder',\n      message: utils.string.t('validation.required'),\n      test: function test() {\n        var thisField = this.parent[field.name];\n\n        if (utils.generic.isValidArray(thisField)) {\n          return thisField.filter(function (v) {\n            return v !== '__placeholder__';\n          }).length > 0;\n        }\n\n        return true;\n      }\n    });\n  } // conditional field with validation\n\n\n  if (isRequired === true && field.conditional) {\n    var condition = utils.risk.getCondition(field, allFields);\n    return obj.test({\n      name: 'conditional-with-required',\n      message: utils.string.t('validation.required'),\n      test: function test() {\n        var thisField = this.parent[field.name];\n        var dependantField = this.parent[condition.name];\n        var isValid = utils.risk.isConditionValid(condition, dependantField);\n\n        if (isValid) {\n          return thisField;\n        }\n\n        return true;\n      }\n    });\n  } // normal required\n\n\n  if (isRequired === true) {\n    var _field$validation;\n\n    return obj.required((field === null || field === void 0 ? void 0 : (_field$validation = field.validation) === null || _field$validation === void 0 ? void 0 : _field$validation.message) ? field.validation.message : utils.string.t('validation.required'));\n  } // required only if another field has a value\n\n\n  if (isRequired && typeof isRequired === 'string') {\n    return obj.test({\n      name: 'is-conditional-field',\n      message: utils.string.t('validation.required'),\n      test: function test() {\n        var thisField = this.parent[field.name];\n        var conditionalField = this.parent[isRequired];\n        return !conditionalField || conditionalField && thisField;\n      }\n    });\n  } // required (min/max) for a group of related fields\n\n\n  if (group && (isMin || isMax)) {\n    var groupFields = allFields.filter(function (f) {\n      return get(f, 'validation.group.name') === group;\n    }).map(function (f) {\n      return f.name;\n    });\n    return obj.test({\n      name: 'is-conditional-group',\n      exclusive: false,\n      params: {},\n      message: isOnly ? utils.string.t('risks.validation.group.only', {\n        min: min,\n        group: group\n      }) : isRange ? utils.string.t('risks.validation.group.range', {\n        min: min,\n        max: max,\n        group: group\n      }) : isMin ? utils.string.t('risks.validation.group.min', {\n        min: min,\n        group: group\n      }) : utils.string.t('risks.validation.group.max', {\n        max: max,\n        group: group\n      }),\n      test: function test() {\n        var values = Object.entries(this.parent).reduce(function (acc, f) {\n          return groupFields.includes(f[0]) ? [].concat(_toConsumableArray(acc), [f[1]]) : acc;\n        }, []);\n        var count = values.filter(Boolean).length;\n        var isMinOk = count >= min;\n        var isMaxOk = count <= max;\n        var isRangeOk = count >= min && count <= max;\n        var isOnlyOk = count >= min && count <= max;\n        return isOnly ? isOnlyOk : isRange ? isRangeOk : isMin ? isMinOk : isMaxOk;\n      }\n    });\n  }\n\n  return obj;\n};\n\nvar _interceptAddField = function _interceptAddField(field) {\n  var fieldsToIntercept = ['clientId', 'insuredId', 'reinsuredId']; // intercept by field ID\n\n  if (fieldsToIntercept.includes(field.name)) {\n    var fields = {\n      clientId: {\n        name: field.targetField,\n        type: 'HIDDEN_OBJECT',\n        group: 'GENERAL',\n        validation: {},\n        value: null\n      },\n      insuredId: {\n        name: field.targetField,\n        type: 'HIDDEN_OBJECT',\n        group: 'GENERAL',\n        validation: {},\n        value: null\n      },\n      reinsuredId: _objectSpread({\n        name: field.targetField,\n        type: 'HIDDEN_OBJECT',\n        group: 'GENERAL',\n        validation: {},\n        value: null\n      }, (field === null || field === void 0 ? void 0 : field.conditional) && {\n        conditional: field.conditional\n      })\n    };\n    return _objectSpread({}, fields[field.name]);\n  }\n};\n\nvar _interceptField = function _interceptField(field, dynamicOptions) {\n  var fieldsToIntercept = ['clientId', 'insuredId', 'reinsuredId']; // intercept by field ID\n\n  if (fieldsToIntercept.includes(field.name)) {\n    var fields = {\n      clientId: {\n        type: 'SELECT',\n        autocomplete: true,\n        showCreate: true,\n        options: _toConsumableArray(utils.form.getSelectOptions('clients', dynamicOptions))\n      },\n      insuredId: {\n        type: 'SELECT',\n        autocomplete: true,\n        showCreate: true,\n        options: _toConsumableArray(utils.form.getSelectOptions('insureds', dynamicOptions))\n      },\n      reinsuredId: {\n        type: 'SELECT',\n        autocomplete: true,\n        showCreate: true,\n        options: _toConsumableArray(utils.form.getSelectOptions('reinsureds', dynamicOptions))\n      }\n    };\n    return _objectSpread(_objectSpread({}, field), fields[field.name]);\n  } // intercept field if has values in fieldOptions\n\n\n  if (dynamicOptions[field.name]) {\n    var options = utils.form.getSelectOptions(field.name, dynamicOptions);\n    var type = {\n      type: 'SELECT',\n      options: (options === null || options === void 0 ? void 0 : options.length) > 0 ? options : dynamicOptions[field.name]\n    };\n    return _objectSpread(_objectSpread({}, field), type);\n  }\n\n  return field;\n}; // public\n\n\nvar utilsRisk = {\n  isArray: function isArray(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'array' && utils.generic.isValidArray(field.arrayItemDef, true);\n  },\n  isArrayColumn: function isArrayColumn(field) {\n    return field && utilsRisk.isArray(field) && field.display === 'COLUMN';\n  },\n  isArrayTable: function isArrayTable(field) {\n    return field && utilsRisk.isArray(field) && field.display !== 'COLUMN';\n  },\n  isObject: function isObject(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && ['object', 'address'].includes(type) && utils.generic.isValidArray(field.objectDef, true);\n  },\n  isBoolean: function isBoolean(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'toggle';\n  },\n  isSelect: function isSelect(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'select';\n  },\n  isAutocomplete: function isAutocomplete(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'autocomplete';\n  },\n  isAutocompleteMui: function isAutocompleteMui(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'autocompletemui';\n  },\n  isAutocompleteMuiAsync: function isAutocompleteMuiAsync(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'autocompletemuiasync';\n  },\n  isGridSpacer: function isGridSpacer(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'spacer';\n  },\n  isHiddenField: function isHiddenField(field) {\n    var type = (field && field.type || '').toLowerCase();\n    return field && type === 'hidden';\n  },\n  isTitleField: function isTitleField(field) {\n    var name = (field && field.name || '').toLowerCase();\n    return field && name === 'buildingtitle';\n  },\n  isConditionValid: function isConditionValid() {\n    var _condition$value;\n\n    var condition = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var fieldValue = arguments.length > 1 ? arguments[1] : undefined;\n    if (!condition || !has(condition, 'positive') || !has(condition, 'negative')) return;\n    var value = utils.generic.isValidObject(fieldValue) ? fieldValue === null || fieldValue === void 0 ? void 0 : fieldValue.value : fieldValue;\n    var positive = condition.positive,\n        negative = condition.negative;\n    var valueLowerCase = isString(value) || isString(condition.value) ? value === null || value === void 0 ? void 0 : value.toString().toLowerCase() : value;\n    var conditionValueLowerCase = isString(value) || isString(condition.value) ? (_condition$value = condition.value) === null || _condition$value === void 0 ? void 0 : _condition$value.toString().toLowerCase() : condition.value;\n    return Boolean(positive && valueLowerCase === conditionValueLowerCase || negative && valueLowerCase && valueLowerCase !== conditionValueLowerCase);\n  },\n  getCondition: function getCondition(field, fields) {\n    var condition = field && field.conditional || '';\n    var isNegative = isString(condition) && condition.includes('!=');\n    var isPositive = isString(condition) && !isNegative && condition.includes('=');\n    var conditionalField = isPositive ? condition.split('=')[0] : isNegative ? condition.split('!=')[0] : '';\n    var conditionalValue = isPositive ? condition.split('=')[1] : isNegative ? condition.split('!=')[1] : '';\n    if (!field || !condition || !conditionalField || !conditionalValue || !utils.generic.isValidArray(fields, true)) return;\n    var dependantField = fields.find(function (field) {\n      return field.name === conditionalField;\n    });\n    return dependantField && {\n      negative: isNegative,\n      positive: isPositive,\n      name: dependantField.name,\n      value: conditionalValue\n    };\n  },\n  countryDetail: function countryDetail(countries, country) {\n    if (!country || !utils.generic.isValidArray(countries, true)) return null;\n    return countries.find(function (c) {\n      return c.value === country || c.label === country;\n    }) || null;\n  },\n  parseFacilityLimits: function parseFacilityLimits(fieldLimits, facilityLimitFields) {\n    var newTestResult = [];\n    fieldLimits === null || fieldLimits === void 0 ? void 0 : fieldLimits.forEach(function (limitsObj) {\n      var _limitsObj$valueLimit;\n\n      limitsObj === null || limitsObj === void 0 ? void 0 : (_limitsObj$valueLimit = limitsObj.valueLimits) === null || _limitsObj$valueLimit === void 0 ? void 0 : _limitsObj$valueLimit.forEach(function (element) {\n        var _selectedObj$options;\n\n        var selectedObj = facilityLimitFields.find(function (item) {\n          return item.name === limitsObj.fieldName;\n        });\n        var res = {\n          fieldName: limitsObj.fieldName,\n          label: limitsObj === null || limitsObj === void 0 ? void 0 : limitsObj.label,\n          limitFieldOptions: selectedObj === null || selectedObj === void 0 ? void 0 : (_selectedObj$options = selectedObj.options) === null || _selectedObj$options === void 0 ? void 0 : _selectedObj$options.find(function (obj) {\n            return obj.value === element['fieldValue'];\n          }),\n          qualifier: limitsObj === null || limitsObj === void 0 ? void 0 : limitsObj.qualifier,\n          limit: element['limit'],\n          alert: element['alertRate']\n        };\n        newTestResult.push(res);\n      });\n    });\n    return newTestResult;\n  },\n  parseFields: function parseFields(fields) {\n    var dynamicOptions = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    if (!fields || !utils.generic.isValidArray(fields, true)) return [];\n    var targetFields = fields.filter(function (field) {\n      return field === null || field === void 0 ? void 0 : field.targetField;\n    }).map(function (field) {\n      return Object.assign({}, _interceptAddField(field));\n    });\n    var updatedFields = [].concat(_toConsumableArray(targetFields), _toConsumableArray(fields));\n    return updatedFields.filter(function (field) {\n      return field.type;\n    }).map(function (oldField) {\n      var field = Object.assign({}, _interceptField(oldField, dynamicOptions));\n      field.type = field.type.toLowerCase();\n      field.validationObj = field.validation;\n      field.validation = _getValidation(field, fields);\n\n      switch (field.type) {\n        case 'array':\n          field.display = field.display || 'ROW';\n          field.arrayItemDef = utilsRisk.parseFields(field.arrayItemDef, dynamicOptions);\n          break;\n\n        case 'object':\n        case 'address':\n          field.objectDef = utilsRisk.parseFields(field.objectDef, dynamicOptions);\n          break;\n\n        case 'checkbox':\n          field.value = field.value === undefined ? [] : field.value;\n          field.title = field.label === undefined ? '' : field.label;\n          delete field.label;\n          break;\n\n        case 'radio':\n          field.value = field.value === undefined ? '' : field.value;\n          field.title = field.label === undefined ? '' : field.label;\n          delete field.label;\n          break;\n\n        case 'boolean':\n          field.type = 'toggle';\n          field.value = field.value === true ? 'true' : field.value === false ? 'false' : null;\n          field.options = [{\n            label: utils.string.t('app.yes'),\n            value: 'true'\n          }, {\n            label: utils.string.t('app.no'),\n            value: 'false'\n          }];\n          field.buttonGroupProps = {\n            exclusive: true\n          };\n          break;\n\n        case 'select':\n          var isMulti = field.multi || Array.isArray(field.value);\n          field.options = _toConsumableArray(field.options || []);\n\n          if (field === null || field === void 0 ? void 0 : field.dataSource) {\n            field.type = 'selectAsync';\n          } // autocomplete (MUI by default)\n\n\n          if (field.autocomplete) {\n            field.type = 'autocompletemui';\n\n            if (field === null || field === void 0 ? void 0 : field.dataSource) {\n              field.type = 'autocompletemuiAsync';\n            }\n\n            field.value = field.value === undefined ? isMulti ? [] : null : field.options.filter(function (option) {\n              var value = Array.isArray(field.value) ? field.value : [field.value];\n              return value.includes(option.value);\n            });\n            field.muiComponentProps = {\n              multiple: isMulti\n            };\n\n            if (field === null || field === void 0 ? void 0 : field.optionsCreatable) {\n              field.muiComponentProps = {\n                multiple: isMulti,\n                filterOptions: function filterOptions(options, params) {\n                  var filtered = createFilterOptions({\n                    stringify: function stringify(option) {\n                      return \"\".concat(option.label);\n                    }\n                  })(options, params); // Suggest the creation of a new value\n\n                  if (field.optionsIsNumber) {\n                    if (params.inputValue !== '' && parseFloat(params.inputValue)) {\n                      var valueFormatted = utils.number.formatNumber(parseFloat(params.inputValue));\n                      filtered.push({\n                        value: parseFloat(params.inputValue),\n                        label: valueFormatted\n                      });\n                    }\n                  } else {\n                    if (params.inputValue !== '') {\n                      filtered.push({\n                        value: params.inputValue,\n                        label: \"\".concat(utils.string.t('app.add'), \" \\\"\").concat(params.inputValue, \"\\\"\")\n                      });\n                    }\n                  }\n\n                  return filtered;\n                },\n                renderOption: function renderOption(option) {\n                  return field.optionsIsNumber ? utils.number.formatNumber(option.label) : option.label;\n                },\n                getOptionLabel: function getOptionLabel(option) {\n                  return field.optionsIsNumber ? utils.number.formatNumber(option.label) : option.label;\n                }\n              };\n            } // select\n\n          } else {\n            field.multi = isMulti;\n            field.value = field.value === undefined ? isMulti ? ['__placeholder__'] : '__placeholder__' : field.value;\n\n            if (!field.options.some(function (o) {\n              return o.value === '__placeholder__';\n            })) {\n              field.options.unshift({\n                label: utils.string.t('risks.select'),\n                value: '__placeholder__',\n                placeholder: true\n              });\n            }\n\n            if (isMulti) {\n              field.muiComponentProps = _objectSpread(_objectSpread({}, field.muiComponentProp), {}, {\n                multiple: true\n              });\n            }\n          }\n\n          delete field.autocomplete;\n          delete field.multi;\n          break;\n\n        case 'date':\n        case 'datepicker':\n          field.value = field.value === undefined ? null : field.value;\n          field.type = 'datepicker';\n          field.outputFormat = 'iso';\n          field.muiComponentProps = {\n            fullWidth: true\n          };\n          field.muiPickerProps = {\n            clearable: true\n          };\n          delete field.datepicker;\n          break;\n\n        case 'integer':\n        case 'double':\n          field.type = 'number';\n          field.value = field.value === undefined ? '' : field.value;\n\n          if (field.step) {\n            field.muiComponentProps = {\n              inputProps: {\n                step: field.step\n              }\n            };\n            delete field.step;\n          }\n\n          break;\n\n        case 'text':\n          field.value = field.value === undefined ? '' : field.value;\n\n          if (field.display === 'MULTI') {\n            field.muiComponentProps = {\n              multiline: true,\n              minRows: 3,\n              maxRows: 6\n            };\n            delete field.display;\n          }\n\n          break;\n\n        default:\n          field.value = field.value === undefined ? '' : field.value;\n      }\n\n      return field;\n    });\n  },\n  getRiskName: function getRiskName(riskType, products) {\n    // abort\n    if (!riskType || !utils.generic.isValidArray(products)) return '';\n    var risk = products.find(function (p) {\n      return p.value === riskType;\n    });\n    return (risk === null || risk === void 0 ? void 0 : risk.label) ? risk.label : '';\n  },\n  getGroups: function getGroups(fields) {\n    // abort\n    if (!utils.generic.isValidArray(fields)) return {};\n    return groupBy(fields.filter(function (field) {\n      return field.group && typeof field.group === 'string';\n    }), 'group');\n  },\n  getGroupsTitle: function getGroupsTitle(fields) {\n    // abort\n    if (!utils.generic.isValidArray(fields)) return {};\n    return _toConsumableArray(new Set(fields.map(function (field) {\n      return field.group && typeof field.group === 'string' ? field.group : null;\n    })));\n  },\n  getFieldsByGroup: function getFieldsByGroup(fields, group) {\n    // abort\n    if (!utils.generic.isValidArray(fields) || !group || typeof group !== 'string') return [];\n    return fields.filter(function (field) {\n      return field.group === group;\n    });\n  },\n  getPartyValues: function getPartyValues(key, options, value) {\n    // abort\n    if (!key || !options || !value) return;\n\n    if (Array.isArray(value)) {\n      return value.map(function (val) {\n        var optionValue = utils.form.getSelectOption(key, options, val);\n        return {\n          id: val,\n          name: optionValue\n        };\n      });\n    } else {\n      var optionValue = utils.form.getSelectOption(key, options, value);\n      return [{\n        id: value,\n        name: optionValue\n      }];\n    }\n  },\n  getInsuredCountry: function getInsuredCountry(address, countries) {\n    // abort\n    if (!address || !address.country) return '';\n    var countryKey = get(address, 'country', '');\n    var countryObj = countryKey && utils.generic.isValidArray(countries, true) && countries.find(function (c) {\n      return c.value === countryKey;\n    });\n    return countryObj ? countryObj.label || '' : '';\n  },\n  getInsuredAddress: function getInsuredAddress(insured, countries) {\n    // abort\n    if (!insured) return '';\n    var addressArray = [get(insured, 'address.street', ''), get(insured, 'address.city', ''), get(insured, 'address.zipCode', ''), get(insured, 'address.county', ''), get(insured, 'address.state', ''), utilsRisk.getInsuredCountry(insured.address, countries)].filter(Boolean);\n    return addressArray.join(', ');\n  },\n  getDefByName: function getDefByName(name, defs) {\n    return defs.find(function (d) {\n      return d.name === name;\n    });\n  },\n  filterConditionalValues: function filterConditionalValues(objValues, defs, isArr) {\n    return Object.keys(objValues).reduce(function (acc, key) {\n      var field = utilsRisk.getDefByName(key, defs);\n      var isArray = utilsRisk.isArray(field);\n      var isObject = utilsRisk.isObject(field);\n      var condition = utilsRisk.getCondition(field, defs);\n      var refValueCondition = condition && get(objValues, \"\".concat(condition.name));\n      var isConditionValid = condition && utilsRisk.isConditionValid(condition, refValueCondition);\n      var returnedValue = objValues[key];\n\n      if (isArray) {\n        var _objValues$key;\n\n        returnedValue = (_objValues$key = objValues[key]) === null || _objValues$key === void 0 ? void 0 : _objValues$key.map(function (arrayValues) {\n          return utilsRisk.filterConditionalValues(arrayValues, utilsRisk.getDefByName(key, defs).arrayItemDef);\n        });\n      } else if (isObject) {\n        returnedValue = utilsRisk.filterConditionalValues(objValues[key], utilsRisk.getDefByName(key, defs).objectDef);\n      }\n\n      return _objectSpread(_objectSpread({}, acc), (!condition || isConditionValid) && _defineProperty({}, key, returnedValue));\n    }, {});\n  },\n  parsedValues: function parsedValues(valueObj, defs) {\n    return Object.entries(valueObj).reduce(function (acc, item) {\n      var key = item[0];\n      var value = item[1];\n      var field = utilsRisk.getDefByName(key, defs); // select\n\n      if (utils.risk.isSelect(field)) {\n        if (utils.generic.isValidArray(value)) {\n          value = value.filter(function (v) {\n            return v !== '__placeholder__';\n          });\n        } else {\n          value = value === '__placeholder__' ? null : value;\n        }\n      } // autocomplete\n\n\n      if (utils.risk.isAutocomplete(field) || utils.risk.isAutocompleteMui(field) || utils.risk.isAutocompleteMuiAsync(field)) {\n        if (utils.generic.isValidArray(value)) {\n          // this changes the autocomplete multiple values from array of objects to an array of string\n          // before --> [{ label:'SPAIN', value:'ES' }, { label:'France', value:'FR' }]\n          // after  --> [ 'ES', 'FR' ]\n          value = value.map(function (obj) {\n            return utils.generic.isObjectKeysIdentical(['label', 'value'], obj) ? obj.value : obj;\n          });\n        } else if (utils.generic.isValidObject(value, 'value')) {\n          // this changes the autocomplete single option from an object to a string\n          // before --> { label:'SPAIN', value:'ES' }\n          // after  --> 'ES'\n          value = value.value;\n        }\n      } // array\n      else if (utilsRisk.isArray(field) && utils.generic.isValidArray(value)) {\n          value = value.map(function (obj, index) {\n            var defTitle = (field === null || field === void 0 ? void 0 : field.itemTitle) && field.itemTitleField ? \"\".concat(field.itemTitle, \" \").concat(index + 1) : null;\n            return _objectSpread(_objectSpread({}, utilsRisk.parsedValues(obj, field.arrayItemDef)), defTitle && _defineProperty({}, field === null || field === void 0 ? void 0 : field.itemTitleField, defTitle));\n          });\n        } // object\n        else if (utilsRisk.isObject(field) && utils.generic.isValidObject(value)) {\n            value = utilsRisk.parsedValues(value, field.objectDef);\n          } // boolean\n          else if (utilsRisk.isBoolean(field)) {\n              value = value === 'true' || value === true;\n            }\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, value));\n    }, {});\n  },\n  parsedGraphValues: function parsedGraphValues(valueLimits) {\n    if ((valueLimits === null || valueLimits === void 0 ? void 0 : valueLimits.length) > 0) {\n      var validLimits = valueLimits === null || valueLimits === void 0 ? void 0 : valueLimits.filter(function (item) {\n        return item.facilityLimit !== null;\n      }).sort(function (a, b) {\n        return a.label > b.label ? 1 : b.label > a.label ? -1 : 0;\n      });\n      var invalidLimits = valueLimits === null || valueLimits === void 0 ? void 0 : valueLimits.filter(function (item) {\n        return item.facilityLimit === null;\n      }).sort(function (a, b) {\n        return a.label > b.label ? 1 : b.label > a.label ? -1 : 0;\n      });\n      return [].concat(_toConsumableArray(validLimits), _toConsumableArray(invalidLimits));\n    }\n\n    return [];\n  }\n};\nexport default utilsRisk;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/risk/risk.js"],"names":["utils","Yup","get","has","xor","groupBy","isString","isEmpty","createFilterOptions","_getValidation","field","allFields","validateRequired","validation","yupValidation","mixed","_validationType","_validationMinMax","_validationFormatting","_validationRequired","obj","type","toLowerCase","allowedTypes","generic","isValidObject","includes","string","nullable","min","max","transform","value","undefined","autocomplete","multi","array","of","object","notOneOf","t","step","number","multiple","originalvalue","isType","Number","isNaN","isValidArray","options","length","objectDef","fieldsWithValidation","reduce","acc","def","shape","Object","assign","name","arrayItemDef","fieldsName","map","when","is","rest","some","Boolean","then","otherwise","tuples","_type","hasMin","hasMax","date","integer","text","textarea","select","radio","checkbox","count","isRequired","group","isMin","isMax","isRange","isOnly","required","test","message","thisField","parent","filter","v","conditional","condition","risk","getCondition","dependantField","isValid","isConditionValid","conditionalField","groupFields","f","exclusive","params","values","entries","isMinOk","isMaxOk","isRangeOk","isOnlyOk","_interceptAddField","fieldsToIntercept","fields","clientId","targetField","insuredId","reinsuredId","_interceptField","dynamicOptions","showCreate","form","getSelectOptions","utilsRisk","isArray","isArrayColumn","display","isArrayTable","isObject","isBoolean","isSelect","isAutocomplete","isAutocompleteMui","isAutocompleteMuiAsync","isGridSpacer","isHiddenField","isTitleField","fieldValue","positive","negative","valueLowerCase","toString","conditionValueLowerCase","isNegative","isPositive","split","conditionalValue","find","countryDetail","countries","country","c","label","parseFacilityLimits","fieldLimits","facilityLimitFields","newTestResult","forEach","limitsObj","valueLimits","element","selectedObj","item","fieldName","res","limitFieldOptions","qualifier","limit","alert","push","parseFields","targetFields","updatedFields","oldField","validationObj","title","buttonGroupProps","isMulti","Array","dataSource","option","muiComponentProps","optionsCreatable","filterOptions","filtered","stringify","optionsIsNumber","inputValue","parseFloat","valueFormatted","formatNumber","renderOption","getOptionLabel","o","unshift","placeholder","muiComponentProp","outputFormat","fullWidth","muiPickerProps","clearable","datepicker","inputProps","multiline","minRows","maxRows","getRiskName","riskType","products","p","getGroups","getGroupsTitle","Set","getFieldsByGroup","getPartyValues","key","val","optionValue","getSelectOption","id","getInsuredCountry","address","countryKey","countryObj","getInsuredAddress","insured","addressArray","join","getDefByName","defs","d","filterConditionalValues","objValues","isArr","keys","refValueCondition","returnedValue","arrayValues","parsedValues","valueObj","isObjectKeysIdentical","index","defTitle","itemTitle","itemTitleField","parsedGraphValues","validLimits","facilityLimit","sort","a","b","invalidLimits"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\nimport has from 'lodash/has';\r\nimport xor from 'lodash/xor';\r\nimport groupBy from 'lodash/groupBy';\r\nimport isString from 'lodash/isString';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\n// private\r\nexport const _getValidation = (field, allFields, validateRequired = true) => {\r\n  // abort\r\n  if (!field || !field.validation) return;\r\n\r\n  let yupValidation = Yup.mixed();\r\n\r\n  yupValidation = _validationType(yupValidation, field);\r\n  yupValidation = _validationMinMax(yupValidation, field);\r\n  yupValidation = _validationFormatting(yupValidation, field);\r\n\r\n  if (validateRequired) {\r\n    yupValidation = _validationRequired(yupValidation, field, allFields);\r\n  }\r\n\r\n  return yupValidation;\r\n};\r\n\r\nexport const _validationType = (obj, field) => {\r\n  const type = field && field.type ? field.type.toLowerCase() : '';\r\n\r\n  const allowedTypes = [\r\n    'text',\r\n    'textarea',\r\n    'date',\r\n    'datepicker',\r\n    'select',\r\n    'autocomplete',\r\n    'integer',\r\n    'double',\r\n    'checkbox',\r\n    'radio',\r\n    'boolean',\r\n  ];\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(obj)) return {};\r\n\r\n  if (['date'].includes(type)) {\r\n    obj = Yup.string().nullable();\r\n  }\r\n\r\n  if (['text', 'textarea'].includes(type)) {\r\n    obj = Yup.string().nullable();\r\n\r\n    // prevent the min/max validation to appear if field is NOT dirty\r\n    if (field.validation && (field.validation.min || field.validation.max)) {\r\n      obj = obj.transform((value) => (value === '' ? undefined : value));\r\n    }\r\n  }\r\n\r\n  if (['select'].includes(type)) {\r\n    if (field.autocomplete) {\r\n      obj = field.multi ? Yup.array().of(Yup.object()) : Yup.object().nullable();\r\n    } else {\r\n      obj = field.multi ? Yup.array().of(Yup.mixed()) : Yup.string().nullable();\r\n      obj = obj.notOneOf(['__placeholder__'], utils.string.t('validation.required'));\r\n    }\r\n  }\r\n\r\n  if (['integer', 'double'].includes(type)) {\r\n    obj = field.step\r\n      ? Yup.number()\r\n          .nullable()\r\n          .multiple(field.step)\r\n          .transform(function (value, originalvalue) {\r\n            return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n          })\r\n      : Yup.number()\r\n          .nullable()\r\n          .transform(function (value, originalvalue) {\r\n            return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n          });\r\n  }\r\n\r\n  if (['checkbox'].includes(type)) {\r\n    if (utils.generic.isValidArray(field.options) && field.options.length >= 2) {\r\n      obj = Yup.array();\r\n    } else {\r\n      obj = Yup.mixed();\r\n    }\r\n  }\r\n\r\n  if (['radio'].includes(type)) {\r\n    obj = Yup.string();\r\n  }\r\n\r\n  if (['toggle'].includes(type)) {\r\n    obj = Yup.boolean();\r\n  }\r\n\r\n  if (['object', 'address'].includes(type)) {\r\n    if (!utils.generic.isValidArray(field.objectDef, true)) return obj;\r\n\r\n    const fieldsWithValidation = field.objectDef.reduce((acc, def) => {\r\n      return def.validation && !isEmpty(def.validation) ? [...acc, def] : acc;\r\n    }, []);\r\n\r\n    obj = Yup.object().shape(\r\n      fieldsWithValidation.reduce((acc, def) => {\r\n        const type = def.type ? def.type.toLowerCase() : '';\r\n\r\n        // skip if type isn't allowed\r\n        if (!allowedTypes.includes(type)) return acc;\r\n\r\n        return Object.assign(acc, {\r\n          [def.name]: _getValidation(def),\r\n        });\r\n      }, {})\r\n    );\r\n  }\r\n\r\n  if (['array'].includes(type)) {\r\n    if (!utils.generic.isValidArray(field.arrayItemDef, true)) return Yup.array();\r\n\r\n    const fieldsWithValidation = field.arrayItemDef.reduce((acc, def) => {\r\n      return def.validation && !isEmpty(def.validation) ? [...acc, def] : acc;\r\n    }, []);\r\n\r\n    const fieldsName = fieldsWithValidation.map((def) => def.name);\r\n\r\n    obj = Yup.array().of(\r\n      Yup.object().shape(\r\n        fieldsWithValidation.reduce((acc, def) => {\r\n          const type = def.type ? def.type.toLowerCase() : '';\r\n\r\n          // skip if type isn't allowed\r\n          if (!allowedTypes.includes(type)) return acc;\r\n\r\n          return Object.assign(acc, {\r\n            [def.name]: Yup.mixed().when(xor(fieldsName, [def.name]), {\r\n              is: (...rest) => rest.some(Boolean),\r\n              then: _getValidation(def),\r\n              otherwise: _getValidation(def, null, false),\r\n            }),\r\n          });\r\n        }, {}),\r\n        utils.generic.tuples(fieldsName)\r\n      )\r\n    );\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nexport const _validationMinMax = (obj, field) => {\r\n  const type = field && field.type && field.type.toLowerCase();\r\n\r\n  // abort\r\n  if (!obj || !utils.generic.isValidObject(obj)) return;\r\n  if (!field || !type || !field.validation || !(field.validation.min || field.validation.max)) return obj;\r\n\r\n  // abort for Yup types that don't support min/max\r\n  if (!['string', 'date', 'number', 'array'].includes(obj._type)) return obj;\r\n\r\n  // abort if field type is radio (only 1 option selectable)\r\n  if (type === 'radio') return obj;\r\n\r\n  const hasMin = has(field, 'validation.min');\r\n  const hasMax = has(field, 'validation.max');\r\n  const min = get(field, 'validation.min');\r\n  const max = get(field, 'validation.max');\r\n\r\n  const map = {\r\n    date: 'date',\r\n    integer: 'number',\r\n    double: 'number',\r\n    text: 'string',\r\n    textarea: 'string',\r\n    select: 'options',\r\n    radio: 'options',\r\n    checkbox: 'options',\r\n  };\r\n\r\n  // we prevent min/max validation if select/autocomplete field isn't supporting multiple options\r\n  if (['select'].includes(type)) {\r\n    if (!field.multi) {\r\n      return obj;\r\n    }\r\n  }\r\n\r\n  // if min/max are the same value, show special error message\r\n  if (hasMin && hasMax && min === max) {\r\n    obj = obj\r\n      .min(min, utils.string.t(`validation.${map[type]}.exactly`, { count: min }))\r\n      .max(max, utils.string.t(`validation.${map[type]}.exactly`, { count: max }));\r\n  } else {\r\n    obj = hasMin ? obj.min(min, utils.string.t(`validation.${map[type]}.min`)) : obj;\r\n    obj = hasMax ? obj.max(max, utils.string.t(`validation.${map[type]}.max`)) : obj;\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nexport const _validationFormatting = (obj, field) => {\r\n  const type = field && field.type && field.type.toLowerCase();\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(obj)) return {};\r\n  if (!field || !type) return obj;\r\n\r\n  if (type === 'integer') {\r\n    return obj.integer();\r\n  } else {\r\n    return obj;\r\n  }\r\n};\r\n\r\nexport const _validationRequired = (obj, field, allFields) => {\r\n  const type = field && field.type && field.type.toLowerCase();\r\n  const validation = field && field.validation;\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(obj)) return {};\r\n  if (!field || !type || !validation || (allFields && !utils.generic.isValidArray(allFields, true))) return obj;\r\n\r\n  const isRequired = get(field, 'validation.required');\r\n  const group = get(field, 'validation.group.name');\r\n  const min = get(field, 'validation.group.min');\r\n  const max = get(field, 'validation.group.max');\r\n  const isMin = min && min > 0;\r\n  const isMax = max && max > 0;\r\n  const isRange = isMin && isMax;\r\n  const isOnly = isMin && isMax && min === max;\r\n\r\n  // distance to coast\r\n  if (field.name === 'distanceToCoast' && isRequired === true) {\r\n    return obj.required(utils.string.t('risks.address.distanceToCoastRequired'));\r\n  }\r\n\r\n  // select multi required\r\n  if (isRequired && type === 'select' && field.multi) {\r\n    return obj.test({\r\n      name: 'select-required-placeholder',\r\n      message: utils.string.t('validation.required'),\r\n      test: function () {\r\n        const thisField = this.parent[field.name];\r\n\r\n        if (utils.generic.isValidArray(thisField)) {\r\n          return thisField.filter((v) => v !== '__placeholder__').length > 0;\r\n        }\r\n\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  // conditional field with validation\r\n  if (isRequired === true && field.conditional) {\r\n    const condition = utils.risk.getCondition(field, allFields);\r\n\r\n    return obj.test({\r\n      name: 'conditional-with-required',\r\n      message: utils.string.t('validation.required'),\r\n      test: function () {\r\n        const thisField = this.parent[field.name];\r\n        const dependantField = this.parent[condition.name];\r\n        const isValid = utils.risk.isConditionValid(condition, dependantField);\r\n\r\n        if (isValid) {\r\n          return thisField;\r\n        }\r\n\r\n        return true;\r\n      },\r\n    });\r\n  }\r\n\r\n  // normal required\r\n  if (isRequired === true) {\r\n    return obj.required(field?.validation?.message ? field.validation.message : utils.string.t('validation.required'));\r\n  }\r\n\r\n  // required only if another field has a value\r\n  if (isRequired && typeof isRequired === 'string') {\r\n    return obj.test({\r\n      name: 'is-conditional-field',\r\n      message: utils.string.t('validation.required'),\r\n      test: function () {\r\n        const thisField = this.parent[field.name];\r\n        const conditionalField = this.parent[isRequired];\r\n\r\n        return !conditionalField || (conditionalField && thisField);\r\n      },\r\n    });\r\n  }\r\n\r\n  // required (min/max) for a group of related fields\r\n  if (group && (isMin || isMax)) {\r\n    const groupFields = allFields.filter((f) => get(f, 'validation.group.name') === group).map((f) => f.name);\r\n\r\n    return obj.test({\r\n      name: 'is-conditional-group',\r\n      exclusive: false,\r\n      params: {},\r\n      message: isOnly\r\n        ? utils.string.t('risks.validation.group.only', { min, group })\r\n        : isRange\r\n        ? utils.string.t('risks.validation.group.range', { min, max, group })\r\n        : isMin\r\n        ? utils.string.t('risks.validation.group.min', { min, group })\r\n        : utils.string.t('risks.validation.group.max', { max, group }),\r\n      test: function () {\r\n        const values = Object.entries(this.parent).reduce((acc, f) => {\r\n          return groupFields.includes(f[0]) ? [...acc, f[1]] : acc;\r\n        }, []);\r\n\r\n        const count = values.filter(Boolean).length;\r\n        const isMinOk = count >= min;\r\n        const isMaxOk = count <= max;\r\n        const isRangeOk = count >= min && count <= max;\r\n        const isOnlyOk = count >= min && count <= max;\r\n\r\n        return isOnly ? isOnlyOk : isRange ? isRangeOk : isMin ? isMinOk : isMaxOk;\r\n      },\r\n    });\r\n  }\r\n\r\n  return obj;\r\n};\r\n\r\nconst _interceptAddField = (field) => {\r\n  const fieldsToIntercept = ['clientId', 'insuredId', 'reinsuredId'];\r\n\r\n  // intercept by field ID\r\n  if (fieldsToIntercept.includes(field.name)) {\r\n    const fields = {\r\n      clientId: {\r\n        name: field.targetField,\r\n        type: 'HIDDEN_OBJECT',\r\n        group: 'GENERAL',\r\n        validation: {},\r\n        value: null,\r\n      },\r\n      insuredId: {\r\n        name: field.targetField,\r\n        type: 'HIDDEN_OBJECT',\r\n        group: 'GENERAL',\r\n        validation: {},\r\n        value: null,\r\n      },\r\n      reinsuredId: {\r\n        name: field.targetField,\r\n        type: 'HIDDEN_OBJECT',\r\n        group: 'GENERAL',\r\n        validation: {},\r\n        value: null,\r\n        ...(field?.conditional && { conditional: field.conditional }),\r\n      },\r\n    };\r\n\r\n    return { ...fields[field.name] };\r\n  }\r\n};\r\nconst _interceptField = (field, dynamicOptions) => {\r\n  const fieldsToIntercept = ['clientId', 'insuredId', 'reinsuredId'];\r\n\r\n  // intercept by field ID\r\n  if (fieldsToIntercept.includes(field.name)) {\r\n    const fields = {\r\n      clientId: {\r\n        type: 'SELECT',\r\n        autocomplete: true,\r\n        showCreate: true,\r\n        options: [...utils.form.getSelectOptions('clients', dynamicOptions)],\r\n      },\r\n      insuredId: {\r\n        type: 'SELECT',\r\n        autocomplete: true,\r\n        showCreate: true,\r\n        options: [...utils.form.getSelectOptions('insureds', dynamicOptions)],\r\n      },\r\n      reinsuredId: {\r\n        type: 'SELECT',\r\n        autocomplete: true,\r\n        showCreate: true,\r\n        options: [...utils.form.getSelectOptions('reinsureds', dynamicOptions)],\r\n      },\r\n    };\r\n\r\n    return { ...field, ...fields[field.name] };\r\n  }\r\n\r\n  // intercept field if has values in fieldOptions\r\n  if (dynamicOptions[field.name]) {\r\n    const options = utils.form.getSelectOptions(field.name, dynamicOptions);\r\n    const type = {\r\n      type: 'SELECT',\r\n      options: options?.length > 0 ? options : dynamicOptions[field.name],\r\n    };\r\n\r\n    return { ...field, ...type };\r\n  }\r\n\r\n  return field;\r\n};\r\n\r\n// public\r\nconst utilsRisk = {\r\n  isArray: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'array' && utils.generic.isValidArray(field.arrayItemDef, true);\r\n  },\r\n\r\n  isArrayColumn: (field) => {\r\n    return field && utilsRisk.isArray(field) && field.display === 'COLUMN';\r\n  },\r\n\r\n  isArrayTable: (field) => {\r\n    return field && utilsRisk.isArray(field) && field.display !== 'COLUMN';\r\n  },\r\n\r\n  isObject: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && ['object', 'address'].includes(type) && utils.generic.isValidArray(field.objectDef, true);\r\n  },\r\n\r\n  isBoolean: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'toggle';\r\n  },\r\n\r\n  isSelect: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'select';\r\n  },\r\n\r\n  isAutocomplete: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'autocomplete';\r\n  },\r\n\r\n  isAutocompleteMui: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'autocompletemui';\r\n  },\r\n\r\n  isAutocompleteMuiAsync: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'autocompletemuiasync';\r\n  },\r\n\r\n  isGridSpacer: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'spacer';\r\n  },\r\n\r\n  isHiddenField: (field) => {\r\n    const type = ((field && field.type) || '').toLowerCase();\r\n    return field && type === 'hidden';\r\n  },\r\n\r\n  isTitleField: (field) => {\r\n    const name = ((field && field.name) || '').toLowerCase();\r\n    return field && name === 'buildingtitle';\r\n  },\r\n\r\n  isConditionValid: (condition = {}, fieldValue) => {\r\n    if (!condition || !has(condition, 'positive') || !has(condition, 'negative')) return;\r\n\r\n    const value = utils.generic.isValidObject(fieldValue) ? fieldValue?.value : fieldValue;\r\n\r\n    const { positive, negative } = condition;\r\n    const valueLowerCase = isString(value) || isString(condition.value) ? value?.toString().toLowerCase() : value;\r\n    const conditionValueLowerCase =\r\n      isString(value) || isString(condition.value) ? condition.value?.toString().toLowerCase() : condition.value;\r\n\r\n    return Boolean(\r\n      (positive && valueLowerCase === conditionValueLowerCase) || (negative && valueLowerCase && valueLowerCase !== conditionValueLowerCase)\r\n    );\r\n  },\r\n\r\n  getCondition: (field, fields) => {\r\n    const condition = (field && field.conditional) || '';\r\n    const isNegative = isString(condition) && condition.includes('!=');\r\n    const isPositive = isString(condition) && !isNegative && condition.includes('=');\r\n    const conditionalField = isPositive ? condition.split('=')[0] : isNegative ? condition.split('!=')[0] : '';\r\n    const conditionalValue = isPositive ? condition.split('=')[1] : isNegative ? condition.split('!=')[1] : '';\r\n\r\n    if (!field || !condition || !conditionalField || !conditionalValue || !utils.generic.isValidArray(fields, true)) return;\r\n\r\n    const dependantField = fields.find((field) => field.name === conditionalField);\r\n\r\n    return (\r\n      dependantField && {\r\n        negative: isNegative,\r\n        positive: isPositive,\r\n        name: dependantField.name,\r\n        value: conditionalValue,\r\n      }\r\n    );\r\n  },\r\n\r\n  countryDetail: (countries, country) => {\r\n    if (!country || !utils.generic.isValidArray(countries, true)) return null;\r\n\r\n    return countries.find((c) => c.value === country || c.label === country) || null;\r\n  },\r\n\r\n  parseFacilityLimits: (fieldLimits, facilityLimitFields) => {\r\n    let newTestResult = [];\r\n\r\n    fieldLimits?.forEach((limitsObj) => {\r\n      limitsObj?.valueLimits?.forEach((element) => {\r\n        const selectedObj = facilityLimitFields.find((item) => item.name === limitsObj.fieldName);\r\n        const res = {\r\n          fieldName: limitsObj.fieldName,\r\n          label: limitsObj?.label,\r\n          limitFieldOptions: selectedObj?.options?.find((obj) => obj.value === element['fieldValue']),\r\n          qualifier: limitsObj?.qualifier,\r\n          limit: element['limit'],\r\n          alert: element['alertRate'],\r\n        };\r\n        newTestResult.push(res);\r\n      });\r\n    });\r\n    return newTestResult;\r\n  },\r\n\r\n  parseFields: (fields, dynamicOptions = {}) => {\r\n    if (!fields || !utils.generic.isValidArray(fields, true)) return [];\r\n\r\n    const targetFields = fields.filter((field) => field?.targetField).map((field) => Object.assign({}, _interceptAddField(field)));\r\n\r\n    const updatedFields = [...targetFields, ...fields];\r\n\r\n    return updatedFields\r\n      .filter((field) => field.type)\r\n      .map((oldField) => {\r\n        const field = Object.assign({}, _interceptField(oldField, dynamicOptions));\r\n\r\n        field.type = field.type.toLowerCase();\r\n        field.validationObj = field.validation;\r\n        field.validation = _getValidation(field, fields);\r\n\r\n        switch (field.type) {\r\n          case 'array':\r\n            field.display = field.display || 'ROW';\r\n            field.arrayItemDef = utilsRisk.parseFields(field.arrayItemDef, dynamicOptions);\r\n            break;\r\n\r\n          case 'object':\r\n          case 'address':\r\n            field.objectDef = utilsRisk.parseFields(field.objectDef, dynamicOptions);\r\n            break;\r\n\r\n          case 'checkbox':\r\n            field.value = field.value === undefined ? [] : field.value;\r\n            field.title = field.label === undefined ? '' : field.label;\r\n            delete field.label;\r\n            break;\r\n\r\n          case 'radio':\r\n            field.value = field.value === undefined ? '' : field.value;\r\n            field.title = field.label === undefined ? '' : field.label;\r\n            delete field.label;\r\n            break;\r\n\r\n          case 'boolean':\r\n            field.type = 'toggle';\r\n            field.value = field.value === true ? 'true' : field.value === false ? 'false' : null;\r\n            field.options = [\r\n              { label: utils.string.t('app.yes'), value: 'true' },\r\n              { label: utils.string.t('app.no'), value: 'false' },\r\n            ];\r\n            field.buttonGroupProps = { exclusive: true };\r\n            break;\r\n\r\n          case 'select':\r\n            const isMulti = field.multi || Array.isArray(field.value);\r\n            field.options = [...(field.options || [])];\r\n            if (field?.dataSource) {\r\n              field.type = 'selectAsync';\r\n            }\r\n            // autocomplete (MUI by default)\r\n            if (field.autocomplete) {\r\n              field.type = 'autocompletemui';\r\n              if (field?.dataSource) {\r\n                field.type = 'autocompletemuiAsync';\r\n              }\r\n              field.value =\r\n                field.value === undefined\r\n                  ? isMulti\r\n                    ? []\r\n                    : null\r\n                  : field.options.filter((option) => {\r\n                      const value = Array.isArray(field.value) ? field.value : [field.value];\r\n\r\n                      return value.includes(option.value);\r\n                    });\r\n\r\n              field.muiComponentProps = {\r\n                multiple: isMulti,\r\n              };\r\n\r\n              if (field?.optionsCreatable) {\r\n                field.muiComponentProps = {\r\n                  multiple: isMulti,\r\n                  filterOptions: (options, params) => {\r\n                    const filtered = createFilterOptions({\r\n                      stringify: (option) => `${option.label}`,\r\n                    })(options, params);\r\n\r\n                    // Suggest the creation of a new value\r\n                    if (field.optionsIsNumber) {\r\n                      if (params.inputValue !== '' && parseFloat(params.inputValue)) {\r\n                        const valueFormatted = utils.number.formatNumber(parseFloat(params.inputValue));\r\n                        filtered.push({\r\n                          value: parseFloat(params.inputValue),\r\n                          label: valueFormatted,\r\n                        });\r\n                      }\r\n                    } else {\r\n                      if (params.inputValue !== '') {\r\n                        filtered.push({\r\n                          value: params.inputValue,\r\n                          label: `${utils.string.t('app.add')} \"${params.inputValue}\"`,\r\n                        });\r\n                      }\r\n                    }\r\n\r\n                    return filtered;\r\n                  },\r\n                  renderOption: (option) => (field.optionsIsNumber ? utils.number.formatNumber(option.label) : option.label),\r\n                  getOptionLabel: (option) => (field.optionsIsNumber ? utils.number.formatNumber(option.label) : option.label),\r\n                };\r\n              }\r\n\r\n              // select\r\n            } else {\r\n              field.multi = isMulti;\r\n              field.value = field.value === undefined ? (isMulti ? ['__placeholder__'] : '__placeholder__') : field.value;\r\n\r\n              if (!field.options.some((o) => o.value === '__placeholder__')) {\r\n                field.options.unshift({\r\n                  label: utils.string.t('risks.select'),\r\n                  value: '__placeholder__',\r\n                  placeholder: true,\r\n                });\r\n              }\r\n\r\n              if (isMulti) {\r\n                field.muiComponentProps = {\r\n                  ...field.muiComponentProp,\r\n                  multiple: true,\r\n                };\r\n              }\r\n            }\r\n\r\n            delete field.autocomplete;\r\n            delete field.multi;\r\n            break;\r\n\r\n          case 'date':\r\n          case 'datepicker':\r\n            field.value = field.value === undefined ? null : field.value;\r\n            field.type = 'datepicker';\r\n            field.outputFormat = 'iso';\r\n            field.muiComponentProps = {\r\n              fullWidth: true,\r\n            };\r\n            field.muiPickerProps = {\r\n              clearable: true,\r\n            };\r\n            delete field.datepicker;\r\n            break;\r\n\r\n          case 'integer':\r\n          case 'double':\r\n            field.type = 'number';\r\n            field.value = field.value === undefined ? '' : field.value;\r\n            if (field.step) {\r\n              field.muiComponentProps = {\r\n                inputProps: {\r\n                  step: field.step,\r\n                },\r\n              };\r\n              delete field.step;\r\n            }\r\n            break;\r\n\r\n          case 'text':\r\n            field.value = field.value === undefined ? '' : field.value;\r\n            if (field.display === 'MULTI') {\r\n              field.muiComponentProps = {\r\n                multiline: true,\r\n                minRows: 3,\r\n                maxRows: 6,\r\n              };\r\n              delete field.display;\r\n            }\r\n            break;\r\n\r\n          default:\r\n            field.value = field.value === undefined ? '' : field.value;\r\n        }\r\n\r\n        return field;\r\n      });\r\n  },\r\n\r\n  getRiskName: (riskType, products) => {\r\n    // abort\r\n    if (!riskType || !utils.generic.isValidArray(products)) return '';\r\n\r\n    const risk = products.find((p) => p.value === riskType);\r\n    return risk?.label ? risk.label : '';\r\n  },\r\n\r\n  getGroups: (fields) => {\r\n    // abort\r\n    if (!utils.generic.isValidArray(fields)) return {};\r\n\r\n    return groupBy(\r\n      fields.filter((field) => {\r\n        return field.group && typeof field.group === 'string';\r\n      }),\r\n      'group'\r\n    );\r\n  },\r\n\r\n  getGroupsTitle: (fields) => {\r\n    // abort\r\n    if (!utils.generic.isValidArray(fields)) return {};\r\n\r\n    return [...new Set(fields.map((field) => (field.group && typeof field.group === 'string' ? field.group : null)))];\r\n  },\r\n  getFieldsByGroup: (fields, group) => {\r\n    // abort\r\n    if (!utils.generic.isValidArray(fields) || !group || typeof group !== 'string') return [];\r\n\r\n    return fields.filter((field) => field.group === group);\r\n  },\r\n\r\n  getPartyValues: (key, options, value) => {\r\n    // abort\r\n    if (!key || !options || !value) return;\r\n\r\n    if (Array.isArray(value)) {\r\n      return value.map((val) => {\r\n        const optionValue = utils.form.getSelectOption(key, options, val);\r\n        return { id: val, name: optionValue };\r\n      });\r\n    } else {\r\n      const optionValue = utils.form.getSelectOption(key, options, value);\r\n      return [{ id: value, name: optionValue }];\r\n    }\r\n  },\r\n\r\n  getInsuredCountry: (address, countries) => {\r\n    // abort\r\n    if (!address || !address.country) return '';\r\n\r\n    const countryKey = get(address, 'country', '');\r\n    const countryObj = countryKey && utils.generic.isValidArray(countries, true) && countries.find((c) => c.value === countryKey);\r\n    return countryObj ? countryObj.label || '' : '';\r\n  },\r\n\r\n  getInsuredAddress: (insured, countries) => {\r\n    // abort\r\n    if (!insured) return '';\r\n\r\n    const addressArray = [\r\n      get(insured, 'address.street', ''),\r\n      get(insured, 'address.city', ''),\r\n      get(insured, 'address.zipCode', ''),\r\n      get(insured, 'address.county', ''),\r\n      get(insured, 'address.state', ''),\r\n      utilsRisk.getInsuredCountry(insured.address, countries),\r\n    ].filter(Boolean);\r\n\r\n    return addressArray.join(', ');\r\n  },\r\n  getDefByName: (name, defs) => defs.find((d) => d.name === name),\r\n\r\n  filterConditionalValues: (objValues, defs, isArr) => {\r\n    return Object.keys(objValues).reduce((acc, key) => {\r\n      const field = utilsRisk.getDefByName(key, defs);\r\n      const isArray = utilsRisk.isArray(field);\r\n      const isObject = utilsRisk.isObject(field);\r\n      const condition = utilsRisk.getCondition(field, defs);\r\n      const refValueCondition = condition && get(objValues, `${condition.name}`);\r\n      const isConditionValid = condition && utilsRisk.isConditionValid(condition, refValueCondition);\r\n\r\n      let returnedValue = objValues[key];\r\n\r\n      if (isArray) {\r\n        returnedValue = objValues[key]?.map((arrayValues) => {\r\n          return utilsRisk.filterConditionalValues(arrayValues, utilsRisk.getDefByName(key, defs).arrayItemDef);\r\n        });\r\n      } else if (isObject) {\r\n        returnedValue = utilsRisk.filterConditionalValues(objValues[key], utilsRisk.getDefByName(key, defs).objectDef);\r\n      }\r\n\r\n      return {\r\n        ...acc,\r\n        ...((!condition || isConditionValid) && { [key]: returnedValue }),\r\n      };\r\n    }, {});\r\n  },\r\n\r\n  parsedValues: (valueObj, defs) => {\r\n    return Object.entries(valueObj).reduce((acc, item) => {\r\n      const key = item[0];\r\n      let value = item[1];\r\n      const field = utilsRisk.getDefByName(key, defs);\r\n\r\n      // select\r\n      if (utils.risk.isSelect(field)) {\r\n        if (utils.generic.isValidArray(value)) {\r\n          value = value.filter((v) => v !== '__placeholder__');\r\n        } else {\r\n          value = value === '__placeholder__' ? null : value;\r\n        }\r\n      }\r\n\r\n      // autocomplete\r\n      if (utils.risk.isAutocomplete(field) || utils.risk.isAutocompleteMui(field) || utils.risk.isAutocompleteMuiAsync(field)) {\r\n        if (utils.generic.isValidArray(value)) {\r\n          // this changes the autocomplete multiple values from array of objects to an array of string\r\n          // before --> [{ label:'SPAIN', value:'ES' }, { label:'France', value:'FR' }]\r\n          // after  --> [ 'ES', 'FR' ]\r\n          value = value.map((obj) => {\r\n            return utils.generic.isObjectKeysIdentical(['label', 'value'], obj) ? obj.value : obj;\r\n          });\r\n        } else if (utils.generic.isValidObject(value, 'value')) {\r\n          // this changes the autocomplete single option from an object to a string\r\n          // before --> { label:'SPAIN', value:'ES' }\r\n          // after  --> 'ES'\r\n          value = value.value;\r\n        }\r\n      }\r\n\r\n      // array\r\n      else if (utilsRisk.isArray(field) && utils.generic.isValidArray(value)) {\r\n        value = value.map((obj, index) => {\r\n          const defTitle = field?.itemTitle && field.itemTitleField ? `${field.itemTitle} ${index + 1}` : null;\r\n          return {\r\n            ...utilsRisk.parsedValues(obj, field.arrayItemDef),\r\n            ...(defTitle && { [field?.itemTitleField]: defTitle }),\r\n          };\r\n        });\r\n      }\r\n\r\n      // object\r\n      else if (utilsRisk.isObject(field) && utils.generic.isValidObject(value)) {\r\n        value = utilsRisk.parsedValues(value, field.objectDef);\r\n      }\r\n\r\n      // boolean\r\n      else if (utilsRisk.isBoolean(field)) {\r\n        value = value === 'true' || value === true;\r\n      }\r\n\r\n      return { ...acc, [key]: value };\r\n    }, {});\r\n  },\r\n\r\n  parsedGraphValues: (valueLimits) => {\r\n    if (valueLimits?.length > 0) {\r\n      const validLimits = valueLimits\r\n        ?.filter((item) => item.facilityLimit !== null)\r\n        .sort((a, b) => (a.label > b.label ? 1 : b.label > a.label ? -1 : 0));\r\n      const invalidLimits = valueLimits\r\n        ?.filter((item) => item.facilityLimit === null)\r\n        .sort((a, b) => (a.label > b.label ? 1 : b.label > a.label ? -1 : 0));\r\n      return [...validLimits, ...invalidLimits];\r\n    }\r\n    return [];\r\n  },\r\n};\r\n\r\nexport default utilsRisk;\r\n"]},"metadata":{},"sourceType":"module"}