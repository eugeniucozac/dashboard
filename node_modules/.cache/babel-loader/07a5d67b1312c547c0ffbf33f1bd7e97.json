{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Breadcrumb, Layout, SectionHeader, Tabs } from 'components';\nimport { RfiDetails, ClaimsUploadViewSearchDocs } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { Divider } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRfiDashboardView.propTypes = {\n  rfiTask: PropTypes.object.isRequired,\n  tabs: PropTypes.array.isRequired,\n  queryCodeList: PropTypes.array.isRequired,\n  rfiHistory: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string\n  })).isRequired,\n  handleSelectTab: PropTypes.func.isRequired,\n  rfiLinkedDocs: PropTypes.array,\n  dmsDocListParams: PropTypes.array\n};\nexport function RfiDashboardView(_ref) {\n  var rfiTask = _ref.rfiTask,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      breadcrumbs = _ref.breadcrumbs,\n      handleSelectTab = _ref.handleSelectTab,\n      queryCodeList = _ref.queryCodeList,\n      rfiHistory = _ref.rfiHistory,\n      rfiLinkedDocs = _ref.rfiLinkedDocs,\n      dmsDocListParams = _ref.dmsDocListParams;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs,\n      testid: \"rfi-dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"rfi-dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: utils.string.t('claims.rfiDashboard.title', {\n            id: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskRef\n          }),\n          icon: DescriptionIcon\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handleSelectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this), selectedTab === 'rfiDetails' && /*#__PURE__*/_jsxDEV(RfiDetails, {\n          rfiTask: rfiTask,\n          queryCodeList: queryCodeList,\n          rfiHistory: rfiHistory\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 44\n        }, this), selectedTab === 'documents' && /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: rfiTask,\n          refIdName: constants.DMS_CONTEXT_TASK_ID,\n          dmsContext: constants.DMS_CONTEXT_TASK,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          docList: rfiLinkedDocs,\n          dmsDocListParams: dmsDocListParams\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = RfiDashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/RfiDashboard/RfiDashboard.view.js"],"names":["React","PropTypes","Breadcrumb","Layout","SectionHeader","Tabs","RfiDetails","ClaimsUploadViewSearchDocs","utils","constants","Divider","DescriptionIcon","RfiDashboardView","propTypes","rfiTask","object","isRequired","tabs","array","queryCodeList","rfiHistory","selectedTab","string","breadcrumbs","arrayOf","shape","name","label","link","handleSelectTab","func","rfiLinkedDocs","dmsDocListParams","t","id","taskRef","tabName","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,aAA7B,EAA4CC,IAA5C,QAAwD,YAAxD;AACA,SAASC,UAAT,EAAqBC,0BAArB,QAAuD,SAAvD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B,C,CAEA;;AACA,SAASC,OAAT,QAAwB,mBAAxB;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,OAAO,EAAEb,SAAS,CAACc,MAAV,CAAiBC,UADC;AAE3BC,EAAAA,IAAI,EAAEhB,SAAS,CAACiB,KAAV,CAAgBF,UAFK;AAG3BG,EAAAA,aAAa,EAAElB,SAAS,CAACiB,KAAV,CAAgBF,UAHJ;AAI3BI,EAAAA,UAAU,EAAEnB,SAAS,CAACiB,KAAV,CAAgBF,UAJD;AAK3BK,EAAAA,WAAW,EAAEpB,SAAS,CAACqB,MAAV,CAAiBN,UALH;AAM3BO,EAAAA,WAAW,EAAEtB,SAAS,CAACuB,OAAV,CACXvB,SAAS,CAACwB,KAAV,CAAgB;AACdC,IAAAA,IAAI,EAAEzB,SAAS,CAACqB,MAAV,CAAiBN,UADT;AAEdW,IAAAA,KAAK,EAAE1B,SAAS,CAACqB,MAAV,CAAiBN,UAFV;AAGdY,IAAAA,IAAI,EAAE3B,SAAS,CAACqB;AAHF,GAAhB,CADW,EAMXN,UAZyB;AAa3Ba,EAAAA,eAAe,EAAE5B,SAAS,CAAC6B,IAAV,CAAed,UAbL;AAc3Be,EAAAA,aAAa,EAAE9B,SAAS,CAACiB,KAdE;AAe3Bc,EAAAA,gBAAgB,EAAE/B,SAAS,CAACiB;AAfD,CAA7B;AAiBA,OAAO,SAASN,gBAAT,OAUJ;AAAA,MATDE,OASC,QATDA,OASC;AAAA,MARDG,IAQC,QARDA,IAQC;AAAA,MAPDI,WAOC,QAPDA,WAOC;AAAA,MANDE,WAMC,QANDA,WAMC;AAAA,MALDM,eAKC,QALDA,eAKC;AAAA,MAJDV,aAIC,QAJDA,aAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDW,aAEC,QAFDA,aAEC;AAAA,MADDC,gBACC,QADDA,gBACC;AACD,sBACE;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAET,WAAnB;AAAgC,MAAA,MAAM,EAAC;AAAvC;AAAA;AAAA;AAAA;AAAA,YADF,eAEE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAFF,eAIE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,eAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,gCACE,QAAC,aAAD;AACE,UAAA,KAAK,EAAEf,KAAK,CAACc,MAAN,CAAaW,CAAb,CAAe,2BAAf,EAA4C;AAAEC,YAAAA,EAAE,EAAEpB,OAAF,aAAEA,OAAF,uBAAEA,OAAO,CAAEqB;AAAf,WAA5C,CADT;AAEE,UAAA,IAAI,EAAExB;AAFR;AAAA;AAAA;AAAA;AAAA,gBADF,eAKE,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEM,IAAZ;AAAkB,UAAA,KAAK,EAAEI,WAAzB;AAAsC,UAAA,QAAQ,EAAE,kBAACe,OAAD;AAAA,mBAAaP,eAAe,CAACO,OAAD,CAA5B;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBALF,EAQGf,WAAW,KAAK,YAAhB,iBAAgC,QAAC,UAAD;AAAY,UAAA,OAAO,EAAEP,OAArB;AAA8B,UAAA,aAAa,EAAEK,aAA7C;AAA4D,UAAA,UAAU,EAAEC;AAAxE;AAAA;AAAA;AAAA;AAAA,gBARnC,EASGC,WAAW,KAAK,WAAhB,iBACC,QAAC,0BAAD;AACE,UAAA,OAAO,EAAEP,OADX;AAEE,UAAA,SAAS,EAAEL,SAAS,CAAC4B,mBAFvB;AAGE,UAAA,UAAU,EAAE5B,SAAS,CAAC6B,gBAHxB;AAIE,UAAA,eAAe,EAAE7B,SAAS,CAAC8B,8BAAV,CAAyCC,KAJ5D;AAKE,UAAA,OAAO,EAAET,aALX;AAME,UAAA,gBAAgB,EAAEC;AANpB;AAAA;AAAA;AAAA;AAAA,gBAVJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AA6BD;KAxCepB,gB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Breadcrumb, Layout, SectionHeader, Tabs } from 'components';\r\nimport { RfiDetails, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Divider } from '@material-ui/core';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nRfiDashboardView.propTypes = {\r\n  rfiTask: PropTypes.object.isRequired,\r\n  tabs: PropTypes.array.isRequired,\r\n  queryCodeList: PropTypes.array.isRequired,\r\n  rfiHistory: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  handleSelectTab: PropTypes.func.isRequired,\r\n  rfiLinkedDocs: PropTypes.array,\r\n  dmsDocListParams: PropTypes.array,\r\n};\r\nexport function RfiDashboardView({\r\n  rfiTask,\r\n  tabs,\r\n  selectedTab,\r\n  breadcrumbs,\r\n  handleSelectTab,\r\n  queryCodeList,\r\n  rfiHistory,\r\n  rfiLinkedDocs,\r\n  dmsDocListParams,\r\n}) {\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} testid=\"rfi-dashboard\" />\r\n      <Divider />\r\n\r\n      <Layout testid=\"rfi-dashboard\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={utils.string.t('claims.rfiDashboard.title', { id: rfiTask?.taskRef })}\r\n            icon={DescriptionIcon}\r\n          ></SectionHeader>\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n\r\n          {/* tabs content */}\r\n          {selectedTab === 'rfiDetails' && <RfiDetails rfiTask={rfiTask} queryCodeList={queryCodeList} rfiHistory={rfiHistory} />}\r\n          {selectedTab === 'documents' && (\r\n            <ClaimsUploadViewSearchDocs\r\n              refData={rfiTask}\r\n              refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n              dmsContext={constants.DMS_CONTEXT_TASK}\r\n              documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n              docList={rfiLinkedDocs}\r\n              dmsDocListParams={dmsDocListParams}\r\n            />\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}