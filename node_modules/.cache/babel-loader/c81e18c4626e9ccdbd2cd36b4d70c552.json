{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\ChartZoomLevel\\\\ChartZoomLevel.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './ChartZoomLevel.styles';\nimport * as utils from 'utils';\nimport { FormSelect, Link } from 'components'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartZoomLevelView.propTypes = {\n  zoomOptions: PropTypes.array.isRequired,\n  onLevelChange: PropTypes.func.isRequired,\n  levelOverride: PropTypes.string,\n  level: PropTypes.string.isRequired,\n  disabled: PropTypes.bool.isRequired\n};\nexport function ChartZoomLevelView(_ref) {\n  var _rootClasses;\n\n  var disabled = _ref.disabled,\n      zoomOptions = _ref.zoomOptions,\n      onLevelChange = _ref.onLevelChange,\n      levelOverride = _ref.levelOverride,\n      level = _ref.level;\n  var classes = makeStyles(styles, {\n    name: 'ChartZoomLevel'\n  })();\n  var rootClasses = (_rootClasses = {}, _defineProperty(_rootClasses, classes.root, true), _defineProperty(_rootClasses, classes.disabled, disabled), _rootClasses);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(rootClasses),\n    children: [/*#__PURE__*/_jsxDEV(FormSelect, {\n      muiComponentProps: {\n        disabled: disabled\n      },\n      nestedClasses: {\n        root: classes.select\n      },\n      name: \"zoomLevel\",\n      label: utils.string.t('chartZoomLevel.viewingLocationsBy'),\n      value: levelOverride || level,\n      options: zoomOptions,\n      margin: \"none\",\n      optionKey: \"id\",\n      size: \"sm\",\n      handleUpdate: function handleUpdate(name, id) {\n        var level = utils.map.getLevelOption(zoomOptions, id);\n\n        if (level) {\n          onLevelChange({\n            levelOverride: level.id\n          });\n        }\n      },\n      testid: \"select-zoom-level\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), !!levelOverride && /*#__PURE__*/_jsxDEV(Link, {\n      disabled: disabled,\n      nestedClasses: {\n        link: classes.link\n      },\n      icon: CloseIcon,\n      text: utils.string.t('chartZoomLevel.resetOverride'),\n      handleClick: function handleClick() {\n        return onLevelChange({\n          resetLevelOverride: true\n        });\n      },\n      color: \"secondary\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.label,\n      children: utils.string.t('chartZoomLevel.zoomLevelLabel', {\n        level: level\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartZoomLevelView;\nChartZoomLevelView.displayName = \"ChartZoomLevelView\";\nChartZoomLevelView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ChartZoomLevelView\",\n  \"props\": {\n    \"zoomOptions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onLevelChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"levelOverride\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"level\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\ChartZoomLevel\\\\ChartZoomLevel.view.js\"] = {\n    name: \"ChartZoomLevelView\",\n    docgenInfo: ChartZoomLevelView.__docgenInfo,\n    path: \"src\\\\components\\\\ChartZoomLevel\\\\ChartZoomLevel.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartZoomLevelView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/ChartZoomLevel/ChartZoomLevel.view.js"],"names":["React","PropTypes","classnames","styles","utils","FormSelect","Link","makeStyles","CloseIcon","ChartZoomLevelView","propTypes","zoomOptions","array","isRequired","onLevelChange","func","levelOverride","string","level","disabled","bool","classes","name","rootClasses","root","select","t","id","map","getLevelOption","link","resetLevelOverride","label"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ChartZoomLevel.styles';\r\nimport * as utils from 'utils';\r\nimport { FormSelect, Link } from 'components';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nChartZoomLevelView.propTypes = {\r\n  zoomOptions: PropTypes.array.isRequired,\r\n  onLevelChange: PropTypes.func.isRequired,\r\n  levelOverride: PropTypes.string,\r\n  level: PropTypes.string.isRequired,\r\n  disabled: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function ChartZoomLevelView({ disabled, zoomOptions, onLevelChange, levelOverride, level }) {\r\n  const classes = makeStyles(styles, { name: 'ChartZoomLevel' })();\r\n\r\n  const rootClasses = {\r\n    [classes.root]: true,\r\n    [classes.disabled]: disabled,\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(rootClasses)}>\r\n      <FormSelect\r\n        muiComponentProps={{\r\n          disabled,\r\n        }}\r\n        nestedClasses={{ root: classes.select }}\r\n        name=\"zoomLevel\"\r\n        label={utils.string.t('chartZoomLevel.viewingLocationsBy')}\r\n        value={levelOverride || level}\r\n        options={zoomOptions}\r\n        margin=\"none\"\r\n        optionKey=\"id\"\r\n        size=\"sm\"\r\n        handleUpdate={(name, id) => {\r\n          const level = utils.map.getLevelOption(zoomOptions, id);\r\n          if (level) {\r\n            onLevelChange({ levelOverride: level.id });\r\n          }\r\n        }}\r\n        testid=\"select-zoom-level\"\r\n      />\r\n      {!!levelOverride && (\r\n        <Link\r\n          disabled={disabled}\r\n          nestedClasses={{ link: classes.link }}\r\n          icon={CloseIcon}\r\n          text={utils.string.t('chartZoomLevel.resetOverride')}\r\n          handleClick={() => onLevelChange({ resetLevelOverride: true })}\r\n          color=\"secondary\"\r\n        />\r\n      )}\r\n      <div className={classes.label}>{utils.string.t('chartZoomLevel.zoomLevelLabel', { level })}</div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}