{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get'; // app\n\nimport { authLogout, hideModal, removeLoader, addLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nexport var createWhitespacePolicy = function createWhitespacePolicy(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/whitespace.actions.post'\n    };\n    dispatch(createWhitespaceRequest(formData));\n    dispatch(addLoader('createWhitespacePolicy'));\n\n    if (!formData || isEmpty(formData)) {\n      dispatch(createWhitespaceFailure(defaultError));\n      dispatch(enqueueNotification('notification.createWhitespacePolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('createWhitespacePolicy'));\n      return;\n    }\n\n    var state = getState();\n    var placement = get(state, 'placement.selected') || {};\n\n    var umrId = formData.umrId,\n        rest = _objectWithoutProperties(formData, [\"umrId\"]);\n\n    var body = _objectSpread({\n      insuredName: utils.placement.getInsureds(placement)\n    }, rest);\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.whitespace,\n      path: \"api/v1/mrcContracts/\".concat(umrId),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function () {\n      dispatch(createWhitespaceSuccess());\n      dispatch(enqueueNotification('notification.createWhitespacePolicy.success', 'success'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (whitespace.postCreate)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(createWhitespaceFailure(err));\n      dispatch(enqueueNotification('notification.createWhitespacePolicy.fail', 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('createWhitespacePolicy'));\n    });\n  };\n};\nexport var createWhitespaceRequest = function createWhitespaceRequest(payload) {\n  return {\n    type: 'CREATE_WHITESPACE_POST_REQUEST',\n    payload: payload\n  };\n};\nexport var createWhitespaceSuccess = function createWhitespaceSuccess() {\n  return {\n    type: 'CREATE_WHITESPACE_POST_SUCCESS'\n  };\n};\nexport var createWhitespaceFailure = function createWhitespaceFailure(error) {\n  return {\n    type: 'CREATE_WHITESPACE_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/whitespace/whitespace.actions.post.js"],"names":["isEmpty","get","authLogout","hideModal","removeLoader","addLoader","enqueueNotification","utils","createWhitespacePolicy","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","createWhitespaceRequest","createWhitespaceFailure","state","placement","umrId","rest","body","insuredName","getInsureds","api","post","token","accessToken","whitespace","path","data","then","response","handleResponse","createWhitespaceSuccess","err","errorParams","message","handleError","handleUnauthorized","payload","type","error"],"mappings":"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","sourcesContent":["import isEmpty from 'lodash/isEmpty';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { authLogout, hideModal, removeLoader, addLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const createWhitespacePolicy = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/whitespace.actions.post',\r\n  };\r\n\r\n  dispatch(createWhitespaceRequest(formData));\r\n  dispatch(addLoader('createWhitespacePolicy'));\r\n\r\n  if (!formData || isEmpty(formData)) {\r\n    dispatch(createWhitespaceFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.createWhitespacePolicy.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('createWhitespacePolicy'));\r\n    return;\r\n  }\r\n\r\n  const state = getState();\r\n  const placement = get(state, 'placement.selected') || {};\r\n  const { umrId, ...rest } = formData;\r\n  const body = {\r\n    insuredName: utils.placement.getInsureds(placement),\r\n    ...rest,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.whitespace,\r\n      path: `api/v1/mrcContracts/${umrId}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then(() => {\r\n      dispatch(createWhitespaceSuccess());\r\n      dispatch(enqueueNotification('notification.createWhitespacePolicy.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (whitespace.postCreate)',\r\n      };\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(createWhitespaceFailure(err));\r\n      dispatch(enqueueNotification('notification.createWhitespacePolicy.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('createWhitespacePolicy'));\r\n    });\r\n};\r\n\r\nexport const createWhitespaceRequest = (payload) => {\r\n  return {\r\n    type: 'CREATE_WHITESPACE_POST_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createWhitespaceSuccess = () => {\r\n  return {\r\n    type: 'CREATE_WHITESPACE_POST_SUCCESS',\r\n  };\r\n};\r\n\r\nexport const createWhitespaceFailure = (error) => {\r\n  return {\r\n    type: 'CREATE_WHITESPACE_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}