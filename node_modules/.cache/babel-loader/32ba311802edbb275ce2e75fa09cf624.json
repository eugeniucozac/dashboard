{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskRowMultiple\\\\AddRiskRowMultiple.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport compact from 'lodash/compact';\nimport { useFormContext, useFieldArray, useWatch } from 'react-hook-form';\nimport mapValues from 'lodash/mapValues';\nimport omit from 'lodash/omit';\nimport get from 'lodash/get';\nimport camelCase from 'lodash/camelCase'; // app\n\nimport { AddRiskRowMultipleView } from './AddRiskRowMultiple.view';\nimport { enqueueNotification, hideModal, showModal, getRiskAddress, getDistanceToCoast } from 'stores';\nimport * as utils from 'utils';\nimport { RISK_LOCATIONS_ACCURACY, WIND_HAIL_TEMPLATE_PATH } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskRowMultiple.propTypes = {\n  field: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired,\n  overflow: PropTypes.bool,\n  formatData: PropTypes.string\n};\nAddRiskRowMultiple.defaultProps = {\n  overflow: true\n};\nexport default function AddRiskRowMultiple(_ref) {\n  _s();\n\n  var field = _ref.field,\n      formProps = _ref.formProps,\n      overflow = _ref.overflow,\n      formatData = _ref.formatData;\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isAdding = _useState2[0],\n      setIsAdding = _useState2[1];\n\n  var _useFormContext = useFormContext(),\n      errors = _useFormContext.errors,\n      trigger = _useFormContext.trigger;\n\n  var _useFieldArray = useFieldArray({\n    name: field.name\n  }),\n      fields = _useFieldArray.fields,\n      append = _useFieldArray.append,\n      remove = _useFieldArray.remove;\n\n  var fieldsValues = useWatch({\n    control: formProps.control,\n    name: field.name\n  }); // abort\n\n  if (!field || !field.name || !field.arrayItemDef) return null;\n  if (!formProps || !formProps.control) return null;\n  var validFields = ['text', 'number', 'datepicker', 'select', 'autocomplete', 'autocompletemui', 'radio', 'checkbox', 'toggle', 'hidden'];\n  var cols = [].concat(_toConsumableArray(compact(field.arrayItemDef.map(function (def) {\n    if (!validFields.includes(def.type) || def.type === 'hidden') return null;\n    return {\n      id: def.name,\n      label: def.label\n    };\n  }))), [{\n    id: 'delete'\n  }]);\n\n  var headers = _toConsumableArray(compact(field.arrayItemDef.map(function (def) {\n    if ((def === null || def === void 0 ? void 0 : def.excelHidden) || def.type === 'hidden') return null;\n    return {\n      key: def.name,\n      label: def.label,\n      value: camelCase(def.label)\n    };\n  })));\n\n  var launchPasteFromExcelModal = function launchPasteFromExcelModal(data) {\n    dispatch(showModal({\n      component: 'PASTE_FROM_EXCEL',\n      props: {\n        title: 'app.pasteFromExcel',\n        fullWidth: true,\n        maxWidth: 'lg',\n        componentProps: _objectSpread(_objectSpread({}, data), {}, {\n          headers: headers\n        })\n      }\n    }));\n  };\n\n  var handleDownloadExcelTeamplate = function handleDownloadExcelTeamplate() {\n    var url = WIND_HAIL_TEMPLATE_PATH;\n    var link = window.document.createElement('a');\n    link.href = url;\n    link.download = 'EdgeQ&BW&Hbuildingstemplate';\n    window.document.body.appendChild(link);\n    link.click();\n    link.parentNode.removeChild(link);\n  };\n\n  var closePasteFromExcelModal = function closePasteFromExcelModal() {\n    dispatch(hideModal('PASTE_FROM_EXCEL'));\n  };\n\n  var getEmptyObject = function getEmptyObject() {\n    return mapValues(omit(fields[0], ['id']), function (value, key) {\n      var defaultValue = get(field.arrayItemDef.find(function (def) {\n        return def.name === key;\n      }), 'defaultValue');\n      return typeof defaultValue !== 'undefined' ? defaultValue : '';\n    });\n  };\n\n  var getAddressDetails = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var response, location, distanceToCoastResult, streetAddress, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getRiskAddress(address));\n\n            case 2:\n              response = _context.sent;\n\n              if (RISK_LOCATIONS_ACCURACY.includes(response === null || response === void 0 ? void 0 : response.accuracy)) {\n                _context.next = 5;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                error: 'NO_ACCURATE_RESULT',\n                address: address\n              });\n\n            case 5:\n              location = {\n                lng: response.lng,\n                lat: response.lat\n              };\n              _context.next = 8;\n              return dispatch(getDistanceToCoast(location));\n\n            case 8:\n              distanceToCoastResult = _context.sent;\n              streetAddress = (response === null || response === void 0 ? void 0 : response.streetNumber) ? \"\".concat(response.streetNumber, \" \").concat(response === null || response === void 0 ? void 0 : response.streetAddress) : \"\".concat(response === null || response === void 0 ? void 0 : response.streetAddress);\n              result = {\n                city: response === null || response === void 0 ? void 0 : response.city,\n                zip: response === null || response === void 0 ? void 0 : response.zip,\n                county: response === null || response === void 0 ? void 0 : response.county,\n                state: response === null || response === void 0 ? void 0 : response.state,\n                streetAddress: streetAddress,\n                formattedAddress: response === null || response === void 0 ? void 0 : response.outputAddress,\n                distanceToCoast: distanceToCoastResult === null || distanceToCoastResult === void 0 ? void 0 : distanceToCoastResult.distanceInMiles,\n                distanceToCoastInitialValue: distanceToCoastResult === null || distanceToCoastResult === void 0 ? void 0 : distanceToCoastResult.distanceInMiles,\n                latitude: response === null || response === void 0 ? void 0 : response.lat,\n                longitude: response === null || response === void 0 ? void 0 : response.lng\n              };\n              return _context.abrupt(\"return\", result);\n\n            case 12:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAddressDetails(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  function asyncForEach(_x2, _x3) {\n    return _asyncForEach.apply(this, arguments);\n  }\n\n  function _asyncForEach() {\n    _asyncForEach = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(array, callback) {\n      var index;\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              setIsAdding(true);\n              index = 0;\n\n            case 2:\n              if (!(index < array.length)) {\n                _context4.next = 8;\n                break;\n              }\n\n              _context4.next = 5;\n              return callback(array[index], index, array);\n\n            case 5:\n              index++;\n              _context4.next = 2;\n              break;\n\n            case 8:\n              setIsAdding(false);\n\n            case 9:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n    return _asyncForEach.apply(this, arguments);\n  }\n\n  var appendHandler = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(obj) {\n      var isFromExcel,\n          formattedObj,\n          _args3 = arguments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              isFromExcel = _args3.length > 1 && _args3[1] !== undefined ? _args3[1] : false;\n              formattedObj = obj;\n\n              if (formatData === 'PROPERTY' && isFromExcel) {\n                asyncForEach(obj, /*#__PURE__*/function () {\n                  var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(item) {\n                    var zipCode, address, result, itemObj, buildingObj, newValue;\n                    return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n                      while (1) {\n                        switch (_context2.prev = _context2.next) {\n                          case 0:\n                            zipCode = (item === null || item === void 0 ? void 0 : item.zip) ? \" \".concat(item === null || item === void 0 ? void 0 : item.zip) : '';\n                            address = \"\".concat(item === null || item === void 0 ? void 0 : item.streetAddress).concat(zipCode);\n                            _context2.next = 4;\n                            return getAddressDetails(address);\n\n                          case 4:\n                            result = _context2.sent;\n\n                            if (utils.generic.isValidObject(result)) {\n                              if ((result === null || result === void 0 ? void 0 : result.error) !== 'NO_ACCURATE_RESULT') {\n                                itemObj = utils.generic.formatFields(item, field === null || field === void 0 ? void 0 : field.arrayItemDef);\n                                buildingObj = _objectSpread(_objectSpread({}, itemObj), result);\n                                newValue = _objectSpread(_objectSpread({}, getEmptyObject()), buildingObj);\n                                append(newValue);\n                                validateRiskRow();\n                              } else {\n                                dispatch(enqueueNotification(\"\".concat(result === null || result === void 0 ? void 0 : result.address, \" \").concat(utils.string.t('products.multiLocation.buildingError')), 'error', {\n                                  delay: 6000\n                                }));\n                              }\n                            }\n\n                          case 6:\n                          case \"end\":\n                            return _context2.stop();\n                        }\n                      }\n                    }, _callee2);\n                  }));\n\n                  return function (_x5) {\n                    return _ref4.apply(this, arguments);\n                  };\n                }());\n              } else append(formattedObj || getEmptyObject());\n\n            case 3:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function appendHandler(_x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var removeHandler = function removeHandler(idx) {\n    remove(idx);\n  };\n\n  var copyHandler = function copyHandler(idx) {\n    var _fieldsValues$idx = fieldsValues[idx],\n        id = _fieldsValues$idx.id,\n        buildingTitle = _fieldsValues$idx.buildingTitle,\n        rest = _objectWithoutProperties(_fieldsValues$idx, [\"id\", \"buildingTitle\"]);\n\n    var newValue = _objectSpread({}, rest);\n\n    append(newValue);\n  };\n\n  var validateRiskRow = function validateRiskRow() {\n    trigger(field.name);\n  };\n\n  var handleAddNewObj = function handleAddNewObj(obj) {\n    var newValue = _objectSpread(_objectSpread({}, getEmptyObject()), obj);\n\n    appendHandler(newValue);\n    validateRiskRow();\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddRiskRowMultipleView, {\n    isAdding: isAdding,\n    cols: cols,\n    field: field,\n    validFields: validFields,\n    formProps: formProps,\n    overflow: overflow,\n    formatData: formatData,\n    errors: errors,\n    fields: fields,\n    handlers: {\n      launchPasteFromExcelModal: launchPasteFromExcelModal,\n      closePasteFromExcelModal: closePasteFromExcelModal,\n      copyHandler: copyHandler,\n      handleAddNewObj: handleAddNewObj,\n      removeHandler: removeHandler,\n      appendHandler: appendHandler,\n      handleDownloadExcelTeamplate: handleDownloadExcelTeamplate\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRiskRowMultiple, \"3tdiPqyCSOz0UFf2oBYwa2Z3tkw=\", false, function () {\n  return [useDispatch, useFormContext, useFieldArray, useWatch];\n});\n\n_c = AddRiskRowMultiple;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskRowMultiple\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskRowMultiple/AddRiskRowMultiple.js"],"names":["React","useState","PropTypes","useDispatch","compact","useFormContext","useFieldArray","useWatch","mapValues","omit","get","camelCase","AddRiskRowMultipleView","enqueueNotification","hideModal","showModal","getRiskAddress","getDistanceToCoast","utils","RISK_LOCATIONS_ACCURACY","WIND_HAIL_TEMPLATE_PATH","AddRiskRowMultiple","propTypes","field","object","isRequired","formProps","overflow","bool","formatData","string","defaultProps","dispatch","isAdding","setIsAdding","errors","trigger","name","fields","append","remove","fieldsValues","control","arrayItemDef","validFields","cols","map","def","includes","type","id","label","headers","excelHidden","key","value","launchPasteFromExcelModal","data","component","props","title","fullWidth","maxWidth","componentProps","handleDownloadExcelTeamplate","url","link","window","document","createElement","href","download","body","appendChild","click","parentNode","removeChild","closePasteFromExcelModal","getEmptyObject","defaultValue","find","getAddressDetails","address","response","accuracy","error","location","lng","lat","distanceToCoastResult","streetAddress","streetNumber","result","city","zip","county","state","formattedAddress","outputAddress","distanceToCoast","distanceInMiles","distanceToCoastInitialValue","latitude","longitude","asyncForEach","array","callback","index","length","appendHandler","obj","isFromExcel","formattedObj","item","zipCode","generic","isValidObject","itemObj","formatFields","buildingObj","newValue","validateRiskRow","t","delay","removeHandler","idx","copyHandler","buildingTitle","rest","handleAddNewObj"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport compact from 'lodash/compact';\r\nimport { useFormContext, useFieldArray, useWatch } from 'react-hook-form';\r\nimport mapValues from 'lodash/mapValues';\r\nimport omit from 'lodash/omit';\r\nimport get from 'lodash/get';\r\nimport camelCase from 'lodash/camelCase';\r\n// app\r\nimport { AddRiskRowMultipleView } from './AddRiskRowMultiple.view';\r\nimport { enqueueNotification, hideModal, showModal, getRiskAddress, getDistanceToCoast } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { RISK_LOCATIONS_ACCURACY, WIND_HAIL_TEMPLATE_PATH } from 'consts';\r\n\r\nAddRiskRowMultiple.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n  overflow: PropTypes.bool,\r\n  formatData: PropTypes.string,\r\n};\r\n\r\nAddRiskRowMultiple.defaultProps = {\r\n  overflow: true,\r\n};\r\n\r\nexport default function AddRiskRowMultiple({ field, formProps, overflow, formatData }) {\r\n  const dispatch = useDispatch();\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const { errors, trigger } = useFormContext();\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    name: field.name,\r\n  });\r\n\r\n  const fieldsValues = useWatch({\r\n    control: formProps.control,\r\n    name: field.name,\r\n  });\r\n\r\n  // abort\r\n  if (!field || !field.name || !field.arrayItemDef) return null;\r\n  if (!formProps || !formProps.control) return null;\r\n\r\n  const validFields = [\r\n    'text',\r\n    'number',\r\n    'datepicker',\r\n    'select',\r\n    'autocomplete',\r\n    'autocompletemui',\r\n    'radio',\r\n    'checkbox',\r\n    'toggle',\r\n    'hidden',\r\n  ];\r\n\r\n  const cols = [\r\n    ...compact(\r\n      field.arrayItemDef.map((def) => {\r\n        if (!validFields.includes(def.type) || def.type === 'hidden') return null;\r\n\r\n        return { id: def.name, label: def.label };\r\n      })\r\n    ),\r\n    { id: 'delete' },\r\n  ];\r\n\r\n  const headers = [\r\n    ...compact(\r\n      field.arrayItemDef.map((def) => {\r\n        if (def?.excelHidden || def.type === 'hidden') return null;\r\n\r\n        return { key: def.name, label: def.label, value: camelCase(def.label) };\r\n      })\r\n    ),\r\n  ];\r\n\r\n  const launchPasteFromExcelModal = (data) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'PASTE_FROM_EXCEL',\r\n        props: {\r\n          title: 'app.pasteFromExcel',\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            ...data,\r\n            headers,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDownloadExcelTeamplate = () => {\r\n    const url = WIND_HAIL_TEMPLATE_PATH;\r\n    const link = window.document.createElement('a');\r\n\r\n    link.href = url;\r\n    link.download = 'EdgeQ&BW&Hbuildingstemplate';\r\n    window.document.body.appendChild(link);\r\n    link.click();\r\n    link.parentNode.removeChild(link);\r\n  };\r\n\r\n  const closePasteFromExcelModal = () => {\r\n    dispatch(hideModal('PASTE_FROM_EXCEL'));\r\n  };\r\n\r\n  const getEmptyObject = () => {\r\n    return mapValues(omit(fields[0], ['id']), (value, key) => {\r\n      const defaultValue = get(\r\n        field.arrayItemDef.find((def) => def.name === key),\r\n        'defaultValue'\r\n      );\r\n\r\n      return typeof defaultValue !== 'undefined' ? defaultValue : '';\r\n    });\r\n  };\r\n\r\n  const getAddressDetails = async (address) => {\r\n    const response = await dispatch(getRiskAddress(address));\r\n    if (!RISK_LOCATIONS_ACCURACY.includes(response?.accuracy)) return { error: 'NO_ACCURATE_RESULT', address };\r\n\r\n    const location = { lng: response.lng, lat: response.lat };\r\n    const distanceToCoastResult = await dispatch(getDistanceToCoast(location));\r\n    const streetAddress = response?.streetNumber ? `${response.streetNumber} ${response?.streetAddress}` : `${response?.streetAddress}`;\r\n\r\n    const result = {\r\n      city: response?.city,\r\n      zip: response?.zip,\r\n      county: response?.county,\r\n      state: response?.state,\r\n      streetAddress,\r\n      formattedAddress: response?.outputAddress,\r\n      distanceToCoast: distanceToCoastResult?.distanceInMiles,\r\n      distanceToCoastInitialValue: distanceToCoastResult?.distanceInMiles,\r\n      latitude: response?.lat,\r\n      longitude: response?.lng,\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  async function asyncForEach(array, callback) {\r\n    setIsAdding(true);\r\n    for (let index = 0; index < array.length; index++) {\r\n      await callback(array[index], index, array);\r\n    }\r\n    setIsAdding(false);\r\n  }\r\n\r\n  const appendHandler = async (obj, isFromExcel = false) => {\r\n    let formattedObj = obj;\r\n    if (formatData === 'PROPERTY' && isFromExcel) {\r\n      asyncForEach(obj, async (item) => {\r\n        const zipCode = item?.zip ? ` ${item?.zip}` : '';\r\n        const address = `${item?.streetAddress}${zipCode}`;\r\n        const result = await getAddressDetails(address);\r\n\r\n        if (utils.generic.isValidObject(result)) {\r\n          if (result?.error !== 'NO_ACCURATE_RESULT') {\r\n            const itemObj = utils.generic.formatFields(item, field?.arrayItemDef);\r\n            const buildingObj = { ...itemObj, ...result };\r\n\r\n            const newValue = { ...getEmptyObject(), ...buildingObj };\r\n\r\n            append(newValue);\r\n            validateRiskRow();\r\n          } else {\r\n            dispatch(\r\n              enqueueNotification(`${result?.address} ${utils.string.t('products.multiLocation.buildingError')}`, 'error', { delay: 6000 })\r\n            );\r\n          }\r\n        }\r\n      });\r\n    } else append(formattedObj || getEmptyObject());\r\n  };\r\n\r\n  const removeHandler = (idx) => {\r\n    remove(idx);\r\n  };\r\n\r\n  const copyHandler = (idx) => {\r\n    const { id, buildingTitle, ...rest } = fieldsValues[idx];\r\n\r\n    const newValue = { ...rest };\r\n    append(newValue);\r\n  };\r\n\r\n  const validateRiskRow = () => {\r\n    trigger(field.name);\r\n  };\r\n\r\n  const handleAddNewObj = (obj) => {\r\n    const newValue = { ...getEmptyObject(), ...obj };\r\n    appendHandler(newValue);\r\n    validateRiskRow();\r\n  };\r\n\r\n  return (\r\n    <AddRiskRowMultipleView\r\n      isAdding={isAdding}\r\n      cols={cols}\r\n      field={field}\r\n      validFields={validFields}\r\n      formProps={formProps}\r\n      overflow={overflow}\r\n      formatData={formatData}\r\n      errors={errors}\r\n      fields={fields}\r\n      handlers={{\r\n        launchPasteFromExcelModal,\r\n        closePasteFromExcelModal,\r\n        copyHandler,\r\n        handleAddNewObj,\r\n        removeHandler,\r\n        appendHandler,\r\n        handleDownloadExcelTeamplate,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}