{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskObject\\\\AddRiskObject.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString'; // app\n\nimport styles from './AddRiskObject.styles';\nimport { FormGrid, FormLegend } from 'components';\nimport { AddRiskFormField } from 'modules';\nimport * as utils from 'utils'; // mui\n\nimport { Collapse, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nAddRiskObjectView.propTypes = {\n  field: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired\n};\nexport function AddRiskObjectView(_ref) {\n  var _this = this;\n\n  var field = _ref.field,\n      formProps = _ref.formProps;\n  var classes = makeStyles(styles, {\n    name: 'AddRiskObjectView'\n  })();\n  var validFields = ['text', 'number', 'datepicker', 'select', 'autocomplete', 'autocompletemuiAsync', 'radio', 'checkbox', 'toggle', 'hidden', 'spacer', 'label'];\n  return /*#__PURE__*/_jsxDEV(FormGrid, {\n    container: true,\n    spacing: 4,\n    children: field.objectDef.map(function (def, idx) {\n      var _classnames;\n\n      if (!validFields.includes(def.type)) return null;\n      var condition = utils.risk.getCondition(def, field.objectDef);\n      var conditionValue = condition && formProps.watch(\"\".concat(field.name, \".\").concat(condition.name));\n      var isValid = !condition || condition && utils.risk.isConditionValid(condition, conditionValue);\n      var hasLegend = isString(def.header);\n      var gridClasses = {\n        root: classnames((_classnames = {}, _defineProperty(_classnames, classes.grid, true), _defineProperty(_classnames, classes.gridCollapsed, Boolean(condition && !isValid)), _classnames))\n      }; // grid spacer\n\n      if (utils.risk.isGridSpacer(def)) {\n        return /*#__PURE__*/_createElement(FormGrid, _objectSpread(_objectSpread({\n          item: true,\n          xs: 12\n        }, def.gridSize), {}, {\n          nestedClasses: {\n            root: classes.spacer\n          },\n          key: \"\".concat(field.name, \"-spacer-\").concat(idx),\n          \"data-testid\": \"spacer-\".concat(field.name, \"-\").concat(idx),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this));\n      }\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hasLegend && /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 12,\n          nestedClasses: {\n            root: classes.legend\n          },\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: def.header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 15\n        }, _this), utils.risk.isHiddenField(def) ? /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n          field: _objectSpread(_objectSpread({}, def), {}, {\n            name: \"\".concat(field.name, \".\").concat(def.name),\n            defaultValue: def.value\n          }),\n          formProps: formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 15\n        }, _this) : /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n          item: true,\n          xs: 12\n        }, def.gridSize), {}, {\n          nestedClasses: gridClasses,\n          children: /*#__PURE__*/_jsxDEV(Collapse, {\n            \"in\": isValid,\n            children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n              field: _objectSpread(_objectSpread({}, def), {}, {\n                name: \"\".concat(field.name, \".\").concat(def.name),\n                defaultValue: def.value\n              }),\n              formProps: formProps\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 17\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 15\n        }, _this)]\n      }, def.name, true, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = AddRiskObjectView;\nAddRiskObjectView.displayName = \"AddRiskObjectView\";\nAddRiskObjectView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddRiskObjectView\",\n  \"props\": {\n    \"field\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\AddRiskObject\\\\AddRiskObject.view.js\"] = {\n    name: \"AddRiskObjectView\",\n    docgenInfo: AddRiskObjectView.__docgenInfo,\n    path: \"src\\\\modules\\\\AddRiskObject\\\\AddRiskObject.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskObjectView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskObject/AddRiskObject.view.js"],"names":["React","Fragment","PropTypes","classnames","isString","styles","FormGrid","FormLegend","AddRiskFormField","utils","Collapse","makeStyles","AddRiskObjectView","propTypes","field","object","isRequired","formProps","classes","name","validFields","objectDef","map","def","idx","includes","type","condition","risk","getCondition","conditionValue","watch","isValid","isConditionValid","hasLegend","header","gridClasses","root","grid","gridCollapsed","Boolean","isGridSpacer","gridSize","spacer","legend","isHiddenField","defaultValue","value"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport isString from 'lodash/isString';\r\n\r\n// app\r\nimport styles from './AddRiskObject.styles';\r\nimport { FormGrid, FormLegend } from 'components';\r\nimport { AddRiskFormField } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Collapse, makeStyles } from '@material-ui/core';\r\n\r\nAddRiskObjectView.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function AddRiskObjectView({ field, formProps }) {\r\n  const classes = makeStyles(styles, { name: 'AddRiskObjectView' })();\r\n\r\n  const validFields = [\r\n    'text',\r\n    'number',\r\n    'datepicker',\r\n    'select',\r\n    'autocomplete',\r\n    'autocompletemuiAsync',\r\n    'radio',\r\n    'checkbox',\r\n    'toggle',\r\n    'hidden',\r\n    'spacer',\r\n    'label',\r\n  ];\r\n\r\n  return (\r\n    <FormGrid container spacing={4}>\r\n      {field.objectDef.map((def, idx) => {\r\n        if (!validFields.includes(def.type)) return null;\r\n\r\n        const condition = utils.risk.getCondition(def, field.objectDef);\r\n        const conditionValue = condition && formProps.watch(`${field.name}.${condition.name}`);\r\n        const isValid = !condition || (condition && utils.risk.isConditionValid(condition, conditionValue));\r\n        const hasLegend = isString(def.header);\r\n\r\n        const gridClasses = {\r\n          root: classnames({\r\n            [classes.grid]: true,\r\n            [classes.gridCollapsed]: Boolean(condition && !isValid),\r\n          }),\r\n        };\r\n\r\n        // grid spacer\r\n        if (utils.risk.isGridSpacer(def)) {\r\n          return (\r\n            <FormGrid\r\n              item\r\n              xs={12}\r\n              {...def.gridSize}\r\n              nestedClasses={{ root: classes.spacer }}\r\n              key={`${field.name}-spacer-${idx}`}\r\n              data-testid={`spacer-${field.name}-${idx}`}\r\n            >\r\n              <span />\r\n            </FormGrid>\r\n          );\r\n        }\r\n\r\n        return (\r\n          <Fragment key={def.name}>\r\n            {hasLegend && (\r\n              <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                <FormLegend text={def.header} />\r\n              </FormGrid>\r\n            )}\r\n            {utils.risk.isHiddenField(def) ? (\r\n              <AddRiskFormField\r\n                field={{\r\n                  ...def,\r\n                  name: `${field.name}.${def.name}`,\r\n                  defaultValue: def.value,\r\n                }}\r\n                formProps={formProps}\r\n              />\r\n            ) : (\r\n              <FormGrid item xs={12} {...def.gridSize} nestedClasses={gridClasses}>\r\n                <Collapse in={isValid}>\r\n                  <AddRiskFormField\r\n                    field={{\r\n                      ...def,\r\n                      name: `${field.name}.${def.name}`,\r\n                      defaultValue: def.value,\r\n                    }}\r\n                    formProps={formProps}\r\n                  />\r\n                </Collapse>\r\n              </FormGrid>\r\n            )}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </FormGrid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}