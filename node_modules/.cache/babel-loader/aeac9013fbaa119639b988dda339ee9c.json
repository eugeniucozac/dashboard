{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\AvatarGroup\\\\AvatarGroup.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport kebabCase from 'lodash/kebabCase'; // app\n\nimport { AvatarGroupView } from './AvatarGroup.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAvatarGroup.propTypes = {\n  max: PropTypes.number,\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    fullName: PropTypes.string,\n    firstName: PropTypes.string,\n    lastName: PropTypes.string,\n    emailId: PropTypes.string\n  })).isRequired,\n  showFullname: PropTypes.bool,\n  nestedClasses: PropTypes.object,\n  testid: PropTypes.string\n};\nAvatarGroup.defaultProps = {\n  max: 3\n};\nexport default function AvatarGroup(_ref) {\n  var _this = this;\n\n  var users = _ref.users,\n      max = _ref.max,\n      showFullname = _ref.showFullname,\n      nestedClasses = _ref.nestedClasses,\n      rest = _objectWithoutProperties(_ref, [\"users\", \"max\", \"showFullname\", \"nestedClasses\"]);\n\n  var handleClickTooltip = function handleClickTooltip(event) {\n    event.stopPropagation();\n  };\n\n  var usersFiltered = utils.users.getWithName(users); // abort\n\n  if (!utils.generic.isValidArray(usersFiltered, true)) return null; // instead of rendering the +1, we actually show the last avatar where +1 would have been displayed\n\n  var adjustedMax = usersFiltered.length === max + 1 ? max + 1 : max;\n  var usersVisible = usersFiltered.slice(0, adjustedMax);\n  var usersHidden = usersFiltered.slice(adjustedMax);\n  var usersHiddenText = usersHidden.map(function (userObj) {\n    var fullname = utils.user.fullname(userObj);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: fullname\n    }, \"\".concat(userObj.id, \"-\").concat(kebabCase(userObj.emailId)), false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 12\n    }, _this);\n  });\n  return /*#__PURE__*/_jsxDEV(AvatarGroupView, {\n    usersVisible: usersVisible,\n    usersHidden: usersHidden,\n    showFullname: showFullname,\n    tooltip: usersHiddenText,\n    avatarProps: rest,\n    nestedClasses: nestedClasses,\n    handleClickTooltip: handleClickTooltip\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n_c = AvatarGroup;\nAvatarGroup.displayName = \"AvatarGroup\";\nAvatarGroup.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AvatarGroup\",\n  \"props\": {\n    \"max\": {\n      \"defaultValue\": {\n        \"value\": \"3\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"users\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"fullName\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"firstName\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"lastName\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"emailId\": {\n              \"name\": \"string\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"showFullname\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"testid\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\AvatarGroup\\\\AvatarGroup.js\"] = {\n    name: \"AvatarGroup\",\n    docgenInfo: AvatarGroup.__docgenInfo,\n    path: \"src\\\\components\\\\AvatarGroup\\\\AvatarGroup.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AvatarGroup\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/AvatarGroup/AvatarGroup.js"],"names":["React","PropTypes","kebabCase","AvatarGroupView","utils","AvatarGroup","propTypes","max","number","users","arrayOf","shape","id","oneOfType","string","fullName","firstName","lastName","emailId","isRequired","showFullname","bool","nestedClasses","object","testid","defaultProps","rest","handleClickTooltip","event","stopPropagation","usersFiltered","getWithName","generic","isValidArray","adjustedMax","length","usersVisible","slice","usersHidden","usersHiddenText","map","userObj","fullname","user"],"mappings":";;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,SAAP,MAAsB,kBAAtB,C,CAEA;;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,WAAW,CAACC,SAAZ,GAAwB;AACtBC,EAAAA,GAAG,EAAEN,SAAS,CAACO,MADO;AAEtBC,EAAAA,KAAK,EAAER,SAAS,CAACS,OAAV,CACLT,SAAS,CAACU,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEX,SAAS,CAACY,SAAV,CAAoB,CAACZ,SAAS,CAACa,MAAX,EAAmBb,SAAS,CAACO,MAA7B,CAApB,CADU;AAEdO,IAAAA,QAAQ,EAAEd,SAAS,CAACa,MAFN;AAGdE,IAAAA,SAAS,EAAEf,SAAS,CAACa,MAHP;AAIdG,IAAAA,QAAQ,EAAEhB,SAAS,CAACa,MAJN;AAKdI,IAAAA,OAAO,EAAEjB,SAAS,CAACa;AALL,GAAhB,CADK,EAQLK,UAVoB;AAWtBC,EAAAA,YAAY,EAAEnB,SAAS,CAACoB,IAXF;AAYtBC,EAAAA,aAAa,EAAErB,SAAS,CAACsB,MAZH;AAatBC,EAAAA,MAAM,EAAEvB,SAAS,CAACa;AAbI,CAAxB;AAgBAT,WAAW,CAACoB,YAAZ,GAA2B;AACzBlB,EAAAA,GAAG,EAAE;AADoB,CAA3B;AAIA,eAAe,SAASF,WAAT,OAA2E;AAAA;;AAAA,MAApDI,KAAoD,QAApDA,KAAoD;AAAA,MAA7CF,GAA6C,QAA7CA,GAA6C;AAAA,MAAxCa,YAAwC,QAAxCA,YAAwC;AAAA,MAA1BE,aAA0B,QAA1BA,aAA0B;AAAA,MAARI,IAAQ;;AACxF,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,KAAD,EAAW;AACpCA,IAAAA,KAAK,CAACC,eAAN;AACD,GAFD;;AAIA,MAAMC,aAAa,GAAG1B,KAAK,CAACK,KAAN,CAAYsB,WAAZ,CAAwBtB,KAAxB,CAAtB,CALwF,CAOxF;;AACA,MAAI,CAACL,KAAK,CAAC4B,OAAN,CAAcC,YAAd,CAA2BH,aAA3B,EAA0C,IAA1C,CAAL,EAAsD,OAAO,IAAP,CARkC,CAUxF;;AACA,MAAMI,WAAW,GAAGJ,aAAa,CAACK,MAAd,KAAyB5B,GAAG,GAAG,CAA/B,GAAmCA,GAAG,GAAG,CAAzC,GAA6CA,GAAjE;AAEA,MAAM6B,YAAY,GAAGN,aAAa,CAACO,KAAd,CAAoB,CAApB,EAAuBH,WAAvB,CAArB;AACA,MAAMI,WAAW,GAAGR,aAAa,CAACO,KAAd,CAAoBH,WAApB,CAApB;AAEA,MAAMK,eAAe,GAAGD,WAAW,CAACE,GAAZ,CAAgB,UAACC,OAAD,EAAa;AACnD,QAAMC,QAAQ,GAAGtC,KAAK,CAACuC,IAAN,CAAWD,QAAX,CAAoBD,OAApB,CAAjB;AACA,wBAAO;AAAA,gBAA0DC;AAA1D,iBAAaD,OAAO,CAAC7B,EAArB,cAA2BV,SAAS,CAACuC,OAAO,CAACvB,OAAT,CAApC;AAAA;AAAA;AAAA;AAAA,aAAP;AACD,GAHuB,CAAxB;AAKA,sBACE,QAAC,eAAD;AACE,IAAA,YAAY,EAAEkB,YADhB;AAEE,IAAA,WAAW,EAAEE,WAFf;AAGE,IAAA,YAAY,EAAElB,YAHhB;AAIE,IAAA,OAAO,EAAEmB,eAJX;AAKE,IAAA,WAAW,EAAEb,IALf;AAME,IAAA,aAAa,EAAEJ,aANjB;AAOE,IAAA,kBAAkB,EAAEK;AAPtB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAhCuBtB,W;AAAAA,W","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport kebabCase from 'lodash/kebabCase';\r\n\r\n// app\r\nimport { AvatarGroupView } from './AvatarGroup.view';\r\nimport * as utils from 'utils';\r\n\r\nAvatarGroup.propTypes = {\r\n  max: PropTypes.number,\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      fullName: PropTypes.string,\r\n      firstName: PropTypes.string,\r\n      lastName: PropTypes.string,\r\n      emailId: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  showFullname: PropTypes.bool,\r\n  nestedClasses: PropTypes.object,\r\n  testid: PropTypes.string,\r\n};\r\n\r\nAvatarGroup.defaultProps = {\r\n  max: 3,\r\n};\r\n\r\nexport default function AvatarGroup({ users, max, showFullname, nestedClasses, ...rest }) {\r\n  const handleClickTooltip = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  const usersFiltered = utils.users.getWithName(users);\r\n\r\n  // abort\r\n  if (!utils.generic.isValidArray(usersFiltered, true)) return null;\r\n\r\n  // instead of rendering the +1, we actually show the last avatar where +1 would have been displayed\r\n  const adjustedMax = usersFiltered.length === max + 1 ? max + 1 : max;\r\n\r\n  const usersVisible = usersFiltered.slice(0, adjustedMax);\r\n  const usersHidden = usersFiltered.slice(adjustedMax);\r\n\r\n  const usersHiddenText = usersHidden.map((userObj) => {\r\n    const fullname = utils.user.fullname(userObj);\r\n    return <div key={`${userObj.id}-${kebabCase(userObj.emailId)}`}>{fullname}</div>;\r\n  });\r\n\r\n  return (\r\n    <AvatarGroupView\r\n      usersVisible={usersVisible}\r\n      usersHidden={usersHidden}\r\n      showFullname={showFullname}\r\n      tooltip={usersHiddenText}\r\n      avatarProps={rest}\r\n      nestedClasses={nestedClasses}\r\n      handleClickTooltip={handleClickTooltip}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}