{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { authLogout } from 'stores';\nexport var getViewTableDocuments = function getViewTableDocuments(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getViewTableDocuments'\n    };\n    var referenceId = params.referenceId,\n        sectionType = params.sectionType,\n        policyRef = params.policyRef,\n        instructionId = params.instructionId,\n        _params$documentTypeK = params.documentTypeKey,\n        documentTypeKey = _params$documentTypeK === void 0 ? '' : _params$documentTypeK;\n\n    if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n      dispatch(getDmsWidgetDocumentsRequest(params));\n    } else {\n      dispatch(getViewTableDocumentsRequest(params));\n    }\n\n    if (!referenceId || !sectionType) {\n      dispatch(getViewTableDocumentsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing or invalid params'\n      })));\n      return;\n    }\n\n    var isDmsFromPiRiskRef = documentTypeKey && utils.dmsFormatter.isDmsFromPiRiskRef(documentTypeKey);\n\n    var _ref = isDmsFromPiRiskRef && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey),\n        documentTypeDescription = _ref.documentTypeDescription;\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/list?srcApplication=BOTH\".concat(isDmsFromPiRiskRef ? '&documentTypes=' + documentTypeDescription : ''),\n      data: [{\n        referenceId: referenceId,\n        sectionType: sectionType\n      }].concat(_toConsumableArray(policyRef && instructionId ? [{\n        referenceId: policyRef,\n        sectionType: constants.DMS_CONTEXT_POLICY\n      }, {\n        referenceId: instructionId,\n        sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION\n      }] : []))\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n        dispatch(getDmsWidgetDocumentsSuccess(data.data));\n      } else {\n        dispatch(getViewTableDocumentsSuccess(data.data));\n      }\n\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (dms.getViewTableDocuments)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n\n      if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n        dispatch(getDmsWidgetDocumentsFailure(err));\n      } else {\n        dispatch(getViewTableDocumentsFailure(err));\n      }\n\n      return err;\n    });\n  };\n};\nexport var getViewTableDocumentsRequest = function getViewTableDocumentsRequest(payload) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST',\n    payload: payload\n  };\n};\nexport var getDmsWidgetDocumentsRequest = function getDmsWidgetDocumentsRequest(payload) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENT_REQUEST',\n    payload: payload\n  };\n};\nexport var getViewTableDocumentsSuccess = function getViewTableDocumentsSuccess(responseData) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getDmsWidgetDocumentsSuccess = function getDmsWidgetDocumentsSuccess(responseData) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENTS_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getViewTableDocumentsFailure = function getViewTableDocumentsFailure(error) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};\nexport var getDmsWidgetDocumentsFailure = function getDmsWidgetDocumentsFailure(error) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.getViewTableDocuments.js"],"names":["utils","constants","authLogout","getViewTableDocuments","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","referenceId","sectionType","policyRef","instructionId","documentTypeKey","isFromDmsWidget","getDmsWidgetDocumentsRequest","getViewTableDocumentsRequest","getViewTableDocumentsFailure","message","isDmsFromPiRiskRef","dmsFormatter","getDocumentTypeInfo","documentTypeDescription","api","post","token","accessToken","dmsService","path","data","DMS_CONTEXT_POLICY","DMS_CONTEXT_PROCESSING_INSTRUCTION","then","response","handleResponse","json","handleNewData","getDmsWidgetDocumentsSuccess","getViewTableDocumentsSuccess","catch","err","handleError","handleUnauthorized","getDmsWidgetDocumentsFailure","payload","type","responseData","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getViewTableDocuments = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.getViewTableDocuments',\r\n  };\r\n\r\n  const { referenceId, sectionType, policyRef, instructionId, documentTypeKey = '' } = params;\r\n\r\n  if(params?.isFromDmsWidget) {\r\n    dispatch(getDmsWidgetDocumentsRequest(params));\r\n  } else {\r\n    dispatch(getViewTableDocumentsRequest(params));\r\n  }\r\n\r\n  if (!referenceId || !sectionType) {\r\n    dispatch(getViewTableDocumentsFailure({ ...defaultError, message: 'Missing or invalid params' }));\r\n    return;\r\n  }\r\n\r\n  const isDmsFromPiRiskRef = documentTypeKey && utils.dmsFormatter.isDmsFromPiRiskRef(documentTypeKey);\r\n  const { documentTypeDescription } = isDmsFromPiRiskRef && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey);\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/list?srcApplication=BOTH${isDmsFromPiRiskRef ? '&documentTypes=' + documentTypeDescription : ''}`,\r\n      data: [\r\n        {\r\n          referenceId: referenceId,\r\n          sectionType: sectionType,\r\n        },\r\n        ...(policyRef && instructionId\r\n          ? [\r\n              {\r\n                referenceId: policyRef,\r\n                sectionType: constants.DMS_CONTEXT_POLICY,\r\n              },\r\n              {\r\n                referenceId: instructionId,\r\n                sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n              },\r\n            ]\r\n          : []),\r\n      ],\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      if(params?.isFromDmsWidget) {\r\n        dispatch(getDmsWidgetDocumentsSuccess(data.data));\r\n      } else {\r\n        dispatch(getViewTableDocumentsSuccess(data.data));\r\n      }\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (dms.getViewTableDocuments)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      if(params?.isFromDmsWidget) {\r\n        dispatch(getDmsWidgetDocumentsFailure(err));\r\n      } else {\r\n        dispatch(getViewTableDocumentsFailure(err));\r\n      }\r\n      return err;\r\n    })\r\n};\r\n\r\nexport const getViewTableDocumentsRequest = (payload) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsRequest = (payload) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENT_REQUEST',\r\n    payload\r\n  }\r\n}\r\n\r\nexport const getViewTableDocumentsSuccess = (responseData) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsSuccess = (responseData) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENTS_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n}\r\n\r\nexport const getViewTableDocumentsFailure = (error) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsFailure = (error) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}