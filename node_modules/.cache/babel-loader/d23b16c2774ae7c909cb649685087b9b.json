{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsPreviewDashboard\\\\ClaimsPreviewDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport get from 'lodash/get';\nimport moment from 'moment'; // app\n\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\nimport { selectClaimsInformation, selectLossInformation, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectRefDataCatCodesList, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections, setClaimsStepperControl, selectClaimsTabSelectedClaimData, getViewTableDocuments } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Edit } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsPreviewDashboard(props) {\n  _s();\n\n  var _get, _claimsInformation$cl, _useSelector, _useSelector2, _catCodes$find, _policySections$find, _interests$find, _useState3;\n\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var history = useHistory();\n  var claimData = props.claimDataFromRef;\n  var claimId = (_get = get(claimData, 'claimId')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var claimStatus = (_claimsInformation$cl = claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus) !== null && _claimsInformation$cl !== void 0 ? _claimsInformation$cl : '';\n  var lossId = ((_useSelector = useSelector(selectClaimsTabSelectedClaimData)) === null || _useSelector === void 0 ? void 0 : _useSelector.lossDetailID) || '';\n  var lossInformation = useSelector(selectLossInformation);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector2 = useSelector(selectClaimsInterest)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var catCodes = useSelector(selectRefDataCatCodesList);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.catCodesID) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.catCodeDescription;\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? utils.string.t('claims.typeOfSettlement.ourShare') : utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  useEffect(function () {\n    if (claimData) {\n      dispatch(getClaimsPreviewInformation({\n        claimId: claimId.toString() || (claimData === null || claimData === void 0 ? void 0 : claimData.claimID),\n        claimRefParams: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        sourceIdParams: (claimData === null || claimData === void 0 ? void 0 : claimData.sourceId) || (claimData === null || claimData === void 0 ? void 0 : claimData.sourceID),\n        divisionIDParams: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionId) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID) || (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID),\n        viewLoader: false\n      }));\n      dispatch(getLossInformation({\n        lossDetailsId: lossId || (claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID),\n        sourceIdParams: (claimData === null || claimData === void 0 ? void 0 : claimData.sourceId) || (claimData === null || claimData === void 0 ? void 0 : claimData.sourceID),\n        divisionIdParam: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionId) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID) || (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID),\n        claimRefParam: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        viewLoader: false\n      }));\n      dispatch(getPolicyInformation({\n        xbPolicyID: claimData === null || claimData === void 0 ? void 0 : claimData.policyId,\n        xbInstanceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        viewLoader: false\n      }));\n      dispatch(getPolicySections({\n        xbPolicyID: claimData === null || claimData === void 0 ? void 0 : claimData.policyId,\n        xbInstanceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        viewLoader: false\n      }));\n    }\n  }, [claimData, lossId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleEditClaim = function handleEditClaim() {\n    dispatch(getViewTableDocuments({\n      referenceId: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      sectionType: constants.DMS_CONTEXT_CLAIM\n    }));\n    dispatch(setClaimsStepperControl(1));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        linkPolicy: {\n          isSearchTerm: '',\n          claimObj: claimData\n        },\n        redirectUrl: location === null || location === void 0 ? void 0 : location.pathname\n      }\n    });\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.dateTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.dateTime)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: \"\".concat(utils.string.t('claims.claimInformation.complexityBasis'), '*'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.referral'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }, {\n    title: utils.string.t('claims.claimInformation.workflowStatus'),\n    value: claimData === null || claimData === void 0 ? void 0 : claimData.status\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStage'),\n    value: claimData === null || claimData === void 0 ? void 0 : claimData.claimStage\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.text),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.text),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n\n  var _useState = useState((_useState3 = {}, _defineProperty(_useState3, utils.string.t('claims.lossInformation.title'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.policyTitle'), true), _defineProperty(_useState3, utils.string.t('claims.underWritingGroups.tilteInformation'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.title'), true), _useState3)),\n      _useState2 = _slicedToArray(_useState, 2),\n      accordionsExpandStatus = _useState2[0],\n      setAccordiansStatus = _useState2[1];\n\n  var setAccordiansIsExpanded = function setAccordiansIsExpanded(cardName, isExpand) {\n    var accordionsStatus = _objectSpread({}, accordionsExpandStatus);\n\n    accordionsStatus[cardName] = isExpand;\n    setAccordiansStatus(accordionsStatus);\n  };\n\n  var sections = [{\n    title: utils.string.t('claims.claimInformation.title'),\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\n    },\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\n    data: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isClaimInfoLoading\n      });\n    }),\n    actions: _toConsumableArray(claimStatus !== constants.STATUS_CLAIMS_DRAFT_UPPER ? [] : [{\n      id: 'edit',\n      icon: Edit,\n      color: 'primary',\n      disabled: true,\n      onClick: function onClick() {\n        return handleEditClaim(claimsInformation);\n      }\n    }])\n  }, {\n    title: utils.string.t('claims.claimInformation.policyTitle'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\n    },\n    data: policyInfo\n  }, {\n    title: utils.string.t('claims.underWritingGroups.tilteInformation'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.tilteInformation')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.tilteInformation'), isExpanded);\n    },\n    data: underWritingInfo\n  }, {\n    title: utils.string.t('claims.lossInformation.title'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\n    },\n    data: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    })\n  }]; // abort\n\n  if (!claimsInformation) return null;\n  return /*#__PURE__*/_jsxDEV(ClaimsPreviewDashboardView, {\n    sections: sections,\n    underWritingGroupColumns: underWritingGroupColumns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 397,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ClaimsPreviewDashboard, \"/p0ferJFpqnV+1rRBDHJZD7JG/g=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsPreviewDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsPreviewDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsPreviewDashboard/ClaimsPreviewDashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","useLocation","get","moment","ClaimsPreviewDashboardView","selectClaimsInformation","selectLossInformation","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectRefDataCatCodesList","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","setClaimsStepperControl","selectClaimsTabSelectedClaimData","getViewTableDocuments","constants","utils","config","Edit","ClaimsPreviewDashboard","props","dispatch","location","history","claimData","claimDataFromRef","claimId","claimsInformation","claimStatus","lossId","lossDetailID","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","policySections","origCurrencies","state","countriesList","catCodes","catCode","find","item","Number","catCodesID","catCodeDescription","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","string","t","movementType","orderPercentage","policySectionInfo","policySectionID","sec","id","toString","name","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","claimID","claimRefParams","claimReference","sourceIdParams","sourceId","sourceID","divisionIDParams","divisionId","departmentID","divisionID","viewLoader","lossDetailsId","divisionIdParam","claimRefParam","xbPolicyID","policyId","xbInstanceID","handleEditClaim","referenceId","sectionType","DMS_CONTEXT_CLAIM","push","pathname","routes","claimsFNOL","newLoss","linkPolicy","isSearchTerm","claimObj","redirectUrl","lossInfo","title","value","lossRef","fromDate","format","ui","date","text","toDate","firstContactDate","dateTime","lossName","lossDescription","assignedToName","claimInfo","claimReceivedDate","claimantName","lossQualifierName","lossFromDate","lossToDate","fgunarrative","beAdjusterID","complexity","adjusterName","nonBEAdjusterName","referralValue","status","adjusterReference","referralResponseDescription","priorityDescription","claimStage","policyInfo","policyRef","statusCode","policyNote","inceptionDate","expiryDate","client","insured","bordereauClaim","isBordereau","certificateInceptionDate","slashNumericDateAndTime","certificateExpiryDate","certificateNumber","bordereauPeriod","reInsured","company","division","originalCurrency","settlementCurrencyCode","policyInterestID","description","settlementCountry","underWritingGroupColumns","label","accordionsExpandStatus","setAccordiansStatus","setAccordiansIsExpanded","cardName","isExpand","accordionsStatus","sections","handleExpanded","isExpanded","data","map","info","actions","STATUS_CLAIMS_DRAFT_UPPER","icon","color","disabled","onClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\r\nimport {\r\n  selectClaimsInformation,\r\n  selectLossInformation,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectRefDataCatCodesList,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections,\r\n  setClaimsStepperControl,\r\n  selectClaimsTabSelectedClaimData,\r\n  getViewTableDocuments,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nexport default function ClaimsPreviewDashboard(props) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const claimData = props.claimDataFromRef;\r\n  const claimId = get(claimData, 'claimId') ?? '';\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const claimStatus = claimsInformation?.claimStatus ?? '';\r\n  const lossId = useSelector(selectClaimsTabSelectedClaimData)?.lossDetailID || '';\r\n\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n\r\n  const catCodes = useSelector(selectRefDataCatCodesList);\r\n  const catCode = catCodes.find((item) => Number(item.catCodesID) === lossInformation.catCodesID)?.catCodeDescription;\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder\r\n      ? utils.string.t('claims.typeOfSettlement.ourShare')\r\n      : utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(\r\n      (currency) => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase()\r\n    )?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`;\r\n  };\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find((country) => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName;\r\n    return countryName;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (claimData) {\r\n      dispatch(\r\n        getClaimsPreviewInformation({\r\n          claimId: claimId.toString() || claimData?.claimID,\r\n          claimRefParams: claimData?.claimReference,\r\n          sourceIdParams: claimData?.sourceId || claimData?.sourceID,\r\n          divisionIDParams: claimData?.divisionId || claimData?.departmentID || claimData?.divisionID,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(\r\n        getLossInformation({\r\n          lossDetailsId: lossId || claimData?.lossDetailID,\r\n          sourceIdParams: claimData?.sourceId || claimData?.sourceID,\r\n          divisionIdParam: claimData?.divisionId || claimData?.departmentID || claimData?.divisionID,\r\n          claimRefParam: claimData?.claimReference,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(getPolicyInformation({ xbPolicyID: claimData?.policyId, xbInstanceID: claimData?.sourceId, viewLoader: false }));\r\n      dispatch(getPolicySections({ xbPolicyID: claimData?.policyId, xbInstanceID: claimData?.sourceId, viewLoader: false }));\r\n    }\r\n  }, [claimData, lossId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleEditClaim = () => {\r\n    dispatch(getViewTableDocuments({ referenceId: claimData?.claimReference, sectionType: constants.DMS_CONTEXT_CLAIM }));\r\n    dispatch(setClaimsStepperControl(1));\r\n\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        linkPolicy: {\r\n          isSearchTerm: '',\r\n          claimObj: claimData,\r\n        },\r\n        redirectUrl: location?.pathname,\r\n      },\r\n    });\r\n  };\r\n\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value: lossInformation?.firstContactDate && moment(lossInformation?.firstContactDate).format(config.ui.format.date.dateTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.assignedToName },\r\n  ];\r\n\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value: claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.dateTime),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossFromDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.text),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    { title: `${utils.string.t('claims.claimInformation.complexityBasis')}${'*'}`, value: claimsInformation?.complexity },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.referral'), value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus'), value: claimsInformation?.claimStatus },\r\n    { title: utils.string.t('claims.claimInformation.workflowStatus'), value: claimData?.status },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse'), value: claimsInformation?.referralResponseDescription },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    { title: utils.string.t('claims.claimInformation.claimStage'), value: claimData?.claimStage },\r\n  ];\r\n\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value: policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.text),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.text),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n          moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n          moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  const [accordionsExpandStatus, setAccordiansStatus] = useState({\r\n    [utils.string.t('claims.lossInformation.title')]: true,\r\n    [utils.string.t('claims.claimInformation.policyTitle')]: true,\r\n    [utils.string.t('claims.underWritingGroups.tilteInformation')]: true,\r\n    [utils.string.t('claims.claimInformation.title')]: true,\r\n  });\r\n\r\n  const setAccordiansIsExpanded = (cardName, isExpand) => {\r\n    const accordionsStatus = { ...accordionsExpandStatus };\r\n    accordionsStatus[cardName] = isExpand;\r\n    setAccordiansStatus(accordionsStatus);\r\n  };\r\n\r\n  const sections = [\r\n    {\r\n      title: utils.string.t('claims.claimInformation.title'),\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\r\n      },\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\r\n      data: claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isClaimInfoLoading,\r\n      })),\r\n      actions: [\r\n        ...(claimStatus !== constants.STATUS_CLAIMS_DRAFT_UPPER\r\n          ? []\r\n          : [\r\n              {\r\n                id: 'edit',\r\n                icon: Edit,\r\n                color: 'primary',\r\n                disabled: true,\r\n                onClick: () => handleEditClaim(claimsInformation),\r\n              },\r\n            ]),\r\n      ],\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.policyTitle'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\r\n      },\r\n      data: policyInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.underWritingGroups.tilteInformation'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.tilteInformation')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.tilteInformation'), isExpanded);\r\n      },\r\n      data: underWritingInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.title'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\r\n      },\r\n      data: lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      })),\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!claimsInformation) return null;\r\n\r\n  return <ClaimsPreviewDashboardView sections={sections} underWritingGroupColumns={underWritingGroupColumns} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}