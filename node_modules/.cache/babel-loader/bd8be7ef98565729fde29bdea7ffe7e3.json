{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseTeamList\\\\PremiumProcessingCaseTeamList.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './PremiumProcessingCaseTeamList.styles';\nimport { ContentHeader, Info, Link, Warning, Skeleton } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { selectCaseIsCheckSigning, selectCaseTeamLoadingFlag } from 'stores'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseTeamList.propTypes = {\n  caseTeamData: PropTypes.object,\n  caseInstructionId: PropTypes.number,\n  caseInstructionStatusId: PropTypes.number,\n  openUpdatingPopup: PropTypes.func.isRequired\n};\nexport default function PremiumProcessingCaseTeamList(_ref) {\n  _s();\n\n  var _this = this;\n\n  var caseTeamData = _ref.caseTeamData,\n      caseInstructionId = _ref.caseInstructionId,\n      caseInstructionStatusId = _ref.caseInstructionStatusId,\n      openUpdatingPopup = _ref.openUpdatingPopup;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseTeamList'\n  })();\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(caseInstructionStatusId);\n  var hasCheckSigning = useSelector(selectCaseIsCheckSigning) || false;\n  var isCaseDetailsLoading = useSelector(selectCaseTeamLoadingFlag);\n\n  var renderOnStatus = function renderOnStatus() {\n    if (isSubmittedProcessing) {\n      window.open(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(caseInstructionId), '_blank');\n    } else {\n      openUpdatingPopup();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: [/*#__PURE__*/_jsxDEV(ContentHeader, {\n      title: utils.string.t('premiumProcessing.caseTeam.caseDetails'),\n      marginBottom: 0\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), caseTeamData && !isCaseDetailsLoading ? /*#__PURE__*/_jsxDEV(\"section\", {\n      className: classes.info,\n      children: /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [Object.keys(caseTeamData).map(function (keyName) {\n          var _classnames;\n\n          var isQc = keyName === 'qualityControl';\n          var isPass = isQc && caseTeamData[keyName] === 'Pass' ? true : false;\n          var value = caseTeamData[keyName] || ' ';\n          var excludedProperties = ['departmentId', 'processId', 'xbInstanceId', 'processName', 'primaryCaseID'];\n          return !excludedProperties.includes(keyName) && /*#__PURE__*/_jsxDEV(Info, {\n            showSkeleton: isCaseDetailsLoading,\n            title: utils.string.t(\"premiumProcessing.caseDetailsSection.\".concat(keyName)),\n            description: value,\n            nestedClasses: {\n              root: classnames(classes.boxes),\n              description: classnames((_classnames = {}, _defineProperty(_classnames, classes.passColor, isPass && isQc), _defineProperty(_classnames, classes.failColor, !isPass && isQc), _classnames))\n            }\n          }, keyName, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 19\n          }, _this);\n        }), !hasCheckSigning && /*#__PURE__*/_jsxDEV(Info, {\n          showSkeleton: isCaseDetailsLoading,\n          title: utils.string.t('premiumProcessing.caseDetailsSection.processingInstruction'),\n          nestedClasses: {\n            root: classnames(classes.boxes)\n          },\n          content: /*#__PURE__*/_jsxDEV(Link, {\n            text: utils.string.t('premiumProcessing.processingInstructionPI', {\n              caseInstructionId: caseInstructionId\n            }),\n            color: \"secondary\",\n            underline: \"always\",\n            onClick: renderOnStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 69,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: isCaseDetailsLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n        animation: \"wave\",\n        height: 120,\n        displayNumber: 1\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(Box, {\n        p: 5,\n        children: /*#__PURE__*/_jsxDEV(Warning, {\n          text: utils.string.t('premiumProcessing.noCaseDetails'),\n          type: \"info\",\n          align: \"center\",\n          size: \"small\",\n          icon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseTeamList, \"FeZh16psuxSs95ItGpaETb9AR+o=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PremiumProcessingCaseTeamList;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseTeamList\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseTeamList/PremiumProcessingCaseTeamList.js"],"names":["React","useSelector","PropTypes","classnames","styles","ContentHeader","Info","Link","Warning","Skeleton","utils","config","selectCaseIsCheckSigning","selectCaseTeamLoadingFlag","makeStyles","Box","PremiumProcessingCaseTeamList","propTypes","caseTeamData","object","caseInstructionId","number","caseInstructionStatusId","openUpdatingPopup","func","isRequired","classes","name","isSubmittedProcessing","processingInstructions","status","hasCheckSigning","isCaseDetailsLoading","renderOnStatus","window","open","routes","steps","string","t","info","Object","keys","map","keyName","isQc","isPass","value","excludedProperties","includes","root","boxes","description","passColor","failColor"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCaseTeamList.styles';\r\nimport { ContentHeader, Info, Link, Warning, Skeleton } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { selectCaseIsCheckSigning, selectCaseTeamLoadingFlag } from 'stores';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nPremiumProcessingCaseTeamList.propTypes = {\r\n  caseTeamData: PropTypes.object,\r\n  caseInstructionId: PropTypes.number,\r\n  caseInstructionStatusId: PropTypes.number,\r\n  openUpdatingPopup: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseTeamList({ caseTeamData, caseInstructionId, caseInstructionStatusId, openUpdatingPopup }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseTeamList' })();\r\n\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(caseInstructionStatusId);\r\n  const hasCheckSigning = useSelector(selectCaseIsCheckSigning) || false;\r\n  const isCaseDetailsLoading = useSelector(selectCaseTeamLoadingFlag);\r\n\r\n  const renderOnStatus = () => {\r\n    if (isSubmittedProcessing) {\r\n      window.open(`${config.routes.processingInstructions.steps}/${caseInstructionId}`, '_blank');\r\n    } else {\r\n      openUpdatingPopup();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Box>\r\n      <ContentHeader title={utils.string.t('premiumProcessing.caseTeam.caseDetails')} marginBottom={0} />\r\n      {caseTeamData && !isCaseDetailsLoading ? (\r\n        <section className={classes.info}>\r\n          <>\r\n            {Object.keys(caseTeamData).map((keyName) => {\r\n              const isQc = keyName === 'qualityControl';\r\n              const isPass = isQc && caseTeamData[keyName] === 'Pass' ? true : false;\r\n              const value = caseTeamData[keyName] || ' ';\r\n              const excludedProperties = ['departmentId', 'processId', 'xbInstanceId', 'processName', 'primaryCaseID'];\r\n\r\n              return (\r\n                !excludedProperties.includes(keyName) && (\r\n                  <Info\r\n                    showSkeleton={isCaseDetailsLoading}\r\n                    key={keyName}\r\n                    title={utils.string.t(`premiumProcessing.caseDetailsSection.${keyName}`)}\r\n                    description={value}\r\n                    nestedClasses={{\r\n                      root: classnames(classes.boxes),\r\n                      description: classnames({\r\n                        [classes.passColor]: isPass && isQc,\r\n                        [classes.failColor]: !isPass && isQc,\r\n                      }),\r\n                    }}\r\n                  />\r\n                )\r\n              );\r\n            })}\r\n            {!hasCheckSigning && (\r\n              <Info\r\n                showSkeleton={isCaseDetailsLoading}\r\n                title={utils.string.t('premiumProcessing.caseDetailsSection.processingInstruction')}\r\n                nestedClasses={{ root: classnames(classes.boxes) }}\r\n                content={\r\n                  <Link\r\n                    text={utils.string.t('premiumProcessing.processingInstructionPI', { caseInstructionId })}\r\n                    color=\"secondary\"\r\n                    underline=\"always\"\r\n                    onClick={renderOnStatus}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          </>\r\n        </section>\r\n      ) : (\r\n        <>\r\n          {isCaseDetailsLoading ? (\r\n            <Skeleton animation=\"wave\" height={120} displayNumber={1} />\r\n          ) :\r\n            <Box p={5}>\r\n              <Warning text={utils.string.t('premiumProcessing.noCaseDetails')} type=\"info\" align=\"center\" size=\"small\" icon />\r\n            </Box>\r\n          }\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}