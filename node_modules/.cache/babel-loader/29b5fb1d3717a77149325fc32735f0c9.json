{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport { CLAIM_POLICY_SEARCH_REQ_TYPES } from 'consts';\nexport var getPolicies = function getPolicies(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getPolicies'\n    };\n    var newRequestType = (params === null || params === void 0 ? void 0 : params.requestType) || CLAIM_POLICY_SEARCH_REQ_TYPES.search;\n    var prevDirection = get(claims, 'policies.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'policies.query') || '';\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'policies.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var prevSearchBy = get(claims, 'policies.searchBy') || '';\n    var newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\n    var newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\n    var datesExceptionFields = ['inceptionDate', 'expiryDate'];\n    var constructFilter = Object.entries(newFilterQuery);\n    var updatedFilter = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n      var column = filter[0];\n      var filterValue = datesExceptionFields.indexOf(column) > -1 && filter[1] ? [{\n        id: 1,\n        name: moment(new Date(filter[1])).format('YYYY-MM-DD')\n      }] : filter[1];\n      return utils.generic.isValidArray(filterValue, true) && {\n        column: column,\n        filterValue: filterValue\n      };\n    }).filter(function (item) {\n      return item;\n    }) : [];\n    var appliedParams = {\n      newRequestType: newRequestType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newSearchBy: newSearchBy,\n      updatedFilter: updatedFilter\n    };\n    var isNonFilterTypeCall = newRequestType !== CLAIM_POLICY_SEARCH_REQ_TYPES.filter;\n    var data = {\n      requestType: newRequestType,\n      filterLossClaimsCriteria: null,\n      page: params && params.page || 0,\n      pageSize: params && params.size || claims.policies.pageSize,\n      search: newQuery,\n      sortBy: newSortBy,\n      searchBy: newSearchBy,\n      direction: newDirection,\n      filterSearch: updatedFilter\n    };\n    dispatch(getPoliciesRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n    if (isNonFilterTypeCall) dispatch(addLoader('getPolicies'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/policy/claims/search',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getPoliciesSuccess(data, newRequestType));\n      return data;\n    }).catch(function (err) {\n      dispatch(getPoliciesFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      if (isNonFilterTypeCall) dispatch(removeLoader('getPolicies'));\n    });\n  };\n};\nexport var getPoliciesRequest = function getPoliciesRequest(params) {\n  return {\n    type: 'CLAIMS_POLICIES_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getPoliciesSuccess = function getPoliciesSuccess(data, newRequestType) {\n  return {\n    type: 'CLAIMS_POLICIES_GET_SUCCESS',\n    payload: {\n      items: data.data,\n      pagination: data.pagination,\n      requestType: newRequestType\n    }\n  };\n};\nexport var getPoliciesFailure = function getPoliciesFailure(error) {\n  return {\n    type: 'CLAIMS_POLICIES_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getPolicies.js"],"names":["authLogout","addLoader","removeLoader","utils","get","moment","CLAIM_POLICY_SEARCH_REQ_TYPES","getPolicies","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","newRequestType","requestType","search","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","prevSearchBy","newSearchBy","searchBy","newFilterQuery","filterTerm","datesExceptionFields","constructFilter","Object","entries","updatedFilter","generic","isValidArray","map","filter","column","filterValue","indexOf","id","name","Date","format","item","appliedParams","isNonFilterTypeCall","data","filterLossClaimsCriteria","page","pageSize","size","policies","filterSearch","getPoliciesRequest","api","post","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","getPoliciesSuccess","catch","err","getPoliciesFailure","handleUnauthorized","finally","type","payload","items","pagination","error"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\nimport { CLAIM_POLICY_SEARCH_REQ_TYPES } from 'consts';\r\n\r\nexport const getPolicies = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getPolicies',\r\n  };\r\n\r\n  const newRequestType = params?.requestType || CLAIM_POLICY_SEARCH_REQ_TYPES.search;\r\n\r\n  const prevDirection = get(claims, 'policies.sort.direction') || '';\r\n  const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n  const prevQuery = get(claims, 'policies.query') || '';\r\n  const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n  const prevSortBy = get(claims, 'policies.sort.by') || '';\r\n  const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n  const prevSearchBy = get(claims, 'policies.searchBy') || '';\r\n  const newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\r\n\r\n  const newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\r\n  const datesExceptionFields = ['inceptionDate', 'expiryDate'];\r\n  const constructFilter = Object.entries(newFilterQuery);\r\n  const updatedFilter = utils.generic.isValidArray(constructFilter, true)\r\n    ? constructFilter\r\n        .map((filter) => {\r\n          const column = filter[0];\r\n          const filterValue =\r\n            datesExceptionFields.indexOf(column) > -1 && filter[1]\r\n              ? [{ id: 1, name: moment(new Date(filter[1])).format('YYYY-MM-DD') }]\r\n              : filter[1];\r\n          return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n        })\r\n        .filter((item) => item)\r\n    : [];\r\n\r\n  const appliedParams = { newRequestType, newDirection, newQuery, newSortBy, newSearchBy, updatedFilter };\r\n  const isNonFilterTypeCall = newRequestType !== CLAIM_POLICY_SEARCH_REQ_TYPES.filter;\r\n\r\n  const data = {\r\n    requestType: newRequestType,\r\n    filterLossClaimsCriteria: null,\r\n    page: (params && params.page) || 0,\r\n    pageSize: (params && params.size) || claims.policies.pageSize,\r\n    search: newQuery,\r\n    sortBy: newSortBy,\r\n    searchBy: newSearchBy,\r\n    direction: newDirection,\r\n    filterSearch: updatedFilter,\r\n  };\r\n\r\n  dispatch(getPoliciesRequest({ params, appliedParams }));\r\n  if (isNonFilterTypeCall) dispatch(addLoader('getPolicies'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/policy/claims/search',\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getPoliciesSuccess(data, newRequestType));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getPoliciesFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      if (isNonFilterTypeCall) dispatch(removeLoader('getPolicies'));\r\n    });\r\n};\r\n\r\nexport const getPoliciesRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_POLICIES_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getPoliciesSuccess = (data, newRequestType) => {\r\n  return {\r\n    type: 'CLAIMS_POLICIES_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n      pagination: data.pagination,\r\n      requestType: newRequestType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getPoliciesFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_POLICIES_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}