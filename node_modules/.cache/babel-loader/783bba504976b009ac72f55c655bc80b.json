{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { postEditClaimDetailsInformation } from 'stores';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  lossQualifiers: PropTypes.object,\n  resetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool.isRequired,\n  claimsDocsList: PropTypes.array,\n  parentLossRef: PropTypes.string,\n  savedClaimInfo: PropTypes.object\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _watch, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      claimsDocsList = _ref.claimsDocsList,\n      claimRefId = _ref.claimRefId,\n      claimData = _ref.claimData,\n      policyInformation = _ref.policyInformation,\n      complexityValues = _ref.complexityValues,\n      index = _ref.index,\n      handleNext = _ref.handleNext,\n      handleSave = _ref.handleSave,\n      _handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      isBordereauChecked = _ref.isBordereauChecked,\n      lossQualifiers = _ref.lossQualifiers,\n      handleFormStatus = _ref.handleFormStatus,\n      lossInformation = _ref.lossInformation,\n      parentLossRef = _ref.parentLossRef,\n      savedClaimInfo = _ref.savedClaimInfo;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refResponseDisable = _useState4[0],\n      setRefResponseDisable = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refValuesDisable = _useState6[0],\n      setRefValueDisable = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      isDirty = _useForm.formState.isDirty;\n\n  var lossQualifierID = (_watch = watch('lossQualifierID')) === null || _watch === void 0 ? void 0 : _watch.id;\n  var complexValues = watch('complexity');\n  var refValues = watch('referral');\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n      setRefResponseDisable(refResponseState);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setRefResponseDisable(true);\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleNext(index);\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  useEffect(function () {\n    isDirty && handleFormStatus();\n  }, [isDirty]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n      return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n        return itr === item.name;\n      });\n    }).map(function (item) {\n      return item.id;\n    });\n    var isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\n    setDateValidation(!isRequired);\n\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\n      var fromDate = lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate; //|| savedClaimInfo?.lossFromDate;\n\n      var toDate = lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate; //|| savedClaimInfo?.lossToDate;\n      //  console.log('lossInformation?.fromDate  ', lossInformation?.fromDate);\n      //   console.log('savedClaimInfo?.lossFromDate ', savedClaimInfo?.lossFromDate);\n\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\n    } else {\n      setValue('fromDate', null);\n      setValue('toDate', null);\n    }\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (complexValues) {\n      var _complexityValues$fin;\n\n      var getComplexityStatus = ((_complexityValues$fin = complexityValues.find(function (item) {\n        return item.complexityRulesID === (complexValues === null || complexValues === void 0 ? void 0 : complexValues.complexityRulesID);\n      })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      setRefValueDisable(getComplexityStatus);\n      getRefValues(refValues);\n    } else if (complexValues === null) {\n      setRefValueDisable(false);\n    }\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  console.log('lossInformation?.fromDate ', lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate);\n  console.log('savedClaimInfo?.lossToDate ', savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossToDate);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      mb: 0,\n      \"data-testid\": \"register-claim-card-information\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.legendContainer,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.claimInformation.title'),\n            nestedClasses: {\n              root: classes.formLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef), \" | \").concat(policyInformation.policyRef, \" | \").concat(policyInformation.insured),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 157,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-claimsCardInformation\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.claimInformation.claimRef'),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (_ref2 = (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                  nestedClasses: {\n                    root: classes.claimRef\n                  },\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                  error: errors.fromDate,\n                  muiComponentProps: {\n                    disabled: dateValidation,\n                    fullWidth: true,\n                    classes: {\n                      root: classes.datepicker\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                  error: errors.location\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 194,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 193,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 192,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 198,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                  error: errors.complexity\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 204,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 203,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 15\n            }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                  error: errors.bordereauClaim,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 209,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 7,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                          error: errors.claimReceivedDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 226,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 225,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 5,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                      error: errors.toDate,\n                      muiComponentProps: {\n                        disabled: dateValidation,\n                        fullWidth: true,\n                        classes: {\n                          root: classes.datepicker\n                        }\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 234,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                      error: errors.fgunarrative\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: watch('adjuster') === 'beAdjuster' ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 256,\n                    columnNumber: 23\n                  }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'nonBeAdjuster', control)), {}, {\n                      error: errors.nonBeAdjuster\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 260,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                      error: errors.referral,\n                      muiComponentProps: {\n                        disabled: !refValuesDisable\n                      },\n                      callback: function callback(e, data) {\n                        getRefValues(data);\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 265,\n                  columnNumber: 19\n                }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                      error: errors.bordereauPeriod\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 221,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 219,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                  error: errors.claimantName\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                  error: errors.lossQualifierID\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 298,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                  error: errors.priority\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 303,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                  error: errors.adjusterReference\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 308,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                  error: errors.rfiResponse,\n                  muiComponentProps: {\n                    disabled: refResponseDisable\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 313,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 292,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.UploadDocumentContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n            refData: claimData,\n            refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n            ,\n            dmsContext: DMS_CONTEXT_CLAIM,\n            documentTypeKey: DMS_DOCUMENT_TYPE_SECTION_KEYS.claims,\n            isTabView: false,\n            isClaims: true,\n            isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n            claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\n            docList: claimsDocsList,\n            parentLossRef: parentLossRef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 331,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 330,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 329,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 328,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: handleSaveForm,\n      handleNextSubmit: handleSubmit(handleSubmitForm),\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterClaimCardInformationView, \"2WMGwuxkbieAzjJCI0zWkL+VP8o=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useEffect","useState","useDispatch","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","postEditClaimDetailsInformation","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","makeStyles","Box","Grid","RegisterClaimCardInformationView","prototype","claimantNames","array","isRequired","referralValues","lossQualifiers","object","resetKey","number","hasClaimRef","bool","claimsDocsList","parentLossRef","string","savedClaimInfo","fields","claimRefId","claimData","policyInformation","complexityValues","index","handleNext","handleSave","handleBack","activeStep","isAllStepsCompleted","isBordereauChecked","handleFormStatus","lossInformation","classes","name","dispatch","dateValidation","setDateValidation","refResponseDisable","setRefResponseDisable","refValuesDisable","setRefValueDisable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","setValue","handleSubmit","watch","isDirty","formState","lossQualifierID","id","complexValues","refValues","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","handleSubmitForm","values","then","response","handleSaveForm","dateDisabledLossQualifiers","filter","itr","map","fromDate","toDate","getComplexityStatus","console","log","lossToDate","legendContainer","t","root","formLegend","claimReference","claimRef","policyRef","insured","getFieldProps","disabled","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fgunarrative","nonBeAdjuster","referral","e","data","bordereauPeriod","claimantName","priority","adjusterReference","rfiResponse","UploadDocumentContainer","claims"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { postEditClaimDetailsInformation } from 'stores';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  lossQualifiers: PropTypes.object,\r\n  resetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  claimsDocsList: PropTypes.array,\r\n  parentLossRef: PropTypes.string,\r\n  savedClaimInfo: PropTypes.object,\r\n};\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  claimsDocsList,\r\n  claimRefId,\r\n  claimData,\r\n  policyInformation,\r\n  complexityValues,\r\n  index,\r\n  handleNext,\r\n  handleSave,\r\n  handleBack,\r\n  activeStep,\r\n  isAllStepsCompleted,\r\n  isBordereauChecked,\r\n  lossQualifiers,\r\n  handleFormStatus,\r\n  lossInformation,\r\n  parentLossRef,\r\n  savedClaimInfo,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch();\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const [refResponseDisable, setRefResponseDisable] = useState(true);\r\n  const [refValuesDisable, setRefValueDisable] = useState(false);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const {\r\n    control,\r\n    errors,\r\n    setValue,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { isDirty },\r\n  } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const lossQualifierID = watch('lossQualifierID')?.id;\r\n  const complexValues = watch('complexity');\r\n  const refValues = watch('referral');\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      setRefResponseDisable(refResponseState);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setRefResponseDisable(true);\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) handleNext(index);\r\n    });\r\n  };\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) handleSave();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isDirty && handleFormStatus();\r\n  }, [isDirty]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const dateDisabledLossQualifiers = lossQualifiers\r\n      .filter((item) => CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name))\r\n      .map((item) => item.id);\r\n    const isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\r\n    setDateValidation(!isRequired);\r\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\r\n      const fromDate = lossInformation?.fromDate; //|| savedClaimInfo?.lossFromDate;\r\n      const toDate = lossInformation?.toDate; //|| savedClaimInfo?.lossToDate;\r\n      //  console.log('lossInformation?.fromDate  ', lossInformation?.fromDate);\r\n      //   console.log('savedClaimInfo?.lossFromDate ', savedClaimInfo?.lossFromDate);\r\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\r\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\r\n    } else {\r\n      setValue('fromDate', null);\r\n      setValue('toDate', null);\r\n    }\r\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (complexValues) {\r\n      const getComplexityStatus =\r\n        complexityValues.find((item) => item.complexityRulesID === complexValues?.complexityRulesID)?.complexityRulesValue ===\r\n        'Referral Required';\r\n      setRefValueDisable(getComplexityStatus);\r\n      getRefValues(refValues);\r\n    } else if (complexValues === null) {\r\n      setRefValueDisable(false);\r\n    }\r\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  console.log('lossInformation?.fromDate ', lossInformation?.fromDate);\r\n  console.log('savedClaimInfo?.lossToDate ', savedClaimInfo?.lossToDate);\r\n\r\n  return (\r\n    <>\r\n      <Box m={3} mb={0} data-testid=\"register-claim-card-information\">\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item className={classes.legendContainer}>\r\n            <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          </Grid>\r\n          <FormLabel\r\n            label={`${claimRefId?.claimReference || claimRefId?.claimRef} | ${policyInformation.policyRef} | ${policyInformation.insured}`}\r\n            align=\"left\"\r\n          />\r\n        </Grid>\r\n      </Box>\r\n      <FormContainer data-testid=\"form-claimsCardInformation\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={6}>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                  <FormLabel\r\n                    label={(claimRefId?.claimReference || claimRefId?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')}\r\n                    nestedClasses={{ root: classes.claimRef }}\r\n                    align=\"left\"\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormDate\r\n                    {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                    error={errors.fromDate}\r\n                    muiComponentProps={{\r\n                      disabled: dateValidation,\r\n                      fullWidth: true,\r\n                      classes: {\r\n                        root: classes.datepicker,\r\n                      },\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              {isBordereauChecked && (\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormCheckbox\r\n                      {...utils.form.getFieldProps(fields, 'bordereauClaim', control)}\r\n                      error={errors.bordereauClaim}\r\n                      nestedClasses={{ root: classes.checkbox }}\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              )}\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={7}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormDate\r\n                        {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                        error={errors.toDate}\r\n                        muiComponentProps={{\r\n                          disabled: dateValidation,\r\n                          fullWidth: true,\r\n                          classes: {\r\n                            root: classes.datepicker,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    {watch('adjuster') === 'beAdjuster' ? (\r\n                      <FormGrid item xs={12}>\r\n                        <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} />\r\n                      </FormGrid>\r\n                    ) : (\r\n                      <FormGrid item xs={12}>\r\n                        <FormText {...utils.form.getFieldProps(fields, 'nonBeAdjuster', control)} error={errors.nonBeAdjuster} />\r\n                      </FormGrid>\r\n                    )}\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(fields, 'referral', control)}\r\n                        error={errors.referral}\r\n                        muiComponentProps={{\r\n                          disabled: !refValuesDisable,\r\n                        }}\r\n                        callback={(e, data) => {\r\n                          getRefValues(data);\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  {isBordereauChecked && (\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormAutocompleteMui\r\n                          {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)}\r\n                          error={errors.bordereauPeriod}\r\n                        />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  )}\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui\r\n                    {...utils.form.getFieldProps(fields, 'rfiResponse', control)}\r\n                    error={errors.rfiResponse}\r\n                    muiComponentProps={{\r\n                      disabled: refResponseDisable,\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <Box className={classes.UploadDocumentContainer}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <ClaimsUploadViewSearchDocs\r\n              refData={claimData}\r\n              refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n              dmsContext={DMS_CONTEXT_CLAIM}\r\n              documentTypeKey={DMS_DOCUMENT_TYPE_SECTION_KEYS.claims}\r\n              isTabView={false}\r\n              isClaims\r\n              isClaimsUploadDisabled={!claimRefId?.claimRef}\r\n              claimsUploadWarningMsg={!claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : ''}\r\n              claimsSearchDocumentsTxt={utils.string.t('claims.claimInformation.dms.searchDocuments')}\r\n              uploadDocumentsTitle={utils.string.t('claims.claimInformation.dms.uploadDocuments')}\r\n              docList={claimsDocsList}\r\n              parentLossRef={parentLossRef}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n      <RegisterNewLossFixedBottomBar\r\n        activeStep={activeStep}\r\n        isAllStepsCompleted={isAllStepsCompleted}\r\n        handleBack={() => {\r\n          handleBack(index);\r\n        }}\r\n        handleSave={handleSaveForm}\r\n        handleNextSubmit={handleSubmit(handleSubmitForm)}\r\n        save={true}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}