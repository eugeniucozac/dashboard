{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditPlacementMarketsLayers\\\\EditPlacementMarketsLayers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { firstBy } from 'thenby';\nimport * as Yup from 'yup';\nimport get from 'lodash/get';\nimport compact from 'lodash/compact';\nimport isNumber from 'lodash/isNumber';\nimport truncate from 'lodash/truncate'; // app\n\nimport styles from './EditPlacementMarketsLayers.styles';\nimport { editPlacementMarketsLayers, filterReferenceDataBusinessTypes, selectPlacementLayers, selectPlacementMarkets, selectRefDataDepartments, selectRefDataStatusesMarketQuote, selectRefDataStatusIdByCode, selectRefDataRationales, selectRefDataDeclinatures, showModal } from 'stores';\nimport { EditPlacementMarketsLayersView } from './EditPlacementMarketsLayers.view';\nimport { Avatar } from 'components';\nimport * as constants from 'consts';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nEditPlacementMarketsLayers.propTypes = {\n  placementMarket: PropTypes.object.isRequired,\n  placementLayer: PropTypes.object,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function EditPlacementMarketsLayers(_ref) {\n  _s();\n\n  var _selectedMarket$marke,\n      _this = this;\n\n  var handleClose = _ref.handleClose,\n      _ref$placementMarket = _ref.placementMarket,\n      placementMarket = _ref$placementMarket === void 0 ? {} : _ref$placementMarket,\n      placementLayer = _ref.placementLayer;\n  var classes = makeStyles(styles, {\n    name: 'EditPlacementMarketsLayers'\n  })();\n  var media = useMedia();\n  var dispatch = useDispatch();\n  var initialRender = useRef(true);\n  var initialRenderLayer = useRef(true);\n  var placementLayers = useSelector(selectPlacementLayers);\n  var placementMarkets = useSelector(selectPlacementMarkets);\n  var refDataDepartments = useSelector(selectRefDataDepartments);\n  var refDataRationales = useSelector(selectRefDataRationales);\n  var refDataDeclinatures = useSelector(selectRefDataDeclinatures);\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var statusQuotedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_QUOTED));\n  var statusDeclinedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_DECLINED));\n\n  var isStatusDeclined = function isStatusDeclined(status) {\n    return status === statusDeclinedId;\n  };\n\n  var isStatusQuoted = function isStatusQuoted(status) {\n    return status === statusQuotedId;\n  };\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      uuid = _useState2[0],\n      setUuid = _useState2[1];\n\n  var _useState3 = useState(placementMarket),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedMarket = _useState4[0],\n      setSelectedMarket = _useState4[1];\n\n  var getLayerOptions = function getLayerOptions(layers, currentMarket) {\n    var isMarketInLayer = function isMarketInLayer(layer) {\n      var market = get(layer, 'markets', []).find(function (m) {\n        var _m$market, _currentMarket$market;\n\n        return ((_m$market = m.market) === null || _m$market === void 0 ? void 0 : _m$market.id) === (currentMarket === null || currentMarket === void 0 ? void 0 : (_currentMarket$market = currentMarket.market) === null || _currentMarket$market === void 0 ? void 0 : _currentMarket$market.id);\n      });\n      return market ? {\n        statusId: market.statusId,\n        isMarketInLayer: true\n      } : {\n        statusId: null,\n        isMarketInLayer: false\n      };\n    };\n\n    var layersOrdered = utils.layers.orderLayers(layers);\n    return layersOrdered.map(function (layer) {\n      var businessTypes = utils.referenceData.departments.getBusinessTypes(refDataDepartments, layer.departmentId);\n      var businessTypeName = utils.referenceData.businessTypes.getNameById(businessTypes, layer.businessTypeId);\n      var layerName = utils.layer.getName(layer);\n      var layerNotes = layer.notes ? truncate(layer.notes, {\n        length: 15\n      }) : '';\n      return _objectSpread({\n        id: layer.id,\n        label: compact([businessTypeName, layerName]).join(' - '),\n        businessTypeId: layer.businessTypeId,\n        notes: layerNotes\n      }, isMarketInLayer(layer));\n    }).sort(firstBy(utils.sort.array('customSort', 'statusId', 'DESC', true, constants.MARKETS_STATUS_ID_ORDER)).thenBy(utils.sort.array('lexical', 'label')));\n  };\n\n  var underwriterOptions = get(selectedMarket, 'availableUnderwriters', []).map(function (uw) {\n    return {\n      id: uw.id,\n      label: utils.user.fullname(uw)\n    };\n  }).sort(firstBy(utils.sort.array('lexical', 'label')));\n\n  var getMarketOptions = function getMarketOptions() {\n    return placementMarkets.map(function (market) {\n      return {\n        id: market.id,\n        label: utils.market.getName(market)\n      };\n    }).sort(firstBy(utils.sort.array('lexical', 'label')));\n  };\n\n  var getUmrOptions = function getUmrOptions() {\n    var umrSet = new Set();\n\n    if (utils.generic.isValidArray(placementLayers)) {\n      placementLayers.forEach(function (layer) {\n        if (utils.generic.isValidArray(layer.markets)) {\n          layer.markets.forEach(function (market) {\n            var umr = market.uniqueMarketReference;\n\n            if (umr) {\n              umrSet.add(market.uniqueMarketReference);\n            }\n          });\n        }\n      });\n    }\n\n    return _toConsumableArray(umrSet).sort().map(function (umr) {\n      return {\n        id: umr,\n        label: umr\n      };\n    });\n  };\n\n  var getPremiumOptions = function getPremiumOptions() {\n    var premiumSet = new Set();\n\n    if (utils.generic.isValidArray(placementLayers)) {\n      placementLayers.forEach(function (layer) {\n        if (utils.generic.isValidArray(layer.markets)) {\n          layer.markets.forEach(function (market) {\n            var premium = market.premium;\n\n            if (premium) {\n              premiumSet.add(market.premium);\n            }\n          });\n        }\n      });\n    }\n\n    return _toConsumableArray(premiumSet).sort(function (a, b) {\n      return a && a - b;\n    }).map(function (premium) {\n      return {\n        id: premium,\n        label: premium\n      };\n    });\n  };\n\n  var marketOptions = getMarketOptions(placementMarkets);\n  var layerOptions = getLayerOptions(placementLayers, selectedMarket);\n  var hasLayers = (layerOptions === null || layerOptions === void 0 ? void 0 : layerOptions.length) > 0 ? true : false;\n  var umrOptions = getUmrOptions();\n  var premiumOptions = getPremiumOptions();\n  var firstLayer = layerOptions.find(function (l) {\n    return l.statusId !== null;\n  }) || null;\n\n  var _useState5 = useState(placementLayer ? placementLayer : (firstLayer === null || firstLayer === void 0 ? void 0 : firstLayer.id) ? utils.placement.layer.getById(placementLayers, firstLayer === null || firstLayer === void 0 ? void 0 : firstLayer.id) : null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedLayer = _useState6[0],\n      setSelectedLayer = _useState6[1];\n\n  var _useState7 = useState(utils.layer.getMarketById(selectedLayer, selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke = selectedMarket.market) === null || _selectedMarket$marke === void 0 ? void 0 : _selectedMarket$marke.id)),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedLayerMarket = _useState8[0],\n      setSelectedLayerMarket = _useState8[1];\n\n  useEffect(function () {\n    if (initialRender.current) {\n      initialRender.current = false;\n    } else {\n      var _selectedMarket$marke2;\n\n      var newLayer = placementLayers[placementLayers.length - 1];\n      setSelectedLayer(newLayer);\n      setSelectedLayerMarket(utils.layer.getMarketById(newLayer, selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke2 = selectedMarket.market) === null || _selectedMarket$marke2 === void 0 ? void 0 : _selectedMarket$marke2.id));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [placementLayers]);\n\n  var resetLayer = function resetLayer() {\n    setUuid(new Date().getTime());\n  };\n\n  var handleFormSubmit = function handleFormSubmit(data, dirtyFields) {\n    var _selectedMarket$marke3;\n\n    var selectedMarketId = selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke3 = selectedMarket.market) === null || _selectedMarket$marke3 === void 0 ? void 0 : _selectedMarket$marke3.id;\n    return dispatch(editPlacementMarketsLayers(data, selectedMarketId, dirtyFields, false)).then(function (responsesObj) {\n      var _data$layer;\n\n      var newSelectedMarket = responsesObj.market || selectedMarket;\n      var newSelectedLayer = utils.placement.layer.getById(placementLayers, data === null || data === void 0 ? void 0 : (_data$layer = data.layer) === null || _data$layer === void 0 ? void 0 : _data$layer.id);\n\n      if (responsesObj.market) {\n        setSelectedMarket(newSelectedMarket);\n      }\n\n      if (responsesObj.layerMarket) {\n        var _newSelectedMarket$ma;\n\n        setSelectedLayer(newSelectedLayer);\n        setSelectedLayerMarket(utils.layer.getMarketById(newSelectedLayer, newSelectedMarket === null || newSelectedMarket === void 0 ? void 0 : (_newSelectedMarket$ma = newSelectedMarket.market) === null || _newSelectedMarket$ma === void 0 ? void 0 : _newSelectedMarket$ma.id));\n      } // after form submit, get new uuid to force form re-initialization\n\n\n      setUuid(new Date().getTime());\n    });\n  };\n\n  var handleSubmitAndClose = function handleSubmitAndClose(data, dirtyFields) {\n    var _selectedMarket$marke4;\n\n    var selectedMarketId = selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke4 = selectedMarket.market) === null || _selectedMarket$marke4 === void 0 ? void 0 : _selectedMarket$marke4.id;\n    return dispatch(editPlacementMarketsLayers(data, selectedMarketId, dirtyFields, true));\n  };\n\n  var handleFormClose = function handleFormClose() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var handleFormReset = function handleFormReset(reset) {\n    return function () {\n      if (utils.generic.isFunction(reset)) {\n        reset();\n        setUuid(new Date().getTime());\n      }\n    };\n  };\n\n  var isLayerMarketFormDirty = function isLayerMarketFormDirty(form) {\n    return form.layerMarket_isLeader || form.layerMarket_lineToStand || !!form.layerMarket_premium || form.layerMarket_premium === 0 || !!form.layerMarket_writtenLinePercentage || form.layerMarket_writtenLinePercentage === 0 || !!form.layerMarket_subjectivities || !!form.layerMarket_validUntilDate;\n  };\n\n  var isLayerMarketFormDisabled = !Boolean(selectedLayer === null || selectedLayer === void 0 ? void 0 : selectedLayer.id);\n\n  var isLayerMarketAmountRequired = function isLayerMarketAmountRequired(form, value) {\n    if (isNumber(value)) return true;\n    return !form.layerMarket_statusId || form.layerMarket_statusId.toString() !== statusQuotedId.toString();\n  };\n\n  var renderOption = function renderOption(option) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.layerName,\n      children: [/*#__PURE__*/_jsxDEV(\"span\", {\n        children: option.label\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 253,\n        columnNumber: 9\n      }, _this), option.notes ? /*#__PURE__*/_jsxDEV(\"span\", {\n        className: classes.notes,\n        children: option.notes\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 25\n      }, _this) : '', (option === null || option === void 0 ? void 0 : option.statusId) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: /*#__PURE__*/_jsxDEV(Avatar, {\n          classes: {\n            root: classes.marketStatus\n          },\n          text: \" \",\n          size: 10,\n          bg: constants.MARKET_COLORS[option.statusId],\n          title: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 257,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 252,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var getOptionLabel = function getOptionLabel(option) {\n    return compact([option.label, option.notes]).join(' - ');\n  };\n\n  var formatPremiumOption = function formatPremiumOption(option) {\n    return utils.number.formatNumber(option.label);\n  };\n\n  useEffect(function () {\n    if (initialRenderLayer.current) {\n      initialRenderLayer.current = false;\n    } else {\n      var _selectedMarket$marke5;\n\n      var _firstLayer = layerOptions.find(function (l) {\n        return l.statusId !== null;\n      }) || null;\n\n      var newSelectedLayer = _firstLayer ? utils.placement.layer.getById(placementLayers, _firstLayer === null || _firstLayer === void 0 ? void 0 : _firstLayer.id) : null;\n      var newSelectedLayerMarket = utils.layer.getMarketById(newSelectedLayer, selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke5 = selectedMarket.market) === null || _selectedMarket$marke5 === void 0 ? void 0 : _selectedMarket$marke5.id);\n      setSelectedLayer(newSelectedLayer);\n      setSelectedLayerMarket(newSelectedLayerMarket);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [selectedMarket]);\n  var marketFields = [{\n    name: 'market',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.market'),\n    value: marketOptions.find(function (market) {\n      return market.id === selectedMarket.id;\n    }),\n    options: marketOptions,\n    optionKey: 'id',\n    optionLabel: 'label',\n    muiComponentProps: {\n      disableClearable: true,\n      autoFocus: true\n    },\n    callback: function callback(event, data) {\n      var marketId = data === null || data === void 0 ? void 0 : data.id;\n      var newSelectedMarket = placementMarkets.find(function (m) {\n        return m.id === marketId;\n      });\n\n      if (marketId) {\n        setSelectedMarket(newSelectedMarket);\n      }\n    },\n    validation: Yup.object().nullable().required(function () {\n      return utils.form.getValidationLabel('placement.marketing.fields.market', 'required');\n    })\n  }, {\n    name: 'market_statusId',\n    type: 'select',\n    label: utils.string.t('placement.marketing.fields.status'),\n    value: selectedMarket.statusId || '',\n    options: refDataStatusesMarketQuote,\n    optionKey: 'id',\n    optionLabel: 'code',\n    nestedClasses: {\n      root: classes.status\n    }\n  }, {\n    name: 'market_rationales',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.rationales'),\n    value: selectedMarket.rationales || [],\n    options: refDataRationales,\n    optionKey: 'id',\n    optionLabel: 'description',\n    muiComponentProps: {\n      multiple: true\n    }\n  }, {\n    name: 'market_declinatures',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.declinatures'),\n    value: selectedMarket.declinatures || [],\n    options: refDataDeclinatures,\n    optionKey: 'id',\n    optionLabel: 'description',\n    muiComponentProps: {\n      multiple: true\n    }\n  }, {\n    name: 'market_underwriter',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.underwriter'),\n    value: underwriterOptions.find(function (uw) {\n      var _selectedMarket$under;\n\n      return uw.id === (selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$under = selectedMarket.underwriter) === null || _selectedMarket$under === void 0 ? void 0 : _selectedMarket$under.id);\n    }),\n    options: underwriterOptions,\n    optionKey: 'id',\n    optionLabel: 'label',\n    muiComponentProps: {\n      disabled: utils.generic.isInvalidOrEmptyArray(underwriterOptions)\n    }\n  }, {\n    name: 'market_notes',\n    label: utils.string.t('placement.marketing.fields.notes'),\n    type: 'textarea',\n    value: selectedMarket.notes || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 5,\n      maxRows: 8\n    },\n    validation: Yup.string().max(280)\n  }];\n  var layerMarketFields = [_objectSpread({\n    name: 'layer',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.layer'),\n    value: selectedLayer ? layerOptions.find(function (l) {\n      return l.id === selectedLayer.id;\n    }) : layerOptions.find(function (l) {\n      return l.statusId !== null;\n    }) || null,\n    options: hasLayers ? [].concat(_toConsumableArray(layerOptions), [{\n      id: 0,\n      label: \"+ \".concat(utils.string.t('placement.marketing.addLayer'))\n    }]) : [],\n    muiComponentProps: {\n      disableClearable: true,\n      disabled: isLayerMarketFormDisabled,\n      getOptionLabel: getOptionLabel,\n      renderOption: renderOption\n    },\n    callback: function callback(event, data) {\n      var layerId = data === null || data === void 0 ? void 0 : data.id;\n\n      if (layerId === 0) {\n        handleAddLayerClick();\n        setSelectedLayer(utils.placement.layer.getById(placementLayers, get(getLayerOptions(placementLayers, selectedMarket), '[0].id')));\n      } else {\n        var _selectedMarket$marke6;\n\n        var newSelectedLayer = utils.placement.layer.getById(placementLayers, layerId);\n        var newSelectedLayerMarket = utils.layer.getMarketById(newSelectedLayer, selectedMarket === null || selectedMarket === void 0 ? void 0 : (_selectedMarket$marke6 = selectedMarket.market) === null || _selectedMarket$marke6 === void 0 ? void 0 : _selectedMarket$marke6.id);\n        setSelectedLayer(newSelectedLayer);\n        setSelectedLayerMarket(newSelectedLayerMarket);\n      }\n    }\n  }, hasLayers && !isLayerMarketFormDisabled && {\n    validation: Yup.object().nullable().required(function () {\n      return utils.form.getValidationLabel('placement.marketing.fields.layer', 'required');\n    })\n  }), {\n    name: 'layerMarket',\n    type: 'hidden',\n    value: selectedLayerMarket\n  }, _objectSpread(_objectSpread({\n    name: 'layerMarket_statusId',\n    type: 'select',\n    label: utils.string.t('placement.form.status.label'),\n    value: get(selectedLayerMarket, 'statusId') || '',\n    options: refDataStatusesMarketQuote,\n    optionKey: 'id',\n    optionLabel: 'code',\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled\n    }\n  }, hasLayers && !isLayerMarketFormDisabled && {\n    validation: Yup.string().test('layerMarket_statusId', utils.string.t('validation.required'), function () {\n      return isLayerMarketFormDirty(this.options.parent) ? this.options.parent.layerMarket_statusId : true;\n    })\n  }), {}, {\n    nestedClasses: {\n      root: classes.status\n    }\n  }), {\n    name: 'layerMarket_declinatures',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.marketing.fields.declinatures'),\n    value: (selectedLayerMarket === null || selectedLayerMarket === void 0 ? void 0 : selectedLayerMarket.declinatures) || [],\n    options: refDataDeclinatures,\n    optionKey: 'id',\n    optionLabel: 'description',\n    muiComponentProps: {\n      multiple: true\n    }\n  }, {\n    name: 'layerMarket_uniqueMarketReference',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.form.uniqueMarketReference.label'),\n    value: selectedLayerMarket ? umrOptions.find(function (umr) {\n      return umr.id === selectedLayerMarket.uniqueMarketReference;\n    }) : null,\n    options: umrOptions,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'label',\n    disabled: isLayerMarketFormDisabled,\n    muiComponentProps: {\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params); // Suggest the creation of a new value\n\n        if (params.inputValue !== '') {\n          filtered.push({\n            id: params.inputValue,\n            label: \"\".concat(utils.string.t('app.add'), \" \\\"\").concat(params.inputValue, \"\\\"\")\n          });\n        }\n\n        return filtered;\n      }\n    },\n    validation: Yup.object({\n      id: Yup.string().matches(/^[a-zA-Z0-9]*$/, utils.string.t('validation.string.alphaNumericOnly'))\n    }).nullable()\n  }, {\n    name: 'layerMarket_section',\n    type: 'text',\n    label: utils.string.t('placement.form.section.label'),\n    value: get(selectedLayerMarket, 'section') || '',\n    validation: Yup.string().trim().max(2).uppercase().matches(/^[A-Z]{0,2}$/, utils.string.t('validation.string.alphaOnly')),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      inputProps: {\n        maxLength: 2\n      },\n      InputProps: {\n        classes: {\n          input: classes.section\n        }\n      }\n    }\n  }, {\n    name: 'layerMarket_quoteOptions',\n    type: 'checkbox',\n    options: [{\n      label: utils.string.t('placement.form.lead.label'),\n      name: 'layerMarket_isLeader',\n      value: Boolean(get(selectedLayerMarket, 'isLeader')),\n      disabled: isLayerMarketFormDisabled\n    }, {\n      label: utils.string.t('placement.form.lineToStand.label'),\n      name: 'layerMarket_lineToStand',\n      value: Boolean(get(selectedLayerMarket, 'lineToStand')),\n      disabled: isLayerMarketFormDisabled\n    }],\n    muiFormGroupProps: {\n      row: media.desktopUp\n    }\n  }, {\n    name: 'layerMarket_currency',\n    type: 'text',\n    value: utils.layer.getCurrency(selectedLayer, ''),\n    label: utils.string.t('placement.form.currency.label'),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      InputProps: {\n        readOnly: true,\n        disabled: true\n      }\n    }\n  }, {\n    name: 'layerMarket_premium',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.form.premium.label'),\n    value: selectedLayerMarket ? premiumOptions.find(function (premium) {\n      return premium.id === selectedLayerMarket.premium;\n    }) : null,\n    options: premiumOptions,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'label',\n    isNumeric: true,\n    disabled: isLayerMarketFormDisabled,\n    muiComponentProps: {\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions({\n          stringify: function stringify(option) {\n            return \"\".concat(option.label);\n          }\n        })(options, params); // Suggest the creation of a new value\n\n        if (params.inputValue !== '' && parseFloat(params.inputValue)) {\n          var premiumFormatted = utils.number.formatNumber(parseFloat(params.inputValue));\n          filtered.push({\n            id: parseFloat(params.inputValue),\n            label: \"\".concat(utils.string.t('app.add'), \" \\\"\").concat(premiumFormatted, \"\\\"\")\n          });\n        }\n\n        return filtered;\n      },\n      renderOption: formatPremiumOption,\n      getOptionLabel: formatPremiumOption\n    },\n    validation: Yup.object({\n      id: Yup.number().nullable().min(0).currency()\n    }).nullable().test('layerMarket_premium', utils.string.t('validation.required'), function () {\n      var _this$options$parent$;\n\n      return isLayerMarketAmountRequired(this.options.parent, (_this$options$parent$ = this.options.parent.layerMarket_premium) === null || _this$options$parent$ === void 0 ? void 0 : _this$options$parent$.id);\n    })\n  }, {\n    name: 'layerMarket_writtenLinePercentage',\n    type: 'number',\n    value: isNumber(get(selectedLayerMarket, 'writtenLinePercentage')) ? get(selectedLayerMarket, 'writtenLinePercentage') : '',\n    validation: Yup.number().nullable().min(0).max(100).percent().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('layerMarket_writtenLinePercentage', utils.string.t('validation.required'), function () {\n      return isLayerMarketAmountRequired(this.options.parent, this.options.parent.layerMarket_writtenLinePercentage);\n    }),\n    label: utils.string.t('placement.form.written.label'),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      autoComplete: 'off',\n      fullWidth: false\n    }\n  }, {\n    name: 'layerMarket_quoteDate',\n    type: 'datepicker',\n    icon: 'TodayIcon',\n    label: utils.string.t('placement.form.dateFrom.label'),\n    value: isLayerMarketFormDisabled ? null : get(selectedLayerMarket, 'quoteDate') || null,\n    validation: Yup.string().nullable(),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      fullWidth: true\n    }\n  }, {\n    name: 'layerMarket_validUntilDate',\n    type: 'datepicker',\n    label: utils.string.t('placement.form.dateExpiry.label'),\n    value: get(selectedLayerMarket, 'validUntilDate') || null,\n    validation: Yup.string().nullable(),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      fullWidth: true\n    },\n    muiPickerProps: {\n      clearable: true\n    }\n  }, {\n    name: 'layerMarket_subjectivities',\n    type: 'textarea',\n    value: get(selectedLayerMarket, 'subjectivities') || '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.subjectivities.label'),\n    muiComponentProps: {\n      disabled: isLayerMarketFormDisabled,\n      multiline: true,\n      minRows: 1,\n      maxRows: 6\n    }\n  }];\n  var actions = [{\n    name: 'submit',\n    type: 'submit',\n    label: utils.string.t('app.saveClose'),\n    handler: handleSubmitAndClose\n  }, {\n    name: 'secondary',\n    label: utils.string.t('app.save'),\n    handler: handleFormSubmit\n  }, {\n    name: 'close',\n    label: utils.string.t('app.close'),\n    callback: handleFormClose\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    callback: handleFormReset\n  }];\n\n  var handleAddLayerClick = function handleAddLayerClick() {\n    var popoverData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    dispatch(filterReferenceDataBusinessTypes());\n    dispatch(showModal({\n      component: 'ADD_PLACEMENT_LAYER',\n      props: {\n        title: 'placement.marketing.addLayer',\n        subtitle: popoverData.title,\n        fullWidth: true,\n        maxWidth: 'sm',\n        disableAutoFocus: true,\n        componentProps: {\n          businessTypeId: popoverData.id\n        }\n      }\n    }));\n  }; // uuid on the form key is to force the form to re-initialise from scratch with new defaultValues and dirty state\n  // this is to allow us to detect which part(s) of the form were edited\n\n\n  return /*#__PURE__*/_jsxDEV(EditPlacementMarketsLayersView, {\n    actions: actions,\n    fields: [].concat(marketFields, layerMarketFields),\n    hasLayers: hasLayers,\n    handlers: {\n      isStatusDeclined: isStatusDeclined,\n      isStatusQuoted: isStatusQuoted,\n      handleAddLayerClick: handleAddLayerClick,\n      resetLayer: resetLayer\n    }\n  }, \"\".concat(selectedMarket === null || selectedMarket === void 0 ? void 0 : selectedMarket.id, \"-\").concat(selectedLayer === null || selectedLayer === void 0 ? void 0 : selectedLayer.id, \"-\").concat(selectedLayerMarket === null || selectedLayerMarket === void 0 ? void 0 : selectedLayerMarket.id).concat(uuid ? \"-\".concat(uuid) : ''), false, {\n    fileName: _jsxFileName,\n    lineNumber: 683,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditPlacementMarketsLayers, \"YufmKQVuboLbk7QAQ7qVnfvX+rc=\", false, function () {\n  return [useMedia, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EditPlacementMarketsLayers;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlacementMarketsLayers\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditPlacementMarketsLayers/EditPlacementMarketsLayers.js"],"names":["React","useState","useEffect","useRef","PropTypes","useDispatch","useSelector","firstBy","Yup","get","compact","isNumber","truncate","styles","editPlacementMarketsLayers","filterReferenceDataBusinessTypes","selectPlacementLayers","selectPlacementMarkets","selectRefDataDepartments","selectRefDataStatusesMarketQuote","selectRefDataStatusIdByCode","selectRefDataRationales","selectRefDataDeclinatures","showModal","EditPlacementMarketsLayersView","Avatar","constants","useMedia","utils","makeStyles","createFilterOptions","EditPlacementMarketsLayers","propTypes","placementMarket","object","isRequired","placementLayer","handleClose","func","classes","name","media","dispatch","initialRender","initialRenderLayer","placementLayers","placementMarkets","refDataDepartments","refDataRationales","refDataDeclinatures","refDataStatusesMarketQuote","statusQuotedId","STATUS_MARKET_QUOTED","statusDeclinedId","STATUS_MARKET_DECLINED","isStatusDeclined","status","isStatusQuoted","uuid","setUuid","selectedMarket","setSelectedMarket","getLayerOptions","layers","currentMarket","isMarketInLayer","layer","market","find","m","id","statusId","layersOrdered","orderLayers","map","businessTypes","referenceData","departments","getBusinessTypes","departmentId","businessTypeName","getNameById","businessTypeId","layerName","getName","layerNotes","notes","length","label","join","sort","array","MARKETS_STATUS_ID_ORDER","thenBy","underwriterOptions","uw","user","fullname","getMarketOptions","getUmrOptions","umrSet","Set","generic","isValidArray","forEach","markets","umr","uniqueMarketReference","add","getPremiumOptions","premiumSet","premium","a","b","marketOptions","layerOptions","hasLayers","umrOptions","premiumOptions","firstLayer","l","placement","getById","selectedLayer","setSelectedLayer","getMarketById","selectedLayerMarket","setSelectedLayerMarket","current","newLayer","resetLayer","Date","getTime","handleFormSubmit","data","dirtyFields","selectedMarketId","then","responsesObj","newSelectedMarket","newSelectedLayer","layerMarket","handleSubmitAndClose","handleFormClose","isFunction","handleFormReset","reset","isLayerMarketFormDirty","form","layerMarket_isLeader","layerMarket_lineToStand","layerMarket_premium","layerMarket_writtenLinePercentage","layerMarket_subjectivities","layerMarket_validUntilDate","isLayerMarketFormDisabled","Boolean","isLayerMarketAmountRequired","value","layerMarket_statusId","toString","renderOption","option","root","marketStatus","MARKET_COLORS","getOptionLabel","formatPremiumOption","number","formatNumber","newSelectedLayerMarket","marketFields","type","string","t","options","optionKey","optionLabel","muiComponentProps","disableClearable","autoFocus","callback","event","marketId","validation","nullable","required","getValidationLabel","nestedClasses","rationales","multiple","declinatures","underwriter","disabled","isInvalidOrEmptyArray","multiline","minRows","maxRows","max","layerMarketFields","layerId","handleAddLayerClick","test","parent","optionsCreatable","filterOptions","params","filtered","inputValue","push","matches","trim","uppercase","inputProps","maxLength","InputProps","input","section","muiFormGroupProps","row","desktopUp","getCurrency","readOnly","isNumeric","stringify","parseFloat","premiumFormatted","min","currency","percent","transform","originalvalue","isType","Number","isNaN","autoComplete","fullWidth","icon","muiPickerProps","clearable","actions","handler","popoverData","component","props","title","subtitle","maxWidth","disableAutoFocus","componentProps"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { firstBy } from 'thenby';\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\nimport compact from 'lodash/compact';\r\nimport isNumber from 'lodash/isNumber';\r\nimport truncate from 'lodash/truncate';\r\n\r\n// app\r\nimport styles from './EditPlacementMarketsLayers.styles';\r\nimport {\r\n  editPlacementMarketsLayers,\r\n  filterReferenceDataBusinessTypes,\r\n  selectPlacementLayers,\r\n  selectPlacementMarkets,\r\n  selectRefDataDepartments,\r\n  selectRefDataStatusesMarketQuote,\r\n  selectRefDataStatusIdByCode,\r\n  selectRefDataRationales,\r\n  selectRefDataDeclinatures,\r\n  showModal,\r\n} from 'stores';\r\nimport { EditPlacementMarketsLayersView } from './EditPlacementMarketsLayers.view';\r\nimport { Avatar } from 'components';\r\nimport * as constants from 'consts';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nEditPlacementMarketsLayers.propTypes = {\r\n  placementMarket: PropTypes.object.isRequired,\r\n  placementLayer: PropTypes.object,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditPlacementMarketsLayers({ handleClose, placementMarket = {}, placementLayer }) {\r\n  const classes = makeStyles(styles, { name: 'EditPlacementMarketsLayers' })();\r\n\r\n  const media = useMedia();\r\n  const dispatch = useDispatch();\r\n\r\n  const initialRender = useRef(true);\r\n  const initialRenderLayer = useRef(true);\r\n  const placementLayers = useSelector(selectPlacementLayers);\r\n  const placementMarkets = useSelector(selectPlacementMarkets);\r\n  const refDataDepartments = useSelector(selectRefDataDepartments);\r\n  const refDataRationales = useSelector(selectRefDataRationales);\r\n  const refDataDeclinatures = useSelector(selectRefDataDeclinatures);\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const statusQuotedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_QUOTED));\r\n  const statusDeclinedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_DECLINED));\r\n\r\n  const isStatusDeclined = (status) => {\r\n    return status === statusDeclinedId;\r\n  };\r\n\r\n  const isStatusQuoted = (status) => {\r\n    return status === statusQuotedId;\r\n  };\r\n\r\n  const [uuid, setUuid] = useState('');\r\n  const [selectedMarket, setSelectedMarket] = useState(placementMarket);\r\n\r\n  const getLayerOptions = (layers, currentMarket) => {\r\n    const isMarketInLayer = (layer) => {\r\n      const market = get(layer, 'markets', []).find((m) => m.market?.id === currentMarket?.market?.id);\r\n\r\n      return market ? { statusId: market.statusId, isMarketInLayer: true } : { statusId: null, isMarketInLayer: false };\r\n    };\r\n\r\n    const layersOrdered = utils.layers.orderLayers(layers);\r\n\r\n    return layersOrdered\r\n      .map((layer) => {\r\n        const businessTypes = utils.referenceData.departments.getBusinessTypes(refDataDepartments, layer.departmentId);\r\n        const businessTypeName = utils.referenceData.businessTypes.getNameById(businessTypes, layer.businessTypeId);\r\n        const layerName = utils.layer.getName(layer);\r\n        const layerNotes = layer.notes ? truncate(layer.notes, { length: 15 }) : '';\r\n\r\n        return {\r\n          id: layer.id,\r\n          label: compact([businessTypeName, layerName]).join(' - '),\r\n          businessTypeId: layer.businessTypeId,\r\n          notes: layerNotes,\r\n          ...isMarketInLayer(layer),\r\n        };\r\n      })\r\n      .sort(\r\n        firstBy(utils.sort.array('customSort', 'statusId', 'DESC', true, constants.MARKETS_STATUS_ID_ORDER)).thenBy(\r\n          utils.sort.array('lexical', 'label')\r\n        )\r\n      );\r\n  };\r\n\r\n  const underwriterOptions = get(selectedMarket, 'availableUnderwriters', [])\r\n    .map((uw) => ({\r\n      id: uw.id,\r\n      label: utils.user.fullname(uw),\r\n    }))\r\n    .sort(firstBy(utils.sort.array('lexical', 'label')));\r\n\r\n  const getMarketOptions = () => {\r\n    return placementMarkets\r\n      .map((market) => ({\r\n        id: market.id,\r\n        label: utils.market.getName(market),\r\n      }))\r\n      .sort(firstBy(utils.sort.array('lexical', 'label')));\r\n  };\r\n\r\n  const getUmrOptions = () => {\r\n    const umrSet = new Set();\r\n\r\n    if (utils.generic.isValidArray(placementLayers)) {\r\n      placementLayers.forEach((layer) => {\r\n        if (utils.generic.isValidArray(layer.markets)) {\r\n          layer.markets.forEach((market) => {\r\n            const umr = market.uniqueMarketReference;\r\n\r\n            if (umr) {\r\n              umrSet.add(market.uniqueMarketReference);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return [...umrSet].sort().map((umr) => ({ id: umr, label: umr }));\r\n  };\r\n\r\n  const getPremiumOptions = () => {\r\n    const premiumSet = new Set();\r\n\r\n    if (utils.generic.isValidArray(placementLayers)) {\r\n      placementLayers.forEach((layer) => {\r\n        if (utils.generic.isValidArray(layer.markets)) {\r\n          layer.markets.forEach((market) => {\r\n            const premium = market.premium;\r\n\r\n            if (premium) {\r\n              premiumSet.add(market.premium);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n\r\n    return [...premiumSet]\r\n      .sort((a, b) => a && a - b)\r\n      .map((premium) => {\r\n        return { id: premium, label: premium };\r\n      });\r\n  };\r\n\r\n  const marketOptions = getMarketOptions(placementMarkets);\r\n  const layerOptions = getLayerOptions(placementLayers, selectedMarket);\r\n  const hasLayers = layerOptions?.length > 0 ? true : false;\r\n  const umrOptions = getUmrOptions();\r\n  const premiumOptions = getPremiumOptions();\r\n\r\n  const firstLayer = layerOptions.find((l) => l.statusId !== null) || null;\r\n\r\n  const [selectedLayer, setSelectedLayer] = useState(\r\n    placementLayer ? placementLayer : firstLayer?.id ? utils.placement.layer.getById(placementLayers, firstLayer?.id) : null\r\n  );\r\n\r\n  const [selectedLayerMarket, setSelectedLayerMarket] = useState(utils.layer.getMarketById(selectedLayer, selectedMarket?.market?.id));\r\n\r\n  useEffect(() => {\r\n    if (initialRender.current) {\r\n      initialRender.current = false;\r\n    } else {\r\n      const newLayer = placementLayers[placementLayers.length - 1];\r\n      setSelectedLayer(newLayer);\r\n      setSelectedLayerMarket(utils.layer.getMarketById(newLayer, selectedMarket?.market?.id));\r\n    }\r\n\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [placementLayers]);\r\n\r\n  const resetLayer = () => {\r\n    setUuid(new Date().getTime());\r\n  };\r\n\r\n  const handleFormSubmit = (data, dirtyFields) => {\r\n    const selectedMarketId = selectedMarket?.market?.id;\r\n\r\n    return dispatch(editPlacementMarketsLayers(data, selectedMarketId, dirtyFields, false)).then((responsesObj) => {\r\n      const newSelectedMarket = responsesObj.market || selectedMarket;\r\n      const newSelectedLayer = utils.placement.layer.getById(placementLayers, data?.layer?.id);\r\n\r\n      if (responsesObj.market) {\r\n        setSelectedMarket(newSelectedMarket);\r\n      }\r\n\r\n      if (responsesObj.layerMarket) {\r\n        setSelectedLayer(newSelectedLayer);\r\n        setSelectedLayerMarket(utils.layer.getMarketById(newSelectedLayer, newSelectedMarket?.market?.id));\r\n      }\r\n\r\n      // after form submit, get new uuid to force form re-initialization\r\n      setUuid(new Date().getTime());\r\n    });\r\n  };\r\n\r\n  const handleSubmitAndClose = (data, dirtyFields) => {\r\n    const selectedMarketId = selectedMarket?.market?.id;\r\n\r\n    return dispatch(editPlacementMarketsLayers(data, selectedMarketId, dirtyFields, true));\r\n  };\r\n\r\n  const handleFormClose = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const handleFormReset = (reset) => () => {\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset();\r\n      setUuid(new Date().getTime());\r\n    }\r\n  };\r\n\r\n  const isLayerMarketFormDirty = (form) => {\r\n    return (\r\n      form.layerMarket_isLeader ||\r\n      form.layerMarket_lineToStand ||\r\n      !!form.layerMarket_premium ||\r\n      form.layerMarket_premium === 0 ||\r\n      !!form.layerMarket_writtenLinePercentage ||\r\n      form.layerMarket_writtenLinePercentage === 0 ||\r\n      !!form.layerMarket_subjectivities ||\r\n      !!form.layerMarket_validUntilDate\r\n    );\r\n  };\r\n\r\n  const isLayerMarketFormDisabled = !Boolean(selectedLayer?.id);\r\n\r\n  const isLayerMarketAmountRequired = (form, value) => {\r\n    if (isNumber(value)) return true;\r\n    return !form.layerMarket_statusId || form.layerMarket_statusId.toString() !== statusQuotedId.toString();\r\n  };\r\n\r\n  const renderOption = (option) => {\r\n    return (\r\n      <div className={classes.layerName}>\r\n        <span>{option.label}</span>\r\n        {option.notes ? <span className={classes.notes}>{option.notes}</span> : ''}\r\n        {option?.statusId ? (\r\n          <>\r\n            <Avatar\r\n              classes={{\r\n                root: classes.marketStatus,\r\n              }}\r\n              text=\" \"\r\n              size={10}\r\n              bg={constants.MARKET_COLORS[option.statusId]}\r\n              title={option.name}\r\n            />\r\n          </>\r\n        ) : null}\r\n      </div>\r\n    );\r\n  };\r\n\r\n  const getOptionLabel = (option) => {\r\n    return compact([option.label, option.notes]).join(' - ');\r\n  };\r\n\r\n  const formatPremiumOption = (option) => utils.number.formatNumber(option.label);\r\n\r\n  useEffect(() => {\r\n    if (initialRenderLayer.current) {\r\n      initialRenderLayer.current = false;\r\n    } else {\r\n      const firstLayer = layerOptions.find((l) => l.statusId !== null) || null;\r\n      const newSelectedLayer = firstLayer ? utils.placement.layer.getById(placementLayers, firstLayer?.id) : null;\r\n      const newSelectedLayerMarket = utils.layer.getMarketById(newSelectedLayer, selectedMarket?.market?.id);\r\n\r\n      setSelectedLayer(newSelectedLayer);\r\n      setSelectedLayerMarket(newSelectedLayerMarket);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [selectedMarket]);\r\n\r\n  const marketFields = [\r\n    {\r\n      name: 'market',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.market'),\r\n      value: marketOptions.find((market) => market.id === selectedMarket.id),\r\n      options: marketOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      muiComponentProps: {\r\n        disableClearable: true,\r\n        autoFocus: true,\r\n      },\r\n      callback: (event, data) => {\r\n        const marketId = data?.id;\r\n        const newSelectedMarket = placementMarkets.find((m) => m.id === marketId);\r\n\r\n        if (marketId) {\r\n          setSelectedMarket(newSelectedMarket);\r\n        }\r\n      },\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(() => utils.form.getValidationLabel('placement.marketing.fields.market', 'required')),\r\n    },\r\n    {\r\n      name: 'market_statusId',\r\n      type: 'select',\r\n      label: utils.string.t('placement.marketing.fields.status'),\r\n      value: selectedMarket.statusId || '',\r\n      options: refDataStatusesMarketQuote,\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n      nestedClasses: {\r\n        root: classes.status,\r\n      },\r\n    },\r\n    {\r\n      name: 'market_rationales',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.rationales'),\r\n      value: selectedMarket.rationales || [],\r\n      options: refDataRationales,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      muiComponentProps: {\r\n        multiple: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'market_declinatures',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.declinatures'),\r\n      value: selectedMarket.declinatures || [],\r\n      options: refDataDeclinatures,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      muiComponentProps: {\r\n        multiple: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'market_underwriter',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.underwriter'),\r\n      value: underwriterOptions.find((uw) => uw.id === selectedMarket?.underwriter?.id),\r\n      options: underwriterOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      muiComponentProps: {\r\n        disabled: utils.generic.isInvalidOrEmptyArray(underwriterOptions),\r\n      },\r\n    },\r\n    {\r\n      name: 'market_notes',\r\n      label: utils.string.t('placement.marketing.fields.notes'),\r\n      type: 'textarea',\r\n      value: selectedMarket.notes || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 5,\r\n        maxRows: 8,\r\n      },\r\n      validation: Yup.string().max(280),\r\n    },\r\n  ];\r\n\r\n  const layerMarketFields = [\r\n    {\r\n      name: 'layer',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.layer'),\r\n      value: selectedLayer ? layerOptions.find((l) => l.id === selectedLayer.id) : layerOptions.find((l) => l.statusId !== null) || null,\r\n      options: hasLayers ? [...layerOptions, { id: 0, label: `+ ${utils.string.t('placement.marketing.addLayer')}` }] : [],\r\n      muiComponentProps: {\r\n        disableClearable: true,\r\n        disabled: isLayerMarketFormDisabled,\r\n        getOptionLabel,\r\n        renderOption,\r\n      },\r\n      callback: (event, data) => {\r\n        const layerId = data?.id;\r\n        if (layerId === 0) {\r\n          handleAddLayerClick();\r\n          setSelectedLayer(utils.placement.layer.getById(placementLayers, get(getLayerOptions(placementLayers, selectedMarket), '[0].id')));\r\n        } else {\r\n          const newSelectedLayer = utils.placement.layer.getById(placementLayers, layerId);\r\n          const newSelectedLayerMarket = utils.layer.getMarketById(newSelectedLayer, selectedMarket?.market?.id);\r\n\r\n          setSelectedLayer(newSelectedLayer);\r\n          setSelectedLayerMarket(newSelectedLayerMarket);\r\n        }\r\n      },\r\n      ...(hasLayers &&\r\n        !isLayerMarketFormDisabled && {\r\n          validation: Yup.object()\r\n            .nullable()\r\n            .required(() => utils.form.getValidationLabel('placement.marketing.fields.layer', 'required')),\r\n        }),\r\n    },\r\n    {\r\n      name: 'layerMarket',\r\n      type: 'hidden',\r\n      value: selectedLayerMarket,\r\n    },\r\n    {\r\n      name: 'layerMarket_statusId',\r\n      type: 'select',\r\n      label: utils.string.t('placement.form.status.label'),\r\n      value: get(selectedLayerMarket, 'statusId') || '',\r\n      options: refDataStatusesMarketQuote,\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n      },\r\n      ...(hasLayers &&\r\n        !isLayerMarketFormDisabled && {\r\n          validation: Yup.string().test('layerMarket_statusId', utils.string.t('validation.required'), function () {\r\n            return isLayerMarketFormDirty(this.options.parent) ? this.options.parent.layerMarket_statusId : true;\r\n          }),\r\n        }),\r\n      nestedClasses: {\r\n        root: classes.status,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_declinatures',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.marketing.fields.declinatures'),\r\n      value: selectedLayerMarket?.declinatures || [],\r\n      options: refDataDeclinatures,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      muiComponentProps: {\r\n        multiple: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_uniqueMarketReference',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.form.uniqueMarketReference.label'),\r\n      value: selectedLayerMarket ? umrOptions.find((umr) => umr.id === selectedLayerMarket.uniqueMarketReference) : null,\r\n      options: umrOptions,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      disabled: isLayerMarketFormDisabled,\r\n      muiComponentProps: {\r\n        filterOptions: (options, params) => {\r\n          const filtered = createFilterOptions()(options, params);\r\n\r\n          // Suggest the creation of a new value\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              id: params.inputValue,\r\n              label: `${utils.string.t('app.add')} \"${params.inputValue}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        },\r\n      },\r\n      validation: Yup.object({\r\n        id: Yup.string().matches(/^[a-zA-Z0-9]*$/, utils.string.t('validation.string.alphaNumericOnly')),\r\n      }).nullable(),\r\n    },\r\n    {\r\n      name: 'layerMarket_section',\r\n      type: 'text',\r\n      label: utils.string.t('placement.form.section.label'),\r\n      value: get(selectedLayerMarket, 'section') || '',\r\n      validation: Yup.string()\r\n        .trim()\r\n        .max(2)\r\n        .uppercase()\r\n        .matches(/^[A-Z]{0,2}$/, utils.string.t('validation.string.alphaOnly')),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        inputProps: {\r\n          maxLength: 2,\r\n        },\r\n        InputProps: {\r\n          classes: {\r\n            input: classes.section,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_quoteOptions',\r\n      type: 'checkbox',\r\n      options: [\r\n        {\r\n          label: utils.string.t('placement.form.lead.label'),\r\n          name: 'layerMarket_isLeader',\r\n          value: Boolean(get(selectedLayerMarket, 'isLeader')),\r\n          disabled: isLayerMarketFormDisabled,\r\n        },\r\n        {\r\n          label: utils.string.t('placement.form.lineToStand.label'),\r\n          name: 'layerMarket_lineToStand',\r\n          value: Boolean(get(selectedLayerMarket, 'lineToStand')),\r\n          disabled: isLayerMarketFormDisabled,\r\n        },\r\n      ],\r\n      muiFormGroupProps: {\r\n        row: media.desktopUp,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_currency',\r\n      type: 'text',\r\n      value: utils.layer.getCurrency(selectedLayer, ''),\r\n      label: utils.string.t('placement.form.currency.label'),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        InputProps: {\r\n          readOnly: true,\r\n          disabled: true,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_premium',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.form.premium.label'),\r\n      value: selectedLayerMarket ? premiumOptions.find((premium) => premium.id === selectedLayerMarket.premium) : null,\r\n      options: premiumOptions,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      isNumeric: true,\r\n      disabled: isLayerMarketFormDisabled,\r\n      muiComponentProps: {\r\n        filterOptions: (options, params) => {\r\n          const filtered = createFilterOptions({\r\n            stringify: (option) => `${option.label}`,\r\n          })(options, params);\r\n\r\n          // Suggest the creation of a new value\r\n          if (params.inputValue !== '' && parseFloat(params.inputValue)) {\r\n            const premiumFormatted = utils.number.formatNumber(parseFloat(params.inputValue));\r\n            filtered.push({\r\n              id: parseFloat(params.inputValue),\r\n              label: `${utils.string.t('app.add')} \"${premiumFormatted}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        },\r\n        renderOption: formatPremiumOption,\r\n        getOptionLabel: formatPremiumOption,\r\n      },\r\n      validation: Yup.object({\r\n        id: Yup.number().nullable().min(0).currency(),\r\n      })\r\n        .nullable()\r\n        .test('layerMarket_premium', utils.string.t('validation.required'), function () {\r\n          return isLayerMarketAmountRequired(this.options.parent, this.options.parent.layerMarket_premium?.id);\r\n        }),\r\n    },\r\n    {\r\n      name: 'layerMarket_writtenLinePercentage',\r\n      type: 'number',\r\n      value: isNumber(get(selectedLayerMarket, 'writtenLinePercentage')) ? get(selectedLayerMarket, 'writtenLinePercentage') : '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .max(100)\r\n        .percent()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('layerMarket_writtenLinePercentage', utils.string.t('validation.required'), function () {\r\n          return isLayerMarketAmountRequired(this.options.parent, this.options.parent.layerMarket_writtenLinePercentage);\r\n        }),\r\n      label: utils.string.t('placement.form.written.label'),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        autoComplete: 'off',\r\n        fullWidth: false,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_quoteDate',\r\n      type: 'datepicker',\r\n      icon: 'TodayIcon',\r\n      label: utils.string.t('placement.form.dateFrom.label'),\r\n      value: isLayerMarketFormDisabled ? null : get(selectedLayerMarket, 'quoteDate') || null,\r\n      validation: Yup.string().nullable(),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        fullWidth: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_validUntilDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('placement.form.dateExpiry.label'),\r\n      value: get(selectedLayerMarket, 'validUntilDate') || null,\r\n      validation: Yup.string().nullable(),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        fullWidth: true,\r\n      },\r\n      muiPickerProps: {\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'layerMarket_subjectivities',\r\n      type: 'textarea',\r\n      value: get(selectedLayerMarket, 'subjectivities') || '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.subjectivities.label'),\r\n      muiComponentProps: {\r\n        disabled: isLayerMarketFormDisabled,\r\n        multiline: true,\r\n        minRows: 1,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      type: 'submit',\r\n      label: utils.string.t('app.saveClose'),\r\n      handler: handleSubmitAndClose,\r\n    },\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.save'),\r\n      handler: handleFormSubmit,\r\n    },\r\n    {\r\n      name: 'close',\r\n      label: utils.string.t('app.close'),\r\n      callback: handleFormClose,\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      callback: handleFormReset,\r\n    },\r\n  ];\r\n\r\n  const handleAddLayerClick = (popoverData = {}) => {\r\n    dispatch(filterReferenceDataBusinessTypes());\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_PLACEMENT_LAYER',\r\n        props: {\r\n          title: 'placement.marketing.addLayer',\r\n          subtitle: popoverData.title,\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            businessTypeId: popoverData.id,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  // uuid on the form key is to force the form to re-initialise from scratch with new defaultValues and dirty state\r\n  // this is to allow us to detect which part(s) of the form were edited\r\n  return (\r\n    <EditPlacementMarketsLayersView\r\n      key={`${selectedMarket?.id}-${selectedLayer?.id}-${selectedLayerMarket?.id}${uuid ? `-${uuid}` : ''}`}\r\n      actions={actions}\r\n      fields={[...marketFields, ...layerMarketFields]}\r\n      hasLayers={hasLayers}\r\n      handlers={{\r\n        isStatusDeclined,\r\n        isStatusQuoted,\r\n        handleAddLayerClick,\r\n        resetLayer,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}