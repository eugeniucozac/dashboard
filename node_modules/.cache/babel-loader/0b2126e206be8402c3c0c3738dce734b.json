{"ast":null,"code":"// app\nimport { authLogout, addLoader, removeLoader, transformOpeningMemoInPUT } from 'stores';\nimport * as utils from 'utils';\nexport var getOpeningMemo = function getOpeningMemo(openingMemoId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/openingMemo.actions.get'\n    };\n    dispatch(getOpeningMemoRequest(openingMemoId));\n    dispatch(addLoader('openingMemo'));\n\n    if (!openingMemoId) {\n      dispatch(getOpeningMemoFailure(defaultError));\n      dispatch(removeLoader('getOpeningMemo'));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/openingMemo/\".concat(openingMemoId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      var transformedData = transformOpeningMemoInPUT(data);\n      dispatch(getOpeningMemoSuccess(transformedData));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getOpeningMemoFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('openingMemo'));\n    });\n  };\n};\nexport var getOpeningMemoRequest = function getOpeningMemoRequest(payload) {\n  return {\n    type: 'OPENING_MEMO_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getOpeningMemoSuccess = function getOpeningMemoSuccess(payload) {\n  return {\n    type: 'OPENING_MEMO_GET_SUCCESS',\n    payload: payload\n  };\n};\nexport var getOpeningMemoFailure = function getOpeningMemoFailure(error) {\n  return {\n    type: 'OPENING_MEMO_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/openingMemo/openingMemo.actions.get.js"],"names":["authLogout","addLoader","removeLoader","transformOpeningMemoInPUT","utils","getOpeningMemo","openingMemoId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getOpeningMemoRequest","getOpeningMemoFailure","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","transformedData","getOpeningMemoSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","error"],"mappings":"AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,EAA8CC,yBAA9C,QAA+E,QAA/E;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,aAAD;AAAA,SAAmB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACvE;AADuE,oBAEdA,QAAQ,EAFM;AAAA,QAEvDC,IAFuD,aAE/DC,IAF+D,CAEvDD,IAFuD;AAAA,QAE7BE,QAF6B,aAE/CC,MAF+C,CAErCC,IAFqC,CAE7BF,QAF6B;;AAIvE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,qBAAqB,CAACV,aAAD,CAAtB,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,aAAD,CAAV,CAAR;;AAEA,QAAI,CAACK,aAAL,EAAoB;AAClBC,MAAAA,QAAQ,CAACU,qBAAqB,CAACH,YAAD,CAAtB,CAAR;AACAP,MAAAA,QAAQ,CAACL,YAAY,CAAC,gBAAD,CAAb,CAAR;AACD;;AAED,WAAOE,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,IAFhB;AAGHC,MAAAA,IAAI,4BAAqBjB,aAArB;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACc,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUvB,KAAK,CAACc,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACd,UAAMC,eAAe,GAAG3B,yBAAyB,CAAC0B,IAAD,CAAjD;AACAtB,MAAAA,QAAQ,CAACwB,qBAAqB,CAACD,eAAD,CAAtB,CAAR;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACd7B,MAAAA,KAAK,CAACc,GAAN,CAAUgB,WAAV,CAAsBD,GAAtB,EAA2BnB,YAA3B;AACAV,MAAAA,KAAK,CAACc,GAAN,CAAUiB,kBAAV,CAA6BF,GAA7B,EAAkC1B,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACU,qBAAqB,CAACgB,GAAD,CAAtB,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,EAkBJG,OAlBI,CAkBI,YAAM;AACb7B,MAAAA,QAAQ,CAACL,YAAY,CAAC,aAAD,CAAb,CAAR;AACD,KApBI,CAAP;AAqBD,GArC6B;AAAA,CAAvB;AAuCP,OAAO,IAAMc,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACqB,OAAD,EAAa;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAE,0BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMN,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACM,OAAD,EAAa;AAChD,SAAO;AACLC,IAAAA,IAAI,EAAE,0BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMpB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACsB,KAAD,EAAW;AAC9C,SAAO;AACLD,IAAAA,IAAI,EAAE,0BADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout, addLoader, removeLoader, transformOpeningMemoInPUT } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getOpeningMemo = (openingMemoId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/openingMemo.actions.get',\r\n  };\r\n\r\n  dispatch(getOpeningMemoRequest(openingMemoId));\r\n  dispatch(addLoader('openingMemo'));\r\n\r\n  if (!openingMemoId) {\r\n    dispatch(getOpeningMemoFailure(defaultError));\r\n    dispatch(removeLoader('getOpeningMemo'));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/openingMemo/${openingMemoId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      const transformedData = transformOpeningMemoInPUT(data);\r\n      dispatch(getOpeningMemoSuccess(transformedData));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getOpeningMemoFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('openingMemo'));\r\n    });\r\n};\r\n\r\nexport const getOpeningMemoRequest = (payload) => {\r\n  return {\r\n    type: 'OPENING_MEMO_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getOpeningMemoSuccess = (payload) => {\r\n  return {\r\n    type: 'OPENING_MEMO_GET_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getOpeningMemoFailure = (error) => {\r\n  return {\r\n    type: 'OPENING_MEMO_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}