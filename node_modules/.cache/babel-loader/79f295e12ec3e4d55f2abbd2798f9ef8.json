{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseNotes\\\\PremiumProcessingCaseNotes.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get'; //app\n\nimport PremiumProcessingCaseNotesView from './PremiumProcessingCaseNotes.view';\nimport * as utils from 'utils';\nimport styles from './PremiumProcessingCaseNotes.styles';\nimport * as constants from 'consts';\nimport { selectCaseTaskTypeView } from 'stores'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseNotes.propTypes = {\n  taskId: PropTypes.string.isRequired,\n  caseDetailsObject: PropTypes.object\n};\nexport default function PremiumProcessingCaseNotes(_ref) {\n  _s();\n\n  var _caseDetailsObject$ca;\n\n  var taskId = _ref.taskId,\n      caseDetailsObject = _ref.caseDetailsObject;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseNotes'\n  })();\n  var caseStages = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseStageDetails;\n  var isUnassignedStage = caseStages === null || caseStages === void 0 ? void 0 : caseStages.some(function (cs) {\n    return ['UA'].includes(cs.bpmStageCode) && cs.active;\n  });\n  var bpmStageName = useSelector(function (state) {\n    return get(state, 'referenceData.bpmStages');\n  }) || [];\n  var caseTaskTypeView = useSelector(selectCaseTaskTypeView);\n  var isMyTeam = caseTaskTypeView === constants.TASK_TEAM_TYPE.myTeam;\n  var isTaskHistory = caseTaskTypeView === constants.TASK_TEAM_TYPE.taskHistory;\n\n  if (!taskId) {\n    return null;\n  }\n\n  var fields = [{\n    name: 'notesField',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().required(),\n    label: utils.string.t('placement.form.notes.label'),\n    fullWidth: true,\n    muiComponentProps: {\n      multiline: true,\n      rows: 3,\n      rowsMax: 6,\n      disabled: isUnassignedStage || isMyTeam || isTaskHistory,\n      classes: {\n        root: classes.noteTextWidth\n      },\n      inputProps: {\n        maxLength: 2000\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(PremiumProcessingCaseNotesView, {\n      taskId: taskId,\n      caseNotesHistory: caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca = caseDetailsObject.caseNotes) === null || _caseDetailsObject$ca === void 0 ? void 0 : _caseDetailsObject$ca.notesHistory,\n      fields: fields,\n      bpmStageName: bpmStageName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(PremiumProcessingCaseNotes, \"7Ylam/e63ccvGu7jRe2vdgoEDYk=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PremiumProcessingCaseNotes;\nPremiumProcessingCaseNotes.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseNotes\",\n  \"props\": {\n    \"taskId\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"caseDetailsObject\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseNotes\\\\PremiumProcessingCaseNotes.js\"] = {\n    name: \"PremiumProcessingCaseNotes\",\n    docgenInfo: PremiumProcessingCaseNotes.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseNotes\\\\PremiumProcessingCaseNotes.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseNotes\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseNotes/PremiumProcessingCaseNotes.js"],"names":["React","PropTypes","Yup","useSelector","get","PremiumProcessingCaseNotesView","utils","styles","constants","selectCaseTaskTypeView","makeStyles","PremiumProcessingCaseNotes","propTypes","taskId","string","isRequired","caseDetailsObject","object","classes","name","caseStages","caseStageDetails","isUnassignedStage","some","cs","includes","bpmStageCode","active","bpmStageName","state","caseTaskTypeView","isMyTeam","TASK_TEAM_TYPE","myTeam","isTaskHistory","taskHistory","fields","type","value","validation","required","label","t","fullWidth","muiComponentProps","multiline","rows","rowsMax","disabled","root","noteTextWidth","inputProps","maxLength","caseNotes","notesHistory"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport PremiumProcessingCaseNotesView from './PremiumProcessingCaseNotes.view';\r\nimport * as utils from 'utils';\r\nimport styles from './PremiumProcessingCaseNotes.styles';\r\nimport * as constants from 'consts';\r\nimport { selectCaseTaskTypeView } from 'stores';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPremiumProcessingCaseNotes.propTypes = {\r\n  taskId: PropTypes.string.isRequired,\r\n  caseDetailsObject: PropTypes.object,\r\n};\r\n\r\nexport default function PremiumProcessingCaseNotes({ taskId, caseDetailsObject }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseNotes' })();\r\n  const caseStages = caseDetailsObject?.caseStageDetails;\r\n  const isUnassignedStage = caseStages?.some((cs) => ['UA'].includes(cs.bpmStageCode) && cs.active);\r\n  const bpmStageName = useSelector((state) => get(state, 'referenceData.bpmStages')) || [];\r\n  const caseTaskTypeView = useSelector(selectCaseTaskTypeView);\r\n\r\n  const isMyTeam = caseTaskTypeView === constants.TASK_TEAM_TYPE.myTeam;\r\n  const isTaskHistory = caseTaskTypeView === constants.TASK_TEAM_TYPE.taskHistory;\r\n\r\n  if (!taskId) {\r\n    return null;\r\n  }\r\n\r\n  const fields = [\r\n    {\r\n      name: 'notesField',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string().required(),\r\n      label: utils.string.t('placement.form.notes.label'),\r\n      fullWidth: true,\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 6,\r\n        disabled: isUnassignedStage || isMyTeam || isTaskHistory,\r\n        classes: {\r\n          root: classes.noteTextWidth,\r\n        },\r\n        inputProps: {\r\n          maxLength: 2000,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <PremiumProcessingCaseNotesView\r\n        taskId={taskId}\r\n        caseNotesHistory={caseDetailsObject?.caseNotes?.notesHistory}\r\n        fields={fields}\r\n        bpmStageName={bpmStageName}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}