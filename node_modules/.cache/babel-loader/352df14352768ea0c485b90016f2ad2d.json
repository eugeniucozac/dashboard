{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditReport\\\\AddEditReport.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { AddEditReportView } from './AddEditReport.view';\nimport * as utils from 'utils';\nimport { createReportingGroup, reportingGroupEdit } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditReport.propTypes = {\n  report: PropTypes.object,\n  handleClose: PropTypes.func.isRequired,\n  isEditReportGroup: PropTypes.bool.isRequired\n};\nexport default function AddEditReport(_ref) {\n  _s();\n\n  var _ref$report = _ref.report,\n      report = _ref$report === void 0 ? {} : _ref$report,\n      handleClose = _ref.handleClose,\n      isEditReportGroup = _ref.isEditReportGroup;\n  var dispatch = useDispatch();\n  var fields = [{\n    name: 'id',\n    type: 'text',\n    value: report === null || report === void 0 ? void 0 : report.id\n  }, {\n    name: 'name',\n    type: 'text',\n    value: (report === null || report === void 0 ? void 0 : report.name) || '',\n    validation: Yup.string().required(utils.string.t('reporting.form.reportGroupName.required')),\n    label: utils.string.t('reporting.form.reportGroupName.label')\n  }, {\n    name: 'description',\n    type: 'textarea',\n    label: utils.string.t('reporting.form.description'),\n    value: (report === null || report === void 0 ? void 0 : report.description) || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 3,\n      maxRows: 6,\n      'data-testid': 'description'\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      return isEditReportGroup ? dispatch(reportingGroupEdit(values)) : dispatch(createReportingGroup(values));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(AddEditReportView, {\n    fields: fields,\n    actions: actions,\n    isEditReportGroup: isEditReportGroup\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddEditReport, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddEditReport;\nAddEditReport.displayName = \"AddEditReport\";\nAddEditReport.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddEditReport\",\n  \"props\": {\n    \"report\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isEditReportGroup\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditReport\\\\AddEditReport.js\"] = {\n    name: \"AddEditReport\",\n    docgenInfo: AddEditReport.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditReport\\\\AddEditReport.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditReport\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditReport/AddEditReport.js"],"names":["React","PropTypes","Yup","useDispatch","AddEditReportView","utils","createReportingGroup","reportingGroupEdit","AddEditReport","propTypes","report","object","handleClose","func","isRequired","isEditReportGroup","bool","dispatch","fields","name","type","value","id","validation","string","required","t","label","description","muiComponentProps","multiline","minRows","maxRows","actions","handler","values"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { AddEditReportView } from './AddEditReport.view';\r\nimport * as utils from 'utils';\r\nimport { createReportingGroup, reportingGroupEdit } from 'stores';\r\n\r\nAddEditReport.propTypes = {\r\n  report: PropTypes.object,\r\n  handleClose: PropTypes.func.isRequired,\r\n  isEditReportGroup: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function AddEditReport({ report = {}, handleClose, isEditReportGroup }) {\r\n  const dispatch = useDispatch();\r\n  const fields = [\r\n    {\r\n      name: 'id',\r\n      type: 'text',\r\n      value: report?.id,\r\n    },\r\n    {\r\n      name: 'name',\r\n      type: 'text',\r\n      value: report?.name || '',\r\n      validation: Yup.string().required(utils.string.t('reporting.form.reportGroupName.required')),\r\n      label: utils.string.t('reporting.form.reportGroupName.label'),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      label: utils.string.t('reporting.form.description'),\r\n      value: report?.description || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 3,\r\n        maxRows: 6,\r\n        'data-testid': 'description',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => {\r\n        return isEditReportGroup ? dispatch(reportingGroupEdit(values)) : dispatch(createReportingGroup(values));\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <AddEditReportView fields={fields} actions={actions} isEditReportGroup={isEditReportGroup} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}