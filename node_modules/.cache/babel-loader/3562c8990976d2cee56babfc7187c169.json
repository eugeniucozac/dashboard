{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var getFileUploadPolicyDetails = function getFileUploadPolicyDetails(type, riskRefObject) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/fileUpload.actions.getFileUploadPolicyDetails'\n    };\n    dispatch(getFileUploadPolicyDetailsRequest(type, riskRefObject));\n\n    if (!['risk', 'claim'].includes(type) || !riskRefObject || !riskRefObject.policyRef || !riskRefObject.xbInstanceId) {\n      dispatch(getFileUploadPolicyDetailsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing parameters'\n      })));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"data/\".concat(type, \"/reference/\").concat(riskRefObject.policyRef, \"/\").concat(riskRefObject.xbInstanceId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      if ((json === null || json === void 0 ? void 0 : json.status) === 'OK' && (json === null || json === void 0 ? void 0 : json.data)) {\n        dispatch(getFileUploadPolicyDetailsSuccess(json.data));\n        return json.data;\n      } else {\n        return Promise.reject(_objectSpread({\n          message: \"API error\".concat(json.status ? \" (\".concat(json.status, \")\") : '')\n        }, json && _objectSpread({}, json)));\n      }\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (fileUpload.getFileUploadPolicyDetails)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getFileUploadPolicyDetailsFailure(err));\n      return err;\n    });\n  };\n};\nexport var getFileUploadPolicyDetailsRequest = function getFileUploadPolicyDetailsRequest(type, riskRefObject) {\n  return {\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_REQUEST',\n    payload: {\n      type: type,\n      riskRefObject: riskRefObject\n    }\n  };\n};\nexport var getFileUploadPolicyDetailsSuccess = function getFileUploadPolicyDetailsSuccess(guiResponseList) {\n  return {\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_SUCCESS',\n    payload: guiResponseList\n  };\n};\nexport var getFileUploadPolicyDetailsFailure = function getFileUploadPolicyDetailsFailure(error) {\n  return {\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/fileUpload/fileUpload.actions.getPolicyDetails.js"],"names":["utils","authLogout","getFileUploadPolicyDetails","type","riskRefObject","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getFileUploadPolicyDetailsRequest","includes","policyRef","xbInstanceId","getFileUploadPolicyDetailsFailure","message","api","get","token","accessToken","dmsService","path","then","response","handleResponse","json","status","data","getFileUploadPolicyDetailsSuccess","Promise","reject","catch","err","handleError","handleUnauthorized","payload","guiResponseList","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getFileUploadPolicyDetails = (type, riskRefObject) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: {auth}, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/fileUpload.actions.getFileUploadPolicyDetails',\r\n  };\r\n\r\n  dispatch(getFileUploadPolicyDetailsRequest(type, riskRefObject));\r\n\r\n  if (!['risk', 'claim'].includes(type) || !riskRefObject || !riskRefObject.policyRef || !riskRefObject.xbInstanceId) {\r\n    dispatch(getFileUploadPolicyDetailsFailure({ ...defaultError, message: 'Missing parameters' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `data/${type}/reference/${riskRefObject.policyRef}/${riskRefObject.xbInstanceId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => {\r\n      if (json?.status === 'OK' && json?.data) {\r\n        dispatch(getFileUploadPolicyDetailsSuccess(json.data));\r\n        return json.data;\r\n      } else {\r\n        return Promise.reject({\r\n          message: `API error${json.status ? ` (${json.status})` : ''}`,\r\n          ...(json && { ...json }),\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (fileUpload.getFileUploadPolicyDetails)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getFileUploadPolicyDetailsFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getFileUploadPolicyDetailsRequest = (type, riskRefObject) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_REQUEST',\r\n    payload: { type, riskRefObject },\r\n  };\r\n};\r\n\r\nexport const getFileUploadPolicyDetailsSuccess = (guiResponseList) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_SUCCESS',\r\n    payload: guiResponseList,\r\n  };\r\n};\r\n\r\nexport const getFileUploadPolicyDetailsFailure = (error) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_POLICY_DETAILS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}