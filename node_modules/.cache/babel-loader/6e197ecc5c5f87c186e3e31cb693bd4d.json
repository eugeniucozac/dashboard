{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkSearchPolicy\\\\LinkSearchPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\nimport { selectLossId, selectLossQualifiers, selectCatCodes, selectClaimsPolicyInformation, getClaimantNames } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function LinkSearchPolicy(props) {\n  _s();\n\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      validation = _useState2[0],\n      setValidation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      confirm = _useState4[0],\n      setConfirm = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      currentContextActive = _useState6[0],\n      setCurrentContextActive = _useState6[1];\n\n  var hasPolicyRef = Boolean(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef);\n\n  var handleAddClaim = function handleAddClaim() {\n    dispatch(getClaimantNames());\n  };\n\n  var onSaveHandle = function onSaveHandle() {\n    props.handleSave(props.index);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(LinkSearchPolicyView, _objectSpread(_objectSpread({}, props), {}, {\n      policyInformation: policyInformation,\n      handleAddClaim: handleAddClaim,\n      lossInformation: lossInformation,\n      catCodes: catCodes,\n      lossQualifiers: lossQualifiers,\n      confirm: confirm,\n      setConfirm: setConfirm,\n      hasPolicyRef: hasPolicyRef,\n      setCurrentContextActive: setCurrentContextActive,\n      currentContextActive: currentContextActive,\n      validation: validation,\n      setValidation: setValidation,\n      onSaveHandle: onSaveHandle\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LinkSearchPolicy, \"ijxjhVgRPkSGtKR2GJk4gSpEJQI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = LinkSearchPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkSearchPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkSearchPolicy/LinkSearchPolicy.js"],"names":["React","useEffect","useState","useDispatch","useSelector","LinkSearchPolicyView","selectLossId","selectLossQualifiers","selectCatCodes","selectClaimsPolicyInformation","getClaimantNames","LinkSearchPolicy","props","dispatch","lossInformation","catCodes","lossQualifiers","policyInformation","validation","setValidation","confirm","setConfirm","currentContextActive","setCurrentContextActive","hasPolicyRef","Boolean","policyRef","handleAddClaim","onSaveHandle","handleSave","index"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAOC,oBAAP,MAAiC,yBAAjC;AACA,SACEC,YADF,EAEEC,oBAFF,EAGEC,cAHF,EAIEC,6BAJF,EAKEC,gBALF,QAMO,QANP;;;AAQA,eAAe,SAASC,gBAAT,CAA0BC,KAA1B,EAAiC;AAAA;;AAC9C,MAAMC,QAAQ,GAAGV,WAAW,EAA5B;AACA,MAAMW,eAAe,GAAGV,WAAW,CAACE,YAAD,CAAnC;AACA,MAAMS,QAAQ,GAAGX,WAAW,CAACI,cAAD,CAA5B;AACA,MAAMQ,cAAc,GAAGZ,WAAW,CAACG,oBAAD,CAAlC;AACA,MAAMU,iBAAiB,GAAGb,WAAW,CAACK,6BAAD,CAArC;;AAL8C,kBAMVP,QAAQ,CAAC,KAAD,CANE;AAAA;AAAA,MAMvCgB,UANuC;AAAA,MAM3BC,aAN2B;;AAAA,mBAOhBjB,QAAQ,CAAC,KAAD,CAPQ;AAAA;AAAA,MAOvCkB,OAPuC;AAAA,MAO9BC,UAP8B;;AAAA,mBAQUnB,QAAQ,CAAC,IAAD,CARlB;AAAA;AAAA,MAQvCoB,oBARuC;AAAA,MAQjBC,uBARiB;;AAS9C,MAAMC,YAAY,GAAGC,OAAO,CAACR,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAES,SAApB,CAA5B;;AAEA,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,GAAM;AAC3Bd,IAAAA,QAAQ,CAACH,gBAAgB,EAAjB,CAAR;AACD,GAFD;;AAIA,MAAMkB,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBhB,IAAAA,KAAK,CAACiB,UAAN,CAAiBjB,KAAK,CAACkB,KAAvB;AACD,GAFD;;AAIA,sBACE;AAAA,2BACE,QAAC,oBAAD,kCACMlB,KADN;AAEE,MAAA,iBAAiB,EAAEK,iBAFrB;AAGE,MAAA,cAAc,EAAEU,cAHlB;AAIE,MAAA,eAAe,EAAEb,eAJnB;AAKE,MAAA,QAAQ,EAAEC,QALZ;AAME,MAAA,cAAc,EAAEC,cANlB;AAOE,MAAA,OAAO,EAAEI,OAPX;AAQE,MAAA,UAAU,EAAEC,UARd;AASE,MAAA,YAAY,EAAEG,YAThB;AAUE,MAAA,uBAAuB,EAAED,uBAV3B;AAWE,MAAA,oBAAoB,EAAED,oBAXxB;AAYE,MAAA,UAAU,EAAEJ,UAZd;AAaE,MAAA,aAAa,EAAEC,aAbjB;AAcE,MAAA,YAAY,EAAES;AAdhB;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAoBD;;GAvCuBjB,gB;UACLR,W,EACOC,W,EACPA,W,EACMA,W,EACGA,W;;;KALJO,gB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport LinkSearchPolicyView from './LinkSearchPolicy.view';\r\nimport {\r\n  selectLossId,\r\n  selectLossQualifiers,\r\n  selectCatCodes,\r\n  selectClaimsPolicyInformation,\r\n  getClaimantNames,\r\n} from 'stores';\r\n\r\nexport default function LinkSearchPolicy(props) {\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const [validation, setValidation] = useState(false);\r\n  const [confirm, setConfirm] = useState(false);\r\n  const [currentContextActive, setCurrentContextActive] = useState(true);\r\n  const hasPolicyRef = Boolean(policyInformation?.policyRef);\r\n\r\n  const handleAddClaim = () => {\r\n    dispatch(getClaimantNames());\r\n  };\r\n\r\n  const onSaveHandle = () => {\r\n    props.handleSave(props.index);\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <LinkSearchPolicyView\r\n        {...props}\r\n        policyInformation={policyInformation}\r\n        handleAddClaim={handleAddClaim}\r\n        lossInformation={lossInformation}\r\n        catCodes={catCodes}\r\n        lossQualifiers={lossQualifiers}\r\n        confirm={confirm}\r\n        setConfirm={setConfirm}\r\n        hasPolicyRef={hasPolicyRef}\r\n        setCurrentContextActive={setCurrentContextActive}\r\n        currentContextActive={currentContextActive}\r\n        validation={validation}\r\n        setValidation={setValidation}\r\n        onSaveHandle={onSaveHandle}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}