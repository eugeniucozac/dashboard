{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditPlacement\\\\EditPlacement.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport get from 'lodash/get';\nimport differenceBy from 'lodash/differenceBy';\nimport sortBy from 'lodash/sortBy'; // mui\n\nimport { makeStyles } from '@material-ui/core'; // app\n\nimport { OptionDetail, Translate } from 'components';\nimport styles from './EditPlacement.styles';\nimport { EditPlacementView } from './EditPlacement.view';\nimport { postEditPlacement, selectRefDataDepartmentUsers, selectUserDepartmentIds, selectRefDataDepartments, getReferenceDataByType, selectRefDataStatusesPlacement } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditPlacement.propTypes = {\n  placement: PropTypes.object.isRequired,\n  calendarView: PropTypes.bool,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function EditPlacement(_ref) {\n  _s();\n\n  var _placement$clients,\n      _placement$policies,\n      _this = this,\n      _placement$department,\n      _placement$statusId;\n\n  var _ref$placement = _ref.placement,\n      placement = _ref$placement === void 0 ? {} : _ref$placement,\n      _ref$calendarView = _ref.calendarView,\n      calendarView = _ref$calendarView === void 0 ? false : _ref$calendarView,\n      handleClose = _ref.handleClose;\n  var classes = makeStyles(styles, {\n    name: 'EditPlacement'\n  })();\n  var dispatch = useDispatch();\n  var refDataDepartmentUsers = useSelector(selectRefDataDepartmentUsers);\n  var userDepartments = useSelector(selectUserDepartmentIds);\n  var refDataDepartments = useSelector(selectRefDataDepartments);\n  var refDataStatusesPlacement = useSelector(selectRefDataStatusesPlacement);\n  var users = get(placement, 'users', []);\n  var usersOptionsFiltered = utils.users.getWithName(refDataDepartmentUsers);\n  var selectedClients = placement === null || placement === void 0 ? void 0 : (_placement$clients = placement.clients) === null || _placement$clients === void 0 ? void 0 : _placement$clients.map(function (client) {\n    return _objectSpread(_objectSpread({}, client), {}, {\n      id: (client === null || client === void 0 ? void 0 : client.idClient) ? client.idClient : client.id,\n      name: (client === null || client === void 0 ? void 0 : client.type) === 'office' ? \"\".concat(client.parent, \" \").concat(client.name) : client.name\n    });\n  });\n  var isDiabled = (placement === null || placement === void 0 ? void 0 : (_placement$policies = placement.policies) === null || _placement$policies === void 0 ? void 0 : _placement$policies.length) > 0;\n  var brokers = utils.users.getBrokers(users).map(function (user) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      label: utils.user.fullname(user)\n    });\n  });\n  var brokersOptions = utils.users.getBrokers(usersOptionsFiltered).map(function (broker) {\n    return _objectSpread(_objectSpread({}, broker), {}, {\n      label: utils.user.fullname(broker)\n    });\n  });\n  var gxbBrokers = utils.users.getBrokers(users, {\n    gxbUsersOnly: true\n  });\n  var cobrokers = utils.users.getCobrokers(users).map(function (user) {\n    return _objectSpread(_objectSpread({}, user), {}, {\n      label: utils.user.fullname(user)\n    });\n  });\n  var officeCoBrokers = utils.placement.getOfficeCobrokers(placement);\n  var cobrokersOptions = utils.users.getCobrokers(usersOptionsFiltered).map(function (broker) {\n    return _objectSpread(_objectSpread({}, broker), {}, {\n      label: utils.user.fullname(broker)\n    });\n  });\n  var cobrokersAvailableOptions = differenceBy(cobrokersOptions, officeCoBrokers, 'id');\n  var filteredDepts = refDataDepartments.filter(function (dept) {\n    return userDepartments.includes(dept.id);\n  });\n\n  var renderClientOptions = function renderClientOptions(options) {\n    if (!utils.generic.isValidArray(options)) return []; // orders clients with offices at the top\n    // if client has office(s), show the parent logo and name\n    // if client has multiple offices, split each office into its own entry\n\n    var optionsSorted = sortBy(options, [function (o) {\n      return !utils.generic.isValidArray(o.offices, true);\n    }]).reduce(function (acc, option) {\n      // no offices\n      if (!option.offices || option.offices && option.offices.length === 0) {\n        return [].concat(_toConsumableArray(acc), [option]);\n      } // single office\n\n\n      if (option.offices && option.offices.length === 1) {\n        var officeName = utils.office.getName(option.offices[0]);\n        var parent = utils.office.getParent(option.offices[0]);\n        var parentName = utils.client.parent.getName(parent);\n        return [].concat(_toConsumableArray(acc), [_objectSpread(_objectSpread({}, option), {}, {\n          name: \"\".concat(parentName, \" \").concat(officeName)\n        })]);\n      }\n\n      if (option.offices && option.offices.length > 1) {\n        var newOptionsFromOffices = option.offices.reduce(function (newOptions, nestedOffice) {\n          var officeName = utils.office.getName(nestedOffice);\n          var parent = utils.office.getParent(nestedOffice);\n          var parentName = utils.client.parent.getName(parent);\n          return [].concat(_toConsumableArray(newOptions), [_objectSpread(_objectSpread({}, option), {}, {\n            name: \"\".concat(parentName, \" \").concat(officeName),\n            offices: [nestedOffice]\n          })]);\n        }, []);\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(newOptionsFromOffices));\n      }\n\n      return acc;\n    }, []);\n    return optionsSorted.map(function (option) {\n      var clientDetail = utils.client.getClientDetail(option);\n      var clientOffice = utils.office.getMainOffice(option.offices);\n      var officeName = utils.office.getName(clientOffice);\n      var parent = utils.office.getParent(clientOffice);\n      var parentName = utils.client.parent.getName(parent);\n      var parentLogo = utils.client.parent.getLogoFilePath(parent);\n      return _objectSpread(_objectSpread({}, option), {}, {\n        label: /*#__PURE__*/_jsxDEV(OptionDetail, {\n          label: officeName || option.name,\n          detail: clientDetail,\n          children: parentLogo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: parentLogo,\n            alt: \"logo \".concat(parentName),\n            className: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 28\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, _this)\n      });\n    });\n  };\n\n  var renderInsuredOptions = function renderInsuredOptions(options) {\n    if (!utils.generic.isValidArray(options)) return [];\n    return options.map(function (option) {\n      if (option.isProvisional) {\n        return _objectSpread(_objectSpread({}, option), {}, {\n          name: /*#__PURE__*/_jsxDEV(OptionDetail, {\n            label: option.name,\n            detail: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"renewals.provisionalInsuredTooltip\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 23\n            }, _this),\n            type: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, _this)\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, option), {}, {\n        name: /*#__PURE__*/_jsxDEV(OptionDetail, {\n          label: option.name\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 167,\n          columnNumber: 15\n        }, _this)\n      });\n    });\n  };\n\n  var fields = [{\n    name: 'brokers',\n    type: 'autocomplete',\n    value: brokers || [],\n    label: utils.string.t('form.brokers.label'),\n    hint: utils.string.t('form.brokers.hint'),\n    options: brokersOptions,\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array(),\n    innerComponentProps: {\n      isMulti: true,\n      allowEmpty: true,\n      maxMenuHeight: 200,\n      'data-testid': 'brokers'\n    }\n  }, {\n    name: 'cobrokers',\n    type: 'autocomplete',\n    value: cobrokers || [],\n    label: utils.string.t('placement.form.coBrokers.label'),\n    hint: utils.string.t('placement.form.coBrokers.hint'),\n    options: cobrokersAvailableOptions,\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array(),\n    innerComponentProps: {\n      isMulti: true,\n      allowEmpty: true,\n      maxMenuHeight: 200,\n      'data-testid': 'cobrokers'\n    }\n  }, {\n    name: 'department',\n    label: utils.string.t('form.departments.label'),\n    value: (placement === null || placement === void 0 ? void 0 : (_placement$department = placement.departmentId) === null || _placement$department === void 0 ? void 0 : _placement$department.toString()) || '',\n    type: 'select',\n    options: filteredDepts.map(function (dept) {\n      return {\n        value: dept.id,\n        label: dept.name\n      };\n    }),\n    muiComponentProps: {\n      disabled: isDiabled\n    },\n    validation: !isDiabled && Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'description',\n    type: 'textarea',\n    label: utils.string.t('form.description.label'),\n    value: placement.description || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 3,\n      maxRows: 6,\n      'data-testid': 'description'\n    }\n  }, {\n    name: 'clients',\n    type: 'autocomplete',\n    label: utils.string.t('form.clients.label'),\n    value: selectedClients || [],\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: !isDiabled && Yup.array().of(Yup.mixed().required(utils.string.t('form.clients.required'))).required(utils.string.t('form.clients.required')),\n    muiComponentProps: {\n      'data-testid': 'clients'\n    },\n    innerComponentProps: {\n      valueLabel: 'name',\n      isMulti: true,\n      allowEmpty: true,\n      displayUpArowIcon: false,\n      maxMenuHeight: 205,\n      async: {\n        handler: function () {\n          var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var options,\n                _args = arguments;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return dispatch(getReferenceDataByType.apply(void 0, _args));\n\n                  case 2:\n                    options = _context.sent;\n                    return _context.abrupt(\"return\", renderClientOptions(options, classes));\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function handler() {\n            return _handler.apply(this, arguments);\n          }\n\n          return handler;\n        }(),\n        type: 'client'\n      },\n      isDisabled: isDiabled\n    }\n  }, {\n    name: 'insureds',\n    type: 'autocomplete',\n    label: utils.string.t('form.insureds.label'),\n    hint: utils.string.t('form.insureds.hint'),\n    value: (placement === null || placement === void 0 ? void 0 : placement.insureds) || [],\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: !isDiabled && Yup.array().of(Yup.mixed().required(utils.string.t('form.insureds.required'))).required(utils.string.t('form.insureds.required')),\n    muiComponentProps: {\n      'data-testid': 'insureds'\n    },\n    innerComponentProps: {\n      valueLabel: 'name',\n      isCreatable: true,\n      isMulti: true,\n      displayUpArowIcon: false,\n      allowEmpty: true,\n      maxMenuHeight: 200,\n      async: {\n        handler: function () {\n          var _handler2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n            var options,\n                _args2 = arguments;\n            return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n              while (1) {\n                switch (_context2.prev = _context2.next) {\n                  case 0:\n                    _context2.next = 2;\n                    return dispatch(getReferenceDataByType.apply(void 0, _args2));\n\n                  case 2:\n                    options = _context2.sent;\n                    return _context2.abrupt(\"return\", renderInsuredOptions(options));\n\n                  case 4:\n                  case \"end\":\n                    return _context2.stop();\n                }\n              }\n            }, _callee2);\n          }));\n\n          function handler() {\n            return _handler2.apply(this, arguments);\n          }\n\n          return handler;\n        }(),\n        type: 'insured'\n      },\n      isDisabled: isDiabled\n    }\n  }, {\n    name: 'statusLabel',\n    label: utils.string.t('app.status'),\n    value: (placement === null || placement === void 0 ? void 0 : (_placement$statusId = placement.statusId) === null || _placement$statusId === void 0 ? void 0 : _placement$statusId.toString()) || '',\n    type: 'select',\n    options: refDataStatusesPlacement.map(function (status) {\n      return {\n        value: status.id,\n        label: status.code\n      };\n    }),\n    muiComponentProps: {\n      disabled: isDiabled\n    },\n    validation: !isDiabled && Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'inceptionDate',\n    type: 'datepicker',\n    label: utils.string.t('form.inceptionDate.label'),\n    value: placement.inceptionDate || null,\n    validation: Yup.string().nullable().required(utils.string.t('form.inceptionDate.required')),\n    muiComponentProps: {\n      'data-testid': 'inceptionDate'\n    }\n  }, {\n    name: 'placementId',\n    type: 'hidden',\n    value: placement.id\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      dispatch(postEditPlacement(values, calendarView));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(EditPlacementView, {\n    fields: fields,\n    actions: actions,\n    gxbBrokers: gxbBrokers,\n    officeCoBrokers: officeCoBrokers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 345,\n    columnNumber: 10\n  }, this);\n}\n\n_s(EditPlacement, \"EtIjpCoMSDLw3KhcbatVbGTJsJc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EditPlacement;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPlacement\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditPlacement/EditPlacement.js"],"names":["React","PropTypes","useDispatch","useSelector","Yup","get","differenceBy","sortBy","makeStyles","OptionDetail","Translate","styles","EditPlacementView","postEditPlacement","selectRefDataDepartmentUsers","selectUserDepartmentIds","selectRefDataDepartments","getReferenceDataByType","selectRefDataStatusesPlacement","utils","EditPlacement","propTypes","placement","object","isRequired","calendarView","bool","handleClose","func","classes","name","dispatch","refDataDepartmentUsers","userDepartments","refDataDepartments","refDataStatusesPlacement","users","usersOptionsFiltered","getWithName","selectedClients","clients","map","client","id","idClient","type","parent","isDiabled","policies","length","brokers","getBrokers","user","label","fullname","brokersOptions","broker","gxbBrokers","gxbUsersOnly","cobrokers","getCobrokers","officeCoBrokers","getOfficeCobrokers","cobrokersOptions","cobrokersAvailableOptions","filteredDepts","filter","dept","includes","renderClientOptions","options","generic","isValidArray","optionsSorted","o","offices","reduce","acc","option","officeName","office","getName","getParent","parentName","newOptionsFromOffices","newOptions","nestedOffice","clientDetail","getClientDetail","clientOffice","getMainOffice","parentLogo","getLogoFilePath","logo","renderInsuredOptions","isProvisional","fields","value","string","t","hint","optionKey","optionLabel","validation","array","innerComponentProps","isMulti","allowEmpty","maxMenuHeight","departmentId","toString","muiComponentProps","disabled","required","description","multiline","minRows","maxRows","of","mixed","valueLabel","displayUpArowIcon","async","handler","isDisabled","insureds","isCreatable","statusId","status","code","inceptionDate","nullable","actions","values"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AAEA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,YAAP,MAAyB,qBAAzB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B,C,CAEA;;AACA,SAASC,YAAT,EAAuBC,SAAvB,QAAwC,YAAxC;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AAEA,SAASC,iBAAT,QAAkC,sBAAlC;AACA,SACEC,iBADF,EAEEC,4BAFF,EAGEC,uBAHF,EAIEC,wBAJF,EAKEC,sBALF,EAMEC,8BANF,QAOO,QAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,SAAS,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADJ;AAExBC,EAAAA,YAAY,EAAExB,SAAS,CAACyB,IAFA;AAGxBC,EAAAA,WAAW,EAAE1B,SAAS,CAAC2B,IAAV,CAAeJ;AAHJ,CAA1B;AAMA,eAAe,SAASJ,aAAT,OAA8E;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,4BAArDE,SAAqD;AAAA,MAArDA,SAAqD,+BAAzC,EAAyC;AAAA,+BAArCG,YAAqC;AAAA,MAArCA,YAAqC,kCAAtB,KAAsB;AAAA,MAAfE,WAAe,QAAfA,WAAe;AAC3F,MAAME,OAAO,GAAGrB,UAAU,CAACG,MAAD,EAAS;AAAEmB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,MAAM8B,sBAAsB,GAAG7B,WAAW,CAACW,4BAAD,CAA1C;AACA,MAAMmB,eAAe,GAAG9B,WAAW,CAACY,uBAAD,CAAnC;AACA,MAAMmB,kBAAkB,GAAG/B,WAAW,CAACa,wBAAD,CAAtC;AACA,MAAMmB,wBAAwB,GAAGhC,WAAW,CAACe,8BAAD,CAA5C;AACA,MAAMkB,KAAK,GAAG/B,GAAG,CAACiB,SAAD,EAAY,OAAZ,EAAqB,EAArB,CAAjB;AACA,MAAMe,oBAAoB,GAAGlB,KAAK,CAACiB,KAAN,CAAYE,WAAZ,CAAwBN,sBAAxB,CAA7B;AACA,MAAMO,eAAe,GAAGjB,SAAH,aAAGA,SAAH,6CAAGA,SAAS,CAAEkB,OAAd,uDAAG,mBAAoBC,GAApB,CAAwB,UAACC,MAAD,EAAY;AAC1D,2CACKA,MADL;AAEEC,MAAAA,EAAE,EAAE,CAAAD,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEE,QAAR,IAAmBF,MAAM,CAACE,QAA1B,GAAqCF,MAAM,CAACC,EAFlD;AAGEb,MAAAA,IAAI,EAAE,CAAAY,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEG,IAAR,MAAiB,QAAjB,aAA+BH,MAAM,CAACI,MAAtC,cAAgDJ,MAAM,CAACZ,IAAvD,IAAgEY,MAAM,CAACZ;AAH/E;AAKD,GANuB,CAAxB;AAQA,MAAMiB,SAAS,GAAG,CAAAzB,SAAS,SAAT,IAAAA,SAAS,WAAT,mCAAAA,SAAS,CAAE0B,QAAX,4EAAqBC,MAArB,IAA8B,CAAhD;AAEA,MAAMC,OAAO,GAAG/B,KAAK,CAACiB,KAAN,CAAYe,UAAZ,CAAuBf,KAAvB,EAA8BK,GAA9B,CAAkC,UAACW,IAAD,EAAU;AAC1D,2CACKA,IADL;AAEEC,MAAAA,KAAK,EAAElC,KAAK,CAACiC,IAAN,CAAWE,QAAX,CAAoBF,IAApB;AAFT;AAID,GALe,CAAhB;AAOA,MAAMG,cAAc,GAAGpC,KAAK,CAACiB,KAAN,CAAYe,UAAZ,CAAuBd,oBAAvB,EAA6CI,GAA7C,CAAiD,UAACe,MAAD,EAAY;AAClF,2CACKA,MADL;AAEEH,MAAAA,KAAK,EAAElC,KAAK,CAACiC,IAAN,CAAWE,QAAX,CAAoBE,MAApB;AAFT;AAID,GALsB,CAAvB;AAOA,MAAMC,UAAU,GAAGtC,KAAK,CAACiB,KAAN,CAAYe,UAAZ,CAAuBf,KAAvB,EAA8B;AAAEsB,IAAAA,YAAY,EAAE;AAAhB,GAA9B,CAAnB;AAEA,MAAMC,SAAS,GAAGxC,KAAK,CAACiB,KAAN,CAAYwB,YAAZ,CAAyBxB,KAAzB,EAAgCK,GAAhC,CAAoC,UAACW,IAAD,EAAU;AAC9D,2CACKA,IADL;AAEEC,MAAAA,KAAK,EAAElC,KAAK,CAACiC,IAAN,CAAWE,QAAX,CAAoBF,IAApB;AAFT;AAID,GALiB,CAAlB;AAOA,MAAMS,eAAe,GAAG1C,KAAK,CAACG,SAAN,CAAgBwC,kBAAhB,CAAmCxC,SAAnC,CAAxB;AAEA,MAAMyC,gBAAgB,GAAG5C,KAAK,CAACiB,KAAN,CAAYwB,YAAZ,CAAyBvB,oBAAzB,EAA+CI,GAA/C,CAAmD,UAACe,MAAD,EAAY;AACtF,2CACKA,MADL;AAEEH,MAAAA,KAAK,EAAElC,KAAK,CAACiC,IAAN,CAAWE,QAAX,CAAoBE,MAApB;AAFT;AAID,GALwB,CAAzB;AAOA,MAAMQ,yBAAyB,GAAG1D,YAAY,CAACyD,gBAAD,EAAmBF,eAAnB,EAAoC,IAApC,CAA9C;AAEA,MAAMI,aAAa,GAAG/B,kBAAkB,CAACgC,MAAnB,CAA0B,UAACC,IAAD,EAAU;AACxD,WAAOlC,eAAe,CAACmC,QAAhB,CAAyBD,IAAI,CAACxB,EAA9B,CAAP;AACD,GAFqB,CAAtB;;AAIA,MAAM0B,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,OAAD,EAAa;AACvC,QAAI,CAACnD,KAAK,CAACoD,OAAN,CAAcC,YAAd,CAA2BF,OAA3B,CAAL,EAA0C,OAAO,EAAP,CADH,CAGvC;AACA;AACA;;AACA,QAAMG,aAAa,GAAGlE,MAAM,CAAC+D,OAAD,EAAU,CACpC,UAACI,CAAD,EAAO;AACL,aAAO,CAACvD,KAAK,CAACoD,OAAN,CAAcC,YAAd,CAA2BE,CAAC,CAACC,OAA7B,EAAsC,IAAtC,CAAR;AACD,KAHmC,CAAV,CAAN,CAInBC,MAJmB,CAIZ,UAACC,GAAD,EAAMC,MAAN,EAAiB;AACzB;AACA,UAAI,CAACA,MAAM,CAACH,OAAR,IAAoBG,MAAM,CAACH,OAAP,IAAkBG,MAAM,CAACH,OAAP,CAAe1B,MAAf,KAA0B,CAApE,EAAwE;AACtE,4CAAW4B,GAAX,IAAgBC,MAAhB;AACD,OAJwB,CAMzB;;;AACA,UAAIA,MAAM,CAACH,OAAP,IAAkBG,MAAM,CAACH,OAAP,CAAe1B,MAAf,KAA0B,CAAhD,EAAmD;AACjD,YAAM8B,UAAU,GAAG5D,KAAK,CAAC6D,MAAN,CAAaC,OAAb,CAAqBH,MAAM,CAACH,OAAP,CAAe,CAAf,CAArB,CAAnB;AACA,YAAM7B,MAAM,GAAG3B,KAAK,CAAC6D,MAAN,CAAaE,SAAb,CAAuBJ,MAAM,CAACH,OAAP,CAAe,CAAf,CAAvB,CAAf;AACA,YAAMQ,UAAU,GAAGhE,KAAK,CAACuB,MAAN,CAAaI,MAAb,CAAoBmC,OAApB,CAA4BnC,MAA5B,CAAnB;AAEA,4CAAW+B,GAAX,oCAAqBC,MAArB;AAA6BhD,UAAAA,IAAI,YAAKqD,UAAL,cAAmBJ,UAAnB;AAAjC;AACD;;AAED,UAAID,MAAM,CAACH,OAAP,IAAkBG,MAAM,CAACH,OAAP,CAAe1B,MAAf,GAAwB,CAA9C,EAAiD;AAC/C,YAAMmC,qBAAqB,GAAGN,MAAM,CAACH,OAAP,CAAeC,MAAf,CAAsB,UAACS,UAAD,EAAaC,YAAb,EAA8B;AAChF,cAAMP,UAAU,GAAG5D,KAAK,CAAC6D,MAAN,CAAaC,OAAb,CAAqBK,YAArB,CAAnB;AACA,cAAMxC,MAAM,GAAG3B,KAAK,CAAC6D,MAAN,CAAaE,SAAb,CAAuBI,YAAvB,CAAf;AACA,cAAMH,UAAU,GAAGhE,KAAK,CAACuB,MAAN,CAAaI,MAAb,CAAoBmC,OAApB,CAA4BnC,MAA5B,CAAnB;AAEA,8CAAWuC,UAAX,oCAA4BP,MAA5B;AAAoChD,YAAAA,IAAI,YAAKqD,UAAL,cAAmBJ,UAAnB,CAAxC;AAAyEJ,YAAAA,OAAO,EAAE,CAACW,YAAD;AAAlF;AACD,SAN6B,EAM3B,EAN2B,CAA9B;AAQA,4CAAWT,GAAX,sBAAmBO,qBAAnB;AACD;;AAED,aAAOP,GAAP;AACD,KAhCqB,EAgCnB,EAhCmB,CAAtB;AAkCA,WAAOJ,aAAa,CAAChC,GAAd,CAAkB,UAACqC,MAAD,EAAY;AACnC,UAAMS,YAAY,GAAGpE,KAAK,CAACuB,MAAN,CAAa8C,eAAb,CAA6BV,MAA7B,CAArB;AACA,UAAMW,YAAY,GAAGtE,KAAK,CAAC6D,MAAN,CAAaU,aAAb,CAA2BZ,MAAM,CAACH,OAAlC,CAArB;AACA,UAAMI,UAAU,GAAG5D,KAAK,CAAC6D,MAAN,CAAaC,OAAb,CAAqBQ,YAArB,CAAnB;AACA,UAAM3C,MAAM,GAAG3B,KAAK,CAAC6D,MAAN,CAAaE,SAAb,CAAuBO,YAAvB,CAAf;AACA,UAAMN,UAAU,GAAGhE,KAAK,CAACuB,MAAN,CAAaI,MAAb,CAAoBmC,OAApB,CAA4BnC,MAA5B,CAAnB;AACA,UAAM6C,UAAU,GAAGxE,KAAK,CAACuB,MAAN,CAAaI,MAAb,CAAoB8C,eAApB,CAAoC9C,MAApC,CAAnB;AAEA,6CACKgC,MADL;AAEEzB,QAAAA,KAAK,eACH,QAAC,YAAD;AAAc,UAAA,KAAK,EAAE0B,UAAU,IAAID,MAAM,CAAChD,IAA1C;AAAgD,UAAA,MAAM,EAAEyD,YAAxD;AAAA,oBACGI,UAAU,iBAAI;AAAK,YAAA,GAAG,EAAEA,UAAV;AAAsB,YAAA,GAAG,iBAAUR,UAAV,CAAzB;AAAiD,YAAA,SAAS,EAAEtD,OAAO,CAACgE;AAApE;AAAA;AAAA;AAAA;AAAA;AADjB;AAAA;AAAA;AAAA;AAAA;AAHJ;AAQD,KAhBM,CAAP;AAiBD,GAzDD;;AA2DA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACxB,OAAD,EAAa;AACxC,QAAI,CAACnD,KAAK,CAACoD,OAAN,CAAcC,YAAd,CAA2BF,OAA3B,CAAL,EAA0C,OAAO,EAAP;AAC1C,WAAOA,OAAO,CAAC7B,GAAR,CAAY,UAACqC,MAAD,EAAY;AAC7B,UAAIA,MAAM,CAACiB,aAAX,EAA0B;AACxB,+CACKjB,MADL;AAEEhD,UAAAA,IAAI,eACF,QAAC,YAAD;AACE,YAAA,KAAK,EAAEgD,MAAM,CAAChD,IADhB;AAEE,YAAA,MAAM,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,qBAFV;AAGE,YAAA,IAAI,EAAC;AAHP;AAAA;AAAA;AAAA;AAAA;AAHJ;AAUD;;AACD,6CACKgD,MADL;AAEEhD,QAAAA,IAAI,eAAE,QAAC,YAAD;AAAc,UAAA,KAAK,EAAEgD,MAAM,CAAChD;AAA5B;AAAA;AAAA;AAAA;AAAA;AAFR;AAID,KAjBM,CAAP;AAkBD,GApBD;;AAsBA,MAAMkE,MAAM,GAAG,CACb;AACElE,IAAAA,IAAI,EAAE,SADR;AAEEe,IAAAA,IAAI,EAAE,cAFR;AAGEoD,IAAAA,KAAK,EAAE/C,OAAO,IAAI,EAHpB;AAIEG,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,oBAAf,CAJT;AAKEC,IAAAA,IAAI,EAAEjF,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,mBAAf,CALR;AAME7B,IAAAA,OAAO,EAAEf,cANX;AAOE8C,IAAAA,SAAS,EAAE,IAPb;AAQEC,IAAAA,WAAW,EAAE,OARf;AASEC,IAAAA,UAAU,EAAEnG,GAAG,CAACoG,KAAJ,EATd;AAUEC,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,OAAO,EAAE,IADU;AAEnBC,MAAAA,UAAU,EAAE,IAFO;AAGnBC,MAAAA,aAAa,EAAE,GAHI;AAInB,qBAAe;AAJI;AAVvB,GADa,EAkBb;AACE9E,IAAAA,IAAI,EAAE,WADR;AAEEe,IAAAA,IAAI,EAAE,cAFR;AAGEoD,IAAAA,KAAK,EAAEtC,SAAS,IAAI,EAHtB;AAIEN,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAJT;AAKEC,IAAAA,IAAI,EAAEjF,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,+BAAf,CALR;AAME7B,IAAAA,OAAO,EAAEN,yBANX;AAOEqC,IAAAA,SAAS,EAAE,IAPb;AAQEC,IAAAA,WAAW,EAAE,OARf;AASEC,IAAAA,UAAU,EAAEnG,GAAG,CAACoG,KAAJ,EATd;AAUEC,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,OAAO,EAAE,IADU;AAEnBC,MAAAA,UAAU,EAAE,IAFO;AAGnBC,MAAAA,aAAa,EAAE,GAHI;AAInB,qBAAe;AAJI;AAVvB,GAlBa,EAmCb;AACE9E,IAAAA,IAAI,EAAE,YADR;AAEEuB,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,wBAAf,CAFT;AAGEF,IAAAA,KAAK,EAAE,CAAA3E,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEuF,YAAX,gFAAyBC,QAAzB,OAAuC,EAHhD;AAIEjE,IAAAA,IAAI,EAAE,QAJR;AAKEyB,IAAAA,OAAO,EAAEL,aAAa,CAACxB,GAAd,CAAkB,UAAC0B,IAAD;AAAA,aAAW;AACpC8B,QAAAA,KAAK,EAAE9B,IAAI,CAACxB,EADwB;AAEpCU,QAAAA,KAAK,EAAEc,IAAI,CAACrC;AAFwB,OAAX;AAAA,KAAlB,CALX;AASEiF,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAEjE;AADO,KATrB;AAYEwD,IAAAA,UAAU,EAAE,CAACxD,SAAD,IAAc3C,GAAG,CAAC8F,MAAJ,GAAae,QAAb,CAAsB9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB;AAZ5B,GAnCa,EAiDb;AACErE,IAAAA,IAAI,EAAE,aADR;AAEEe,IAAAA,IAAI,EAAE,UAFR;AAGEQ,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,wBAAf,CAHT;AAIEF,IAAAA,KAAK,EAAE3E,SAAS,CAAC4F,WAAV,IAAyB,EAJlC;AAKEH,IAAAA,iBAAiB,EAAE;AACjBI,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,OAAO,EAAE,CAFQ;AAGjBC,MAAAA,OAAO,EAAE,CAHQ;AAIjB,qBAAe;AAJE;AALrB,GAjDa,EA6Db;AACEvF,IAAAA,IAAI,EAAE,SADR;AAEEe,IAAAA,IAAI,EAAE,cAFR;AAGEQ,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,oBAAf,CAHT;AAIEF,IAAAA,KAAK,EAAE1D,eAAe,IAAI,EAJ5B;AAKE+B,IAAAA,OAAO,EAAE,EALX;AAME+B,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,WAAW,EAAE,OAPf;AAQEC,IAAAA,UAAU,EACR,CAACxD,SAAD,IACA3C,GAAG,CAACoG,KAAJ,GACGc,EADH,CACMlH,GAAG,CAACmH,KAAJ,GAAYN,QAAZ,CAAqB9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAArB,CADN,EAEGc,QAFH,CAEY9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAFZ,CAVJ;AAaEY,IAAAA,iBAAiB,EAAE;AACjB,qBAAe;AADE,KAbrB;AAgBEN,IAAAA,mBAAmB,EAAE;AACnBe,MAAAA,UAAU,EAAE,MADO;AAEnBd,MAAAA,OAAO,EAAE,IAFU;AAGnBC,MAAAA,UAAU,EAAE,IAHO;AAInBc,MAAAA,iBAAiB,EAAE,KAJA;AAKnBb,MAAAA,aAAa,EAAE,GALI;AAMnBc,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO;AAAA,kFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACe5F,QAAQ,CAACd,sBAAsB,MAAtB,eAAD,CADvB;;AAAA;AACDqD,oBAAAA,OADC;AAAA,qDAEAD,mBAAmB,CAACC,OAAD,EAAUzC,OAAV,CAFnB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WADF;AAKLgB,QAAAA,IAAI,EAAE;AALD,OANY;AAanB+E,MAAAA,UAAU,EAAE7E;AAbO;AAhBvB,GA7Da,EA6Fb;AACEjB,IAAAA,IAAI,EAAE,UADR;AAEEe,IAAAA,IAAI,EAAE,cAFR;AAGEQ,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAHT;AAIEC,IAAAA,IAAI,EAAEjF,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,oBAAf,CAJR;AAKEF,IAAAA,KAAK,EAAE,CAAA3E,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEuG,QAAX,KAAuB,EALhC;AAMEvD,IAAAA,OAAO,EAAE,EANX;AAOE+B,IAAAA,SAAS,EAAE,IAPb;AAQEC,IAAAA,WAAW,EAAE,MARf;AASEC,IAAAA,UAAU,EACR,CAACxD,SAAD,IACA3C,GAAG,CAACoG,KAAJ,GACGc,EADH,CACMlH,GAAG,CAACmH,KAAJ,GAAYN,QAAZ,CAAqB9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,wBAAf,CAArB,CADN,EAEGc,QAFH,CAEY9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,wBAAf,CAFZ,CAXJ;AAcEY,IAAAA,iBAAiB,EAAE;AACjB,qBAAe;AADE,KAdrB;AAiBEN,IAAAA,mBAAmB,EAAE;AACnBe,MAAAA,UAAU,EAAE,MADO;AAEnBM,MAAAA,WAAW,EAAE,IAFM;AAGnBpB,MAAAA,OAAO,EAAE,IAHU;AAInBe,MAAAA,iBAAiB,EAAE,KAJA;AAKnBd,MAAAA,UAAU,EAAE,IALO;AAMnBC,MAAAA,aAAa,EAAE,GANI;AAOnBc,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO;AAAA,mFAAE;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,2BACe5F,QAAQ,CAACd,sBAAsB,MAAtB,gBAAD,CADvB;;AAAA;AACDqD,oBAAAA,OADC;AAAA,sDAEAwB,oBAAoB,CAACxB,OAAD,CAFpB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,WAAF;;AAAA;AAAA;AAAA;;AAAA;AAAA,WADF;AAKLzB,QAAAA,IAAI,EAAE;AALD,OAPY;AAcnB+E,MAAAA,UAAU,EAAE7E;AAdO;AAjBvB,GA7Fa,EA+Hb;AACEjB,IAAAA,IAAI,EAAE,aADR;AAEEuB,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEF,IAAAA,KAAK,EAAE,CAAA3E,SAAS,SAAT,IAAAA,SAAS,WAAT,mCAAAA,SAAS,CAAEyG,QAAX,4EAAqBjB,QAArB,OAAmC,EAH5C;AAIEjE,IAAAA,IAAI,EAAE,QAJR;AAKEyB,IAAAA,OAAO,EAAEnC,wBAAwB,CAACM,GAAzB,CAA6B,UAACuF,MAAD;AAAA,aAAa;AACjD/B,QAAAA,KAAK,EAAE+B,MAAM,CAACrF,EADmC;AAEjDU,QAAAA,KAAK,EAAE2E,MAAM,CAACC;AAFmC,OAAb;AAAA,KAA7B,CALX;AASElB,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAEjE;AADO,KATrB;AAYEwD,IAAAA,UAAU,EAAE,CAACxD,SAAD,IAAc3C,GAAG,CAAC8F,MAAJ,GAAae,QAAb,CAAsB9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB;AAZ5B,GA/Ha,EA6Ib;AACErE,IAAAA,IAAI,EAAE,eADR;AAEEe,IAAAA,IAAI,EAAE,YAFR;AAGEQ,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,0BAAf,CAHT;AAIEF,IAAAA,KAAK,EAAE3E,SAAS,CAAC4G,aAAV,IAA2B,IAJpC;AAKE3B,IAAAA,UAAU,EAAEnG,GAAG,CAAC8F,MAAJ,GAAaiC,QAAb,GAAwBlB,QAAxB,CAAiC9F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,6BAAf,CAAjC,CALd;AAMEY,IAAAA,iBAAiB,EAAE;AACjB,qBAAe;AADE;AANrB,GA7Ia,EAuJb;AACEjF,IAAAA,IAAI,EAAE,aADR;AAEEe,IAAAA,IAAI,EAAE,QAFR;AAGEoD,IAAAA,KAAK,EAAE3E,SAAS,CAACqB;AAHnB,GAvJa,CAAf;AA8JA,MAAMyF,OAAO,GAAG,CACd;AACEtG,IAAAA,IAAI,EAAE,QADR;AAEEuB,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEwB,IAAAA,OAAO,EAAEhG;AAHX,GADc,EAMd;AACEG,IAAAA,IAAI,EAAE,QADR;AAEEuB,IAAAA,KAAK,EAAElC,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEwB,IAAAA,OAAO,EAAE,iBAACU,MAAD,EAAY;AACnBtG,MAAAA,QAAQ,CAAClB,iBAAiB,CAACwH,MAAD,EAAS5G,YAAT,CAAlB,CAAR;AACD;AALH,GANc,CAAhB;AAeA,sBAAO,QAAC,iBAAD;AAAmB,IAAA,MAAM,EAAEuE,MAA3B;AAAmC,IAAA,OAAO,EAAEoC,OAA5C;AAAqD,IAAA,UAAU,EAAE3E,UAAjE;AAA6E,IAAA,eAAe,EAAEI;AAA9F;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAxTuBzC,a;UAELlB,W,EACcC,W,EACPA,W,EACGA,W,EACMA,W;;;KANXiB,a","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\nimport differenceBy from 'lodash/differenceBy';\r\nimport sortBy from 'lodash/sortBy';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n// app\r\nimport { OptionDetail, Translate } from 'components';\r\nimport styles from './EditPlacement.styles';\r\n\r\nimport { EditPlacementView } from './EditPlacement.view';\r\nimport {\r\n  postEditPlacement,\r\n  selectRefDataDepartmentUsers,\r\n  selectUserDepartmentIds,\r\n  selectRefDataDepartments,\r\n  getReferenceDataByType,\r\n  selectRefDataStatusesPlacement,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nEditPlacement.propTypes = {\r\n  placement: PropTypes.object.isRequired,\r\n  calendarView: PropTypes.bool,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditPlacement({ placement = {}, calendarView = false, handleClose }) {\r\n  const classes = makeStyles(styles, { name: 'EditPlacement' })();\r\n  const dispatch = useDispatch();\r\n  const refDataDepartmentUsers = useSelector(selectRefDataDepartmentUsers);\r\n  const userDepartments = useSelector(selectUserDepartmentIds);\r\n  const refDataDepartments = useSelector(selectRefDataDepartments);\r\n  const refDataStatusesPlacement = useSelector(selectRefDataStatusesPlacement);\r\n  const users = get(placement, 'users', []);\r\n  const usersOptionsFiltered = utils.users.getWithName(refDataDepartmentUsers);\r\n  const selectedClients = placement?.clients?.map((client) => {\r\n    return {\r\n      ...client,\r\n      id: client?.idClient ? client.idClient : client.id,\r\n      name: client?.type === 'office' ? `${client.parent} ${client.name}` : client.name,\r\n    };\r\n  });\r\n\r\n  const isDiabled = placement?.policies?.length > 0;\r\n\r\n  const brokers = utils.users.getBrokers(users).map((user) => {\r\n    return {\r\n      ...user,\r\n      label: utils.user.fullname(user),\r\n    };\r\n  });\r\n\r\n  const brokersOptions = utils.users.getBrokers(usersOptionsFiltered).map((broker) => {\r\n    return {\r\n      ...broker,\r\n      label: utils.user.fullname(broker),\r\n    };\r\n  });\r\n\r\n  const gxbBrokers = utils.users.getBrokers(users, { gxbUsersOnly: true });\r\n\r\n  const cobrokers = utils.users.getCobrokers(users).map((user) => {\r\n    return {\r\n      ...user,\r\n      label: utils.user.fullname(user),\r\n    };\r\n  });\r\n\r\n  const officeCoBrokers = utils.placement.getOfficeCobrokers(placement);\r\n\r\n  const cobrokersOptions = utils.users.getCobrokers(usersOptionsFiltered).map((broker) => {\r\n    return {\r\n      ...broker,\r\n      label: utils.user.fullname(broker),\r\n    };\r\n  });\r\n\r\n  const cobrokersAvailableOptions = differenceBy(cobrokersOptions, officeCoBrokers, 'id');\r\n\r\n  const filteredDepts = refDataDepartments.filter((dept) => {\r\n    return userDepartments.includes(dept.id);\r\n  });\r\n\r\n  const renderClientOptions = (options) => {\r\n    if (!utils.generic.isValidArray(options)) return [];\r\n\r\n    // orders clients with offices at the top\r\n    // if client has office(s), show the parent logo and name\r\n    // if client has multiple offices, split each office into its own entry\r\n    const optionsSorted = sortBy(options, [\r\n      (o) => {\r\n        return !utils.generic.isValidArray(o.offices, true);\r\n      },\r\n    ]).reduce((acc, option) => {\r\n      // no offices\r\n      if (!option.offices || (option.offices && option.offices.length === 0)) {\r\n        return [...acc, option];\r\n      }\r\n\r\n      // single office\r\n      if (option.offices && option.offices.length === 1) {\r\n        const officeName = utils.office.getName(option.offices[0]);\r\n        const parent = utils.office.getParent(option.offices[0]);\r\n        const parentName = utils.client.parent.getName(parent);\r\n\r\n        return [...acc, { ...option, name: `${parentName} ${officeName}` }];\r\n      }\r\n\r\n      if (option.offices && option.offices.length > 1) {\r\n        const newOptionsFromOffices = option.offices.reduce((newOptions, nestedOffice) => {\r\n          const officeName = utils.office.getName(nestedOffice);\r\n          const parent = utils.office.getParent(nestedOffice);\r\n          const parentName = utils.client.parent.getName(parent);\r\n\r\n          return [...newOptions, { ...option, name: `${parentName} ${officeName}`, offices: [nestedOffice] }];\r\n        }, []);\r\n\r\n        return [...acc, ...newOptionsFromOffices];\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    return optionsSorted.map((option) => {\r\n      const clientDetail = utils.client.getClientDetail(option);\r\n      const clientOffice = utils.office.getMainOffice(option.offices);\r\n      const officeName = utils.office.getName(clientOffice);\r\n      const parent = utils.office.getParent(clientOffice);\r\n      const parentName = utils.client.parent.getName(parent);\r\n      const parentLogo = utils.client.parent.getLogoFilePath(parent);\r\n\r\n      return {\r\n        ...option,\r\n        label: (\r\n          <OptionDetail label={officeName || option.name} detail={clientDetail}>\r\n            {parentLogo && <img src={parentLogo} alt={`logo ${parentName}`} className={classes.logo} />}\r\n          </OptionDetail>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  const renderInsuredOptions = (options) => {\r\n    if (!utils.generic.isValidArray(options)) return [];\r\n    return options.map((option) => {\r\n      if (option.isProvisional) {\r\n        return {\r\n          ...option,\r\n          name: (\r\n            <OptionDetail\r\n              label={option.name}\r\n              detail={<Translate label=\"renewals.provisionalInsuredTooltip\" />}\r\n              type=\"primary\"\r\n            ></OptionDetail>\r\n          ),\r\n        };\r\n      }\r\n      return {\r\n        ...option,\r\n        name: <OptionDetail label={option.name}></OptionDetail>,\r\n      };\r\n    });\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'brokers',\r\n      type: 'autocomplete',\r\n      value: brokers || [],\r\n      label: utils.string.t('form.brokers.label'),\r\n      hint: utils.string.t('form.brokers.hint'),\r\n      options: brokersOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array(),\r\n      innerComponentProps: {\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n        'data-testid': 'brokers',\r\n      },\r\n    },\r\n    {\r\n      name: 'cobrokers',\r\n      type: 'autocomplete',\r\n      value: cobrokers || [],\r\n      label: utils.string.t('placement.form.coBrokers.label'),\r\n      hint: utils.string.t('placement.form.coBrokers.hint'),\r\n      options: cobrokersAvailableOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array(),\r\n      innerComponentProps: {\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n        'data-testid': 'cobrokers',\r\n      },\r\n    },\r\n    {\r\n      name: 'department',\r\n      label: utils.string.t('form.departments.label'),\r\n      value: placement?.departmentId?.toString() || '',\r\n      type: 'select',\r\n      options: filteredDepts.map((dept) => ({\r\n        value: dept.id,\r\n        label: dept.name,\r\n      })),\r\n      muiComponentProps: {\r\n        disabled: isDiabled,\r\n      },\r\n      validation: !isDiabled && Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      label: utils.string.t('form.description.label'),\r\n      value: placement.description || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 3,\r\n        maxRows: 6,\r\n        'data-testid': 'description',\r\n      },\r\n    },\r\n    {\r\n      name: 'clients',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('form.clients.label'),\r\n      value: selectedClients || [],\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation:\r\n        !isDiabled &&\r\n        Yup.array()\r\n          .of(Yup.mixed().required(utils.string.t('form.clients.required')))\r\n          .required(utils.string.t('form.clients.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'clients',\r\n      },\r\n      innerComponentProps: {\r\n        valueLabel: 'name',\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        displayUpArowIcon: false,\r\n        maxMenuHeight: 205,\r\n        async: {\r\n          handler: async (...args) => {\r\n            const options = await dispatch(getReferenceDataByType(...args));\r\n            return renderClientOptions(options, classes);\r\n          },\r\n          type: 'client',\r\n        },\r\n        isDisabled: isDiabled,\r\n      },\r\n    },\r\n    {\r\n      name: 'insureds',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('form.insureds.label'),\r\n      hint: utils.string.t('form.insureds.hint'),\r\n      value: placement?.insureds || [],\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation:\r\n        !isDiabled &&\r\n        Yup.array()\r\n          .of(Yup.mixed().required(utils.string.t('form.insureds.required')))\r\n          .required(utils.string.t('form.insureds.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'insureds',\r\n      },\r\n      innerComponentProps: {\r\n        valueLabel: 'name',\r\n        isCreatable: true,\r\n        isMulti: true,\r\n        displayUpArowIcon: false,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n        async: {\r\n          handler: async (...args) => {\r\n            const options = await dispatch(getReferenceDataByType(...args));\r\n            return renderInsuredOptions(options);\r\n          },\r\n          type: 'insured',\r\n        },\r\n        isDisabled: isDiabled,\r\n      },\r\n    },\r\n    {\r\n      name: 'statusLabel',\r\n      label: utils.string.t('app.status'),\r\n      value: placement?.statusId?.toString() || '',\r\n      type: 'select',\r\n      options: refDataStatusesPlacement.map((status) => ({\r\n        value: status.id,\r\n        label: status.code,\r\n      })),\r\n      muiComponentProps: {\r\n        disabled: isDiabled,\r\n      },\r\n      validation: !isDiabled && Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'inceptionDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('form.inceptionDate.label'),\r\n      value: placement.inceptionDate || null,\r\n      validation: Yup.string().nullable().required(utils.string.t('form.inceptionDate.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'inceptionDate',\r\n      },\r\n    },\r\n    {\r\n      name: 'placementId',\r\n      type: 'hidden',\r\n      value: placement.id,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => {\r\n        dispatch(postEditPlacement(values, calendarView));\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <EditPlacementView fields={fields} actions={actions} gxbBrokers={gxbBrokers} officeCoBrokers={officeCoBrokers} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}