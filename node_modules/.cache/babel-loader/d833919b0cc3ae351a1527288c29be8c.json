{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TableRowHeader\\\\TableRowHeader.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router'; // app\n\nimport styles from './TableRowHeader.styles';\nimport { TableCell, Button } from 'components';\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\nimport { getClaimsPreviewInformation, setClaimsTabSelectedItem } from 'stores';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTableRowHeaderView.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  expanded: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  setIsOpen: PropTypes.func,\n  claimInformation: PropTypes.object\n};\nexport function TableRowHeaderView(_ref) {\n  _s();\n\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      isOpen = _ref.isOpen,\n      onClick = _ref.onClick,\n      children = _ref.children,\n      color = _ref.color,\n      claimInformation = _ref.claimInformation,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'TableRowHeader'\n  })({\n    expanded: isOpen\n  });\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var location = useLocation();\n\n  var handleEditClaim = function handleEditClaim(claim) {\n    function getClaimInfo() {\n      return _getClaimInfo.apply(this, arguments);\n    }\n\n    function _getClaimInfo() {\n      _getClaimInfo = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var claimInfo, claimActionTab;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(getClaimsPreviewInformation({\n                  claimId: claim === null || claim === void 0 ? void 0 : claim.claimId,\n                  claimRefParams: claim === null || claim === void 0 ? void 0 : claim.actionID,\n                  sourceIdParams: claim === null || claim === void 0 ? void 0 : claim.instanceID,\n                  divisionIDParams: claim === null || claim === void 0 ? void 0 : claim.divisionID\n                }));\n\n              case 2:\n                claimInfo = _context.sent;\n                _context.next = 5;\n                return dispatch(setClaimsTabSelectedItem(claimInfo, true));\n\n              case 5:\n                claimActionTab = \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat(claim === null || claim === void 0 ? void 0 : claim.actionID);\n                console.log('location ', location.pathname);\n                console.log('claimActionTab ', claimActionTab);\n\n                if (!(location.pathname === claimActionTab)) {\n                  _context.next = 12;\n                  break;\n                }\n\n                handlers.selectTab('claimRefDetail');\n                _context.next = 14;\n                break;\n\n              case 12:\n                _context.next = 14;\n                return history.push({\n                  pathname: claimActionTab\n                });\n\n              case 14:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _getClaimInfo.apply(this, arguments);\n    }\n\n    getClaimInfo();\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.wrapper,\n      onClick: onClick,\n      \"data-testid\": \"table-row-header\",\n      style: {\n        background: color\n      },\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: \"100\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.panel,\n          children: [/*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n            className: classes.arrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            icon: OpenInNewOutlinedIcon,\n            color: \"default\",\n            size: \"medium\",\n            variant: \"outlined\",\n            style: {\n              border: 'none'\n            },\n            nestedClasses: {\n              btn: classes.button\n            },\n            onClick: function onClick() {\n              return handleEditClaim(claimInformation);\n            },\n            disabled: (claimInformation === null || claimInformation === void 0 ? void 0 : claimInformation.claimStatus) === STATUS_CLAIMS_DRAFT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n}\n\n_s(TableRowHeaderView, \"yEYUSERZA799NiWkmNlqbj7vzGc=\", false, function () {\n  return [useDispatch, useHistory, useLocation];\n});\n\n_c = TableRowHeaderView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRowHeaderView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TableRowHeader/TableRowHeader.view.js"],"names":["React","useDispatch","PropTypes","useHistory","useLocation","styles","TableCell","Button","STATUS_CLAIMS_DRAFT","getClaimsPreviewInformation","setClaimsTabSelectedItem","config","makeStyles","Box","TableRow","Typography","OpenInNewOutlinedIcon","KeyboardArrowDownIcon","TableRowHeaderView","propTypes","title","string","isRequired","subtitle","expanded","bool","children","oneOfType","arrayOf","node","setIsOpen","func","claimInformation","object","isOpen","onClick","color","handlers","classes","name","dispatch","history","location","handleEditClaim","claim","getClaimInfo","claimId","claimRefParams","actionID","sourceIdParams","instanceID","divisionIDParams","divisionID","claimInfo","claimActionTab","routes","claimsFNOL","console","log","pathname","selectTab","push","wrapper","background","panel","arrow","border","btn","button","claimStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\n// app\r\nimport styles from './TableRowHeader.styles';\r\nimport { TableCell, Button } from 'components';\r\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\r\nimport { getClaimsPreviewInformation, setClaimsTabSelectedItem } from 'stores';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\r\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nTableRowHeaderView.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  expanded: PropTypes.bool,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n  setIsOpen: PropTypes.func,\r\n  claimInformation: PropTypes.object,\r\n};\r\n\r\nexport function TableRowHeaderView({ title, subtitle, isOpen, onClick, children, color, claimInformation, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'TableRowHeader' })({ expanded: isOpen });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const handleEditClaim = (claim) => {\r\n    async function getClaimInfo() {\r\n      const claimInfo = await dispatch(\r\n        getClaimsPreviewInformation({\r\n          claimId: claim?.claimId,\r\n          claimRefParams: claim?.actionID,\r\n          sourceIdParams: claim?.instanceID,\r\n          divisionIDParams: claim?.divisionID,\r\n        })\r\n      );\r\n\r\n      await dispatch(setClaimsTabSelectedItem(claimInfo, true));\r\n      const claimActionTab = `${config.routes.claimsFNOL.claim}/${claim?.actionID}`;\r\n      console.log('location ', location.pathname);\r\n      console.log('claimActionTab ', claimActionTab);\r\n      if (location.pathname === claimActionTab) {\r\n        handlers.selectTab('claimRefDetail');\r\n      } else {\r\n        await history.push({\r\n          pathname: claimActionTab,\r\n        });\r\n      }\r\n    }\r\n    getClaimInfo();\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.wrapper} onClick={onClick} data-testid=\"table-row-header\" style={{ background: color }}>\r\n        <TableCell colSpan=\"100\">\r\n          <Box className={classes.panel}>\r\n            <KeyboardArrowDownIcon className={classes.arrow} />\r\n            <Typography variant=\"h2\" className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {subtitle}\r\n            </Typography>\r\n            <Button\r\n              icon={OpenInNewOutlinedIcon}\r\n              color=\"default\"\r\n              size=\"medium\"\r\n              variant=\"outlined\"\r\n              style={{ border: 'none' }}\r\n              nestedClasses={{ btn: classes.button }}\r\n              onClick={() => handleEditClaim(claimInformation)}\r\n              disabled={claimInformation?.claimStatus === STATUS_CLAIMS_DRAFT}\r\n            />\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}