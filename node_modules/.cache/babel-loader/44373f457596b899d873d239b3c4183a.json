{"ast":null,"code":"import { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getReportList = function getReportList(reportGroupId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reporting.actions.getReportList'\n    };\n    dispatch(getReportListRequest(reportGroupId));\n    dispatch(addLoader('getReportList'));\n\n    if (!reportGroupId) {\n      dispatch(getReportListFailure(defaultError));\n      dispatch(removeLoader('getReportList'));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/reportgroup/\".concat(reportGroupId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getReportListSuccess(data));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getReportListFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getReportList'));\n    });\n  };\n};\nexport var getReportListRequest = function getReportListRequest(payload) {\n  return {\n    type: 'REPORTING_LIST_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getReportListSuccess = function getReportListSuccess(data) {\n  var payload = {\n    selected: {\n      id: data === null || data === void 0 ? void 0 : data.id,\n      name: data === null || data === void 0 ? void 0 : data.name\n    },\n    reports: data === null || data === void 0 ? void 0 : data.reports.sort(function (a, b) {\n      return new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate);\n    }),\n    users: data === null || data === void 0 ? void 0 : data.users\n  };\n  return {\n    type: 'REPORTING_LIST_GET_SUCCESS',\n    payload: payload\n  };\n};\nexport var getReportListFailure = function getReportListFailure(error) {\n  return {\n    type: 'REPORTING_LIST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.report.get.js"],"names":["addLoader","authLogout","removeLoader","utils","getReportList","reportGroupId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getReportListRequest","getReportListFailure","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getReportListSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","selected","id","name","reports","sort","a","b","Date","lastUpdateDate","users","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getReportList = (reportGroupId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.getReportList',\r\n  };\r\n\r\n  dispatch(getReportListRequest(reportGroupId));\r\n  dispatch(addLoader('getReportList'));\r\n\r\n  if (!reportGroupId) {\r\n    dispatch(getReportListFailure(defaultError));\r\n    dispatch(removeLoader('getReportList'));\r\n    return;\r\n  }\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/reportgroup/${reportGroupId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => {\r\n      return utils.api.handleData(json);\r\n    })\r\n    .then((data) => {\r\n      dispatch(getReportListSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getReportListFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReportList'));\r\n    });\r\n};\r\n\r\nexport const getReportListRequest = (payload) => {\r\n  return {\r\n    type: 'REPORTING_LIST_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportListSuccess = (data) => {\r\n  const payload = {\r\n    selected: { id: data?.id, name: data?.name },\r\n    reports: data?.reports.sort((a, b) => new Date(b.lastUpdateDate) - new Date(a.lastUpdateDate)),\r\n    users: data?.users,\r\n  };\r\n  return {\r\n    type: 'REPORTING_LIST_GET_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getReportListFailure = (error) => {\r\n  return {\r\n    type: 'REPORTING_LIST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}