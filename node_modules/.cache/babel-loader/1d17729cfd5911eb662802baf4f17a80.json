{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskRow\\\\AddRiskRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport compact from 'lodash/compact'; // app\n\nimport { AddRiskRowView } from './AddRiskRow.view';\nimport { hideModal, showModal } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskRow.propTypes = {\n  field: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired,\n  overflow: PropTypes.bool,\n  formatData: PropTypes.string,\n  removeLastField: PropTypes.bool\n};\nAddRiskRow.defaultProps = {\n  overflow: true\n};\nexport default function AddRiskRow(_ref) {\n  _s();\n\n  var field = _ref.field,\n      formProps = _ref.formProps,\n      overflow = _ref.overflow,\n      formatData = _ref.formatData,\n      removeLastField = _ref.removeLastField;\n  var dispatch = useDispatch();\n  var fieldValue = formProps === null || formProps === void 0 ? void 0 : formProps.watch(field.name);\n  useEffect(function () {\n    fieldValue === null && (formProps === null || formProps === void 0 ? void 0 : formProps.setValue(field.name, []));\n  }, [field === null || field === void 0 ? void 0 : field.name, fieldValue, formProps]); // abort\n\n  if (!field || !field.name || !field.arrayItemDef) return null;\n  if (!formProps || !formProps.control) return null;\n  var validFields = ['text', 'number', 'datepicker', 'select', 'autocomplete', 'autocompletemui', 'radio', 'checkbox', 'toggle', 'hidden'];\n  var cols = [].concat(_toConsumableArray(compact(field.arrayItemDef.map(function (def) {\n    if (!validFields.includes(def.type) || def.type === 'hidden') return null;\n    return {\n      id: def.name,\n      label: def.label\n    };\n  }))), [{\n    id: 'delete'\n  }]);\n\n  var launchPasteFromExcelModal = function launchPasteFromExcelModal(data) {\n    dispatch(showModal({\n      component: 'PASTE_FROM_EXCEL',\n      props: {\n        title: 'app.pasteFromExcel',\n        fullWidth: true,\n        maxWidth: 'lg',\n        componentProps: _objectSpread({}, data)\n      }\n    }));\n  };\n\n  var closePasteFromExcelModal = function closePasteFromExcelModal() {\n    dispatch(hideModal('PASTE_FROM_EXCEL'));\n  };\n\n  return fieldValue ? /*#__PURE__*/_jsxDEV(AddRiskRowView, {\n    cols: cols,\n    field: field,\n    validFields: validFields,\n    formProps: formProps,\n    overflow: overflow,\n    formatData: formatData,\n    removeLastField: removeLastField,\n    handlers: {\n      launchPasteFromExcelModal: launchPasteFromExcelModal,\n      closePasteFromExcelModal: closePasteFromExcelModal\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(AddRiskRow, \"rAh3tY+Iv6hWC9AI4Dm+rCbkwNE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddRiskRow;\nAddRiskRow.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddRiskRow\",\n  \"props\": {\n    \"overflow\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"field\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formatData\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"removeLastField\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\AddRiskRow\\\\AddRiskRow.js\"] = {\n    name: \"AddRiskRow\",\n    docgenInfo: AddRiskRow.__docgenInfo,\n    path: \"src\\\\modules\\\\AddRiskRow\\\\AddRiskRow.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskRow\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskRow/AddRiskRow.js"],"names":["React","useEffect","PropTypes","useDispatch","compact","AddRiskRowView","hideModal","showModal","AddRiskRow","propTypes","field","object","isRequired","formProps","overflow","bool","formatData","string","removeLastField","defaultProps","dispatch","fieldValue","watch","name","setValue","arrayItemDef","control","validFields","cols","map","def","includes","type","id","label","launchPasteFromExcelModal","data","component","props","title","fullWidth","maxWidth","componentProps","closePasteFromExcelModal"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport compact from 'lodash/compact';\r\n\r\n// app\r\nimport { AddRiskRowView } from './AddRiskRow.view';\r\nimport { hideModal, showModal } from 'stores';\r\n\r\nAddRiskRow.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n  overflow: PropTypes.bool,\r\n  formatData: PropTypes.string,\r\n  removeLastField: PropTypes.bool,\r\n};\r\n\r\nAddRiskRow.defaultProps = {\r\n  overflow: true,\r\n};\r\n\r\nexport default function AddRiskRow({ field, formProps, overflow, formatData, removeLastField }) {\r\n  const dispatch = useDispatch();\r\n  const fieldValue = formProps?.watch(field.name);\r\n\r\n  useEffect(() => {\r\n    fieldValue === null && formProps?.setValue(field.name, []);\r\n  }, [field?.name, fieldValue, formProps]);\r\n\r\n  // abort\r\n  if (!field || !field.name || !field.arrayItemDef) return null;\r\n  if (!formProps || !formProps.control) return null;\r\n\r\n  const validFields = [\r\n    'text',\r\n    'number',\r\n    'datepicker',\r\n    'select',\r\n    'autocomplete',\r\n    'autocompletemui',\r\n    'radio',\r\n    'checkbox',\r\n    'toggle',\r\n    'hidden',\r\n  ];\r\n\r\n  const cols = [\r\n    ...compact(\r\n      field.arrayItemDef.map((def) => {\r\n        if (!validFields.includes(def.type) || def.type === 'hidden') return null;\r\n\r\n        return { id: def.name, label: def.label };\r\n      })\r\n    ),\r\n    { id: 'delete' },\r\n  ];\r\n\r\n  const launchPasteFromExcelModal = (data) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'PASTE_FROM_EXCEL',\r\n        props: {\r\n          title: 'app.pasteFromExcel',\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            ...data,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const closePasteFromExcelModal = () => {\r\n    dispatch(hideModal('PASTE_FROM_EXCEL'));\r\n  };\r\n\r\n  return fieldValue ? (\r\n    <AddRiskRowView\r\n      cols={cols}\r\n      field={field}\r\n      validFields={validFields}\r\n      formProps={formProps}\r\n      overflow={overflow}\r\n      formatData={formatData}\r\n      removeLastField={removeLastField}\r\n      handlers={{\r\n        launchPasteFromExcelModal,\r\n        closePasteFromExcelModal,\r\n      }}\r\n    />\r\n  ) : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}