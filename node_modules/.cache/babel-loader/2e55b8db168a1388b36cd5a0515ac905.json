{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DocumentUpload\\\\DocumentUpload.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport sortBy from 'lodash/sortBy';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete'; // app\n\nimport { DocumentUploadView } from './DocumentUpload.view';\nimport { hideModal, uploadDocument, getFolderList, uploadReportingDocument, getFolderListForReport, uploadReportingFolders } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDocumentUpload.propTypes = {\n  documentType: PropTypes.string,\n  placement: PropTypes.object,\n  reportGroupId: PropTypes.string,\n  isFolderCreatable: PropTypes.bool\n};\nexport default function DocumentUpload(_ref) {\n  _s();\n\n  var documentType = _ref.documentType,\n      placement = _ref.placement,\n      documentTypeId = _ref.documentTypeId,\n      _redirectionCallback = _ref.redirectionCallback,\n      reportGroupId = _ref.reportGroupId,\n      isFolderCreatable = _ref.isFolderCreatable;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      folders = _useState2[0],\n      setFolders = _useState2[1];\n\n  var reportingFolders = useSelector(function (state) {\n    return state.document.folders;\n  });\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clearOnBlur = _useState4[0],\n      setClearOnBlur = _useState4[1];\n\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchFolders = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var folders;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                if (!documentType) {\n                  _context.next = 4;\n                  break;\n                }\n\n                _context.t0 = [{\n                  id: documentType\n                }];\n                _context.next = 7;\n                break;\n\n              case 4:\n                _context.next = 6;\n                return dispatch(getFolderList());\n\n              case 6:\n                _context.t0 = _context.sent;\n\n              case 7:\n                folders = _context.t0;\n\n                if (folders && mounted) {\n                  setFolders(sortBy(folders, 'label'));\n                }\n\n              case 9:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchFolders() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (!reportGroupId) fetchFolders();\n    return function () {\n      return mounted = false;\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    var mounted = true;\n\n    var fetchFolders = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var folders;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch(getFolderListForReport(reportGroupId));\n\n              case 2:\n                folders = _context2.sent;\n\n                if (folders && mounted) {\n                  setFolders(sortBy(folders, 'label'));\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function fetchFolders() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (reportGroupId) fetchFolders();\n    return function () {\n      return mounted = false;\n    };\n  }, [reportingFolders, reportGroupId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var fileField = {\n    type: 'file',\n    name: 'file',\n    label: utils.string.t('app.file'),\n    placeholder: 'Select File ...',\n    validation: Yup.mixed().nullable().required(utils.string.t('form.dragDrop.required'))\n  };\n  var autocompleteField = {\n    type: 'select',\n    name: 'folder',\n    label: utils.string.t('app.folder'),\n    value: '',\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.string().required(utils.string.t('form.folder.required'))\n  };\n  var autocompleteMuiField = {\n    type: 'autocompletemui',\n    name: 'reportingFolder',\n    label: utils.string.t('app.folder'),\n    value: null,\n    optionKey: 'id',\n    optionLabel: 'label',\n    optionsCreatable: true,\n    clearOnBlur: clearOnBlur,\n    validation: Yup.object().nullable().required(utils.string.t('form.folder.required')),\n    hint: utils.string.t('app.folderHintText')\n  };\n  var folderField = folders.length > 1 && !isFolderCreatable ? _objectSpread(_objectSpread({}, autocompleteField), {}, {\n    options: folders.map(function (f) {\n      return {\n        value: f.id,\n        label: f.label,\n        id: f.id\n      };\n    })\n  }) : isFolderCreatable ? _objectSpread(_objectSpread({}, autocompleteMuiField), {}, {\n    options: (folders === null || folders === void 0 ? void 0 : folders.length) > 0 ? folders === null || folders === void 0 ? void 0 : folders.map(function (f) {\n      return {\n        value: f.id,\n        label: f.label,\n        id: f.id\n      };\n    }) : [],\n    muiComponentProps: {\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params);\n\n        if (params.inputValue !== '') {\n          var exists = options === null || options === void 0 ? void 0 : options.some(function (_ref4) {\n            var label = _ref4.label;\n            return label.toLowerCase() === params.inputValue.toLowerCase().trim();\n          });\n\n          if (!exists) {\n            filtered.push({\n              id: params.inputValue,\n              value: params.inputValue,\n              label: \"\".concat(utils.string.t('app.add'), \" \\\"\").concat(params.inputValue, \"\\\"\")\n            });\n          }\n        }\n\n        return filtered;\n      },\n      onOpen: function onOpen(event) {\n        return setClearOnBlur(false);\n      }\n    },\n    onSelect: function onSelect(newInputValue) {\n      if (newInputValue === null || newInputValue === void 0 ? void 0 : newInputValue.label.includes(utils.string.t('app.add'))) {\n        dispatch(uploadReportingFolders({\n          payload: newInputValue,\n          reportGroupId: reportGroupId\n        }));\n      }\n    }\n  }) : {\n    type: 'hidden',\n    name: 'folder',\n    value: (folders === null || folders === void 0 ? void 0 : folders[0]) && (folders === null || folders === void 0 ? void 0 : folders[0].id)\n  };\n  var fields = [fileField, folderField];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      return dispatch(hideModal());\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(data) {\n      if (reportGroupId) {\n        var reportingFolder = folderField === null || folderField === void 0 ? void 0 : folderField.options.find(function (_ref5) {\n          var _data$reportingFolder, _data$reportingFolder2, _data$reportingFolder3, _data$reportingFolder4, _data$value, _data$label;\n\n          var label = _ref5.label;\n          return (data === null || data === void 0 ? void 0 : data.reportingFolder) ? label.toLowerCase() === (data === null || data === void 0 ? void 0 : (_data$reportingFolder = data.reportingFolder) === null || _data$reportingFolder === void 0 ? void 0 : (_data$reportingFolder2 = _data$reportingFolder.value) === null || _data$reportingFolder2 === void 0 ? void 0 : _data$reportingFolder2.toString().toLowerCase()) || label.toLowerCase() === (data === null || data === void 0 ? void 0 : (_data$reportingFolder3 = data.reportingFolder) === null || _data$reportingFolder3 === void 0 ? void 0 : (_data$reportingFolder4 = _data$reportingFolder3.label) === null || _data$reportingFolder4 === void 0 ? void 0 : _data$reportingFolder4.toString().toLowerCase()) : label.toLowerCase() === (data === null || data === void 0 ? void 0 : (_data$value = data.value) === null || _data$value === void 0 ? void 0 : _data$value.toLowerCase()) || label.toLowerCase() === (data === null || data === void 0 ? void 0 : (_data$label = data.label) === null || _data$label === void 0 ? void 0 : _data$label.toLowerCase());\n        });\n        dispatch(uploadReportingDocument({\n          data: data,\n          reportGroupId: reportGroupId,\n          reportingFolder: reportingFolder\n        }));\n        setClearOnBlur(true);\n      } else {\n        dispatch(uploadDocument(_objectSpread({\n          data: data,\n          placement: placement,\n          documentType: documentType,\n          documentTypeId: documentTypeId\n        }, utils.generic.isFunction(_redirectionCallback) && {\n          redirectionCallback: function redirectionCallback() {\n            return _redirectionCallback(placement.id);\n          }\n        })));\n      }\n    }\n  }];\n  return folders.length > 0 || reportGroupId ? /*#__PURE__*/_jsxDEV(DocumentUploadView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 170,\n    columnNumber: 48\n  }, this) : null;\n}\n\n_s(DocumentUpload, \"JikOEQ4KTbgLkJEkQfuAdpWSJmY=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = DocumentUpload;\n\nvar _c;\n\n$RefreshReg$(_c, \"DocumentUpload\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DocumentUpload/DocumentUpload.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","Yup","sortBy","createFilterOptions","DocumentUploadView","hideModal","uploadDocument","getFolderList","uploadReportingDocument","getFolderListForReport","uploadReportingFolders","utils","DocumentUpload","propTypes","documentType","string","placement","object","reportGroupId","isFolderCreatable","bool","documentTypeId","redirectionCallback","dispatch","folders","setFolders","reportingFolders","state","document","clearOnBlur","setClearOnBlur","mounted","fetchFolders","id","fileField","type","name","label","t","placeholder","validation","mixed","nullable","required","autocompleteField","value","optionKey","optionLabel","autocompleteMuiField","optionsCreatable","hint","folderField","length","options","map","f","muiComponentProps","filterOptions","params","filtered","inputValue","exists","some","toLowerCase","trim","push","onOpen","event","onSelect","newInputValue","includes","payload","fields","actions","handler","data","reportingFolder","find","toString","generic","isFunction"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport sortBy from 'lodash/sortBy';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\n// app\r\nimport { DocumentUploadView } from './DocumentUpload.view';\r\nimport { hideModal, uploadDocument, getFolderList, uploadReportingDocument, getFolderListForReport, uploadReportingFolders } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nDocumentUpload.propTypes = {\r\n  documentType: PropTypes.string,\r\n  placement: PropTypes.object,\r\n  reportGroupId: PropTypes.string,\r\n  isFolderCreatable: PropTypes.bool,\r\n};\r\n\r\nexport default function DocumentUpload({ documentType, placement, documentTypeId, redirectionCallback, reportGroupId, isFolderCreatable }) {\r\n  const dispatch = useDispatch();\r\n  const [folders, setFolders] = useState([]);\r\n  const reportingFolders = useSelector((state) => state.document.folders);\r\n  const [clearOnBlur, setClearOnBlur] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      let mounted = true;\r\n      const fetchFolders = async () => {\r\n        const folders = documentType ? [{ id: documentType }] : await dispatch(getFolderList());\r\n\r\n        if (folders && mounted) {\r\n          setFolders(sortBy(folders, 'label'));\r\n        }\r\n      };\r\n      if (!reportGroupId) fetchFolders();\r\n\r\n      return () => (mounted = false);\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => {\r\n    let mounted = true;\r\n    const fetchFolders = async () => {\r\n      const folders = await dispatch(getFolderListForReport(reportGroupId));\r\n      if (folders && mounted) {\r\n        setFolders(sortBy(folders, 'label'));\r\n      }\r\n    };\r\n\r\n    if (reportGroupId) fetchFolders();\r\n\r\n    return () => (mounted = false);\r\n  }, [reportingFolders, reportGroupId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fileField = {\r\n    type: 'file',\r\n    name: 'file',\r\n    label: utils.string.t('app.file'),\r\n    placeholder: 'Select File ...',\r\n    validation: Yup.mixed().nullable().required(utils.string.t('form.dragDrop.required')),\r\n  };\r\n\r\n  const autocompleteField = {\r\n    type: 'select',\r\n    name: 'folder',\r\n    label: utils.string.t('app.folder'),\r\n    value: '',\r\n    optionKey: 'id',\r\n    optionLabel: 'label',\r\n    validation: Yup.string().required(utils.string.t('form.folder.required')),\r\n  };\r\n\r\n  const autocompleteMuiField = {\r\n    type: 'autocompletemui',\r\n    name: 'reportingFolder',\r\n    label: utils.string.t('app.folder'),\r\n    value: null,\r\n    optionKey: 'id',\r\n    optionLabel: 'label',\r\n    optionsCreatable: true,\r\n    clearOnBlur: clearOnBlur,\r\n    validation: Yup.object().nullable().required(utils.string.t('form.folder.required')),\r\n    hint: utils.string.t('app.folderHintText'),\r\n  };\r\n\r\n  const folderField =\r\n    folders.length > 1 && !isFolderCreatable\r\n      ? { ...autocompleteField, options: folders.map((f) => ({ value: f.id, label: f.label, id: f.id })) }\r\n      : isFolderCreatable\r\n      ? {\r\n          ...autocompleteMuiField,\r\n          options: folders?.length > 0 ? folders?.map((f) => ({ value: f.id, label: f.label, id: f.id })) : [],\r\n\r\n          muiComponentProps: {\r\n            filterOptions: (options, params) => {\r\n              const filtered = createFilterOptions()(options, params);\r\n\r\n              if (params.inputValue !== '') {\r\n                const exists = options?.some(({ label }) => label.toLowerCase() === params.inputValue.toLowerCase().trim());\r\n                if (!exists) {\r\n                  filtered.push({\r\n                    id: params.inputValue,\r\n                    value: params.inputValue,\r\n                    label: `${utils.string.t('app.add')} \"${params.inputValue}\"`,\r\n                  });\r\n                }\r\n              }\r\n\r\n              return filtered;\r\n            },\r\n            onOpen: (event) => setClearOnBlur(false),\r\n          },\r\n          onSelect: (newInputValue) => {\r\n            if (newInputValue?.label.includes(utils.string.t('app.add'))) {\r\n              dispatch(\r\n                uploadReportingFolders({\r\n                  payload: newInputValue,\r\n                  reportGroupId,\r\n                })\r\n              );\r\n            }\r\n          },\r\n        }\r\n      : { type: 'hidden', name: 'folder', value: folders?.[0] && folders?.[0].id };\r\n\r\n  const fields = [fileField, folderField];\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => dispatch(hideModal()),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (data) => {\r\n        if (reportGroupId) {\r\n          const reportingFolder = folderField?.options.find(({ label }) => {\r\n            return data?.reportingFolder\r\n              ? label.toLowerCase() === data?.reportingFolder?.value?.toString().toLowerCase() ||\r\n                  label.toLowerCase() === data?.reportingFolder?.label?.toString().toLowerCase()\r\n              : label.toLowerCase() === data?.value?.toLowerCase() || label.toLowerCase() === data?.label?.toLowerCase();\r\n          });\r\n\r\n          dispatch(\r\n            uploadReportingDocument({\r\n              data,\r\n              reportGroupId,\r\n              reportingFolder,\r\n            })\r\n          );\r\n          setClearOnBlur(true);\r\n        } else {\r\n          dispatch(\r\n            uploadDocument({\r\n              data,\r\n              placement,\r\n              documentType,\r\n              documentTypeId,\r\n              ...(utils.generic.isFunction(redirectionCallback) && { redirectionCallback: () => redirectionCallback(placement.id) }),\r\n            })\r\n          );\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return folders.length > 0 || reportGroupId ? <DocumentUploadView fields={fields} actions={actions} /> : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}