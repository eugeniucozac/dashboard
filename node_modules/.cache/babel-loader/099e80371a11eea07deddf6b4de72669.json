{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MapBox\\\\MapBox.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport sortBy from 'lodash/sortBy';\nimport ReactDOM from 'react-dom'; // mapbox\n\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './mapBox.css'; // app\n\nimport styles from './MapBox.styles';\nimport { MapBoxOverlay, MapBoxTooltipPortal, Chart, ChartKey, Loader, ChartZoomLevel } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { KEYCODE } from 'consts'; // mui\n\nimport { withStyles, Fade } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var MapBox = /*#__PURE__*/function (_Component) {\n  _inherits(MapBox, _Component);\n\n  var _super = _createSuper(MapBox);\n\n  function MapBox(props) {\n    var _this;\n\n    _classCallCheck(this, MapBox);\n\n    _this = _super.call(this, props);\n\n    _this.getBounds = function (locations) {\n      var bounds = new mapboxgl.LngLatBounds();\n      var boundingBox = locations.reduce(function (acc, l) {\n        var lngLat;\n\n        try {\n          lngLat = new mapboxgl.LngLat(l.lng, l.lat);\n        } catch (_unused) {\n          console.error('MapBox: invalid lngLat provided', {\n            id: l.id,\n            lat: l.lat,\n            lng: l.lng\n          });\n        }\n\n        return lngLat && lngLat.lng && lngLat.lat ? bounds.extend([lngLat.lng, lngLat.lat]) : acc;\n      }, {});\n      return !isEmpty(boundingBox) ? boundingBox : config.mapbox.location.country.boundingBox.US;\n    };\n\n    _this.getLocations = function (locations, locationsFiltered) {\n      var locs = utils.generic.isValidArray(locations, true) ? locations : [];\n      var locsFiltered = utils.generic.isValidArray(locationsFiltered, true) ? locationsFiltered : [];\n      var locsReturned = locsFiltered.length > 0 ? locsFiltered : locs;\n      return locsReturned.filter(function (l) {\n        return l.lat && l.lng && l.locationsFound > 0;\n      });\n    };\n\n    _this.mapAddPopup = function (marker) {\n      var popup = new mapboxgl.Popup({\n        offset: 40\n      }).setLngLat([marker.location.lng, marker.location.lat]).setDOMContent(_this.tooltipElem).addTo(_this.map);\n\n      _this.setState({\n        popups: [popup]\n      });\n    };\n\n    _this.mapRemovePopups = function () {\n      _this.state.popups.forEach(function (popup) {\n        if (utils.generic.isFunction(popup.remove)) {\n          popup.remove();\n        }\n      });\n\n      _this.setState({\n        popups: []\n      });\n    };\n\n    _this.createDoughnutChart = function (_ref) {\n      var location = _ref.location;\n      var level = _this.state.level;\n      var _this$props = _this.props,\n          doughnutSizes = _this$props.doughnutSizes,\n          levelOverride = _this$props.levelOverride;\n      var _location$properties = location.properties,\n          properties = _location$properties === void 0 ? {} : _location$properties;\n      var _properties$data = properties.data,\n          data = _properties$data === void 0 ? [] : _properties$data,\n          _properties$backgroun = properties.backgroundColor,\n          backgroundColor = _properties$backgroun === void 0 ? [] : _properties$backgroun;\n      return /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"doughnut\",\n        data: {\n          datasets: [{\n            borderWidth: 1,\n            data: data,\n            backgroundColor: backgroundColor\n          }]\n        },\n        options: config.ui.chart.doughnut,\n        width: doughnutSizes[levelOverride || level],\n        height: doughnutSizes[levelOverride || level]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    };\n\n    _this.setDoughnutMarkers = function (locations, markers) {\n      if (!locations) return;\n      var markersArray = [];\n      utils.map.parseLocations(locations).forEach(function (location) {\n        var tooltipContainer = document.createElement('div');\n        var ChartComponent = _this.createDoughnutChart;\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(ChartComponent, {\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }, _assertThisInitialized(_this)), tooltipContainer);\n        var marker = new mapboxgl.Marker(tooltipContainer).setLngLat([location.lng, location.lat]);\n        var markerExists = markers.find(function (m) {\n          return isEqual(m.getLngLat(), marker.getLngLat());\n        });\n        if (markerExists) return; // adding original location object (id, lat, lng, etc...) to the marker\n\n        marker.location = location;\n\n        try {\n          marker.addTo(_this.map);\n        } catch (_unused2) {}\n\n        markersArray.push(marker);\n      });\n      return markersArray;\n    };\n\n    _this.mapAddMarkers = function (locations, markers) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          markerType = _this$props2.markerType,\n          doughnutSizes = _this$props2.doughnutSizes,\n          levels = _this$props2.levels,\n          levelOverride = _this$props2.levelOverride;\n      var newLevel = utils.map.getLevelByZoom(levels, Math.round(_this.map.getZoom()));\n\n      var newBoundingBox = _this.map.getBounds();\n\n      _this.setState({\n        level: newLevel\n      });\n\n      var filteredLocations = locations.filter(function (location) {\n        return newBoundingBox.contains(new mapboxgl.LngLat(location.lng, location.lat));\n      });\n      var showDoughnutMarkers = markerType === config.mapbox.markerType.doughnut && Object.keys(doughnutSizes).includes(levelOverride || newLevel);\n      var newMarkers = showDoughnutMarkers ? _this.setDoughnutMarkers(filteredLocations, markers) : utils.map.setMarkers(_this.map, filteredLocations, markers); // saving the marker instances to state to keep access to MapBox remove() method\n\n      _this.setState({\n        markers: [].concat(_toConsumableArray(markers), _toConsumableArray(newMarkers))\n      }, function () {\n        if (utils.generic.isFunction(onChange)) {\n          onChange(_this.state.markers);\n        }\n      });\n\n      _this.mapParseMarkers(newMarkers);\n    };\n\n    _this.mapRemoveMarkers = function () {\n      _this.state.markers.forEach(function (marker) {\n        if (utils.generic.isFunction(marker.remove)) {\n          marker.remove();\n        }\n      });\n\n      _this.setState({\n        markers: []\n      });\n    };\n\n    _this.mapParseMarkers = function (markers) {\n      markers.forEach(function (marker) {\n        marker._element.addEventListener('click', _this.mapClickMarker(marker));\n      });\n    };\n\n    _this.mapClickMarker = function (marker) {\n      return function (event) {\n        var _this$props3 = _this.props,\n            onClickMarker = _this$props3.onClickMarker,\n            tooltipComponent = _this$props3.tooltipComponent; // prevent marker click from bubbling up to the map (which closes popup meant to be opened)\n\n        event.stopPropagation();\n\n        _this.mapRemovePopups();\n\n        var markers = _this.map.getContainer().querySelectorAll('.mapboxgl-marker');\n\n        var location = marker.location || {};\n        markers.forEach(function (el) {\n          el.classList.remove('active');\n        });\n        marker.getElement().classList.add('active'); // update the tooltip state\n        // after the update, fetch the re-rendered content from the React Portal\n\n        if (tooltipComponent) {\n          _this.setState({\n            tooltip: location\n          }, function () {\n            if (_this.tooltipElem) {\n              _this.mapAddPopup(marker);\n            }\n          });\n        }\n\n        if (utils.generic.isFunction(onClickMarker)) {\n          onClickMarker(marker.location);\n        }\n\n        if (_this.props.allowMarkerClickZoom) {\n          _this.map.flyTo({\n            center: marker._lngLat,\n            zoom: Math.max(_this.map.getZoom(), _this.props.markerMaxZoom)\n          });\n        }\n      };\n    };\n\n    _this.mapToggleLayer = function (layerGroupKey) {\n      var layers = _objectSpread({}, _this.state.layers);\n\n      var layerGroup = layers[layerGroupKey];\n      var _utils$map$visibility = utils.map.visibility,\n          visible = _utils$map$visibility.visible,\n          none = _utils$map$visibility.none;\n      layerGroup.visibility = layerGroup.visibility === visible ? none : visible;\n      layerGroup.config.forEach(function (c) {\n        _this.map.setLayoutProperty(c.id, 'visibility', layerGroup.visibility);\n      });\n\n      _this.setState({\n        layers: layers\n      });\n    };\n\n    _this.mapToggleFullScreen = function () {\n      _this.setState({\n        fullscreen: !_this.state.fullscreen\n      }, function () {\n        if (_this.map && utils.generic.isFunction(_this.map.resize)) {\n          _this.map.resize();\n        }\n      });\n    };\n\n    _this.mapToggleSatellite = function () {\n      _this.setState({\n        showSatelliteView: !_this.state.showSatelliteView\n      }, function () {\n        _this.map.setStyle(_this.state.showSatelliteView ? config.mapbox.styles.satellite : config.mapbox.styles.street);\n      });\n    };\n\n    _this.handleEscape = function (event) {\n      if (event.keyCode === KEYCODE.Escape) {\n        event.preventDefault();\n\n        if (_this.state.fullscreen) {\n          _this.setState({\n            fullscreen: false\n          }, function () {\n            if (_this.map && utils.generic.isFunction(_this.map.resize)) {\n              _this.map.resize();\n            }\n          });\n        }\n      }\n    };\n\n    _this.levelLoaderComponent = function () {\n      if (!_this.map) return null;\n      var isLoading = _this.props.isLoading;\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        visible: isLoading,\n        label: utils.string.t('app.loading_locations'),\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 12\n      }, _assertThisInitialized(_this));\n    };\n\n    mapboxgl.accessToken = config.mapbox.token;\n\n    var mapLocations = _this.getLocations(props.locations, props.locationsFiltered);\n\n    if (props.tooltipComponent) {\n      _this.tooltipElem = document.createElement('div');\n    }\n\n    _this.state = {\n      ready: false,\n      fullscreen: false,\n      showSatelliteView: false,\n      layers: Object.assign({}, props.layers),\n      markers: [],\n      popups: [],\n      tooltip: {},\n      tooltipContainerId: \"root-mapbox-tooltip-\".concat(props.id),\n      defaultInstanceObject: _objectSpread(_objectSpread({\n        container: \"map-\".concat(props.id),\n        center: props.center,\n        zoom: props.zoom,\n        minZoom: props.minZoom,\n        maxZoom: props.maxZoom,\n        pitch: props.pitch,\n        style: config.mapbox.styles.street\n      }, props.fitBounds && {\n        bounds: _this.getBounds(mapLocations)\n      }), props.fitBounds && {\n        fitBoundsOptions: props.fitBoundsOptions\n      })\n    };\n    return _this;\n  }\n\n  _createClass(MapBox, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.tooltipComponent) {\n        var tooltipContainer = document.createElement('div');\n        tooltipContainer.id = this.state.tooltipContainerId;\n        document.body.appendChild(tooltipContainer);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          layers = _this$state.layers,\n          defaultInstanceObject = _this$state.defaultInstanceObject;\n      var _this$props4 = this.props,\n          allowScrollZoom = _this$props4.allowScrollZoom,\n          showMarkers = _this$props4.showMarkers,\n          locations = _this$props4.locations,\n          locationsFiltered = _this$props4.locationsFiltered,\n          instanceObject = _this$props4.instanceObject,\n          onLoad = _this$props4.onLoad,\n          onChange = _this$props4.onChange; // get current list of locations\n\n      var mapLocations = this.getLocations(locations, locationsFiltered); // instantiate mapbox\n\n      this.map = new mapboxgl.Map(Object.assign({}, defaultInstanceObject, instanceObject)); // setup map onLoad\n\n      this.map.on('load', function () {\n        var markers = _this2.state.markers;\n        var levels = _this2.props.levels;\n        var level = utils.map.getLevelByZoom(levels, Math.round(_this2.map.getZoom()));\n\n        if (!allowScrollZoom) {\n          _this2.map.scrollZoom.disable();\n        }\n\n        _this2.map.addControl(new mapboxgl.NavigationControl(), 'bottom-left');\n\n        if (showMarkers && mapLocations.length > 0) {\n          _this2.mapAddMarkers(mapLocations, []);\n        }\n\n        utils.map.addDefaultSources(_this2.map);\n        utils.map.addDefaultLayers(_this2.map, layers); // run additional code specific to the parent component (ex: add clusters layers/sources)\n\n        if (utils.generic.isFunction(onLoad)) {\n          onLoad(_this2.map, {\n            markers: markers,\n            level: level\n          });\n        }\n\n        _this2.setState({\n          ready: true,\n          boundingBox: _this2.map.getBounds().toArray().flat()\n        });\n\n        document.addEventListener('keydown', _this2.handleEscape);\n      }); // Add layers/sources when changing the style\n\n      this.map.on('style.load', function () {\n        var _this2$state = _this2.state,\n            markers = _this2$state.markers,\n            ready = _this2$state.ready;\n        if (!ready) return;\n\n        _this2.mapRemovePopups();\n\n        if (utils.generic.isFunction(onChange)) {\n          utils.map.addDefaultSources(_this2.map);\n          utils.map.addDefaultLayers(_this2.map, layers);\n          onChange(markers);\n        }\n      });\n      this.map.on('zoomend', function () {\n        var _this2$state2 = _this2.state,\n            ready = _this2$state2.ready,\n            level = _this2$state2.level,\n            markers = _this2$state2.markers;\n        var _this2$props = _this2.props,\n            onLevelChange = _this2$props.onLevelChange,\n            levels = _this2$props.levels,\n            locations = _this2$props.locations,\n            locationsFiltered = _this2$props.locationsFiltered,\n            levelOverride = _this2$props.levelOverride;\n        if (!ready) return;\n        if (!utils.generic.isFunction(onLevelChange)) return;\n        var newLevel = utils.map.getLevelByZoom(levels, Math.round(_this2.map.getZoom()));\n\n        if (level === newLevel || levelOverride) {\n          _this2.mapAddMarkers(_this2.getLocations(locations, locationsFiltered), markers);\n        }\n\n        if (level !== newLevel) {\n          onLevelChange({\n            level: newLevel\n          });\n        }\n      });\n      this.map.on('dragend', function () {\n        var _this2$state3 = _this2.state,\n            ready = _this2$state3.ready,\n            boundingBox = _this2$state3.boundingBox,\n            markers = _this2$state3.markers;\n        var _this2$props2 = _this2.props,\n            locations = _this2$props2.locations,\n            locationsFiltered = _this2$props2.locationsFiltered,\n            showMarkers = _this2$props2.showMarkers;\n        if (!ready || !showMarkers) return;\n\n        var newBoundingBox = _this2.map.getBounds().toArray().flat();\n\n        if (boundingBox && !isEqual(boundingBox, newBoundingBox)) {\n          _this2.setState({\n            boundingBox: newBoundingBox\n          });\n\n          _this2.mapAddMarkers(_this2.getLocations(locations, locationsFiltered), markers);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove all markers\n      this.mapRemoveMarkers(); // remove MapBox map instance\n\n      if (utils.generic.isFunction(this.map && this.map.remove)) {\n        this.map.remove();\n      } // remove all DOM nodes used for HTML tooltip\n\n\n      if (this.props.tooltipComponent) {\n        var tooltipContainer = document.getElementById(this.state.tooltipContainerId);\n        var tooltipNode = this.tooltipElem;\n        var tooltipParent = this.tooltipElem.parentNode;\n\n        if (tooltipNode && tooltipParent) {\n          tooltipParent.removeChild(tooltipNode);\n        }\n\n        if (tooltipContainer) {\n          tooltipContainer.remove();\n        }\n      }\n\n      document.removeEventListener('keydown', this.handleEscape);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$state2 = this.state,\n          markers = _this$state2.markers,\n          ready = _this$state2.ready;\n      var _this$props5 = this.props,\n          locations = _this$props5.locations,\n          locationsFiltered = _this$props5.locationsFiltered,\n          activeMarkers = _this$props5.activeMarkers,\n          allowScrollZoom = _this$props5.allowScrollZoom,\n          showMarkers = _this$props5.showMarkers,\n          center = _this$props5.center,\n          zoom = _this$props5.zoom,\n          fitBounds = _this$props5.fitBounds,\n          fitBoundsOptions = _this$props5.fitBoundsOptions,\n          onChange = _this$props5.onChange,\n          reCenter = _this$props5.reCenter;\n      var mapLocations = sortBy(this.getLocations(locations, locationsFiltered), ['id']);\n      var mapPrevLocations = sortBy(this.getLocations(prevProps.locations, prevProps.locationsFiltered), ['id']);\n      var isNewLocations = !isEqual(mapPrevLocations.map(function (l) {\n        return l && l.id;\n      }), mapLocations.map(function (l) {\n        return l && l.id;\n      }));\n      var isUpdatedLocations = !isEqual(mapPrevLocations, mapLocations);\n      var isUpdatedActiveMarkers = !isEqual(prevProps.activeMarkers, activeMarkers);\n      var isNewPropsShowMarkers = !isEqual(prevProps.showMarkers, showMarkers);\n      var isNewPropsFitBounds = !isEqual(prevProps.fitBounds, fitBounds);\n      var isNewPropsAllowScroll = !isEqual(prevProps.allowScrollZoom, allowScrollZoom);\n\n      if (isNewPropsAllowScroll) {\n        if (allowScrollZoom) {\n          this.map.scrollZoom.enable();\n        } else {\n          this.map.scrollZoom.disable();\n        }\n      } // whenever anything changes in the locations (ex: new/removed locations or any property has changed)\n      // reset the markers\n\n\n      if (isUpdatedLocations || isNewPropsShowMarkers || isNewPropsFitBounds) {\n        this.mapRemovePopups();\n        this.mapRemoveMarkers();\n\n        if (showMarkers) {\n          this.mapAddMarkers(mapLocations, []);\n        } // if locations have been added or removed\n\n\n        if (isNewLocations) {\n          // executed onChange callback (ex: to add clusters sources/layers)\n          if (ready && utils.generic.isValidArray(mapLocations, true) && utils.generic.isFunction(onChange)) {\n            onChange(markers);\n          }\n        } // re-center the map on the new/updated array of markers\n\n\n        if (fitBounds) {\n          this.map.fitBounds(this.getBounds(mapLocations), fitBoundsOptions);\n        } else {\n          if (!reCenter) return;\n          this.map.flyTo({\n            center: center,\n            zoom: zoom\n          });\n        }\n      } // if active marker(s) was updated\n\n\n      if (isUpdatedActiveMarkers && showMarkers) {\n        markers.forEach(function (marker) {\n          marker.getElement().classList.toggle('active', activeMarkers.includes(marker.location.id));\n        });\n      }\n\n      if (prevProps.center !== center || prevProps.zoom !== zoom) {\n        var newCenter = prevProps.center !== center ? center : prevProps.center;\n        var newZoom = prevProps.zoom !== zoom ? zoom : prevProps.zoom;\n        this.map.flyTo(_objectSpread(_objectSpread({}, prevProps.zoom !== zoom && {\n          zoom: newZoom\n        }), prevProps.center !== center && {\n          center: newCenter\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classesMapContainer, _classesMap;\n\n      var _this$state3 = this.state,\n          layers = _this$state3.layers,\n          tooltip = _this$state3.tooltip,\n          ready = _this$state3.ready,\n          fullscreen = _this$state3.fullscreen,\n          tooltipContainerId = _this$state3.tooltipContainerId,\n          showSatelliteView = _this$state3.showSatelliteView;\n      var _this$props6 = this.props,\n          id = _this$props6.id,\n          height = _this$props6.height,\n          allowFullscreen = _this$props6.allowFullscreen,\n          overflow = _this$props6.overflow,\n          placementOverflow = _this$props6.placementOverflow,\n          responsive = _this$props6.responsive,\n          buttons = _this$props6.buttons,\n          header = _this$props6.header,\n          locations = _this$props6.locations,\n          tooltipComponent = _this$props6.tooltipComponent,\n          overlay = _this$props6.overlay,\n          classes = _this$props6.classes,\n          allowSatelliteView = _this$props6.allowSatelliteView,\n          mapKey = _this$props6.mapKey,\n          onLevelChange = _this$props6.onLevelChange,\n          nestedClasses = _this$props6.nestedClasses,\n          levels = _this$props6.levels,\n          levelOverride = _this$props6.levelOverride;\n      var isOverlayVisible = overlay && overlay.visible;\n      var classesMapContainer = (_classesMapContainer = {}, _defineProperty(_classesMapContainer, classes.root, !fullscreen), _defineProperty(_classesMapContainer, classes.overflow, !fullscreen && overflow), _defineProperty(_classesMapContainer, classes.placementOverflow, !fullscreen && placementOverflow), _defineProperty(_classesMapContainer, classes.responsive, !fullscreen && responsive), _defineProperty(_classesMapContainer, classes.fullScreen, fullscreen), _classesMapContainer);\n      var classesMap = (_classesMap = {}, _defineProperty(_classesMap, classes.map, true), _defineProperty(_classesMap, nestedClasses.map, Boolean(nestedClasses.map)), _defineProperty(_classesMap, classes.mapOverflow, overflow), _defineProperty(_classesMap, classes.mapOverlay, isOverlayVisible), _classesMap);\n\n      if (this.map) {\n        this.map.resize();\n      }\n\n      var LevelLoaderComponent = this.levelLoaderComponent;\n      var TooltipComponent = tooltipComponent;\n      return /*#__PURE__*/_jsxDEV(Fade, {\n        in: ready,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(classesMapContainer),\n          children: [/*#__PURE__*/_jsxDEV(MapBoxOverlay, {\n            locations: locations,\n            layers: layers,\n            overflow: overflow,\n            fullscreen: allowFullscreen ? fullscreen : false,\n            buttons: buttons,\n            header: header,\n            showSatelliteView: showSatelliteView,\n            handleToggleSatellite: allowSatelliteView ? this.mapToggleSatellite : undefined,\n            handleToggleLayer: this.mapToggleLayer,\n            handleToggleFullScreen: allowFullscreen ? this.mapToggleFullScreen : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 11\n          }, this), mapKey && /*#__PURE__*/_jsxDEV(ChartKey, _objectSpread({}, mapKey), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 22\n          }, this), this.map && utils.generic.isFunction(onLevelChange) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ChartZoomLevel, {\n              disabled: locations.length === 0,\n              onLevelChange: onLevelChange,\n              levels: levels,\n              level: utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom())),\n              levelOverride: levelOverride\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LevelLoaderComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), tooltipComponent && /*#__PURE__*/_jsxDEV(MapBoxTooltipPortal, {\n            id: tooltipContainerId,\n            elem: this.tooltipElem,\n            children: !isEmpty(tooltip) && /*#__PURE__*/_jsxDEV(TooltipComponent, {\n              tooltip: tooltip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"map-\".concat(id),\n            style: {\n              height: fullscreen ? null : height\n            },\n            className: classnames('map', 'mapboxgl-map', classnames(classesMap)),\n            children: isOverlayVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.overlay,\n              children: overlay.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MapBox;\n}(Component);\nMapBox.propTypes = {\n  id: PropTypes.string.isRequired,\n  locations: PropTypes.array,\n  locationsFiltered: PropTypes.array,\n  buttons: PropTypes.array,\n  levels: PropTypes.array,\n  levelOverride: PropTypes.string,\n  doughnutSizes: PropTypes.object,\n  layers: PropTypes.object,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overflow: PropTypes.bool,\n  placementOverflow: PropTypes.bool,\n  responsive: PropTypes.bool,\n  allowScrollZoom: PropTypes.bool,\n  allowFullscreen: PropTypes.bool,\n  allowSatelliteView: PropTypes.bool,\n  allowMarkerClickZoom: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  activeMarkers: PropTypes.array,\n  showMarkers: PropTypes.bool,\n  markerType: PropTypes.string,\n  markerMaxZoom: PropTypes.number,\n  fitBounds: PropTypes.bool,\n  fitBoundsOptions: PropTypes.object,\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  maxZoom: PropTypes.number,\n  pitch: PropTypes.number,\n  overlay: PropTypes.object,\n  instanceObject: PropTypes.object,\n  tooltipComponent: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLevelChange: PropTypes.func,\n  onChange: PropTypes.func,\n  onClickMarker: PropTypes.func,\n  reCenter: PropTypes.bool,\n  mapKey: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      avatarText: PropTypes.string,\n      checked: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.string\n    })).isRequired,\n    allowCollapse: PropTypes.bool,\n    title: PropTypes.string,\n    nestedClasses: PropTypes.object,\n    handleToggle: PropTypes.func,\n    colorMode: PropTypes.oneOf(['light', 'dark'])\n  })\n};\nMapBox.defaultProps = {\n  nestedClasses: {},\n  height: config.mapbox.height,\n  center: config.mapbox.location.country.center.US,\n  levels: config.mapbox.levels,\n  reCenter: true,\n  doughnutSizes: config.mapbox.doughnutSizes,\n  markerType: config.mapbox.markerType.default,\n  zoom: config.mapbox.zoom,\n  minZoom: config.mapbox.minZoom,\n  maxZoom: config.mapbox.maxZoom,\n  pitch: config.mapbox.pitch,\n  allowScrollZoom: true,\n  isLoading: false,\n  allowFullscreen: true,\n  allowMarkerClickZoom: true,\n  allowSatelliteView: true,\n  activeMarkers: [],\n  showMarkers: true,\n  markerMaxZoom: config.mapbox.marker.maxZoom,\n  fitBoundsOptions: config.mapbox.fitBoundsOptions\n};\nexport default compose(withStyles(styles))(MapBox);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MapBox/MapBox.js"],"names":["React","Component","PropTypes","compose","classnames","isEqual","isEmpty","sortBy","ReactDOM","mapboxgl","styles","MapBoxOverlay","MapBoxTooltipPortal","Chart","ChartKey","Loader","ChartZoomLevel","utils","config","KEYCODE","withStyles","Fade","MapBox","props","getBounds","locations","bounds","LngLatBounds","boundingBox","reduce","acc","l","lngLat","LngLat","lng","lat","console","error","id","extend","mapbox","location","country","US","getLocations","locationsFiltered","locs","generic","isValidArray","locsFiltered","locsReturned","length","filter","locationsFound","mapAddPopup","marker","popup","Popup","offset","setLngLat","setDOMContent","tooltipElem","addTo","map","setState","popups","mapRemovePopups","state","forEach","isFunction","remove","createDoughnutChart","level","doughnutSizes","levelOverride","properties","data","backgroundColor","datasets","borderWidth","ui","chart","doughnut","setDoughnutMarkers","markers","markersArray","parseLocations","tooltipContainer","document","createElement","ChartComponent","render","Marker","markerExists","find","m","getLngLat","push","mapAddMarkers","onChange","markerType","levels","newLevel","getLevelByZoom","Math","round","getZoom","newBoundingBox","filteredLocations","contains","showDoughnutMarkers","Object","keys","includes","newMarkers","setMarkers","mapParseMarkers","mapRemoveMarkers","_element","addEventListener","mapClickMarker","event","onClickMarker","tooltipComponent","stopPropagation","getContainer","querySelectorAll","el","classList","getElement","add","tooltip","allowMarkerClickZoom","flyTo","center","_lngLat","zoom","max","markerMaxZoom","mapToggleLayer","layerGroupKey","layers","layerGroup","visibility","visible","none","c","setLayoutProperty","mapToggleFullScreen","fullscreen","resize","mapToggleSatellite","showSatelliteView","setStyle","satellite","street","handleEscape","keyCode","Escape","preventDefault","levelLoaderComponent","isLoading","string","t","accessToken","token","mapLocations","ready","assign","tooltipContainerId","defaultInstanceObject","container","minZoom","maxZoom","pitch","style","fitBounds","fitBoundsOptions","body","appendChild","allowScrollZoom","showMarkers","instanceObject","onLoad","Map","on","scrollZoom","disable","addControl","NavigationControl","addDefaultSources","addDefaultLayers","toArray","flat","onLevelChange","getElementById","tooltipNode","tooltipParent","parentNode","removeChild","removeEventListener","prevProps","activeMarkers","reCenter","mapPrevLocations","isNewLocations","isUpdatedLocations","isUpdatedActiveMarkers","isNewPropsShowMarkers","isNewPropsFitBounds","isNewPropsAllowScroll","enable","toggle","newCenter","newZoom","height","allowFullscreen","overflow","placementOverflow","responsive","buttons","header","overlay","classes","allowSatelliteView","mapKey","nestedClasses","isOverlayVisible","classesMapContainer","root","fullScreen","classesMap","Boolean","mapOverflow","mapOverlay","LevelLoaderComponent","TooltipComponent","undefined","text","propTypes","isRequired","array","object","oneOfType","number","bool","arrayOf","func","shape","items","color","avatarText","checked","label","allowCollapse","title","handleToggle","colorMode","oneOf","defaultProps","default"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport isEqual from 'lodash/isEqual';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport sortBy from 'lodash/sortBy';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// mapbox\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './mapBox.css';\r\n\r\n// app\r\nimport styles from './MapBox.styles';\r\nimport { MapBoxOverlay, MapBoxTooltipPortal, Chart, ChartKey, Loader, ChartZoomLevel } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { KEYCODE } from 'consts';\r\n\r\n// mui\r\nimport { withStyles, Fade } from '@material-ui/core';\r\n\r\nexport class MapBox extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    locations: PropTypes.array,\r\n    locationsFiltered: PropTypes.array,\r\n    buttons: PropTypes.array,\r\n    levels: PropTypes.array,\r\n    levelOverride: PropTypes.string,\r\n    doughnutSizes: PropTypes.object,\r\n    layers: PropTypes.object,\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    overflow: PropTypes.bool,\r\n    placementOverflow: PropTypes.bool,\r\n    responsive: PropTypes.bool,\r\n    allowScrollZoom: PropTypes.bool,\r\n    allowFullscreen: PropTypes.bool,\r\n    allowSatelliteView: PropTypes.bool,\r\n    allowMarkerClickZoom: PropTypes.bool,\r\n    isLoading: PropTypes.bool,\r\n    activeMarkers: PropTypes.array,\r\n    showMarkers: PropTypes.bool,\r\n    markerType: PropTypes.string,\r\n    markerMaxZoom: PropTypes.number,\r\n    fitBounds: PropTypes.bool,\r\n    fitBoundsOptions: PropTypes.object,\r\n    center: PropTypes.arrayOf(PropTypes.number),\r\n    zoom: PropTypes.number,\r\n    minZoom: PropTypes.number,\r\n    maxZoom: PropTypes.number,\r\n    pitch: PropTypes.number,\r\n    overlay: PropTypes.object,\r\n    instanceObject: PropTypes.object,\r\n    tooltipComponent: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onLevelChange: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onClickMarker: PropTypes.func,\r\n    reCenter: PropTypes.bool,\r\n    mapKey: PropTypes.shape({\r\n      items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          color: PropTypes.string,\r\n          avatarText: PropTypes.string,\r\n          checked: PropTypes.bool,\r\n          id: PropTypes.string,\r\n          label: PropTypes.string,\r\n        })\r\n      ).isRequired,\r\n      allowCollapse: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      nestedClasses: PropTypes.object,\r\n      handleToggle: PropTypes.func,\r\n      colorMode: PropTypes.oneOf(['light', 'dark']),\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    nestedClasses: {},\r\n    height: config.mapbox.height,\r\n    center: config.mapbox.location.country.center.US,\r\n    levels: config.mapbox.levels,\r\n    reCenter: true,\r\n    doughnutSizes: config.mapbox.doughnutSizes,\r\n    markerType: config.mapbox.markerType.default,\r\n    zoom: config.mapbox.zoom,\r\n    minZoom: config.mapbox.minZoom,\r\n    maxZoom: config.mapbox.maxZoom,\r\n    pitch: config.mapbox.pitch,\r\n    allowScrollZoom: true,\r\n    isLoading: false,\r\n    allowFullscreen: true,\r\n    allowMarkerClickZoom: true,\r\n    allowSatelliteView: true,\r\n    activeMarkers: [],\r\n    showMarkers: true,\r\n    markerMaxZoom: config.mapbox.marker.maxZoom,\r\n    fitBoundsOptions: config.mapbox.fitBoundsOptions,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    mapboxgl.accessToken = config.mapbox.token;\r\n\r\n    const mapLocations = this.getLocations(props.locations, props.locationsFiltered);\r\n\r\n    if (props.tooltipComponent) {\r\n      this.tooltipElem = document.createElement('div');\r\n    }\r\n\r\n    this.state = {\r\n      ready: false,\r\n      fullscreen: false,\r\n      showSatelliteView: false,\r\n      layers: Object.assign({}, props.layers),\r\n      markers: [],\r\n      popups: [],\r\n      tooltip: {},\r\n      tooltipContainerId: `root-mapbox-tooltip-${props.id}`,\r\n      defaultInstanceObject: {\r\n        container: `map-${props.id}`,\r\n        center: props.center,\r\n        zoom: props.zoom,\r\n        minZoom: props.minZoom,\r\n        maxZoom: props.maxZoom,\r\n        pitch: props.pitch,\r\n        style: config.mapbox.styles.street,\r\n        ...(props.fitBounds && { bounds: this.getBounds(mapLocations) }),\r\n        ...(props.fitBounds && { fitBoundsOptions: props.fitBoundsOptions }),\r\n      },\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.tooltipComponent) {\r\n      const tooltipContainer = document.createElement('div');\r\n\r\n      tooltipContainer.id = this.state.tooltipContainerId;\r\n      document.body.appendChild(tooltipContainer);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { layers, defaultInstanceObject } = this.state;\r\n    const { allowScrollZoom, showMarkers, locations, locationsFiltered, instanceObject, onLoad, onChange } = this.props;\r\n\r\n    // get current list of locations\r\n    const mapLocations = this.getLocations(locations, locationsFiltered);\r\n\r\n    // instantiate mapbox\r\n    this.map = new mapboxgl.Map(Object.assign({}, defaultInstanceObject, instanceObject));\r\n\r\n    // setup map onLoad\r\n    this.map.on('load', () => {\r\n      const { markers } = this.state;\r\n      const { levels } = this.props;\r\n\r\n      const level = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n\r\n      if (!allowScrollZoom) {\r\n        this.map.scrollZoom.disable();\r\n      }\r\n\r\n      this.map.addControl(new mapboxgl.NavigationControl(), 'bottom-left');\r\n\r\n      if (showMarkers && mapLocations.length > 0) {\r\n        this.mapAddMarkers(mapLocations, []);\r\n      }\r\n\r\n      utils.map.addDefaultSources(this.map);\r\n      utils.map.addDefaultLayers(this.map, layers);\r\n\r\n      // run additional code specific to the parent component (ex: add clusters layers/sources)\r\n      if (utils.generic.isFunction(onLoad)) {\r\n        onLoad(this.map, { markers, level });\r\n      }\r\n\r\n      this.setState({\r\n        ready: true,\r\n        boundingBox: this.map.getBounds().toArray().flat(),\r\n      });\r\n\r\n      document.addEventListener('keydown', this.handleEscape);\r\n    });\r\n\r\n    // Add layers/sources when changing the style\r\n    this.map.on('style.load', () => {\r\n      const { markers, ready } = this.state;\r\n\r\n      if (!ready) return;\r\n\r\n      this.mapRemovePopups();\r\n\r\n      if (utils.generic.isFunction(onChange)) {\r\n        utils.map.addDefaultSources(this.map);\r\n        utils.map.addDefaultLayers(this.map, layers);\r\n        onChange(markers);\r\n      }\r\n    });\r\n\r\n    this.map.on('zoomend', () => {\r\n      const { ready, level, markers } = this.state;\r\n      const { onLevelChange, levels, locations, locationsFiltered, levelOverride } = this.props;\r\n\r\n      if (!ready) return;\r\n      if (!utils.generic.isFunction(onLevelChange)) return;\r\n\r\n      const newLevel = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n\r\n      if (level === newLevel || levelOverride) {\r\n        this.mapAddMarkers(this.getLocations(locations, locationsFiltered), markers);\r\n      }\r\n      if (level !== newLevel) {\r\n        onLevelChange({ level: newLevel });\r\n      }\r\n    });\r\n\r\n    this.map.on('dragend', () => {\r\n      const { ready, boundingBox, markers } = this.state;\r\n      const { locations, locationsFiltered, showMarkers } = this.props;\r\n\r\n      if (!ready || !showMarkers) return;\r\n\r\n      const newBoundingBox = this.map.getBounds().toArray().flat();\r\n\r\n      if (boundingBox && !isEqual(boundingBox, newBoundingBox)) {\r\n        this.setState({ boundingBox: newBoundingBox });\r\n        this.mapAddMarkers(this.getLocations(locations, locationsFiltered), markers);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove all markers\r\n    this.mapRemoveMarkers();\r\n\r\n    // remove MapBox map instance\r\n    if (utils.generic.isFunction(this.map && this.map.remove)) {\r\n      this.map.remove();\r\n    }\r\n\r\n    // remove all DOM nodes used for HTML tooltip\r\n    if (this.props.tooltipComponent) {\r\n      const tooltipContainer = document.getElementById(this.state.tooltipContainerId);\r\n      const tooltipNode = this.tooltipElem;\r\n      const tooltipParent = this.tooltipElem.parentNode;\r\n\r\n      if (tooltipNode && tooltipParent) {\r\n        tooltipParent.removeChild(tooltipNode);\r\n      }\r\n\r\n      if (tooltipContainer) {\r\n        tooltipContainer.remove();\r\n      }\r\n    }\r\n\r\n    document.removeEventListener('keydown', this.handleEscape);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { markers, ready } = this.state;\r\n    const {\r\n      locations,\r\n      locationsFiltered,\r\n      activeMarkers,\r\n      allowScrollZoom,\r\n      showMarkers,\r\n      center,\r\n      zoom,\r\n      fitBounds,\r\n      fitBoundsOptions,\r\n      onChange,\r\n      reCenter,\r\n    } = this.props;\r\n\r\n    const mapLocations = sortBy(this.getLocations(locations, locationsFiltered), ['id']);\r\n    const mapPrevLocations = sortBy(this.getLocations(prevProps.locations, prevProps.locationsFiltered), ['id']);\r\n\r\n    const isNewLocations = !isEqual(\r\n      mapPrevLocations.map((l) => l && l.id),\r\n      mapLocations.map((l) => l && l.id)\r\n    );\r\n    const isUpdatedLocations = !isEqual(mapPrevLocations, mapLocations);\r\n    const isUpdatedActiveMarkers = !isEqual(prevProps.activeMarkers, activeMarkers);\r\n    const isNewPropsShowMarkers = !isEqual(prevProps.showMarkers, showMarkers);\r\n    const isNewPropsFitBounds = !isEqual(prevProps.fitBounds, fitBounds);\r\n    const isNewPropsAllowScroll = !isEqual(prevProps.allowScrollZoom, allowScrollZoom);\r\n\r\n    if (isNewPropsAllowScroll) {\r\n      if (allowScrollZoom) {\r\n        this.map.scrollZoom.enable();\r\n      } else {\r\n        this.map.scrollZoom.disable();\r\n      }\r\n    }\r\n\r\n    // whenever anything changes in the locations (ex: new/removed locations or any property has changed)\r\n    // reset the markers\r\n    if (isUpdatedLocations || isNewPropsShowMarkers || isNewPropsFitBounds) {\r\n      this.mapRemovePopups();\r\n      this.mapRemoveMarkers();\r\n\r\n      if (showMarkers) {\r\n        this.mapAddMarkers(mapLocations, []);\r\n      }\r\n\r\n      // if locations have been added or removed\r\n      if (isNewLocations) {\r\n        // executed onChange callback (ex: to add clusters sources/layers)\r\n        if (ready && utils.generic.isValidArray(mapLocations, true) && utils.generic.isFunction(onChange)) {\r\n          onChange(markers);\r\n        }\r\n      }\r\n\r\n      // re-center the map on the new/updated array of markers\r\n      if (fitBounds) {\r\n        this.map.fitBounds(this.getBounds(mapLocations), fitBoundsOptions);\r\n      } else {\r\n        if (!reCenter) return;\r\n        this.map.flyTo({ center, zoom });\r\n      }\r\n    }\r\n\r\n    // if active marker(s) was updated\r\n    if (isUpdatedActiveMarkers && showMarkers) {\r\n      markers.forEach((marker) => {\r\n        marker.getElement().classList.toggle('active', activeMarkers.includes(marker.location.id));\r\n      });\r\n    }\r\n\r\n    if (prevProps.center !== center || prevProps.zoom !== zoom) {\r\n      const newCenter = prevProps.center !== center ? center : prevProps.center;\r\n      const newZoom = prevProps.zoom !== zoom ? zoom : prevProps.zoom;\r\n\r\n      this.map.flyTo({\r\n        ...(prevProps.zoom !== zoom && { zoom: newZoom }),\r\n        ...(prevProps.center !== center && { center: newCenter }),\r\n      });\r\n    }\r\n  }\r\n\r\n  getBounds = (locations) => {\r\n    const bounds = new mapboxgl.LngLatBounds();\r\n\r\n    const boundingBox = locations.reduce((acc, l) => {\r\n      let lngLat;\r\n      try {\r\n        lngLat = new mapboxgl.LngLat(l.lng, l.lat);\r\n      } catch {\r\n        console.error('MapBox: invalid lngLat provided', { id: l.id, lat: l.lat, lng: l.lng });\r\n      }\r\n\r\n      return lngLat && lngLat.lng && lngLat.lat ? bounds.extend([lngLat.lng, lngLat.lat]) : acc;\r\n    }, {});\r\n\r\n    return !isEmpty(boundingBox) ? boundingBox : config.mapbox.location.country.boundingBox.US;\r\n  };\r\n\r\n  getLocations = (locations, locationsFiltered) => {\r\n    const locs = utils.generic.isValidArray(locations, true) ? locations : [];\r\n    const locsFiltered = utils.generic.isValidArray(locationsFiltered, true) ? locationsFiltered : [];\r\n    const locsReturned = locsFiltered.length > 0 ? locsFiltered : locs;\r\n\r\n    return locsReturned.filter((l) => l.lat && l.lng && l.locationsFound > 0);\r\n  };\r\n\r\n  mapAddPopup = (marker) => {\r\n    const popup = new mapboxgl.Popup({ offset: 40 })\r\n      .setLngLat([marker.location.lng, marker.location.lat])\r\n      .setDOMContent(this.tooltipElem)\r\n      .addTo(this.map);\r\n\r\n    this.setState({ popups: [popup] });\r\n  };\r\n\r\n  mapRemovePopups = () => {\r\n    this.state.popups.forEach((popup) => {\r\n      if (utils.generic.isFunction(popup.remove)) {\r\n        popup.remove();\r\n      }\r\n    });\r\n\r\n    this.setState({ popups: [] });\r\n  };\r\n\r\n  createDoughnutChart = ({ location }) => {\r\n    const { level } = this.state;\r\n    const { doughnutSizes, levelOverride } = this.props;\r\n    const { properties = {} } = location;\r\n    const { data = [], backgroundColor = [] } = properties;\r\n\r\n    return (\r\n      <Chart\r\n        type=\"doughnut\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              borderWidth: 1,\r\n              data,\r\n              backgroundColor,\r\n            },\r\n          ],\r\n        }}\r\n        options={config.ui.chart.doughnut}\r\n        width={doughnutSizes[levelOverride || level]}\r\n        height={doughnutSizes[levelOverride || level]}\r\n      />\r\n    );\r\n  };\r\n\r\n  setDoughnutMarkers = (locations, markers) => {\r\n    if (!locations) return;\r\n\r\n    const markersArray = [];\r\n\r\n    utils.map.parseLocations(locations).forEach((location) => {\r\n      const tooltipContainer = document.createElement('div');\r\n      const ChartComponent = this.createDoughnutChart;\r\n      ReactDOM.render(<ChartComponent location={location} />, tooltipContainer);\r\n      const marker = new mapboxgl.Marker(tooltipContainer).setLngLat([location.lng, location.lat]);\r\n      const markerExists = markers.find((m) => isEqual(m.getLngLat(), marker.getLngLat()));\r\n\r\n      if (markerExists) return;\r\n\r\n      // adding original location object (id, lat, lng, etc...) to the marker\r\n      marker.location = location;\r\n\r\n      try {\r\n        marker.addTo(this.map);\r\n      } catch {}\r\n\r\n      markersArray.push(marker);\r\n    });\r\n\r\n    return markersArray;\r\n  };\r\n\r\n  mapAddMarkers = (locations, markers) => {\r\n    const { onChange, markerType, doughnutSizes, levels, levelOverride } = this.props;\r\n    const newLevel = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n    const newBoundingBox = this.map.getBounds();\r\n\r\n    this.setState({ level: newLevel });\r\n\r\n    const filteredLocations = locations.filter((location) => newBoundingBox.contains(new mapboxgl.LngLat(location.lng, location.lat)));\r\n\r\n    const showDoughnutMarkers =\r\n      markerType === config.mapbox.markerType.doughnut && Object.keys(doughnutSizes).includes(levelOverride || newLevel);\r\n\r\n    const newMarkers = showDoughnutMarkers\r\n      ? this.setDoughnutMarkers(filteredLocations, markers)\r\n      : utils.map.setMarkers(this.map, filteredLocations, markers);\r\n\r\n    // saving the marker instances to state to keep access to MapBox remove() method\r\n    this.setState({ markers: [...markers, ...newMarkers] }, () => {\r\n      if (utils.generic.isFunction(onChange)) {\r\n        onChange(this.state.markers);\r\n      }\r\n    });\r\n\r\n    this.mapParseMarkers(newMarkers);\r\n  };\r\n\r\n  mapRemoveMarkers = () => {\r\n    this.state.markers.forEach((marker) => {\r\n      if (utils.generic.isFunction(marker.remove)) {\r\n        marker.remove();\r\n      }\r\n    });\r\n\r\n    this.setState({ markers: [] });\r\n  };\r\n\r\n  mapParseMarkers = (markers) => {\r\n    markers.forEach((marker) => {\r\n      marker._element.addEventListener('click', this.mapClickMarker(marker));\r\n    });\r\n  };\r\n\r\n  mapClickMarker = (marker) => (event) => {\r\n    const { onClickMarker, tooltipComponent } = this.props;\r\n\r\n    // prevent marker click from bubbling up to the map (which closes popup meant to be opened)\r\n    event.stopPropagation();\r\n\r\n    this.mapRemovePopups();\r\n\r\n    const markers = this.map.getContainer().querySelectorAll('.mapboxgl-marker');\r\n    const location = marker.location || {};\r\n\r\n    markers.forEach((el) => {\r\n      el.classList.remove('active');\r\n    });\r\n\r\n    marker.getElement().classList.add('active');\r\n\r\n    // update the tooltip state\r\n    // after the update, fetch the re-rendered content from the React Portal\r\n    if (tooltipComponent) {\r\n      this.setState({ tooltip: location }, () => {\r\n        if (this.tooltipElem) {\r\n          this.mapAddPopup(marker);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (utils.generic.isFunction(onClickMarker)) {\r\n      onClickMarker(marker.location);\r\n    }\r\n\r\n    if (this.props.allowMarkerClickZoom) {\r\n      this.map.flyTo({\r\n        center: marker._lngLat,\r\n        zoom: Math.max(this.map.getZoom(), this.props.markerMaxZoom),\r\n      });\r\n    }\r\n  };\r\n\r\n  mapToggleLayer = (layerGroupKey) => {\r\n    const layers = { ...this.state.layers };\r\n    const layerGroup = layers[layerGroupKey];\r\n    const { visible, none } = utils.map.visibility;\r\n\r\n    layerGroup.visibility = layerGroup.visibility === visible ? none : visible;\r\n    layerGroup.config.forEach((c) => {\r\n      this.map.setLayoutProperty(c.id, 'visibility', layerGroup.visibility);\r\n    });\r\n\r\n    this.setState({\r\n      layers,\r\n    });\r\n  };\r\n\r\n  mapToggleFullScreen = () => {\r\n    this.setState({ fullscreen: !this.state.fullscreen }, () => {\r\n      if (this.map && utils.generic.isFunction(this.map.resize)) {\r\n        this.map.resize();\r\n      }\r\n    });\r\n  };\r\n\r\n  mapToggleSatellite = () => {\r\n    this.setState({ showSatelliteView: !this.state.showSatelliteView }, () => {\r\n      this.map.setStyle(this.state.showSatelliteView ? config.mapbox.styles.satellite : config.mapbox.styles.street);\r\n    });\r\n  };\r\n\r\n  handleEscape = (event) => {\r\n    if (event.keyCode === KEYCODE.Escape) {\r\n      event.preventDefault();\r\n\r\n      if (this.state.fullscreen) {\r\n        this.setState({ fullscreen: false }, () => {\r\n          if (this.map && utils.generic.isFunction(this.map.resize)) {\r\n            this.map.resize();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  levelLoaderComponent = () => {\r\n    if (!this.map) return null;\r\n\r\n    const { isLoading } = this.props;\r\n\r\n    return <Loader visible={isLoading} label={utils.string.t('app.loading_locations')} absolute />;\r\n  };\r\n\r\n  render() {\r\n    const { layers, tooltip, ready, fullscreen, tooltipContainerId, showSatelliteView } = this.state;\r\n    const {\r\n      id,\r\n      height,\r\n      allowFullscreen,\r\n      overflow,\r\n      placementOverflow,\r\n      responsive,\r\n      buttons,\r\n      header,\r\n      locations,\r\n      tooltipComponent,\r\n      overlay,\r\n      classes,\r\n      allowSatelliteView,\r\n      mapKey,\r\n      onLevelChange,\r\n      nestedClasses,\r\n      levels,\r\n      levelOverride,\r\n    } = this.props;\r\n\r\n    const isOverlayVisible = overlay && overlay.visible;\r\n\r\n    const classesMapContainer = {\r\n      [classes.root]: !fullscreen,\r\n      [classes.overflow]: !fullscreen && overflow,\r\n      [classes.placementOverflow]: !fullscreen && placementOverflow,\r\n      [classes.responsive]: !fullscreen && responsive,\r\n      [classes.fullScreen]: fullscreen,\r\n    };\r\n\r\n    const classesMap = {\r\n      [classes.map]: true,\r\n      [nestedClasses.map]: Boolean(nestedClasses.map),\r\n      [classes.mapOverflow]: overflow,\r\n      [classes.mapOverlay]: isOverlayVisible,\r\n    };\r\n\r\n    if (this.map) {\r\n      this.map.resize();\r\n    }\r\n\r\n    const LevelLoaderComponent = this.levelLoaderComponent;\r\n    const TooltipComponent = tooltipComponent;\r\n\r\n    return (\r\n      <Fade in={ready}>\r\n        <div className={classnames(classesMapContainer)}>\r\n          <MapBoxOverlay\r\n            locations={locations}\r\n            layers={layers}\r\n            overflow={overflow}\r\n            fullscreen={allowFullscreen ? fullscreen : false}\r\n            buttons={buttons}\r\n            header={header}\r\n            showSatelliteView={showSatelliteView}\r\n            handleToggleSatellite={allowSatelliteView ? this.mapToggleSatellite : undefined}\r\n            handleToggleLayer={this.mapToggleLayer}\r\n            handleToggleFullScreen={allowFullscreen ? this.mapToggleFullScreen : undefined}\r\n          />\r\n\r\n          {mapKey && <ChartKey {...mapKey} />}\r\n\r\n          {this.map && utils.generic.isFunction(onLevelChange) && (\r\n            <>\r\n              <ChartZoomLevel\r\n                disabled={locations.length === 0}\r\n                onLevelChange={onLevelChange}\r\n                levels={levels}\r\n                level={utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()))}\r\n                levelOverride={levelOverride}\r\n              />\r\n              <LevelLoaderComponent />\r\n            </>\r\n          )}\r\n\r\n          {tooltipComponent && (\r\n            <MapBoxTooltipPortal id={tooltipContainerId} elem={this.tooltipElem}>\r\n              {!isEmpty(tooltip) && <TooltipComponent tooltip={tooltip} />}\r\n            </MapBoxTooltipPortal>\r\n          )}\r\n\r\n          <div\r\n            id={`map-${id}`}\r\n            style={{ height: fullscreen ? null : height }}\r\n            className={classnames('map', 'mapboxgl-map', classnames(classesMap))}\r\n          >\r\n            {isOverlayVisible && <div className={classes.overlay}>{overlay.text}</div>}\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(MapBox);\r\n"]},"metadata":{},"sourceType":"module"}