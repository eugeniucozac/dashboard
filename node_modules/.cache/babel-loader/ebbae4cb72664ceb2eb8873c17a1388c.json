{"ast":null,"code":"import _createForOfIteratorHelper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\RiskData\\\\RiskData.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useFormContext, useWatch } from 'react-hook-form';\nimport startCase from 'lodash/startCase';\nimport toLower from 'lodash/toLower';\nimport get from 'lodash/get'; // app\n\nimport styles from './RiskData.styles';\nimport { FormGrid, Tooltip } from 'components';\nimport * as utils from 'utils';\nimport { RISK_DEFINITION_GENERAL } from 'consts'; // mui\n\nimport { Box, Grid, makeStyles, Typography, IconButton } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar RiskData = function RiskData(_ref) {\n  _s();\n\n  var handleStep = _ref.handleStep,\n      groups = _ref.groups,\n      definitionsFields = _ref.definitionsFields,\n      riskDataValues = _ref.riskDataValues,\n      isReQuote = _ref.isReQuote;\n  var classes = makeStyles(styles, {\n    name: 'RiskData'\n  })();\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control;\n\n  var riskValues = useWatch({\n    control: control\n  });\n\n  var checkIsFieldEdited = function checkIsFieldEdited(name) {\n    var previousValue = get(riskDataValues, \"\".concat(name));\n    var currentValue = get(riskValues, \"\".concat(name)); // TODO check array, multi autocomplete value vs BE values\n\n    if (previousValue || currentValue) return utils.generic.isValidObject(currentValue) ? \"\".concat(previousValue) !== \"\".concat(currentValue === null || currentValue === void 0 ? void 0 : currentValue.value) : \"\".concat(previousValue) !== \"\".concat(currentValue) || false;\n    return false;\n  };\n\n  var fieldEditedValues = function fieldEditedValues(name, field) {\n    var previousValue = get(riskDataValues, \"\".concat(name));\n    var currentValue = get(riskValues, \"\".concat(name));\n    return previousValue || currentValue ? /*#__PURE__*/_jsxDEV(Box, {\n      minWidth: 150,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 1,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"left\",\n            component: \"span\",\n            children: [utils.string.t('products.wasLabel'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"left\",\n            component: \"span\",\n            className: classes.quoteValue,\n            children: previousValue || previousValue === false ? renderValue(field, previousValue) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 50,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 3,\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"left\",\n            component: \"span\",\n            children: [utils.string.t('products.nowLabel'), \":\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 9,\n          align: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            align: \"left\",\n            component: \"span\",\n            className: classes.quoteValue,\n            children: currentValue || currentValue === false ? renderValue(field, currentValue) : null\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this) : null;\n  };\n\n  var renderValue = function renderValue(field, v) {\n    var prefix = '';\n    var suffix = '';\n    var value = typeof v !== 'undefined' ? v : riskValues[field.name];\n    var newValue = value;\n\n    switch (field.type) {\n      case 'number':\n        newValue = utils.string.t(\"format.number\", {\n          value: {\n            number: value\n          }\n        });\n        break;\n\n      case 'toggle':\n        newValue = value === 'true' || value === true ? utils.string.t('app.yes') : value === 'false' || value === false ? utils.string.t('app.no') : '';\n        break;\n\n      case 'datepicker':\n        newValue = utils.string.t(\"format.date\", {\n          value: {\n            date: value\n          }\n        });\n        break;\n\n      case 'select':\n        {\n          var options = utils.generic.isValidArray(field.options, true) ? field.options : [];\n          var option = options.find(function (o) {\n            return String(o.value) === String(value);\n          }) || {};\n          newValue = (option === null || option === void 0 ? void 0 : option.label) !== 'Select...' ? option.label : '';\n          break;\n        }\n\n      case 'radio':\n        {\n          newValue = value || '';\n          break;\n        }\n\n      case 'autocompletemui':\n        {\n          var _options = utils.generic.isValidArray(field.options, true) ? field.options : [];\n\n          var _option = _options.find(function (o) {\n            return String(o.value) === String(value);\n          }) || {};\n\n          newValue = utils.generic.isValidObject(value) ? value === null || value === void 0 ? void 0 : value.label : (_option === null || _option === void 0 ? void 0 : _option.label) ? _option === null || _option === void 0 ? void 0 : _option.label : value;\n          break;\n        }\n\n      case 'autocompletemuiAsync':\n        {\n          if (utils.generic.isValidArray(value)) {\n            newValue = '';\n\n            var _iterator = _createForOfIteratorHelper(value),\n                _step;\n\n            try {\n              for (_iterator.s(); !(_step = _iterator.n()).done;) {\n                var singleValue = _step.value;\n                newValue = newValue + \"\".concat((singleValue === null || singleValue === void 0 ? void 0 : singleValue.label) || singleValue, \",\");\n              }\n            } catch (err) {\n              _iterator.e(err);\n            } finally {\n              _iterator.f();\n            }\n\n            newValue = newValue.slice(0, -1);\n          } else newValue = (value === null || value === void 0 ? void 0 : value.label) || value;\n\n          break;\n        }\n\n      default:\n        break;\n    } // add prefix/suffix for specific fields\n\n\n    if (field.name === 'distanceToCoast' && value) {\n      suffix = \" \".concat(utils.string.t('map.unit.miles'));\n    } // the extra <span /> is used to prevent Material-UI complaining about not receiving a ReactNode\n    // this happens if the value is true/false/undefined/null...\n    // this workaround prevents errors in case some invalid values fall through the cracks\n\n\n    return utils.generic.isValidObject(newValue) ? null : /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [prefix, newValue, suffix]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGrid, {\n    container: true,\n    spacing: 3,\n    \"data-testid\": \"risk-data\",\n    children: groups.map(function (group, index) {\n      var fields = utils.risk.getFieldsByGroup(definitionsFields, group) || [];\n      return group === RISK_DEFINITION_GENERAL ? /*#__PURE__*/_jsxDEV(FormGrid, {\n        item: true,\n        xs: 12,\n        \"data-testid\": \"risk-data-\".concat(group),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            className: classes.cardTitle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              className: classes.cardTitleHeading,\n              children: startCase(toLower(group))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleStep(index),\n              size: \"small\",\n              \"aria-label\": \"edit\",\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                className: classes.editIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 1,\n              children: fields.map(function (field) {\n                var value = riskValues[field.name] || null;\n                var condition = utils.risk.getCondition(field, fields);\n                var refValueCondition = condition && riskValues && get(riskValues, \"\".concat(condition.name));\n                var isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\n                var isFieldEdited = isReQuote && checkIsFieldEdited(field.name);\n                var isHidden = utils.risk.isHiddenField(field);\n                return !isHidden ? condition === undefined || condition && isConditionValid ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    spacing: 1,\n                    children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 6,\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        component: \"span\",\n                        children: field.label\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 170,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 6,\n                      classes: {\n                        root: classes.flexGrid\n                      },\n                      children: [/*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        component: \"div\",\n                        style: {\n                          fontWeight: 'bold'\n                        },\n                        classes: {\n                          root: isFieldEdited ? classes.edited : ''\n                        },\n                        children: renderValue(field)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 175,\n                        columnNumber: 31\n                      }, _this), isFieldEdited ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                        title: fieldEditedValues(field.name, field),\n                        placement: \"top\",\n                        rich: true,\n                        style: {\n                          marginLeft: 5\n                        },\n                        children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n                          fontSize: \"small\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 185,\n                          columnNumber: 35\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 184,\n                        columnNumber: 33\n                      }, _this) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 29\n                    }, _this)]\n                  }, field.label, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 27\n                  }, _this)\n                }, \"\".concat(field.label, \"-\").concat(value), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 25\n                }, _this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4\n                }, \"\".concat(field.label, \"-\").concat(value), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 25\n                }, _this) : null;\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 156,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, _this)\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 11\n      }, _this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n        item: true,\n        xs: 12,\n        sm: 6,\n        md: 4,\n        \"data-testid\": \"risk-data-\".concat(group),\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.card,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            className: classes.cardTitle,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h3\",\n              className: classes.cardTitleHeading,\n              children: startCase(toLower(group))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(IconButton, {\n              onClick: handleStep(index),\n              size: \"small\",\n              \"aria-label\": \"edit\",\n              children: /*#__PURE__*/_jsxDEV(EditIcon, {\n                className: classes.editIcon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 203,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            p: 2,\n            children: fields.filter(function (field) {\n              return Boolean(field.name) && field.type !== 'label';\n            }).map(function (field, idx) {\n              var value = riskValues[field.name] || null;\n              var isArrayColumn = utils.risk.isArrayColumn(field) && utils.generic.isValidArray(value);\n              var isArrayTable = utils.risk.isArrayTable(field) && utils.generic.isValidArray(value);\n              var isObject = utils.risk.isObject(field) && utils.generic.isValidObject(value);\n              var valueArray = isArrayColumn || isArrayTable ? value : [value];\n              var arrayKey = isArrayColumn || isArrayTable ? 'arrayItemDef' : isObject ? 'objectDef' : '';\n              var condition = utils.risk.getCondition(field, fields);\n              var refValueCondition = condition && riskValues && get(riskValues, \"\".concat(condition.name));\n              var isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\n\n              if (isArrayColumn || isArrayTable || isObject) {\n                return condition === undefined || condition && isConditionValid ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                  spacing: 2,\n                  container: true,\n                  children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: field.label\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 229,\n                    columnNumber: 27\n                  }, _this), valueArray.map(function (v, index) {\n                    return /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        className: (valueArray === null || valueArray === void 0 ? void 0 : valueArray.length) > 1 ? \"\".concat(classes.card, \" \").concat(classes.cardArray) : '',\n                        children: field[arrayKey].filter(function (f) {\n                          return Boolean(f.name);\n                        }).map(function (arrayField) {\n                          var fieldName = isObject ? \"\".concat(field.name, \".\").concat(arrayField.name) : \"\".concat(field.name, \"[\").concat(index, \"].\").concat(arrayField.name);\n                          var isFieldEdited = isReQuote && checkIsFieldEdited(fieldName);\n                          var isHidden = utils.risk.isHiddenField(arrayField);\n                          var isTitle = utils.risk.isTitleField(arrayField);\n                          return !isHidden || isTitle ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                            spacing: 1,\n                            container: true,\n                            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                              item: true,\n                              xs: 6,\n                              children: /*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"body2\",\n                                component: \"span\",\n                                children: arrayField.label\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 251,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 250,\n                              columnNumber: 43\n                            }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                              item: true,\n                              xs: 6,\n                              classes: {\n                                root: classes.flexGrid\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                                variant: \"body2\",\n                                component: \"span\",\n                                style: {\n                                  fontWeight: 'bold'\n                                },\n                                classes: {\n                                  root: isFieldEdited ? classes.edited : ''\n                                },\n                                children: renderValue(arrayField, v[arrayField.name])\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 256,\n                                columnNumber: 45\n                              }, _this), isFieldEdited ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                                title: fieldEditedValues(fieldName, arrayField),\n                                placement: \"top\",\n                                rich: true,\n                                style: {\n                                  marginLeft: 5\n                                },\n                                children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n                                  fontSize: \"small\"\n                                }, void 0, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 271,\n                                  columnNumber: 49\n                                }, _this)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 265,\n                                columnNumber: 47\n                              }, _this) : null]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 255,\n                              columnNumber: 43\n                            }, _this)]\n                          }, \"\".concat(arrayField.name, \"-\").concat(arrayField.label), true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 249,\n                            columnNumber: 41\n                          }, _this) : null;\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 236,\n                        columnNumber: 33\n                      }, _this)\n                    }, \"key-\".concat(index), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 31\n                    }, _this);\n                  })]\n                }, \"\".concat(field.label, \"-\").concat(field.label), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 25\n                }, _this) : null;\n              }\n\n              var isFieldEdited = isReQuote && checkIsFieldEdited(field.name);\n              var isHidden = utils.risk.isHiddenField(field);\n              return !isHidden && (condition === undefined || condition && isConditionValid) ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"span\",\n                    children: field.label || field.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 291,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 290,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  classes: {\n                    root: classes.flexGrid\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    component: \"span\",\n                    style: {\n                      fontWeight: 'bold'\n                    },\n                    classes: {\n                      root: isFieldEdited ? classes.edited : ''\n                    },\n                    children: renderValue(field)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 27\n                  }, _this), isFieldEdited ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: fieldEditedValues(field.name, field),\n                    placement: \"top\",\n                    rich: true,\n                    style: {\n                      marginLeft: 5\n                    },\n                    children: /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n                      fontSize: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 306,\n                      columnNumber: 31\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 305,\n                    columnNumber: 29\n                  }, _this) : null]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 25\n                }, _this)]\n              }, \"\".concat(field.name, \"-\").concat(field.label), true, {\n                fileName: _jsxFileName,\n                lineNumber: 289,\n                columnNumber: 23\n              }, _this) : null;\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 202,\n          columnNumber: 13\n        }, _this)\n      }, group, false, {\n        fileName: _jsxFileName,\n        lineNumber: 201,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 140,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RiskData, \"f3l13BDua8vLZIpbbNY8SEWSd44=\", false, function () {\n  return [useFormContext, useWatch];\n});\n\n_c = RiskData;\nexport default RiskData;\n\nvar _c;\n\n$RefreshReg$(_c, \"RiskData\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/RiskData/RiskData.js"],"names":["useFormContext","useWatch","startCase","toLower","get","styles","FormGrid","Tooltip","utils","RISK_DEFINITION_GENERAL","Box","Grid","makeStyles","Typography","IconButton","EditIcon","InfoOutlinedIcon","RiskData","handleStep","groups","definitionsFields","riskDataValues","isReQuote","classes","name","control","riskValues","checkIsFieldEdited","previousValue","currentValue","generic","isValidObject","value","fieldEditedValues","field","string","t","quoteValue","renderValue","v","prefix","suffix","newValue","type","number","date","options","isValidArray","option","find","o","String","label","singleValue","slice","map","group","index","fields","risk","getFieldsByGroup","card","cardTitle","cardTitleHeading","editIcon","condition","getCondition","refValueCondition","isConditionValid","isFieldEdited","isHidden","isHiddenField","undefined","root","flexGrid","fontWeight","edited","marginLeft","filter","Boolean","idx","isArrayColumn","isArrayTable","isObject","valueArray","arrayKey","length","cardArray","f","arrayField","fieldName","isTitle","isTitleField","title"],"mappings":"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","sourcesContent":["import { useFormContext, useWatch } from 'react-hook-form';\r\nimport startCase from 'lodash/startCase';\r\nimport toLower from 'lodash/toLower';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './RiskData.styles';\r\nimport { FormGrid, Tooltip } from 'components';\r\nimport * as utils from 'utils';\r\nimport { RISK_DEFINITION_GENERAL } from 'consts';\r\n\r\n// mui\r\nimport { Box, Grid, makeStyles, Typography, IconButton } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nconst RiskData = ({ handleStep, groups, definitionsFields, riskDataValues, isReQuote }) => {\r\n  const classes = makeStyles(styles, { name: 'RiskData' })();\r\n  const { control } = useFormContext();\r\n\r\n  const riskValues = useWatch({\r\n    control,\r\n  });\r\n\r\n  const checkIsFieldEdited = (name) => {\r\n    const previousValue = get(riskDataValues, `${name}`);\r\n    const currentValue = get(riskValues, `${name}`);\r\n\r\n    // TODO check array, multi autocomplete value vs BE values\r\n    if (previousValue || currentValue)\r\n      return utils.generic.isValidObject(currentValue)\r\n        ? `${previousValue}` !== `${currentValue?.value}`\r\n        : `${previousValue}` !== `${currentValue}` || false;\r\n\r\n    return false;\r\n  };\r\n\r\n  const fieldEditedValues = (name, field) => {\r\n    const previousValue = get(riskDataValues, `${name}`);\r\n    const currentValue = get(riskValues, `${name}`);\r\n\r\n    return previousValue || currentValue ? (\r\n      <Box minWidth={150}>\r\n        <Grid container spacing={1}>\r\n          <Grid item xs={3} align=\"left\">\r\n            <Typography variant=\"body2\" align=\"left\" component=\"span\">\r\n              {utils.string.t('products.wasLabel')}:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={9} align=\"left\">\r\n            <Typography variant=\"body2\" align=\"left\" component=\"span\" className={classes.quoteValue}>\r\n              {previousValue || previousValue === false ? renderValue(field, previousValue) : null}\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={3} align=\"left\">\r\n            <Typography variant=\"body2\" align=\"left\" component=\"span\">\r\n              {utils.string.t('products.nowLabel')}:\r\n            </Typography>\r\n          </Grid>\r\n          <Grid item xs={9} align=\"left\">\r\n            <Typography variant=\"body2\" align=\"left\" component=\"span\" className={classes.quoteValue}>\r\n              {currentValue || currentValue === false ? renderValue(field, currentValue) : null}\r\n            </Typography>\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n    ) : null;\r\n  };\r\n\r\n  const renderValue = (field, v) => {\r\n    let prefix = '';\r\n    let suffix = '';\r\n    const value = typeof v !== 'undefined' ? v : riskValues[field.name];\r\n    let newValue = value;\r\n\r\n    switch (field.type) {\r\n      case 'number':\r\n        newValue = utils.string.t(`format.number`, { value: { number: value } });\r\n        break;\r\n      case 'toggle':\r\n        newValue =\r\n          value === 'true' || value === true\r\n            ? utils.string.t('app.yes')\r\n            : value === 'false' || value === false\r\n            ? utils.string.t('app.no')\r\n            : '';\r\n        break;\r\n      case 'datepicker':\r\n        newValue = utils.string.t(`format.date`, { value: { date: value } });\r\n        break;\r\n      case 'select': {\r\n        const options = utils.generic.isValidArray(field.options, true) ? field.options : [];\r\n        const option = options.find((o) => String(o.value) === String(value)) || {};\r\n\r\n        newValue = option?.label !== 'Select...' ? option.label : '';\r\n        break;\r\n      }\r\n      case 'radio': {\r\n        newValue = value || '';\r\n        break;\r\n      }\r\n      case 'autocompletemui': {\r\n        const options = utils.generic.isValidArray(field.options, true) ? field.options : [];\r\n        const option = options.find((o) => String(o.value) === String(value)) || {};\r\n\r\n        newValue = utils.generic.isValidObject(value) ? value?.label : option?.label ? option?.label : value;\r\n        break;\r\n      }\r\n      case 'autocompletemuiAsync': {\r\n        if (utils.generic.isValidArray(value)) {\r\n          newValue = '';\r\n          for (const singleValue of value) {\r\n            newValue = newValue + `${singleValue?.label || singleValue},`;\r\n          }\r\n          newValue = newValue.slice(0, -1);\r\n        } else newValue = value?.label || value;\r\n        break;\r\n      }\r\n      default:\r\n        break;\r\n    }\r\n\r\n    // add prefix/suffix for specific fields\r\n    if (field.name === 'distanceToCoast' && value) {\r\n      suffix = ` ${utils.string.t('map.unit.miles')}`;\r\n    }\r\n    // the extra <span /> is used to prevent Material-UI complaining about not receiving a ReactNode\r\n    // this happens if the value is true/false/undefined/null...\r\n    // this workaround prevents errors in case some invalid values fall through the cracks\r\n    return utils.generic.isValidObject(newValue) ? null : (\r\n      <span>\r\n        {prefix}\r\n        {newValue}\r\n        {suffix}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <FormGrid container spacing={3} data-testid=\"risk-data\">\r\n      {groups.map((group, index) => {\r\n        const fields = utils.risk.getFieldsByGroup(definitionsFields, group) || [];\r\n\r\n        return group === RISK_DEFINITION_GENERAL ? (\r\n          <FormGrid item xs={12} data-testid={`risk-data-${group}`} key={group}>\r\n            <Box className={classes.card}>\r\n              <Box p={2} className={classes.cardTitle}>\r\n                <Typography variant=\"h3\" className={classes.cardTitleHeading}>\r\n                  {startCase(toLower(group))}\r\n                </Typography>\r\n                <IconButton onClick={handleStep(index)} size=\"small\" aria-label=\"edit\">\r\n                  <EditIcon className={classes.editIcon} />\r\n                </IconButton>\r\n              </Box>\r\n              <Box p={2}>\r\n                <FormGrid container spacing={1}>\r\n                  {fields.map((field) => {\r\n                    const value = riskValues[field.name] || null;\r\n                    const condition = utils.risk.getCondition(field, fields);\r\n                    const refValueCondition = condition && riskValues && get(riskValues, `${condition.name}`);\r\n                    const isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\r\n                    const isFieldEdited = isReQuote && checkIsFieldEdited(field.name);\r\n                    const isHidden = utils.risk.isHiddenField(field);\r\n\r\n                    return !isHidden ? (\r\n                      condition === undefined || (condition && isConditionValid) ? (\r\n                        <FormGrid item xs={12} sm={4} key={`${field.label}-${value}`}>\r\n                          <FormGrid container spacing={1} key={field.label}>\r\n                            <FormGrid item xs={6}>\r\n                              <Typography variant=\"body2\" component=\"span\">\r\n                                {field.label}\r\n                              </Typography>\r\n                            </FormGrid>\r\n                            <FormGrid item xs={6} classes={{ root: classes.flexGrid }}>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                component=\"div\"\r\n                                style={{ fontWeight: 'bold' }}\r\n                                classes={{ root: isFieldEdited ? classes.edited : '' }}\r\n                              >\r\n                                {renderValue(field)}\r\n                              </Typography>\r\n                              {isFieldEdited ? (\r\n                                <Tooltip title={fieldEditedValues(field.name, field)} placement=\"top\" rich style={{ marginLeft: 5 }}>\r\n                                  <InfoOutlinedIcon fontSize=\"small\" />\r\n                                </Tooltip>\r\n                              ) : null}\r\n                            </FormGrid>\r\n                          </FormGrid>\r\n                        </FormGrid>\r\n                      ) : (\r\n                        <FormGrid item xs={12} sm={4} key={`${field.label}-${value}`} />\r\n                      )\r\n                    ) : null;\r\n                  })}\r\n                </FormGrid>\r\n              </Box>\r\n            </Box>\r\n          </FormGrid>\r\n        ) : (\r\n          <FormGrid item xs={12} sm={6} md={4} data-testid={`risk-data-${group}`} key={group}>\r\n            <Box className={classes.card}>\r\n              <Box p={2} className={classes.cardTitle}>\r\n                <Typography variant=\"h3\" className={classes.cardTitleHeading}>\r\n                  {startCase(toLower(group))}\r\n                </Typography>\r\n                <IconButton onClick={handleStep(index)} size=\"small\" aria-label=\"edit\">\r\n                  <EditIcon className={classes.editIcon} />\r\n                </IconButton>\r\n              </Box>\r\n              <Box p={2}>\r\n                {fields\r\n                  .filter((field) => Boolean(field.name) && field.type !== 'label')\r\n                  .map((field, idx) => {\r\n                    const value = riskValues[field.name] || null;\r\n                    const isArrayColumn = utils.risk.isArrayColumn(field) && utils.generic.isValidArray(value);\r\n                    const isArrayTable = utils.risk.isArrayTable(field) && utils.generic.isValidArray(value);\r\n                    const isObject = utils.risk.isObject(field) && utils.generic.isValidObject(value);\r\n                    const valueArray = isArrayColumn || isArrayTable ? value : [value];\r\n                    const arrayKey = isArrayColumn || isArrayTable ? 'arrayItemDef' : isObject ? 'objectDef' : '';\r\n\r\n                    const condition = utils.risk.getCondition(field, fields);\r\n                    const refValueCondition = condition && riskValues && get(riskValues, `${condition.name}`);\r\n                    const isConditionValid = condition && utils.risk.isConditionValid(condition, refValueCondition);\r\n\r\n                    if (isArrayColumn || isArrayTable || isObject) {\r\n                      return condition === undefined || (condition && isConditionValid) ? (\r\n                        <FormGrid spacing={2} container key={`${field.label}-${field.label}`}>\r\n                          <FormGrid item xs={12}>\r\n                            {field.label}\r\n                          </FormGrid>\r\n\r\n                          {valueArray.map((v, index) => {\r\n                            return (\r\n                              <FormGrid item xs={12} key={`key-${index}`}>\r\n                                <Box className={valueArray?.length > 1 ? `${classes.card} ${classes.cardArray}` : ''}>\r\n                                  {field[arrayKey]\r\n                                    .filter((f) => Boolean(f.name))\r\n                                    .map((arrayField) => {\r\n                                      const fieldName = isObject\r\n                                        ? `${field.name}.${arrayField.name}`\r\n                                        : `${field.name}[${index}].${arrayField.name}`;\r\n\r\n                                      const isFieldEdited = isReQuote && checkIsFieldEdited(fieldName);\r\n                                      const isHidden = utils.risk.isHiddenField(arrayField);\r\n                                      const isTitle = utils.risk.isTitleField(arrayField);\r\n\r\n                                      return !isHidden || isTitle ? (\r\n                                        <FormGrid spacing={1} container key={`${arrayField.name}-${arrayField.label}`}>\r\n                                          <FormGrid item xs={6}>\r\n                                            <Typography variant=\"body2\" component=\"span\">\r\n                                              {arrayField.label}\r\n                                            </Typography>\r\n                                          </FormGrid>\r\n                                          <FormGrid item xs={6} classes={{ root: classes.flexGrid }}>\r\n                                            <Typography\r\n                                              variant=\"body2\"\r\n                                              component=\"span\"\r\n                                              style={{ fontWeight: 'bold' }}\r\n                                              classes={{ root: isFieldEdited ? classes.edited : '' }}\r\n                                            >\r\n                                              {renderValue(arrayField, v[arrayField.name])}\r\n                                            </Typography>\r\n                                            {isFieldEdited ? (\r\n                                              <Tooltip\r\n                                                title={fieldEditedValues(fieldName, arrayField)}\r\n                                                placement=\"top\"\r\n                                                rich\r\n                                                style={{ marginLeft: 5 }}\r\n                                              >\r\n                                                <InfoOutlinedIcon fontSize=\"small\" />\r\n                                              </Tooltip>\r\n                                            ) : null}\r\n                                          </FormGrid>\r\n                                        </FormGrid>\r\n                                      ) : null;\r\n                                    })}\r\n                                </Box>\r\n                              </FormGrid>\r\n                            );\r\n                          })}\r\n                        </FormGrid>\r\n                      ) : null;\r\n                    }\r\n                    const isFieldEdited = isReQuote && checkIsFieldEdited(field.name);\r\n                    const isHidden = utils.risk.isHiddenField(field);\r\n\r\n                    return !isHidden && (condition === undefined || (condition && isConditionValid)) ? (\r\n                      <FormGrid container spacing={2} key={`${field.name}-${field.label}`}>\r\n                        <FormGrid item xs={6}>\r\n                          <Typography variant=\"body2\" component=\"span\">\r\n                            {field.label || field.title}\r\n                          </Typography>\r\n                        </FormGrid>\r\n                        <FormGrid item xs={6} classes={{ root: classes.flexGrid }}>\r\n                          <Typography\r\n                            variant=\"body2\"\r\n                            component=\"span\"\r\n                            style={{ fontWeight: 'bold' }}\r\n                            classes={{ root: isFieldEdited ? classes.edited : '' }}\r\n                          >\r\n                            {renderValue(field)}\r\n                          </Typography>\r\n                          {isFieldEdited ? (\r\n                            <Tooltip title={fieldEditedValues(field.name, field)} placement=\"top\" rich style={{ marginLeft: 5 }}>\r\n                              <InfoOutlinedIcon fontSize=\"small\" />\r\n                            </Tooltip>\r\n                          ) : null}\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    ) : null;\r\n                  })}\r\n              </Box>\r\n            </Box>\r\n          </FormGrid>\r\n        );\r\n      })}\r\n    </FormGrid>\r\n  );\r\n};\r\n\r\nexport default RiskData;\r\n"]},"metadata":{},"sourceType":"module"}