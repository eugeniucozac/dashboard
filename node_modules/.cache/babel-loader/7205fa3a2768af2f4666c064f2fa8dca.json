{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditQuote\\\\EditQuote.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport { Button, FormContainer, FormActions, FormGrid, FormFields, FormLegend, FormDate, FormCheckbox, FormSelect, FormText, FormHidden, Translate } from 'components';\nimport * as utils from 'utils';\nimport styles from './EditQuote.styles'; // mui\n\nimport { makeStyles, Collapse, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditQuoteView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array,\n  handleShowCapacity: PropTypes.func.isRequired,\n  isCapacityVisible: PropTypes.bool.isRequired\n};\nexport function EditQuoteView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      isCapacityVisible = _ref.isCapacityVisible,\n      handleShowCapacity = _ref.handleShowCapacity;\n  var classes = makeStyles(styles, {\n    name: 'EditQuote'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      \"data-testid\": \"form-editQuote\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'statusId')), {}, {\n              control: control,\n              error: errors.statusId\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            style: {\n              paddingTop: 24\n            },\n            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'quoteOptions')), {}, {\n              control: control,\n              register: register,\n              watch: watch,\n              error: errors.quoteOptions\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'currency')), {}, {\n              control: control,\n              error: errors.currency\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'premium')), {}, {\n              control: control,\n              error: errors.premium\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'writtenLinePercentage')), {}, {\n              control: control,\n              error: errors.writtenLinePercentage\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'subjectivities')), {}, {\n          control: control,\n          error: errors.subjectivities\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          style: {\n            marginTop: 4\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'quoteDate')), {}, {\n              control: control,\n              error: errors.quoteDate\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'validUntilDate')), {}, {\n              control: control,\n              error: errors.validUntilDate\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: !isCapacityVisible,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            justifyContent: \"flex-end\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"placement.sheet.editCapacityType\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 108,\n                  columnNumber: 25\n                }, this),\n                variant: \"outlined\",\n                size: \"small\",\n                onClick: function onClick() {\n                  return handleShowCapacity(true);\n                },\n                nestedClasses: {\n                  btn: classes.editCapacityType\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n          in: isCapacityVisible,\n          children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"placement.sheet.capacityType\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 31\n            }, this),\n            nestedClasses: {\n              root: classes.capacityLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'capacityTypeId')), {}, {\n            control: control,\n            error: errors.capacityTypeId\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'policyMarketId', control, errors)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: onCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 126,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditQuoteView, \"3IGR9IlnDng3xT0r4bCvHCa638k=\", false, function () {\n  return [useForm];\n});\n\n_c = EditQuoteView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQuoteView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditQuote/EditQuote.view.js"],"names":["React","PropTypes","useForm","yupResolver","Button","FormContainer","FormActions","FormGrid","FormFields","FormLegend","FormDate","FormCheckbox","FormSelect","FormText","FormHidden","Translate","utils","styles","makeStyles","Collapse","Grid","EditQuoteView","propTypes","fields","array","actions","handleShowCapacity","func","isRequired","isCapacityVisible","bool","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","register","watch","reset","errors","handleSubmit","formState","cancel","find","action","submit","onCancel","generic","isFunction","handler","onSubmit","data","root","getFieldProps","statusId","paddingTop","quoteOptions","currency","premium","writtenLinePercentage","subjectivities","marginTop","quoteDate","validUntilDate","btn","editCapacityType","capacityLegend","capacityTypeId","label","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormActions,\r\n  FormGrid,\r\n  FormFields,\r\n  FormLegend,\r\n  FormDate,\r\n  FormCheckbox,\r\n  FormSelect,\r\n  FormText,\r\n  FormHidden,\r\n  Translate,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './EditQuote.styles';\r\n\r\n// mui\r\nimport { makeStyles, Collapse, Grid } from '@material-ui/core';\r\n\r\nEditQuoteView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n  handleShowCapacity: PropTypes.func.isRequired,\r\n  isCapacityVisible: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function EditQuoteView({ fields, actions, isCapacityVisible, handleShowCapacity }) {\r\n  const classes = makeStyles(styles, { name: 'EditQuote' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, register, watch, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} data-testid=\"form-editQuote\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={6}>\r\n              <FormSelect {...utils.form.getFieldProps(fields, 'statusId')} control={control} error={errors.statusId} />\r\n            </FormGrid>\r\n\r\n            <FormGrid item xs={6} style={{ paddingTop: 24 }}>\r\n              <FormCheckbox\r\n                {...utils.form.getFieldProps(fields, 'quoteOptions')}\r\n                control={control}\r\n                register={register}\r\n                watch={watch}\r\n                error={errors.quoteOptions}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={3}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'currency')} control={control} error={errors.currency} />\r\n            </FormGrid>\r\n            <FormGrid item xs={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'premium')} control={control} error={errors.premium} />\r\n            </FormGrid>\r\n            <FormGrid item xs={3}>\r\n              <FormText\r\n                {...utils.form.getFieldProps(fields, 'writtenLinePercentage')}\r\n                control={control}\r\n                error={errors.writtenLinePercentage}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormText {...utils.form.getFieldProps(fields, 'subjectivities')} control={control} error={errors.subjectivities} />\r\n\r\n          <FormGrid container style={{ marginTop: 4 }}>\r\n            <FormGrid item xs={6}>\r\n              <FormDate {...utils.form.getFieldProps(fields, 'quoteDate')} control={control} error={errors.quoteDate} />\r\n            </FormGrid>\r\n            <FormGrid item xs={6}>\r\n              <FormDate {...utils.form.getFieldProps(fields, 'validUntilDate')} control={control} error={errors.validUntilDate} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <Collapse in={!isCapacityVisible}>\r\n            <Grid container justifyContent=\"flex-end\">\r\n              <Grid item>\r\n                <Button\r\n                  text={<Translate label=\"placement.sheet.editCapacityType\" />}\r\n                  variant=\"outlined\"\r\n                  size=\"small\"\r\n                  onClick={() => handleShowCapacity(true)}\r\n                  nestedClasses={{ btn: classes.editCapacityType }}\r\n                />\r\n              </Grid>\r\n            </Grid>\r\n          </Collapse>\r\n          <Collapse in={isCapacityVisible}>\r\n            <FormLegend text={<Translate label=\"placement.sheet.capacityType\" />} nestedClasses={{ root: classes.capacityLegend }} />\r\n            <FormSelect {...utils.form.getFieldProps(fields, 'capacityTypeId')} control={control} error={errors.capacityTypeId} />\r\n          </Collapse>\r\n\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'policyMarketId', control, errors)} />\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={onCancel} />}\r\n          {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" />}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}