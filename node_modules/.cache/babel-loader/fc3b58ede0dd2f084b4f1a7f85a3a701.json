{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddRiskRefAdvancedSearch\\\\AddRiskRefAdvancedSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get'; // app\n\nimport AddRiskRefAdvancedSearchView from './AddRiskRefAdvancedSearch.view';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { getAdvancedSearchResults, updateAdvancedSearchSelected, hideModal, enqueueNotification, getEndorsementValues, getAdvancedSearchResultsSuccess } from 'stores';\nimport DuplicateWarning from './DuplicateWarning';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddRiskRefAdvancedSearch(_ref) {\n  _s();\n\n  var _props$depart, _props$depart2;\n\n  var props = _ref.props,\n      instruction = _ref.instruction,\n      selectedProcess = _ref.selectedProcess,\n      riskRefs = _ref.riskRefs,\n      setRiskRefs = _ref.setRiskRefs;\n  var dispatch = useDispatch();\n  var searchedResults = useSelector(function (state) {\n    return get(state, 'processingInstructions.advancedSearchResults');\n  }) || [];\n  var addedRiskReferences = useSelector(function (state) {\n    return get(state, 'processingInstructions.addedRiskRefDetailsFromAdvSearch');\n  }) || [];\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      warningDialogOpen = _useState2[0],\n      setWarningDialogOpen = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      duplicateRiskRefs = _useState4[0],\n      setDuplicateRiskRefs = _useState4[1];\n\n  var processRefineWarning = ['ENDORSEMENT', 'FEE AND AMENDMENT', 'BORDEREAU'];\n  useEffect(function () {\n    dispatch(getAdvancedSearchResults(props, selectedProcess)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.length) === 0) {\n        dispatch(getAdvancedSearchResultsSuccess([]));\n      }\n    });\n    dispatch(updateAdvancedSearchSelected([]));\n  }, [dispatch, props, selectedProcess]);\n  var fields = [{\n    name: 'insuredCoverHolderName',\n    type: 'text',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.insuredCoverHolder'),\n    value: props === null || props === void 0 ? void 0 : props.insuredName.name,\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      readOnly: true,\n      disabled: true\n    }\n  }, {\n    name: 'department',\n    type: 'text',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.department.label'),\n    value: (props === null || props === void 0 ? void 0 : (_props$depart = props.depart) === null || _props$depart === void 0 ? void 0 : _props$depart.name) ? props === null || props === void 0 ? void 0 : (_props$depart2 = props.depart) === null || _props$depart2 === void 0 ? void 0 : _props$depart2.name : '',\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'value',\n    muiComponentProps: {\n      readOnly: true,\n      disabled: true\n    }\n  }, {\n    name: 'yearOfAccount',\n    type: 'text',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.yearOfAccount'),\n    placeholder: '',\n    value: props === null || props === void 0 ? void 0 : props.yoa,\n    muiComponentProps: {\n      readOnly: true,\n      disabled: true\n    }\n  }];\n  var columns = [{\n    id: 'addRiskRef',\n    empty: true\n  }, {\n    id: 'riskReferenceId',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskReferenceId')\n  }, {\n    id: 'gxbInstance',\n    label: utils.string.t('processingInstructions.gridUmrColumns.gxbInstance')\n  }, {\n    id: 'insuredOrCoverHolder',\n    label: utils.string.t('processingInstructions.gridUmrColumns.insuredOrCoverHolder')\n  }, {\n    id: 'yearOfAccounts',\n    label: utils.string.t('processingInstructions.gridUmrColumns.yearOfAccounts'),\n    narrow: true\n  }, {\n    id: 'clientName',\n    label: utils.string.t('processingInstructions.gridUmrColumns.clientName')\n  }, {\n    id: 'Instruction Ids',\n    label: utils.string.t('processingInstructions.gridUmrColumns.associatedPiRefs'),\n    narrow: true\n  }, {\n    id: 'riskStatus',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskStatus'),\n    nowrap: true\n  }, {\n    id: 'riskDetails',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskDetails')\n  }];\n  var actions = [{\n    name: 'addRiskReference',\n    label: utils.string.t('processingInstructions.addRiskReference.advancedSearchModalButton'),\n    handler: function handler() {\n      if ((addedRiskReferences === null || addedRiskReferences === void 0 ? void 0 : addedRiskReferences.length) > 0) {\n        var alreadyAddedRiskRefs = addedRiskReferences.filter(function (rr) {\n          return rr.instructionIds;\n        });\n        setDuplicateRiskRefs(alreadyAddedRiskRefs);\n\n        if (alreadyAddedRiskRefs.length > 0 && !processRefineWarning.includes(selectedProcess)) {\n          setWarningDialogOpen(true);\n        } else {\n          addRiskRefsToProcessingInstruction();\n        }\n      }\n    }\n  }];\n\n  var addRiskRefsToProcessingInstruction = function addRiskRefsToProcessingInstruction() {\n    // TODO not sure this indexOf(risk) filters anything out...\n    var uniqueRiskReferences = addedRiskReferences.filter(function (risk) {\n      return riskRefs.indexOf(risk) === -1;\n    });\n    var isEndorsement = (instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId) === 2;\n    var isFeeAndAmendment = (instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId) === 5;\n\n    if (isEndorsement || isFeeAndAmendment) {\n      dispatch(getEndorsementValues(uniqueRiskReferences.map(function (r) {\n        return r.xbPolicyId;\n      }), uniqueRiskReferences.map(function (r) {\n        return r.xbInstanceId;\n      })));\n    }\n\n    var appendAddedRiskRefs = [].concat(_toConsumableArray(riskRefs), _toConsumableArray(uniqueRiskReferences));\n\n    if ((appendAddedRiskRefs === null || appendAddedRiskRefs === void 0 ? void 0 : appendAddedRiskRefs.length) === 1) {\n      uniqueRiskReferences.forEach(function (rr) {\n        return rr.leadPolicy = true;\n      });\n    }\n\n    if ((appendAddedRiskRefs === null || appendAddedRiskRefs === void 0 ? void 0 : appendAddedRiskRefs.length) > constants.PI_MAX_RISK_REF_LIMIT) {\n      dispatch(enqueueNotification('processingInstructions.maximumRiskRefAdded', 'error', {\n        data: {\n          maxRiskRefsLimit: constants.PI_MAX_RISK_REF_LIMIT\n        }\n      }));\n      return;\n    }\n\n    if ((appendAddedRiskRefs === null || appendAddedRiskRefs === void 0 ? void 0 : appendAddedRiskRefs.length) === 1) {\n      appendAddedRiskRefs[0].leadPolicy = true;\n    }\n\n    appendAddedRiskRefs === null || appendAddedRiskRefs === void 0 ? void 0 : appendAddedRiskRefs.sort(function (a, b) {\n      return (a === null || a === void 0 ? void 0 : a.riskRefId) >= (b === null || b === void 0 ? void 0 : b.riskRefId) ? 1 : -1;\n    });\n    setRiskRefs(appendAddedRiskRefs);\n    dispatch(enqueueNotification('processingInstructions.successfulRiskRefAdded', 'success'));\n    dispatch(hideModal());\n  };\n\n  var checkboxClick = function checkboxClick(searchResult, riskId) {\n    var _ref2;\n\n    var newRiskRefs = [].concat(_toConsumableArray(addedRiskReferences), [searchResult]);\n    var existingRiskRefIds = (_ref2 = _toConsumableArray(riskRefs)) === null || _ref2 === void 0 ? void 0 : _ref2.map(function (risk) {\n      return risk.riskRefId;\n    });\n\n    if (addedRiskReferences === null || addedRiskReferences === void 0 ? void 0 : addedRiskReferences.includes(searchResult)) {\n      newRiskRefs = newRiskRefs.filter(function (risk) {\n        return risk !== searchResult;\n      });\n    }\n\n    if (existingRiskRefIds.includes(riskId)) {\n      dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'warning'));\n      return;\n    }\n\n    dispatch(updateAdvancedSearchSelected(newRiskRefs));\n  };\n\n  var onCloseWarningDialog = function onCloseWarningDialog() {\n    setWarningDialogOpen(false);\n    setDuplicateRiskRefs([]);\n  };\n\n  var handleAddMultiple = function handleAddMultiple() {\n    if ((addedRiskReferences === null || addedRiskReferences === void 0 ? void 0 : addedRiskReferences.length) > 0) {\n      addRiskRefsToProcessingInstruction();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(DuplicateWarning, {\n      duplicateRiskRefs: duplicateRiskRefs,\n      isOpen: warningDialogOpen,\n      handleClose: onCloseWarningDialog,\n      handleAdd: handleAddMultiple\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AddRiskRefAdvancedSearchView, {\n      fields: fields,\n      columns: columns,\n      actions: actions,\n      searchedResults: searchedResults,\n      addedRiskReferences: addedRiskReferences,\n      handlers: {\n        checkboxClick: checkboxClick\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 209,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddRiskRefAdvancedSearch, \"rp1wWcYkLWB0QUSLaLSOkV1nPY8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddRiskRefAdvancedSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskRefAdvancedSearch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddRiskRefAdvancedSearch/AddRiskRefAdvancedSearch.js"],"names":["React","useEffect","useState","useDispatch","useSelector","get","AddRiskRefAdvancedSearchView","utils","constants","getAdvancedSearchResults","updateAdvancedSearchSelected","hideModal","enqueueNotification","getEndorsementValues","getAdvancedSearchResultsSuccess","DuplicateWarning","AddRiskRefAdvancedSearch","props","instruction","selectedProcess","riskRefs","setRiskRefs","dispatch","searchedResults","state","addedRiskReferences","warningDialogOpen","setWarningDialogOpen","duplicateRiskRefs","setDuplicateRiskRefs","processRefineWarning","then","response","length","fields","name","type","label","string","t","value","insuredName","options","optionKey","optionLabel","muiComponentProps","readOnly","disabled","depart","placeholder","yoa","columns","id","empty","narrow","nowrap","actions","handler","alreadyAddedRiskRefs","filter","rr","instructionIds","includes","addRiskRefsToProcessingInstruction","uniqueRiskReferences","risk","indexOf","isEndorsement","processTypeId","isFeeAndAmendment","map","r","xbPolicyId","xbInstanceId","appendAddedRiskRefs","forEach","leadPolicy","PI_MAX_RISK_REF_LIMIT","data","maxRiskRefsLimit","sort","a","b","riskRefId","checkboxClick","searchResult","riskId","newRiskRefs","existingRiskRefIds","onCloseWarningDialog","handleAddMultiple"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport AddRiskRefAdvancedSearchView from './AddRiskRefAdvancedSearch.view';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport {\r\n  getAdvancedSearchResults,\r\n  updateAdvancedSearchSelected,\r\n  hideModal,\r\n  enqueueNotification,\r\n  getEndorsementValues,\r\n  getAdvancedSearchResultsSuccess,\r\n} from 'stores';\r\nimport DuplicateWarning from './DuplicateWarning';\r\n\r\nexport default function AddRiskRefAdvancedSearch({ props, instruction, selectedProcess, riskRefs, setRiskRefs }) {\r\n  const dispatch = useDispatch();\r\n  const searchedResults = useSelector((state) => get(state, 'processingInstructions.advancedSearchResults')) || [];\r\n  const addedRiskReferences = useSelector((state) => get(state, 'processingInstructions.addedRiskRefDetailsFromAdvSearch')) || [];\r\n  const [warningDialogOpen, setWarningDialogOpen] = useState(false);\r\n  const [duplicateRiskRefs, setDuplicateRiskRefs] = useState([]);\r\n  const processRefineWarning = ['ENDORSEMENT', 'FEE AND AMENDMENT', 'BORDEREAU'];\r\n\r\n  useEffect(() => {\r\n    dispatch(getAdvancedSearchResults(props, selectedProcess)).then((response) => {\r\n      if (response?.length === 0) {\r\n        dispatch(getAdvancedSearchResultsSuccess([]));\r\n      }\r\n    });\r\n    dispatch(updateAdvancedSearchSelected([]));\r\n  }, [dispatch, props, selectedProcess]);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'insuredCoverHolderName',\r\n      type: 'text',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.insuredCoverHolder'),\r\n      value: props?.insuredName.name,\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        readOnly: true,\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'department',\r\n      type: 'text',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.department.label'),\r\n      value: props?.depart?.name ? props?.depart?.name : '',\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      muiComponentProps: {\r\n        readOnly: true,\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'yearOfAccount',\r\n      type: 'text',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.yearOfAccount'),\r\n      placeholder: '',\r\n      value: props?.yoa,\r\n      muiComponentProps: {\r\n        readOnly: true,\r\n        disabled: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const columns = [\r\n    { id: 'addRiskRef', empty: true },\r\n    {\r\n      id: 'riskReferenceId',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskReferenceId'),\r\n    },\r\n    {\r\n      id: 'gxbInstance',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.gxbInstance'),\r\n    },\r\n    {\r\n      id: 'insuredOrCoverHolder',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.insuredOrCoverHolder'),\r\n    },\r\n    {\r\n      id: 'yearOfAccounts',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.yearOfAccounts'),\r\n      narrow: true,\r\n    },\r\n    {\r\n      id: 'clientName',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.clientName'),\r\n    },\r\n    {\r\n      id: 'Instruction Ids',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.associatedPiRefs'),\r\n      narrow: true,\r\n    },\r\n    {\r\n      id: 'riskStatus',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskStatus'),\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'riskDetails',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskDetails'),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'addRiskReference',\r\n      label: utils.string.t('processingInstructions.addRiskReference.advancedSearchModalButton'),\r\n      handler: () => {\r\n        if (addedRiskReferences?.length > 0) {\r\n          const alreadyAddedRiskRefs = addedRiskReferences.filter((rr) => rr.instructionIds);\r\n\r\n          setDuplicateRiskRefs(alreadyAddedRiskRefs);\r\n\r\n          if (alreadyAddedRiskRefs.length > 0 && !processRefineWarning.includes(selectedProcess)) {\r\n            setWarningDialogOpen(true);\r\n          } else {\r\n            addRiskRefsToProcessingInstruction();\r\n          }\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  const addRiskRefsToProcessingInstruction = () => {\r\n    // TODO not sure this indexOf(risk) filters anything out...\r\n    const uniqueRiskReferences = addedRiskReferences.filter((risk) => riskRefs.indexOf(risk) === -1);\r\n    const isEndorsement = instruction?.processTypeId === 2;\r\n    const isFeeAndAmendment = instruction?.processTypeId === 5;\r\n\r\n    if (isEndorsement || isFeeAndAmendment) {\r\n      dispatch(\r\n        getEndorsementValues(\r\n          uniqueRiskReferences.map((r) => r.xbPolicyId),\r\n          uniqueRiskReferences.map((r) => r.xbInstanceId)\r\n        )\r\n      );\r\n    }\r\n\r\n    const appendAddedRiskRefs = [...riskRefs, ...uniqueRiskReferences];\r\n\r\n    if (appendAddedRiskRefs?.length === 1) {\r\n      uniqueRiskReferences.forEach((rr) => (rr.leadPolicy = true));\r\n    }\r\n    if (appendAddedRiskRefs?.length > constants.PI_MAX_RISK_REF_LIMIT) {\r\n      dispatch(\r\n        enqueueNotification('processingInstructions.maximumRiskRefAdded', 'error', {\r\n          data: { maxRiskRefsLimit: constants.PI_MAX_RISK_REF_LIMIT },\r\n        })\r\n      );\r\n      return;\r\n    }\r\n\r\n    if (appendAddedRiskRefs?.length === 1) {\r\n      appendAddedRiskRefs[0].leadPolicy = true;\r\n    }\r\n    appendAddedRiskRefs?.sort((a, b) => (a?.riskRefId >= b?.riskRefId ? 1 : -1));\r\n\r\n    setRiskRefs(appendAddedRiskRefs);\r\n    dispatch(enqueueNotification('processingInstructions.successfulRiskRefAdded', 'success'));\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const checkboxClick = (searchResult, riskId) => {\r\n    let newRiskRefs = [...addedRiskReferences, searchResult];\r\n    const existingRiskRefIds = [...riskRefs]?.map((risk) => risk.riskRefId);\r\n\r\n    if (addedRiskReferences?.includes(searchResult)) {\r\n      newRiskRefs = newRiskRefs.filter((risk) => risk !== searchResult);\r\n    }\r\n\r\n    if (existingRiskRefIds.includes(riskId)) {\r\n      dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'warning'));\r\n      return;\r\n    }\r\n\r\n    dispatch(updateAdvancedSearchSelected(newRiskRefs));\r\n  };\r\n\r\n  const onCloseWarningDialog = () => {\r\n    setWarningDialogOpen(false);\r\n    setDuplicateRiskRefs([]);\r\n  };\r\n\r\n  const handleAddMultiple = () => {\r\n    if (addedRiskReferences?.length > 0) {\r\n      addRiskRefsToProcessingInstruction();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <DuplicateWarning\r\n        duplicateRiskRefs={duplicateRiskRefs}\r\n        isOpen={warningDialogOpen}\r\n        handleClose={onCloseWarningDialog}\r\n        handleAdd={handleAddMultiple}\r\n      />\r\n      <AddRiskRefAdvancedSearchView\r\n        fields={fields}\r\n        columns={columns}\r\n        actions={actions}\r\n        searchedResults={searchedResults}\r\n        addedRiskReferences={addedRiskReferences}\r\n        handlers={{ checkboxClick }}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}