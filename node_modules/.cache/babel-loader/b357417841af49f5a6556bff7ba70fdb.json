{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpeningMemoList\\\\OpeningMemoList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types'; // app\n\nimport { OpeningMemoListView } from './OpeningMemoList.view';\nimport { selectOpeningMemoList, getOpeningMemoPlacementList, updateOpeningMemoFilterByStatus, resetOpeningMemoList } from 'stores';\nimport { downloadPDF } from '../OpeningMemo/OpeningMemo.pdf';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nOpeningMemoList.propTypes = {\n  routeWithId: PropTypes.bool.isRequired,\n  route: PropTypes.string.isRequired,\n  origin: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    id: PropTypes.number\n  })\n};\nOpeningMemoList.defaultProps = {\n  origin: {}\n};\nexport default function OpeningMemoList(_ref) {\n  _s();\n\n  var routeWithId = _ref.routeWithId,\n      route = _ref.route,\n      origin = _ref.origin;\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var openingMemoList = useSelector(selectOpeningMemoList) || {};\n  var referenceData = useSelector(function (state) {\n    return state.referenceData;\n  }) || {};\n  var departmentId = useSelector(function (state) {\n    return state.user.departmentSelected;\n  });\n  var paginationObj = {\n    page: openingMemoList.page - 1,\n    rowsTotal: openingMemoList.itemsTotal,\n    rowsPerPage: openingMemoList.pageSize\n  };\n  useEffect(function () {\n    if (!utils.generic.isValidObject(origin) || !departmentId) return;\n    if (origin.path === 'department') return;\n    dispatch(getOpeningMemoPlacementList({\n      origin: origin\n    }));\n    return function () {\n      return dispatch(resetOpeningMemoList());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!utils.generic.isValidObject(origin) || !departmentId) return;\n    var path = origin.path;\n    if (path !== 'department') return;\n    dispatch(getOpeningMemoPlacementList({\n      origin: {\n        path: path,\n        id: departmentId\n      }\n    }));\n    return function () {\n      return dispatch(resetOpeningMemoList());\n    };\n  }, [departmentId] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var filterOpeningMemoList = function filterOpeningMemoList(data) {\n    dispatch(updateOpeningMemoFilterByStatus(data));\n    var path = origin.path;\n    dispatch(getOpeningMemoPlacementList({\n      origin: {\n        path: path,\n        id: departmentId\n      }\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getOpeningMemoPlacementList({\n      origin: {\n        path: origin.path,\n        id: origin.path === 'department' ? departmentId : origin.id\n      },\n      page: newPage + 1\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getOpeningMemoPlacementList({\n      origin: {\n        path: origin.path,\n        id: origin.path === 'department' ? departmentId : origin.id\n      },\n      size: rowsPerPage\n    }));\n  };\n\n  var handleDoubleClickRow = function handleDoubleClickRow(openingMemoId) {\n    var redirectPath = routeWithId ? \"\".concat(route, \"/\").concat(origin.id, \"/\").concat(openingMemoId) : \"\".concat(route, \"/\").concat(openingMemoId);\n    history.push(redirectPath);\n  };\n\n  var handleDownload = function handleDownload(openingMemoId) {\n    var openingMemo = openingMemoList.items.find(function (openingMemo) {\n      return openingMemo.id === openingMemoId;\n    });\n    downloadPDF({\n      openingMemo: openingMemo,\n      departmentName: utils.placement.getDepartmentName(openingMemo, referenceData.departments),\n      referenceData: referenceData\n    });\n  };\n\n  var pagination = usePagination(openingMemoList.items, paginationObj, handleChangePage, handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(OpeningMemoListView, {\n    openingMemoList: openingMemoList.items,\n    pagination: pagination.obj,\n    sort: {\n      by: openingMemoList.sortBy,\n      type: openingMemoList.sortType,\n      direction: openingMemoList.sortDirection\n    },\n    handleChangePage: pagination.handlers.handleChangePage,\n    handleChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n    handleDoubleClickRow: handleDoubleClickRow,\n    handleDownload: handleDownload,\n    filterOpeningMemoList: filterOpeningMemoList\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 107,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OpeningMemoList, \"AH5aU6bdkYEkbmmokT6ZH1r1bLw=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = OpeningMemoList;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpeningMemoList\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpeningMemoList/OpeningMemoList.js"],"names":["React","useEffect","useDispatch","useSelector","useHistory","PropTypes","OpeningMemoListView","selectOpeningMemoList","getOpeningMemoPlacementList","updateOpeningMemoFilterByStatus","resetOpeningMemoList","downloadPDF","usePagination","utils","OpeningMemoList","propTypes","routeWithId","bool","isRequired","route","string","origin","shape","path","id","number","defaultProps","dispatch","history","openingMemoList","referenceData","state","departmentId","user","departmentSelected","paginationObj","page","rowsTotal","itemsTotal","rowsPerPage","pageSize","generic","isValidObject","filterOpeningMemoList","data","handleChangePage","newPage","handleChangeRowsPerPage","size","handleDoubleClickRow","openingMemoId","redirectPath","push","handleDownload","openingMemo","items","find","departmentName","placement","getDepartmentName","departments","pagination","obj","by","sortBy","type","sortType","direction","sortDirection","handlers"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { OpeningMemoListView } from './OpeningMemoList.view';\r\nimport { selectOpeningMemoList, getOpeningMemoPlacementList, updateOpeningMemoFilterByStatus, resetOpeningMemoList } from 'stores';\r\nimport { downloadPDF } from '../OpeningMemo/OpeningMemo.pdf';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nOpeningMemoList.propTypes = {\r\n  routeWithId: PropTypes.bool.isRequired,\r\n  route: PropTypes.string.isRequired,\r\n  origin: PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    id: PropTypes.number,\r\n  }),\r\n};\r\n\r\nOpeningMemoList.defaultProps = {\r\n  origin: {},\r\n};\r\n\r\nexport default function OpeningMemoList({ routeWithId, route, origin }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const openingMemoList = useSelector(selectOpeningMemoList) || {};\r\n  const referenceData = useSelector((state) => state.referenceData) || {};\r\n  const departmentId = useSelector((state) => state.user.departmentSelected);\r\n\r\n  const paginationObj = {\r\n    page: openingMemoList.page - 1,\r\n    rowsTotal: openingMemoList.itemsTotal,\r\n    rowsPerPage: openingMemoList.pageSize,\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!utils.generic.isValidObject(origin) || !departmentId) return;\r\n      if (origin.path === 'department') return;\r\n      dispatch(getOpeningMemoPlacementList({ origin }));\r\n      return () => dispatch(resetOpeningMemoList());\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!utils.generic.isValidObject(origin) || !departmentId) return;\r\n      const { path } = origin;\r\n      if (path !== 'department') return;\r\n      dispatch(getOpeningMemoPlacementList({ origin: { path, id: departmentId } }));\r\n      return () => dispatch(resetOpeningMemoList());\r\n    },\r\n    [departmentId] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const filterOpeningMemoList = (data) => {\r\n    dispatch(updateOpeningMemoFilterByStatus(data));\r\n    const { path } = origin;\r\n    dispatch(getOpeningMemoPlacementList({ origin: { path, id: departmentId } }));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(\r\n      getOpeningMemoPlacementList({\r\n        origin: {\r\n          path: origin.path,\r\n          id: origin.path === 'department' ? departmentId : origin.id,\r\n        },\r\n        page: newPage + 1,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(\r\n      getOpeningMemoPlacementList({\r\n        origin: {\r\n          path: origin.path,\r\n          id: origin.path === 'department' ? departmentId : origin.id,\r\n        },\r\n        size: rowsPerPage,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleDoubleClickRow = (openingMemoId) => {\r\n    const redirectPath = routeWithId ? `${route}/${origin.id}/${openingMemoId}` : `${route}/${openingMemoId}`;\r\n    history.push(redirectPath);\r\n  };\r\n\r\n  const handleDownload = (openingMemoId) => {\r\n    const openingMemo = openingMemoList.items.find((openingMemo) => openingMemo.id === openingMemoId);\r\n    downloadPDF({\r\n      openingMemo,\r\n      departmentName: utils.placement.getDepartmentName(openingMemo, referenceData.departments),\r\n      referenceData,\r\n    });\r\n  };\r\n\r\n  const pagination = usePagination(openingMemoList.items, paginationObj, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  return (\r\n    <OpeningMemoListView\r\n      openingMemoList={openingMemoList.items}\r\n      pagination={pagination.obj}\r\n      sort={{\r\n        by: openingMemoList.sortBy,\r\n        type: openingMemoList.sortType,\r\n        direction: openingMemoList.sortDirection,\r\n      }}\r\n      handleChangePage={pagination.handlers.handleChangePage}\r\n      handleChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n      handleDoubleClickRow={handleDoubleClickRow}\r\n      handleDownload={handleDownload}\r\n      filterOpeningMemoList={filterOpeningMemoList}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}