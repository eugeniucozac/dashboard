{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimsNewLoss\\\\ClaimsNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport styles from './ClaimsNewLoss.styles';\nimport { HorizontalLinearStepper, Layout, PreventNavigation } from 'components';\nimport { postLossInformation, selectLossId, postClaimDetailsInformation, selectClaimIdUnderProgress, addNewClaimUnderCurrentLoss, postEditClaimDetailsInformation, resetClaimData, postEditLossInformation, selectClaimIdFromGrid, selectorDmsViewFiles, selectDmsDocDetails, getDmsDocumentList } from 'stores';\nimport { ClaimsAcknowledgement, ClaimsEnterLossInformation, ClaimsPolicySearch, ClaimsPreviewInformation, EnterClaimInformation } from 'modules';\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsNewLossView.propTypes = {\n  steps: PropTypes.array,\n  currentStep: PropTypes.number.isRequired,\n  claim: PropTypes.object.isRequired,\n  isNavigationAllowed: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinishNewLoss: PropTypes.func.isRequired,\n  handleSaveNewLoss: PropTypes.func.isRequired,\n  handleSaveNewClaim: PropTypes.func.isRequired\n};\nexport function ClaimsNewLossView(_ref) {\n  _s();\n\n  var _stepperLabel$find,\n      _this = this;\n\n  var steps = _ref.steps,\n      currentStep = _ref.currentStep,\n      claim = _ref.claim,\n      isNavigationAllowed = _ref.isNavigationAllowed,\n      handleCancel = _ref.handleCancel,\n      handleSaveNewLoss = _ref.handleSaveNewLoss,\n      handleSaveNewClaim = _ref.handleSaveNewClaim,\n      handleFinishNewLoss = _ref.handleFinishNewLoss,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      getModalTitle = _ref.getModalTitle;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsNewLoss'\n  })();\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var claimData = useSelector(selectClaimIdUnderProgress);\n  var selectClaimID = get(claimData, 'claimID') || '';\n  var claimsInformation = useSelector(selectClaimIdFromGrid);\n  var editClaimId = get(claimsInformation, 'claimID') || '';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var _useState3 = useState(currentStep),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var isAllStepsCompleted = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length);\n  var lastStep = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length) - 1;\n  var stepperLabel = [{\n    id: 0,\n    label: utils.string.t('claims.stepperLabel.registerLoss')\n  }, {\n    id: 1,\n    label: utils.string.t('claims.stepperLabel.searchPolicy')\n  }, {\n    id: 2,\n    label: utils.string.t('claims.stepperLabel.enterClaimInformation')\n  }, {\n    id: 3,\n    label: utils.string.t('claims.stepperLabel.previewInfo')\n  }, {\n    id: 4,\n    label: utils.string.t('claims.stepperLabel.acknowledgement')\n  }];\n\n  var _useState5 = useState((_stepperLabel$find = stepperLabel.find(function (label) {\n    return label.id === 0;\n  })) === null || _stepperLabel$find === void 0 ? void 0 : _stepperLabel$find.label),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeStepperLabel = _useState6[0],\n      setActiveStepperLabel = _useState6[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  useEffect(function () {\n    var _stepperLabel$find2;\n\n    setActiveStepperLabel((_stepperLabel$find2 = stepperLabel.find(function (stepperLbl) {\n      return stepperLbl.id === activeStep;\n    })) === null || _stepperLabel$find2 === void 0 ? void 0 : _stepperLabel$find2.label);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    getModalTitle(activeStepperLabel);\n  }, [activeStepperLabel]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var docList, _docList, _docList2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              utils.app.scrollTo(0, '#layout-main');\n\n              if (!(activeStep === 0)) {\n                _context.next = 6;\n                break;\n              }\n\n              docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.lossDocDetails);\n              dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\n              _context.next = 6;\n              return dispatch(!(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDetailID) ? postLossInformation(values) : postEditLossInformation(values));\n\n            case 6:\n              if (!(activeStep === 2 && !selectClaimID)) {\n                _context.next = 16;\n                break;\n              }\n\n              _docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails);\n              dispatch(getDmsDocumentList('LINK_POLICY', _docList));\n\n              if (!editClaimId) {\n                _context.next = 14;\n                break;\n              }\n\n              _context.next = 12;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 12:\n              _context.next = 16;\n              break;\n\n            case 14:\n              _context.next = 16;\n              return dispatch(postClaimDetailsInformation(values));\n\n            case 16:\n              if (!(activeStep === 2 && selectClaimID)) {\n                _context.next = 21;\n                break;\n              }\n\n              _docList2 = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.claimsDocDetails);\n              dispatch(getDmsDocumentList('CLAIM_INFORMATION', _docList2));\n              _context.next = 21;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 21:\n              setActiveStep(function (prevActiveStep) {\n                return prevActiveStep + 1;\n              });\n\n            case 22:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNext(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    utils.app.scrollTo(0, '#layout-main');\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleFinish = function handleFinish() {\n    handleFinishNewLoss();\n  };\n\n  var handleAddNewClaimInLoss = function handleAddNewClaimInLoss() {\n    dispatch(addNewClaimUnderCurrentLoss());\n    setActiveStep(1);\n  };\n\n  var stepContent = function stepContent(index) {\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_LOSS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ClaimsPolicySearch, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EnterClaimInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewClaim,\n          validation: validation,\n          setValidation: setValidation,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_CLAIM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(ClaimsPreviewInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {\n          claim: claim,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleFinish: handleFinish,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true,\n          handleClaim: handleAddNewClaimInLoss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"claims-register-new-loss\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: /*#__PURE__*/_jsxDEV(HorizontalLinearStepper, {\n          steps: steps,\n          stepContent: stepContent,\n          activeStep: activeStep,\n          setActiveStep: setActiveStep,\n          showStepConnector: true,\n          handleCancel: handleCancel,\n          handleSave: handleSaveNewLoss,\n          nestedClasses: {\n            stepper: classes.stepper\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 7\n    }, this), isNavigationAllowed && /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: true,\n      allowedUrls: isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss],\n      title: 'status.alert',\n      subtitle: '',\n      hint: 'navigation.title',\n      confirmLabel: 'form.options.yesNoNa.yes',\n      cancelLabel: 'form.options.yesNoNa.no',\n      maxWidth: 'xs',\n      onSubmitCallBack: function onSubmitCallBack() {\n        dispatch(resetClaimData());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClaimsNewLossView, \"s7LFomvFRT3AuE+WBLV4zBJMq8Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimsNewLoss/ClaimsNewLoss.view.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","get","styles","HorizontalLinearStepper","Layout","PreventNavigation","postLossInformation","selectLossId","postClaimDetailsInformation","selectClaimIdUnderProgress","addNewClaimUnderCurrentLoss","postEditClaimDetailsInformation","resetClaimData","postEditLossInformation","selectClaimIdFromGrid","selectorDmsViewFiles","selectDmsDocDetails","getDmsDocumentList","ClaimsAcknowledgement","ClaimsEnterLossInformation","ClaimsPolicySearch","ClaimsPreviewInformation","EnterClaimInformation","config","utils","constants","makeStyles","ClaimsNewLossView","propTypes","steps","array","currentStep","number","isRequired","claim","object","isNavigationAllowed","bool","handleCancel","func","handleFinishNewLoss","handleSaveNewLoss","handleSaveNewClaim","validation","setValidation","getModalTitle","classes","name","dispatch","lossInformation","claimData","selectClaimID","claimsInformation","editClaimId","policyRef","setPolicyRef","activeStep","setActiveStep","isAllStepsCompleted","length","lastStep","stepperLabel","id","label","string","t","find","activeStepperLabel","setActiveStepperLabel","viewDocumentList","savedDmsDocList","stepperLbl","handleNext","values","app","scrollTo","docList","lossDocDetails","lossDetailID","linkPolicyDocDetails","claimsDocDetails","prevActiveStep","handleBack","handleFinish","handleAddNewClaimInLoss","stepContent","index","DMS_CONTEXT_LOSS","DMS_CONTEXT_CLAIM","stepper","routes","claimsFNOL","root","newLoss"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ClaimsNewLoss.styles';\r\nimport { HorizontalLinearStepper, Layout, PreventNavigation } from 'components';\r\nimport {\r\n  postLossInformation,\r\n  selectLossId,\r\n  postClaimDetailsInformation,\r\n  selectClaimIdUnderProgress,\r\n  addNewClaimUnderCurrentLoss,\r\n  postEditClaimDetailsInformation,\r\n  resetClaimData,\r\n  postEditLossInformation,\r\n  selectClaimIdFromGrid,\r\n  selectorDmsViewFiles,\r\n  selectDmsDocDetails,\r\n  getDmsDocumentList\r\n} from 'stores';\r\nimport {\r\n  ClaimsAcknowledgement,\r\n  ClaimsEnterLossInformation,\r\n  ClaimsPolicySearch,\r\n  ClaimsPreviewInformation,\r\n  EnterClaimInformation,\r\n} from 'modules';\r\nimport config from 'config';\r\n\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nClaimsNewLossView.propTypes = {\r\n  steps: PropTypes.array,\r\n  currentStep: PropTypes.number.isRequired,\r\n  claim: PropTypes.object.isRequired,\r\n  isNavigationAllowed: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinishNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsNewLossView({\r\n  steps,\r\n  currentStep,\r\n  claim,\r\n  isNavigationAllowed,\r\n  handleCancel,\r\n  handleSaveNewLoss,\r\n  handleSaveNewClaim,\r\n  handleFinishNewLoss,\r\n  validation,\r\n  setValidation,\r\n  getModalTitle\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsNewLoss' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const claimData = useSelector(selectClaimIdUnderProgress);\r\n  const selectClaimID = get(claimData, 'claimID') || '';\r\n  const claimsInformation = useSelector(selectClaimIdFromGrid);\r\n  const editClaimId = get(claimsInformation, 'claimID') || '';\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(currentStep);\r\n  const isAllStepsCompleted = activeStep === steps?.length;\r\n  const lastStep = activeStep === steps?.length - 1;\r\n  const stepperLabel = [{ id: 0, label: utils.string.t('claims.stepperLabel.registerLoss') }, { id: 1, label: utils.string.t('claims.stepperLabel.searchPolicy') }, { id: 2, label: utils.string.t('claims.stepperLabel.enterClaimInformation') }, { id: 3, label: utils.string.t('claims.stepperLabel.previewInfo') }, { id: 4, label: utils.string.t('claims.stepperLabel.acknowledgement') }];\r\n  const [activeStepperLabel, setActiveStepperLabel] = useState(stepperLabel.find((label) => label.id === 0)?.label);\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n\r\n  useEffect(() => {\r\n    setActiveStepperLabel(stepperLabel.find((stepperLbl) => stepperLbl.id === activeStep)?.label)\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    getModalTitle(activeStepperLabel);\r\n  }, [activeStepperLabel]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleNext = async (values) => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    if (activeStep === 0) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.lossDocDetails];\r\n      dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\r\n      await dispatch(!lossInformation?.lossDetailID ? postLossInformation(values) : postEditLossInformation(values));\r\n    }\r\n    if (activeStep === 2 && !selectClaimID) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.linkPolicyDocDetails];\r\n      dispatch(getDmsDocumentList('LINK_POLICY', docList));\r\n      if (editClaimId) {\r\n        await dispatch(postEditClaimDetailsInformation(values));\r\n      } else {\r\n        await dispatch(postClaimDetailsInformation(values));\r\n      }\r\n    }\r\n\r\n    if (activeStep === 2 && selectClaimID) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.claimsDocDetails];\r\n      dispatch(getDmsDocumentList('CLAIM_INFORMATION', docList));\r\n      await dispatch(postEditClaimDetailsInformation(values));\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    handleFinishNewLoss();\r\n  };\r\n\r\n  const handleAddNewClaimInLoss = () => {\r\n    dispatch(addNewClaimUnderCurrentLoss());\r\n    setActiveStep(1);\r\n  };\r\n\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_LOSS}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <ClaimsPolicySearch\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <EnterClaimInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewClaim}\r\n            validation={validation}\r\n            setValidation={setValidation}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_CLAIM}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ClaimsPreviewInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <ClaimsAcknowledgement\r\n            claim={claim}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleFinish={handleFinish}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n            handleClaim={handleAddNewClaimInLoss}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout testid=\"claims-register-new-loss\">\r\n        <Layout main>\r\n          <HorizontalLinearStepper\r\n            steps={steps}\r\n            stepContent={stepContent}\r\n            activeStep={activeStep}\r\n            setActiveStep={setActiveStep}\r\n            showStepConnector\r\n            handleCancel={handleCancel}\r\n            handleSave={handleSaveNewLoss}\r\n            nestedClasses={{ stepper: classes.stepper }}\r\n          />\r\n        </Layout>\r\n      </Layout>\r\n      {isNavigationAllowed && (\r\n        <PreventNavigation\r\n          dirty={true}\r\n          allowedUrls={isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss]}\r\n          title={'status.alert'}\r\n          subtitle={''}\r\n          hint={'navigation.title'}\r\n          confirmLabel={'form.options.yesNoNa.yes'}\r\n          cancelLabel={'form.options.yesNoNa.no'}\r\n          maxWidth={'xs'}\r\n          onSubmitCallBack={() => {\r\n            dispatch(resetClaimData());\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}