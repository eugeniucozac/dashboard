{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\RemoveClaimsComplexityRuleValue\\\\RemoveClaimsComplexityRuleValue.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { RemoveClaimsComplexityRuleValueView } from './RemoveClaimsComplexityRuleValue.view';\nimport { hideModal, selectComplexityManagementTab, selectComplexityBasisValueId, selectComplexityReferralValueId, removeComplexityBasisRuleValue, removeComplexityReferralRuleValue } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RemoveClaimsComplexityRuleValue() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      complexityRuleData = _useState2[0],\n      setComplexityRuleData = _useState2[1];\n\n  var currentTab = useSelector(selectComplexityManagementTab);\n  var currentComplexity = useSelector(selectComplexityBasisValueId);\n  var currentReferral = useSelector(selectComplexityReferralValueId);\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.yes'),\n    handler: function handler() {\n      if (currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]) {\n        dispatch(removeComplexityBasisRuleValue());\n      } else if (currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]) {\n        dispatch(removeComplexityReferralRuleValue());\n      }\n\n      dispatch(hideModal());\n    }\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.no'),\n    handler: function handler() {\n      return dispatch(hideModal());\n    }\n  }];\n  useEffect(function () {\n    switch (currentTab) {\n      case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]:\n        setComplexityRuleData(currentComplexity);\n        break;\n\n      case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]:\n        setComplexityRuleData(currentReferral);\n        break;\n\n      default:\n        setComplexityRuleData(currentComplexity);\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(RemoveClaimsComplexityRuleValueView, {\n    actions: actions,\n    complexityRuleData: complexityRuleData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 10\n  }, this);\n}\n\n_s(RemoveClaimsComplexityRuleValue, \"wIz9e469fiezvv5qb3+y2/1/kKM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = RemoveClaimsComplexityRuleValue;\nRemoveClaimsComplexityRuleValue.displayName = \"RemoveClaimsComplexityRuleValue\";\nRemoveClaimsComplexityRuleValue.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"RemoveClaimsComplexityRuleValue\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\RemoveClaimsComplexityRuleValue\\\\RemoveClaimsComplexityRuleValue.js\"] = {\n    name: \"RemoveClaimsComplexityRuleValue\",\n    docgenInfo: RemoveClaimsComplexityRuleValue.__docgenInfo,\n    path: \"src\\\\forms\\\\RemoveClaimsComplexityRuleValue\\\\RemoveClaimsComplexityRuleValue.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveClaimsComplexityRuleValue\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/RemoveClaimsComplexityRuleValue/RemoveClaimsComplexityRuleValue.js"],"names":["React","useState","useEffect","useDispatch","useSelector","RemoveClaimsComplexityRuleValueView","hideModal","selectComplexityManagementTab","selectComplexityBasisValueId","selectComplexityReferralValueId","removeComplexityBasisRuleValue","removeComplexityReferralRuleValue","utils","constants","RemoveClaimsComplexityRuleValue","dispatch","complexityRuleData","setComplexityRuleData","currentTab","currentComplexity","currentReferral","actions","name","label","string","t","handler","CLAIM_COMPLEXITY_MANAGEMENT_TABS"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,mCAAT,QAAoD,wCAApD;AACA,SACEC,SADF,EAEEC,6BAFF,EAGEC,4BAHF,EAIEC,+BAJF,EAKEC,8BALF,EAMEC,iCANF,QAOO,QAPP;AAQA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;;AAEA,eAAe,SAASC,+BAAT,GAA2C;AAAA;;AACxD,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;;AADwD,kBAEJF,QAAQ,CAAC,EAAD,CAFJ;AAAA;AAAA,MAEjDe,kBAFiD;AAAA,MAE7BC,qBAF6B;;AAIxD,MAAMC,UAAU,GAAGd,WAAW,CAACG,6BAAD,CAA9B;AACA,MAAMY,iBAAiB,GAAGf,WAAW,CAACI,4BAAD,CAArC;AACA,MAAMY,eAAe,GAAGhB,WAAW,CAACK,+BAAD,CAAnC;AAEA,MAAMY,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAEX,KAAK,CAACY,MAAN,CAAaC,CAAb,CAAe,SAAf,CAFT;AAGEC,IAAAA,OAAO,EAAE,mBAAM;AACb,UAAIR,UAAU,KAAKL,SAAS,CAACc,gCAAV,CAA2C,CAA3C,CAAnB,EAAkE;AAChEZ,QAAAA,QAAQ,CAACL,8BAA8B,EAA/B,CAAR;AACD,OAFD,MAEO,IAAIQ,UAAU,KAAKL,SAAS,CAACc,gCAAV,CAA2C,CAA3C,CAAnB,EAAkE;AACvEZ,QAAAA,QAAQ,CAACJ,iCAAiC,EAAlC,CAAR;AACD;;AACDI,MAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACD;AAVH,GADc,EAad;AACEgB,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAEX,KAAK,CAACY,MAAN,CAAaC,CAAb,CAAe,QAAf,CAFT;AAGEC,IAAAA,OAAO,EAAE;AAAA,aAAMX,QAAQ,CAACT,SAAS,EAAV,CAAd;AAAA;AAHX,GAbc,CAAhB;AAoBAJ,EAAAA,SAAS,CAAC,YAAM;AACd,YAAQgB,UAAR;AACE,WAAKL,SAAS,CAACc,gCAAV,CAA2C,CAA3C,CAAL;AACEV,QAAAA,qBAAqB,CAACE,iBAAD,CAArB;AACA;;AACF,WAAKN,SAAS,CAACc,gCAAV,CAA2C,CAA3C,CAAL;AACEV,QAAAA,qBAAqB,CAACG,eAAD,CAArB;AACA;;AACF;AACEH,QAAAA,qBAAqB,CAACE,iBAAD,CAArB;AARJ;AAUD,GAXQ,EAWN,EAXM,CAAT,CA5BwD,CAuChD;;AAER,sBAAO,QAAC,mCAAD;AAAqC,IAAA,OAAO,EAAEE,OAA9C;AAAuD,IAAA,kBAAkB,EAAEL;AAA3E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA1CuBF,+B;UACLX,W,EAGEC,W,EACOA,W,EACFA,W;;;KANFU,+B;AAAAA,+B","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { RemoveClaimsComplexityRuleValueView } from './RemoveClaimsComplexityRuleValue.view';\r\nimport {\r\n  hideModal,\r\n  selectComplexityManagementTab,\r\n  selectComplexityBasisValueId,\r\n  selectComplexityReferralValueId,\r\n  removeComplexityBasisRuleValue,\r\n  removeComplexityReferralRuleValue,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport default function RemoveClaimsComplexityRuleValue() {\r\n  const dispatch = useDispatch();\r\n  const [complexityRuleData, setComplexityRuleData] = useState({});\r\n\r\n  const currentTab = useSelector(selectComplexityManagementTab);\r\n  const currentComplexity = useSelector(selectComplexityBasisValueId);\r\n  const currentReferral = useSelector(selectComplexityReferralValueId);\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => {\r\n        if (currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]) {\r\n          dispatch(removeComplexityBasisRuleValue());\r\n        } else if (currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]) {\r\n          dispatch(removeComplexityReferralRuleValue());\r\n        }\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.no'),\r\n      handler: () => dispatch(hideModal()),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    switch (currentTab) {\r\n      case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]:\r\n        setComplexityRuleData(currentComplexity);\r\n        break;\r\n      case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]:\r\n        setComplexityRuleData(currentReferral);\r\n        break;\r\n      default:\r\n        setComplexityRuleData(currentComplexity);\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return <RemoveClaimsComplexityRuleValueView actions={actions} complexityRuleData={complexityRuleData} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}