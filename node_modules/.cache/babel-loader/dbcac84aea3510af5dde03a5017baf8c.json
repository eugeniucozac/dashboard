{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\HeaderNav\\\\HeaderNav.stories.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Provider } from 'react-redux';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport thunk from 'redux-thunk';\nimport reducer from 'stores';\nimport { HeaderNav } from 'components';\nimport { boolean as _boolean, withKnobs } from '@storybook/addon-knobs';\nimport merge from 'lodash/merge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'HeaderNav',\n  component: HeaderNav,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  var getStore = function getStore(obj) {\n    var enhancer = compose(applyMiddleware(thunk));\n    var defaultStore = createStore(reducer, {}, enhancer);\n    var preloadedState = merge(defaultStore.getState(), obj); // return default store if no custom JSON is passed\n\n    if (!obj) {\n      return defaultStore;\n    } // otherwise, return new deeply-merged store with data from JSON obj\n\n\n    return createStore(reducer, preloadedState, enhancer);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: getStore(),\n    children: /*#__PURE__*/_jsxDEV(HeaderNav, {\n      showFloatingButton: _boolean('ShowFloatingButton', true),\n      showMagnifierButton: _boolean('ShowMagnifierButton', true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, _this);\n};\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\HeaderNav\\\\HeaderNav.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\HeaderNav\\\\HeaderNav.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/HeaderNav/HeaderNav.stories.js"],"names":["React","Provider","applyMiddleware","createStore","compose","thunk","reducer","HeaderNav","boolean","withKnobs","merge","title","component","decorators","Default","getStore","obj","enhancer","defaultStore","preloadedState","getState"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,QAApB;AAEA,SAASC,SAAT,QAA0B,YAA1B;AACA,SAASC,OAAO,IAAPA,QAAT,EAAkBC,SAAlB,QAAmC,wBAAnC;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,WADM;AAEbC,EAAAA,SAAS,EAAEL,SAFE;AAGbM,EAAAA,UAAU,EAAE,CAACJ,SAAD;AAHC,CAAf;AAMA,OAAO,IAAMK,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACxB,QAAMC,QAAQ,GAAGb,OAAO,CAACF,eAAe,CAACG,KAAD,CAAhB,CAAxB;AACA,QAAMa,YAAY,GAAGf,WAAW,CAACG,OAAD,EAAU,EAAV,EAAcW,QAAd,CAAhC;AACA,QAAME,cAAc,GAAGT,KAAK,CAACQ,YAAY,CAACE,QAAb,EAAD,EAA0BJ,GAA1B,CAA5B,CAHwB,CAKxB;;AACA,QAAI,CAACA,GAAL,EAAU;AACR,aAAOE,YAAP;AACD,KARuB,CAUxB;;;AACA,WAAOf,WAAW,CAACG,OAAD,EAAUa,cAAV,EAA0BF,QAA1B,CAAlB;AACD,GAZD;;AAaA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEF,QAAQ,EAAzB;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,kBAAkB,EAAEP,QAAO,CAAC,oBAAD,EAAuB,IAAvB,CAAtC;AAAoE,MAAA,mBAAmB,EAAEA,QAAO,CAAC,qBAAD,EAAwB,IAAxB;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAnBM;AAAMM,O;KAAAA,O","sourcesContent":["import React from 'react';\r\nimport { Provider } from 'react-redux';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from 'stores';\r\n\r\nimport { HeaderNav } from 'components';\r\nimport { boolean, withKnobs } from '@storybook/addon-knobs';\r\nimport merge from 'lodash/merge';\r\n\r\nexport default {\r\n  title: 'HeaderNav',\r\n  component: HeaderNav,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const getStore = (obj) => {\r\n    const enhancer = compose(applyMiddleware(thunk));\r\n    const defaultStore = createStore(reducer, {}, enhancer);\r\n    const preloadedState = merge(defaultStore.getState(), obj);\r\n\r\n    // return default store if no custom JSON is passed\r\n    if (!obj) {\r\n      return defaultStore;\r\n    }\r\n\r\n    // otherwise, return new deeply-merged store with data from JSON obj\r\n    return createStore(reducer, preloadedState, enhancer);\r\n  };\r\n  return (\r\n    <Provider store={getStore()}>\r\n      <HeaderNav showFloatingButton={boolean('ShowFloatingButton', true)} showMagnifierButton={boolean('ShowMagnifierButton', true)} />\r\n    </Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}