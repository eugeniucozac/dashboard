{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexData\\\\ClaimsComplexData.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux'; //app\n\nimport { ClaimsComplexDataView } from './ClaimsComplexData.view';\nimport { updateComplexStatus } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClaimsComplexData(_ref) {\n  _s();\n\n  var store = _ref.store,\n      control = _ref.control,\n      register = _ref.register,\n      watch = _ref.watch,\n      data = _ref.data,\n      setData = _ref.setData,\n      getData = _ref.getData,\n      resetData = _ref.resetData,\n      columns = _ref.columns,\n      saveComplexButton = _ref.saveComplexButton,\n      selectedPolicyItemsHandler = _ref.selectedPolicyItemsHandler,\n      complexityFlag = _ref.complexityFlag,\n      postSaveComplexPolicyHandler = _ref.postSaveComplexPolicyHandler,\n      enableDisableFlag = _ref.enableDisableFlag,\n      selectedPoliciesData = _ref.selectedPoliciesData,\n      _ref$pageSizeDefault = _ref.pageSizeDefault,\n      pageSizeDefault = _ref$pageSizeDefault === void 0 ? 10 : _ref$pageSizeDefault,\n      searchBy = _ref.searchBy,\n      checkedBy = _ref.checkedBy,\n      title = _ref.title;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState({\n    items: []\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rows = _useState4[0],\n      setRows = _useState4[1];\n\n  var _useState5 = useState(pageSizeDefault),\n      _useState6 = _slicedToArray(_useState5, 2),\n      pageSize = _useState6[0],\n      setPageSize = _useState6[1];\n\n  var getStoreData = function getStoreData(_ref2) {\n    var _ref2$size = _ref2.size,\n        size = _ref2$size === void 0 ? pageSize : _ref2$size,\n        _ref2$page = _ref2.page,\n        page = _ref2$page === void 0 ? 0 : _ref2$page,\n        term = _ref2.term,\n        _ref2$by = _ref2.by,\n        by = _ref2$by === void 0 ? searchBy : _ref2$by,\n        _ref2$dir = _ref2.dir,\n        dir = _ref2$dir === void 0 ? 'asc' : _ref2$dir;\n    var items = data.filter(function (item) {\n      return item[searchBy].includes(term) || item.insured.includes(term);\n    }).sort(function (a, b) {\n      return dir === 'asc' ? a[by].localeCompare(b[by]) : b[by].localeCompare(a[by]);\n    });\n    setPageSize(size);\n    var pageTotal = Math.ceil(items.length / size);\n    setRows({\n      items: items.slice(page * size, page * size + size),\n      itemsTotal: items.length,\n      page: page,\n      pageSize: size,\n      pageTotal: pageTotal\n    });\n  };\n\n  useEffect(function () {\n    var query = {\n      size: pageSize,\n      page: 0,\n      term: '',\n      by: searchBy,\n      dir: 'asc'\n    };\n    store ? getStoreData(query) : getData(query);\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleReset = function handleReset() {\n    setSearchTerm('');\n  };\n\n  var handleSearch = function handleSearch(query) {\n    setSearchTerm(query);\n    return store ? getStoreData({\n      term: query\n    }) : dispatch(getData({\n      term: query\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    if (complexityFlag) {\n      var page = {\n        page: newPage\n      };\n      dispatch(updateComplexStatus(page));\n    }\n\n    store ? getStoreData({\n      page: newPage,\n      term: searchTerm\n    }) : dispatch(getData({\n      page: newPage,\n      term: searchTerm\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    if (complexityFlag) {\n      var _pageSize = {\n        pageSize: rowsPerPage\n      };\n      dispatch(updateComplexStatus(_pageSize));\n    }\n\n    store ? getStoreData({\n      size: rowsPerPage,\n      term: searchTerm\n    }) : dispatch(getData({\n      size: rowsPerPage,\n      term: searchTerm\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    if (complexityFlag) {\n      var sortComplex = {\n        sort: {\n          by: by,\n          direction: dir.toUpperCase()\n        }\n      };\n      dispatch(updateComplexStatus(sortComplex));\n    }\n\n    store ? getStoreData({\n      by: by,\n      dir: dir,\n      term: searchTerm\n    }) : dispatch(getData({\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm\n    }));\n  };\n\n  useEffect(function () {\n    // cleanup\n    //dispatch(getData({ term: '' }));\n    return function () {\n      !store && dispatch(setData()); //dispatch(resetData());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ClaimsComplexDataView, {\n      cols: columns,\n      rows: store ? rows : data,\n      sort: _objectSpread(_objectSpread({}, rows.sort), {}, {\n        type: 'id'\n      }),\n      pagination: {\n        page: store ? rows.page : data.page,\n        rowsTotal: store ? rows.itemsTotal : data.itemsTotal,\n        rowsPerPage: store ? rows.pageSize : data.pageSize\n      },\n      control: control,\n      watch: watch,\n      register: register,\n      setData: setData,\n      handleSort: handleSort,\n      handleSearch: handleSearch,\n      handleReset: handleReset,\n      handleChangePage: handleChangePage,\n      handleChangeRowsPerPage: handleChangeRowsPerPage,\n      saveComplexButton: saveComplexButton,\n      selectedPolicyItemsHandler: selectedPolicyItemsHandler,\n      complexityFlag: complexityFlag,\n      postSaveComplexPolicyHandler: postSaveComplexPolicyHandler,\n      enableDisableFlag: enableDisableFlag,\n      selectedPoliciesData: selectedPoliciesData,\n      title: title,\n      searchBy: searchBy,\n      checkedBy: checkedBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsComplexData, \"ZolvMzlwZuhwIjFg7dZTT76HLNA=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ClaimsComplexData;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexData\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexData/ClaimsComplexData.js"],"names":["React","useState","useEffect","useDispatch","ClaimsComplexDataView","updateComplexStatus","ClaimsComplexData","store","control","register","watch","data","setData","getData","resetData","columns","saveComplexButton","selectedPolicyItemsHandler","complexityFlag","postSaveComplexPolicyHandler","enableDisableFlag","selectedPoliciesData","pageSizeDefault","searchBy","checkedBy","title","dispatch","searchTerm","setSearchTerm","items","rows","setRows","pageSize","setPageSize","getStoreData","size","page","term","by","dir","filter","item","includes","insured","sort","a","b","localeCompare","pageTotal","Math","ceil","length","slice","itemsTotal","query","handleReset","handleSearch","handleChangePage","newPage","handleChangeRowsPerPage","rowsPerPage","handleSort","sortComplex","direction","toUpperCase","sortBy","type","rowsTotal"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//app\r\nimport { ClaimsComplexDataView } from './ClaimsComplexData.view';\r\nimport { updateComplexStatus } from 'stores';\r\n\r\nexport default function ClaimsComplexData({\r\n  store,\r\n  control,\r\n  register,\r\n  watch,\r\n  data,\r\n  setData,\r\n  getData,\r\n  resetData,\r\n  columns,\r\n  saveComplexButton,\r\n  selectedPolicyItemsHandler,\r\n  complexityFlag,\r\n  postSaveComplexPolicyHandler,\r\n  enableDisableFlag,\r\n  selectedPoliciesData,\r\n  pageSizeDefault = 10,\r\n  searchBy,\r\n  checkedBy,\r\n  title,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [rows, setRows] = useState({ items: [] });\r\n  const [pageSize, setPageSize] = useState(pageSizeDefault);\r\n\r\n  const getStoreData = ({ size = pageSize, page = 0, term, by = searchBy, dir = 'asc' }) => {\r\n    const items = data\r\n      .filter((item) => item[searchBy].includes(term) || item.insured.includes(term))\r\n      .sort((a, b) => (dir === 'asc' ? a[by].localeCompare(b[by]) : b[by].localeCompare(a[by])));\r\n    setPageSize(size);\r\n    const pageTotal = Math.ceil(items.length / size);\r\n    setRows({ items: items.slice(page * size, page * size + size), itemsTotal: items.length, page, pageSize: size, pageTotal });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const query = { size: pageSize, page: 0, term: '', by: searchBy, dir: 'asc' };\r\n    store ? getStoreData(query) : getData(query);\r\n  }, [data]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleReset = () => {\r\n    setSearchTerm('');\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchTerm(query);\r\n    return store ? getStoreData({ term: query }) : dispatch(getData({ term: query }));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    if (complexityFlag) {\r\n      const page = { page: newPage };\r\n      dispatch(updateComplexStatus(page));\r\n    }\r\n    store ? getStoreData({ page: newPage, term: searchTerm }) : dispatch(getData({ page: newPage, term: searchTerm }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    if (complexityFlag) {\r\n      const pageSize = { pageSize: rowsPerPage };\r\n      dispatch(updateComplexStatus(pageSize));\r\n    }\r\n    store ? getStoreData({ size: rowsPerPage, term: searchTerm }) : dispatch(getData({ size: rowsPerPage, term: searchTerm }));\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    if (complexityFlag) {\r\n      const sortComplex = {\r\n        sort: {\r\n          by: by,\r\n          direction: dir.toUpperCase(),\r\n        },\r\n      };\r\n      dispatch(updateComplexStatus(sortComplex));\r\n    }\r\n    store ? getStoreData({ by, dir, term: searchTerm }) : dispatch(getData({ sortBy: by, direction: dir.toUpperCase(), term: searchTerm }));\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      // cleanup\r\n      //dispatch(getData({ term: '' }));\r\n      return () => {\r\n        !store && dispatch(setData());\r\n        //dispatch(resetData());\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  return (\r\n    <>\r\n      <ClaimsComplexDataView\r\n        cols={columns}\r\n        rows={store ? rows : data}\r\n        sort={{\r\n          ...rows.sort,\r\n          type: 'id',\r\n        }}\r\n        pagination={{\r\n          page: store ? rows.page : data.page,\r\n          rowsTotal: store ? rows.itemsTotal : data.itemsTotal,\r\n          rowsPerPage: store ? rows.pageSize : data.pageSize,\r\n        }}\r\n        control={control}\r\n        watch={watch}\r\n        register={register}\r\n        setData={setData}\r\n        handleSort={handleSort}\r\n        handleSearch={handleSearch}\r\n        handleReset={handleReset}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        saveComplexButton={saveComplexButton}\r\n        selectedPolicyItemsHandler={selectedPolicyItemsHandler}\r\n        complexityFlag={complexityFlag}\r\n        postSaveComplexPolicyHandler={postSaveComplexPolicyHandler}\r\n        enableDisableFlag={enableDisableFlag}\r\n        selectedPoliciesData={selectedPoliciesData}\r\n        title={title}\r\n        searchBy={searchBy}\r\n        checkedBy={checkedBy}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}