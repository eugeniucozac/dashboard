{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ConfirmWithComment\\\\ConfirmWithComment.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './ConfirmWithComment.styles';\nimport * as utils from 'utils';\nimport { Button, FormContainer, FormActions, FormText, FormFields } from 'components'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nConfirmWithCommentView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  handleConfirm: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  confirmMessage: PropTypes.string,\n  warningMessage: PropTypes.string,\n  buttonColors: PropTypes.object,\n  commentProps: PropTypes.object\n};\nexport function ConfirmWithCommentView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      handleConfirm = _ref.handleConfirm,\n      handleClose = _ref.handleClose,\n      cancelLabel = _ref.cancelLabel,\n      confirmLabel = _ref.confirmLabel,\n      confirmMessage = _ref.confirmMessage,\n      warningMessage = _ref.warningMessage,\n      _ref$buttonColors = _ref.buttonColors,\n      buttonColors = _ref$buttonColors === void 0 ? {\n    confirm: 'primary',\n    cancel: 'default'\n  } : _ref$buttonColors;\n  var classes = makeStyles(styles, {\n    name: 'ConfirmWithComment'\n  })();\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({}, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      formState = _useForm.formState,\n      getValues = _useForm.getValues;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [confirmMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.message,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        \"data-testid\": \"confirm-message\",\n        children: confirmMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 9\n    }, this), warningMessage && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.warning,\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        \"data-testid\": \"warning-message\",\n        className: classes.warningText,\n        children: warningMessage\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.comment,\n          children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'comments', control, errors)), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        divider: false,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: cancelLabel || utils.string.t('app.cancel'),\n          variant: \"text\",\n          color: buttonColors.cancel,\n          onClick: handleClose,\n          \"data-testid\": \"cancel-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: confirmLabel || utils.string.t('app.confirm'),\n          onClick: function onClick() {\n            return handleConfirm(getValues('comments'));\n          },\n          disabled: !formState.isDirty,\n          color: buttonColors.confirm,\n          \"data-testid\": \"confirm-button\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 42,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ConfirmWithCommentView, \"fxSKbLmPhB2KTtWzjzkEfviOKTM=\", false, function () {\n  return [useForm];\n});\n\n_c = ConfirmWithCommentView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmWithCommentView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ConfirmWithComment/ConfirmWithComment.view.js"],"names":["React","PropTypes","yupResolver","styles","utils","Button","FormContainer","FormActions","FormText","FormFields","makeStyles","Typography","useForm","ConfirmWithCommentView","propTypes","fields","array","isRequired","handleConfirm","func","handleClose","cancelLabel","string","confirmLabel","confirmMessage","warningMessage","buttonColors","object","commentProps","confirm","cancel","classes","name","validationSchema","form","getValidationSchema","resolver","control","errors","formState","getValues","root","message","warning","warningText","comment","getFieldProps","t","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './ConfirmWithComment.styles';\r\nimport * as utils from 'utils';\r\nimport { Button, FormContainer, FormActions, FormText, FormFields } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nConfirmWithCommentView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  handleConfirm: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  cancelLabel: PropTypes.string,\r\n  confirmLabel: PropTypes.string,\r\n  confirmMessage: PropTypes.string,\r\n  warningMessage: PropTypes.string,\r\n  buttonColors: PropTypes.object,\r\n  commentProps: PropTypes.object,\r\n};\r\n\r\nexport function ConfirmWithCommentView({\r\n  fields,\r\n  handleConfirm,\r\n  handleClose,\r\n  cancelLabel,\r\n  confirmLabel,\r\n  confirmMessage,\r\n  warningMessage,\r\n  buttonColors = { confirm: 'primary', cancel: 'default' },\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ConfirmWithComment' })();\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, errors, formState, getValues } = useForm({\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  return (\r\n    <div className={classes.root}>\r\n      {confirmMessage && (\r\n        <div className={classes.message}>\r\n          <Typography data-testid=\"confirm-message\">{confirmMessage}</Typography>\r\n        </div>\r\n      )}\r\n\r\n      {warningMessage && (\r\n        <div className={classes.warning}>\r\n          <Typography data-testid=\"warning-message\" className={classes.warningText}>\r\n            {warningMessage}\r\n          </Typography>\r\n        </div>\r\n      )}\r\n\r\n      <FormContainer type=\"dialog\">\r\n        <FormFields>\r\n          <div className={classes.comment}>\r\n            <FormText {...utils.form.getFieldProps(fields, 'comments', control, errors)} />\r\n          </div>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\" divider={false}>\r\n          <Button\r\n            text={cancelLabel || utils.string.t('app.cancel')}\r\n            variant=\"text\"\r\n            color={buttonColors.cancel}\r\n            onClick={handleClose}\r\n            data-testid=\"cancel-button\"\r\n          />\r\n          <Button\r\n            text={confirmLabel || utils.string.t('app.confirm')}\r\n            onClick={() => {\r\n              return handleConfirm(getValues('comments'));\r\n            }}\r\n            disabled={!formState.isDirty}\r\n            color={buttonColors.confirm}\r\n            data-testid=\"confirm-button\"\r\n          />\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}