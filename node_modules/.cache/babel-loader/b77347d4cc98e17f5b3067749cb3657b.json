{"ast":null,"code":"import moment from 'moment'; // app\n\nimport * as utils from 'utils';\nimport config from 'config';\nvar utilsAdditionalDetails = {\n  getLossCardInfo: function getLossCardInfo(lossInformation, catCodes, isInflightLoss, isLoading) {\n    var _catCodes$find;\n\n    return [{\n      title: utils.string.t('claims.lossInformation.ref'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.fromDate'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.toDate'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.name'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime) || (isInflightLoss ? 'NA' : ''),\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.assignedTo'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName) || (isInflightLoss ? 'NA' : '')\n    }, {\n      title: utils.string.t('claims.lossInformation.details'),\n      value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.lossInformation.catCode'),\n      value: !utils.generic.isInvalidOrEmptyArray(catCodes) ? ((_catCodes$find = catCodes.find(function (item) {\n        return Number(item === null || item === void 0 ? void 0 : item.catCodesID) === Number(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.catCodesID);\n      })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.catCodeDescription) || 'NA' : 'NA',\n      isLoading: isLoading\n    }];\n  },\n  getPolicyCardInfo: function getPolicyCardInfo(policyInformation, claimsInformation, interests, originalCurrencies, settlementCurrencies, countriesList, isPolicyInfoLoading, isClaimInfoLoading) {\n    var _interests$find, _originalCurrencies$f, _settlementCurrencies, _countriesList$find;\n\n    return [{\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.company'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.division'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.client'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.insured'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n      value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA',\n      isLoading: isPolicyInfoLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\n      value: (interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n        return (item === null || item === void 0 ? void 0 : item.policyInterestID) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyInterestID);\n      })) === null || _interests$find === void 0 ? void 0 : _interests$find.description) || 'NA',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA' : 'NA',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA' : 'NA',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber) || 'NA' : 'NA',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\n      value: !utils.generic.isInvalidOrEmptyArray(originalCurrencies) && (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) ? \"\".concat(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency, \" - \").concat((_originalCurrencies$f = originalCurrencies.find(function (currency) {\n        var _currency$currencyCd, _claimsInformation$or;\n\n        return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$or = claimsInformation.originalCurrency) === null || _claimsInformation$or === void 0 ? void 0 : _claimsInformation$or.toLowerCase());\n      })) === null || _originalCurrencies$f === void 0 ? void 0 : _originalCurrencies$f.currencyName) : '--',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\n      value: !utils.generic.isInvalidOrEmptyArray(settlementCurrencies) && (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) ? \"\".concat(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode, \" - \").concat((_settlementCurrencies = settlementCurrencies.find(function (currency) {\n        var _currency$currencyCd2, _claimsInformation$se;\n\n        return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd2 = currency.currencyCd) === null || _currency$currencyCd2 === void 0 ? void 0 : _currency$currencyCd2.toLowerCase()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$se = claimsInformation.settlementCurrencyCode) === null || _claimsInformation$se === void 0 ? void 0 : _claimsInformation$se.toLowerCase());\n      })) === null || _settlementCurrencies === void 0 ? void 0 : _settlementCurrencies.currencyName) : '--',\n      isLoading: isClaimInfoLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.country'),\n      value: !utils.generic.isInvalidOrEmptyArray(countriesList) && (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) ? countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n        var _country$countryCode, _claimsInformation$se2;\n\n        return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$se2 = claimsInformation.settlementCountry) === null || _claimsInformation$se2 === void 0 ? void 0 : _claimsInformation$se2.toLowerCase());\n      })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName : '--',\n      isLoading: isClaimInfoLoading\n    }];\n  },\n  getClaimCardInfo: function getClaimCardInfo(claimsInformation, lossQualifiers, isLoading) {\n    var _lossQualifiers$find;\n\n    return [{\n      title: utils.string.t('claims.claimInformation.claimRef'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.claimant'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.lossQualifier'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName) || (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierID) ? lossQualifiers === null || lossQualifiers === void 0 ? void 0 : (_lossQualifiers$find = lossQualifiers.find(function (Lq) {\n        return Number(Lq === null || Lq === void 0 ? void 0 : Lq.id) === Number(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierID);\n      })) === null || _lossQualifiers$find === void 0 ? void 0 : _lossQualifiers$find.name : 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.location'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.fguNarrative'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.priority'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.adjustorType'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster'),\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.adjustorName'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterName : claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.nonBEAdjusterName,\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.adjustorRef'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.complexityBasis'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.referral'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.rfiResponse'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.claimInformation.claimStatus'),\n      value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus) || 'NA',\n      isLoading: isLoading\n    }];\n  },\n  getTaskCardInfo: function getTaskCardInfo(taskInformation, sanctionCheckStatus, isLoading) {\n    return [{\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.taskRef) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.targetDueDate) && moment(taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.targetDueDate).format(config.ui.format.date.text) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.status'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.status) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.taskType) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.assigneeFullName) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.priority) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\n      value: (taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.createdOn) && moment(taskInformation === null || taskInformation === void 0 ? void 0 : taskInformation.createdOn).format(config.ui.format.date.text) || 'NA',\n      isLoading: isLoading\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\n      value: (sanctionCheckStatus === null || sanctionCheckStatus === void 0 ? void 0 : sanctionCheckStatus.value) || 'NA',\n      isLoading: isLoading\n    }];\n  }\n};\nexport default utilsAdditionalDetails;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/claims/additionalDetails.js"],"names":["moment","utils","config","utilsAdditionalDetails","getLossCardInfo","lossInformation","catCodes","isInflightLoss","isLoading","title","string","t","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","assignedToName","lossDescription","generic","isInvalidOrEmptyArray","find","item","Number","catCodesID","catCodeDescription","getPolicyCardInfo","policyInformation","claimsInformation","interests","originalCurrencies","settlementCurrencies","countriesList","isPolicyInfoLoading","isClaimInfoLoading","policyRef","policyType","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","description","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","originalCurrency","currency","currencyCd","toLowerCase","currencyName","settlementCurrencyCode","settlementCountry","country","countryCode","countryName","getClaimCardInfo","lossQualifiers","claimReference","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","lossQualifierID","Lq","id","name","location","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","bordereauClaim","bordereauPeriod","claimStatus","getTaskCardInfo","taskInformation","sanctionCheckStatus","taskRef","targetDueDate","text","status","taskType","assigneeFullName","priority","createdOn"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nconst utilsAdditionalDetails = {\r\n  getLossCardInfo: (lossInformation, catCodes, isInflightLoss, isLoading) => {\r\n    return [\r\n      { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.lossInformation.fromDate'),\r\n        value: (lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric)) || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.lossInformation.toDate'),\r\n        value: (lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric)) || 'NA',\r\n        isLoading,\r\n      },\r\n      { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n        value:\r\n          (lossInformation?.firstContactDate &&\r\n            moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n          (isInflightLoss ? 'NA' : ''),\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.lossInformation.assignedTo'),\r\n        value: lossInformation?.assignedToName || (isInflightLoss ? 'NA' : ''),\r\n      },\r\n      { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.lossInformation.catCode'),\r\n        value: !utils.generic.isInvalidOrEmptyArray(catCodes)\r\n          ? catCodes.find((item) => Number(item?.catCodesID) === Number(lossInformation?.catCodesID))?.catCodeDescription || 'NA'\r\n          : 'NA',\r\n        isLoading,\r\n      },\r\n    ];\r\n  },\r\n\r\n  getPolicyCardInfo: (\r\n    policyInformation,\r\n    claimsInformation,\r\n    interests,\r\n    originalCurrencies,\r\n    settlementCurrencies,\r\n    countriesList,\r\n    isPolicyInfoLoading,\r\n    isClaimInfoLoading\r\n  ) => {\r\n    return [\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n        value: policyInformation?.policyRef || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n        value: policyInformation?.policyType || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n        value: policyInformation?.statusCode || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.company'),\r\n        value: policyInformation?.company || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.division'),\r\n        value: policyInformation?.division || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n        value: policyInformation?.policyNote || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.client'),\r\n        value: policyInformation?.client || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.insured'),\r\n        value: policyInformation?.insured || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n        value: policyInformation?.reInsured || 'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n        value:\r\n          (policyInformation?.inceptionDate &&\r\n            moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n          'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n        value:\r\n          (policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n          'NA',\r\n        isLoading: isPolicyInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n        value: interests?.find((item) => item?.policyInterestID === claimsInformation?.policyInterestID)?.description || 'NA',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n        value: claimsInformation?.isBordereau\r\n          ? (claimsInformation?.certificateInceptionDate &&\r\n              moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n            'NA'\r\n          : 'NA',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n        value: claimsInformation?.isBordereau\r\n          ? (claimsInformation?.certificateExpiryDate &&\r\n              moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n            'NA'\r\n          : 'NA',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n        value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber || 'NA' : 'NA',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n        value:\r\n          !utils.generic.isInvalidOrEmptyArray(originalCurrencies) && claimsInformation?.originalCurrency\r\n            ? `${claimsInformation?.originalCurrency} - ${\r\n                originalCurrencies.find(\r\n                  (currency) => currency?.currencyCd?.toLowerCase() === claimsInformation?.originalCurrency?.toLowerCase()\r\n                )?.currencyName\r\n              }`\r\n            : '--',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n        value:\r\n          !utils.generic.isInvalidOrEmptyArray(settlementCurrencies) && claimsInformation?.settlementCurrencyCode\r\n            ? `${claimsInformation?.settlementCurrencyCode} - ${\r\n                settlementCurrencies.find(\r\n                  (currency) => currency?.currencyCd?.toLowerCase() === claimsInformation?.settlementCurrencyCode?.toLowerCase()\r\n                )?.currencyName\r\n              }`\r\n            : '--',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.country'),\r\n        value:\r\n          !utils.generic.isInvalidOrEmptyArray(countriesList) && claimsInformation?.settlementCountry\r\n            ? countriesList?.find((country) => country?.countryCode?.toLowerCase() === claimsInformation?.settlementCountry?.toLowerCase())\r\n                ?.countryName\r\n            : '--',\r\n        isLoading: isClaimInfoLoading,\r\n      },\r\n    ];\r\n  },\r\n\r\n  getClaimCardInfo: (claimsInformation, lossQualifiers, isLoading) => {\r\n    return [\r\n      {\r\n        title: utils.string.t('claims.claimInformation.claimRef'),\r\n        value: claimsInformation?.claimReference || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n        value:\r\n          (claimsInformation?.claimReceivedDate &&\r\n            moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric)) ||\r\n          'NA',\r\n        isLoading,\r\n      },\r\n      { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n        value:\r\n          (claimsInformation?.lossFromDate &&\r\n            moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n          'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n        value:\r\n          (claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)) ||\r\n          'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.lossQualifier'),\r\n        value:\r\n          claimsInformation?.lossQualifierName || claimsInformation?.lossQualifierID\r\n            ? lossQualifiers?.find((Lq) => Number(Lq?.id) === Number(claimsInformation?.lossQualifierID))?.name\r\n            : 'NA',\r\n        isLoading,\r\n      },\r\n      { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.fguNarrative'),\r\n        value: claimsInformation?.fgunarrative || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.priority'),\r\n        value: claimsInformation?.priorityDescription || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.adjustorType'),\r\n        value:\r\n          claimsInformation?.beAdjusterID === 0\r\n            ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n            : utils.string.t('claims.claimInformation.beAdjuster'),\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.adjustorName'),\r\n        value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation?.adjusterName : claimsInformation?.nonBEAdjusterName,\r\n        isLoading,\r\n      },\r\n\r\n      {\r\n        title: utils.string.t('claims.claimInformation.adjustorRef'),\r\n        value: claimsInformation?.adjusterReference || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.complexityBasis'),\r\n        value: claimsInformation?.complexity || 'NA',\r\n        isLoading,\r\n      },\r\n      { title: utils.string.t('claims.claimInformation.referral'), value: claimsInformation?.referralValue || 'NA', isLoading },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.rfiResponse'),\r\n        value: claimsInformation?.referralResponseDescription || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n        value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n        value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.claimInformation.claimStatus'),\r\n        value: claimsInformation?.claimStatus || 'NA',\r\n        isLoading,\r\n      },\r\n    ];\r\n  },\r\n\r\n  getTaskCardInfo: (taskInformation, sanctionCheckStatus, isLoading) => {\r\n    return [\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\r\n        value: taskInformation?.taskRef || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n        value: (taskInformation?.targetDueDate && moment(taskInformation?.targetDueDate).format(config.ui.format.date.text)) || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.status'),\r\n        value: taskInformation?.status || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\r\n        value: taskInformation?.taskType || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\r\n        value: taskInformation?.assigneeFullName || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\r\n        value: taskInformation?.priority || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\r\n        value: (taskInformation?.createdOn && moment(taskInformation?.createdOn).format(config.ui.format.date.text)) || 'NA',\r\n        isLoading,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\r\n        value: sanctionCheckStatus?.value || 'NA',\r\n        isLoading,\r\n      },\r\n    ];\r\n  },\r\n};\r\n\r\nexport default utilsAdditionalDetails;\r\n"]},"metadata":{},"sourceType":"module"}