{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, removeLoader } from 'stores';\nexport var premiumProcessingBureauRFIDetails = function premiumProcessingBureauRFIDetails(caseId) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.premiumProcessingBureauRFIDetails'\n    };\n\n    if (!caseId) {\n      dispatch(premiumProcessingBureauRFIDetailsError(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing insured or cover holder name search query'\n      })));\n      return;\n    }\n\n    dispatch(premiumProcessingBureauRFIDetailsRequest(caseId));\n    dispatch(addLoader('premiumProcessingBureauRFIDetails'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"workflow/task/newrfi/details/\".concat(caseId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(premiumProcessingBureauRFIDetailsSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data === null || data === void 0 ? void 0 : data.data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessingBureauRFIDetails)'\n      }));\n      dispatch(premiumProcessingBureauRFIDetailsError(error));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n    }).finally(function () {\n      dispatch(removeLoader('premiumProcessingBureauRFIDetails'));\n    });\n  };\n};\nexport var premiumProcessingBureauRFIDetailsRequest = function premiumProcessingBureauRFIDetailsRequest(caseId) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_REQUEST',\n    payload: caseId\n  };\n};\nexport var premiumProcessingBureauRFIDetailsSuccess = function premiumProcessingBureauRFIDetailsSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_SUCCESS',\n    payload: data\n  };\n};\nexport var premiumProcessingBureauRFIDetailsError = function premiumProcessingBureauRFIDetailsError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getNewBureauRfiCaseDetails.js"],"names":["utils","authLogout","addLoader","removeLoader","premiumProcessingBureauRFIDetails","caseId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","premiumProcessingBureauRFIDetailsError","message","premiumProcessingBureauRFIDetailsRequest","api","get","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","data","premiumProcessingBureauRFIDetailsSuccess","catch","error","handleError","handleUnauthorized","finally","type","payload"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AAEA,OAAO,IAAMC,iCAAiC,GAAG,SAApCA,iCAAoC,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAM/EA,QAAQ,EANuE;AAAA,QAEzEC,IAFyE,aAEjFC,IAFiF,CAEzED,IAFyE;AAAA,QAIvEE,QAJuE,aAGjFC,MAHiF,CAI/EC,IAJ+E,CAIvEF,QAJuE;;AAQnF,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;;AAIA,QAAI,CAACT,MAAL,EAAa;AACXC,MAAAA,QAAQ,CAACS,sCAAsC,iCAAMF,YAAN;AAAoBG,QAAAA,OAAO,EAAE;AAA7B,SAAvC,CAAR;AACA;AACD;;AAEDV,IAAAA,QAAQ,CAACW,wCAAwC,CAACZ,MAAD,CAAzC,CAAR;AACAC,IAAAA,QAAQ,CAACJ,SAAS,CAAC,mCAAD,CAAV,CAAR;AAEA,WAAOF,KAAK,CAACkB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,UAFhB;AAGHC,MAAAA,IAAI,yCAAkClB,MAAlC;AAHD,KADA,EAMJmB,IANI,CAMC,UAACC,QAAD;AAAA,aAAczB,KAAK,CAACkB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAU3B,KAAK,CAACkB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,wCAAwC,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAzC,CAAR;AACA,aAAOA,IAAP,aAAOA,IAAP,uBAAOA,IAAI,CAAEA,IAAb;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,KAAD,EAAW;AAChBhC,MAAAA,KAAK,CAACkB,GAAN,CAAUe,WAAV,CAAsBD,KAAtB,kCAAkCnB,YAAlC;AAAgDG,QAAAA,OAAO,EAAE;AAAzD;AACAV,MAAAA,QAAQ,CAACS,sCAAsC,CAACiB,KAAD,CAAvC,CAAR;AACAhC,MAAAA,KAAK,CAACkB,GAAN,CAAUgB,kBAAV,CAA6BF,KAA7B,EAAoC1B,QAApC,EAA8CL,UAA9C;AACD,KAhBI,EAiBJkC,OAjBI,CAiBI,YAAM;AACb7B,MAAAA,QAAQ,CAACH,YAAY,CAAC,mCAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GAxCgD;AAAA,CAA1C;AAyCP,OAAO,IAAMc,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACZ,MAAD,EAAY;AAClE,SAAO;AACL+B,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAEhC;AAFJ,GAAP;AAID,CALM;AAMP,OAAO,IAAMyB,wCAAwC,GAAG,SAA3CA,wCAA2C,CAACD,IAAD,EAAU;AAChE,SAAO;AACLO,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMd,sCAAsC,GAAG,SAAzCA,sCAAyC,CAACiB,KAAD,EAAW;AAC/D,SAAO;AACLI,IAAAA,IAAI,EAAE,6CADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\n\r\nexport const premiumProcessingBureauRFIDetails = (caseId) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.premiumProcessingBureauRFIDetails',\r\n  };\r\n\r\n  if (!caseId) {\r\n    dispatch(premiumProcessingBureauRFIDetailsError({ ...defaultError, message: 'Missing insured or cover holder name search query' }));\r\n    return;\r\n  }\r\n\r\n  dispatch(premiumProcessingBureauRFIDetailsRequest(caseId));\r\n  dispatch(addLoader('premiumProcessingBureauRFIDetails'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: `workflow/task/newrfi/details/${caseId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(premiumProcessingBureauRFIDetailsSuccess(data?.data));\r\n      return data?.data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessingBureauRFIDetails)' });\r\n      dispatch(premiumProcessingBureauRFIDetailsError(error));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('premiumProcessingBureauRFIDetails'));\r\n    });\r\n};\r\nexport const premiumProcessingBureauRFIDetailsRequest = (caseId) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_REQUEST',\r\n    payload: caseId,\r\n  };\r\n};\r\nexport const premiumProcessingBureauRFIDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingBureauRFIDetailsError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}