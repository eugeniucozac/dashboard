{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\PreventNavigation\\\\PreventNavigation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport minimatch from 'minimatch'; // app\n\nimport * as utils from 'utils';\nimport { showModal } from 'stores';\nimport { PreventNavigationView } from './PreventNavigation.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPreventNavigation.propTypes = {\n  dirty: PropTypes.bool,\n  allowedUrls: PropTypes.array,\n  title: PropTypes.string,\n  subtitle: PropTypes.string,\n  cancelLabel: PropTypes.string,\n  confirmLabel: PropTypes.string,\n  hint: PropTypes.string,\n  maxWidth: PropTypes.string,\n  onCancelCallBack: PropTypes.func,\n  onSubmitCallBack: PropTypes.func\n}; // default props for making the comp to run independantly and for dropting  new display messages\n\nPreventNavigation.defaultProps = {\n  title: 'navigation.page.title',\n  subtitle: 'navigation.page.subtitle',\n  cancelLabel: 'navigation.page.cancel',\n  confirmLabel: 'navigation.page.confirm',\n  hint: '',\n  maxWidth: 'sm',\n  onCancelCallBack: function onCancelCallBack() {},\n  onSubmitCallBack: function onSubmitCallBack() {}\n};\nexport function PreventNavigation(_ref) {\n  _s();\n\n  var dirty = _ref.dirty,\n      _ref$allowedUrls = _ref.allowedUrls,\n      allowedUrls = _ref$allowedUrls === void 0 ? [] : _ref$allowedUrls,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      cancelLabel = _ref.cancelLabel,\n      maxWidth = _ref.maxWidth,\n      confirmLabel = _ref.confirmLabel,\n      hint = _ref.hint,\n      onCancelCallBack = _ref.onCancelCallBack,\n      onSubmitCallBack = _ref.onSubmitCallBack;\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      location = _useState2[0],\n      setLocation = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      allowNavigation = _useState4[0],\n      setAllowNavigation = _useState4[1];\n\n  var allowNavigationToUrlException = function allowNavigationToUrlException(pathname) {\n    // if there's no pathname, allow navigation\n    if (!pathname) return true; // if there's no allowed urls array, prevent navigation\n\n    if (!utils.generic.isValidArray(allowedUrls, true)) return false; // allow navigation if pathname matches any of the allowed urls\n\n    return allowedUrls.some(function (url) {\n      return minimatch(pathname, url);\n    });\n  };\n\n  useEffect(function () {\n    if (location && (allowNavigation || allowNavigationToUrlException(location))) {\n      history.push(location);\n    }\n  }, [location, allowNavigation] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var launchConfirmModal = function launchConfirmModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: title,\n        subtitle: subtitle,\n        hint: hint,\n        fullWidth: true,\n        maxWidth: maxWidth,\n        componentProps: {\n          cancelLabel: utils.string.t(cancelLabel),\n          confirmLabel: utils.string.t(confirmLabel),\n          cancelHandler: function cancelHandler() {\n            onCancelCallBack();\n          },\n          submitHandler: function submitHandler() {\n            setAllowNavigation(true);\n            onSubmitCallBack();\n          }\n        }\n      }\n    }));\n  };\n\n  var handleInternalNavigation = function handleInternalNavigation(location) {\n    if (!allowNavigation && !allowNavigationToUrlException(location.pathname)) {\n      setLocation(location.pathname);\n      launchConfirmModal();\n      return false;\n    }\n\n    return true;\n  };\n\n  return /*#__PURE__*/_jsxDEV(PreventNavigationView, {\n    dirty: dirty,\n    handleInternalNavigation: handleInternalNavigation\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 110,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PreventNavigation, \"fXkmKSChQ71OkH/LrSCAr3ts12c=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = PreventNavigation;\nPreventNavigation.displayName = \"PreventNavigation\";\nPreventNavigation.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PreventNavigation\",\n  \"props\": {\n    \"allowedUrls\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"defaultValue\": {\n        \"value\": \"'navigation.page.title'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"subtitle\": {\n      \"defaultValue\": {\n        \"value\": \"'navigation.page.subtitle'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"cancelLabel\": {\n      \"defaultValue\": {\n        \"value\": \"'navigation.page.cancel'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"confirmLabel\": {\n      \"defaultValue\": {\n        \"value\": \"'navigation.page.confirm'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"defaultValue\": {\n        \"value\": \"''\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"maxWidth\": {\n      \"defaultValue\": {\n        \"value\": \"'sm'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onCancelCallBack\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onSubmitCallBack\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"dirty\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default PreventNavigation;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\PreventNavigation\\\\PreventNavigation.js\"] = {\n    name: \"PreventNavigation\",\n    docgenInfo: PreventNavigation.__docgenInfo,\n    path: \"src\\\\components\\\\PreventNavigation\\\\PreventNavigation.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PreventNavigation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/PreventNavigation/PreventNavigation.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useHistory","minimatch","utils","showModal","PreventNavigationView","PreventNavigation","propTypes","dirty","bool","allowedUrls","array","title","string","subtitle","cancelLabel","confirmLabel","hint","maxWidth","onCancelCallBack","func","onSubmitCallBack","defaultProps","dispatch","history","location","setLocation","allowNavigation","setAllowNavigation","allowNavigationToUrlException","pathname","generic","isValidArray","some","url","push","launchConfirmModal","component","props","fullWidth","componentProps","t","cancelHandler","submitHandler","handleInternalNavigation"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport minimatch from 'minimatch';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { showModal } from 'stores';\r\nimport { PreventNavigationView } from './PreventNavigation.view';\r\n\r\nPreventNavigation.propTypes = {\r\n  dirty: PropTypes.bool,\r\n  allowedUrls: PropTypes.array,\r\n  title: PropTypes.string,\r\n  subtitle: PropTypes.string,\r\n  cancelLabel: PropTypes.string,\r\n  confirmLabel: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  maxWidth: PropTypes.string,\r\n  onCancelCallBack: PropTypes.func,\r\n  onSubmitCallBack: PropTypes.func,\r\n};\r\n// default props for making the comp to run independantly and for dropting  new display messages\r\nPreventNavigation.defaultProps = {\r\n  title: 'navigation.page.title',\r\n  subtitle: 'navigation.page.subtitle',\r\n  cancelLabel: 'navigation.page.cancel',\r\n  confirmLabel: 'navigation.page.confirm',\r\n  hint: '',\r\n  maxWidth: 'sm',\r\n  onCancelCallBack: () => {},\r\n  onSubmitCallBack: () => {},\r\n};\r\nexport function PreventNavigation({\r\n  dirty,\r\n  allowedUrls = [],\r\n  title,\r\n  subtitle,\r\n  cancelLabel,\r\n  maxWidth,\r\n  confirmLabel,\r\n  hint,\r\n  onCancelCallBack,\r\n  onSubmitCallBack,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [location, setLocation] = useState();\r\n  const [allowNavigation, setAllowNavigation] = useState(false);\r\n\r\n  const allowNavigationToUrlException = (pathname) => {\r\n    // if there's no pathname, allow navigation\r\n    if (!pathname) return true;\r\n\r\n    // if there's no allowed urls array, prevent navigation\r\n    if (!utils.generic.isValidArray(allowedUrls, true)) return false;\r\n\r\n    // allow navigation if pathname matches any of the allowed urls\r\n    return allowedUrls.some((url) => {\r\n      return minimatch(pathname, url);\r\n    });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (location && (allowNavigation || allowNavigationToUrlException(location))) {\r\n        history.push(location);\r\n      }\r\n    },\r\n    [location, allowNavigation] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const launchConfirmModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: title,\r\n          subtitle: subtitle,\r\n          hint: hint,\r\n          fullWidth: true,\r\n          maxWidth: maxWidth,\r\n          componentProps: {\r\n            cancelLabel: utils.string.t(cancelLabel),\r\n            confirmLabel: utils.string.t(confirmLabel),\r\n            cancelHandler: () => {\r\n              onCancelCallBack();\r\n            },\r\n            submitHandler: () => {\r\n              setAllowNavigation(true);\r\n              onSubmitCallBack();\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleInternalNavigation = (location) => {\r\n    if (!allowNavigation && !allowNavigationToUrlException(location.pathname)) {\r\n      setLocation(location.pathname);\r\n      launchConfirmModal();\r\n      return false;\r\n    }\r\n\r\n    return true;\r\n  };\r\n\r\n  return <PreventNavigationView dirty={dirty} handleInternalNavigation={handleInternalNavigation} />;\r\n}\r\n\r\nexport default PreventNavigation;\r\n"]},"metadata":{},"sourceType":"module"}