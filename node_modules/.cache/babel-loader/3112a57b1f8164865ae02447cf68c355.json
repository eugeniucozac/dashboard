{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Modal\\\\Modal.js\";\nimport React, { Component, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport get from 'lodash/get'; // app\n\nimport styles from './Modal.styles';\nimport * as utils from 'utils';\nimport { hideModal, fullScreenModal } from 'stores';\nimport { Button, Confirm, Translate } from 'components';\nimport { AddRiskContainer, DmsVersionHistory, PasteFromExcel, PolicyDocuments, PortfolioMap } from 'modules';\nimport { AddAssignee, AddClaimTaskNote, AddComplexity, AddDepartmentMarket, AddEditClaimRefNotes, AddEditClientOffice, AddEditMarkets, AddEditUmr, AddEditUser, AddEditQuoteBind, AddInsured, AddLayer, AddManageSetting, AddMarket, AddPlacementLayer, AddPlacementLayerMarket, AddPlacementMarket, AddProductsClient, AddProductsCarrier, AddProductsFacility, AddProductsInsured, AddReferral, AddRiskQuote, AddRiskRefAdvancedSearch, BulkAssignClaims, BulkUpdateLayer, BulkUpdatePolicy, CheckListAlerts, ComplexityManagementAddPolicy, ComplexManagementInsured, ComplexityManagementDivisionReset, ConfirmClaimSubmission, ConfirmDecline, ConfirmDelete, ConfirmWithComment, CreateAdHocTask, CreateRFI, CreateEditUser, CreateInWhitespace, DmsEditMetadata, DmsUploadFiles, DocumentUpload, DownloadBordereaux, DownloadFiles, EditClaimTaskNote, EditClaimInformation, EditClaimRefNotesRow, EditDepartmentMarket, EditLossInformation, EditPlacement, EditPlacementLayer, EditPlacementMarketsLayers, EditPolicy, EditProductsFacility, EditProductsFacilityLimits, EditProductsInsured, EditProductsClient, EditQuote, EditRiskQuote, EditTripBrokers, ModellingTask, NewEnquiry, PlacementPDF, ProcessingInstructionsManageDocuments, PremiumTaxSignedLinesDocumentUpload, RemoveClaimsComplexityRuleValue, RfiQueryResponse, RfiQueryResponseLogs, AddEditReport, EditReportGroup, AddReportGroup, SelectInterest, SetTaskPriority, SetClaimPriority, SetClaimsTaskSelection, SignDown, SingleAssignClaim, UpdateStatus, PreBindQuote, ViewClaimInformation, PremiumProcessingCheckSigning, PremiumProcessingCheckSigningReject, ReportGroupExtendedAddEdit, ReportsExtendedAddEdit, ClaimsRegisterNewLoss } from 'forms'; // mui\n\nimport CloseIcon from '@material-ui/icons/Close';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport { withStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiModal: state.ui.modal,\n    fullScreen: state.ui.fullScreen\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  hideModal: hideModal,\n  fullScreenModal: fullScreenModal\n};\nexport var Modal = /*#__PURE__*/function (_Component) {\n  _inherits(Modal, _Component);\n\n  var _super = _createSuper(Modal);\n\n  function Modal() {\n    var _this;\n\n    _classCallCheck(this, Modal);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"components\", {\n      ADD_ASSIGNEE: AddAssignee,\n      ADD_CLAIM_TASK_NOTE: AddClaimTaskNote,\n      ADD_COMPLEXITY: AddComplexity,\n      ADD_DEPARTMENT_MARKET: AddDepartmentMarket,\n      ADD_EDIT_CLAIM_REF_NOTES: AddEditClaimRefNotes,\n      ADD_EDIT_CLIENT_OFFICE: AddEditClientOffice,\n      ADD_EDIT_MARKETS: AddEditMarkets,\n      ADD_EDIT_UMR: AddEditUmr,\n      ADD_EDIT_USER: AddEditUser,\n      ADD_EDIT_QUOTE_BIND: AddEditQuoteBind,\n      ADD_INSURED: AddInsured,\n      ADD_LAYER: AddLayer,\n      ADD_MARKET: AddMarket,\n      ADD_PLACEMENT_LAYER: AddPlacementLayer,\n      ADD_PLACEMENT_LAYER_MARKET: AddPlacementLayerMarket,\n      ADD_PLACEMENT_MARKET: AddPlacementMarket,\n      ADD_PRODUCTS_CLIENT: AddProductsClient,\n      ADD_PRODUCTS_CARRIER: AddProductsCarrier,\n      ADD_PRODUCTS_FACILITY: AddProductsFacility,\n      ADD_PRODUCTS_INSURED: AddProductsInsured,\n      ADD_REFERRAL: AddReferral,\n      ADD_REPORT_GROUP: AddReportGroup,\n      ADD_RISK: AddRiskContainer,\n      ADD_RISK_QUOTE: AddRiskQuote,\n      ADD_RISK_REF_ADVANCED_SEARCH: AddRiskRefAdvancedSearch,\n      ADD_MANAGE_DOCUMENT_SETTING: AddManageSetting,\n      BULK_ASSIGN_CLAIMS: BulkAssignClaims,\n      BULK_UPDATE_LAYER: BulkUpdateLayer,\n      BULK_UPDATE_POLICY: BulkUpdatePolicy,\n      CHECK_LIST_ALERTS: CheckListAlerts,\n      COMPLEXITY_MANAGEMENT_ADD_POLICY: ComplexityManagementAddPolicy,\n      COMPLEXITY_MANAGEMENT_INSURED: ComplexManagementInsured,\n      COMPLEXITY_MANAGEMENT_DIVISION_RESET: ComplexityManagementDivisionReset,\n      COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE: RemoveClaimsComplexityRuleValue,\n      CONFIRM: Confirm,\n      CONFIRM_CLAIM_SUBMISSION: ConfirmClaimSubmission,\n      CONFIRM_DECLINE_RISK: ConfirmDecline,\n      CONFIRM_DELETE: ConfirmDelete,\n      CONFIRM_WITH_COMMENT: ConfirmWithComment,\n      CREATE_AD_HOC_TASK: CreateAdHocTask,\n      CREATE_EDIT_USER: CreateEditUser,\n      CREATE_IN_WHITESPACE: CreateInWhitespace,\n      CREATE_RFI: CreateRFI,\n      DMS_UPLOAD_FILES: DmsUploadFiles,\n      DOCUMENT_UPLOAD: DocumentUpload,\n      DMS_VERSION_HISTORY: DmsVersionHistory,\n      DMS_EDIT_META_DATA: DmsEditMetadata,\n      DOWNLOAD_BORDEREAUX: DownloadBordereaux,\n      DOWNLOAD_FILES: DownloadFiles,\n      EDIT_CLAIM_TASK_NOTE: EditClaimTaskNote,\n      EDIT_CLAIM_INFORMATION: EditClaimInformation,\n      EDIT_CLAIMREF_NOTES_ROW: EditClaimRefNotesRow,\n      EDIT_DEPARTMENT_MARKET: EditDepartmentMarket,\n      EDIT_LOSS_INFORMATION: EditLossInformation,\n      EDIT_PLACEMENT_LAYER: EditPlacementLayer,\n      EDIT_PLACEMENT_MARKETS_LAYERS: EditPlacementMarketsLayers,\n      EDIT_POLICY: EditPolicy,\n      EDIT_PLACEMENT: EditPlacement,\n      EDIT_PRODUCTS_FACILITY: EditProductsFacility,\n      EDIT_PRODUCTS_FACILITY_LIMITS: EditProductsFacilityLimits,\n      EDIT_PRODUCTS_CLIENT: EditProductsClient,\n      EDIT_PRODUCTS_INSURED: EditProductsInsured,\n      EDIT_QUOTE: EditQuote,\n      EDIT_REPORT: AddEditReport,\n      EDIT_REPORT_GROUP: EditReportGroup,\n      EDIT_RISK_QUOTE: EditRiskQuote,\n      EDIT_TRIP_BROKERS: EditTripBrokers,\n      MODELLING_TASK: ModellingTask,\n      NEW_ENQUIRY: NewEnquiry,\n      PASTE_FROM_EXCEL: PasteFromExcel,\n      PI_MANAGE_DOCUMENTS: ProcessingInstructionsManageDocuments,\n      PLACEMENT_PDF: PlacementPDF,\n      POLICY_DOCUMENTS: PolicyDocuments,\n      PORTFOLIO_MAP: PortfolioMap,\n      PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD: PremiumTaxSignedLinesDocumentUpload,\n      RFI_QUERY_RESPONSE: RfiQueryResponse,\n      RFI_QUERY_RESPONSE_LOGS: RfiQueryResponseLogs,\n      SELECT_INTEREST: SelectInterest,\n      SET_PRIORITY: SetTaskPriority,\n      SET_CLAIM_PRIORITY: SetClaimPriority,\n      SET_CLAIM_TASK_SELECTION: SetClaimsTaskSelection,\n      SIGN_DOWN: SignDown,\n      SINGLE_ASSIGN_CLAIM: SingleAssignClaim,\n      UPDATE_STATUS: UpdateStatus,\n      VIEW_CLAIM_INFORMATION: ViewClaimInformation,\n      PRE_BIND_QUOTE: PreBindQuote,\n      PREMIUM_PROCESSING_CHECK_SIGNING: PremiumProcessingCheckSigning,\n      PREMIUM_PROCESSING_CHECK_SIGNING_REJECT: PremiumProcessingCheckSigningReject,\n      REPORT_GROUP_EXTENDED_ADD_EDIT: ReportGroupExtendedAddEdit,\n      REPORTS_EXTENDED_ADD_EDIT: ReportsExtendedAddEdit,\n      CLAIM_REGISTER_NEW_LOSS: ClaimsRegisterNewLoss\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleClose\", function (type) {\n      var closeModalOnClickOutside = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n      var cancelHandler = arguments.length > 2 ? arguments[2] : undefined;\n      var clickOutSideHandler = arguments.length > 3 ? arguments[3] : undefined;\n      return function (event, reason) {\n        if (reason === 'backdropClick' && !closeModalOnClickOutside) {\n          return;\n        } else if (utils.generic.isFunction(clickOutSideHandler)) {\n          clickOutSideHandler();\n        } else {\n          _this.props.hideModal(type);\n\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleCloseX\", function (type, cancelHandler, clickXHandler) {\n      return function (event) {\n        if (utils.generic.isFunction(clickXHandler)) {\n          clickXHandler();\n        } else {\n          _this.props.hideModal(type);\n\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleFullScreen\", function () {\n      _this.props.fullScreenModal();\n    });\n\n    return _this;\n  }\n\n  _createClass(Modal, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      if (!get(this.props, 'uiModal[0].type')) return null;\n      var _this$props = this.props,\n          uiModal = _this$props.uiModal,\n          classes = _this$props.classes,\n          fullScreen = _this$props.fullScreen;\n      return /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: uiModal.map(function (modal) {\n          var ModalContent = _this2.components[modal.type];\n          var hasMaxWidth = get(modal, 'props.maxWidth');\n          var closeModalOnClickOutside = get(modal, 'props.hideCompOnBlur', true);\n          var cancelHandler = get(modal, 'props.componentProps.cancelHandler', null);\n          var enableFullScreen = get(modal, 'props.enableFullScreen', false);\n          var clickOutSideHandler = get(modal, 'props.componentProps.clickOutSideHandler', null);\n          var clickXHandler = get(modal, 'props.componentProps.clickXHandler', null);\n          return /*#__PURE__*/_jsxDEV(Dialog, {\n            \"data-testid\": \"modal-dialog\",\n            open: modal.visible,\n            onClose: _this2.handleClose(modal.type, closeModalOnClickOutside, cancelHandler, clickOutSideHandler),\n            fullWidth: modal.props.fullWidth,\n            fullScreen: fullScreen || modal.props.fullScreen,\n            maxWidth: modal.props.maxWidth,\n            disableAutoFocus: modal.props.disableAutoFocus,\n            \"aria-labelledby\": \"modal-title\",\n            classes: _objectSpread({}, !hasMaxWidth && {\n              paper: classes.paper\n            }),\n            children: [enableFullScreen ? /*#__PURE__*/_jsxDEV(Button, {\n              icon: FullscreenIcon,\n              variant: \"text\",\n              onClick: _this2.handleFullScreen,\n              nestedClasses: {\n                btn: classes.fullScreen\n              },\n              \"data-testid\": \"modal-fullscreen-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 312,\n              columnNumber: 17\n            }, _this2) : null, /*#__PURE__*/_jsxDEV(Button, {\n              icon: CloseIcon,\n              variant: \"text\",\n              onClick: _this2.handleCloseX(modal.type, cancelHandler, clickOutSideHandler, clickXHandler),\n              nestedClasses: {\n                btn: classes.close\n              },\n              \"data-testid\": \"modal-close-button\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 15\n            }, _this2), (modal.props.title || modal.props.titleChildren) && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(DialogTitle, {\n                disableTypography: true,\n                id: \"modal-title\",\n                \"data-testid\": \"modal-title\",\n                children: modal.props.titleChildren ? modal.props.titleChildren : /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Translate, {\n                    label: modal.props.title,\n                    variant: \"h2\",\n                    className: classes.title\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 336,\n                    columnNumber: 25\n                  }, _this2), modal.props.subtitle && /*#__PURE__*/_jsxDEV(Translate, {\n                    label: modal.props.subtitle,\n                    variant: \"h6\",\n                    className: classes.subtitle\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 337,\n                    columnNumber: 50\n                  }, _this2)]\n                }, void 0, true)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 331,\n                columnNumber: 19\n              }, _this2), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 341,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 330,\n              columnNumber: 17\n            }, _this2), /*#__PURE__*/_jsxDEV(DialogContent, {\n              className: classes.content,\n              children: [modal.props.hint && /*#__PURE__*/_jsxDEV(DialogContentText, {\n                className: classes.hint,\n                \"data-testid\": \"modal-hint\",\n                children: utils.string.t(modal.props.hint)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 347,\n                columnNumber: 19\n              }, _this2), get(modal, 'props.children') ? get(modal, 'props.children') : /*#__PURE__*/_jsxDEV(ModalContent, _objectSpread(_objectSpread({\n                fullScreen: fullScreen\n              }, modal.props.componentProps), {}, {\n                handleClose: _this2.handleClose(modal.type)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 355,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 345,\n              columnNumber: 15\n            }, _this2), get(modal, 'actions', []).length > 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 361,\n                columnNumber: 19\n              }, _this2), /*#__PURE__*/_jsxDEV(DialogActions, {\n                \"data-testid\": \"modal-actions\",\n                children: modal.actions.map(function (action, idx) {\n                  var btnAction = null;\n\n                  if (action.type === 'ok' || action.type === 'cancel') {\n                    btnAction = _this2.handleClose(modal.type, true, action.callback);\n                  } else {\n                    btnAction = action.callback;\n                  }\n\n                  return /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, btnAction && {\n                    onClick: btnAction\n                  }), action.variant && {\n                    variant: action.variant\n                  }), action.color && {\n                    color: action.color\n                  }), {}, {\n                    text: /*#__PURE__*/_jsxDEV(Translate, {\n                      label: action.label\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 378,\n                      columnNumber: 33\n                    }, _this2),\n                    \"data-testid\": \"modal-btn-\".concat(action.type)\n                  }), idx, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 373,\n                    columnNumber: 25\n                  }, _this2);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, _this2)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 360,\n              columnNumber: 17\n            }, _this2)]\n          }, modal.type, true, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 13\n          }, _this2);\n        })\n      }, void 0, false);\n    }\n  }]);\n\n  return Modal;\n}(Component);\nModal.displayName = \"Modal\";\n\n_defineProperty(Modal, \"propTypes\", {\n  uiModal: PropTypes.arrayOf(PropTypes.shape({\n    visible: PropTypes.bool,\n    type: PropTypes.string,\n    props: PropTypes.shape({\n      title: PropTypes.string,\n      subtitle: PropTypes.string,\n      fullWidth: PropTypes.bool,\n      hideCompOnBlur: PropTypes.bool,\n      fullScreen: PropTypes.bool,\n      maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n      componentProps: PropTypes.shape({\n        buttonColors: PropTypes.shape({\n          cancel: PropTypes.string,\n          confirm: PropTypes.string\n        }),\n        cancelLabel: PropTypes.string,\n        confirmLabel: PropTypes.string,\n        confirmMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\n        hideCancelButton: PropTypes.bool,\n        cancelHandler: PropTypes.func,\n        submitHandler: PropTypes.func\n      })\n    }),\n    actions: PropTypes.arrayOf(PropTypes.shape({\n      type: PropTypes.string,\n      label: PropTypes.string,\n      variant: PropTypes.string,\n      color: PropTypes.string,\n      callback: PropTypes.func\n    }))\n  })).isRequired,\n  hideModal: PropTypes.func.isRequired\n});\n\nModal.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"handleClose\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"type\",\n      \"type\": null\n    }, {\n      \"name\": \"closeModalOnClickOutside\",\n      \"type\": null\n    }, {\n      \"name\": \"cancelHandler\",\n      \"type\": null\n    }, {\n      \"name\": \"clickOutSideHandler\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleCloseX\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"type\",\n      \"type\": null\n    }, {\n      \"name\": \"cancelHandler\",\n      \"type\": null\n    }, {\n      \"name\": \"clickXHandler\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"handleFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"Modal\",\n  \"props\": {\n    \"uiModal\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"visible\": {\n              \"name\": \"bool\",\n              \"required\": false\n            },\n            \"type\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"props\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"title\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                },\n                \"subtitle\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                },\n                \"fullWidth\": {\n                  \"name\": \"bool\",\n                  \"required\": false\n                },\n                \"hideCompOnBlur\": {\n                  \"name\": \"bool\",\n                  \"required\": false\n                },\n                \"fullScreen\": {\n                  \"name\": \"bool\",\n                  \"required\": false\n                },\n                \"maxWidth\": {\n                  \"name\": \"enum\",\n                  \"value\": [{\n                    \"value\": \"'xs'\",\n                    \"computed\": false\n                  }, {\n                    \"value\": \"'sm'\",\n                    \"computed\": false\n                  }, {\n                    \"value\": \"'md'\",\n                    \"computed\": false\n                  }, {\n                    \"value\": \"'lg'\",\n                    \"computed\": false\n                  }, {\n                    \"value\": \"'xl'\",\n                    \"computed\": false\n                  }],\n                  \"required\": false\n                },\n                \"componentProps\": {\n                  \"name\": \"shape\",\n                  \"value\": {\n                    \"buttonColors\": {\n                      \"name\": \"shape\",\n                      \"value\": {\n                        \"cancel\": {\n                          \"name\": \"string\",\n                          \"required\": false\n                        },\n                        \"confirm\": {\n                          \"name\": \"string\",\n                          \"required\": false\n                        }\n                      },\n                      \"required\": false\n                    },\n                    \"cancelLabel\": {\n                      \"name\": \"string\",\n                      \"required\": false\n                    },\n                    \"confirmLabel\": {\n                      \"name\": \"string\",\n                      \"required\": false\n                    },\n                    \"confirmMessage\": {\n                      \"name\": \"union\",\n                      \"value\": [{\n                        \"name\": \"string\"\n                      }, {\n                        \"name\": \"object\"\n                      }],\n                      \"required\": false\n                    },\n                    \"hideCancelButton\": {\n                      \"name\": \"bool\",\n                      \"required\": false\n                    },\n                    \"cancelHandler\": {\n                      \"name\": \"func\",\n                      \"required\": false\n                    },\n                    \"submitHandler\": {\n                      \"name\": \"func\",\n                      \"required\": false\n                    }\n                  },\n                  \"required\": false\n                }\n              },\n              \"required\": false\n            },\n            \"actions\": {\n              \"name\": \"arrayOf\",\n              \"value\": {\n                \"name\": \"shape\",\n                \"value\": {\n                  \"type\": {\n                    \"name\": \"string\",\n                    \"required\": false\n                  },\n                  \"label\": {\n                    \"name\": \"string\",\n                    \"required\": false\n                  },\n                  \"variant\": {\n                    \"name\": \"string\",\n                    \"required\": false\n                  },\n                  \"color\": {\n                    \"name\": \"string\",\n                    \"required\": false\n                  },\n                  \"callback\": {\n                    \"name\": \"func\",\n                    \"required\": false\n                  }\n                }\n              },\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"hideModal\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Modal);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Modal\\\\Modal.js\"] = {\n    name: \"Modal\",\n    docgenInfo: Modal.__docgenInfo,\n    path: \"src\\\\components\\\\Modal\\\\Modal.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Modal/Modal.js"],"names":["React","Component","Fragment","PropTypes","connect","compose","get","styles","utils","hideModal","fullScreenModal","Button","Confirm","Translate","AddRiskContainer","DmsVersionHistory","PasteFromExcel","PolicyDocuments","PortfolioMap","AddAssignee","AddClaimTaskNote","AddComplexity","AddDepartmentMarket","AddEditClaimRefNotes","AddEditClientOffice","AddEditMarkets","AddEditUmr","AddEditUser","AddEditQuoteBind","AddInsured","AddLayer","AddManageSetting","AddMarket","AddPlacementLayer","AddPlacementLayerMarket","AddPlacementMarket","AddProductsClient","AddProductsCarrier","AddProductsFacility","AddProductsInsured","AddReferral","AddRiskQuote","AddRiskRefAdvancedSearch","BulkAssignClaims","BulkUpdateLayer","BulkUpdatePolicy","CheckListAlerts","ComplexityManagementAddPolicy","ComplexManagementInsured","ComplexityManagementDivisionReset","ConfirmClaimSubmission","ConfirmDecline","ConfirmDelete","ConfirmWithComment","CreateAdHocTask","CreateRFI","CreateEditUser","CreateInWhitespace","DmsEditMetadata","DmsUploadFiles","DocumentUpload","DownloadBordereaux","DownloadFiles","EditClaimTaskNote","EditClaimInformation","EditClaimRefNotesRow","EditDepartmentMarket","EditLossInformation","EditPlacement","EditPlacementLayer","EditPlacementMarketsLayers","EditPolicy","EditProductsFacility","EditProductsFacilityLimits","EditProductsInsured","EditProductsClient","EditQuote","EditRiskQuote","EditTripBrokers","ModellingTask","NewEnquiry","PlacementPDF","ProcessingInstructionsManageDocuments","PremiumTaxSignedLinesDocumentUpload","RemoveClaimsComplexityRuleValue","RfiQueryResponse","RfiQueryResponseLogs","AddEditReport","EditReportGroup","AddReportGroup","SelectInterest","SetTaskPriority","SetClaimPriority","SetClaimsTaskSelection","SignDown","SingleAssignClaim","UpdateStatus","PreBindQuote","ViewClaimInformation","PremiumProcessingCheckSigning","PremiumProcessingCheckSigningReject","ReportGroupExtendedAddEdit","ReportsExtendedAddEdit","ClaimsRegisterNewLoss","CloseIcon","FullscreenIcon","withStyles","Dialog","DialogActions","DialogContent","DialogContentText","DialogTitle","Divider","mapStateToProps","state","uiModal","ui","modal","fullScreen","mapDispatchToProps","Modal","ADD_ASSIGNEE","ADD_CLAIM_TASK_NOTE","ADD_COMPLEXITY","ADD_DEPARTMENT_MARKET","ADD_EDIT_CLAIM_REF_NOTES","ADD_EDIT_CLIENT_OFFICE","ADD_EDIT_MARKETS","ADD_EDIT_UMR","ADD_EDIT_USER","ADD_EDIT_QUOTE_BIND","ADD_INSURED","ADD_LAYER","ADD_MARKET","ADD_PLACEMENT_LAYER","ADD_PLACEMENT_LAYER_MARKET","ADD_PLACEMENT_MARKET","ADD_PRODUCTS_CLIENT","ADD_PRODUCTS_CARRIER","ADD_PRODUCTS_FACILITY","ADD_PRODUCTS_INSURED","ADD_REFERRAL","ADD_REPORT_GROUP","ADD_RISK","ADD_RISK_QUOTE","ADD_RISK_REF_ADVANCED_SEARCH","ADD_MANAGE_DOCUMENT_SETTING","BULK_ASSIGN_CLAIMS","BULK_UPDATE_LAYER","BULK_UPDATE_POLICY","CHECK_LIST_ALERTS","COMPLEXITY_MANAGEMENT_ADD_POLICY","COMPLEXITY_MANAGEMENT_INSURED","COMPLEXITY_MANAGEMENT_DIVISION_RESET","COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE","CONFIRM","CONFIRM_CLAIM_SUBMISSION","CONFIRM_DECLINE_RISK","CONFIRM_DELETE","CONFIRM_WITH_COMMENT","CREATE_AD_HOC_TASK","CREATE_EDIT_USER","CREATE_IN_WHITESPACE","CREATE_RFI","DMS_UPLOAD_FILES","DOCUMENT_UPLOAD","DMS_VERSION_HISTORY","DMS_EDIT_META_DATA","DOWNLOAD_BORDEREAUX","DOWNLOAD_FILES","EDIT_CLAIM_TASK_NOTE","EDIT_CLAIM_INFORMATION","EDIT_CLAIMREF_NOTES_ROW","EDIT_DEPARTMENT_MARKET","EDIT_LOSS_INFORMATION","EDIT_PLACEMENT_LAYER","EDIT_PLACEMENT_MARKETS_LAYERS","EDIT_POLICY","EDIT_PLACEMENT","EDIT_PRODUCTS_FACILITY","EDIT_PRODUCTS_FACILITY_LIMITS","EDIT_PRODUCTS_CLIENT","EDIT_PRODUCTS_INSURED","EDIT_QUOTE","EDIT_REPORT","EDIT_REPORT_GROUP","EDIT_RISK_QUOTE","EDIT_TRIP_BROKERS","MODELLING_TASK","NEW_ENQUIRY","PASTE_FROM_EXCEL","PI_MANAGE_DOCUMENTS","PLACEMENT_PDF","POLICY_DOCUMENTS","PORTFOLIO_MAP","PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD","RFI_QUERY_RESPONSE","RFI_QUERY_RESPONSE_LOGS","SELECT_INTEREST","SET_PRIORITY","SET_CLAIM_PRIORITY","SET_CLAIM_TASK_SELECTION","SIGN_DOWN","SINGLE_ASSIGN_CLAIM","UPDATE_STATUS","VIEW_CLAIM_INFORMATION","PRE_BIND_QUOTE","PREMIUM_PROCESSING_CHECK_SIGNING","PREMIUM_PROCESSING_CHECK_SIGNING_REJECT","REPORT_GROUP_EXTENDED_ADD_EDIT","REPORTS_EXTENDED_ADD_EDIT","CLAIM_REGISTER_NEW_LOSS","type","closeModalOnClickOutside","cancelHandler","clickOutSideHandler","event","reason","generic","isFunction","props","clickXHandler","classes","map","ModalContent","components","hasMaxWidth","enableFullScreen","visible","handleClose","fullWidth","maxWidth","disableAutoFocus","paper","handleFullScreen","btn","handleCloseX","close","title","titleChildren","subtitle","content","hint","string","t","componentProps","length","actions","action","idx","btnAction","callback","onClick","variant","color","label","arrayOf","shape","bool","hideCompOnBlur","oneOf","buttonColors","cancel","confirm","cancelLabel","confirmLabel","confirmMessage","oneOfType","object","hideCancelButton","func","submitHandler","isRequired"],"mappings":"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","sourcesContent":["import React, { Component, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './Modal.styles';\r\nimport * as utils from 'utils';\r\nimport { hideModal, fullScreenModal } from 'stores';\r\nimport { Button, Confirm, Translate } from 'components';\r\nimport { AddRiskContainer, DmsVersionHistory, PasteFromExcel, PolicyDocuments, PortfolioMap } from 'modules';\r\nimport {\r\n  AddAssignee,\r\n  AddClaimTaskNote,\r\n  AddComplexity,\r\n  AddDepartmentMarket,\r\n  AddEditClaimRefNotes,\r\n  AddEditClientOffice,\r\n  AddEditMarkets,\r\n  AddEditUmr,\r\n  AddEditUser,\r\n  AddEditQuoteBind,\r\n  AddInsured,\r\n  AddLayer,\r\n  AddManageSetting,\r\n  AddMarket,\r\n  AddPlacementLayer,\r\n  AddPlacementLayerMarket,\r\n  AddPlacementMarket,\r\n  AddProductsClient,\r\n  AddProductsCarrier,\r\n  AddProductsFacility,\r\n  AddProductsInsured,\r\n  AddReferral,\r\n  AddRiskQuote,\r\n  AddRiskRefAdvancedSearch,\r\n  BulkAssignClaims,\r\n  BulkUpdateLayer,\r\n  BulkUpdatePolicy,\r\n  CheckListAlerts,\r\n  ComplexityManagementAddPolicy,\r\n  ComplexManagementInsured,\r\n  ComplexityManagementDivisionReset,\r\n  ConfirmClaimSubmission,\r\n  ConfirmDecline,\r\n  ConfirmDelete,\r\n  ConfirmWithComment,\r\n  CreateAdHocTask,\r\n  CreateRFI,\r\n  CreateEditUser,\r\n  CreateInWhitespace,\r\n  DmsEditMetadata,\r\n  DmsUploadFiles,\r\n  DocumentUpload,\r\n  DownloadBordereaux,\r\n  DownloadFiles,\r\n  EditClaimTaskNote,\r\n  EditClaimInformation,\r\n  EditClaimRefNotesRow,\r\n  EditDepartmentMarket,\r\n  EditLossInformation,\r\n  EditPlacement,\r\n  EditPlacementLayer,\r\n  EditPlacementMarketsLayers,\r\n  EditPolicy,\r\n  EditProductsFacility,\r\n  EditProductsFacilityLimits,\r\n  EditProductsInsured,\r\n  EditProductsClient,\r\n  EditQuote,\r\n  EditRiskQuote,\r\n  EditTripBrokers,\r\n  ModellingTask,\r\n  NewEnquiry,\r\n  PlacementPDF,\r\n  ProcessingInstructionsManageDocuments,\r\n  PremiumTaxSignedLinesDocumentUpload,\r\n  RemoveClaimsComplexityRuleValue,\r\n  RfiQueryResponse,\r\n  RfiQueryResponseLogs,\r\n  AddEditReport,\r\n  EditReportGroup,\r\n  AddReportGroup,\r\n  SelectInterest,\r\n  SetTaskPriority,\r\n  SetClaimPriority,\r\n  SetClaimsTaskSelection,\r\n  SignDown,\r\n  SingleAssignClaim,\r\n  UpdateStatus,\r\n  PreBindQuote,\r\n  ViewClaimInformation,\r\n  PremiumProcessingCheckSigning,\r\n  PremiumProcessingCheckSigningReject,\r\n  ReportGroupExtendedAddEdit,\r\n  ReportsExtendedAddEdit,\r\n  ClaimsRegisterNewLoss\r\n} from 'forms';\r\n\r\n// mui\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport { withStyles, Dialog, DialogActions, DialogContent, DialogContentText, DialogTitle, Divider } from '@material-ui/core';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  uiModal: state.ui.modal,\r\n  fullScreen: state.ui.fullScreen,\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  hideModal,\r\n  fullScreenModal,\r\n};\r\n\r\nexport class Modal extends Component {\r\n  static propTypes = {\r\n    uiModal: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        visible: PropTypes.bool,\r\n        type: PropTypes.string,\r\n        props: PropTypes.shape({\r\n          title: PropTypes.string,\r\n          subtitle: PropTypes.string,\r\n          fullWidth: PropTypes.bool,\r\n          hideCompOnBlur: PropTypes.bool,\r\n          fullScreen: PropTypes.bool,\r\n          maxWidth: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n          componentProps: PropTypes.shape({\r\n            buttonColors: PropTypes.shape({\r\n              cancel: PropTypes.string,\r\n              confirm: PropTypes.string,\r\n            }),\r\n            cancelLabel: PropTypes.string,\r\n            confirmLabel: PropTypes.string,\r\n            confirmMessage: PropTypes.oneOfType([PropTypes.string, PropTypes.object]),\r\n            hideCancelButton: PropTypes.bool,\r\n            cancelHandler: PropTypes.func,\r\n            submitHandler: PropTypes.func,\r\n          }),\r\n        }),\r\n        actions: PropTypes.arrayOf(\r\n          PropTypes.shape({\r\n            type: PropTypes.string,\r\n            label: PropTypes.string,\r\n            variant: PropTypes.string,\r\n            color: PropTypes.string,\r\n            callback: PropTypes.func,\r\n          })\r\n        ),\r\n      })\r\n    ).isRequired,\r\n    hideModal: PropTypes.func.isRequired,\r\n  };\r\n\r\n  // we're mapping modal type(s) to the component to use for each\r\n  components = {\r\n    ADD_ASSIGNEE: AddAssignee,\r\n    ADD_CLAIM_TASK_NOTE: AddClaimTaskNote,\r\n    ADD_COMPLEXITY: AddComplexity,\r\n    ADD_DEPARTMENT_MARKET: AddDepartmentMarket,\r\n    ADD_EDIT_CLAIM_REF_NOTES: AddEditClaimRefNotes,\r\n    ADD_EDIT_CLIENT_OFFICE: AddEditClientOffice,\r\n    ADD_EDIT_MARKETS: AddEditMarkets,\r\n    ADD_EDIT_UMR: AddEditUmr,\r\n    ADD_EDIT_USER: AddEditUser,\r\n    ADD_EDIT_QUOTE_BIND: AddEditQuoteBind,\r\n    ADD_INSURED: AddInsured,\r\n    ADD_LAYER: AddLayer,\r\n    ADD_MARKET: AddMarket,\r\n    ADD_PLACEMENT_LAYER: AddPlacementLayer,\r\n    ADD_PLACEMENT_LAYER_MARKET: AddPlacementLayerMarket,\r\n    ADD_PLACEMENT_MARKET: AddPlacementMarket,\r\n    ADD_PRODUCTS_CLIENT: AddProductsClient,\r\n    ADD_PRODUCTS_CARRIER: AddProductsCarrier,\r\n    ADD_PRODUCTS_FACILITY: AddProductsFacility,\r\n    ADD_PRODUCTS_INSURED: AddProductsInsured,\r\n    ADD_REFERRAL: AddReferral,\r\n    ADD_REPORT_GROUP: AddReportGroup,\r\n    ADD_RISK: AddRiskContainer,\r\n    ADD_RISK_QUOTE: AddRiskQuote,\r\n    ADD_RISK_REF_ADVANCED_SEARCH: AddRiskRefAdvancedSearch,\r\n    ADD_MANAGE_DOCUMENT_SETTING: AddManageSetting,\r\n    BULK_ASSIGN_CLAIMS: BulkAssignClaims,\r\n    BULK_UPDATE_LAYER: BulkUpdateLayer,\r\n    BULK_UPDATE_POLICY: BulkUpdatePolicy,\r\n    CHECK_LIST_ALERTS: CheckListAlerts,\r\n    COMPLEXITY_MANAGEMENT_ADD_POLICY: ComplexityManagementAddPolicy,\r\n    COMPLEXITY_MANAGEMENT_INSURED: ComplexManagementInsured,\r\n    COMPLEXITY_MANAGEMENT_DIVISION_RESET: ComplexityManagementDivisionReset,\r\n    COMPLEXITY_MANAGEMENT_REMOVE_RULE_VALUE: RemoveClaimsComplexityRuleValue,\r\n    CONFIRM: Confirm,\r\n    CONFIRM_CLAIM_SUBMISSION: ConfirmClaimSubmission,\r\n    CONFIRM_DECLINE_RISK: ConfirmDecline,\r\n    CONFIRM_DELETE: ConfirmDelete,\r\n    CONFIRM_WITH_COMMENT: ConfirmWithComment,\r\n    CREATE_AD_HOC_TASK: CreateAdHocTask,\r\n    CREATE_EDIT_USER: CreateEditUser,\r\n    CREATE_IN_WHITESPACE: CreateInWhitespace,\r\n    CREATE_RFI: CreateRFI,\r\n    DMS_UPLOAD_FILES: DmsUploadFiles,\r\n    DOCUMENT_UPLOAD: DocumentUpload,\r\n    DMS_VERSION_HISTORY: DmsVersionHistory,\r\n    DMS_EDIT_META_DATA: DmsEditMetadata,\r\n    DOWNLOAD_BORDEREAUX: DownloadBordereaux,\r\n    DOWNLOAD_FILES: DownloadFiles,\r\n    EDIT_CLAIM_TASK_NOTE: EditClaimTaskNote,\r\n    EDIT_CLAIM_INFORMATION: EditClaimInformation,\r\n    EDIT_CLAIMREF_NOTES_ROW: EditClaimRefNotesRow,\r\n    EDIT_DEPARTMENT_MARKET: EditDepartmentMarket,\r\n    EDIT_LOSS_INFORMATION: EditLossInformation,\r\n    EDIT_PLACEMENT_LAYER: EditPlacementLayer,\r\n    EDIT_PLACEMENT_MARKETS_LAYERS: EditPlacementMarketsLayers,\r\n    EDIT_POLICY: EditPolicy,\r\n    EDIT_PLACEMENT: EditPlacement,\r\n    EDIT_PRODUCTS_FACILITY: EditProductsFacility,\r\n    EDIT_PRODUCTS_FACILITY_LIMITS: EditProductsFacilityLimits,\r\n    EDIT_PRODUCTS_CLIENT: EditProductsClient,\r\n    EDIT_PRODUCTS_INSURED: EditProductsInsured,\r\n    EDIT_QUOTE: EditQuote,\r\n    EDIT_REPORT: AddEditReport,\r\n    EDIT_REPORT_GROUP: EditReportGroup,\r\n    EDIT_RISK_QUOTE: EditRiskQuote,\r\n    EDIT_TRIP_BROKERS: EditTripBrokers,\r\n    MODELLING_TASK: ModellingTask,\r\n    NEW_ENQUIRY: NewEnquiry,\r\n    PASTE_FROM_EXCEL: PasteFromExcel,\r\n    PI_MANAGE_DOCUMENTS: ProcessingInstructionsManageDocuments,\r\n    PLACEMENT_PDF: PlacementPDF,\r\n    POLICY_DOCUMENTS: PolicyDocuments,\r\n    PORTFOLIO_MAP: PortfolioMap,\r\n    PREMIUM_TAX_SIGNED_LINES_DOCUMENT_UPLOAD: PremiumTaxSignedLinesDocumentUpload,\r\n    RFI_QUERY_RESPONSE: RfiQueryResponse,\r\n    RFI_QUERY_RESPONSE_LOGS: RfiQueryResponseLogs,\r\n    SELECT_INTEREST: SelectInterest,\r\n    SET_PRIORITY: SetTaskPriority,\r\n    SET_CLAIM_PRIORITY: SetClaimPriority,\r\n    SET_CLAIM_TASK_SELECTION: SetClaimsTaskSelection,\r\n    SIGN_DOWN: SignDown,\r\n    SINGLE_ASSIGN_CLAIM: SingleAssignClaim,\r\n    UPDATE_STATUS: UpdateStatus,\r\n    VIEW_CLAIM_INFORMATION: ViewClaimInformation,\r\n    PRE_BIND_QUOTE: PreBindQuote,\r\n    PREMIUM_PROCESSING_CHECK_SIGNING: PremiumProcessingCheckSigning,\r\n    PREMIUM_PROCESSING_CHECK_SIGNING_REJECT: PremiumProcessingCheckSigningReject,\r\n    REPORT_GROUP_EXTENDED_ADD_EDIT: ReportGroupExtendedAddEdit,\r\n    REPORTS_EXTENDED_ADD_EDIT: ReportsExtendedAddEdit,\r\n    CLAIM_REGISTER_NEW_LOSS: ClaimsRegisterNewLoss,\r\n  };\r\n\r\n  handleClose =\r\n    (type, closeModalOnClickOutside = true, cancelHandler, clickOutSideHandler) =>\r\n      (event, reason) => {\r\n        if (reason === 'backdropClick' && !closeModalOnClickOutside) {\r\n          return;\r\n        } else if (utils.generic.isFunction(clickOutSideHandler)) {\r\n          clickOutSideHandler();\r\n        } else {\r\n          this.props.hideModal(type);\r\n          utils.generic.isFunction(cancelHandler) && cancelHandler();\r\n        }\r\n      };\r\n\r\n  handleCloseX = (type, cancelHandler, clickXHandler) => (event) => {\r\n    if (utils.generic.isFunction(clickXHandler)) {\r\n      clickXHandler();\r\n    } else {\r\n      this.props.hideModal(type);\r\n      utils.generic.isFunction(cancelHandler) && cancelHandler();\r\n    }\r\n  };\r\n\r\n  handleFullScreen = () => {\r\n    this.props.fullScreenModal();\r\n  };\r\n\r\n  render() {\r\n    if (!get(this.props, 'uiModal[0].type')) return null;\r\n\r\n    const { uiModal, classes, fullScreen } = this.props;\r\n\r\n    return (\r\n      <>\r\n        {uiModal.map((modal) => {\r\n          const ModalContent = this.components[modal.type];\r\n          const hasMaxWidth = get(modal, 'props.maxWidth');\r\n          const closeModalOnClickOutside = get(modal, 'props.hideCompOnBlur', true);\r\n          const cancelHandler = get(modal, 'props.componentProps.cancelHandler', null);\r\n          const enableFullScreen = get(modal, 'props.enableFullScreen', false);\r\n\r\n          const clickOutSideHandler = get(modal, 'props.componentProps.clickOutSideHandler', null);\r\n          const clickXHandler = get(modal, 'props.componentProps.clickXHandler', null);\r\n\r\n          return (\r\n            <Dialog\r\n              data-testid=\"modal-dialog\"\r\n              key={modal.type}\r\n              open={modal.visible}\r\n              onClose={this.handleClose(modal.type, closeModalOnClickOutside, cancelHandler, clickOutSideHandler)}\r\n              fullWidth={modal.props.fullWidth}\r\n              fullScreen={fullScreen || modal.props.fullScreen}\r\n              maxWidth={modal.props.maxWidth}\r\n              disableAutoFocus={modal.props.disableAutoFocus}\r\n              aria-labelledby=\"modal-title\"\r\n              classes={{\r\n                ...(!hasMaxWidth && { paper: classes.paper }),\r\n              }}\r\n            >\r\n              {enableFullScreen ? (\r\n                <Button\r\n                  icon={FullscreenIcon}\r\n                  variant=\"text\"\r\n                  onClick={this.handleFullScreen}\r\n                  nestedClasses={{ btn: classes.fullScreen }}\r\n                  data-testid=\"modal-fullscreen-button\"\r\n                />\r\n              ) : null}\r\n\r\n              <Button\r\n                icon={CloseIcon}\r\n                variant=\"text\"\r\n                onClick={this.handleCloseX(modal.type, cancelHandler, clickOutSideHandler, clickXHandler)}\r\n                nestedClasses={{ btn: classes.close }}\r\n                data-testid=\"modal-close-button\"\r\n              />\r\n\r\n              {(modal.props.title || modal.props.titleChildren) && (\r\n                <Fragment>\r\n                  <DialogTitle disableTypography id=\"modal-title\" data-testid=\"modal-title\">\r\n                    {modal.props.titleChildren ? (\r\n                      modal.props.titleChildren\r\n                    ) : (\r\n                      <>\r\n                        <Translate label={modal.props.title} variant=\"h2\" className={classes.title} />\r\n                        {modal.props.subtitle && <Translate label={modal.props.subtitle} variant=\"h6\" className={classes.subtitle} />}\r\n                      </>\r\n                    )}\r\n                  </DialogTitle>\r\n                  <Divider />\r\n                </Fragment>\r\n              )}\r\n\r\n              <DialogContent className={classes.content}>\r\n                {modal.props.hint && (\r\n                  <DialogContentText className={classes.hint} data-testid=\"modal-hint\">\r\n                    {utils.string.t(modal.props.hint)}\r\n                  </DialogContentText>\r\n                )}\r\n\r\n                {get(modal, 'props.children') ? (\r\n                  get(modal, 'props.children')\r\n                ) : (\r\n                  <ModalContent fullScreen={fullScreen} {...modal.props.componentProps} handleClose={this.handleClose(modal.type)} />\r\n                )}\r\n              </DialogContent>\r\n\r\n              {get(modal, 'actions', []).length > 0 && (\r\n                <Fragment>\r\n                  <Divider />\r\n                  <DialogActions data-testid=\"modal-actions\">\r\n                    {modal.actions.map((action, idx) => {\r\n                      let btnAction = null;\r\n\r\n                      if (action.type === 'ok' || action.type === 'cancel') {\r\n                        btnAction = this.handleClose(modal.type, true, action.callback);\r\n                      } else {\r\n                        btnAction = action.callback;\r\n                      }\r\n\r\n                      return (\r\n                        <Button\r\n                          key={idx}\r\n                          {...(btnAction && { onClick: btnAction })}\r\n                          {...(action.variant && { variant: action.variant })}\r\n                          {...(action.color && { color: action.color })}\r\n                          text={<Translate label={action.label} />}\r\n                          data-testid={`modal-btn-${action.type}`}\r\n                        />\r\n                      );\r\n                    })}\r\n                  </DialogActions>\r\n                </Fragment>\r\n              )}\r\n            </Dialog>\r\n          );\r\n        })}\r\n      </>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles))(Modal);\r\n"]},"metadata":{},"sourceType":"module"}