{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var deleteBureauInsurerDetails = function deleteBureauInsurerDetails(caseIncidentIssueDocsId) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.deleteBureauInsurerDetails'\n    };\n    dispatch(deleteBureauInsurerDetailsRequest(caseIncidentIssueDocsId));\n    dispatch(addLoader('deleteBureauInsurerDetails'));\n\n    if (!caseIncidentIssueDocsId) {\n      dispatch(deleteBureauInsurerDetailsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing parameters'\n      })));\n      dispatch(enqueueNotification('notification.submission.fail', 'error'));\n      dispatch(removeLoader('deleteBureauInsurerDetails'));\n      return;\n    }\n\n    var path = \"issueDocs/deleteIssueDocsDetails/\".concat(caseIncidentIssueDocsId);\n    return utils.api.delete({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(deleteBureauInsurerDetailsSuccess(caseIncidentIssueDocsId));\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.deleteBureauInsurerDetails)'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      dispatch(deleteBureauInsurerDetailsFailure(error, {\n        file: 'stores/premiumProcessing.actions.deleteBureauInsurerDetails'\n      }));\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.apiDeleteFail', 'error'));\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('deleteBureauInsurerDetails'));\n    });\n  };\n};\nexport var deleteBureauInsurerDetailsRequest = function deleteBureauInsurerDetailsRequest(caseIncidentIssueDocsId) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_REQUEST',\n    payload: caseIncidentIssueDocsId\n  };\n};\nexport var deleteBureauInsurerDetailsSuccess = function deleteBureauInsurerDetailsSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_SUCCESS',\n    payload: data\n  };\n};\nexport var deleteBureauInsurerDetailsFailure = function deleteBureauInsurerDetailsFailure(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.deleteBureuaInsurerDetails.js"],"names":["removeLoader","addLoader","enqueueNotification","authLogout","utils","deleteBureauInsurerDetails","caseIncidentIssueDocsId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","deleteBureauInsurerDetailsRequest","deleteBureauInsurerDetailsFailure","message","path","api","delete","token","accessToken","bpmService","then","response","handleResponse","json","handleNewData","data","deleteBureauInsurerDetailsSuccess","catch","error","handleError","handleUnauthorized","finally","type","payload"],"mappings":"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","sourcesContent":["import { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deleteBureauInsurerDetails = (caseIncidentIssueDocsId) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.deleteBureauInsurerDetails',\r\n  };\r\n  dispatch(deleteBureauInsurerDetailsRequest(caseIncidentIssueDocsId));\r\n  dispatch(addLoader('deleteBureauInsurerDetails'));\r\n\r\n  if (!caseIncidentIssueDocsId) {\r\n    dispatch(deleteBureauInsurerDetailsFailure({ ...defaultError, message: 'Missing parameters' }));\r\n    dispatch(enqueueNotification('notification.submission.fail', 'error'));\r\n    dispatch(removeLoader('deleteBureauInsurerDetails'));\r\n    return;\r\n  }\r\n\r\n  const path = `issueDocs/deleteIssueDocsDetails/${caseIncidentIssueDocsId}`;\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(deleteBureauInsurerDetailsSuccess(caseIncidentIssueDocsId));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.deleteBureauInsurerDetails)' });\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      dispatch(\r\n        deleteBureauInsurerDetailsFailure(error, {\r\n          file: 'stores/premiumProcessing.actions.deleteBureauInsurerDetails',\r\n        })\r\n      );\r\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.apiDeleteFail', 'error'));\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('deleteBureauInsurerDetails'));\r\n    });\r\n};\r\n\r\nexport const deleteBureauInsurerDetailsRequest = (caseIncidentIssueDocsId) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_REQUEST',\r\n    payload: caseIncidentIssueDocsId,\r\n  };\r\n};\r\n\r\nexport const deleteBureauInsurerDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const deleteBureauInsurerDetailsFailure = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}