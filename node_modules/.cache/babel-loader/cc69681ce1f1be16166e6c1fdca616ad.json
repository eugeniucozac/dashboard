{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ChartPremium\\\\ChartPremium.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport chunk from 'chunk-text';\nimport chroma from 'chroma-js';\nimport throttle from 'lodash/throttle';\nimport merge from 'lodash/merge';\nimport get from 'lodash/get'; // app\n\nimport styles from './ChartPremium.styles';\nimport { Chart, ChartLegend, ChartTable, ChartTooltip, SectionHeader, Ratio, Translate } from 'components';\nimport { getPlacementDetails } from 'stores';\nimport { withThemeListener } from 'hoc';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { withStyles } from '@material-ui/core';\nimport EqualizerIcon from '@material-ui/icons/Equalizer'; // dispatch\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar mapDispatchToProps = {\n  getPlacementDetails: getPlacementDetails\n};\nexport var ChartPremium = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ChartPremium, _PureComponent);\n\n  var _super = _createSuper(ChartPremium);\n\n  function ChartPremium(props) {\n    var _this;\n\n    _classCallCheck(this, ChartPremium);\n\n    _this = _super.call(this, props);\n\n    _this.buildChartData = function (data, columns) {\n      var colorScale = utils.color.scale(data.length);\n      return {\n        labels: columns.map(function (item) {\n          return item ? item.toString() : '';\n        }),\n        datasets: data.map(function (obj, index) {\n          var name = Object.keys(obj)[0];\n          var color = colorScale[index];\n          var label = '';\n          var premiumsSummed = columns.map(function (column) {\n            var premiums = data[index][name][column] || [];\n\n            if (premiums.length > 0) {\n              label = get(data, \"[\".concat(index, \"][\").concat(name, \"][\").concat(column, \"][0].insureds\"));\n            }\n\n            return premiums.reduce(function (acc, obj) {\n              return acc + obj.premium;\n            }, 0);\n          });\n          var objects = columns.map(function (column) {\n            return data[index][name][column] || null;\n          }); // prettier-ignore\n\n          return {\n            id: name,\n            label: label,\n            data: premiumsSummed,\n            objects: objects,\n            backgroundColor: color,\n            hoverBackgroundColor: chroma(color).darken(0.5).hex()\n          };\n        })\n      };\n    };\n\n    _this.handleChartOnload = function (id, instance) {\n      _this.setState({\n        instance: instance\n      });\n    };\n\n    _this.state = {\n      instance: null\n    };\n    return _this;\n  }\n\n  _createClass(ChartPremium, [{\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var instance = this.state.instance;\n      var _this$props = this.props,\n          id = _this$props.id,\n          year = _this$props.year,\n          dataByCurrency = _this$props.dataByCurrency,\n          legend = _this$props.legend,\n          table = _this$props.table,\n          mobile = _this$props.mobile,\n          tablet = _this$props.tablet,\n          desktop = _this$props.desktop,\n          wide = _this$props.wide,\n          classes = _this$props.classes; // abort\n\n      if (!dataByCurrency) return null;\n      var optionsMerge = merge({}, config.ui.chart.bar, {\n        maintainAspectRatio: false,\n        scales: {\n          yAxes: [{\n            scaleLabel: {\n              labelString: utils.string.t('app.premium')\n            },\n            ticks: {\n              callback: function callback(label) {\n                return utils.string.t('format.number', {\n                  value: {\n                    number: label,\n                    format: {\n                      average: true,\n                      totalLength: 12,\n                      lowPrecision: false\n                    }\n                  }\n                }).toUpperCase();\n              }\n            }\n          }],\n          xAxes: [{\n            ticks: {\n              callback: function callback(label) {\n                return chunk(label, 30); //split in multiple rows\n              }\n            }\n          }]\n        },\n        tooltips: {\n          mode: 'point',\n          callbacks: {\n            title: function title(tooltipItems, data) {\n              var object = get(data, \"datasets[\".concat(tooltipItems[0].datasetIndex, \"].objects[\").concat(tooltipItems[0].index, \"][0]\"));\n              return object && object.insureds;\n            },\n            label: function label(tooltipItem, data) {\n              var dataset = get(data, \"datasets[\".concat(tooltipItem.datasetIndex, \"]\"));\n              var object = get(dataset, \"objects[\".concat(tooltipItem.index, \"][0]\"));\n              var premium = get(dataset, \"data[\".concat(tooltipItem.index, \"]\"));\n              return object && premium && [].concat(_toConsumableArray(chunk(\"\".concat(utils.string.t('app.client_plural'), \": \").concat(object.clients), 50)), [utils.string.t('chart.tooltip.premium', {\n                amount: premium\n              })]);\n            },\n            footer: function footer(tooltipItems, data) {\n              var index = get(tooltipItems, '[0].index');\n              var count = 0;\n              var sum = 0;\n              data.datasets.forEach(function (set, idx) {\n                var meta = instance.getDatasetMeta(idx) || {};\n                var value = !meta.hidden ? set.data[index] : 0;\n                count = value ? count + 1 : count;\n                sum += value;\n              });\n              return [utils.string.t('chart.tooltip.accounts', {\n                count: count\n              }), utils.string.t('chart.tooltip.total', {\n                amount: sum\n              })];\n            }\n          }\n        },\n        onHover: throttle(function (event, elems) {\n          var canvas = instance && instance.canvas;\n\n          if (canvas) {\n            canvas.style.cursor = elems[0] ? 'pointer' : 'default';\n          }\n        }, 100),\n        onClick: function onClick(event) {\n          var element = instance && instance.getElementAtEvent(event)[0];\n\n          if (element) {\n            var object = get(instance, \"data.datasets[\".concat(element._datasetIndex, \"].objects[\").concat(element._index, \"][0]\"));\n\n            if (object && object.id) {\n              _this2.props.getPlacementDetails(object.id);\n            }\n          }\n        }\n      });\n      var chartDataByCurrency = table ? dataByCurrency : dataByCurrency.map(function (_ref) {\n        var data = _ref.data,\n            columns = _ref.columns;\n        return _this2.buildChartData(data, columns);\n      });\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"client.office.\".concat(id, \".title\").concat(year ? 'ForYear' : ''),\n            options: {\n              year: year\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 18\n          }, this),\n          subtitle: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"client.office.\".concat(id, \".description\"),\n            className: classes.subtitle,\n            parseDangerousHtml: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 21\n          }, this),\n          icon: EqualizerIcon,\n          testid: \"page-header-office-premium-\".concat(id),\n          nestedClasses: {\n            root: classes.header\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 9\n        }, this), !table && chartDataByCurrency.map(function (chartData, index) {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(Ratio, {\n              w: mobile ? 1.25 : tablet ? 2 : desktop ? 2.5 : wide ? 3 : 3.5,\n              h: 1,\n              children: /*#__PURE__*/_jsxDEV(Chart, {\n                id: id,\n                type: \"bar\",\n                height: \"100%\",\n                data: chartData,\n                options: optionsMerge,\n                onload: _this2.handleChartOnload\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, _this2)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 15\n            }, _this2)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 198,\n            columnNumber: 13\n          }, _this2);\n        }), table && chartDataByCurrency.map(function (_ref2, index) {\n          var data = _ref2.data,\n              columns = _ref2.columns;\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(ChartTable, {\n              id: id,\n              rows: data,\n              cols: columns,\n              stacked: true,\n              sort: {\n                by: 'value',\n                type: 'numeric',\n                direction: 'desc'\n              },\n              pagination: {\n                page: 0,\n                rowsPerPage: 10\n              },\n              tooltip: function tooltip(row, dataset) {\n                var premiumTotal = row.datasets.reduce(function (acc, dataset) {\n                  return acc + dataset.value;\n                }, 0);\n                var premiumTotalString = utils.string.t('format.currency', {\n                  value: {\n                    number: premiumTotal,\n                    currency: row.currency\n                  }\n                });\n                var premiumString = utils.string.t('format.currency', {\n                  value: {\n                    number: dataset.value,\n                    currency: row.currency\n                  }\n                });\n                return /*#__PURE__*/_jsxDEV(ChartTooltip, {\n                  title: dataset.name,\n                  children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"\".concat(utils.string.t('app.premium'), \": \").concat(premiumString)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 233,\n                    columnNumber: 23\n                  }, _this2), /*#__PURE__*/_jsxDEV(\"div\", {\n                    children: \"\".concat(utils.string.t('app.total'), \": \").concat(premiumTotalString)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 234,\n                    columnNumber: 23\n                  }, _this2)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 232,\n                  columnNumber: 21\n                }, _this2);\n              },\n              onClick: function onClick(row, dataset) {\n                return function (event) {\n                  if (dataset && dataset.id) {\n                    _this2.props.getPlacementDetails(dataset.id);\n                  }\n                };\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, _this2)\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, _this2);\n        }), legend && !table && /*#__PURE__*/_jsxDEV(ChartLegend, {\n          instance: instance\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 247,\n          columnNumber: 30\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ChartPremium;\n}(PureComponent);\nChartPremium.propTypes = {\n  id: PropTypes.string.isRequired,\n  year: PropTypes.number,\n  dataByCurrency: PropTypes.arrayOf(PropTypes.shape({\n    data: PropTypes.array.isRequired,\n    columns: PropTypes.array.isRequired\n  })),\n  legend: PropTypes.bool,\n  table: PropTypes.bool\n};\nexport default compose(connect(null, mapDispatchToProps), withStyles(styles), withThemeListener)(ChartPremium);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ChartPremium/ChartPremium.js"],"names":["React","PureComponent","Fragment","PropTypes","connect","compose","chunk","chroma","throttle","merge","get","styles","Chart","ChartLegend","ChartTable","ChartTooltip","SectionHeader","Ratio","Translate","getPlacementDetails","withThemeListener","utils","config","withStyles","EqualizerIcon","mapDispatchToProps","ChartPremium","props","buildChartData","data","columns","colorScale","color","scale","length","labels","map","item","toString","datasets","obj","index","name","Object","keys","label","premiumsSummed","column","premiums","reduce","acc","premium","objects","id","backgroundColor","hoverBackgroundColor","darken","hex","handleChartOnload","instance","setState","state","year","dataByCurrency","legend","table","mobile","tablet","desktop","wide","classes","optionsMerge","ui","chart","bar","maintainAspectRatio","scales","yAxes","scaleLabel","labelString","string","t","ticks","callback","value","number","format","average","totalLength","lowPrecision","toUpperCase","xAxes","tooltips","mode","callbacks","title","tooltipItems","object","datasetIndex","insureds","tooltipItem","dataset","clients","amount","footer","count","sum","forEach","set","idx","meta","getDatasetMeta","hidden","onHover","event","elems","canvas","style","cursor","onClick","element","getElementAtEvent","_datasetIndex","_index","chartDataByCurrency","subtitle","root","header","chartData","by","type","direction","page","rowsPerPage","row","premiumTotal","premiumTotalString","currency","premiumString","propTypes","isRequired","arrayOf","shape","array","bool"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport chunk from 'chunk-text';\r\nimport chroma from 'chroma-js';\r\nimport throttle from 'lodash/throttle';\r\nimport merge from 'lodash/merge';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ChartPremium.styles';\r\nimport { Chart, ChartLegend, ChartTable, ChartTooltip, SectionHeader, Ratio, Translate } from 'components';\r\nimport { getPlacementDetails } from 'stores';\r\nimport { withThemeListener } from 'hoc';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { withStyles } from '@material-ui/core';\r\nimport EqualizerIcon from '@material-ui/icons/Equalizer';\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  getPlacementDetails,\r\n};\r\n\r\nexport class ChartPremium extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    year: PropTypes.number,\r\n    dataByCurrency: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        data: PropTypes.array.isRequired,\r\n        columns: PropTypes.array.isRequired,\r\n      })\r\n    ),\r\n    legend: PropTypes.bool,\r\n    table: PropTypes.bool,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    this.state = {\r\n      instance: null,\r\n    };\r\n  }\r\n\r\n  buildChartData = (data, columns) => {\r\n    const colorScale = utils.color.scale(data.length);\r\n\r\n    return {\r\n      labels: columns.map((item) => (item ? item.toString() : '')),\r\n      datasets: data.map((obj, index) => {\r\n        const name = Object.keys(obj)[0];\r\n        const color = colorScale[index];\r\n        let label = '';\r\n\r\n        const premiumsSummed = columns.map((column) => {\r\n          const premiums = data[index][name][column] || [];\r\n\r\n          if (premiums.length > 0) {\r\n            label = get(data, `[${index}][${name}][${column}][0].insureds`);\r\n          }\r\n\r\n          return premiums.reduce((acc, obj) => acc + obj.premium, 0);\r\n        });\r\n\r\n        const objects = columns.map((column) => {\r\n          return data[index][name][column] || null;\r\n        });\r\n\r\n        // prettier-ignore\r\n        return {\r\n          id: name,\r\n          label: label,\r\n          data: premiumsSummed,\r\n          objects: objects,\r\n          backgroundColor: color,\r\n          hoverBackgroundColor: chroma(color).darken(0.5).hex(),\r\n        };\r\n      }),\r\n    };\r\n  };\r\n\r\n  handleChartOnload = (id, instance) => {\r\n    this.setState({\r\n      instance,\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { instance } = this.state;\r\n    const { id, year, dataByCurrency, legend, table, mobile, tablet, desktop, wide, classes } = this.props;\r\n\r\n    // abort\r\n    if (!dataByCurrency) return null;\r\n\r\n    const optionsMerge = merge({}, config.ui.chart.bar, {\r\n      maintainAspectRatio: false,\r\n      scales: {\r\n        yAxes: [\r\n          {\r\n            scaleLabel: {\r\n              labelString: utils.string.t('app.premium'),\r\n            },\r\n            ticks: {\r\n              callback: (label) => {\r\n                return utils.string\r\n                  .t('format.number', { value: { number: label, format: { average: true, totalLength: 12, lowPrecision: false } } })\r\n                  .toUpperCase();\r\n              },\r\n            },\r\n          },\r\n        ],\r\n        xAxes: [\r\n          {\r\n            ticks: {\r\n              callback: (label) => {\r\n                return chunk(label, 30); //split in multiple rows\r\n              },\r\n            },\r\n          },\r\n        ],\r\n      },\r\n      tooltips: {\r\n        mode: 'point',\r\n        callbacks: {\r\n          title: (tooltipItems, data) => {\r\n            const object = get(data, `datasets[${tooltipItems[0].datasetIndex}].objects[${tooltipItems[0].index}][0]`);\r\n\r\n            return object && object.insureds;\r\n          },\r\n          label: (tooltipItem, data) => {\r\n            const dataset = get(data, `datasets[${tooltipItem.datasetIndex}]`);\r\n            const object = get(dataset, `objects[${tooltipItem.index}][0]`);\r\n            const premium = get(dataset, `data[${tooltipItem.index}]`);\r\n\r\n            return (\r\n              object &&\r\n              premium && [\r\n                ...chunk(`${utils.string.t('app.client_plural')}: ${object.clients}`, 50),\r\n                utils.string.t('chart.tooltip.premium', { amount: premium }),\r\n              ]\r\n            );\r\n          },\r\n          footer: (tooltipItems, data) => {\r\n            const index = get(tooltipItems, '[0].index');\r\n            let count = 0;\r\n            let sum = 0;\r\n\r\n            data.datasets.forEach((set, idx) => {\r\n              const meta = instance.getDatasetMeta(idx) || {};\r\n              const value = !meta.hidden ? set.data[index] : 0;\r\n              count = value ? count + 1 : count;\r\n              sum += value;\r\n            });\r\n\r\n            return [utils.string.t('chart.tooltip.accounts', { count: count }), utils.string.t('chart.tooltip.total', { amount: sum })];\r\n          },\r\n        },\r\n      },\r\n      onHover: throttle((event, elems) => {\r\n        const canvas = instance && instance.canvas;\r\n\r\n        if (canvas) {\r\n          canvas.style.cursor = elems[0] ? 'pointer' : 'default';\r\n        }\r\n      }, 100),\r\n      onClick: (event) => {\r\n        const element = instance && instance.getElementAtEvent(event)[0];\r\n\r\n        if (element) {\r\n          const object = get(instance, `data.datasets[${element._datasetIndex}].objects[${element._index}][0]`);\r\n\r\n          if (object && object.id) {\r\n            this.props.getPlacementDetails(object.id);\r\n          }\r\n        }\r\n      },\r\n    });\r\n\r\n    const chartDataByCurrency = table ? dataByCurrency : dataByCurrency.map(({ data, columns }) => this.buildChartData(data, columns));\r\n\r\n    return (\r\n      <Fragment>\r\n        <SectionHeader\r\n          title={<Translate label={`client.office.${id}.title${year ? 'ForYear' : ''}`} options={{ year: year }} />}\r\n          subtitle={<Translate label={`client.office.${id}.description`} className={classes.subtitle} parseDangerousHtml />}\r\n          icon={EqualizerIcon}\r\n          testid={`page-header-office-premium-${id}`}\r\n          nestedClasses={{ root: classes.header }}\r\n        />\r\n\r\n        {!table &&\r\n          chartDataByCurrency.map((chartData, index) => (\r\n            <Fragment key={index}>\r\n              <Ratio w={mobile ? 1.25 : tablet ? 2 : desktop ? 2.5 : wide ? 3 : 3.5} h={1}>\r\n                <Chart id={id} type=\"bar\" height=\"100%\" data={chartData} options={optionsMerge} onload={this.handleChartOnload} />\r\n              </Ratio>\r\n            </Fragment>\r\n          ))}\r\n\r\n        {table &&\r\n          chartDataByCurrency.map(({ data, columns }, index) => (\r\n            <Fragment key={index}>\r\n              <ChartTable\r\n                id={id}\r\n                rows={data}\r\n                cols={columns}\r\n                stacked\r\n                sort={{\r\n                  by: 'value',\r\n                  type: 'numeric',\r\n                  direction: 'desc',\r\n                }}\r\n                pagination={{\r\n                  page: 0,\r\n                  rowsPerPage: 10,\r\n                }}\r\n                tooltip={(row, dataset) => {\r\n                  const premiumTotal = row.datasets.reduce((acc, dataset) => acc + dataset.value, 0);\r\n                  const premiumTotalString = utils.string.t('format.currency', {\r\n                    value: { number: premiumTotal, currency: row.currency },\r\n                  });\r\n                  const premiumString = utils.string.t('format.currency', {\r\n                    value: { number: dataset.value, currency: row.currency },\r\n                  });\r\n\r\n                  return (\r\n                    <ChartTooltip title={dataset.name}>\r\n                      <div>{`${utils.string.t('app.premium')}: ${premiumString}`}</div>\r\n                      <div>{`${utils.string.t('app.total')}: ${premiumTotalString}`}</div>\r\n                    </ChartTooltip>\r\n                  );\r\n                }}\r\n                onClick={(row, dataset) => (event) => {\r\n                  if (dataset && dataset.id) {\r\n                    this.props.getPlacementDetails(dataset.id);\r\n                  }\r\n                }}\r\n              />\r\n            </Fragment>\r\n          ))}\r\n\r\n        {legend && !table && <ChartLegend instance={instance} />}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(null, mapDispatchToProps), withStyles(styles), withThemeListener)(ChartPremium);\r\n"]},"metadata":{},"sourceType":"module"}