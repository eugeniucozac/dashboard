{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nexport var postEditClaimDetailsInformation = function postEditClaimDetailsInformation(formData, policyUpdated) {\n  return function (dispatch, getState) {\n    var _get, _get$items$, _get2, _get3, _get4, _referralValues$find, _referralResponse$fin, _formData$lossQualifi, _formData$lossQualifi2, _formData$settlementC, _formData$claimantNam, _formData$ugSections, _formData$ugSections2, _formData$priority, _formData$priority2, _formData$complexity, _formData$complexity2, _formData$complexity3, _formData$referral, _formData$complexity4, _formData$referral2, _formData$complexity5, _formData$rfiResponse, _formData$complexity6, _formData$rfiResponse2, _formData$bordereauPe, _formData$insured, _formData$client, _formData$countryCode, _formData$originalCur;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        user = _getState.user,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postEditClaimDetailsInformation'\n    };\n    dispatch(postEditClaimDetailsInformationRequest(formData));\n    dispatch(addLoader('postEditClaimDetailsInformation'));\n    var nowIsoString = utils.date.toISOString(new Date());\n    var assignedFullName = get(user, 'fullName');\n    var defaultValues = get(claims, 'allClaimDetails');\n    var claimInformationValues = get(claims, 'claimDetailInformationSuccess');\n    var claimantNames = policyUpdated ? null : get(claims, 'claimantNames');\n    var referralValues = policyUpdated ? null : get(claims, 'referralValues');\n    var referralResponse = policyUpdated ? null : get(claims, 'referralResponse');\n    var underWritingGroups = get(claims, 'underWritingGroups.items');\n    var newClaimants = policyUpdated ? [] : claimantNames.filter(function (claimant) {\n      return typeof claimant.id === 'number';\n    }).map(function (claimant) {\n      return claimant.name;\n    });\n    var policyUnderWritingGroupDtoList = underWritingGroups.filter(function (ug) {\n      return ug.selected;\n    });\n    var selectedbeAdjuster = get(claims, 'beAdjuster.selectedbeAdjuster');\n    var beAdjusterID = (formData === null || formData === void 0 ? void 0 : formData.adjuster) === 'beAdjuster' ? selectedbeAdjuster === null || selectedbeAdjuster === void 0 ? void 0 : selectedbeAdjuster.id : (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.beAdjusterID) || 0;\n    var nonBEAdjusterName = policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : formData.adjuster) === 'nonBeAdjuster' ? formData.nonBeAdjuster : claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.nonBEAdjusterName;\n    var policyInterestID = (_get = get(claims, 'interest')) === null || _get === void 0 ? void 0 : (_get$items$ = _get.items[0]) === null || _get$items$ === void 0 ? void 0 : _get$items$.policyInterestID;\n    var claimSubmissionId = get(claims, 'claimData').claimId || get(claims, 'claimsInformation').claimID || '';\n    var claimStatusId = ((_get2 = get(claims, 'claimsInformation')) === null || _get2 === void 0 ? void 0 : _get2.claimStatusID) || '';\n    var claimReference = (_get3 = get(claims, 'claimsInformation')) === null || _get3 === void 0 ? void 0 : _get3.claimReference;\n    var claimcomplexityValueID = (_get4 = get(claims, 'claimsInformation')) === null || _get4 === void 0 ? void 0 : _get4.complexityValueID;\n    var referralValuesAssignedTo = policyUpdated ? null : (_referralValues$find = referralValues.find(function (item) {\n      return item.complexityRulesID === Number(formData.referral || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.referralValueID));\n    })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue.includes('Assign to Myself');\n    var referralResponseAssignedTo = policyUpdated ? null : (_referralResponse$fin = referralResponse.find(function (item) {\n      return item.id === formData.rfiResponse;\n    })) === null || _referralResponse$fin === void 0 ? void 0 : _referralResponse$fin.description.includes('Assign to Myself');\n    var refRequired = 'Referral Required';\n\n    var addDateAndTime = function addDateAndTime(date, time) {\n      if (!date) return date;\n      var actualDate = new Date(utils.string.t('format.date', {\n        value: {\n          date: date,\n          format: 'D MMM YYYY'\n        }\n      }) + ' ' + (time ? time + ':00' : '00:00:00'));\n      return actualDate || date;\n    };\n\n    var data = _objectSpread(_objectSpread({}, defaultValues), {}, {\n      assignedTo: policyUpdated ? null : referralValuesAssignedTo || referralResponseAssignedTo ? assignedFullName : 'Unassigned',\n      basisOfOrder: (formData === null || formData === void 0 ? void 0 : formData.order) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.basisOfOrder) || '0',\n      claimID: claimSubmissionId,\n      adjusterName: policyUpdated ? null : formData.adjusterName || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.adjusterName),\n      adjusterReference: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : formData.adjusterReference) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.adjusterReference),\n      fgunarrative: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : formData.fgunarrative) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.fgunarrative),\n      location: policyUpdated ? null : formData.location || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.location),\n      lossQualifierID: (formData === null || formData === void 0 ? void 0 : (_formData$lossQualifi = formData.lossQualifierID) === null || _formData$lossQualifi === void 0 ? void 0 : _formData$lossQualifi.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.lossQualifierID) || '',\n      lossQualifierName: (formData === null || formData === void 0 ? void 0 : (_formData$lossQualifi2 = formData.lossQualifierID) === null || _formData$lossQualifi2 === void 0 ? void 0 : _formData$lossQualifi2.name) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.lossQualifierName) || '',\n      movementType: formData.movementType || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.movementType),\n      orderPercentage: formData.orderPercentage || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.orderPercentage),\n      settlementCurrencyCode: (formData === null || formData === void 0 ? void 0 : (_formData$settlementC = formData.settlementCurrencyCode) === null || _formData$settlementC === void 0 ? void 0 : _formData$settlementC.currencyCd) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.settlementCurrencyCode),\n      claimantName: policyUpdated ? null : ((_formData$claimantNam = formData.claimantName) === null || _formData$claimantNam === void 0 ? void 0 : _formData$claimantNam.name) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.claimantName),\n      lossFromDate: (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.lossFromDate) || utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.fromDate),\n      lossToDate: (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.lossToDate) || utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.toDate),\n      newClaimants: newClaimants,\n      createdBy: user.id,\n      createdDate: nowIsoString,\n      policySectionID: policyUpdated ? null : ((formData === null || formData === void 0 ? void 0 : (_formData$ugSections = formData.ugSections) === null || _formData$ugSections === void 0 ? void 0 : _formData$ugSections.id) === constants.CLAIM_POLICY_SECTION_DEFAULT ? null : formData === null || formData === void 0 ? void 0 : (_formData$ugSections2 = formData.ugSections) === null || _formData$ugSections2 === void 0 ? void 0 : _formData$ugSections2.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.policySectionID),\n      policyUnderWritingGroupDtoList: policyUnderWritingGroupDtoList,\n      updatedBy: user.id,\n      updatedDate: nowIsoString,\n      submittedDate: nowIsoString,\n      claimStatusID: claimStatusId,\n      claimReference: claimReference,\n      priorityDescription: (formData === null || formData === void 0 ? void 0 : (_formData$priority = formData.priority) === null || _formData$priority === void 0 ? void 0 : _formData$priority.description) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.priorityDescription) || 'Medium',\n      priorityID: (formData === null || formData === void 0 ? void 0 : (_formData$priority2 = formData.priority) === null || _formData$priority2 === void 0 ? void 0 : _formData$priority2.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.priorityID) || 3,\n      beAdjusterID: beAdjusterID,\n      nonBEAdjusterName: nonBEAdjusterName,\n      policyInterestID: policyInterestID,\n      certificateExpiryDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.certificateExpiryDate) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.certificateExpiryDate),\n      certificateInceptionDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.certificateInceptionDate) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.certificateInceptionDate),\n      certificateNumber: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : formData.certificateNumber) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.certificateNumber),\n      complexityValueID: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity = formData.complexity) === null || _formData$complexity === void 0 ? void 0 : _formData$complexity.complexityRulesID) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.complexityValueID) || claimcomplexityValueID,\n      complexityValue: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity2 = formData.complexity) === null || _formData$complexity2 === void 0 ? void 0 : _formData$complexity2.complexityRulesValue) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.complexityValue),\n      referralValueID: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity3 = formData.complexity) === null || _formData$complexity3 === void 0 ? void 0 : _formData$complexity3.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$referral = formData.referral) === null || _formData$referral === void 0 ? void 0 : _formData$referral.complexityRulesID : claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.referralValueID,\n      referralValue: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity4 = formData.complexity) === null || _formData$complexity4 === void 0 ? void 0 : _formData$complexity4.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$referral2 = formData.referral) === null || _formData$referral2 === void 0 ? void 0 : _formData$referral2.complexityRulesValue : claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.referralValue,\n      referralResponseID: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity5 = formData.complexity) === null || _formData$complexity5 === void 0 ? void 0 : _formData$complexity5.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$rfiResponse = formData.rfiResponse) === null || _formData$rfiResponse === void 0 ? void 0 : _formData$rfiResponse.id : claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.referralResponseID,\n      referralResponseDescription: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$complexity6 = formData.complexity) === null || _formData$complexity6 === void 0 ? void 0 : _formData$complexity6.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$rfiResponse2 = formData.rfiResponse) === null || _formData$rfiResponse2 === void 0 ? void 0 : _formData$rfiResponse2.description : claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.referralResponseDescription,\n      claimReceivedDate: policyUpdated ? null : addDateAndTime(formData === null || formData === void 0 ? void 0 : formData.claimReceivedDate, formData === null || formData === void 0 ? void 0 : formData.claimReceivedTime) || addDateAndTime(claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.claimReceivedDate),\n      bordereauPeriod: policyUpdated ? null : (formData === null || formData === void 0 ? void 0 : (_formData$bordereauPe = formData.bordereauPeriod) === null || _formData$bordereauPe === void 0 ? void 0 : _formData$bordereauPe.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.bordereauPeriod),\n      bordereauClaim: (formData === null || formData === void 0 ? void 0 : formData.bordereauClaim) ? 1 : 0,\n      insuredID: parseInt(formData === null || formData === void 0 ? void 0 : (_formData$insured = formData.insured) === null || _formData$insured === void 0 ? void 0 : _formData$insured.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.insuredID),\n      clientID: parseInt(formData === null || formData === void 0 ? void 0 : (_formData$client = formData.client) === null || _formData$client === void 0 ? void 0 : _formData$client.id) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.clientID),\n      settlementCountry: (formData === null || formData === void 0 ? void 0 : (_formData$countryCode = formData.countryCode) === null || _formData$countryCode === void 0 ? void 0 : _formData$countryCode.countryCode) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.settlementCountry),\n      originalCurrency: (formData === null || formData === void 0 ? void 0 : (_formData$originalCur = formData.originalCurrencyCode) === null || _formData$originalCur === void 0 ? void 0 : _formData$originalCur.currencyCd) || (claimInformationValues === null || claimInformationValues === void 0 ? void 0 : claimInformationValues.originalCurrency)\n    });\n\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/\".concat(claimSubmissionId, \"/update\"),\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postEditClaimDetailsInformationSuccess(data.data));\n      dispatch(enqueueNotification('notification.claimEditDetails.success', 'success'));\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\n      return data.data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postEditClaimDetailsInformationFailure(err));\n      dispatch(enqueueNotification('notification.claimEditDetails.fail', 'error'));\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\n      return err;\n    });\n  };\n};\nexport var postEditClaimDetailsInformationRequest = function postEditClaimDetailsInformationRequest(data) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_REQUEST',\n    payload: data\n  };\n};\nexport var postEditClaimDetailsInformationSuccess = function postEditClaimDetailsInformationSuccess(data) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_SUCCESS',\n    payload: data\n  };\n};\nexport var postEditClaimDetailsInformationFailure = function postEditClaimDetailsInformationFailure(error) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postEditClaimDetailsInformation.js"],"names":["get","authLogout","addLoader","enqueueNotification","removeLoader","utils","constants","postEditClaimDetailsInformation","formData","policyUpdated","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","postEditClaimDetailsInformationRequest","nowIsoString","date","toISOString","Date","assignedFullName","defaultValues","claimInformationValues","claimantNames","referralValues","referralResponse","underWritingGroups","newClaimants","filter","claimant","id","map","name","policyUnderWritingGroupDtoList","ug","selected","selectedbeAdjuster","beAdjusterID","adjuster","nonBEAdjusterName","nonBeAdjuster","policyInterestID","items","claimSubmissionId","claimId","claimID","claimStatusId","claimStatusID","claimReference","claimcomplexityValueID","complexityValueID","referralValuesAssignedTo","find","item","complexityRulesID","Number","referral","referralValueID","complexityRulesValue","includes","referralResponseAssignedTo","rfiResponse","description","refRequired","addDateAndTime","time","actualDate","string","t","value","format","data","assignedTo","basisOfOrder","order","adjusterName","adjusterReference","fgunarrative","location","lossQualifierID","lossQualifierName","movementType","orderPercentage","settlementCurrencyCode","currencyCd","claimantName","lossFromDate","fromDate","lossToDate","toDate","createdBy","createdDate","policySectionID","ugSections","CLAIM_POLICY_SECTION_DEFAULT","updatedBy","updatedDate","submittedDate","priorityDescription","priority","priorityID","certificateExpiryDate","certificateInceptionDate","certificateNumber","complexity","complexityValue","referralValue","referralResponseID","referralResponseDescription","claimReceivedDate","claimReceivedTime","bordereauPeriod","bordereauClaim","insuredID","parseInt","insured","clientID","client","settlementCountry","countryCode","originalCurrency","originalCurrencyCode","api","put","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","postEditClaimDetailsInformationSuccess","catch","err","errorParams","message","handleError","handleUnauthorized","postEditClaimDetailsInformationFailure","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport const postEditClaimDetailsInformation = (formData, policyUpdated) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, user, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postEditClaimDetailsInformation',\r\n  };\r\n\r\n  dispatch(postEditClaimDetailsInformationRequest(formData));\r\n  dispatch(addLoader('postEditClaimDetailsInformation'));\r\n\r\n  const nowIsoString = utils.date.toISOString(new Date());\r\n\r\n  const assignedFullName = get(user, 'fullName');\r\n  const defaultValues = get(claims, 'allClaimDetails');\r\n  const claimInformationValues = get(claims, 'claimDetailInformationSuccess');\r\n  const claimantNames = policyUpdated ? null : get(claims, 'claimantNames');\r\n  const referralValues = policyUpdated ? null : get(claims, 'referralValues');\r\n  const referralResponse = policyUpdated ? null : get(claims, 'referralResponse');\r\n  const underWritingGroups = get(claims, 'underWritingGroups.items');\r\n  const newClaimants = policyUpdated\r\n    ? []\r\n    : claimantNames.filter((claimant) => typeof claimant.id === 'number').map((claimant) => claimant.name);\r\n  const policyUnderWritingGroupDtoList = underWritingGroups.filter((ug) => ug.selected);\r\n  const selectedbeAdjuster = get(claims, 'beAdjuster.selectedbeAdjuster');\r\n  const beAdjusterID = formData?.adjuster === 'beAdjuster' ? selectedbeAdjuster?.id : claimInformationValues?.beAdjusterID || 0;\r\n  const nonBEAdjusterName = policyUpdated\r\n    ? null\r\n    : formData?.adjuster === 'nonBeAdjuster'\r\n    ? formData.nonBeAdjuster\r\n    : claimInformationValues?.nonBEAdjusterName;\r\n  const policyInterestID = get(claims, 'interest')?.items[0]?.policyInterestID;\r\n  const claimSubmissionId = get(claims, 'claimData').claimId || get(claims, 'claimsInformation').claimID || '';\r\n  const claimStatusId = get(claims, 'claimsInformation')?.claimStatusID || '';\r\n  const claimReference = get(claims, 'claimsInformation')?.claimReference;\r\n  const claimcomplexityValueID = get(claims, 'claimsInformation')?.complexityValueID;\r\n\r\n  const referralValuesAssignedTo = policyUpdated\r\n    ? null\r\n    : referralValues\r\n        .find((item) => item.complexityRulesID === Number(formData.referral || claimInformationValues?.referralValueID))\r\n        ?.complexityRulesValue.includes('Assign to Myself');\r\n\r\n  const referralResponseAssignedTo = policyUpdated\r\n    ? null\r\n    : referralResponse.find((item) => item.id === formData.rfiResponse)?.description.includes('Assign to Myself');\r\n\r\n  const refRequired = 'Referral Required';\r\n  const addDateAndTime = (date, time) => {\r\n    if (!date) return date;\r\n    let actualDate = new Date(\r\n      utils.string.t('format.date', { value: { date: date, format: 'D MMM YYYY' } }) + ' ' + (time ? time + ':00' : '00:00:00')\r\n    );\r\n    return actualDate || date;\r\n  };\r\n\r\n  const data = {\r\n    ...defaultValues,\r\n    assignedTo: policyUpdated ? null : referralValuesAssignedTo || referralResponseAssignedTo ? assignedFullName : 'Unassigned',\r\n    basisOfOrder: formData?.order || claimInformationValues?.basisOfOrder || '0',\r\n    claimID: claimSubmissionId,\r\n    adjusterName: policyUpdated ? null : formData.adjusterName || claimInformationValues?.adjusterName,\r\n    adjusterReference: policyUpdated ? null : formData?.adjusterReference || claimInformationValues?.adjusterReference,\r\n    fgunarrative: policyUpdated ? null : formData?.fgunarrative || claimInformationValues?.fgunarrative,\r\n    location: policyUpdated ? null : formData.location || claimInformationValues?.location,\r\n    lossQualifierID: formData?.lossQualifierID?.id || claimInformationValues?.lossQualifierID || '',\r\n    lossQualifierName: formData?.lossQualifierID?.name || claimInformationValues?.lossQualifierName || '',\r\n    movementType: formData.movementType || claimInformationValues?.movementType,\r\n    orderPercentage: formData.orderPercentage || claimInformationValues?.orderPercentage,\r\n    settlementCurrencyCode: formData?.settlementCurrencyCode?.currencyCd || claimInformationValues?.settlementCurrencyCode,\r\n    claimantName: policyUpdated ? null : formData.claimantName?.name || claimInformationValues?.claimantName,\r\n    lossFromDate: claimInformationValues?.lossFromDate || utils.date.toISOString(formData?.fromDate),\r\n    lossToDate: claimInformationValues?.lossToDate || utils.date.toISOString(formData?.toDate),\r\n    newClaimants,\r\n    createdBy: user.id,\r\n    createdDate: nowIsoString,\r\n    policySectionID: policyUpdated\r\n      ? null\r\n      : (formData?.ugSections?.id === constants.CLAIM_POLICY_SECTION_DEFAULT ? null : formData?.ugSections?.id) ||\r\n        claimInformationValues?.policySectionID,\r\n    policyUnderWritingGroupDtoList,\r\n    updatedBy: user.id,\r\n    updatedDate: nowIsoString,\r\n    submittedDate: nowIsoString,\r\n    claimStatusID: claimStatusId,\r\n    claimReference: claimReference,\r\n    priorityDescription: formData?.priority?.description || claimInformationValues?.priorityDescription || 'Medium',\r\n    priorityID: formData?.priority?.id || claimInformationValues?.priorityID || 3,\r\n    beAdjusterID,\r\n    nonBEAdjusterName,\r\n    policyInterestID,\r\n    certificateExpiryDate: utils.date.toISOString(formData?.certificateExpiryDate) || claimInformationValues?.certificateExpiryDate,\r\n    certificateInceptionDate:\r\n      utils.date.toISOString(formData?.certificateInceptionDate) || claimInformationValues?.certificateInceptionDate,\r\n    certificateNumber: policyUpdated ? null : formData?.certificateNumber || claimInformationValues?.certificateNumber,\r\n    complexityValueID: policyUpdated ? null : formData?.complexity?.complexityRulesID || claimInformationValues?.complexityValueID || claimcomplexityValueID,\r\n    complexityValue: policyUpdated ? null : formData?.complexity?.complexityRulesValue || claimInformationValues?.complexityValue,\r\n    referralValueID: policyUpdated\r\n      ? null\r\n      : formData?.complexity?.complexityRulesValue === refRequired\r\n      ? formData?.referral?.complexityRulesID\r\n      : claimInformationValues?.referralValueID,\r\n    referralValue: policyUpdated\r\n      ? null\r\n      : formData?.complexity?.complexityRulesValue === refRequired\r\n      ? formData?.referral?.complexityRulesValue\r\n      : claimInformationValues?.referralValue,\r\n    referralResponseID: policyUpdated\r\n      ? null\r\n      : formData?.complexity?.complexityRulesValue === refRequired\r\n      ? formData?.rfiResponse?.id\r\n      : claimInformationValues?.referralResponseID,\r\n    referralResponseDescription: policyUpdated\r\n      ? null\r\n      : formData?.complexity?.complexityRulesValue === refRequired\r\n      ? formData?.rfiResponse?.description\r\n      : claimInformationValues?.referralResponseDescription,\r\n    claimReceivedDate: policyUpdated\r\n      ? null\r\n      : addDateAndTime(formData?.claimReceivedDate, formData?.claimReceivedTime) ||\r\n        addDateAndTime(claimInformationValues?.claimReceivedDate),\r\n    bordereauPeriod: policyUpdated ? null : formData?.bordereauPeriod?.id || claimInformationValues?.bordereauPeriod,\r\n    bordereauClaim: formData?.bordereauClaim ? 1 : 0,\r\n    insuredID: parseInt(formData?.insured?.id) || claimInformationValues?.insuredID,\r\n    clientID: parseInt(formData?.client?.id) || claimInformationValues?.clientID,\r\n    settlementCountry: formData?.countryCode?.countryCode || claimInformationValues?.settlementCountry,\r\n    originalCurrency: formData?.originalCurrencyCode?.currencyCd || claimInformationValues?.originalCurrency,\r\n  };\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/${claimSubmissionId}/update`,\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postEditClaimDetailsInformationSuccess(data.data));\r\n      dispatch(enqueueNotification('notification.claimEditDetails.success', 'success'));\r\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postEditClaimDetailsInformationFailure(err));\r\n      dispatch(enqueueNotification('notification.claimEditDetails.fail', 'error'));\r\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postEditClaimDetailsInformationRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postEditClaimDetailsInformationSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postEditClaimDetailsInformationFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}