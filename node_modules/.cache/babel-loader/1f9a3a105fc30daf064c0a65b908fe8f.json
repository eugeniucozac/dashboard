{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClientCharts\\\\ClientCharts.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport { withRouter } from 'react-router';\nimport { firstBy } from 'thenby';\nimport kebabCase from 'lodash/kebabCase';\nimport toNumber from 'lodash/toNumber';\nimport flatten from 'lodash/flatten';\nimport isEmpty from 'lodash/isEmpty';\nimport uniqBy from 'lodash/uniqBy';\nimport range from 'lodash/range';\nimport pick from 'lodash/pick';\nimport xor from 'lodash/xor';\nimport get from 'lodash/get'; // app\n\nimport styles from './ClientCharts.styles';\nimport { updatePortfolioMapDepartment, resetPortfolioMap } from 'stores';\nimport { AvatarGroup, CardList, PageHeader, PopoverMenu, Sticky, Button, Translate, SectionHeader } from 'components';\nimport { ChartPremiumByAccount, ChartPremiumByMarket, ChartPremiumByYear, PortfolioMapHeader } from 'modules';\nimport { showModal } from 'stores';\nimport { withThemeListener } from 'hoc';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { withStyles, withTheme, Typography } from '@material-ui/core';\nimport PeopleIcon from '@material-ui/icons/People';\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport MapIcon from '@material-ui/icons/Map'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    user: state.user,\n    referenceDataCurrencies: state.referenceData.currencies,\n    referenceDataDepartments: state.referenceData.departments,\n    filteredDepartments: state.portfolioMap.tiv.filteredDepartments\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  showModal: showModal,\n  updatePortfolioMapDepartment: updatePortfolioMapDepartment,\n  resetPortfolioMap: resetPortfolioMap\n};\nexport var ClientCharts = /*#__PURE__*/function (_PureComponent) {\n  _inherits(ClientCharts, _PureComponent);\n\n  var _super = _createSuper(ClientCharts);\n\n  function ClientCharts(props) {\n    var _this;\n\n    _classCallCheck(this, ClientCharts);\n\n    _this = _super.call(this, props);\n\n    _this.getUrlParamsOfficeIds = function () {\n      var officeIds = get(_this.props, 'match.params.officeIds'); // abort\n\n      if (!officeIds) return [];\n      var offices = officeIds.split('-') || [];\n      return offices.map(function (o) {\n        return toNumber(o);\n      });\n    };\n\n    _this.getDepartments = function (placements, placementsYear) {\n      var selectedDepartments = _this.state.selectedDepartments;\n      var referenceDataDepartments = _this.props.referenceDataDepartments;\n      return placements.reduce(function (list, placement) {\n        var year = utils.placement.getYear(placement);\n        var isValid = year === placementsYear; // Only keep placements for defined year\n\n        if (!isValid) return list;\n        var deptId = placement.departmentId;\n        var deptName = utils.placement.getDepartmentName(placement, referenceDataDepartments);\n        var premiumByCurrency = utils.placement.getPremiumBySettlementCurrency(placement, true, true);\n        var isNew = !list.some(function (item) {\n          return item.id === deptId;\n        });\n        return isNew ? [].concat(_toConsumableArray(list), [{\n          id: deptId,\n          name: deptName,\n          premiumByCurrency: premiumByCurrency,\n          active: selectedDepartments.includes(deptId)\n        }]) : list.map(function (dept) {\n          if (dept.id === deptId) {\n            return _objectSpread(_objectSpread({}, dept), {}, {\n              premiumByCurrency: utils.placement.mergePremiumsByCurrency(dept.premiumByCurrency, premiumByCurrency)\n            });\n          }\n\n          return dept;\n        });\n      }, []).sort(firstBy('premiumByCurrency', -1));\n    };\n\n    _this.getDepartmentsList = function (placements, selectedYear) {\n      var filterEmpty = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n\n      var departments = _this.getDepartments(placements, selectedYear).map(function (dept) {\n        return {\n          id: \"\".concat(dept.id, \"-\").concat(dept.name),\n          rawId: dept.id,\n          title: dept.name || '-',\n          children: _this.premiumsByCurrency(dept.premiumByCurrency),\n          active: dept.active,\n          onClick: _this.handleClickFilter('departments', dept.id)\n        };\n      });\n\n      return filterEmpty ? departments.filter(function (dep) {\n        return flatten(dep.children.props.children.filter(function (depVal) {\n          return utils.generic.isValidArray(depVal);\n        })).filter(function (dep) {\n          return !!dep;\n        }).length > 0;\n      }) : departments;\n    };\n\n    _this.premiumsByCurrency = function (premiumByCurrency) {\n      var classes = _this.props.classes;\n      return /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.premiumByCurrency,\n        children: [isEmpty(premiumByCurrency) && /*#__PURE__*/_jsxDEV(\"li\", {\n          children: \"0\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 40\n        }, _assertThisInitialized(_this)), Object.keys(premiumByCurrency).map(function (currency) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: utils.string.t('format.currency', {\n              value: {\n                number: premiumByCurrency[currency],\n                currency: currency,\n                default: '-'\n              }\n            })\n          }, currency, false, {\n            fileName: _jsxFileName,\n            lineNumber: 150,\n            columnNumber: 11\n          }, _assertThisInitialized(_this));\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    };\n\n    _this.getOffices = function (placements) {\n      var offices = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n      var customSelectedDepartments = arguments.length > 2 ? arguments[2] : undefined;\n      var _this$state = _this.state,\n          selectedDepartments = _this$state.selectedDepartments,\n          selectedOffices = _this$state.selectedOffices;\n      var defaultOffices = offices.map(function (office) {\n        return _objectSpread(_objectSpread({}, pick(office, ['id', 'name', 'clients', 'cobrokers'])), {}, {\n          active: selectedOffices.includes(office.id),\n          placements: [],\n          premiumByCurrency: {}\n        });\n      });\n      return placements.reduce(function (list, placement) {\n        var year = utils.placement.getYear(placement);\n        var isValid = year === _this.state.selectedYear; // Only keep placements for defined year\n\n        if (!isValid) return list;\n        var premiumByCurrency = utils.placement.getPremiumBySettlementCurrency(placement, true, true);\n        var hasPremiums = Boolean(premiumByCurrency);\n        var isWithinDepartments = customSelectedDepartments ? customSelectedDepartments.includes(placement.departmentId) : selectedDepartments.includes(placement.departmentId);\n\n        if (hasPremiums && isWithinDepartments) {\n          placement.clients.forEach(function (client) {\n            offices.forEach(function (office) {\n              var officeId = office.id;\n              var isClientInOffice = office.clients.some(function (c) {\n                return c.id === client.id;\n              });\n\n              if (isClientInOffice) {\n                list = list.map(function (listObj) {\n                  if (listObj.id === officeId) {\n                    var isPlacementAlreadyIn = listObj.placements.includes(placement.id);\n\n                    if (!isPlacementAlreadyIn) {\n                      return _objectSpread(_objectSpread({}, listObj), {}, {\n                        premiumByCurrency: utils.placement.mergePremiumsByCurrency(listObj.premiumByCurrency, premiumByCurrency),\n                        placements: [].concat(_toConsumableArray(listObj.placements), [placement.id])\n                      });\n                    }\n                  }\n\n                  return listObj;\n                });\n              }\n            });\n          });\n        }\n\n        return list;\n      }, defaultOffices).filter(function (o) {\n        return Object.keys(o.premiumByCurrency).length > 0;\n      }).sort(firstBy('premiumByCurrency', -1).thenBy(utils.sort.array('lexical', 'name')));\n    };\n\n    _this.getOfficesList = function (offices) {\n      return offices.map(function (o) {\n        return {\n          id: \"\".concat(o.id, \"-\").concat(o.name),\n          title: o.name || '-',\n          children: _this.premiumsByCurrency(o.premiumByCurrency),\n          active: o.active,\n          onClick: _this.handleClickFilter('offices', o.id)\n        };\n      });\n    };\n\n    _this.getUsers = function (offices) {\n      var users = offices.reduce(function (acc, office) {\n        if (!office.active || !office.cobrokers || !Array.isArray(office.cobrokers)) return acc;\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(office.cobrokers));\n      }, []);\n      return uniqBy(users, 'id');\n    };\n\n    _this.filterPlacements = function (placements, offices) {\n      var _this$state2 = _this.state,\n          selectedDepartments = _this$state2.selectedDepartments,\n          selectedOffices = _this$state2.selectedOffices; // abort\n\n      if (utils.generic.isInvalidOrEmptyArray(placements) || utils.generic.isInvalidOrEmptyArray(offices)) return [];\n      var activeOffices = offices.filter(function (o) {\n        return selectedOffices.includes(o.id);\n      });\n      var activeOfficeClients = uniqBy(flatten(activeOffices.map(function (office) {\n        return office.clients;\n      })), 'id') || []; // only keep placement within the selected departments/offices\n\n      return placements.filter(function (placement) {\n        var placementClients = placement.clients || [];\n        var isWithinDepartments = selectedDepartments.includes(placement.departmentId);\n        var isWithinOffices = placementClients.some(function (p) {\n          return activeOfficeClients.some(function (c) {\n            return c.id === p.id;\n          });\n        });\n        return isWithinDepartments && isWithinOffices;\n      });\n    };\n\n    _this.handleClickFilter = function (type, id) {\n      return function (event) {\n        var _this$props = _this.props,\n            updatePortfolioMapDepartment = _this$props.updatePortfolioMapDepartment,\n            filteredDepartments = _this$props.filteredDepartments;\n\n        switch (type) {\n          case 'departments':\n            var selectedDepartments = xor(_this.state.selectedDepartments, [id]);\n            var selectedCardDepartments = filteredDepartments.map(function (dep) {\n              return dep.rawId === id ? _objectSpread(_objectSpread({}, dep), {}, {\n                active: !dep.active\n              }) : dep;\n            });\n            updatePortfolioMapDepartment(selectedCardDepartments);\n\n            _this.setState({\n              selectedDepartments: selectedDepartments\n            });\n\n            break;\n\n          case 'offices':\n            _this.setState({\n              selectedOffices: xor(_this.state.selectedOffices, [id])\n            });\n\n            break;\n\n          default:\n            break;\n        }\n      };\n    };\n\n    _this.handleClickChangeParent = function (parent) {\n      return function (event) {\n        var type = _this.props.type;\n        var officeId = parent && parent.id;\n        var officeSlug = parent && parent.name ? \"/\".concat(kebabCase(parent.name)) : '';\n\n        _this.props.history.push(\"\".concat(config.routes[type].item, \"/\").concat(officeId).concat(officeSlug));\n      };\n    };\n\n    _this.handleClickChangeYear = function (year) {\n      return function (event) {\n        _this.setState({\n          selectedYear: year\n        });\n      };\n    };\n\n    _this.handleViewPortfolio = function () {\n      var _this$props2 = _this.props,\n          parent = _this$props2.parent,\n          showModal = _this$props2.showModal,\n          type = _this$props2.type;\n      var logo = utils.client.parent.getLogoFilePath(parent.selected);\n      showModal({\n        component: 'PORTFOLIO_MAP',\n        props: {\n          fullWidth: true,\n          fullScreen: true,\n          titleChildren: /*#__PURE__*/_jsxDEV(PortfolioMapHeader, {\n            logo: logo,\n            title: \"portfolio.title_\".concat(type)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 354,\n            columnNumber: 24\n          }, _assertThisInitialized(_this)),\n          disableAutoFocus: true,\n          componentProps: {\n            parent: parent\n          }\n        }\n      });\n    };\n\n    var currentYear = utils.app.getCurrentYear();\n    _this.state = {\n      years: range(currentYear, 2018),\n      // 2018 won't be included in the range, 2019 will therefore be the last\n      selectedYear: currentYear,\n      selectedDepartments: [],\n      selectedOffices: []\n    };\n    return _this;\n  }\n\n  _createClass(ClientCharts, [{\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      var resetPortfolioMap = this.props.resetPortfolioMap;\n      resetPortfolioMap();\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var selectedYear = this.state.selectedYear;\n      var _this$props3 = this.props,\n          user = _this$props3.user,\n          parent = _this$props3.parent,\n          history = _this$props3.history,\n          match = _this$props3.match,\n          updatePortfolioMapDepartment = _this$props3.updatePortfolioMapDepartment;\n      var userDeptId = utils.user.department.getDefault(user);\n      var departments = this.getDepartments(parent.placements, selectedYear);\n      var offices = this.getOffices(parent.placements, parent.offices, departments.map(function (d) {\n        return d.id;\n      }));\n      var urlParamsOfficeIds = this.getUrlParamsOfficeIds();\n      var params = match && get(match, 'params'); // departments\n\n      if (utils.generic.isValidArray(departments, true)) {\n        var defaultDept = departments.find(function (d) {\n          return d.id === userDeptId;\n        });\n        var newSelectedDepartments = defaultDept && defaultDept.id ? [defaultDept.id] : departments.map(function (d) {\n          return d.id;\n        });\n        var cardDepartments = this.getDepartmentsList(parent.placements, selectedYear, true);\n        var cardDepartmentsWithSelection = newSelectedDepartments.length ? cardDepartments.map(function (dep) {\n          return dep.rawId === newSelectedDepartments[0] ? _objectSpread(_objectSpread({}, dep), {}, {\n            active: true\n          }) : dep;\n        }) : cardDepartments;\n        updatePortfolioMapDepartment(cardDepartmentsWithSelection);\n        this.setState({\n          selectedDepartments: newSelectedDepartments\n        });\n      } // offices\n\n\n      if (utils.generic.isValidArray(offices, true)) {\n        var defaultOfficesFromUrlParams = offices.filter(function (o) {\n          return urlParamsOfficeIds.includes(o.id);\n        });\n        var newSelectedOffices = utils.generic.isValidArray(defaultOfficesFromUrlParams, true) ? defaultOfficesFromUrlParams.map(function (o) {\n          return o.id;\n        }) : offices.map(function (o) {\n          return o.id;\n        });\n        this.setState({\n          selectedOffices: newSelectedOffices\n        });\n      } // redirect to shorter URL if requested office doesn't exist\n\n\n      if (utils.generic.isValidArray(urlParamsOfficeIds, true) && !offices.some(function (o) {\n        return urlParamsOfficeIds.includes(o.id);\n      })) {\n        if (params && params.id && params.slug) {\n          history.replace(\"\".concat(config.routes.client.item, \"/\").concat(params.id, \"/\").concat(params.slug));\n        } else {\n          history.replace(\"\".concat(config.routes.client.item));\n        }\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _this2 = this;\n\n      var _this$state3 = this.state,\n          years = _this$state3.years,\n          selectedYear = _this$state3.selectedYear;\n      var _this$props4 = this.props,\n          type = _this$props4.type,\n          showByMarket = _this$props4.showByMarket,\n          showByYear = _this$props4.showByYear,\n          showOfficeSelection = _this$props4.showOfficeSelection,\n          pageIcon = _this$props4.pageIcon,\n          pageTitle = _this$props4.pageTitle,\n          parent = _this$props4.parent,\n          tabletUp = _this$props4.tabletUp,\n          theme = _this$props4.theme,\n          classes = _this$props4.classes; // abort\n\n      if (!parent.selected) return null;\n      var headerLogo = utils.client.parent.getLogoFilePath(parent.selected);\n      var parentName = parent.selected ? parent.selected.name : '';\n      var hasMultipleItems = parent.list.length > 1;\n      var stickyParent = tabletUp ? utils.app.getElement('#content') : null;\n      var stickyOffset = tabletUp ? 0 : theme.mixins.header.height;\n      var filteredOffices = this.getOffices(parent.placements, parent.offices);\n      var filteredPlacements = this.filterPlacements(parent.placements, filteredOffices);\n      var departmentsList = this.getDepartmentsList(parent.placements, selectedYear);\n      var officesList = this.getOfficesList(filteredOffices);\n      var usersList = this.getUsers(filteredOffices);\n\n      var Select = /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"\".concat(type, \"-select\"),\n        text: parentName,\n        size: \"small\",\n        offset: true,\n        icon: ArrowDropDownIcon,\n        iconPosition: \"right\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        items: parent.list.map(function (parent) {\n          return {\n            id: parent.id,\n            label: parent.name,\n            callback: _this2.handleClickChangeParent(parent)\n          };\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 384,\n        columnNumber: 7\n      }, this);\n\n      var yearSelect = /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"year-select\",\n        text: selectedYear.toString() || '-',\n        size: \"small\",\n        offset: true,\n        icon: ArrowDropDownIcon,\n        iconPosition: \"right\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        items: years.map(function (year) {\n          return {\n            id: year,\n            label: year.toString(),\n            callback: _this2.handleClickChangeYear(year)\n          };\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 406,\n        columnNumber: 7\n      }, this);\n\n      var usersContent = usersList && usersList.length > 0 && /*#__PURE__*/_jsxDEV(AvatarGroup, {\n        users: usersList,\n        max: 4,\n        nestedClasses: {\n          root: classes.avatars\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 428,\n        columnNumber: 7\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: pageTitle,\n          icon: pageIcon,\n          testid: \"\".concat(type, \"-chart-section-header\"),\n          nestedClasses: {\n            root: classes.header\n          },\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: MapIcon,\n            size: \"medium\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"portfolio.title\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 437,\n              columnNumber: 19\n            }, this),\n            variant: \"contained\",\n            color: \"secondary\",\n            onClick: this.handleViewPortfolio,\n            \"data-testid\": \"view-portfolio\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 434,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 433,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(PageHeader, {\n          logo: headerLogo,\n          items: [{\n            icon: pageIcon,\n            title: utils.string.t(\"app.\".concat(type)),\n            content: hasMultipleItems ? Select : /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"textSecondary\",\n              className: classes.parentName,\n              children: parentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 453,\n              columnNumber: 17\n            }, this)\n          }, {\n            icon: EventAvailableIcon,\n            title: utils.string.t('app.year'),\n            content: yearSelect\n          }, {\n            icon: PeopleIcon,\n            title: utils.string.t('app.users'),\n            content: usersContent\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 444,\n          columnNumber: 9\n        }, this), parent.placements && parent.placements.length > 0 && /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Sticky, {\n            top: stickyOffset,\n            parent: stickyParent,\n            nestedClasses: {\n              root: classes.sticky\n            },\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.filterGroup,\n              children: [utils.generic.isValidArray(departmentsList, true) && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.filter,\n                children: /*#__PURE__*/_jsxDEV(CardList, {\n                  title: \"Departments\",\n                  data: departmentsList,\n                  nestedClasses: {\n                    card: classes.card\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 477,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 476,\n                columnNumber: 19\n              }, this), utils.generic.isValidArray(officesList, true) && showOfficeSelection && /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.filter,\n                children: /*#__PURE__*/_jsxDEV(CardList, {\n                  title: \"Offices\",\n                  data: officesList,\n                  nestedClasses: {\n                    card: classes.card\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 482,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 481,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 474,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 473,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.content,\n            children: [/*#__PURE__*/_jsxDEV(ChartPremiumByAccount, {\n              placements: filteredPlacements,\n              year: selectedYear,\n              offices: filteredOffices\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 489,\n              columnNumber: 15\n            }, this), showByMarket && /*#__PURE__*/_jsxDEV(ChartPremiumByMarket, {\n              placements: filteredPlacements,\n              year: selectedYear,\n              offices: filteredOffices\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 490,\n              columnNumber: 32\n            }, this), showByYear && /*#__PURE__*/_jsxDEV(ChartPremiumByYear, {\n              placements: filteredPlacements\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 491,\n              columnNumber: 30\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 488,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 472,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 432,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return ClientCharts;\n}(PureComponent);\nClientCharts.propTypes = {\n  type: PropTypes.oneOf(['client', 'market'])\n};\nClientCharts.defaultProps = {\n  showByMarket: true,\n  showByYear: true,\n  showOfficeSelection: true\n};\nexport default compose(withRouter, connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withThemeListener, withTheme)(ClientCharts);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClientCharts/ClientCharts.js"],"names":["React","PureComponent","Fragment","PropTypes","connect","compose","withRouter","firstBy","kebabCase","toNumber","flatten","isEmpty","uniqBy","range","pick","xor","get","styles","updatePortfolioMapDepartment","resetPortfolioMap","AvatarGroup","CardList","PageHeader","PopoverMenu","Sticky","Button","Translate","SectionHeader","ChartPremiumByAccount","ChartPremiumByMarket","ChartPremiumByYear","PortfolioMapHeader","showModal","withThemeListener","utils","config","withStyles","withTheme","Typography","PeopleIcon","EventAvailableIcon","ArrowDropDownIcon","MapIcon","mapStateToProps","state","user","referenceDataCurrencies","referenceData","currencies","referenceDataDepartments","departments","filteredDepartments","portfolioMap","tiv","mapDispatchToProps","ClientCharts","props","getUrlParamsOfficeIds","officeIds","offices","split","map","o","getDepartments","placements","placementsYear","selectedDepartments","reduce","list","placement","year","getYear","isValid","deptId","departmentId","deptName","getDepartmentName","premiumByCurrency","getPremiumBySettlementCurrency","isNew","some","item","id","name","active","includes","dept","mergePremiumsByCurrency","sort","getDepartmentsList","selectedYear","filterEmpty","rawId","title","children","premiumsByCurrency","onClick","handleClickFilter","filter","dep","depVal","generic","isValidArray","length","classes","Object","keys","currency","string","t","value","number","default","getOffices","customSelectedDepartments","selectedOffices","defaultOffices","office","hasPremiums","Boolean","isWithinDepartments","clients","forEach","client","officeId","isClientInOffice","c","listObj","isPlacementAlreadyIn","thenBy","array","getOfficesList","getUsers","users","acc","cobrokers","Array","isArray","filterPlacements","isInvalidOrEmptyArray","activeOffices","activeOfficeClients","placementClients","isWithinOffices","p","type","event","selectedCardDepartments","setState","handleClickChangeParent","parent","officeSlug","history","push","routes","handleClickChangeYear","handleViewPortfolio","logo","getLogoFilePath","selected","component","fullWidth","fullScreen","titleChildren","disableAutoFocus","componentProps","currentYear","app","getCurrentYear","years","match","userDeptId","department","getDefault","d","urlParamsOfficeIds","params","defaultDept","find","newSelectedDepartments","cardDepartments","cardDepartmentsWithSelection","defaultOfficesFromUrlParams","newSelectedOffices","slug","replace","showByMarket","showByYear","showOfficeSelection","pageIcon","pageTitle","tabletUp","theme","headerLogo","parentName","hasMultipleItems","stickyParent","getElement","stickyOffset","mixins","header","height","filteredOffices","filteredPlacements","departmentsList","officesList","usersList","Select","vertical","horizontal","label","callback","yearSelect","toString","usersContent","root","avatars","icon","content","sticky","filterGroup","card","propTypes","oneOf","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport { withRouter } from 'react-router';\r\nimport { firstBy } from 'thenby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport toNumber from 'lodash/toNumber';\r\nimport flatten from 'lodash/flatten';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport range from 'lodash/range';\r\nimport pick from 'lodash/pick';\r\nimport xor from 'lodash/xor';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ClientCharts.styles';\r\nimport { updatePortfolioMapDepartment, resetPortfolioMap } from 'stores';\r\nimport { AvatarGroup, CardList, PageHeader, PopoverMenu, Sticky, Button, Translate, SectionHeader } from 'components';\r\nimport { ChartPremiumByAccount, ChartPremiumByMarket, ChartPremiumByYear, PortfolioMapHeader } from 'modules';\r\nimport { showModal } from 'stores';\r\nimport { withThemeListener } from 'hoc';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { withStyles, withTheme, Typography } from '@material-ui/core';\r\nimport PeopleIcon from '@material-ui/icons/People';\r\nimport EventAvailableIcon from '@material-ui/icons/EventAvailable';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\nimport MapIcon from '@material-ui/icons/Map';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  user: state.user,\r\n  referenceDataCurrencies: state.referenceData.currencies,\r\n  referenceDataDepartments: state.referenceData.departments,\r\n  filteredDepartments: state.portfolioMap.tiv.filteredDepartments,\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  showModal,\r\n  updatePortfolioMapDepartment,\r\n  resetPortfolioMap,\r\n};\r\n\r\nexport class ClientCharts extends PureComponent {\r\n  constructor(props) {\r\n    super(props);\r\n\r\n    const currentYear = utils.app.getCurrentYear();\r\n\r\n    this.state = {\r\n      years: range(currentYear, 2018), // 2018 won't be included in the range, 2019 will therefore be the last\r\n      selectedYear: currentYear,\r\n      selectedDepartments: [],\r\n      selectedOffices: [],\r\n    };\r\n  }\r\n\r\n  static propTypes = {\r\n    type: PropTypes.oneOf(['client', 'market']),\r\n  };\r\n\r\n  static defaultProps = {\r\n    showByMarket: true,\r\n    showByYear: true,\r\n    showOfficeSelection: true,\r\n  };\r\n\r\n  getUrlParamsOfficeIds = () => {\r\n    const officeIds = get(this.props, 'match.params.officeIds');\r\n\r\n    // abort\r\n    if (!officeIds) return [];\r\n\r\n    const offices = officeIds.split('-') || [];\r\n\r\n    return offices.map((o) => toNumber(o));\r\n  };\r\n\r\n  getDepartments = (placements, placementsYear) => {\r\n    const { selectedDepartments } = this.state;\r\n    const { referenceDataDepartments } = this.props;\r\n\r\n    return placements\r\n      .reduce((list, placement) => {\r\n        const year = utils.placement.getYear(placement);\r\n        const isValid = year === placementsYear;\r\n\r\n        // Only keep placements for defined year\r\n        if (!isValid) return list;\r\n\r\n        const deptId = placement.departmentId;\r\n        const deptName = utils.placement.getDepartmentName(placement, referenceDataDepartments);\r\n        const premiumByCurrency = utils.placement.getPremiumBySettlementCurrency(placement, true, true);\r\n        const isNew = !list.some((item) => item.id === deptId);\r\n\r\n        return isNew\r\n          ? [\r\n              ...list,\r\n              {\r\n                id: deptId,\r\n                name: deptName,\r\n                premiumByCurrency,\r\n                active: selectedDepartments.includes(deptId),\r\n              },\r\n            ]\r\n          : list.map((dept) => {\r\n              if (dept.id === deptId) {\r\n                return {\r\n                  ...dept,\r\n                  premiumByCurrency: utils.placement.mergePremiumsByCurrency(dept.premiumByCurrency, premiumByCurrency),\r\n                };\r\n              }\r\n\r\n              return dept;\r\n            });\r\n      }, [])\r\n      .sort(firstBy('premiumByCurrency', -1));\r\n  };\r\n\r\n  getDepartmentsList = (placements, selectedYear, filterEmpty = false) => {\r\n    const departments = this.getDepartments(placements, selectedYear).map((dept) => {\r\n      return {\r\n        id: `${dept.id}-${dept.name}`,\r\n        rawId: dept.id,\r\n        title: dept.name || '-',\r\n        children: this.premiumsByCurrency(dept.premiumByCurrency),\r\n        active: dept.active,\r\n        onClick: this.handleClickFilter('departments', dept.id),\r\n      };\r\n    });\r\n    return filterEmpty\r\n      ? departments.filter(\r\n          (dep) =>\r\n            flatten(dep.children.props.children.filter((depVal) => utils.generic.isValidArray(depVal))).filter((dep) => !!dep).length > 0\r\n        )\r\n      : departments;\r\n  };\r\n\r\n  premiumsByCurrency = (premiumByCurrency) => {\r\n    const { classes } = this.props;\r\n    return (\r\n      <ul className={classes.premiumByCurrency}>\r\n        {isEmpty(premiumByCurrency) && <li>0</li>}\r\n        {Object.keys(premiumByCurrency).map((currency) => (\r\n          <li key={currency}>\r\n            {utils.string.t('format.currency', { value: { number: premiumByCurrency[currency], currency, default: '-' } })}\r\n          </li>\r\n        ))}\r\n      </ul>\r\n    );\r\n  };\r\n\r\n  getOffices = (placements, offices = [], customSelectedDepartments) => {\r\n    const { selectedDepartments, selectedOffices } = this.state;\r\n\r\n    const defaultOffices = offices.map((office) => {\r\n      return {\r\n        ...pick(office, ['id', 'name', 'clients', 'cobrokers']),\r\n        active: selectedOffices.includes(office.id),\r\n        placements: [],\r\n        premiumByCurrency: {},\r\n      };\r\n    });\r\n\r\n    return placements\r\n      .reduce((list, placement) => {\r\n        const year = utils.placement.getYear(placement);\r\n        const isValid = year === this.state.selectedYear;\r\n\r\n        // Only keep placements for defined year\r\n        if (!isValid) return list;\r\n\r\n        const premiumByCurrency = utils.placement.getPremiumBySettlementCurrency(placement, true, true);\r\n\r\n        const hasPremiums = Boolean(premiumByCurrency);\r\n        const isWithinDepartments = customSelectedDepartments\r\n          ? customSelectedDepartments.includes(placement.departmentId)\r\n          : selectedDepartments.includes(placement.departmentId);\r\n\r\n        if (hasPremiums && isWithinDepartments) {\r\n          placement.clients.forEach((client) => {\r\n            offices.forEach((office) => {\r\n              const officeId = office.id;\r\n              const isClientInOffice = office.clients.some((c) => c.id === client.id);\r\n              if (isClientInOffice) {\r\n                list = list.map((listObj) => {\r\n                  if (listObj.id === officeId) {\r\n                    const isPlacementAlreadyIn = listObj.placements.includes(placement.id);\r\n\r\n                    if (!isPlacementAlreadyIn) {\r\n                      return {\r\n                        ...listObj,\r\n                        premiumByCurrency: utils.placement.mergePremiumsByCurrency(listObj.premiumByCurrency, premiumByCurrency),\r\n                        placements: [...listObj.placements, placement.id],\r\n                      };\r\n                    }\r\n                  }\r\n\r\n                  return listObj;\r\n                });\r\n              }\r\n            });\r\n          });\r\n        }\r\n\r\n        return list;\r\n      }, defaultOffices)\r\n      .filter((o) => {\r\n        return Object.keys(o.premiumByCurrency).length > 0;\r\n      })\r\n      .sort(firstBy('premiumByCurrency', -1).thenBy(utils.sort.array('lexical', 'name')));\r\n  };\r\n\r\n  getOfficesList = (offices) => {\r\n    return offices.map((o) => {\r\n      return {\r\n        id: `${o.id}-${o.name}`,\r\n        title: o.name || '-',\r\n        children: this.premiumsByCurrency(o.premiumByCurrency),\r\n        active: o.active,\r\n        onClick: this.handleClickFilter('offices', o.id),\r\n      };\r\n    });\r\n  };\r\n\r\n  getUsers = (offices) => {\r\n    const users = offices.reduce((acc, office) => {\r\n      if (!office.active || !office.cobrokers || !Array.isArray(office.cobrokers)) return acc;\r\n\r\n      return [...acc, ...office.cobrokers];\r\n    }, []);\r\n\r\n    return uniqBy(users, 'id');\r\n  };\r\n\r\n  filterPlacements = (placements, offices) => {\r\n    const { selectedDepartments, selectedOffices } = this.state;\r\n\r\n    // abort\r\n    if (utils.generic.isInvalidOrEmptyArray(placements) || utils.generic.isInvalidOrEmptyArray(offices)) return [];\r\n\r\n    const activeOffices = offices.filter((o) => selectedOffices.includes(o.id));\r\n    const activeOfficeClients = uniqBy(flatten(activeOffices.map((office) => office.clients)), 'id') || [];\r\n\r\n    // only keep placement within the selected departments/offices\r\n    return placements.filter((placement) => {\r\n      const placementClients = placement.clients || [];\r\n      const isWithinDepartments = selectedDepartments.includes(placement.departmentId);\r\n      const isWithinOffices = placementClients.some((p) => activeOfficeClients.some((c) => c.id === p.id));\r\n\r\n      return isWithinDepartments && isWithinOffices;\r\n    });\r\n  };\r\n\r\n  handleClickFilter = (type, id) => (event) => {\r\n    const { updatePortfolioMapDepartment, filteredDepartments } = this.props;\r\n\r\n    switch (type) {\r\n      case 'departments':\r\n        const selectedDepartments = xor(this.state.selectedDepartments, [id]);\r\n        const selectedCardDepartments = filteredDepartments.map((dep) => (dep.rawId === id ? { ...dep, active: !dep.active } : dep));\r\n        updatePortfolioMapDepartment(selectedCardDepartments);\r\n        this.setState({ selectedDepartments });\r\n        break;\r\n      case 'offices':\r\n        this.setState({\r\n          selectedOffices: xor(this.state.selectedOffices, [id]),\r\n        });\r\n        break;\r\n      default:\r\n        break;\r\n    }\r\n  };\r\n\r\n  handleClickChangeParent = (parent) => (event) => {\r\n    const { type } = this.props;\r\n    const officeId = parent && parent.id;\r\n    const officeSlug = parent && parent.name ? `/${kebabCase(parent.name)}` : '';\r\n\r\n    this.props.history.push(`${config.routes[type].item}/${officeId}${officeSlug}`);\r\n  };\r\n\r\n  handleClickChangeYear = (year) => (event) => {\r\n    this.setState({ selectedYear: year });\r\n  };\r\n\r\n  componentWillUnmount() {\r\n    const { resetPortfolioMap } = this.props;\r\n    resetPortfolioMap();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { selectedYear } = this.state;\r\n    const { user, parent, history, match, updatePortfolioMapDepartment } = this.props;\r\n\r\n    const userDeptId = utils.user.department.getDefault(user);\r\n    const departments = this.getDepartments(parent.placements, selectedYear);\r\n    const offices = this.getOffices(\r\n      parent.placements,\r\n      parent.offices,\r\n      departments.map((d) => d.id)\r\n    );\r\n    const urlParamsOfficeIds = this.getUrlParamsOfficeIds();\r\n    const params = match && get(match, 'params');\r\n\r\n    // departments\r\n    if (utils.generic.isValidArray(departments, true)) {\r\n      const defaultDept = departments.find((d) => d.id === userDeptId);\r\n      const newSelectedDepartments = defaultDept && defaultDept.id ? [defaultDept.id] : departments.map((d) => d.id);\r\n      const cardDepartments = this.getDepartmentsList(parent.placements, selectedYear, true);\r\n      const cardDepartmentsWithSelection = newSelectedDepartments.length\r\n        ? cardDepartments.map((dep) => (dep.rawId === newSelectedDepartments[0] ? { ...dep, active: true } : dep))\r\n        : cardDepartments;\r\n\r\n      updatePortfolioMapDepartment(cardDepartmentsWithSelection);\r\n\r\n      this.setState({ selectedDepartments: newSelectedDepartments });\r\n    }\r\n\r\n    // offices\r\n    if (utils.generic.isValidArray(offices, true)) {\r\n      const defaultOfficesFromUrlParams = offices.filter((o) => urlParamsOfficeIds.includes(o.id));\r\n      const newSelectedOffices = utils.generic.isValidArray(defaultOfficesFromUrlParams, true)\r\n        ? defaultOfficesFromUrlParams.map((o) => o.id)\r\n        : offices.map((o) => o.id);\r\n\r\n      this.setState({ selectedOffices: newSelectedOffices });\r\n    }\r\n\r\n    // redirect to shorter URL if requested office doesn't exist\r\n    if (utils.generic.isValidArray(urlParamsOfficeIds, true) && !offices.some((o) => urlParamsOfficeIds.includes(o.id))) {\r\n      if (params && params.id && params.slug) {\r\n        history.replace(`${config.routes.client.item}/${params.id}/${params.slug}`);\r\n      } else {\r\n        history.replace(`${config.routes.client.item}`);\r\n      }\r\n    }\r\n  }\r\n\r\n  handleViewPortfolio = () => {\r\n    const { parent, showModal, type } = this.props;\r\n    const logo = utils.client.parent.getLogoFilePath(parent.selected);\r\n\r\n    showModal({\r\n      component: 'PORTFOLIO_MAP',\r\n      props: {\r\n        fullWidth: true,\r\n        fullScreen: true,\r\n        titleChildren: <PortfolioMapHeader logo={logo} title={`portfolio.title_${type}`} />,\r\n        disableAutoFocus: true,\r\n        componentProps: {\r\n          parent,\r\n        },\r\n      },\r\n    });\r\n  };\r\n\r\n  render() {\r\n    const { years, selectedYear } = this.state;\r\n    const { type, showByMarket, showByYear, showOfficeSelection, pageIcon, pageTitle, parent, tabletUp, theme, classes } = this.props;\r\n\r\n    // abort\r\n    if (!parent.selected) return null;\r\n\r\n    const headerLogo = utils.client.parent.getLogoFilePath(parent.selected);\r\n    const parentName = parent.selected ? parent.selected.name : '';\r\n    const hasMultipleItems = parent.list.length > 1;\r\n    const stickyParent = tabletUp ? utils.app.getElement('#content') : null;\r\n    const stickyOffset = tabletUp ? 0 : theme.mixins.header.height;\r\n\r\n    const filteredOffices = this.getOffices(parent.placements, parent.offices);\r\n    const filteredPlacements = this.filterPlacements(parent.placements, filteredOffices);\r\n\r\n    const departmentsList = this.getDepartmentsList(parent.placements, selectedYear);\r\n    const officesList = this.getOfficesList(filteredOffices);\r\n    const usersList = this.getUsers(filteredOffices);\r\n\r\n    const Select = (\r\n      <PopoverMenu\r\n        id={`${type}-select`}\r\n        text={parentName}\r\n        size=\"small\"\r\n        offset\r\n        icon={ArrowDropDownIcon}\r\n        iconPosition=\"right\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        items={parent.list.map((parent) => {\r\n          return {\r\n            id: parent.id,\r\n            label: parent.name,\r\n            callback: this.handleClickChangeParent(parent),\r\n          };\r\n        })}\r\n      />\r\n    );\r\n\r\n    const yearSelect = (\r\n      <PopoverMenu\r\n        id=\"year-select\"\r\n        text={selectedYear.toString() || '-'}\r\n        size=\"small\"\r\n        offset\r\n        icon={ArrowDropDownIcon}\r\n        iconPosition=\"right\"\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'left',\r\n        }}\r\n        items={years.map((year) => {\r\n          return {\r\n            id: year,\r\n            label: year.toString(),\r\n            callback: this.handleClickChangeYear(year),\r\n          };\r\n        })}\r\n      />\r\n    );\r\n\r\n    const usersContent = usersList && usersList.length > 0 && (\r\n      <AvatarGroup users={usersList} max={4} nestedClasses={{ root: classes.avatars }} />\r\n    );\r\n\r\n    return (\r\n      <Fragment>\r\n        <SectionHeader title={pageTitle} icon={pageIcon} testid={`${type}-chart-section-header`} nestedClasses={{ root: classes.header }}>\r\n          <Button\r\n            icon={MapIcon}\r\n            size=\"medium\"\r\n            text={<Translate label=\"portfolio.title\" />}\r\n            variant=\"contained\"\r\n            color=\"secondary\"\r\n            onClick={this.handleViewPortfolio}\r\n            data-testid=\"view-portfolio\"\r\n          />\r\n        </SectionHeader>\r\n        <PageHeader\r\n          logo={headerLogo}\r\n          items={[\r\n            {\r\n              icon: pageIcon,\r\n              title: utils.string.t(`app.${type}`),\r\n              content: hasMultipleItems ? (\r\n                Select\r\n              ) : (\r\n                <Typography variant=\"body2\" color=\"textSecondary\" className={classes.parentName}>\r\n                  {parentName}\r\n                </Typography>\r\n              ),\r\n            },\r\n            {\r\n              icon: EventAvailableIcon,\r\n              title: utils.string.t('app.year'),\r\n              content: yearSelect,\r\n            },\r\n            {\r\n              icon: PeopleIcon,\r\n              title: utils.string.t('app.users'),\r\n              content: usersContent,\r\n            },\r\n          ]}\r\n        />\r\n\r\n        {parent.placements && parent.placements.length > 0 && (\r\n          <Fragment>\r\n            <Sticky top={stickyOffset} parent={stickyParent} nestedClasses={{ root: classes.sticky }}>\r\n              <div className={classes.filterGroup}>\r\n                {utils.generic.isValidArray(departmentsList, true) && (\r\n                  <div className={classes.filter}>\r\n                    <CardList title=\"Departments\" data={departmentsList} nestedClasses={{ card: classes.card }} />\r\n                  </div>\r\n                )}\r\n                {utils.generic.isValidArray(officesList, true) && showOfficeSelection && (\r\n                  <div className={classes.filter}>\r\n                    <CardList title=\"Offices\" data={officesList} nestedClasses={{ card: classes.card }} />\r\n                  </div>\r\n                )}\r\n              </div>\r\n            </Sticky>\r\n\r\n            <div className={classes.content}>\r\n              <ChartPremiumByAccount placements={filteredPlacements} year={selectedYear} offices={filteredOffices} />\r\n              {showByMarket && <ChartPremiumByMarket placements={filteredPlacements} year={selectedYear} offices={filteredOffices} />}\r\n              {showByYear && <ChartPremiumByYear placements={filteredPlacements} />}\r\n            </div>\r\n          </Fragment>\r\n        )}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(\r\n  withRouter,\r\n  connect(mapStateToProps, mapDispatchToProps),\r\n  withStyles(styles),\r\n  withThemeListener,\r\n  withTheme\r\n)(ClientCharts);\r\n"]},"metadata":{},"sourceType":"module"}