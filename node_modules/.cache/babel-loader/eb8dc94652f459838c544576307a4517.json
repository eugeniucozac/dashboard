{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RfiResponseDms\\\\RfiResponseDms.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport merge from 'lodash/merge';\nimport { useDispatch } from 'react-redux'; //app\n\nimport { RfiResponseDmsView } from './RfiResponseDms.view';\nimport { setDmsTaskContextType } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRfiResponseDms.propTypes = {\n  task: PropTypes.object.isRequired,\n  taskResponse: PropTypes.object,\n  defaultState: PropTypes.bool,\n  viewOptions: PropTypes.shape({\n    disabled: PropTypes.bool,\n    upload: PropTypes.bool,\n    search: PropTypes.bool,\n    unlink: PropTypes.bool,\n    delete: PropTypes.bool,\n    readOnly: PropTypes.bool\n  }).isRequired\n};\nexport default function RfiResponseDms(_ref) {\n  _s();\n\n  var task = _ref.task,\n      taskResponse = _ref.taskResponse,\n      defaultState = _ref.defaultState,\n      viewOptions = _ref.viewOptions;\n  var dispatch = useDispatch();\n\n  var _useState = useState(defaultState || false),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var viewOptionsMerged = merge({\n    disabled: false,\n    upload: false,\n    search: true,\n    unlink: false,\n    delete: false,\n    readOnly: false\n  }, viewOptions);\n\n  var toggleDmsSection = function toggleDmsSection() {\n    setExpanded(!expanded);\n\n    if (!expanded && (viewOptions === null || viewOptions === void 0 ? void 0 : viewOptions.readOnly) && utils.generic.isValidObject(taskResponse, 'caseIncidentNotesID')) {\n      dispatch(setDmsTaskContextType({\n        caseIncidentID: taskResponse === null || taskResponse === void 0 ? void 0 : taskResponse.caseIncidentID,\n        caseIncidentNotesID: taskResponse === null || taskResponse === void 0 ? void 0 : taskResponse.caseIncidentNotesID\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(RfiResponseDmsView, {\n    task: task,\n    expanded: expanded,\n    toggleDmsSection: toggleDmsSection,\n    viewOptions: viewOptionsMerged\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 10\n  }, this);\n}\n\n_s(RfiResponseDms, \"OIPgaJh6R2Nmj3F/s2gZhAywyCE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = RfiResponseDms;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiResponseDms\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RfiResponseDms/RfiResponseDms.js"],"names":["React","useState","PropTypes","merge","useDispatch","RfiResponseDmsView","setDmsTaskContextType","utils","RfiResponseDms","propTypes","task","object","isRequired","taskResponse","defaultState","bool","viewOptions","shape","disabled","upload","search","unlink","delete","readOnly","dispatch","expanded","setExpanded","viewOptionsMerged","toggleDmsSection","generic","isValidObject","caseIncidentID","caseIncidentNotesID"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,KAAP,MAAkB,cAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,qBAAT,QAAsC,QAAtC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,IAAI,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADE;AAEzBC,EAAAA,YAAY,EAAEX,SAAS,CAACS,MAFC;AAGzBG,EAAAA,YAAY,EAAEZ,SAAS,CAACa,IAHC;AAIzBC,EAAAA,WAAW,EAAEd,SAAS,CAACe,KAAV,CAAgB;AAC3BC,IAAAA,QAAQ,EAAEhB,SAAS,CAACa,IADO;AAE3BI,IAAAA,MAAM,EAAEjB,SAAS,CAACa,IAFS;AAG3BK,IAAAA,MAAM,EAAElB,SAAS,CAACa,IAHS;AAI3BM,IAAAA,MAAM,EAAEnB,SAAS,CAACa,IAJS;AAK3BO,IAAAA,MAAM,EAAEpB,SAAS,CAACa,IALS;AAM3BQ,IAAAA,QAAQ,EAAErB,SAAS,CAACa;AANO,GAAhB,EAOVH;AAXsB,CAA3B;AAaA,eAAe,SAASJ,cAAT,OAA2E;AAAA;;AAAA,MAAjDE,IAAiD,QAAjDA,IAAiD;AAAA,MAA3CG,YAA2C,QAA3CA,YAA2C;AAAA,MAA7BC,YAA6B,QAA7BA,YAA6B;AAAA,MAAfE,WAAe,QAAfA,WAAe;AACxF,MAAMQ,QAAQ,GAAGpB,WAAW,EAA5B;;AADwF,kBAGxDH,QAAQ,CAACa,YAAY,IAAI,KAAjB,CAHgD;AAAA;AAAA,MAGjFW,QAHiF;AAAA,MAGvEC,WAHuE;;AAKxF,MAAMC,iBAAiB,GAAGxB,KAAK,CAC7B;AACEe,IAAAA,QAAQ,EAAE,KADZ;AAEEC,IAAAA,MAAM,EAAE,KAFV;AAGEC,IAAAA,MAAM,EAAE,IAHV;AAIEC,IAAAA,MAAM,EAAE,KAJV;AAKEC,IAAAA,MAAM,EAAE,KALV;AAMEC,IAAAA,QAAQ,EAAE;AANZ,GAD6B,EAS7BP,WAT6B,CAA/B;;AAYA,MAAMY,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BF,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;;AACA,QAAI,CAACA,QAAD,KAAaT,WAAb,aAAaA,WAAb,uBAAaA,WAAW,CAAEO,QAA1B,KAAsChB,KAAK,CAACsB,OAAN,CAAcC,aAAd,CAA4BjB,YAA5B,EAA0C,qBAA1C,CAA1C,EAA4G;AAC1GW,MAAAA,QAAQ,CACNlB,qBAAqB,CAAC;AACpByB,QAAAA,cAAc,EAAElB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEkB,cADV;AAEpBC,QAAAA,mBAAmB,EAAEnB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEmB;AAFf,OAAD,CADf,CAAR;AAMD;AACF,GAVD;;AAYA,sBAAO,QAAC,kBAAD;AAAoB,IAAA,IAAI,EAAEtB,IAA1B;AAAgC,IAAA,QAAQ,EAAEe,QAA1C;AAAoD,IAAA,gBAAgB,EAAEG,gBAAtE;AAAwF,IAAA,WAAW,EAAED;AAArG;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA9BuBnB,c;UACLJ,W;;;KADKI,c","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport merge from 'lodash/merge';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//app\r\nimport { RfiResponseDmsView } from './RfiResponseDms.view';\r\nimport { setDmsTaskContextType } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nRfiResponseDms.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  taskResponse: PropTypes.object,\r\n  defaultState: PropTypes.bool,\r\n  viewOptions: PropTypes.shape({\r\n    disabled: PropTypes.bool,\r\n    upload: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    unlink: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n    readOnly: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\nexport default function RfiResponseDms({ task, taskResponse, defaultState, viewOptions }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [expanded, setExpanded] = useState(defaultState || false);\r\n\r\n  const viewOptionsMerged = merge(\r\n    {\r\n      disabled: false,\r\n      upload: false,\r\n      search: true,\r\n      unlink: false,\r\n      delete: false,\r\n      readOnly: false,\r\n    },\r\n    viewOptions\r\n  );\r\n\r\n  const toggleDmsSection = () => {\r\n    setExpanded(!expanded);\r\n    if (!expanded && viewOptions?.readOnly && utils.generic.isValidObject(taskResponse, 'caseIncidentNotesID')) {\r\n      dispatch(\r\n        setDmsTaskContextType({\r\n          caseIncidentID: taskResponse?.caseIncidentID,\r\n          caseIncidentNotesID: taskResponse?.caseIncidentNotesID,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return <RfiResponseDmsView task={task} expanded={expanded} toggleDmsSection={toggleDmsSection} viewOptions={viewOptionsMerged} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}