{"ast":null,"code":"import { createSelector } from 'reselect';\nimport get from 'lodash/get';\nimport * as utils from 'utils'; // private\n\nvar _refDataDepartments = function _refDataDepartments(state) {\n  return get(state, 'referenceData.departments') || [];\n}; // public\n\n\nexport var selectPlacement = function selectPlacement(state) {\n  return get(state, 'placement.selected');\n};\nexport var selectPlacementId = function selectPlacementId(state) {\n  return get(state, 'placement.selected.id');\n};\nexport var selectPlacementLayers = function selectPlacementLayers(state) {\n  return get(state, 'placement.selected.layers');\n};\nexport var selectPlacementMarkets = function selectPlacementMarkets(state) {\n  return get(state, 'placement.selectedMarkets');\n};\nexport var selectPlacementDepartmentId = function selectPlacementDepartmentId(state) {\n  return get(state, 'placement.selected.departmentId');\n};\nexport var selectPlacementConfig = function selectPlacementConfig(state) {\n  return get(state, 'placement.selected.config');\n};\nexport var selectPlacementBulkType = function selectPlacementBulkType(state) {\n  return get(state, 'placement.bulk.type');\n};\nexport var selectPlacementBulkItems = function selectPlacementBulkItems(state) {\n  return get(state, 'placement.bulk.items', []);\n};\nexport var selectPlacementBulkItemsLayers = function selectPlacementBulkItemsLayers(state) {\n  return get(state, 'placement.bulkItems.layers', []);\n};\nexport var selectPlacementBulkItemsMarkets = function selectPlacementBulkItemsMarkets(state) {\n  return get(state, 'placement.bulkItems.layerMarkets', []);\n};\nexport var selectPlacementList = function selectPlacementList(state) {\n  return get(state, 'placement.list');\n};\nexport var selectPlacementSort = function selectPlacementSort(state) {\n  return get(state, 'placement.sort');\n};\nexport var selectBulkToggleSelect = function selectBulkToggleSelect(state) {\n  return get(state, 'placement.showBulkSelect');\n};\nexport var selectBulkToggleSelectMarketingMarkets = function selectBulkToggleSelectMarketingMarkets(state) {\n  return get(state, 'placement.showBulkSelectMarketingMarkets');\n};\nexport var selectPlacementBulkItemsMarketingMarkets = function selectPlacementBulkItemsMarketingMarkets(state) {\n  return get(state, 'placement.bulkItemsMarketingMarkets.marketingMarkets', []);\n};\nexport var selectCalendarViewEdit = function selectCalendarViewEdit(state) {\n  return get(state, 'placement.calendarViewEdit');\n};\nexport var selectPlacementPolicies = createSelector(selectPlacement, function (placement) {\n  if (!placement || !typeof placement === 'object' || !Array.isArray(placement.policies)) return [];\n  return placement.policies;\n});\nexport var selectPlacementDepartmentName = createSelector(selectPlacement, _refDataDepartments, function (placement, departments) {\n  return utils.placement.getDepartmentName(placement, departments);\n});","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.selectors.js"],"names":["createSelector","get","utils","_refDataDepartments","state","selectPlacement","selectPlacementId","selectPlacementLayers","selectPlacementMarkets","selectPlacementDepartmentId","selectPlacementConfig","selectPlacementBulkType","selectPlacementBulkItems","selectPlacementBulkItemsLayers","selectPlacementBulkItemsMarkets","selectPlacementList","selectPlacementSort","selectBulkToggleSelect","selectBulkToggleSelectMarketingMarkets","selectPlacementBulkItemsMarketingMarkets","selectCalendarViewEdit","selectPlacementPolicies","placement","Array","isArray","policies","selectPlacementDepartmentName","departments","getDepartmentName"],"mappings":"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","sourcesContent":["import { createSelector } from 'reselect';\r\nimport get from 'lodash/get';\r\nimport * as utils from 'utils';\r\n\r\n// private\r\nconst _refDataDepartments = (state) => get(state, 'referenceData.departments') || [];\r\n\r\n// public\r\nexport const selectPlacement = (state) => get(state, 'placement.selected');\r\nexport const selectPlacementId = (state) => get(state, 'placement.selected.id');\r\nexport const selectPlacementLayers = (state) => get(state, 'placement.selected.layers');\r\nexport const selectPlacementMarkets = (state) => get(state, 'placement.selectedMarkets');\r\nexport const selectPlacementDepartmentId = (state) => get(state, 'placement.selected.departmentId');\r\nexport const selectPlacementConfig = (state) => get(state, 'placement.selected.config');\r\nexport const selectPlacementBulkType = (state) => get(state, 'placement.bulk.type');\r\nexport const selectPlacementBulkItems = (state) => get(state, 'placement.bulk.items', []);\r\nexport const selectPlacementBulkItemsLayers = (state) => get(state, 'placement.bulkItems.layers', []);\r\nexport const selectPlacementBulkItemsMarkets = (state) => get(state, 'placement.bulkItems.layerMarkets', []);\r\nexport const selectPlacementList = (state) => get(state, 'placement.list');\r\nexport const selectPlacementSort = (state) => get(state, 'placement.sort');\r\nexport const selectBulkToggleSelect = (state) => get(state, 'placement.showBulkSelect');\r\nexport const selectBulkToggleSelectMarketingMarkets = (state) => get(state, 'placement.showBulkSelectMarketingMarkets');\r\nexport const selectPlacementBulkItemsMarketingMarkets = (state) => get(state, 'placement.bulkItemsMarketingMarkets.marketingMarkets', []);\r\nexport const selectCalendarViewEdit = (state) => get(state, 'placement.calendarViewEdit');\r\n\r\nexport const selectPlacementPolicies = createSelector(selectPlacement, (placement) => {\r\n  if (!placement || !typeof placement === 'object' || !Array.isArray(placement.policies)) return [];\r\n  return placement.policies;\r\n});\r\n\r\nexport const selectPlacementDepartmentName = createSelector(selectPlacement, _refDataDepartments, (placement, departments) => {\r\n  return utils.placement.getDepartmentName(placement, departments);\r\n});\r\n"]},"metadata":{},"sourceType":"module"}