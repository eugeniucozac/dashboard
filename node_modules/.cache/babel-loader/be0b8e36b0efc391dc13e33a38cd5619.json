{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEnterLossInformation\\\\ClaimsEnterLossInformationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment'; // app\n\nimport styles from './ClaimsEnterLossInformation.styles';\nimport { ClaimsEnterLossInformationView } from './ClaimsEnterLossInformation.view';\nimport { selectLossInformation, selectUser, selectLossSelected } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEnterLossInformationForm.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired\n};\nexport function ClaimsEnterLossInformationForm(_ref) {\n  _s();\n\n  var formattedCatCodes = _ref.formattedCatCodes,\n      lossProperties = _ref.lossProperties,\n      props = _objectWithoutProperties(_ref, [\"formattedCatCodes\", \"lossProperties\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'ClaimsEnterLossInformation'\n  })();\n  var lossInformation = useSelector(selectLossInformation);\n  var loggedInUser = useSelector(selectUser);\n  var lossSelected = useSelector(selectLossSelected);\n  var hasLossRef = Boolean(lossInformation.lossRef);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isWarningShow = _useState2[0],\n      setIsWarningShow = _useState2[1];\n\n  var concatDateAndTime = function concatDateAndTime(contactDate, contactTime) {\n    var partDate = utils.string.t('format.date', {\n      value: {\n        date: contactDate || new Date(),\n        format: 'D MMM YYYY'\n      }\n    });\n    return utils.date.toISOString(partDate + ' ' + (contactTime ? contactTime + ':00' : '00:00:00'));\n  };\n\n  var fields = [{\n    name: 'lossRef',\n    label: utils.string.t('claims.lossInformation.ref'),\n    type: 'text',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) || '',\n    muiComponentProps: {\n      disabled: true\n    }\n  }, {\n    name: 'assignedTo',\n    type: 'hidden',\n    value: (loggedInUser === null || loggedInUser === void 0 ? void 0 : loggedInUser.id) || ''\n  }, {\n    name: 'catCodesID',\n    label: utils.string.t('claims.lossInformation.catCode'),\n    type: 'autocompletemui',\n    options: formattedCatCodes,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: formattedCatCodes.find(function (c) {\n      var _c$id, _lossInformation$catC;\n\n      return ((_c$id = c.id) === null || _c$id === void 0 ? void 0 : _c$id.toString()) === (lossInformation === null || lossInformation === void 0 ? void 0 : (_lossInformation$catC = lossInformation.catCodesID) === null || _lossInformation$catC === void 0 ? void 0 : _lossInformation$catC.toString());\n    }) || formattedCatCodes[0],\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      classes: {\n        root: classes.catCodeSelect\n      }\n    }\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    label: \"\".concat(utils.string.t('claims.lossInformation.fromDate')),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || null,\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('catCodesID', {\n        is: function is(val) {\n          return val !== null && (val === null || val === void 0 ? void 0 : val.id) !== '0';\n        },\n        then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    })\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    label: \"\".concat(utils.string.t('claims.lossInformation.toDate')),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || null,\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate && value !== null ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    })\n  }, {\n    name: 'lossName',\n    label: \"\".concat(utils.string.t('claims.lossInformation.name')),\n    type: 'text',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName) || '',\n    validation: Yup.string().max(50, utils.string.t('claims.lossInformation.validation.maxLossName')).required(utils.string.t('claims.lossInformation.validation.lossName')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }),\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      inputProps: {\n        maxLength: 51\n      },\n      multiline: true,\n      rows: 1,\n      rowsMax: 1\n    },\n    onChange: function onChange(name) {\n      if (name.length > 20) {\n        setIsWarningShow(true);\n      } else {\n        setIsWarningShow(false);\n      }\n\n      return name;\n    }\n  }, {\n    name: 'lossDescription',\n    label: \"\".concat(utils.string.t('claims.lossInformation.details')),\n    type: 'textarea',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription) || '',\n    validation: Yup.string().max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription')).required(utils.string.t('claims.lossInformation.validation.lossDescription')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }),\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      inputProps: {\n        maxLength: 351\n      },\n      multiline: true,\n      minRows: 4,\n      maxRows: 6\n    }\n  }, {\n    type: 'datepicker',\n    name: 'firstContactDate',\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || null,\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      fullWidth: true\n    },\n    validation: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.firstContactDateTime')).max(new Date(), utils.string.t('claims.lossInformation.validation.futureDateAndTime')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    })\n  },\n  /*  {\r\n    type: 'time',\r\n    name: 'firstContactTime',\r\n    icon: 'AccessTimeIcon',\r\n    value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'HH:mm' } }),\r\n    muiComponentProps: {\r\n      fullWidth: true,\r\n    },\r\n  }, */\n  {\n    type: 'time',\n    name: 'firstContactTime',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || null,\n        format: 'HH:mm'\n      }\n    }),\n    muiComponentProps: {\n      disabled: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isClaimSubmitted) || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n      fullWidth: true,\n      InputProps: {\n        classes: {\n          input: classes.timeInput\n        }\n      }\n    },\n    validation: Yup.string().required(utils.string.t('claims.lossInformation.validation.firstContactDateTime')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string().nullable();\n    }).test('from', utils.string.t('claims.lossInformation.validation.futureDateAndTime'), function (value) {\n      var _this$options, _this$options$parent;\n\n      return !moment(new Date(concatDateAndTime(this === null || this === void 0 ? void 0 : (_this$options = this.options) === null || _this$options === void 0 ? void 0 : (_this$options$parent = _this$options.parent) === null || _this$options$parent === void 0 ? void 0 : _this$options$parent.firstContactDate, value))).isAfter(new Date());\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformationView, _objectSpread(_objectSpread({}, props), {}, {\n    fields: fields,\n    hasLossRef: hasLossRef,\n    lossInformation: lossInformation,\n    loggedInUser: loggedInUser,\n    isWarningShow: isWarningShow,\n    lossProperties: lossProperties,\n    lossSelected: lossSelected,\n    formattedCatCodes: formattedCatCodes\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 204,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsEnterLossInformationForm, \"jVF+pLoZL0HMboRT6FEKCMmygck=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsEnterLossInformationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEnterLossInformationForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEnterLossInformation/ClaimsEnterLossInformationForm.js"],"names":["React","useState","PropTypes","useSelector","Yup","moment","styles","ClaimsEnterLossInformationView","selectLossInformation","selectUser","selectLossSelected","utils","makeStyles","ClaimsEnterLossInformationForm","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","formattedCatCodes","lossProperties","props","classes","name","lossInformation","loggedInUser","lossSelected","hasLossRef","Boolean","lossRef","isWarningShow","setIsWarningShow","concatDateAndTime","contactDate","contactTime","partDate","string","t","value","date","Date","format","toISOString","fields","label","type","muiComponentProps","disabled","id","options","optionKey","optionLabel","find","c","toString","catCodesID","isClaimSubmitted","isInflighLoss","root","catCodeSelect","fromDate","icon","fullWidth","datepicker","validation","test","parent","toDate","isSameOrBefore","when","schema","is","val","then","nullable","required","otherwise","isSameOrAfter","lossName","max","inputProps","maxLength","multiline","rows","rowsMax","onChange","length","lossDescription","minRows","maxRows","firstContactDate","InputProps","input","timeInput","isAfter"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './ClaimsEnterLossInformation.styles';\r\nimport { ClaimsEnterLossInformationView } from './ClaimsEnterLossInformation.view';\r\nimport { selectLossInformation, selectUser, selectLossSelected } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nClaimsEnterLossInformationForm.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsEnterLossInformationForm({ formattedCatCodes, lossProperties, ...props }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsEnterLossInformation' })();\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const loggedInUser = useSelector(selectUser);\r\n  const lossSelected = useSelector(selectLossSelected);\r\n  const hasLossRef = Boolean(lossInformation.lossRef);\r\n  const [isWarningShow, setIsWarningShow] = useState(false);\r\n\r\n  const concatDateAndTime = (contactDate, contactTime) => {\r\n    let partDate = utils.string.t('format.date', { value: { date: contactDate || new Date(), format: 'D MMM YYYY' } });\r\n    return utils.date.toISOString(partDate + ' ' + (contactTime ? contactTime + ':00' : '00:00:00'));\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'lossRef',\r\n      label: utils.string.t('claims.lossInformation.ref'),\r\n      type: 'text',\r\n      value: lossInformation?.lossRef || '',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'assignedTo',\r\n      type: 'hidden',\r\n      value: loggedInUser?.id || '',\r\n    },\r\n    {\r\n      name: 'catCodesID',\r\n      label: utils.string.t('claims.lossInformation.catCode'),\r\n      type: 'autocompletemui',\r\n      options: formattedCatCodes,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: formattedCatCodes.find((c) => c.id?.toString() === lossInformation?.catCodesID?.toString()) || formattedCatCodes[0],\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        classes: {\r\n          root: classes.catCodeSelect,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      label: `${utils.string.t('claims.lossInformation.fromDate')}`,\r\n      value: lossInformation?.fromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n          return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n        })\r\n        .when('$validation', (validation, schema) =>\r\n          validation\r\n            ? schema.when('catCodesID', {\r\n                is: (val) => val !== null && val?.id !== '0',\r\n                then: Yup.date().nullable().required(utils.string.t('claims.lossInformation.validation.fromDate')),\r\n                otherwise: Yup.date().nullable(),\r\n              })\r\n            : Yup.date().nullable()\r\n        ),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      label: `${utils.string.t('claims.lossInformation.toDate')}`,\r\n      value: lossInformation?.toDate || null,\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n          return value && this.options.parent.fromDate && value !== null ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n        }),\r\n    },\r\n    {\r\n      name: 'lossName',\r\n      label: `${utils.string.t('claims.lossInformation.name')}`,\r\n      type: 'text',\r\n      value: lossInformation?.lossName || '',\r\n      validation: Yup.string()\r\n        .max(50, utils.string.t('claims.lossInformation.validation.maxLossName'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossName'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        inputProps: { maxLength: 51 },\r\n        multiline: true,\r\n        rows: 1,\r\n        rowsMax: 1,\r\n      },\r\n      onChange: (name) => {\r\n        if (name.length > 20) {\r\n          setIsWarningShow(true);\r\n        } else {\r\n          setIsWarningShow(false);\r\n        }\r\n        return name;\r\n      },\r\n    },\r\n    {\r\n      name: 'lossDescription',\r\n      label: `${utils.string.t('claims.lossInformation.details')}`,\r\n      type: 'textarea',\r\n      value: lossInformation?.lossDescription || '',\r\n      validation: Yup.string()\r\n        .max(350, utils.string.t('claims.lossInformation.validation.maxLossDescription'))\r\n        .required(utils.string.t('claims.lossInformation.validation.lossDescription'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        inputProps: { maxLength: 351 },\r\n        multiline: true,\r\n        minRows: 4,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'firstContactDate',\r\n      value: lossInformation?.firstContactDate || null,\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .required(utils.string.t('claims.lossInformation.validation.firstContactDateTime'))\r\n        .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDateAndTime'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n    },\r\n    /*  {\r\n      type: 'time',\r\n      name: 'firstContactTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'HH:mm' } }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    }, */\r\n    {\r\n      type: 'time',\r\n      name: 'firstContactTime',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'HH:mm' } }),\r\n      muiComponentProps: {\r\n        disabled: lossProperties?.isClaimSubmitted || lossSelected?.isInflighLoss || false,\r\n        fullWidth: true,\r\n        InputProps: {\r\n          classes: {\r\n            input: classes.timeInput,\r\n          },\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('claims.lossInformation.validation.firstContactDateTime'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string().nullable()))\r\n        .test('from', utils.string.t('claims.lossInformation.validation.futureDateAndTime'), function (value) {\r\n          return !moment(new Date(concatDateAndTime(this?.options?.parent?.firstContactDate, value))).isAfter(new Date());\r\n        }),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ClaimsEnterLossInformationView\r\n      {...props}\r\n      fields={fields}\r\n      hasLossRef={hasLossRef}\r\n      lossInformation={lossInformation}\r\n      loggedInUser={loggedInUser}\r\n      isWarningShow={isWarningShow}\r\n      lossProperties={lossProperties}\r\n      lossSelected={lossSelected}\r\n      formattedCatCodes={formattedCatCodes}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}