{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { EditProductsFacilityView } from './EditProductsFacility.view';\nimport { Loader } from 'components';\nimport { getFacilityRates, getProgramUsers, postFacilityRates, selectFacilitiesById, selectFacilitiesRatesLoaded, getRiskCountries, selectRiskCountries, selectPartyNotifiedUsersSorted, putFacilityDetails } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditProductsFacility.propTypes = {\n  facility: PropTypes.object.isRequired,\n  fields: PropTypes.array.isRequired,\n  options: PropTypes.shape({\n    products: PropTypes.array.isRequired,\n    carriers: PropTypes.array.isRequired,\n    clients: PropTypes.array.isRequired\n  }).isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nEditProductsFacility.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function EditProductsFacility(_ref) {\n  _s();\n\n  var _facilityRates$countr;\n\n  var _ref$facility = _ref.facility,\n      facilityItem = _ref$facility === void 0 ? {} : _ref$facility,\n      _ref$fields = _ref.fields,\n      fields = _ref$fields === void 0 ? [] : _ref$fields,\n      options = _ref.options,\n      handleClose = _ref.handleClose,\n      isRateField = _ref.isRateField;\n  var dispatch = useDispatch();\n  var countryCode = useSelector(selectRiskCountries);\n  var notifiedUsers = useSelector(selectPartyNotifiedUsersSorted);\n  var facility = useSelector(selectFacilitiesById(facilityItem.id));\n  var facilityRates = facility && facility.rates ? facility.rates : {};\n  var facilityRatesLoaded = useSelector(selectFacilitiesRatesLoaded);\n  var isRatesLoaded = facilityRatesLoaded && facilityRatesLoaded[facilityItem.id] && utils.generic.isValidArray(countryCode, true);\n  useEffect(function () {\n    if (isRateField) {\n      dispatch(getFacilityRates(facilityItem.id));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!utils.generic.isValidArray(countryCode, true) && isRateField) {\n      dispatch(getRiskCountries());\n    }\n\n    if (!utils.generic.isValidArray(notifiedUsers, true)) {\n      dispatch(getProgramUsers());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var hydrateOptions = function hydrateOptions(fields) {\n    if (!fields) return [];\n    return fields.map(function (field) {\n      var value = facilityItem[field.name] || '';\n\n      if (field.id === 'permissionToBindGroups' || field.id === 'permissionToDismissIssuesGroups') {\n        var _value;\n\n        value = (_value = value) === null || _value === void 0 ? void 0 : _value.map(function (item) {\n          return field.options.find(function (option) {\n            return option.value === item;\n          });\n        });\n      }\n\n      return _objectSpread(_objectSpread({}, field), {}, {\n        value: value,\n        defaultValue: value,\n        muiComponentProps: _objectSpread(_objectSpread(_objectSpread({}, field.muiComponentProps), ['text', 'textarea', 'number'].includes(field.type) && {\n          InputProps: {\n            readOnly: true,\n            disabled: true\n          }\n        }), ['select'].includes(field.type) && {\n          disabled: true\n        }),\n        muiPickerProps: _objectSpread(_objectSpread({}, field.muiPickerProps), ['date', 'datepicker'].includes(field.type) && {\n          readOnly: true,\n          disabled: true\n        })\n      }, field.optionsDynamicKey && {\n        options: utils.form.getSelectOptions(field.optionsDynamicKey, _defineProperty({}, field.optionsDynamicKey, options[field.optionsDynamicKey]))\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    if (isRateField) {\n      dispatch(postFacilityRates(values, facilityItem.id, facilityRates.id));\n    } else {\n      dispatch(putFacilityDetails(values, facilityItem.id));\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('products.admin.facilities.update'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  var validationRate = Yup.number().nullable().min(0).max(100).transform(function (value) {\n    return Number.isNaN(value) ? null : value;\n  }).required(utils.string.t('validation.required')); // show loader until rates object is loaded\n  // we put this here instead of inside <EditProductsFacilityView />\n  // this is to prevent the defaultValues from being initialised without necessary rates data\n\n  if (isRateField && !isRatesLoaded) return /*#__PURE__*/_jsxDEV(Box, {\n    height: 300,\n    children: /*#__PURE__*/_jsxDEV(Loader, {\n      visible: true,\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 150,\n    columnNumber: 7\n  }, this);\n  var hasRates = facilityRates && (facilityRates === null || facilityRates === void 0 ? void 0 : (_facilityRates$countr = facilityRates.countryRates) === null || _facilityRates$countr === void 0 ? void 0 : _facilityRates$countr.length);\n  var ratesCountries = hasRates ? facilityRates === null || facilityRates === void 0 ? void 0 : facilityRates.countryRates.map(function (countryRate) {\n    return {\n      countryCode: utils.risk.countryDetail(countryCode, countryRate.country),\n      rate: countryRate.value,\n      refer: countryRate.refer\n    };\n  }) : undefined;\n  var ratesFields = [{\n    id: 'brokerageFee',\n    name: 'brokerageFee',\n    type: 'number',\n    value: facilityRates === null || facilityRates === void 0 ? void 0 : facilityRates.brokerageFee,\n    label: utils.string.t('products.admin.facilities.brokerageFee'),\n    validation: Yup.number().nullable().min(0).max(100).transform(function (value) {\n      return Number.isNaN(value) ? null : value;\n    }).required(function () {\n      return utils.form.getValidationLabel('products.admin.facilities.brokerageFee', 'required');\n    })\n  }, {\n    name: 'clientCommissionRate',\n    type: 'number',\n    label: utils.string.t('products.admin.facilities.clientCommissionRate'),\n    value: facilityRates === null || facilityRates === void 0 ? void 0 : facilityRates.clientCommissionRate,\n    validation: validationRate\n  }, {\n    name: 'brokerCommissionRate',\n    type: 'number',\n    label: utils.string.t('products.admin.facilities.brokerCommissionRate'),\n    value: facilityRates === null || facilityRates === void 0 ? void 0 : facilityRates.brokerCommissionRate,\n    validation: validationRate\n  }, {\n    name: 'reinsuranceRate',\n    type: 'number',\n    label: utils.string.t('products.admin.facilities.reinsuranceRate'),\n    value: facilityRates.reinsuranceRate || 0,\n    validation: validationRate\n  }, {\n    name: 'countries',\n    type: 'array',\n    arrayDefaultValues: ratesCountries,\n    arrayItemDef: [{\n      name: 'countryCode',\n      type: 'autocompletemui',\n      label: utils.string.t('app.country'),\n      options: countryCode,\n      value: null,\n      width: 70\n    }, {\n      name: 'rate',\n      type: 'number',\n      label: utils.string.t('products.admin.facilities.countryRate'),\n      value: 0,\n      defaultValue: 0\n    }, {\n      name: 'refer',\n      type: 'checkbox',\n      label: utils.string.t('products.admin.facilities.referred'),\n      value: false,\n      defaultValue: false,\n      alignCenter: true\n    }],\n    validation: Yup.array().of(Yup.object().shape({\n      countryCode: Yup.object().typeError(utils.string.t('validation.required')).required(utils.string.t('validation.required')),\n      rate: validationRate\n    }))\n  }];\n  return /*#__PURE__*/_jsxDEV(EditProductsFacilityView, {\n    fields: {\n      details: hydrateOptions(_toConsumableArray(fields)),\n      rates: ratesFields\n    },\n    isRateField: isRateField,\n    isRatesLoaded: isRatesLoaded,\n    ratesCountries: ratesCountries,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProductsFacility, \"osurk6tSvkP+/5pqBXOKIT3x898=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EditProductsFacility;\nEditProductsFacility.displayName = \"EditProductsFacility\";\nEditProductsFacility.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditProductsFacility\",\n  \"props\": {\n    \"facility\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"products\": {\n            \"name\": \"array\",\n            \"required\": true\n          },\n          \"carriers\": {\n            \"name\": \"array\",\n            \"required\": true\n          },\n          \"clients\": {\n            \"name\": \"array\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.js\"] = {\n    name: \"EditProductsFacility\",\n    docgenInfo: EditProductsFacility.__docgenInfo,\n    path: \"src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductsFacility\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsFacility/EditProductsFacility.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Yup","EditProductsFacilityView","Loader","getFacilityRates","getProgramUsers","postFacilityRates","selectFacilitiesById","selectFacilitiesRatesLoaded","getRiskCountries","selectRiskCountries","selectPartyNotifiedUsersSorted","putFacilityDetails","utils","Box","EditProductsFacility","propTypes","facility","object","isRequired","fields","array","options","shape","products","carriers","clients","handleClose","func","defaultProps","facilityItem","isRateField","dispatch","countryCode","notifiedUsers","id","facilityRates","rates","facilityRatesLoaded","isRatesLoaded","generic","isValidArray","hydrateOptions","map","field","value","name","item","find","option","defaultValue","muiComponentProps","includes","type","InputProps","readOnly","disabled","muiPickerProps","optionsDynamicKey","form","getSelectOptions","handleSubmit","values","handleCancel","isFunction","actions","label","string","t","handler","validationRate","number","nullable","min","max","transform","Number","isNaN","required","hasRates","countryRates","length","ratesCountries","countryRate","risk","countryDetail","country","rate","refer","undefined","ratesFields","brokerageFee","validation","getValidationLabel","clientCommissionRate","brokerCommissionRate","reinsuranceRate","arrayDefaultValues","arrayItemDef","width","alignCenter","of","typeError","details"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { EditProductsFacilityView } from './EditProductsFacility.view';\r\nimport { Loader } from 'components';\r\nimport {\r\n  getFacilityRates,\r\n  getProgramUsers,\r\n  postFacilityRates,\r\n  selectFacilitiesById,\r\n  selectFacilitiesRatesLoaded,\r\n  getRiskCountries,\r\n  selectRiskCountries,\r\n  selectPartyNotifiedUsersSorted,\r\n  putFacilityDetails,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Box } from '@material-ui/core';\r\n\r\nEditProductsFacility.propTypes = {\r\n  facility: PropTypes.object.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  options: PropTypes.shape({\r\n    products: PropTypes.array.isRequired,\r\n    carriers: PropTypes.array.isRequired,\r\n    clients: PropTypes.array.isRequired,\r\n  }).isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nEditProductsFacility.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function EditProductsFacility({ facility: facilityItem = {}, fields = [], options, handleClose, isRateField }) {\r\n  const dispatch = useDispatch();\r\n  const countryCode = useSelector(selectRiskCountries);\r\n  const notifiedUsers = useSelector(selectPartyNotifiedUsersSorted);\r\n  const facility = useSelector(selectFacilitiesById(facilityItem.id));\r\n  const facilityRates = facility && facility.rates ? facility.rates : {};\r\n  const facilityRatesLoaded = useSelector(selectFacilitiesRatesLoaded);\r\n  const isRatesLoaded = facilityRatesLoaded && facilityRatesLoaded[facilityItem.id] && utils.generic.isValidArray(countryCode, true);\r\n\r\n  useEffect(() => {\r\n    if (isRateField) {\r\n      dispatch(getFacilityRates(facilityItem.id));\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!utils.generic.isValidArray(countryCode, true) && isRateField) {\r\n        dispatch(getRiskCountries());\r\n      }\r\n      if (!utils.generic.isValidArray(notifiedUsers, true)) {\r\n        dispatch(getProgramUsers());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const hydrateOptions = (fields) => {\r\n    if (!fields) return [];\r\n\r\n    return fields.map((field) => {\r\n      let value = facilityItem[field.name] || '';\r\n      if (field.id === 'permissionToBindGroups' || field.id === 'permissionToDismissIssuesGroups') {\r\n        value = value?.map((item) => {\r\n          return field.options.find((option) => option.value === item);\r\n        });\r\n      }\r\n\r\n      return {\r\n        ...field,\r\n        value: value,\r\n        defaultValue: value,\r\n        muiComponentProps: {\r\n          ...field.muiComponentProps,\r\n          ...(['text', 'textarea', 'number'].includes(field.type) && {\r\n            InputProps: {\r\n              readOnly: true,\r\n              disabled: true,\r\n            },\r\n          }),\r\n          ...(['select'].includes(field.type) && {\r\n            disabled: true,\r\n          }),\r\n        },\r\n        muiPickerProps: {\r\n          ...field.muiPickerProps,\r\n          ...(['date', 'datepicker'].includes(field.type) && {\r\n            readOnly: true,\r\n            disabled: true,\r\n          }),\r\n        },\r\n        ...(field.optionsDynamicKey && {\r\n          options: utils.form.getSelectOptions(field.optionsDynamicKey, {\r\n            [field.optionsDynamicKey]: options[field.optionsDynamicKey],\r\n          }),\r\n        }),\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    if (isRateField) {\r\n      dispatch(postFacilityRates(values, facilityItem.id, facilityRates.id));\r\n    } else {\r\n      dispatch(putFacilityDetails(values, facilityItem.id));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('products.admin.facilities.update'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  const validationRate = Yup.number()\r\n    .nullable()\r\n    .min(0)\r\n    .max(100)\r\n    .transform((value) => (Number.isNaN(value) ? null : value))\r\n    .required(utils.string.t('validation.required'));\r\n\r\n  // show loader until rates object is loaded\r\n  // we put this here instead of inside <EditProductsFacilityView />\r\n  // this is to prevent the defaultValues from being initialised without necessary rates data\r\n\r\n  if (isRateField && !isRatesLoaded)\r\n    return (\r\n      <Box height={300}>\r\n        <Loader visible absolute />\r\n      </Box>\r\n    );\r\n\r\n  const hasRates = facilityRates && facilityRates?.countryRates?.length;\r\n\r\n  const ratesCountries = hasRates\r\n    ? facilityRates?.countryRates.map((countryRate) => {\r\n        return {\r\n          countryCode: utils.risk.countryDetail(countryCode, countryRate.country),\r\n          rate: countryRate.value,\r\n          refer: countryRate.refer,\r\n        };\r\n      })\r\n    : undefined;\r\n\r\n  const ratesFields = [\r\n    {\r\n      id: 'brokerageFee',\r\n      name: 'brokerageFee',\r\n      type: 'number',\r\n      value: facilityRates?.brokerageFee,\r\n      label: utils.string.t('products.admin.facilities.brokerageFee'),\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .max(100)\r\n        .transform((value) => (Number.isNaN(value) ? null : value))\r\n        .required(() => utils.form.getValidationLabel('products.admin.facilities.brokerageFee', 'required')),\r\n    },\r\n    {\r\n      name: 'clientCommissionRate',\r\n      type: 'number',\r\n      label: utils.string.t('products.admin.facilities.clientCommissionRate'),\r\n      value: facilityRates?.clientCommissionRate,\r\n      validation: validationRate,\r\n    },\r\n    {\r\n      name: 'brokerCommissionRate',\r\n      type: 'number',\r\n      label: utils.string.t('products.admin.facilities.brokerCommissionRate'),\r\n      value: facilityRates?.brokerCommissionRate,\r\n      validation: validationRate,\r\n    },\r\n    {\r\n      name: 'reinsuranceRate',\r\n      type: 'number',\r\n      label: utils.string.t('products.admin.facilities.reinsuranceRate'),\r\n      value: facilityRates.reinsuranceRate || 0,\r\n      validation: validationRate,\r\n    },\r\n    {\r\n      name: 'countries',\r\n      type: 'array',\r\n      arrayDefaultValues: ratesCountries,\r\n      arrayItemDef: [\r\n        {\r\n          name: 'countryCode',\r\n          type: 'autocompletemui',\r\n          label: utils.string.t('app.country'),\r\n          options: countryCode,\r\n          value: null,\r\n          width: 70,\r\n        },\r\n        {\r\n          name: 'rate',\r\n          type: 'number',\r\n          label: utils.string.t('products.admin.facilities.countryRate'),\r\n          value: 0,\r\n          defaultValue: 0,\r\n        },\r\n        {\r\n          name: 'refer',\r\n          type: 'checkbox',\r\n          label: utils.string.t('products.admin.facilities.referred'),\r\n          value: false,\r\n          defaultValue: false,\r\n          alignCenter: true,\r\n        },\r\n      ],\r\n      validation: Yup.array().of(\r\n        Yup.object().shape({\r\n          countryCode: Yup.object().typeError(utils.string.t('validation.required')).required(utils.string.t('validation.required')),\r\n          rate: validationRate,\r\n        })\r\n      ),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <EditProductsFacilityView\r\n      fields={{\r\n        details: hydrateOptions([...fields]),\r\n        rates: ratesFields,\r\n      }}\r\n      isRateField={isRateField}\r\n      isRatesLoaded={isRatesLoaded}\r\n      ratesCountries={ratesCountries}\r\n      actions={actions}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}