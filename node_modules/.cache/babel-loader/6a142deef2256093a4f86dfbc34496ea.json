{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DynamicTable\\\\DynamicTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport * as utils from 'utils';\nimport styles from './DynamicTableRow.styles';\nimport { DynamicTableComponent, TableCell } from 'components';\nimport utilsOpeningMemo from '../../utils/openingMemo/openingMemo'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDynamicTableRowView.propTypes = {\n  row: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired\n};\nexport function DynamicTableRowView(_ref) {\n  var _row$rowStyles,\n      _row$rowStyles2,\n      _tableRowClasses,\n      _row$rowStyles3,\n      _row$rowStyles4,\n      _row$rowStyles5,\n      _row$rowStyles6,\n      _row$cells,\n      _this = this;\n\n  var row = _ref.row,\n      formProps = _ref.formProps;\n  var classes = makeStyles(styles, {\n    name: 'DynamicTableRow'\n  })();\n  var tableRowClasses = (_tableRowClasses = {}, _defineProperty(_tableRowClasses, classes.subCell, row.rowStyles && Boolean((_row$rowStyles = row.rowStyles) === null || _row$rowStyles === void 0 ? void 0 : _row$rowStyles.subRow)), _defineProperty(_tableRowClasses, classes.subCellHeader, row.rowStyles && Boolean((_row$rowStyles2 = row.rowStyles) === null || _row$rowStyles2 === void 0 ? void 0 : _row$rowStyles2.subRowHeader)), _tableRowClasses);\n  var changedByValue = utils.generic.isFunction(formProps === null || formProps === void 0 ? void 0 : formProps.watch) && formProps.watch((_row$rowStyles3 = row.rowStyles) === null || _row$rowStyles3 === void 0 ? void 0 : _row$rowStyles3.changeBy);\n  var showRow = ((_row$rowStyles4 = row.rowStyles) === null || _row$rowStyles4 === void 0 ? void 0 : _row$rowStyles4.changeBy) ? !((_row$rowStyles5 = row.rowStyles) === null || _row$rowStyles5 === void 0 ? void 0 : _row$rowStyles5.isHidden) || utilsOpeningMemo.displaySubRow(changedByValue) : !((_row$rowStyles6 = row.rowStyles) === null || _row$rowStyles6 === void 0 ? void 0 : _row$rowStyles6.isHidden);\n  return showRow && /*#__PURE__*/_jsxDEV(TableRow, {\n    className: classnames(tableRowClasses),\n    children: (_row$cells = row.cells) === null || _row$cells === void 0 ? void 0 : _row$cells.map(function (cell, index) {\n      var _row$rowStyles7, _classnames;\n\n      return /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n        compact: true,\n        nestedClasses: {\n          root: classes.cell\n        }\n      }, cell.cellProps), {}, {\n        children: [cell.label ? /*#__PURE__*/_jsxDEV(\"p\", {\n          className: classnames((_classnames = {}, _defineProperty(_classnames, classes.labelIndent, index === 0), _defineProperty(_classnames, classes.labelIndentExtra, (_row$rowStyles7 = row.rowStyles) === null || _row$rowStyles7 === void 0 ? void 0 : _row$rowStyles7.extraLeftPadding), _defineProperty(_classnames, classes.labelWithComponent, cell.type), _classnames)),\n          children: utils.string.t(cell.label)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 17\n        }, _this) : '', cell.type ? /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(_defineProperty({}, classes.labelIndent, index === 0)),\n          children: /*#__PURE__*/_jsxDEV(DynamicTableComponent, {\n            formProps: formProps,\n            field: utils.form.getFieldProps(row.cells, cell.name),\n            rowKey: row.rowKey\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 17\n        }, _this) : null]\n      }), \"\".concat(row.tabKey, \"-\").concat(row.rowKey, \"-\").concat(index), true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 13\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 7\n  }, this);\n}\n_c = DynamicTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DynamicTable/DynamicTableRow.view.js"],"names":["React","PropTypes","classnames","utils","styles","DynamicTableComponent","TableCell","utilsOpeningMemo","makeStyles","TableRow","DynamicTableRowView","propTypes","row","object","isRequired","formProps","classes","name","tableRowClasses","subCell","rowStyles","Boolean","subRow","subCellHeader","subRowHeader","changedByValue","generic","isFunction","watch","changeBy","showRow","isHidden","displaySubRow","cells","map","cell","index","root","cellProps","label","labelIndent","labelIndentExtra","extraLeftPadding","labelWithComponent","type","string","t","form","getFieldProps","rowKey","tabKey"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport styles from './DynamicTableRow.styles';\r\nimport { DynamicTableComponent, TableCell } from 'components';\r\nimport utilsOpeningMemo from '../../utils/openingMemo/openingMemo';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { TableRow } from '@material-ui/core';\r\n\r\nDynamicTableRowView.propTypes = {\r\n  row: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function DynamicTableRowView({ row, formProps }) {\r\n  const classes = makeStyles(styles, { name: 'DynamicTableRow' })();\r\n\r\n  const tableRowClasses = {\r\n    [classes.subCell]: row.rowStyles && Boolean(row.rowStyles?.subRow),\r\n    [classes.subCellHeader]: row.rowStyles && Boolean(row.rowStyles?.subRowHeader),\r\n  };\r\n  const changedByValue = utils.generic.isFunction(formProps?.watch) && formProps.watch(row.rowStyles?.changeBy);\r\n\r\n  const showRow = row.rowStyles?.changeBy\r\n    ? !row.rowStyles?.isHidden || utilsOpeningMemo.displaySubRow(changedByValue)\r\n    : !row.rowStyles?.isHidden;\r\n\r\n  return (\r\n    showRow && (\r\n      <TableRow className={classnames(tableRowClasses)}>\r\n        {row.cells?.map((cell, index) => {\r\n          return (\r\n            <TableCell key={`${row.tabKey}-${row.rowKey}-${index}`} compact nestedClasses={{ root: classes.cell }} {...cell.cellProps}>\r\n              {cell.label ? (\r\n                <p\r\n                  className={classnames({\r\n                    [classes.labelIndent]: index === 0,\r\n                    [classes.labelIndentExtra]: row.rowStyles?.extraLeftPadding,\r\n                    [classes.labelWithComponent]: cell.type,\r\n                  })}\r\n                >\r\n                  {utils.string.t(cell.label)}\r\n                </p>\r\n              ) : (\r\n                ''\r\n              )}\r\n              {cell.type ? (\r\n                <div className={classnames({ [classes.labelIndent]: index === 0 })}>\r\n                  <DynamicTableComponent formProps={formProps} field={utils.form.getFieldProps(row.cells, cell.name)} rowKey={row.rowKey} />\r\n                </div>\r\n              ) : null}\r\n            </TableCell>\r\n          );\r\n        })}\r\n      </TableRow>\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}