{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Autocomplete\\\\Autocomplete.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport Select from 'react-select';\nimport AsyncSelect from 'react-select/lib/Async';\nimport CreatableSelect from 'react-select/lib/Creatable';\nimport AsyncCreatableSelect from 'react-select/lib/AsyncCreatable';\nimport get from 'lodash/get';\nimport debounce from 'lodash/debounce';\nimport omit from 'lodash/omit'; // app\n\nimport { FilterChip } from 'components';\nimport styles from './Autocomplete.styles';\nimport AutocompleteControl from './Autocomplete.control';\nimport AutocompleteClearIcon from './Autocomplete.clearIcon';\nimport AutocompleteDropdownIcon from './Autocomplete.dropdownIcon';\nimport AutocompleteLoadingIndicator from './Autocomplete.loadingIndicator';\nimport AutocompleteLoadingMessage from './Autocomplete.loadingMessage';\nimport AutocompleteMenu from './Autocomplete.menu';\nimport AutocompleteNoOptions from './Autocomplete.noOptions';\nimport AutocompleteOption from './Autocomplete.option';\nimport AutocompletePlaceholder from './Autocomplete.placeholder';\nimport AutocompleteSingleValue from './Autocomplete.singleValue';\nimport AutocompleteValueContainer from './Autocomplete.valueContainer';\nimport config from 'config';\nimport { withStyles, NoSsr } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Autocomplete = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Autocomplete, _PureComponent);\n\n  var _super = _createSuper(Autocomplete);\n\n  function Autocomplete() {\n    var _this;\n\n    _classCallCheck(this, Autocomplete);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.inputComponent = function (_ref) {\n      var inputRef = _ref.inputRef,\n          props = _objectWithoutProperties(_ref, [\"inputRef\"]);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", _objectSpread({\n        ref: inputRef\n      }, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 12\n      }, _assertThisInitialized(_this));\n    };\n\n    _this.ControlWithRef = function (props) {\n      return /*#__PURE__*/_jsxDEV(AutocompleteControl, _objectSpread(_objectSpread({}, props), {}, {\n        inputComponentRef: _this.inputComponent\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 67,\n        columnNumber: 12\n      }, _assertThisInitialized(_this));\n    };\n\n    _this.components = {\n      Control: _this.ControlWithRef,\n      ClearIndicator: AutocompleteClearIcon,\n      DropdownIndicator: AutocompleteDropdownIcon,\n      LoadingIndicator: AutocompleteLoadingIndicator,\n      LoadingMessage: AutocompleteLoadingMessage,\n      Menu: AutocompleteMenu,\n      MultiValue: FilterChip,\n      NoOptionsMessage: AutocompleteNoOptions,\n      Option: AutocompleteOption,\n      Placeholder: AutocompletePlaceholder,\n      SingleValue: AutocompleteSingleValue,\n      ValueContainer: AutocompleteValueContainer\n    };\n\n    _this.getNewOptionData = function (optionKey, optionLabel) {\n      return function (newInputValue, newOptionLabel) {\n        var _ref2;\n\n        // there's a bug in React Select where custom value/label are not working for created options\n        // as a workaround, we return an created object with custom keys for value/label\n        // and we add the React Select default \"value\" and \"label\" so that they are picked up\n        // https://github.com/JedWatson/react-select/pull/3004\n        return _ref2 = {}, _defineProperty(_ref2, optionKey, newInputValue), _defineProperty(_ref2, optionLabel, newOptionLabel), _defineProperty(_ref2, \"value\", newInputValue), _defineProperty(_ref2, \"label\", newOptionLabel), _defineProperty(_ref2, \"__isNew__\", true), _ref2;\n      };\n    };\n\n    _this.handleChange = function (values) {\n      var _this$props = _this.props,\n          handleUpdate = _this$props.handleUpdate,\n          id = _this$props.id;\n      var isValueFalsy = values === null || values === undefined || values === false; // if we clear the autocomplete, React-Select updates the value to be \"null\"\n      // this would make the value become [null]\n      // this causes RHF to create an error nested within an array, which is wrong\n      // instead, if \"values\" is null/undefined/false, we update to an empty array\n\n      handleUpdate(id, Array.isArray(values) ? values : isValueFalsy ? [] : [values]);\n    };\n\n    _this.debouncedFetch = debounce(function (searchTerm, callback) {\n      var asyncHandler = get(_this.props, 'innerComponentProps.async.handler');\n      var asyncSearch = get(_this.props, 'innerComponentProps.async.type');\n      var asyncFilter = get(_this.props, 'innerComponentProps.async.filter');\n\n      if (asyncHandler) {\n        asyncHandler(asyncSearch, searchTerm).then(function (results) {\n          // if API didn't return an array (ex: endpoint returns error object)\n          // we return an empty array to avoid errors\n          if (!Array.isArray(results)) return callback([]); // if there's no filtering, return all results\n          // if (!asyncFilter || isEmpty(asyncFilter)) return callback(results);\n\n          if (!asyncFilter) return callback(results); // if we have a filter method, run the values through the function\n\n          return callback(asyncFilter(results));\n        }).catch(function (error) {\n          return callback(null);\n        });\n      }\n    }, config.ui.autocomplete.delay);\n    return _this;\n  }\n\n  _createClass(Autocomplete, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          value = _this$props2.value,\n          label = _this$props2.label,\n          error = _this$props2.error,\n          helperText = _this$props2.helperText,\n          placeholder = _this$props2.placeholder,\n          suggestions = _this$props2.suggestions,\n          optionKey = _this$props2.optionKey,\n          optionLabel = _this$props2.optionLabel,\n          muiComponentProps = _this$props2.muiComponentProps,\n          innerComponentProps = _this$props2.innerComponentProps,\n          classes = _this$props2.classes;\n      var allowEmpty = get(this.props, 'innerComponentProps.allowEmpty');\n      var errorMsg = error && error.message;\n      var hasSuggestions = suggestions && suggestions.length > 0;\n      var isEmptyAllowed = hasSuggestions ? true : allowEmpty !== undefined && allowEmpty;\n      var isUpArrowIcon = get(this.props, 'innerComponentProps.displayUpArowIcon');\n\n      if (!hasSuggestions && !isEmptyAllowed) {\n        return null;\n      }\n\n      var asyncHandler = get(this.props, 'innerComponentProps.async.handler');\n      var isAsync = !!asyncHandler;\n      var isCreatable = get(innerComponentProps, 'isCreatable');\n      var SelectComponent = Select;\n      if (isAsync) SelectComponent = AsyncSelect;\n      if (isCreatable) SelectComponent = CreatableSelect;\n      if (isAsync && isCreatable) SelectComponent = AsyncCreatableSelect;\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(NoSsr, {\n          children: /*#__PURE__*/_jsxDEV(SelectComponent, _objectSpread(_objectSpread({\n            loadOptions: isAsync && asyncHandler && this.debouncedFetch,\n            value: value,\n            options: !isAsync && suggestions,\n            getOptionKey: optionKey && function (option) {\n              return option[optionKey];\n            },\n            getOptionValue: optionKey && function (option) {\n              return get(option, \"[\".concat(optionKey, \"]\"));\n            },\n            getOptionLabel: optionLabel && function (option) {\n              return get(option, \"[\".concat(optionLabel, \"]\"));\n            },\n            isClearable: true,\n            menuPosition: 'fixed' // makes the dropdown flow over components below when clicked\n            ,\n            classes: classes,\n            textFieldProps: _objectSpread(_objectSpread({}, omit(muiComponentProps, ['autoFocus'])), {}, {\n              label: label,\n              id: id,\n              name: id,\n              error: !!errorMsg,\n              helperText: !!errorMsg ? errorMsg : helperText || '',\n              'data-form-type': 'autocomplete'\n            }),\n            getNewOptionData: this.getNewOptionData(optionKey, optionLabel),\n            autoFocus: muiComponentProps.autoFocus\n          }, innerComponentProps), {}, {\n            components: isUpArrowIcon === false ? _objectSpread(_objectSpread({}, this.components), {}, {\n              DropdownIndicator: null\n            }) : this.components,\n            onChange: this.handleChange,\n            placeholder: placeholder\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 173,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 172,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 171,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Autocomplete;\n}(PureComponent);\nAutocomplete.propTypes = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\n  label: PropTypes.string,\n  error: PropTypes.shape({\n    message: PropTypes.string,\n    type: PropTypes.string\n  }),\n  helperText: PropTypes.string,\n  placeholder: PropTypes.string,\n  suggestions: PropTypes.arrayOf(PropTypes.object),\n  optionKey: PropTypes.string.isRequired,\n  optionLabel: PropTypes.string.isRequired,\n  handleUpdate: PropTypes.func.isRequired,\n  muiComponentProps: PropTypes.object,\n  innerComponentProps: PropTypes.shape({\n    async: PropTypes.shape({\n      handler: PropTypes.func.isRequired,\n      type: PropTypes.string.isRequired,\n      limit: PropTypes.number,\n      filter: PropTypes.func\n    })\n  })\n};\nAutocomplete.defaultProps = {\n  placeholder: '',\n  muiComponentProps: {},\n  innerComponentProps: {}\n};\nexport default compose(withStyles(styles))(Autocomplete);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Autocomplete/Autocomplete.js"],"names":["React","PureComponent","PropTypes","compose","Select","AsyncSelect","CreatableSelect","AsyncCreatableSelect","get","debounce","omit","FilterChip","styles","AutocompleteControl","AutocompleteClearIcon","AutocompleteDropdownIcon","AutocompleteLoadingIndicator","AutocompleteLoadingMessage","AutocompleteMenu","AutocompleteNoOptions","AutocompleteOption","AutocompletePlaceholder","AutocompleteSingleValue","AutocompleteValueContainer","config","withStyles","NoSsr","Autocomplete","inputComponent","inputRef","props","ControlWithRef","components","Control","ClearIndicator","DropdownIndicator","LoadingIndicator","LoadingMessage","Menu","MultiValue","NoOptionsMessage","Option","Placeholder","SingleValue","ValueContainer","getNewOptionData","optionKey","optionLabel","newInputValue","newOptionLabel","handleChange","values","handleUpdate","id","isValueFalsy","undefined","Array","isArray","debouncedFetch","searchTerm","callback","asyncHandler","asyncSearch","asyncFilter","then","results","catch","error","ui","autocomplete","delay","value","label","helperText","placeholder","suggestions","muiComponentProps","innerComponentProps","classes","allowEmpty","errorMsg","message","hasSuggestions","length","isEmptyAllowed","isUpArrowIcon","isAsync","isCreatable","SelectComponent","root","option","name","autoFocus","propTypes","string","isRequired","oneOfType","arrayOf","object","shape","type","func","async","handler","limit","number","filter","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport Select from 'react-select';\r\nimport AsyncSelect from 'react-select/lib/Async';\r\nimport CreatableSelect from 'react-select/lib/Creatable';\r\nimport AsyncCreatableSelect from 'react-select/lib/AsyncCreatable';\r\nimport get from 'lodash/get';\r\nimport debounce from 'lodash/debounce';\r\nimport omit from 'lodash/omit';\r\n\r\n// app\r\nimport { FilterChip } from 'components';\r\nimport styles from './Autocomplete.styles';\r\nimport AutocompleteControl from './Autocomplete.control';\r\nimport AutocompleteClearIcon from './Autocomplete.clearIcon';\r\nimport AutocompleteDropdownIcon from './Autocomplete.dropdownIcon';\r\nimport AutocompleteLoadingIndicator from './Autocomplete.loadingIndicator';\r\nimport AutocompleteLoadingMessage from './Autocomplete.loadingMessage';\r\nimport AutocompleteMenu from './Autocomplete.menu';\r\nimport AutocompleteNoOptions from './Autocomplete.noOptions';\r\nimport AutocompleteOption from './Autocomplete.option';\r\nimport AutocompletePlaceholder from './Autocomplete.placeholder';\r\nimport AutocompleteSingleValue from './Autocomplete.singleValue';\r\nimport AutocompleteValueContainer from './Autocomplete.valueContainer';\r\nimport config from 'config';\r\n\r\nimport { withStyles, NoSsr } from '@material-ui/core';\r\n\r\nexport class Autocomplete extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.object), PropTypes.object]),\r\n    label: PropTypes.string,\r\n    error: PropTypes.shape({\r\n      message: PropTypes.string,\r\n      type: PropTypes.string,\r\n    }),\r\n    helperText: PropTypes.string,\r\n    placeholder: PropTypes.string,\r\n    suggestions: PropTypes.arrayOf(PropTypes.object),\r\n    optionKey: PropTypes.string.isRequired,\r\n    optionLabel: PropTypes.string.isRequired,\r\n    handleUpdate: PropTypes.func.isRequired,\r\n    muiComponentProps: PropTypes.object,\r\n    innerComponentProps: PropTypes.shape({\r\n      async: PropTypes.shape({\r\n        handler: PropTypes.func.isRequired,\r\n        type: PropTypes.string.isRequired,\r\n        limit: PropTypes.number,\r\n        filter: PropTypes.func,\r\n      }),\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: '',\r\n    muiComponentProps: {},\r\n    innerComponentProps: {},\r\n  };\r\n\r\n  inputComponent = ({ inputRef, ...props }) => {\r\n    return <div ref={inputRef} {...props} />;\r\n  };\r\n\r\n  ControlWithRef = (props) => {\r\n    return <AutocompleteControl {...props} inputComponentRef={this.inputComponent} />;\r\n  };\r\n\r\n  components = {\r\n    Control: this.ControlWithRef,\r\n    ClearIndicator: AutocompleteClearIcon,\r\n    DropdownIndicator: AutocompleteDropdownIcon,\r\n    LoadingIndicator: AutocompleteLoadingIndicator,\r\n    LoadingMessage: AutocompleteLoadingMessage,\r\n    Menu: AutocompleteMenu,\r\n    MultiValue: FilterChip,\r\n    NoOptionsMessage: AutocompleteNoOptions,\r\n    Option: AutocompleteOption,\r\n    Placeholder: AutocompletePlaceholder,\r\n    SingleValue: AutocompleteSingleValue,\r\n    ValueContainer: AutocompleteValueContainer,\r\n  };\r\n\r\n  getNewOptionData = (optionKey, optionLabel) => (newInputValue, newOptionLabel) => {\r\n    // there's a bug in React Select where custom value/label are not working for created options\r\n    // as a workaround, we return an created object with custom keys for value/label\r\n    // and we add the React Select default \"value\" and \"label\" so that they are picked up\r\n    // https://github.com/JedWatson/react-select/pull/3004\r\n\r\n    return {\r\n      [optionKey]: newInputValue,\r\n      [optionLabel]: newOptionLabel,\r\n      value: newInputValue,\r\n      label: newOptionLabel,\r\n      __isNew__: true,\r\n    };\r\n  };\r\n\r\n  handleChange = (values) => {\r\n    const { handleUpdate, id } = this.props;\r\n    const isValueFalsy = values === null || values === undefined || values === false;\r\n\r\n    // if we clear the autocomplete, React-Select updates the value to be \"null\"\r\n    // this would make the value become [null]\r\n    // this causes RHF to create an error nested within an array, which is wrong\r\n    // instead, if \"values\" is null/undefined/false, we update to an empty array\r\n    handleUpdate(id, Array.isArray(values) ? values : isValueFalsy ? [] : [values]);\r\n  };\r\n\r\n  debouncedFetch = debounce((searchTerm, callback) => {\r\n    const asyncHandler = get(this.props, 'innerComponentProps.async.handler');\r\n    const asyncSearch = get(this.props, 'innerComponentProps.async.type');\r\n    const asyncFilter = get(this.props, 'innerComponentProps.async.filter');\r\n\r\n    if (asyncHandler) {\r\n      asyncHandler(asyncSearch, searchTerm)\r\n        .then((results) => {\r\n          // if API didn't return an array (ex: endpoint returns error object)\r\n          // we return an empty array to avoid errors\r\n          if (!Array.isArray(results)) return callback([]);\r\n\r\n          // if there's no filtering, return all results\r\n          // if (!asyncFilter || isEmpty(asyncFilter)) return callback(results);\r\n          if (!asyncFilter) return callback(results);\r\n\r\n          // if we have a filter method, run the values through the function\r\n          return callback(asyncFilter(results));\r\n        })\r\n        .catch((error) => callback(null));\r\n    }\r\n  }, config.ui.autocomplete.delay);\r\n\r\n  render() {\r\n    const {\r\n      id,\r\n      value,\r\n      label,\r\n      error,\r\n      helperText,\r\n      placeholder,\r\n      suggestions,\r\n      optionKey,\r\n      optionLabel,\r\n      muiComponentProps,\r\n      innerComponentProps,\r\n      classes,\r\n    } = this.props;\r\n\r\n    const allowEmpty = get(this.props, 'innerComponentProps.allowEmpty');\r\n    const errorMsg = error && error.message;\r\n    const hasSuggestions = suggestions && suggestions.length > 0;\r\n    const isEmptyAllowed = hasSuggestions ? true : allowEmpty !== undefined && allowEmpty;\r\n    const isUpArrowIcon = get(this.props, 'innerComponentProps.displayUpArowIcon');\r\n\r\n    if (!hasSuggestions && !isEmptyAllowed) {\r\n      return null;\r\n    }\r\n\r\n    const asyncHandler = get(this.props, 'innerComponentProps.async.handler');\r\n    const isAsync = !!asyncHandler;\r\n    const isCreatable = get(innerComponentProps, 'isCreatable');\r\n\r\n    let SelectComponent = Select;\r\n\r\n    if (isAsync) SelectComponent = AsyncSelect;\r\n    if (isCreatable) SelectComponent = CreatableSelect;\r\n    if (isAsync && isCreatable) SelectComponent = AsyncCreatableSelect;\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        <NoSsr>\r\n          <SelectComponent\r\n            loadOptions={isAsync && asyncHandler && this.debouncedFetch}\r\n            value={value}\r\n            options={!isAsync && suggestions}\r\n            getOptionKey={optionKey && ((option) => option[optionKey])}\r\n            getOptionValue={optionKey && ((option) => get(option, `[${optionKey}]`))}\r\n            getOptionLabel={optionLabel && ((option) => get(option, `[${optionLabel}]`))}\r\n            isClearable={true}\r\n            menuPosition={'fixed'} // makes the dropdown flow over components below when clicked\r\n            classes={classes}\r\n            textFieldProps={{\r\n              ...omit(muiComponentProps, ['autoFocus']),\r\n              label,\r\n              id: id,\r\n              name: id,\r\n              error: !!errorMsg,\r\n              helperText: !!errorMsg ? errorMsg : helperText || '',\r\n              'data-form-type': 'autocomplete',\r\n            }}\r\n            getNewOptionData={this.getNewOptionData(optionKey, optionLabel)}\r\n            autoFocus={muiComponentProps.autoFocus}\r\n            {...innerComponentProps}\r\n            components={isUpArrowIcon === false ? { ...this.components, DropdownIndicator: null } : this.components}\r\n            onChange={this.handleChange}\r\n            placeholder={placeholder}\r\n          />\r\n        </NoSsr>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(Autocomplete);\r\n"]},"metadata":{},"sourceType":"module"}