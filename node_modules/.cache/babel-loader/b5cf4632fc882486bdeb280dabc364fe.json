{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Assign\\\\Assign.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form'; // app\n\nimport * as utils from 'utils';\nimport styles from './Assign.styles';\nimport { Button, FormAutocompleteMui, FormContainer } from 'components'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAssignView.propTypes = {\n  searchField: PropTypes.object.isRequired,\n  onAssign: PropTypes.func.isRequired,\n  buttonText: PropTypes.string.isRequired,\n  action: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    lable: PropTypes.string.isRequired,\n    handler: PropTypes.func.isRequired\n  })),\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  })\n};\nexport function AssignView(_ref) {\n  _s();\n\n  var searchField = _ref.searchField,\n      buttonText = _ref.buttonText,\n      actions = _ref.actions,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'Assign'\n  })();\n\n  var _useForm = useForm({}),\n      control = _useForm.control,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var assign = actions && actions.find(function (action) {\n    return action.name === 'assign';\n  });\n\n  var onSubmit = function onSubmit(data) {\n    return data.user && assign && utils.generic.isFunction(assign.handler) && assign.handler(data.user);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: nestedClasses.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        width: 1,\n        display: \"flex\",\n        flexWrap: \"wrap\",\n        alignItems: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.autocomplete,\n          children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({\n            control: control\n          }, searchField), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: buttonText,\n          disabled: formState.isSubmitting || !formState.isDirty,\n          type: \"submit\",\n          color: \"primary\",\n          size: \"medium\",\n          \"data-testid\": \"assign-confirmation-button\",\n          nestedClasses: {\n            btn: classes.button\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AssignView, \"fUxz91B0Tdcep/7kxRTq477J9bA=\", false, function () {\n  return [useForm];\n});\n\n_c = AssignView;\nAssignView.displayName = \"AssignView\";\nAssignView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AssignView\",\n  \"props\": {\n    \"searchField\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onAssign\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"buttonText\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"action\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"name\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"lable\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"handler\": {\n              \"name\": \"func\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Assign\\\\Assign.view.js\"] = {\n    name: \"AssignView\",\n    docgenInfo: AssignView.__docgenInfo,\n    path: \"src\\\\components\\\\Assign\\\\Assign.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AssignView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Assign/Assign.view.js"],"names":["React","PropTypes","useForm","utils","styles","Button","FormAutocompleteMui","FormContainer","makeStyles","Box","AssignView","propTypes","searchField","object","isRequired","onAssign","func","buttonText","string","action","arrayOf","shape","name","lable","handler","nestedClasses","root","actions","classes","control","handleSubmit","formState","assign","find","onSubmit","data","user","generic","isFunction","autocomplete","isSubmitting","isDirty","btn","button"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport styles from './Assign.styles';\r\nimport { Button, FormAutocompleteMui, FormContainer } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nAssignView.propTypes = {\r\n  searchField: PropTypes.object.isRequired,\r\n  onAssign: PropTypes.func.isRequired,\r\n  buttonText: PropTypes.string.isRequired,\r\n  action: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      lable: PropTypes.string.isRequired,\r\n      handler: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport function AssignView({ searchField, buttonText, actions, nestedClasses }) {\r\n  const classes = makeStyles(styles, { name: 'Assign' })();\r\n\r\n  const { control, handleSubmit, formState } = useForm({});\r\n\r\n  const assign = actions && actions.find((action) => action.name === 'assign');\r\n\r\n  const onSubmit = (data) => data.user && assign && utils.generic.isFunction(assign.handler) && assign.handler(data.user);\r\n\r\n  return (\r\n    <div className={nestedClasses.root}>\r\n      <FormContainer onSubmit={handleSubmit(onSubmit)}>\r\n        <Box width={1} display=\"flex\" flexWrap=\"wrap\" alignItems=\"flex-end\">\r\n          <div className={classes.autocomplete}>\r\n            <FormAutocompleteMui control={control} {...searchField} />\r\n          </div>\r\n          <Button\r\n            text={buttonText}\r\n            disabled={formState.isSubmitting || !formState.isDirty}\r\n            type=\"submit\"\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            data-testid=\"assign-confirmation-button\"\r\n            nestedClasses={{ btn: classes.button }}\r\n          />\r\n        </Box>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}