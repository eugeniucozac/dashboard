{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsAcknowledgement\\\\ClaimsAcknowledgement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\nimport { selectClaimIdUnderProgress, selectClaimsInformation, selectLossInformation, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectCatCodes, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections, setClaimData, setClaimsStepperControl, getCatCodes } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsAcknowledgement(props) {\n  _s();\n\n  var _get, _useSelector, _claimsInformation$ba, _policySections$find, _interests$find;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var claimData = useSelector(selectClaimIdUnderProgress) || props.claimDataFromRef;\n  var claimId = (_get = get(claimData, 'claimID')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossInformation);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var catCodes = useSelector(selectCatCodes);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n\n  var catCodeDescription = function catCodeDescription(id) {\n    var _catCodes$find, _catCodes$find2;\n\n    var description = (_catCodes$find = catCodes.find(function (item) {\n      return Number(item.id) === id;\n    })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n    var catCodeName = (_catCodes$find2 = catCodes.find(function (item) {\n      return Number(item.id) === id;\n    })) === null || _catCodes$find2 === void 0 ? void 0 : _catCodes$find2.name;\n    return \"\".concat(catCodeName, \" - \").concat(description);\n  };\n\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$ba = claimsInformation.basisOfOrder) === null || _claimsInformation$ba === void 0 ? void 0 : _claimsInformation$ba.toString()) === '0' ? 'Our Share' : '100%',\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return \"\".concat(countryCode, \"-\").concat(countryName);\n  };\n\n  useEffect(function () {\n    dispatch(getLossInformation({\n      lossDetailsId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n      sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n      divisionIdParam: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n      claimRefParam: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      viewLoader: false\n    }));\n    dispatch(getClaimsPreviewInformation({\n      claimId: claimId,\n      claimRefParams: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n      divisionIDParams: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID),\n      viewLoader: false\n    }));\n    dispatch(getPolicyInformation({\n      viewLoader: false\n    }));\n    dispatch(getPolicySections({\n      viewLoader: false\n    }));\n    dispatch(getCatCodes());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleEditClaim = function handleEditClaim() {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(setClaimData({\n                  lossId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n                  claimId: claimId,\n                  policyRef: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  policyNumber: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  xbInstanceID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbInstanceID,\n                  xbPolicyID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbPolicyID,\n                  divisionID: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n                  sourceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n                  claimReference: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference\n                }));\n                _context.next = 3;\n                return dispatch(setClaimsStepperControl(1));\n\n              case 3:\n                _context.next = 5;\n                return history.push(config.routes.claimsFNOL.newLoss);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: !isNaN(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.catCodesID) && catCodeDescription(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.catCodesID)\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.complexityBasis') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.referral') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgementView, _objectSpread(_objectSpread({}, props), {}, {\n    lossInfo: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    }),\n    policyInfo: policyInfo,\n    underWritingInfo: underWritingInfo,\n    underWritingGroupColumns: underWritingGroupColumns,\n    claimInfo: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isClaimInfoLoading\n      });\n    }),\n    claimsInformation: claimsInformation,\n    handlers: {\n      back: props === null || props === void 0 ? void 0 : props.handleBack,\n      finish: props === null || props === void 0 ? void 0 : props.handleFinish,\n      step: props === null || props === void 0 ? void 0 : props.handleStep,\n      editClaim: handleEditClaim\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 334,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsAcknowledgement, \"ck0Gg6JXTOEiOK74mPYwtVlyG+k=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsAcknowledgement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsAcknowledgement\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsAcknowledgement/ClaimsAcknowledgement.js"],"names":["React","useEffect","useSelector","useDispatch","useHistory","get","moment","utils","ClaimsAcknowledgementView","selectClaimIdUnderProgress","selectClaimsInformation","selectLossInformation","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectCatCodes","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","setClaimData","setClaimsStepperControl","getCatCodes","config","constants","ClaimsAcknowledgement","props","dispatch","history","claimData","claimDataFromRef","claimId","claimsInformation","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","catCodes","policySections","origCurrencies","state","countriesList","catCodeDescription","id","description","find","item","Number","catCodeName","name","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","toString","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","lossDetailsId","lossDetailID","sourceIdParams","sourceID","divisionIdParam","divisionID","claimRefParam","claimReference","viewLoader","claimRefParams","divisionIDParams","departmentID","handleEditClaim","fetchData","lossId","policyRef","policyNumber","xbInstanceID","xbPolicyID","push","routes","claimsFNOL","newLoss","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","assignedToName","lossDescription","isNaN","catCodesID","claimInfo","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","location","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","claimStatus","policyInfo","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","bordereauClaim","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","bordereauPeriod","originalCurrency","settlementCurrencyCode","settlementCountry","underWritingGroupColumns","label","map","info","back","handleBack","finish","handleFinish","step","handleStep","editClaim"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from 'utils';\r\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\r\nimport {\r\n  selectClaimIdUnderProgress,\r\n  selectClaimsInformation,\r\n  selectLossInformation,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectCatCodes,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections,\r\n  setClaimData,\r\n  setClaimsStepperControl,\r\n  getCatCodes,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ClaimsAcknowledgement(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const claimData = useSelector(selectClaimIdUnderProgress) || props.claimDataFromRef;\r\n  const claimId = get(claimData, 'claimID') ?? '';\r\n\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n\r\n  const catCodeDescription = (id) => {\r\n    let description = catCodes.find((item) => Number(item.id) === id)?.description;\r\n    let catCodeName = catCodes.find((item) => Number(item.id) === id)?.name;\r\n    return `${catCodeName} - ${description}`;\r\n  };\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder?.toString() === '0' ? 'Our Share' : '100%',\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(\r\n      (currency) => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase()\r\n    )?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`;\r\n  };\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find((country) => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName;\r\n    return `${countryCode}-${countryName}`;\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(\r\n      getLossInformation({\r\n        lossDetailsId: claimData?.lossDetailID,\r\n        sourceIdParams: claimData?.sourceID,\r\n        divisionIdParam: claimData?.divisionID,\r\n        claimRefParam: claimData?.claimReference,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n    dispatch(\r\n      getClaimsPreviewInformation({\r\n        claimId: claimId,\r\n        claimRefParams: claimData?.claimReference,\r\n        sourceIdParams: claimData?.sourceID,\r\n        divisionIDParams: claimData?.divisionID || claimData?.departmentID,\r\n        viewLoader: false,\r\n      })\r\n    );\r\n    dispatch(getPolicyInformation({ viewLoader: false }));\r\n    dispatch(getPolicySections({ viewLoader: false }));\r\n    dispatch(getCatCodes());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleEditClaim = () => {\r\n    async function fetchData() {\r\n      dispatch(\r\n        setClaimData({\r\n          lossId: claimData?.lossDetailID,\r\n          claimId: claimId,\r\n          policyRef: policyInformation?.policyRef,\r\n          policyNumber: policyInformation?.policyRef,\r\n          xbInstanceID: policyInformation?.xbInstanceID,\r\n          xbPolicyID: policyInformation?.xbPolicyID,\r\n          divisionID: claimData?.divisionID,\r\n          sourceID: claimData?.sourceID,\r\n          claimReference: claimData?.claimReference,\r\n        })\r\n      );\r\n      await dispatch(setClaimsStepperControl(1));\r\n      await history.push(config.routes.claimsFNOL.newLoss);\r\n    }\r\n    fetchData();\r\n  };\r\n\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        lossInformation?.firstContactDate &&\r\n        moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.assignedToName },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.catCode'),\r\n      value: !isNaN(lossInformation?.catCodesID) && catCodeDescription(lossInformation?.catCodesID),\r\n    },\r\n  ];\r\n\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value:\r\n        claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value:\r\n        claimsInformation?.lossFromDate && moment(claimsInformation?.lossFromDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.complexityBasis') + '*', value: claimsInformation?.complexity },\r\n    { title: utils.string.t('claims.claimInformation.referral') + '*', value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse') + '*', value: claimsInformation?.referralResponseDescription },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus'), value: claimsInformation?.claimStatus },\r\n  ];\r\n\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value:\r\n        policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n          moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n          moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <ClaimsAcknowledgementView\r\n      {...props}\r\n      lossInfo={lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      }))}\r\n      policyInfo={policyInfo}\r\n      underWritingInfo={underWritingInfo}\r\n      underWritingGroupColumns={underWritingGroupColumns}\r\n      claimInfo={claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isClaimInfoLoading,\r\n      }))}\r\n      claimsInformation={claimsInformation}\r\n      handlers={{\r\n        back: props?.handleBack,\r\n        finish: props?.handleFinish,\r\n        step: props?.handleStep,\r\n        editClaim: handleEditClaim,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}