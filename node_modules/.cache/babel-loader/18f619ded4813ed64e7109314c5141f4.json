{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport * as Yup from 'yup';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\nimport { selectLossQualifiers, selectReferralValues, selectComplexityValues, selectReferralResponse, selectBEAdjusterList, selectPriorities, selectClaimData, selectClaimIdFromGrid, selectClaimsPolicyInformation, selectClaimBordereauPeriods, selectClaimPolicyInsures, selectClaimsInformation, selectorDmsViewFiles, selectDmsDocDetails, selectLossId, setBEAdjusterValue, updateClaimantNamesSuccess, selectAllClaimDetails, selectSelectedBEAdjusterList, getBEAdjuster, getComplexityValues, getReferralValues, selectClaimIdUnderProgress } from 'stores';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformation.prototype = {\n  activeStep: PropTypes.number,\n  isAllStepsCompleted: PropTypes.bool,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  index: PropTypes.number\n};\nexport default function RegisterClaimCardInformation(_ref) {\n  _s();\n\n  var _savedClaimInfo$data2;\n\n  var activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      handleBack = _ref.handleBack,\n      handleSave = _ref.handleSave,\n      handleNext = _ref.handleNext,\n      save = _ref.save,\n      index = _ref.index;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var referralValues = useSelector(selectReferralValues);\n  var selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\n  var complexityValues = useSelector(selectComplexityValues);\n  var referralResponse = useSelector(selectReferralResponse);\n  var claimantNames = useSelector(selectClaimPolicyInsures);\n  var beAdjusterList = useSelector(selectBEAdjusterList);\n  var priorities = useSelector(selectPriorities);\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\n  var claimRefId = useSelector(selectClaimData);\n  var claimData = useSelector(selectClaimIdFromGrid);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var lossInformation = useSelector(selectLossId);\n  var allClaimDetails = useSelector(selectAllClaimDetails);\n  var savedClaimInfo = useSelector(selectClaimIdUnderProgress);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isBordereauChecked = _useState2[0],\n      setBordereauChecked = _useState2[1];\n\n  var isComplexFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isComplex) !== 0;\n  var lossQualifierValue = (lossQualifiers || []).find(function (l) {\n    var _l$id, _claimsInformation$lo;\n\n    return ((_l$id = l.id) === null || _l$id === void 0 ? void 0 : _l$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$lo = claimsInformation.lossQualifierID) === null || _claimsInformation$lo === void 0 ? void 0 : _claimsInformation$lo.toString());\n  });\n  var referralResponseData = referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    var _savedClaimInfo$data, _savedClaimInfo$data$;\n\n    return item.id === (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$data = savedClaimInfo.data) === null || _savedClaimInfo$data === void 0 ? void 0 : (_savedClaimInfo$data$ = _savedClaimInfo$data.referralResponseID) === null || _savedClaimInfo$data$ === void 0 ? void 0 : _savedClaimInfo$data$.toString());\n  });\n  var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n    return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n      return itr === item.name;\n    });\n  }).map(function (item) {\n    return item.id;\n  });\n  var complexityValue = (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexityValueID) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesID === claimsInformation.complexityValueID;\n  }));\n  var referralValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$data2 = savedClaimInfo.data) === null || _savedClaimInfo$data2 === void 0 ? void 0 : _savedClaimInfo$data2.referralValueID) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    var _savedClaimInfo$data3;\n\n    return item.complexityRulesID === (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$data3 = savedClaimInfo.data) === null || _savedClaimInfo$data3 === void 0 ? void 0 : _savedClaimInfo$data3.referralValueID);\n  }));\n\n  var checkBordereauValue = function checkBordereauValue(claimBordereauPeriods) {\n    return claimBordereauPeriods.find(function (bp) {\n      return bp.name === (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod);\n    }) || null;\n  };\n\n  useEffect(function () {\n    dispatch(getBEAdjuster());\n    dispatch(getComplexityValues());\n    dispatch(getReferralValues());\n\n    if (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod) {\n      setBordereauChecked(true);\n    }\n  }, [claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  console.log(\"claimsInformation \", claimsInformation);\n  var fields = [{\n    name: 'claimantName',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.claimant'),\n    options: claimantNames || [],\n    value: (claimantNames === null || claimantNames === void 0 ? void 0 : claimantNames[0]) || null,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 50\n      },\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params);\n\n        if (params.inputValue) {\n          filtered = [].concat(_toConsumableArray(filtered), [{\n            id: filtered.length + 1,\n            name: \"\".concat(utils.string.t('app.create'), \" - \").concat(params.inputValue)\n          }]);\n        }\n\n        return filtered;\n      }\n    },\n    callback: function callback(event, data) {\n      var hasCreateString = \"\".concat(utils.string.t('app.create'), \" - \");\n      var name = data === null || data === void 0 ? void 0 : data.name.replace(hasCreateString, '');\n      var alreadyExists = claimantNames.find(function (claim) {\n        return claim.name === name;\n      });\n\n      if ((data === null || data === void 0 ? void 0 : data.name.includes(hasCreateString)) && !alreadyExists) {\n        var newClaimantName = {\n          id: Object.keys(claimantNames).length,\n          name: name\n        };\n        dispatch(updateClaimantNamesSuccess(newClaimantName));\n      }\n    },\n    validation: Yup.object().nullable()\n  }, {\n    type: 'datepicker',\n    name: 'claimReceivedDate',\n    label: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    icon: 'TodayIcon',\n    value: lossInformation.firstContactDate || null,\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'claimReceivedTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) || null,\n        format: 'HH:mm'\n      }\n    })\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    label: utils.string.t('claims.lossInformation.fromDate'),\n    value: lossInformation.fromDate || null,\n    icon: 'TodayIcon',\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().required(utils.string.t('validation.required')).max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    label: utils.string.t('claims.lossInformation.toDate'),\n    value: lossInformation.toDate || null,\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'lossQualifierID',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.lossInformation.qualifier'),\n    value: lossQualifierValue || null,\n    options: lossQualifiers || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }, {\n    name: 'location',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation.location || '',\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'adjusterReference',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation.adjusterReference || '',\n    validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference'))\n  }, {\n    name: 'complexity',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.complexity'),\n    options: complexityValues || [],\n    value: complexityValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    muiComponentProps: {\n      disabled: isComplexFlag\n    },\n    validation: isComplexFlag ? Yup.object().nullable() : Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'referral',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.referral'),\n    options: referralValues || [],\n    value: referralValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    validation: Yup.object().when('complexity', {\n      is: function is(val) {\n        var _complexityValues$fin;\n\n        return ((_complexityValues$fin = complexityValues.find(function (item) {\n          return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n        })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'rfiResponse',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.rfiResponse'),\n    options: referralResponse || [],\n    value: referralResponseData || null,\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().when('referral', {\n      is: function is(val) {\n        if (val !== null) {\n          var _referralValues$find;\n\n          var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n          var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n            return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n          })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n          var refResponseState = refValuesList.includes(getReferralValue);\n          return !refResponseState;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'fgunarrative',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation.fgunarrative || '',\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'adjuster',\n    type: 'radio',\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.nonBEAdjusterName) || !(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) ? 'beAdjuster' : 'nonBeAdjuster',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiFormGroupProps: {\n      row: true,\n      nestedClasses: {\n        root: classes.adjusterRadioGroup\n      },\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\n      value: 'beAdjuster'\n    }, {\n      label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\n      value: 'nonBeAdjuster'\n    }]\n  }, {\n    name: 'beAdjuster',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? beAdjusterList.items.find(function (item) {\n      var _claimsInformation$be;\n\n      return item.id === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$be = claimsInformation.beAdjusterID) === null || _claimsInformation$be === void 0 ? void 0 : _claimsInformation$be.toString());\n    }) : selectedBeAdjuster || [],\n    options: beAdjusterList.items || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    callback: function callback(event, data) {\n      dispatch(setBEAdjusterValue(data));\n    }\n  }, {\n    name: 'nonBeAdjuster',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.adjustorName'),\n    value: '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster'))\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.priority'),\n    options: priorities || [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: priorities.length ? priorities.find(function (p) {\n      return p.description === 'Medium';\n    }) : null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }].concat(_toConsumableArray(isBordereauChecked ? [{\n    name: 'bordereauClaim',\n    type: 'checkbox',\n    label: utils.string.t('claims.claimInformation.bordereauClaim'),\n    defaultValue: Boolean(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim)\n  }, {\n    name: 'bordereauPeriod',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    options: claimBordereauPeriods || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: checkBordereauValue(claimBordereauPeriods),\n    validation: Yup.object().nullable()\n  }] : []));\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  return /*#__PURE__*/_jsxDEV(RegisterClaimCardInformationView, {\n    fields: fields,\n    claimantNames: claimantNames,\n    referralValues: referralValues,\n    lossQualifiers: lossQualifiers,\n    claimRefId: claimRefId,\n    claimData: claimData,\n    policyInformation: policyInformation,\n    complexityValues: complexityValues,\n    activeStep: activeStep,\n    isAllStepsCompleted: isAllStepsCompleted,\n    handleBack: handleBack,\n    handleSave: handleSave,\n    handleNext: handleNext,\n    save: save,\n    index: index,\n    isBordereauChecked: isBordereauChecked,\n    claimsDocsList: (viewDocumentList === null || viewDocumentList === void 0 ? void 0 : viewDocumentList.length) > 0 ? viewDocumentList : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.claimsDocDetails\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 400,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterClaimCardInformation, \"0nkJ6/r07pwNhiehzXYi6hhkv5c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RegisterClaimCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.js"],"names":["React","useEffect","useState","useSelector","useDispatch","PropTypes","moment","utils","Yup","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","styles","RegisterClaimCardInformationView","selectLossQualifiers","selectReferralValues","selectComplexityValues","selectReferralResponse","selectBEAdjusterList","selectPriorities","selectClaimData","selectClaimIdFromGrid","selectClaimsPolicyInformation","selectClaimBordereauPeriods","selectClaimPolicyInsures","selectClaimsInformation","selectorDmsViewFiles","selectDmsDocDetails","selectLossId","setBEAdjusterValue","updateClaimantNamesSuccess","selectAllClaimDetails","selectSelectedBEAdjusterList","getBEAdjuster","getComplexityValues","getReferralValues","selectClaimIdUnderProgress","createFilterOptions","makeStyles","RegisterClaimCardInformation","prototype","activeStep","number","isAllStepsCompleted","bool","handleBack","func","isRequired","handleSave","handleNext","save","index","classes","name","dispatch","lossQualifiers","referralValues","selectedBeAdjuster","complexityValues","referralResponse","claimantNames","beAdjusterList","priorities","claimsInformation","claimBordereauPeriods","claimRefId","claimData","policyInformation","lossInformation","allClaimDetails","savedClaimInfo","isBordereauChecked","setBordereauChecked","isComplexFlag","isComplex","lossQualifierValue","find","l","id","toString","lossQualifierID","referralResponseData","item","data","referralResponseID","dateDisabledLossQualifiers","filter","itr","map","complexityValue","complexityValueID","complexityRulesID","referralValue","referralValueID","checkBordereauValue","bp","bordereauPeriod","console","log","fields","type","label","string","t","options","value","optionKey","optionLabel","muiComponentProps","inputProps","maxLength","filterOptions","params","filtered","inputValue","length","callback","event","hasCreateString","replace","alreadyExists","claim","includes","newClaimantName","Object","keys","validation","object","nullable","icon","firstContactDate","fullWidth","date","max","Date","outputFormat","format","fromDate","muiPickerProps","minDate","maxDate","toDate","variant","test","parent","isSameOrBefore","when","schema","is","val","then","required","transform","curr","orig","otherwise","isSameOrAfter","location","adjusterReference","disabled","complexityRulesValue","refValuesList","getReferralValue","refResponseState","fgunarrative","title","nonBEAdjusterName","muiFormGroupProps","row","nestedClasses","root","adjusterRadioGroup","radioLabel","beAdjusterID","items","formInput","p","description","defaultValue","Boolean","bordereauClaim","viewDocumentList","savedDmsDocList","claimsDocDetails"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,mCAAT,QAAoD,QAApD,C,CAGA;;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,SAASC,gCAAT,QAAiD,qCAAjD;AACA,SACEC,oBADF,EAEEC,oBAFF,EAGEC,sBAHF,EAIEC,sBAJF,EAKEC,oBALF,EAMEC,gBANF,EAOEC,eAPF,EAQEC,qBARF,EASEC,6BATF,EAUEC,2BAVF,EAWEC,wBAXF,EAYEC,uBAZF,EAaEC,oBAbF,EAcEC,mBAdF,EAeEC,YAfF,EAgBEC,kBAhBF,EAiBEC,0BAjBF,EAkBEC,qBAlBF,EAmBEC,4BAnBF,EAoBEC,aApBF,EAqBEC,mBArBF,EAsBEC,iBAtBF,EAuBEC,0BAvBF,QAwBO,QAxBP;AAyBA,SAASC,mBAAT,QAAoC,+BAApC;AAEA,SAASC,UAAT,QAA2B,mBAA3B;;AACAC,4BAA4B,CAACC,SAA7B,GAAyC;AACvCC,EAAAA,UAAU,EAAElC,SAAS,CAACmC,MADiB;AAEvCC,EAAAA,mBAAmB,EAAEpC,SAAS,CAACqC,IAFQ;AAGvCC,EAAAA,UAAU,EAAEtC,SAAS,CAACuC,IAAV,CAAeC,UAHY;AAIvCC,EAAAA,UAAU,EAAEzC,SAAS,CAACuC,IAAV,CAAeC,UAJY;AAKvCE,EAAAA,UAAU,EAAE1C,SAAS,CAACuC,IAAV,CAAeC,UALY;AAMvCG,EAAAA,IAAI,EAAE3C,SAAS,CAACuC,IAAV,CAAeC,UANkB;AAOvCI,EAAAA,KAAK,EAAE5C,SAAS,CAACmC;AAPsB,CAAzC;AAUA,eAAe,SAASH,4BAAT,OAQZ;AAAA;;AAAA;;AAAA,MAPDE,UAOC,QAPDA,UAOC;AAAA,MANDE,mBAMC,QANDA,mBAMC;AAAA,MALDE,UAKC,QALDA,UAKC;AAAA,MAJDG,UAIC,QAJDA,UAIC;AAAA,MAHDC,UAGC,QAHDA,UAGC;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDC,KACC,QADDA,KACC;AACD,MAAMC,OAAO,GAAGd,UAAU,CAAC1B,MAAD,EAAS;AAAEyC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAGhD,WAAW,EAA5B;AACA,MAAMiD,cAAc,GAAGlD,WAAW,CAACS,oBAAD,CAAlC;AACA,MAAM0C,cAAc,GAAGnD,WAAW,CAACU,oBAAD,CAAlC;AACA,MAAM0C,kBAAkB,GAAGpD,WAAW,CAAC2B,4BAAD,CAAtC;AACA,MAAM0B,gBAAgB,GAAGrD,WAAW,CAACW,sBAAD,CAApC;AACA,MAAM2C,gBAAgB,GAAGtD,WAAW,CAACY,sBAAD,CAApC;AACA,MAAM2C,aAAa,GAAGvD,WAAW,CAACmB,wBAAD,CAAjC;AACA,MAAMqC,cAAc,GAAGxD,WAAW,CAACa,oBAAD,CAAlC;AACA,MAAM4C,UAAU,GAAGzD,WAAW,CAACc,gBAAD,CAA9B;AACA,MAAM4C,iBAAiB,GAAG1D,WAAW,CAACoB,uBAAD,CAArC;AACA,MAAMuC,qBAAqB,GAAG3D,WAAW,CAACkB,2BAAD,CAAzC;AACA,MAAM0C,UAAU,GAAG5D,WAAW,CAACe,eAAD,CAA9B;AACA,MAAM8C,SAAS,GAAG7D,WAAW,CAACgB,qBAAD,CAA7B;AACA,MAAM8C,iBAAiB,GAAG9D,WAAW,CAACiB,6BAAD,CAArC;AACA,MAAM8C,eAAe,GAAG/D,WAAW,CAACuB,YAAD,CAAnC;AACA,MAAMyC,eAAe,GAAGhE,WAAW,CAAC0B,qBAAD,CAAnC;AACA,MAAMuC,cAAc,GAAGjE,WAAW,CAAC+B,0BAAD,CAAlC;;AAlBC,kBAmBiDhC,QAAQ,CAAC,KAAD,CAnBzD;AAAA;AAAA,MAmBMmE,kBAnBN;AAAA,MAmB0BC,mBAnB1B;;AAqBD,MAAMC,aAAa,GAAG,CAAAJ,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEK,SAAjB,MAA+B,CAArD;AACA,MAAMC,kBAAkB,GAAG,CAACpB,cAAc,IAAI,EAAnB,EAAuBqB,IAAvB,CAA4B,UAACC,CAAD;AAAA;;AAAA,WAAO,UAAAA,CAAC,CAACC,EAAF,gDAAMC,QAAN,SAAqBhB,iBAArB,aAAqBA,iBAArB,gDAAqBA,iBAAiB,CAAEiB,eAAxC,0DAAqB,sBAAoCD,QAApC,EAArB,CAAP;AAAA,GAA5B,CAA3B;AACA,MAAME,oBAAoB,GAAGtB,gBAAH,aAAGA,gBAAH,uBAAGA,gBAAgB,CAAEiB,IAAlB,CAAuB,UAACM,IAAD;AAAA;;AAAA,WAAUA,IAAI,CAACJ,EAAL,MAAYR,cAAZ,aAAYA,cAAZ,+CAAYA,cAAc,CAAEa,IAA5B,kFAAY,qBAAsBC,kBAAlC,0DAAY,sBAA0CL,QAA1C,EAAZ,CAAV;AAAA,GAAvB,CAA7B;AACA,MAAMM,0BAA0B,GAAG9B,cAAc,CAC9C+B,MADgC,CACzB,UAACJ,IAAD,EAAU;AAChB,WAAOvE,mCAAmC,CAACiE,IAApC,CAAyC,UAACW,GAAD;AAAA,aAASA,GAAG,KAAKL,IAAI,CAAC7B,IAAtB;AAAA,KAAzC,CAAP;AACD,GAHgC,EAIhCmC,GAJgC,CAI5B,UAACN,IAAD;AAAA,WAAUA,IAAI,CAACJ,EAAf;AAAA,GAJ4B,CAAnC;AAKA,MAAMW,eAAe,GACnB,CAAA1B,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE2B,iBAAnB,MAAwChC,gBAAxC,aAAwCA,gBAAxC,uBAAwCA,gBAAgB,CAAEkB,IAAlB,CAAuB,UAACM,IAAD;AAAA,WAAUA,IAAI,CAACS,iBAAL,KAA2B5B,iBAAiB,CAAC2B,iBAAvD;AAAA,GAAvB,CAAxC,CADF;AAEA,MAAME,aAAa,GACnB,CAAAtB,cAAc,SAAd,IAAAA,cAAc,WAAd,qCAAAA,cAAc,CAAEa,IAAhB,gFAAsBU,eAAtB,MAAyCrC,cAAzC,aAAyCA,cAAzC,uBAAyCA,cAAc,CAAEoB,IAAhB,CAAqB,UAACM,IAAD;AAAA;;AAAA,WAAUA,IAAI,CAACS,iBAAL,MAA2BrB,cAA3B,aAA2BA,cAA3B,gDAA2BA,cAAc,CAAEa,IAA3C,0DAA2B,sBAAsBU,eAAjD,CAAV;AAAA,GAArB,CAAzC,CADA;;AAEA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAAC9B,qBAAD;AAAA,WAC1BA,qBAAqB,CAACY,IAAtB,CAA2B,UAACmB,EAAD;AAAA,aAAQA,EAAE,CAAC1C,IAAH,MAAYU,iBAAZ,aAAYA,iBAAZ,uBAAYA,iBAAiB,CAAEiC,eAA/B,CAAR;AAAA,KAA3B,KAAsF,IAD5D;AAAA,GAA5B;;AAGA7F,EAAAA,SAAS,CAAC,YAAM;AACdmD,IAAAA,QAAQ,CAACrB,aAAa,EAAd,CAAR;AACAqB,IAAAA,QAAQ,CAACpB,mBAAmB,EAApB,CAAR;AACAoB,IAAAA,QAAQ,CAACnB,iBAAiB,EAAlB,CAAR;;AAEA,QAAI4B,iBAAJ,aAAIA,iBAAJ,uBAAIA,iBAAiB,CAAEiC,eAAvB,EAAwC;AACtCxB,MAAAA,mBAAmB,CAAC,IAAD,CAAnB;AACD;AACF,GARQ,EAQN,CAACT,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEiC,eAApB,CARM,CAAT,CApCC,CA4CwC;;AAEzCC,EAAAA,OAAO,CAACC,GAAR,CAAY,oBAAZ,EAAkCnC,iBAAlC;AAEA,MAAMoC,MAAM,IACV;AACE9C,IAAAA,IAAI,EAAE,cADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAE5C,aAAa,IAAI,EAJ5B;AAKE6C,IAAAA,KAAK,EAAG,CAAA7C,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAG,CAAH,CAAb,KAAsB,IALhC;AAME8C,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,WAAW,EAAE,MAPf;AAQEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE;AADD,OADK;AAIjBC,MAAAA,aAAa,EAAE,uBAACP,OAAD,EAAUQ,MAAV,EAAqB;AAClC,YAAIC,QAAQ,GAAG5E,mBAAmB,GAAGmE,OAAH,EAAYQ,MAAZ,CAAlC;;AACA,YAAIA,MAAM,CAACE,UAAX,EAAuB;AACrBD,UAAAA,QAAQ,gCACHA,QADG,IAEN;AACEnC,YAAAA,EAAE,EAAEmC,QAAQ,CAACE,MAAT,GAAkB,CADxB;AAEE9D,YAAAA,IAAI,YAAK5C,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,YAAf,CAAL,gBAAuCS,MAAM,CAACE,UAA9C;AAFN,WAFM,EAAR;AAOD;;AACD,eAAOD,QAAP;AACD;AAhBgB,KARrB;AA0BEG,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQlC,IAAR,EAAiB;AACzB,UAAMmC,eAAe,aAAM7G,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,YAAf,CAAN,QAArB;AACA,UAAMlD,IAAI,GAAG8B,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE9B,IAAN,CAAWkE,OAAX,CAAmBD,eAAnB,EAAoC,EAApC,CAAb;AACA,UAAME,aAAa,GAAG5D,aAAa,CAACgB,IAAd,CAAmB,UAAC6C,KAAD;AAAA,eAAWA,KAAK,CAACpE,IAAN,KAAeA,IAA1B;AAAA,OAAnB,CAAtB;;AAEA,UAAI,CAAA8B,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAE9B,IAAN,CAAWqE,QAAX,CAAoBJ,eAApB,MAAwC,CAACE,aAA7C,EAA4D;AAC1D,YAAMG,eAAe,GAAG;AAAE7C,UAAAA,EAAE,EAAE8C,MAAM,CAACC,IAAP,CAAYjE,aAAZ,EAA2BuD,MAAjC;AAAyC9D,UAAAA,IAAI,EAAJA;AAAzC,SAAxB;AACAC,QAAAA,QAAQ,CAACxB,0BAA0B,CAAC6F,eAAD,CAA3B,CAAR;AACD;AACF,KAnCH;AAoCEG,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAaC,QAAb;AApCd,GADU,EAuCV;AACE5B,IAAAA,IAAI,EAAE,YADR;AAEE/C,IAAAA,IAAI,EAAE,mBAFR;AAGEgD,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,+CAAf,CAHT;AAIE0B,IAAAA,IAAI,EAAE,WAJR;AAKExB,IAAAA,KAAK,EAAErC,eAAe,CAAC8D,gBAAhB,IAAoC,IAL7C;AAMEtB,IAAAA,iBAAiB,EAAE;AACjBuB,MAAAA,SAAS,EAAE;AADM,KANrB;AASEL,IAAAA,UAAU,EAAEpH,GAAG,CAAC0H,IAAJ,GAAWC,GAAX,CAAe,IAAIC,IAAJ,EAAf,EAA2B7H,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAA3B,CATd;AAUEgC,IAAAA,YAAY,EAAE;AAVhB,GAvCU,EAmDV;AACEnC,IAAAA,IAAI,EAAE,MADR;AAEE/C,IAAAA,IAAI,EAAE,mBAFR;AAGE4E,IAAAA,IAAI,EAAE,gBAHR;AAIExB,IAAAA,KAAK,EAAEhG,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEE,MAAAA,KAAK,EAAE;AAAE2B,QAAAA,IAAI,EAAE,CAAAhE,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE8D,gBAAjB,KAAqC,IAA7C;AAAmDM,QAAAA,MAAM,EAAE;AAA3D;AAAT,KAA9B;AAJT,GAnDU,EAyDV;AACEpC,IAAAA,IAAI,EAAE,YADR;AAEE/C,IAAAA,IAAI,EAAE,UAFR;AAGEgD,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAErC,eAAe,CAACqE,QAAhB,IAA4B,IAJrC;AAKER,IAAAA,IAAI,EAAE,WALR;AAMES,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAEvE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEqE,QADZ;AAEdG,MAAAA,OAAO,EAAExE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEyE,MAFZ;AAGdC,MAAAA,OAAO,EAAE,QAHK;AAIdN,MAAAA,MAAM,EAAE;AAJM,KANlB;AAYEV,IAAAA,UAAU,EAAEpH,GAAG,CAAC0H,IAAJ,GACXW,IADW,CACN,MADM,EACEtI,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,mDAAf,CADF,EACuE,UAAUE,KAAV,EAAiB;AAClG,aAAOA,KAAK,IAAI,KAAKD,OAAL,CAAawC,MAAb,CAAoBH,MAA7B,GAAsCrI,MAAM,CAACiG,KAAD,CAAN,CAAcwC,cAAd,CAA6B,KAAKzC,OAAL,CAAawC,MAAb,CAAoBH,MAAjD,CAAtC,GAAiG,IAAxG;AACD,KAHW,EAIXK,IAJW,CAIN,aAJM,EAIS,UAACpB,UAAD,EAAaqB,MAAb;AAAA,aACrBrB,UAAU,GACNqB,MAAM,CAACD,IAAP,CAAY,iBAAZ,EAA+B;AAC7BE,QAAAA,EAAE,EAAE,YAACC,GAAD;AAAA,iBAAS,CAAChE,0BAA0B,CAACqC,QAA3B,CAAoC2B,GAApC,aAAoCA,GAApC,uBAAoCA,GAAG,CAAEvE,EAAzC,CAAV;AAAA,SADyB;AAE7BwE,QAAAA,IAAI,EAAE5I,GAAG,CAAC0H,IAAJ,GACHmB,QADG,CACM9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CADN,EAEH8B,GAFG,CAEC,IAAIC,IAAJ,EAFD,EAEa7H,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAFb,EAGHyB,QAHG,GAIHwB,SAJG,CAIO,UAACC,IAAD,EAAOC,IAAP;AAAA,iBAAiBA,IAAI,KAAK,EAAT,GAAc,IAAd,GAAqBD,IAAtC;AAAA,SAJP,CAFuB;AAO7BE,QAAAA,SAAS,EAAEjJ,GAAG,CAAC0H,IAAJ,GAAWJ,QAAX;AAPkB,OAA/B,CADM,GAUNtH,GAAG,CAAC0H,IAAJ,GAAWJ,QAAX,EAXiB;AAAA,KAJT,CAZd;AA6BEO,IAAAA,YAAY,EAAE;AA7BhB,GAzDU,EAwFV;AACEnC,IAAAA,IAAI,EAAE,YADR;AAEE/C,IAAAA,IAAI,EAAE,QAFR;AAGEgD,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAHT;AAIEE,IAAAA,KAAK,EAAErC,eAAe,CAACyE,MAAhB,IAA0B,IAJnC;AAKEH,IAAAA,cAAc,EAAE;AACdC,MAAAA,OAAO,EAAEvE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEqE,QADZ;AAEdG,MAAAA,OAAO,EAAExE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEyE,MAFZ;AAGdC,MAAAA,OAAO,EAAE,QAHK;AAIdN,MAAAA,MAAM,EAAE;AAJM,KALlB;AAWEV,IAAAA,UAAU,EAAEpH,GAAG,CAAC0H,IAAJ,GACXW,IADW,CACN,MADM,EACEtI,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kDAAf,CADF,EACsE,UAAUE,KAAV,EAAiB;AACjG,aAAOA,KAAK,IAAI,KAAKD,OAAL,CAAawC,MAAb,CAAoBP,QAA7B,GAAwCjI,MAAM,CAACiG,KAAD,CAAN,CAAcmD,aAAd,CAA4B,KAAKpD,OAAL,CAAawC,MAAb,CAAoBP,QAAhD,CAAxC,GAAoG,IAA3G;AACD,KAHW,EAIXS,IAJW,CAIN,aAJM,EAIS,UAACpB,UAAD,EAAaqB,MAAb;AAAA,aACnBrB,UAAU,GACNqB,MAAM,CAACD,IAAP,CAAY,iBAAZ,EAA+B;AAC7BE,QAAAA,EAAE,EAAE,YAACC,GAAD;AAAA,iBAAS,CAAChE,0BAA0B,CAACqC,QAA3B,CAAoC2B,GAApC,aAAoCA,GAApC,uBAAoCA,GAAG,CAAEvE,EAAzC,CAAV;AAAA,SADyB;AAE7BwE,QAAAA,IAAI,EAAE5I,GAAG,CAAC0H,IAAJ,GACHC,GADG,CACC,IAAIC,IAAJ,EADD,EACa7H,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,8CAAf,CADb,EAEHyB,QAFG,GAGHwB,SAHG,CAGO,UAACC,IAAD,EAAOC,IAAP;AAAA,iBAAiBA,IAAI,KAAK,EAAT,GAAc,IAAd,GAAqBD,IAAtC;AAAA,SAHP,CAFuB;AAM7BE,QAAAA,SAAS,EAAEjJ,GAAG,CAAC0H,IAAJ,GAAWJ,QAAX;AANkB,OAA/B,CADM,GASNtH,GAAG,CAAC0H,IAAJ,GAAWJ,QAAX,EAVe;AAAA,KAJT,CAXd;AA2BEO,IAAAA,YAAY,EAAE;AA3BhB,GAxFU,EAqHV;AACElF,IAAAA,IAAI,EAAE,iBADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE9B,kBAAkB,IAAI,IAJ/B;AAKE6B,IAAAA,OAAO,EAAEjD,cAAc,IAAI,EAL7B;AAMEmD,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,WAAW,EAAE,MAPf;AAQEmB,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAawB,QAAb,CAAsB9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB;AARd,GArHU,EA+HV;AACElD,IAAAA,IAAI,EAAE,UADR;AAEE+C,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE1C,iBAAiB,CAAC8F,QAAlB,IAA8B,EAJvC;AAKE/B,IAAAA,UAAU,EAAEpH,GAAG,CAAC4F,MAAJ,GAAaiD,QAAb,CAAsB9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB;AALd,GA/HU,EAsIV;AACElD,IAAAA,IAAI,EAAE,mBADR;AAEE+C,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE1C,iBAAiB,CAAC+F,iBAAlB,IAAuC,EAJhD;AAKEhC,IAAAA,UAAU,EAAEpH,GAAG,CAAC4F,MAAJ,GAAa0B,QAAb,GAAwBK,GAAxB,CAA4B,EAA5B,EAAgC5H,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,yDAAf,CAAhC;AALd,GAtIU,EA6IV;AACElD,IAAAA,IAAI,EAAE,YADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAE9C,gBAAgB,IAAI,EAJ/B;AAKE+C,IAAAA,KAAK,EAAGhB,eAAe,IAAI,IAL7B;AAMEiB,IAAAA,SAAS,EAAE,mBANb;AAOEC,IAAAA,WAAW,EAAE,sBAPf;AAQEC,IAAAA,iBAAiB,EAAE;AACjBmD,MAAAA,QAAQ,EAAEtF;AADO,KARrB;AAWEqD,IAAAA,UAAU,EAAErD,aAAa,GACrB/D,GAAG,CAACqH,MAAJ,GAAaC,QAAb,EADqB,GAErBtH,GAAG,CAACqH,MAAJ,GACGC,QADH,GAEGuB,QAFH,CAEY9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAFZ,EAGG2C,IAHH,CAGQ,aAHR,EAGuB,UAACpB,UAAD,EAAaqB,MAAb;AAAA,aAAyBrB,UAAU,GAAGqB,MAAH,GAAYzI,GAAG,CAACqH,MAAJ,GAAaC,QAAb,EAA/C;AAAA,KAHvB;AAbN,GA7IU,EA+JV;AACE3E,IAAAA,IAAI,EAAE,UADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAEhD,cAAc,IAAI,EAJ7B;AAKEiD,IAAAA,KAAK,EAAGb,aAAa,IAAI,IAL3B;AAMEc,IAAAA,SAAS,EAAE,mBANb;AAOEC,IAAAA,WAAW,EAAE,sBAPf;AAQEmB,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAamB,IAAb,CAAkB,YAAlB,EAAgC;AAC1CE,MAAAA,EAAE,EAAE,YAACC,GAAD;AAAA;;AAAA,eACF,0BAAA3F,gBAAgB,CAACkB,IAAjB,CAAsB,UAACM,IAAD;AAAA,iBAAUA,IAAI,CAACS,iBAAL,MAA2B0D,GAA3B,aAA2BA,GAA3B,uBAA2BA,GAAG,CAAE1D,iBAAhC,CAAV;AAAA,SAAtB,iFAAoFqE,oBAApF,MAA6G,mBAD3G;AAAA,OADsC;AAG1CV,MAAAA,IAAI,EAAE5I,GAAG,CAACqH,MAAJ,GAAaC,QAAb,GAAwBuB,QAAxB,CAAiC9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC,CAHoC;AAI1CoD,MAAAA,SAAS,EAAEjJ,GAAG,CAACqH,MAAJ,GAAaC,QAAb;AAJ+B,KAAhC;AARd,GA/JU,EA8KV;AACE3E,IAAAA,IAAI,EAAE,aADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAE7C,gBAAgB,IAAI,EAJ/B;AAKE8C,IAAAA,KAAK,EAAExB,oBAAoB,IAAI,IALjC;AAMEyB,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,WAAW,EAAE,aAPf;AAQEmB,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAamB,IAAb,CAAkB,UAAlB,EAA8B;AACxCE,MAAAA,EAAE,EAAE,YAACC,GAAD,EAAS;AACX,YAAIA,GAAG,KAAK,IAAZ,EAAkB;AAAA;;AAChB,cAAMY,aAAa,GAAG,CAAC,uBAAD,EAA0B,yCAA1B,EAAqE,QAArE,CAAtB;AACA,cAAMC,gBAAgB,2BAAG1G,cAAc,CAACoB,IAAf,CAAoB,UAACM,IAAD;AAAA,mBAAUA,IAAI,CAACS,iBAAL,MAA2B0D,GAA3B,aAA2BA,GAA3B,uBAA2BA,GAAG,CAAE1D,iBAAhC,CAAV;AAAA,WAApB,CAAH,yDAAG,qBAAkFqE,oBAA3G;AACA,cAAMG,gBAAgB,GAAGF,aAAa,CAACvC,QAAd,CAAuBwC,gBAAvB,CAAzB;AACA,iBAAO,CAACC,gBAAR;AACD,SALD,MAKO;AACL,iBAAO,KAAP;AACD;AACF,OAVuC;AAWxCb,MAAAA,IAAI,EAAE5I,GAAG,CAACqH,MAAJ,GAAaC,QAAb,GAAwBuB,QAAxB,CAAiC9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC,CAXkC;AAYxCoD,MAAAA,SAAS,EAAEjJ,GAAG,CAACqH,MAAJ,GAAaC,QAAb;AAZ6B,KAA9B;AARd,GA9KU,EAqMV;AACE3E,IAAAA,IAAI,EAAE,cADR;AAEE+C,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE1C,iBAAiB,CAACqG,YAAlB,IAAkC,EAJ3C;AAKEtC,IAAAA,UAAU,EAAEpH,GAAG,CAAC4F,MAAJ,GAAaiD,QAAb,CAAsB9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB;AALd,GArMU,EA4MV;AACElD,IAAAA,IAAI,EAAE,UADR;AAEE+C,IAAAA,IAAI,EAAE,OAFR;AAGEiE,IAAAA,KAAK,EAAE5J,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE,EAAC1C,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEuG,iBAApB,KAAyC,EAAChG,cAAD,aAACA,cAAD,uBAACA,cAAc,CAAEgG,iBAAjB,CAAzC,GAA8E,YAA9E,GAA6F,eAJtG;AAKExC,IAAAA,UAAU,EAAEpH,GAAG,CAAC4F,MAAJ,GAAaiD,QAAb,CAAsB9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB,CALd;AAMEgE,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,GAAG,EAAE,IADY;AAEjBC,MAAAA,aAAa,EAAE;AAAEC,QAAAA,IAAI,EAAEtH,OAAO,CAACuH;AAAhB,OAFE;AAGjBvH,MAAAA,OAAO,EAAE;AACPsH,QAAAA,IAAI,EAAEtH,OAAO,CAACwH;AADP;AAHQ,KANrB;AAaEpE,IAAAA,OAAO,EAAE,CACP;AACEH,MAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,oCAAf,CADT;AAEEE,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACEJ,MAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,uCAAf,CADT;AAEEE,MAAAA,KAAK,EAAE;AAFT,KALO;AAbX,GA5MU,EAoOV;AACEpD,IAAAA,IAAI,EAAE,YADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAHT;AAIEE,IAAAA,KAAK,EACH,CAAA1C,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE8G,YAAnB,MAAoC,CAApC,GACEhH,cAAc,CAACiH,KAAf,CAAqBlG,IAArB,CACE,UAACM,IAAD;AAAA;;AAAA,aAAUA,IAAI,CAACJ,EAAL,MAAYf,iBAAZ,aAAYA,iBAAZ,gDAAYA,iBAAiB,CAAE8G,YAA/B,0DAAY,sBAAiC9F,QAAjC,EAAZ,CAAV;AAAA,KADF,CADF,GAIEtB,kBAAkB,IAAI,EAT5B;AAUE+C,IAAAA,OAAO,EAAE3C,cAAc,CAACiH,KAAf,IAAwB,EAVnC;AAWEpE,IAAAA,SAAS,EAAE,IAXb;AAYEC,IAAAA,WAAW,EAAE,MAZf;AAaES,IAAAA,QAAQ,EAAE,kBAACC,KAAD,EAAQlC,IAAR,EAAiB;AACzB7B,MAAAA,QAAQ,CAACzB,kBAAkB,CAACsD,IAAD,CAAnB,CAAR;AACD;AAfH,GApOU,EAqPV;AACE9B,IAAAA,IAAI,EAAE,eADR;AAEE+C,IAAAA,IAAI,EAAE,MAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAHT;AAIEE,IAAAA,KAAK,EAAE,EAJT;AAKEG,IAAAA,iBAAiB,EAAE;AACjBxD,MAAAA,OAAO,EAAE;AACPsH,QAAAA,IAAI,EAAEtH,OAAO,CAAC2H;AADP;AADQ,KALrB;AAUEjD,IAAAA,UAAU,EAAEpH,GAAG,CAAC4F,MAAJ,GAAa0B,QAAb,GAAwBK,GAAxB,CAA4B,GAA5B,EAAiC5H,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qDAAf,CAAjC;AAVd,GArPU,EAiQV;AACElD,IAAAA,IAAI,EAAE,UADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAE1C,UAAU,IAAI,EAJzB;AAKE4C,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,aANf;AAOEF,IAAAA,KAAK,EAAE3C,UAAU,CAACqD,MAAX,GAAoBrD,UAAU,CAACc,IAAX,CAAgB,UAACoG,CAAD;AAAA,aAAOA,CAAC,CAACC,WAAF,KAAkB,QAAzB;AAAA,KAAhB,CAApB,GAAyE,IAPlF;AAQEnD,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAaC,QAAb,GAAwBuB,QAAxB,CAAiC9I,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC;AARd,GAjQU,4BA2QNhC,kBAAkB,GAClB,CACE;AACElB,IAAAA,IAAI,EAAE,gBADR;AAEE+C,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,wCAAf,CAHT;AAIE2E,IAAAA,YAAY,EAAEC,OAAO,CAACpH,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEqH,cAApB;AAJvB,GADF,EAOE;AACE/H,IAAAA,IAAI,EAAE,iBADR;AAEE+C,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,KAAK,EAAE5F,KAAK,CAAC6F,MAAN,CAAaC,CAAb,CAAe,yCAAf,CAHT;AAIEC,IAAAA,OAAO,EAAExC,qBAAqB,IAAI,EAJpC;AAKE0C,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,MANf;AAOEF,IAAAA,KAAK,EAAEX,mBAAmB,CAAC9B,qBAAD,CAP5B;AAQE8D,IAAAA,UAAU,EAAEpH,GAAG,CAACqH,MAAJ,GAAaC,QAAb;AARd,GAPF,CADkB,GAmBlB,EA9RM,EAAZ;AAiSA,MAAMqD,gBAAgB,GAAGhL,WAAW,CAACqB,oBAAD,CAApC;AACA,MAAM4J,eAAe,GAAGjL,WAAW,CAACsB,mBAAD,CAAnC;AAEA,sBACE,QAAC,gCAAD;AACE,IAAA,MAAM,EAAEwE,MADV;AAEE,IAAA,aAAa,EAAEvC,aAFjB;AAGE,IAAA,cAAc,EAAEJ,cAHlB;AAIE,IAAA,cAAc,EAAED,cAJlB;AAKE,IAAA,UAAU,EAAEU,UALd;AAME,IAAA,SAAS,EAAEC,SANb;AAOE,IAAA,iBAAiB,EAAEC,iBAPrB;AAQE,IAAA,gBAAgB,EAAET,gBARpB;AASE,IAAA,UAAU,EAAEjB,UATd;AAUE,IAAA,mBAAmB,EAAEE,mBAVvB;AAWE,IAAA,UAAU,EAAEE,UAXd;AAYE,IAAA,UAAU,EAAEG,UAZd;AAaE,IAAA,UAAU,EAAEC,UAbd;AAcE,IAAA,IAAI,EAAEC,IAdR;AAeE,IAAA,KAAK,EAAEC,KAfT;AAgBE,IAAA,kBAAkB,EAAEoB,kBAhBtB;AAiBE,IAAA,cAAc,EAAE,CAAA8G,gBAAgB,SAAhB,IAAAA,gBAAgB,WAAhB,YAAAA,gBAAgB,CAAElE,MAAlB,IAA2B,CAA3B,GAA+BkE,gBAA/B,GAAkDC,eAAlD,aAAkDA,eAAlD,uBAAkDA,eAAe,CAAEC;AAjBrF;AAAA;AAAA;AAAA;AAAA,UADF;AAqBD;;GAjXuBhJ,4B;UAULjC,W,EACMD,W,EACAA,W,EACIA,W,EACFA,W,EACAA,W,EACHA,W,EACCA,W,EACJA,W,EACOA,W,EACIA,W,EACXA,W,EACDA,W,EACQA,W,EACFA,W,EACAA,W,EACDA,W,EA+TEA,W,EACDA,W;;;KA1VFkC,4B","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport * as utils from 'utils';\r\nimport * as Yup from 'yup';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts';\r\n\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\r\nimport { \r\n  selectLossQualifiers, \r\n  selectReferralValues,\r\n  selectComplexityValues, \r\n  selectReferralResponse,\r\n  selectBEAdjusterList, \r\n  selectPriorities, \r\n  selectClaimData, \r\n  selectClaimIdFromGrid, \r\n  selectClaimsPolicyInformation,\r\n  selectClaimBordereauPeriods, \r\n  selectClaimPolicyInsures,\r\n  selectClaimsInformation,\r\n  selectorDmsViewFiles,\r\n  selectDmsDocDetails,\r\n  selectLossId,\r\n  setBEAdjusterValue,\r\n  updateClaimantNamesSuccess,\r\n  selectAllClaimDetails,\r\n  selectSelectedBEAdjusterList,\r\n  getBEAdjuster,\r\n  getComplexityValues,\r\n  getReferralValues,\r\n  selectClaimIdUnderProgress\r\n} from 'stores';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nimport { makeStyles } from '@material-ui/core';\r\nRegisterClaimCardInformation.prototype = {\r\n  activeStep: PropTypes.number,\r\n  isAllStepsCompleted: PropTypes.bool,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  save: PropTypes.func.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n\r\nexport default function RegisterClaimCardInformation({\r\n  activeStep, \r\n  isAllStepsCompleted,\r\n  handleBack,\r\n  handleSave,\r\n  handleNext,\r\n  save,\r\n  index,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch()\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const referralValues = useSelector(selectReferralValues);\r\n  const selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\r\n  const complexityValues = useSelector(selectComplexityValues);\r\n  const referralResponse = useSelector(selectReferralResponse);\r\n  const claimantNames = useSelector(selectClaimPolicyInsures);\r\n  const beAdjusterList = useSelector(selectBEAdjusterList);\r\n  const priorities = useSelector(selectPriorities);\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\r\n  const claimRefId = useSelector(selectClaimData);\r\n  const claimData = useSelector(selectClaimIdFromGrid);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const allClaimDetails = useSelector(selectAllClaimDetails);\r\n  const savedClaimInfo = useSelector(selectClaimIdUnderProgress);\r\n  const [isBordereauChecked, setBordereauChecked] = useState(false);\r\n\r\n  const isComplexFlag = allClaimDetails?.isComplex !== 0;\r\n  const lossQualifierValue = (lossQualifiers || []).find((l) => l.id?.toString() === claimsInformation?.lossQualifierID?.toString());\r\n  const referralResponseData = referralResponse?.find((item) => item.id === savedClaimInfo?.data?.referralResponseID?.toString());\r\n  const dateDisabledLossQualifiers = lossQualifiers\r\n    .filter((item) => {\r\n      return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name);\r\n    })\r\n    .map((item) => item.id);\r\n  const complexityValue =\r\n    claimsInformation?.complexityValueID && complexityValues?.find((item) => item.complexityRulesID === claimsInformation.complexityValueID);\r\n  const referralValue =\r\n  savedClaimInfo?.data?.referralValueID && referralValues?.find((item) => item.complexityRulesID === savedClaimInfo?.data?.referralValueID);  \r\n  const checkBordereauValue = (claimBordereauPeriods) =>\r\n    claimBordereauPeriods.find((bp) => bp.name === claimsInformation?.bordereauPeriod) || null;\r\n\r\n  useEffect(() => {\r\n    dispatch(getBEAdjuster());\r\n    dispatch(getComplexityValues());\r\n    dispatch(getReferralValues());\r\n\r\n    if (claimsInformation?.bordereauPeriod) {\r\n      setBordereauChecked(true);\r\n    }\r\n  }, [claimsInformation?.bordereauPeriod]) // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  console.log(\"claimsInformation \", claimsInformation)\r\n\r\n  const fields = [\r\n    {\r\n      name: 'claimantName',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.claimant'),\r\n      options: claimantNames || [],\r\n      value : claimantNames?.[0] || null,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 50,\r\n        },\r\n        filterOptions: (options, params) => {\r\n          let filtered = createFilterOptions()(options, params);\r\n          if (params.inputValue) {\r\n            filtered = [\r\n              ...filtered,\r\n              {\r\n                id: filtered.length + 1,\r\n                name: `${utils.string.t('app.create')} - ${params.inputValue}`,\r\n              },\r\n            ];\r\n          }\r\n          return filtered;\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        const hasCreateString = `${utils.string.t('app.create')} - `;\r\n        const name = data?.name.replace(hasCreateString, '');\r\n        const alreadyExists = claimantNames.find((claim) => claim.name === name);\r\n\r\n        if (data?.name.includes(hasCreateString) && !alreadyExists) {\r\n          const newClaimantName = { id: Object.keys(claimantNames).length, name };\r\n          dispatch(updateClaimantNamesSuccess(newClaimantName));\r\n        }\r\n      },\r\n      validation: Yup.object().nullable(),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'claimReceivedDate',\r\n      label: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      icon: 'TodayIcon',\r\n      value: lossInformation.firstContactDate || null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'claimReceivedTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', { value: { date: lossInformation?.firstContactDate || null, format: 'HH:mm' } }),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      label: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation.fromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n      .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n        return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n      })\r\n      .when('$validation', (validation, schema) =>\r\n      validation\r\n        ? schema.when('lossQualifierID', {\r\n            is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n            then: Yup.date()\r\n              .required(utils.string.t('validation.required'))\r\n              .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n              .nullable()\r\n              .transform((curr, orig) => (orig === '' ? null : curr)),\r\n            otherwise: Yup.date().nullable(),\r\n          })\r\n        : Yup.date().nullable()\r\n    ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      label: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation.toDate || null,\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n      .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n        return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n      })\r\n      .when('$validation', (validation, schema) =>\r\n        validation\r\n          ? schema.when('lossQualifierID', {\r\n              is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n              then: Yup.date()\r\n                .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n                .nullable()\r\n                .transform((curr, orig) => (orig === '' ? null : curr)),\r\n              otherwise: Yup.date().nullable(),\r\n            })\r\n          : Yup.date().nullable()\r\n      ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossQualifierID',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.lossInformation.qualifier'),\r\n      value: lossQualifierValue || null,\r\n      options: lossQualifiers || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.object().required(utils.string.t('validation.required'))\r\n    },\r\n    {\r\n      name: 'location',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.location'),\r\n      value: claimsInformation.location || '',\r\n      validation: Yup.string().required(utils.string.t('validation.required')) \r\n    },\r\n    {\r\n      name: 'adjusterReference',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.adjustorRef'),\r\n      value: claimsInformation.adjusterReference || '',\r\n      validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference')),\r\n    },\r\n    {\r\n      name: 'complexity',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.complexity'),\r\n      options: complexityValues || [],\r\n      value:  complexityValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      muiComponentProps: {\r\n        disabled: isComplexFlag,\r\n      },\r\n      validation: isComplexFlag\r\n        ? Yup.object().nullable()\r\n        : Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'referral',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.referral'),\r\n      options: referralValues || [],\r\n      value:  referralValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      validation: Yup.object().when('complexity', {\r\n        is: (val) =>\r\n          complexityValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue === 'Referral Required',\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'rfiResponse',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.rfiResponse'),\r\n      options: referralResponse || [],\r\n      value: referralResponseData || null,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().when('referral', {\r\n        is: (val) => {\r\n          if (val !== null) {\r\n            const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n            const getReferralValue = referralValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue;\r\n            const refResponseState = refValuesList.includes(getReferralValue);\r\n            return !refResponseState;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'fgunarrative',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.fguNarrative'),\r\n      value: claimsInformation.fgunarrative || '',\r\n      validation: Yup.string().required(utils.string.t('validation.required'))\r\n    },\r\n    {\r\n      name: 'adjuster',\r\n      type: 'radio',\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value: !claimsInformation?.nonBEAdjusterName || !savedClaimInfo?.nonBEAdjusterName ? 'beAdjuster' : 'nonBeAdjuster',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        nestedClasses: { root: classes.adjusterRadioGroup },\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n          value: 'beAdjuster',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\r\n          value: 'nonBeAdjuster',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'beAdjuster',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value:\r\n        claimsInformation?.beAdjusterID !== 0\r\n        ? beAdjusterList.items.find(\r\n            (item) => item.id === claimsInformation?.beAdjusterID?.toString() \r\n          )\r\n        : selectedBeAdjuster || [],\r\n      options: beAdjusterList.items || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      callback: (event, data) => {\r\n        dispatch(setBEAdjusterValue(data));\r\n      },\r\n    },\r\n    {\r\n      name: 'nonBeAdjuster',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster')),\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      options: priorities || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value: priorities.length ? priorities.find((p) => p.description === 'Medium') : null,\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    ...(isBordereauChecked\r\n      ? [\r\n          {\r\n            name: 'bordereauClaim',\r\n            type: 'checkbox',\r\n            label: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n            defaultValue: Boolean(claimsInformation?.bordereauClaim),\r\n          },\r\n          {\r\n            name: 'bordereauPeriod',\r\n            type: 'autocompletemui',\r\n            label: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n            options: claimBordereauPeriods || [],\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            value: checkBordereauValue(claimBordereauPeriods),\r\n            validation: Yup.object().nullable(),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n\r\n  return (\r\n    <RegisterClaimCardInformationView\r\n      fields={fields}\r\n      claimantNames={claimantNames}\r\n      referralValues={referralValues}\r\n      lossQualifiers={lossQualifiers}\r\n      claimRefId={claimRefId}\r\n      claimData={claimData}\r\n      policyInformation={policyInformation}\r\n      complexityValues={complexityValues}\r\n      activeStep={activeStep}\r\n      isAllStepsCompleted={isAllStepsCompleted}\r\n      handleBack={handleBack}\r\n      handleSave={handleSave}\r\n      handleNext={handleNext}\r\n      save={save}\r\n      index={index}\r\n      isBordereauChecked={isBordereauChecked}\r\n      claimsDocsList={viewDocumentList?.length > 0 ? viewDocumentList : savedDmsDocList?.claimsDocDetails}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}