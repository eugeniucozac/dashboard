{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport isEmpty from 'lodash/isEmpty';\nexport var patchUserProgrammes = function patchUserProgrammes(programmesUserId, data) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/admin.actions.patchUserProgrammes',\n      message: 'Data missing for PATCH request'\n    };\n    dispatch(patchUserProgrammesRequest(data));\n    dispatch(addLoader('patchUserProgrammes'));\n\n    if (!data || isEmpty(data)) {\n      dispatch(patchUserProgrammesFailure(defaultError));\n      dispatch(enqueueNotification('notification.generic.request', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('patchQuote'));\n      return;\n    }\n\n    var path = \"api/v1/users/edge/\".concat(programmesUserId);\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: path,\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json);\n    }).then(function (data) {\n      dispatch(patchUserProgrammesSuccess(data));\n      return data;\n    }).then(function () {\n      dispatch(enqueueNotification('notification.patchUserProgrammes.success', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (admin.patchUserProgrammes)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(patchUserProgrammesFailure(err));\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('patchUserProgrammes'));\n      return;\n    });\n  };\n};\nexport var patchUserProgrammesRequest = function patchUserProgrammesRequest(formData) {\n  return {\n    type: 'USER_PROGRAMMES_PATCH_REQUEST',\n    payload: formData\n  };\n};\nexport var patchUserProgrammesSuccess = function patchUserProgrammesSuccess(responseData) {\n  return {\n    type: 'USER_PROGRAMMES_PATCH_SUCCESS',\n    payload: responseData\n  };\n};\nexport var patchUserProgrammesFailure = function patchUserProgrammesFailure(error) {\n  return {\n    type: 'USER_PROGRAMMES_PATCH_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/admin/admin.actions.patchUserProgrammes.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","isEmpty","patchUserProgrammes","programmesUserId","data","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","patchUserProgrammesRequest","patchUserProgrammesFailure","path","api","patch","token","accessToken","then","response","handleResponse","json","handleResponseJsonObject","patchUserProgrammesSuccess","catch","err","errorParams","handleError","handleUnauthorized","getErrorMessage","finally","formData","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nexport const patchUserProgrammes = (programmesUserId, data) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/admin.actions.patchUserProgrammes',\r\n    message: 'Data missing for PATCH request',\r\n  };\r\n\r\n  dispatch(patchUserProgrammesRequest(data));\r\n  dispatch(addLoader('patchUserProgrammes'));\r\n\r\n  if (!data || isEmpty(data)) {\r\n    dispatch(patchUserProgrammesFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.generic.request', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('patchQuote'));\r\n    return;\r\n  }\r\n\r\n  const path = `api/v1/users/edge/${programmesUserId}`;\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path,\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleResponseJsonObject(json))\r\n    .then((data) => {\r\n      dispatch(patchUserProgrammesSuccess(data));\r\n      return data;\r\n    })\r\n\r\n    .then(() => {\r\n      dispatch(enqueueNotification('notification.patchUserProgrammes.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (admin.patchUserProgrammes)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(patchUserProgrammesFailure(err));\r\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('patchUserProgrammes'));\r\n      return;\r\n    });\r\n};\r\n\r\nexport const patchUserProgrammesRequest = (formData) => {\r\n  return {\r\n    type: 'USER_PROGRAMMES_PATCH_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const patchUserProgrammesSuccess = (responseData) => {\r\n  return {\r\n    type: 'USER_PROGRAMMES_PATCH_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const patchUserProgrammesFailure = (error) => {\r\n  return {\r\n    type: 'USER_PROGRAMMES_PATCH_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}