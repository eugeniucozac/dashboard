{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AdministrationUserGrid\\\\AdministrationUserGrid.js\",\n    _s = $RefreshSig$();\n\n//react/redux\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport AdministrationUserGridView from './AdministrationUserGrid.view';\nimport { usePagination } from 'hooks';\nimport { selectUser } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAdministrationUserGrid.propTypes = {\n  onCreateUser: PropTypes.func,\n  confirmUserDelete: PropTypes.func,\n  users: PropTypes.array.isRequired,\n  usersPagination: PropTypes.object.isRequired,\n  usersSort: PropTypes.object.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  onSortColumn: PropTypes.func.isRequired,\n  refDataXbInstances: PropTypes.arrayOf(PropTypes.shape({\n    sourceID: PropTypes.number.isRequired,\n    sourceName: PropTypes.string.isRequired\n  })).isRequired\n};\nexport default function AdministrationUserGrid(_ref) {\n  _s();\n\n  var onCreateUser = _ref.onCreateUser,\n      confirmUserDelete = _ref.confirmUserDelete,\n      users = _ref.users,\n      usersPagination = _ref.usersPagination,\n      usersSort = _ref.usersSort,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      onSortColumn = _ref.onSortColumn,\n      refDataXbInstances = _ref.refDataXbInstances;\n  var user = useSelector(selectUser);\n  var pagination = usePagination(users, usersPagination, handleChangePage, handleChangeRowsPerPage);\n  var popoverActions = [].concat(_toConsumableArray(utils.app.access.feature('admin.user', 'update', user) ? [{\n    id: 'admin-edit-user',\n    label: 'administration.users.edit.title',\n    callback: function callback(_ref2) {\n      var user = _ref2.user;\n      return onCreateUser(user);\n    }\n  }] : []), _toConsumableArray(utils.app.access.feature('admin.user', 'delete', user) ? [{\n    id: 'admin-delete-user',\n    label: 'administration.users.delete.title',\n    callback: function callback(_ref3) {\n      var user = _ref3.user;\n      return confirmUserDelete(user);\n    }\n  }] : []));\n  return /*#__PURE__*/_jsxDEV(AdministrationUserGridView, {\n    users: users,\n    pagination: pagination.obj,\n    sort: usersSort,\n    handleChangePage: pagination.handlers.handleChangePage,\n    handleChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n    handleSortColumn: onSortColumn,\n    popoverActions: popoverActions,\n    refDataXbInstances: refDataXbInstances\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdministrationUserGrid, \"TR6yR4gIv5t4q62w+LPKdLKMQbA=\", false, function () {\n  return [useSelector, usePagination];\n});\n\n_c = AdministrationUserGrid;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdministrationUserGrid\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AdministrationUserGrid/AdministrationUserGrid.js"],"names":["React","useSelector","PropTypes","AdministrationUserGridView","usePagination","selectUser","utils","AdministrationUserGrid","propTypes","onCreateUser","func","confirmUserDelete","users","array","isRequired","usersPagination","object","usersSort","handleChangePage","handleChangeRowsPerPage","onSortColumn","refDataXbInstances","arrayOf","shape","sourceID","number","sourceName","string","user","pagination","popoverActions","app","access","feature","id","label","callback","obj","handlers"],"mappings":"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","sourcesContent":["//react/redux\r\nimport React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport AdministrationUserGridView from './AdministrationUserGrid.view';\r\nimport { usePagination } from 'hooks';\r\nimport { selectUser } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nAdministrationUserGrid.propTypes = {\r\n  onCreateUser: PropTypes.func,\r\n  confirmUserDelete: PropTypes.func,\r\n  users: PropTypes.array.isRequired,\r\n  usersPagination: PropTypes.object.isRequired,\r\n  usersSort: PropTypes.object.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  onSortColumn: PropTypes.func.isRequired,\r\n  refDataXbInstances: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      sourceID: PropTypes.number.isRequired,\r\n      sourceName: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n};\r\n\r\nexport default function AdministrationUserGrid({\r\n  onCreateUser,\r\n  confirmUserDelete,\r\n  users,\r\n  usersPagination,\r\n  usersSort,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  onSortColumn,\r\n  refDataXbInstances,\r\n}) {\r\n  const user = useSelector(selectUser);\r\n  const pagination = usePagination(users, usersPagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  const popoverActions = [\r\n    ...(utils.app.access.feature('admin.user', 'update', user)\r\n      ? [\r\n          {\r\n            id: 'admin-edit-user',\r\n            label: 'administration.users.edit.title',\r\n            callback: ({ user }) => onCreateUser(user),\r\n          },\r\n        ]\r\n      : []),\r\n    ...(utils.app.access.feature('admin.user', 'delete', user)\r\n      ? [\r\n          {\r\n            id: 'admin-delete-user',\r\n            label: 'administration.users.delete.title',\r\n            callback: ({ user }) => confirmUserDelete(user),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  return (\r\n    <AdministrationUserGridView\r\n      users={users}\r\n      pagination={pagination.obj}\r\n      sort={usersSort}\r\n      handleChangePage={pagination.handlers.handleChangePage}\r\n      handleChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n      handleSortColumn={onSortColumn}\r\n      popoverActions={popoverActions}\r\n      refDataXbInstances={refDataXbInstances}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}