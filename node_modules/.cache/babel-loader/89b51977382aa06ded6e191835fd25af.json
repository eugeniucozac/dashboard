{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DrawerComponent\\\\DrawerComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './DrawerComponent.styles';\nimport { setDmsWidgetExpand } from 'stores'; // mui\n\nimport { makeStyles, Drawer, Divider, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDrawerComponent.propTypes = {\n  isDrawerOpen: PropTypes.bool.isRequired,\n  isFromDashboard: PropTypes.bool\n};\nexport default function DrawerComponent(_ref) {\n  _s();\n\n  var _classnames, _classnames2, _classnames3;\n\n  var isDrawerOpen = _ref.isDrawerOpen,\n      children = _ref.children,\n      isFromDashboard = _ref.isFromDashboard;\n  var classes = makeStyles(styles, {\n    name: 'DrawerComponent'\n  })({\n    isFromDashboard: isFromDashboard\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDrawerExpanded = _useState2[0],\n      setIsDrawerExpanded = _useState2[1];\n\n  var handleArrowClick = function handleArrowClick() {\n    setIsDrawerExpanded(!isDrawerExpanded);\n  };\n\n  useEffect(function () {\n    dispatch(setDmsWidgetExpand(isDrawerExpanded));\n  }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: isDrawerOpen,\n    classes: {\n      paper: classnames((_classnames = {}, _defineProperty(_classnames, classes.drawer, true), _defineProperty(_classnames, classes.drawerExpanded, isDrawerExpanded), _classnames))\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open\",\n      edge: \"start\",\n      disableRipple: true,\n      disableFocusRipple: true,\n      onClick: handleArrowClick,\n      className: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.button, true), _defineProperty(_classnames2, classes.buttonExpanded, isDrawerExpanded), _classnames2)),\n      children: [isDrawerExpanded ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {\n        className: classnames((_classnames3 = {}, _defineProperty(_classnames3, classes.iconArrow, true), _defineProperty(_classnames3, classes.iconArrowExpanded, isDrawerExpanded), _classnames3))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 11\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {\n        className: classes.iconArrow\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 11\n      }, this), isDrawerExpanded ? null : /*#__PURE__*/_jsxDEV(DescriptionIcon, {\n        className: classes.iconDocument\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawerComponent, \"4xtZbPBUH5IcjUZEOZ00UBSq4iU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DrawerComponent;\nDrawerComponent.displayName = \"DrawerComponent\";\nDrawerComponent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DrawerComponent\",\n  \"props\": {\n    \"isDrawerOpen\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isFromDashboard\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\DrawerComponent\\\\DrawerComponent.js\"] = {\n    name: \"DrawerComponent\",\n    docgenInfo: DrawerComponent.__docgenInfo,\n    path: \"src\\\\components\\\\DrawerComponent\\\\DrawerComponent.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerComponent\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DrawerComponent/DrawerComponent.js"],"names":["React","useState","useEffect","useDispatch","PropTypes","classnames","styles","setDmsWidgetExpand","makeStyles","Drawer","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","DescriptionIcon","DrawerComponent","propTypes","isDrawerOpen","bool","isRequired","isFromDashboard","children","classes","name","dispatch","isDrawerExpanded","setIsDrawerExpanded","handleArrowClick","paper","drawer","drawerExpanded","button","buttonExpanded","iconArrow","iconArrowExpanded","iconDocument"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './DrawerComponent.styles';\r\nimport { setDmsWidgetExpand } from 'stores';\r\n\r\n// mui\r\nimport { makeStyles, Drawer, Divider, IconButton } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nDrawerComponent.propTypes = {\r\n  isDrawerOpen: PropTypes.bool.isRequired,\r\n  isFromDashboard: PropTypes.bool,\r\n};\r\n\r\nexport default function DrawerComponent({ isDrawerOpen, children, isFromDashboard }) {\r\n  const classes = makeStyles(styles, { name: 'DrawerComponent' })({ isFromDashboard });\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [isDrawerExpanded, setIsDrawerExpanded] = useState(false);\r\n\r\n  const handleArrowClick = () => {\r\n    setIsDrawerExpanded(!isDrawerExpanded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsWidgetExpand(isDrawerExpanded));\r\n  }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      anchor=\"right\"\r\n      open={isDrawerOpen}\r\n      classes={{\r\n        paper: classnames({\r\n          [classes.drawer]: true,\r\n          [classes.drawerExpanded]: isDrawerExpanded,\r\n        }),\r\n      }}\r\n    >\r\n      <IconButton\r\n        color=\"inherit\"\r\n        aria-label=\"open\"\r\n        edge=\"start\"\r\n        disableRipple\r\n        disableFocusRipple\r\n        onClick={handleArrowClick}\r\n        className={classnames({\r\n          [classes.button]: true,\r\n          [classes.buttonExpanded]: isDrawerExpanded,\r\n        })}\r\n      >\r\n        {isDrawerExpanded ? (\r\n          <ChevronRightIcon\r\n            className={classnames({\r\n              [classes.iconArrow]: true,\r\n              [classes.iconArrowExpanded]: isDrawerExpanded,\r\n            })}\r\n          />\r\n        ) : (\r\n          <ChevronLeftIcon className={classes.iconArrow} />\r\n        )}\r\n        {isDrawerExpanded ? null : <DescriptionIcon className={classes.iconDocument} />}\r\n      </IconButton>\r\n      <Divider />\r\n      {children}\r\n    </Drawer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}