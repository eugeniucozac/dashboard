{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TripSummary\\\\TripSummary.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport pick from 'lodash/pick';\nimport get from 'lodash/get'; // app\n\nimport { TripSummaryView } from './TripSummary.view';\nimport { editTripDetails, editTripVisit, postTrip, putTrip, toggleTripVisit, showModal } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TripSummary() {\n  _s();\n\n  var media = useMedia();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var trip = useSelector(function (store) {\n    return get(store, 'trip.selected') || {};\n  });\n  var tripEditing = useSelector(function (store) {\n    return get(store, 'trip.selected.editing');\n  });\n  var tripTitle = useSelector(function (store) {\n    return tripEditing ? get(store, 'trip.editingInProgress.title') : get(store, 'trip.selected.title');\n  });\n  var tripVisits = useSelector(function (store) {\n    return tripEditing ? get(store, 'trip.editingInProgress.visits') : get(store, 'trip.selected.visits', []);\n  });\n\n  var _useState = useState({\n    maxZoom: 12,\n    activeMarkers: []\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      map = _useState2[0],\n      setMap = _useState2[1];\n\n  var _useState3 = useState({\n    title: false\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inlineEditingFields = _useState4[0],\n      setInlineEditingFields = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      locations = _useState6[0],\n      setLocations = _useState6[1];\n\n  useEffect(function () {\n    // abort\n    if (!utils.generic.isValidArray(tripVisits, true)) {\n      return;\n    }\n\n    setLocations(tripVisits.map(function (visit) {\n      return _objectSpread(_objectSpread({}, visit), pick(get(visit, 'location.geocodeResult', {}), ['lat', 'lng', 'outputAddress', 'locationsFound']));\n    }));\n  }, [tripVisits]); // when the selected trip changes, reset the inline editing to false\n\n  useEffect(function () {\n    setInlineEditingFields({\n      title: false\n    });\n  }, [trip.id]);\n\n  var handleClickMarker = function handleClickMarker(location) {\n    if (!location || !location.id) return;\n    setMap(_objectSpread(_objectSpread({}, map), {}, {\n      activeMarkers: [location.id]\n    }));\n  };\n\n  var handleClickLead = function handleClickLead(lead) {\n    return function (event) {\n      var marker = map.markers.find(function (m) {\n        return m.location.id === lead.id;\n      }); // trigger on marker click to initiate the map flyTo/zoom animation and open popup if defined\n\n      if (marker && marker.getElement()) {\n        marker.getElement().click();\n      }\n    };\n  };\n\n  var handleClickEditTitle = function handleClickEditTitle(event) {\n    setInlineEditingFields(_objectSpread(_objectSpread({}, inlineEditingFields), {}, {\n      title: true\n    }));\n  };\n\n  var handleClickAwayEditTitle = function handleClickAwayEditTitle(value, error, dirty, validateForm, submitForm, setFieldValue, inlineEditMode) {\n    return function (event) {\n      var isTitleIdentical = tripTitle === value;\n      var newValue = value ? value.trim() : ''; // if no change were made: do nothing (except reset inline edit)\n\n      if (isTitleIdentical) {\n        if (inlineEditMode) {\n          setInlineEditingFields(_objectSpread(_objectSpread({}, inlineEditingFields), {}, {\n            title: false\n          }));\n        }\n\n        return;\n      } // in create mode, save all changes to trip title\n\n\n      if (!inlineEditMode) {\n        setFieldValue('title', newValue);\n        dispatch(editTripDetails({\n          title: newValue\n        }));\n      } // in edit mode, only save changes (and reset inline editing) if there's no error\n\n\n      if (inlineEditMode && !error) {\n        setFieldValue('title', newValue);\n        dispatch(editTripDetails({\n          title: newValue\n        }));\n        setInlineEditingFields(_objectSpread(_objectSpread({}, inlineEditingFields), {}, {\n          title: false\n        }));\n        dispatch(putTrip());\n      } // trigger form validation to display\n\n\n      if (dirty && error && utils.generic.isFunction(submitForm)) {\n        submitForm();\n      }\n    };\n  };\n\n  var handleEditVisit = function handleEditVisit(data, inlineEditMode) {\n    if (!data) return;\n    dispatch(editTripVisit(data));\n\n    if (inlineEditMode) {\n      dispatch(putTrip());\n    }\n  };\n\n  var handleClickRemoveVisit = function handleClickRemoveVisit(_ref) {\n    var visit = _ref.visit,\n        inlineEditMode = _ref.inlineEditMode;\n    if (!visit || !visit.id) return;\n    dispatch(toggleTripVisit(visit));\n\n    if (inlineEditMode) {\n      dispatch(putTrip());\n    }\n  };\n\n  var handleEditBrokersClick = function handleEditBrokersClick(popoverData) {\n    dispatch(showModal({\n      component: 'EDIT_TRIP_BROKERS',\n      props: {\n        title: 'opportunity.addRemoveBrokers',\n        subtitle: utils.string.t('opportunity.addRemoveBrokersHint', {\n          visit: get(popoverData, 'visit.client.name')\n        }),\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: _objectSpread({}, popoverData)\n      }\n    }));\n  };\n\n  var handleSaveTrip = function handleSaveTrip(inlineEditMode) {\n    var saveMethod = inlineEditMode ? putTrip : postTrip;\n    dispatch(saveMethod()).then(function () {\n      history.push(config.routes.trip.root);\n    });\n  };\n\n  var handleSubmit = function handleSubmit(submitForm, validateForm) {\n    return function () {\n      var allVisitsHaveUsers = tripVisits.every(function (visit) {\n        return utils.generic.isValidArray(visit.users, true);\n      });\n\n      if (allVisitsHaveUsers) {\n        submitForm();\n      } else {\n        validateForm();\n      }\n    };\n  };\n\n  var handleOnLoad = function handleOnLoad(instance, _ref2) {\n    var markers = _ref2.markers;\n    if (!instance || !markers) return;\n    setMap(_objectSpread(_objectSpread({}, map), {}, {\n      instance: instance,\n      markers: markers\n    }));\n  };\n\n  var handleOnChange = function handleOnChange(markers) {\n    if (!markers) return;\n    setMap(_objectSpread(_objectSpread({}, map), {}, {\n      markers: markers\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TripSummaryView, {\n    trip: _objectSpread(_objectSpread({}, trip), {}, {\n      title: tripTitle\n    }),\n    visits: locations,\n    map: map,\n    isExisting: Boolean(trip && trip.id),\n    inlineEditMode: !trip.editing,\n    inlineEditingFields: inlineEditingFields,\n    mobile: media.mobile,\n    tablet: media.tablet,\n    desktop: media.desktop,\n    wide: media.wide,\n    handleClickLead: handleClickLead,\n    handleClickMarker: handleClickMarker,\n    handleEditVisit: handleEditVisit,\n    handleClickRemoveVisit: handleClickRemoveVisit,\n    handleEditBrokersClick: handleEditBrokersClick,\n    handleClickEditTitle: handleClickEditTitle,\n    handleClickAwayEditTitle: handleClickAwayEditTitle,\n    handleSaveTrip: handleSaveTrip,\n    handleSubmit: handleSubmit,\n    handleOnLoad: handleOnLoad,\n    handleOnChange: handleOnChange\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TripSummary, \"7B90gLdPCjQLm5DAYt7ll534NPw=\", false, function () {\n  return [useMedia, useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = TripSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"TripSummary\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TripSummary/TripSummary.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","pick","get","TripSummaryView","editTripDetails","editTripVisit","postTrip","putTrip","toggleTripVisit","showModal","useMedia","utils","config","TripSummary","media","history","dispatch","trip","store","tripEditing","tripTitle","tripVisits","maxZoom","activeMarkers","map","setMap","title","inlineEditingFields","setInlineEditingFields","locations","setLocations","generic","isValidArray","visit","id","handleClickMarker","location","handleClickLead","lead","event","marker","markers","find","m","getElement","click","handleClickEditTitle","handleClickAwayEditTitle","value","error","dirty","validateForm","submitForm","setFieldValue","inlineEditMode","isTitleIdentical","newValue","trim","isFunction","handleEditVisit","data","handleClickRemoveVisit","handleEditBrokersClick","popoverData","component","props","subtitle","string","t","fullWidth","maxWidth","componentProps","handleSaveTrip","saveMethod","then","push","routes","root","handleSubmit","allVisitsHaveUsers","every","users","handleOnLoad","instance","handleOnChange","Boolean","editing","mobile","tablet","desktop","wide"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport pick from 'lodash/pick';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { TripSummaryView } from './TripSummary.view';\r\nimport { editTripDetails, editTripVisit, postTrip, putTrip, toggleTripVisit, showModal } from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function TripSummary() {\r\n  const media = useMedia();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const trip = useSelector((store) => get(store, 'trip.selected') || {});\r\n  const tripEditing = useSelector((store) => get(store, 'trip.selected.editing'));\r\n  const tripTitle = useSelector((store) => (tripEditing ? get(store, 'trip.editingInProgress.title') : get(store, 'trip.selected.title')));\r\n  const tripVisits = useSelector((store) =>\r\n    tripEditing ? get(store, 'trip.editingInProgress.visits') : get(store, 'trip.selected.visits', [])\r\n  );\r\n\r\n  const [map, setMap] = useState({\r\n    maxZoom: 12,\r\n    activeMarkers: [],\r\n  });\r\n\r\n  const [inlineEditingFields, setInlineEditingFields] = useState({ title: false });\r\n  const [locations, setLocations] = useState([]);\r\n\r\n  useEffect(() => {\r\n    // abort\r\n    if (!utils.generic.isValidArray(tripVisits, true)) {\r\n      return;\r\n    }\r\n\r\n    setLocations(\r\n      tripVisits.map((visit) => {\r\n        return {\r\n          ...visit,\r\n          ...pick(get(visit, 'location.geocodeResult', {}), ['lat', 'lng', 'outputAddress', 'locationsFound']),\r\n        };\r\n      })\r\n    );\r\n  }, [tripVisits]);\r\n\r\n  // when the selected trip changes, reset the inline editing to false\r\n  useEffect(() => {\r\n    setInlineEditingFields({ title: false });\r\n  }, [trip.id]);\r\n\r\n  const handleClickMarker = (location) => {\r\n    if (!location || !location.id) return;\r\n\r\n    setMap({ ...map, activeMarkers: [location.id] });\r\n  };\r\n\r\n  const handleClickLead = (lead) => (event) => {\r\n    const marker = map.markers.find((m) => {\r\n      return m.location.id === lead.id;\r\n    });\r\n\r\n    // trigger on marker click to initiate the map flyTo/zoom animation and open popup if defined\r\n    if (marker && marker.getElement()) {\r\n      marker.getElement().click();\r\n    }\r\n  };\r\n\r\n  const handleClickEditTitle = (event) => {\r\n    setInlineEditingFields({\r\n      ...inlineEditingFields,\r\n      title: true,\r\n    });\r\n  };\r\n\r\n  const handleClickAwayEditTitle = (value, error, dirty, validateForm, submitForm, setFieldValue, inlineEditMode) => (event) => {\r\n    const isTitleIdentical = tripTitle === value;\r\n    const newValue = value ? value.trim() : '';\r\n\r\n    // if no change were made: do nothing (except reset inline edit)\r\n    if (isTitleIdentical) {\r\n      if (inlineEditMode) {\r\n        setInlineEditingFields({ ...inlineEditingFields, title: false });\r\n      }\r\n\r\n      return;\r\n    }\r\n\r\n    // in create mode, save all changes to trip title\r\n    if (!inlineEditMode) {\r\n      setFieldValue('title', newValue);\r\n      dispatch(editTripDetails({ title: newValue }));\r\n    }\r\n\r\n    // in edit mode, only save changes (and reset inline editing) if there's no error\r\n    if (inlineEditMode && !error) {\r\n      setFieldValue('title', newValue);\r\n      dispatch(editTripDetails({ title: newValue }));\r\n\r\n      setInlineEditingFields({\r\n        ...inlineEditingFields,\r\n        title: false,\r\n      });\r\n\r\n      dispatch(putTrip());\r\n    }\r\n\r\n    // trigger form validation to display\r\n    if (dirty && error && utils.generic.isFunction(submitForm)) {\r\n      submitForm();\r\n    }\r\n  };\r\n\r\n  const handleEditVisit = (data, inlineEditMode) => {\r\n    if (!data) return;\r\n\r\n    dispatch(editTripVisit(data));\r\n\r\n    if (inlineEditMode) {\r\n      dispatch(putTrip());\r\n    }\r\n  };\r\n\r\n  const handleClickRemoveVisit = ({ visit, inlineEditMode }) => {\r\n    if (!visit || !visit.id) return;\r\n\r\n    dispatch(toggleTripVisit(visit));\r\n\r\n    if (inlineEditMode) {\r\n      dispatch(putTrip());\r\n    }\r\n  };\r\n\r\n  const handleEditBrokersClick = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_TRIP_BROKERS',\r\n        props: {\r\n          title: 'opportunity.addRemoveBrokers',\r\n          subtitle: utils.string.t('opportunity.addRemoveBrokersHint', { visit: get(popoverData, 'visit.client.name') }),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: { ...popoverData },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSaveTrip = (inlineEditMode) => {\r\n    const saveMethod = inlineEditMode ? putTrip : postTrip;\r\n\r\n    dispatch(saveMethod()).then(() => {\r\n      history.push(config.routes.trip.root);\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (submitForm, validateForm) => () => {\r\n    const allVisitsHaveUsers = tripVisits.every((visit) => {\r\n      return utils.generic.isValidArray(visit.users, true);\r\n    });\r\n\r\n    if (allVisitsHaveUsers) {\r\n      submitForm();\r\n    } else {\r\n      validateForm();\r\n    }\r\n  };\r\n\r\n  const handleOnLoad = (instance, { markers }) => {\r\n    if (!instance || !markers) return;\r\n\r\n    setMap({ ...map, instance, markers });\r\n  };\r\n\r\n  const handleOnChange = (markers) => {\r\n    if (!markers) return;\r\n\r\n    setMap({ ...map, markers });\r\n  };\r\n\r\n  return (\r\n    <TripSummaryView\r\n      trip={{\r\n        ...trip,\r\n        title: tripTitle,\r\n      }}\r\n      visits={locations}\r\n      map={map}\r\n      isExisting={Boolean(trip && trip.id)}\r\n      inlineEditMode={!trip.editing}\r\n      inlineEditingFields={inlineEditingFields}\r\n      mobile={media.mobile}\r\n      tablet={media.tablet}\r\n      desktop={media.desktop}\r\n      wide={media.wide}\r\n      handleClickLead={handleClickLead}\r\n      handleClickMarker={handleClickMarker}\r\n      handleEditVisit={handleEditVisit}\r\n      handleClickRemoveVisit={handleClickRemoveVisit}\r\n      handleEditBrokersClick={handleEditBrokersClick}\r\n      handleClickEditTitle={handleClickEditTitle}\r\n      handleClickAwayEditTitle={handleClickAwayEditTitle}\r\n      handleSaveTrip={handleSaveTrip}\r\n      handleSubmit={handleSubmit}\r\n      handleOnLoad={handleOnLoad}\r\n      handleOnChange={handleOnChange}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}