{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { authLogout, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nimport has from 'lodash/has';\nexport var editPlacementConfig = function editPlacementConfig(data) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        _getState$placement$s = _getState.placement.selected,\n        selected = _getState$placement$s === void 0 ? {} : _getState$placement$s;\n\n    var defaultError = {\n      file: 'stores/placement.actions.editPlacementConfig',\n      message: 'Data missing for PATCH request'\n    };\n    dispatch(editPlacementConfigRequest(data));\n\n    if (!data || !selected.id || !has(data, 'mudmap') && !has(data, 'capacity') && !has(data, 'visibleToCobrokers')) {\n      dispatch(editPlacementConfigFailure(defaultError));\n      dispatch(enqueueNotification('notification.editPlacementConfig.fail', 'error'));\n      return;\n    }\n\n    var body = {\n      config: JSON.stringify(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, selected.config || {}), has(data, 'mudmap') ? {\n        mudmap: data.mudmap\n      } : {}), has(data, 'capacity') ? {\n        capacity: data.capacity\n      } : {}), has(data, 'visibleToCobrokers') ? {\n        visibleToCobrokers: data.visibleToCobrokers\n      } : {}))\n    };\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placement/\".concat(selected.id),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(editPlacementConfigSuccess(data));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API patch error (placement.editPlacementConfig)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(editPlacementConfigFailure(err));\n      dispatch(enqueueNotification('notification.editPlacementConfig.fail', 'error'));\n      return err;\n    });\n  };\n};\nexport var editPlacementConfigRequest = function editPlacementConfigRequest(data) {\n  return {\n    type: 'PLACEMENT_EDIT_CONFIG_REQUEST',\n    payload: data\n  };\n};\nexport var editPlacementConfigSuccess = function editPlacementConfigSuccess(data) {\n  return {\n    type: 'PLACEMENT_EDIT_CONFIG_SUCCESS',\n    payload: data\n  };\n};\nexport var editPlacementConfigFailure = function editPlacementConfigFailure(error) {\n  return {\n    type: 'PLACEMENT_EDIT_CONFIG_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.editConfig.js"],"names":["authLogout","enqueueNotification","utils","has","editPlacementConfig","data","dispatch","getState","auth","user","endpoint","config","vars","placement","selected","defaultError","file","message","editPlacementConfigRequest","id","editPlacementConfigFailure","body","JSON","stringify","mudmap","capacity","visibleToCobrokers","api","patch","token","accessToken","edge","path","then","response","handleResponse","json","handleData","editPlacementConfigSuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["// app\r\nimport { authLogout, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\nimport has from 'lodash/has';\r\n\r\nexport const editPlacementConfig = (data) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}, placement: { selected = {} }} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.editPlacementConfig',\r\n    message: 'Data missing for PATCH request',\r\n  };\r\n\r\n  dispatch(editPlacementConfigRequest(data));\r\n\r\n  if (!data || !selected.id || (!has(data, 'mudmap') && !has(data, 'capacity') && !has(data, 'visibleToCobrokers'))) {\r\n    dispatch(editPlacementConfigFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.editPlacementConfig.fail', 'error'));\r\n    return;\r\n  }\r\n\r\n  const body = {\r\n    config: JSON.stringify({\r\n      ...(selected.config || {}),\r\n      ...(has(data, 'mudmap') ? { mudmap: data.mudmap } : {}),\r\n      ...(has(data, 'capacity') ? { capacity: data.capacity } : {}),\r\n      ...(has(data, 'visibleToCobrokers') ? { visibleToCobrokers: data.visibleToCobrokers } : {}),\r\n    }),\r\n  };\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placement/${selected.id}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(editPlacementConfigSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API patch error (placement.editPlacementConfig)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(editPlacementConfigFailure(err));\r\n      dispatch(enqueueNotification('notification.editPlacementConfig.fail', 'error'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const editPlacementConfigRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_CONFIG_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editPlacementConfigSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_CONFIG_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editPlacementConfigFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_CONFIG_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}