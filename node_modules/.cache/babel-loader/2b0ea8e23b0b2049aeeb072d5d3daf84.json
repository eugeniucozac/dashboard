{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossClaimsTasksDashboard\\\\LossClaimsTasksDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { LossClaimsTasksDashboardView } from './LossClaimsTasksDashboard.view';\nimport { setFnolSelectedTab } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossClaimsTasksDashboard() {\n  _s();\n\n  var params = useParams();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var tabs = [{\n    value: 'losses',\n    label: utils.string.t('claims.lossClaimsTasksDashboard.losses')\n  }, {\n    value: 'claims',\n    label: utils.string.t('claims.lossClaimsTasksDashboard.claims')\n  }, {\n    value: 'tasks',\n    label: utils.string.t('claims.lossClaimsTasksDashboard.tasks')\n  }, {\n    value: 'reports',\n    label: utils.string.t('claims.lossClaimsTasksDashboard.reports')\n  }, {\n    value: 'advanceSearch',\n    label: utils.string.t('claims.lossClaimsTasksDashboard.advanceSearch')\n  }];\n  var isValidTabUrl = (params === null || params === void 0 ? void 0 : params.tabDashboard) && tabs.map(function (t) {\n    return t.value;\n  }).includes(params.tabDashboard);\n\n  var _useState = useState(isValidTabUrl ? params.tabDashboard : 'losses'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  useEffect(function () {\n    dispatch(setFnolSelectedTab(''));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n    history.push(\"\".concat(config.routes.claimsFNOL.root, \"/tab/\").concat(tabName));\n    dispatch(setFnolSelectedTab(tabName));\n  };\n\n  return /*#__PURE__*/_jsxDEV(LossClaimsTasksDashboardView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    handleSelectTab: handleSelectTab\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 10\n  }, this);\n}\n\n_s(LossClaimsTasksDashboard, \"eUbNzHDDfrmYXacy5fsZ+JAACKM=\", false, function () {\n  return [useParams, useHistory, useDispatch];\n});\n\n_c = LossClaimsTasksDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossClaimsTasksDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossClaimsTasksDashboard/LossClaimsTasksDashboard.js"],"names":["React","useState","useEffect","useParams","useHistory","useDispatch","LossClaimsTasksDashboardView","setFnolSelectedTab","utils","config","LossClaimsTasksDashboard","params","history","dispatch","tabs","value","label","string","t","isValidTabUrl","tabDashboard","map","includes","selectedTab","setSelectedTab","handleSelectTab","tabName","push","routes","claimsFNOL","root"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,SAAT,EAAoBC,UAApB,QAAsC,cAAtC;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,4BAAT,QAA6C,iCAA7C;AACA,SAASC,kBAAT,QAAmC,QAAnC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;AAEA,eAAe,SAASC,wBAAT,GAAoC;AAAA;;AACjD,MAAMC,MAAM,GAAGR,SAAS,EAAxB;AACA,MAAMS,OAAO,GAAGR,UAAU,EAA1B;AACA,MAAMS,QAAQ,GAAGR,WAAW,EAA5B;AAEA,MAAMS,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,wCAAf;AAA1B,GADW,EAEX;AAAEH,IAAAA,KAAK,EAAE,QAAT;AAAmBC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,wCAAf;AAA1B,GAFW,EAGX;AAAEH,IAAAA,KAAK,EAAE,OAAT;AAAkBC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,uCAAf;AAAzB,GAHW,EAIX;AAAEH,IAAAA,KAAK,EAAE,SAAT;AAAoBC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,yCAAf;AAA3B,GAJW,EAKX;AAAEH,IAAAA,KAAK,EAAE,eAAT;AAA0BC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,+CAAf;AAAjC,GALW,CAAb;AAQA,MAAMC,aAAa,GAAG,CAAAR,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,YAAR,KAAwBN,IAAI,CAACO,GAAL,CAAS,UAACH,CAAD;AAAA,WAAOA,CAAC,CAACH,KAAT;AAAA,GAAT,EAAyBO,QAAzB,CAAkCX,MAAM,CAACS,YAAzC,CAA9C;;AAbiD,kBAeXnB,QAAQ,CAACkB,aAAa,GAAGR,MAAM,CAACS,YAAV,GAAyB,QAAvC,CAfG;AAAA;AAAA,MAe1CG,WAf0C;AAAA,MAe7BC,cAf6B;;AAiBjDtB,EAAAA,SAAS,CAAC,YAAM;AACdW,IAAAA,QAAQ,CAACN,kBAAkB,CAAC,EAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAjBiD,CAmBzC;;AAER,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;AACnCF,IAAAA,cAAc,CAACE,OAAD,CAAd;AACAd,IAAAA,OAAO,CAACe,IAAR,WAAgBlB,MAAM,CAACmB,MAAP,CAAcC,UAAd,CAAyBC,IAAzC,kBAAqDJ,OAArD;AACAb,IAAAA,QAAQ,CAACN,kBAAkB,CAACmB,OAAD,CAAnB,CAAR;AACD,GAJD;;AAMA,sBAAO,QAAC,4BAAD;AAA8B,IAAA,IAAI,EAAEZ,IAApC;AAA0C,IAAA,WAAW,EAAES,WAAvD;AAAoE,IAAA,eAAe,EAAEE;AAArF;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA5BuBf,wB;UACPP,S,EACCC,U,EACCC,W;;;KAHKK,wB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { LossClaimsTasksDashboardView } from './LossClaimsTasksDashboard.view';\r\nimport { setFnolSelectedTab } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function LossClaimsTasksDashboard() {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const tabs = [\r\n    { value: 'losses', label: utils.string.t('claims.lossClaimsTasksDashboard.losses') },\r\n    { value: 'claims', label: utils.string.t('claims.lossClaimsTasksDashboard.claims') },\r\n    { value: 'tasks', label: utils.string.t('claims.lossClaimsTasksDashboard.tasks') },\r\n    { value: 'reports', label: utils.string.t('claims.lossClaimsTasksDashboard.reports') },\r\n    { value: 'advanceSearch', label: utils.string.t('claims.lossClaimsTasksDashboard.advanceSearch') },\r\n  ];\r\n\r\n  const isValidTabUrl = params?.tabDashboard && tabs.map((t) => t.value).includes(params.tabDashboard);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(isValidTabUrl ? params.tabDashboard : 'losses');\r\n\r\n  useEffect(() => {\r\n    dispatch(setFnolSelectedTab(''));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n    history.push(`${config.routes.claimsFNOL.root}/tab/${tabName}`);\r\n    dispatch(setFnolSelectedTab(tabName));\r\n  };\r\n\r\n  return <LossClaimsTasksDashboardView tabs={tabs} selectedTab={selectedTab} handleSelectTab={handleSelectTab} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}