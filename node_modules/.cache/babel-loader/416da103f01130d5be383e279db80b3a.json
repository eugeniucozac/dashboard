{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Breadcrumb, Layout, SectionHeader, Tabs } from 'components';\nimport { RfiDetails, ClaimsUploadViewSearchDocs } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { Divider } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRfiDashboardView.propTypes = {\n  task: PropTypes.object.isRequired,\n  tabs: PropTypes.array.isRequired,\n  queryCodeList: PropTypes.array.isRequired,\n  rfiHistory: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string\n  })).isRequired,\n  handleSelectTab: PropTypes.func.isRequired,\n  handleViewClaimClick: PropTypes.func.isRequired\n};\nexport function RfiDashboardView(_ref) {\n  var task = _ref.task,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      breadcrumbs = _ref.breadcrumbs,\n      handleSelectTab = _ref.handleSelectTab,\n      handleViewClaimClick = _ref.handleViewClaimClick,\n      queryCodeList = _ref.queryCodeList,\n      rfiHistory = _ref.rfiHistory;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs,\n      testid: \"rfi-dashboard\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"rfi-dashboard\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: utils.string.t('claims.processing.rfi.title', {\n            id: task.taskRef\n          }),\n          icon: DescriptionIcon,\n          testid: \"task-ref-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handleSelectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this), selectedTab === 'rfiDetails' && /*#__PURE__*/_jsxDEV(RfiDetails, {\n          taskObj: task,\n          queryCodeList: queryCodeList,\n          rfiHistory: rfiHistory,\n          handleViewClaimClick: handleViewClaimClick\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), selectedTab === 'documents' && /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: task,\n          refIdName: constants.DMS_CONTEXT_TASK_ID,\n          dmsContext: constants.DMS_CONTEXT_TASK,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = RfiDashboardView;\nRfiDashboardView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"RfiDashboardView\",\n  \"props\": {\n    \"task\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"tabs\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"queryCodeList\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"rfiHistory\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"breadcrumbs\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"name\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"link\": {\n              \"name\": \"string\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleSelectTab\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleViewClaimClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.view.js\"] = {\n    name: \"RfiDashboardView\",\n    docgenInfo: RfiDashboardView.__docgenInfo,\n    path: \"src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/RfiDashboard/RfiDashboard.view.js"],"names":["React","PropTypes","Breadcrumb","Layout","SectionHeader","Tabs","RfiDetails","ClaimsUploadViewSearchDocs","utils","constants","Divider","DescriptionIcon","RfiDashboardView","propTypes","task","object","isRequired","tabs","array","queryCodeList","rfiHistory","selectedTab","string","breadcrumbs","arrayOf","shape","name","label","link","handleSelectTab","func","handleViewClaimClick","t","id","taskRef","tabName","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","claims"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Breadcrumb, Layout, SectionHeader, Tabs } from 'components';\r\nimport { RfiDetails, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Divider } from '@material-ui/core';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nRfiDashboardView.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  tabs: PropTypes.array.isRequired,\r\n  queryCodeList: PropTypes.array.isRequired,\r\n  rfiHistory: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  handleSelectTab: PropTypes.func.isRequired,\r\n  handleViewClaimClick: PropTypes.func.isRequired,\r\n};\r\nexport function RfiDashboardView({\r\n  task,\r\n  tabs,\r\n  selectedTab,\r\n  breadcrumbs,\r\n  handleSelectTab,\r\n  handleViewClaimClick,\r\n  queryCodeList,\r\n  rfiHistory,\r\n}) {\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} testid=\"rfi-dashboard\" />\r\n      <Divider />\r\n\r\n      <Layout testid=\"rfi-dashboard\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={utils.string.t('claims.processing.rfi.title', { id: task.taskRef })}\r\n            icon={DescriptionIcon}\r\n            testid=\"task-ref-header\"\r\n          ></SectionHeader>\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n\r\n          {/* tabs content */}\r\n          {selectedTab === 'rfiDetails' && (\r\n            <RfiDetails taskObj={task} queryCodeList={queryCodeList} rfiHistory={rfiHistory} handleViewClaimClick={handleViewClaimClick} />\r\n          )}\r\n          {selectedTab === 'documents' && (\r\n            <ClaimsUploadViewSearchDocs\r\n              refData={task}\r\n              refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n              dmsContext={constants.DMS_CONTEXT_TASK}\r\n              documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims}\r\n            />\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}