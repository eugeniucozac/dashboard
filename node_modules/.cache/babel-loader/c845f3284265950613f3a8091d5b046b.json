{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsList\\\\ClaimsList.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types'; //app\n\nimport { ClaimsListView } from './ClaimsList.view';\nimport { useFlexiColumns } from 'hooks';\nimport { getClaims, resetClaims, selectClaims, selectClaimsStatuses, updateClaimLossFilters, postClaimsLossFilters, resetClaimLossFilters, getStatuses } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport * as utils from 'utils';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsList.prototypes = {\n  handleCreateClaim: PropTypes.func.isRequired\n};\nexport default function ClaimsList(_ref) {\n  _s();\n\n  var _claims$filters, _claims$filters2, _claims$filters3, _claims$filters4, _claims$filters5, _claims$filters6, _claims$filters7;\n\n  var handleCreateClaim = _ref.handleCreateClaim;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchorEl = _useState4[0],\n      setAnchorEl = _useState4[1];\n\n  var claims = useSelector(selectClaims);\n  var claimsStatuses = useSelector(selectClaimsStatuses);\n  var defaultFormFields = [{\n    name: 'lossDateFrom',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'lossDateTo',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(defaultFormFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      watch = _useForm.watch;\n\n  var lossDateFrom = watch('lossDateFrom');\n  var tableFilterFields = [{\n    id: 'lossName',\n    type: 'multiSelect',\n    label: utils.string.t('claims.lossInformation.name'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claims === null || claims === void 0 ? void 0 : (_claims$filters = claims.filters) === null || _claims$filters === void 0 ? void 0 : _claims$filters.lossName,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"lossName\",\n      search: true,\n      options: claims === null || claims === void 0 ? void 0 : (_claims$filters2 = claims.filters) === null || _claims$filters2 === void 0 ? void 0 : _claims$filters2.lossName\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 16\n    }, this),\n    maxHeight: 200\n  }, {\n    id: 'lossDateFrom',\n    type: 'datepicker',\n    label: utils.string.t('claims.lossInformation.fromDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossDateFrom')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'lossDateTo',\n    type: 'datepicker',\n    label: utils.string.t('claims.lossInformation.toDate'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossDateTo')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        minDate: lossDateFrom !== null && lossDateFrom !== void 0 ? lossDateFrom : undefined,\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.insured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claims === null || claims === void 0 ? void 0 : (_claims$filters3 = claims.filters) === null || _claims$filters3 === void 0 ? void 0 : _claims$filters3.insured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: claims === null || claims === void 0 ? void 0 : (_claims$filters4 = claims.filters) === null || _claims$filters4 === void 0 ? void 0 : _claims$filters4.insured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'claimant',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.claimant'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claims === null || claims === void 0 ? void 0 : claims.filters.claimant,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"claimant\",\n      search: true,\n      options: claims === null || claims === void 0 ? void 0 : (_claims$filters5 = claims.filters) === null || _claims$filters5 === void 0 ? void 0 : _claims$filters5.claimant\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'claimStatus',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.status'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claims === null || claims === void 0 ? void 0 : (_claims$filters6 = claims.filters) === null || _claims$filters6 === void 0 ? void 0 : _claims$filters6.claimStatus,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"claimStatus\",\n      search: true,\n      options: claims === null || claims === void 0 ? void 0 : (_claims$filters7 = claims.filters) === null || _claims$filters7 === void 0 ? void 0 : _claims$filters7.claimStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 16\n    }, this)\n  }];\n  var searchOptions = [{\n    id: 'lossRef',\n    name: utils.string.t('claims.columns.claimsList.lossRef')\n  }, {\n    id: 'lossName',\n    name: utils.string.t('claims.columns.claimsList.lossName')\n  }, {\n    id: 'policyRef',\n    name: utils.string.t('claims.columns.claimsList.policyRef')\n  }, {\n    id: 'claimReference',\n    name: utils.string.t('claims.columns.claimsList.claimReference')\n  }, {\n    id: 'claimantName',\n    name: utils.string.t('claims.columns.claimsList.claimantName')\n  }, {\n    id: 'assured',\n    name: utils.string.t('claims.columns.claimsList.assured')\n  }, {\n    id: 'client',\n    name: utils.string.t('claims.columns.claimsList.client')\n  }, {\n    id: 'ucr',\n    name: utils.string.t('claims.columns.claimsList.ucr')\n  }];\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\n      dispatch(getStatuses());\n    } // cleanup\n\n\n    return function () {\n      dispatch(resetClaims());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleSearch = function handleSearch(queryObject) {\n    if (queryObject.search) {\n      setSearchTerm(queryObject.search);\n      dispatch(postClaimsLossFilters({\n        term: queryObject.search,\n        searchBy: queryObject.searchBy\n      }));\n      dispatch(getClaims({\n        term: queryObject.search,\n        direction: 'desc',\n        searchBy: queryObject.searchBy\n      }));\n    }\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getClaims({\n      page: newPage,\n      term: searchTerm\n    }));\n  };\n\n  var onResetFilter = function onResetFilter() {\n    reset();\n    dispatch(resetClaimLossFilters());\n    dispatch(getClaims({\n      term: searchTerm,\n      filterTerm: ''\n    }));\n  };\n\n  var handleSearchFilter = function handleSearchFilter(data) {\n    var filters = data.filters;\n    dispatch(updateClaimLossFilters({\n      search: searchTerm,\n      filters: filters\n    }));\n    return dispatch(getClaims({\n      term: searchTerm,\n      filterTerm: filters\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getClaims({\n      size: rowsPerPage,\n      term: searchTerm\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getClaims({\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm\n    }));\n  };\n\n  var columns = [{\n    id: 'lossRef',\n    label: utils.string.t('claims.columns.claimsList.lossRef'),\n    nowrap: true,\n    sort: {\n      type: 'numeric',\n      direction: 'desc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'pasEventID',\n    label: utils.string.t('claims.columns.claimsList.pasEventID'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossName',\n    label: utils.string.t('claims.columns.claimsList.lossName'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'lossFromDate',\n    label: utils.string.t('claims.columns.claimsList.lossFromDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'lossToDate',\n    label: utils.string.t('claims.columns.claimsList.lossToDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'claimID',\n    label: utils.string.t('claims.columns.claimsList.claimID'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'claimLossFromDate',\n    label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimLossToDate',\n    label: utils.string.t('claims.columns.claimsList.claimLossTo'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimReceivedDateTime',\n    label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimStatusName',\n    label: utils.string.t('claims.columns.claimsList.claimStatusName'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'catCodeDescription',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.columns.claimsList.ucr'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'claimantName',\n    label: utils.string.t('claims.columns.claimsList.claimantName'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'beAdjuster',\n    label: utils.string.t('claims.claimInformation.beAdjuster'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'policyRef',\n    label: utils.string.t('claims.columns.claimsList.policyRef'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'policyType',\n    label: utils.string.t('claims.columns.claimsList.policyType'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'insured',\n    label: utils.string.t('claims.columns.claimsList.insured'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'client',\n    label: utils.string.t('claims.columns.claimsList.client'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true\n  }, {\n    id: 'company',\n    label: utils.string.t('claims.columns.claimsList.company'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsList.team'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'createdBy',\n    label: utils.string.t('claims.columns.claimsManagement.createdBy'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsList.priority'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'actions',\n    menu: true\n  }];\n  var searchField = [{\n    name: 'searchBy',\n    type: 'select',\n    defaultValue: 'lossName',\n    options: searchOptions,\n    optionKey: 'id',\n    optionLabel: 'name'\n  }, {\n    name: 'search',\n    defaultValue: '',\n    type: 'text',\n    placeholder: 'Search',\n    icon: SearchIcon,\n    value: ''\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      isTableHidden = _useFlexiColumns.isTableHidden,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(ClaimsListView, {\n    claims: claims,\n    searchField: searchField,\n    sort: _objectSpread(_objectSpread({}, claims.sort), {}, {\n      type: 'numeric'\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    isTableHidden: isTableHidden,\n    handleSearch: handleSearch,\n    handleSort: handleSort,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    handleSearchFilter: handleSearchFilter,\n    handleCreateClaim: handleCreateClaim,\n    tableFilterFields: tableFilterFields,\n    onResetFilter: onResetFilter,\n    toggleColumn: toggleColumn,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 377,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsList, \"sw3VS5sHyLa9rn+L+jwnzpNtjeg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = ClaimsList;\nClaimsList.displayName = \"ClaimsList\";\nClaimsList.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsList\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsList\\\\ClaimsList.js\"] = {\n    name: \"ClaimsList\",\n    docgenInfo: ClaimsList.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsList\\\\ClaimsList.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsList\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsList/ClaimsList.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","PropTypes","ClaimsListView","useFlexiColumns","getClaims","resetClaims","selectClaims","selectClaimsStatuses","updateClaimLossFilters","postClaimsLossFilters","resetClaimLossFilters","getStatuses","MultiSelect","FormDate","utils","SearchIcon","ClaimsList","prototypes","handleCreateClaim","func","isRequired","dispatch","searchTerm","setSearchTerm","anchorEl","setAnchorEl","claims","claimsStatuses","defaultFormFields","name","type","value","defaultValues","form","getInitialValues","control","reset","watch","lossDateFrom","tableFilterFields","id","label","string","t","placeholder","options","filters","lossName","content","maxHeight","getFieldProps","fullWidth","margin","clearable","variant","format","minDate","undefined","insured","claimant","claimStatus","searchOptions","generic","isInvalidOrEmptyArray","handleSearch","queryObject","search","term","searchBy","direction","handleChangePage","newPage","page","onResetFilter","filterTerm","handleSearchFilter","data","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","toUpperCase","columns","nowrap","sort","visible","mandatory","ellipsis","menu","searchField","defaultValue","optionKey","optionLabel","icon","columnsArray","isTableHidden","columnProps","toggleColumn"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { ClaimsListView } from './ClaimsList.view';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport {\r\n  getClaims,\r\n  resetClaims,\r\n  selectClaims,\r\n  selectClaimsStatuses,\r\n  updateClaimLossFilters,\r\n  postClaimsLossFilters,\r\n  resetClaimLossFilters,\r\n  getStatuses,\r\n} from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport * as utils from 'utils';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nClaimsList.prototypes = {\r\n  handleCreateClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function ClaimsList({ handleCreateClaim }) {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n\r\n  const claims = useSelector(selectClaims);\r\n  const claimsStatuses = useSelector(selectClaimsStatuses);\r\n  const defaultFormFields = [\r\n    {\r\n      name: 'lossDateFrom',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'lossDateTo',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(defaultFormFields);\r\n  const { control, reset, watch } = useForm({ defaultValues });\r\n  const lossDateFrom = watch('lossDateFrom');\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'lossName',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.lossInformation.name'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claims?.filters?.lossName,\r\n      content: <MultiSelect id=\"lossName\" search options={claims?.filters?.lossName} />,\r\n      maxHeight: 200,\r\n    },\r\n    {\r\n      id: 'lossDateFrom',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossDateFrom')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'lossDateTo',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.lossInformation.toDate'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossDateTo')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            minDate: lossDateFrom ?? undefined,\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.insured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claims?.filters?.insured,\r\n      content: <MultiSelect id=\"insured\" search options={claims?.filters?.insured} />,\r\n    },\r\n    {\r\n      id: 'claimant',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.claimant'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claims?.filters.claimant,\r\n      content: <MultiSelect id=\"claimant\" search options={claims?.filters?.claimant} />,\r\n    },\r\n    {\r\n      id: 'claimStatus',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.status'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claims?.filters?.claimStatus,\r\n      content: <MultiSelect id=\"claimStatus\" search options={claims?.filters?.claimStatus} />,\r\n    },\r\n  ];\r\n\r\n  const searchOptions = [\r\n    { id: 'lossRef', name: utils.string.t('claims.columns.claimsList.lossRef') },\r\n    { id: 'lossName', name: utils.string.t('claims.columns.claimsList.lossName') },\r\n    { id: 'policyRef', name: utils.string.t('claims.columns.claimsList.policyRef') },\r\n    { id: 'claimReference', name: utils.string.t('claims.columns.claimsList.claimReference') },\r\n    { id: 'claimantName', name: utils.string.t('claims.columns.claimsList.claimantName') },\r\n    { id: 'assured', name: utils.string.t('claims.columns.claimsList.assured') },\r\n    { id: 'client', name: utils.string.t('claims.columns.claimsList.client') },\r\n    { id: 'ucr', name: utils.string.t('claims.columns.claimsList.ucr') },\r\n  ];\r\n\r\n  useEffect(\r\n    () => {\r\n      if (utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\r\n        dispatch(getStatuses());\r\n      }\r\n\r\n      // cleanup\r\n      return () => {\r\n        dispatch(resetClaims());\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleSearch = (queryObject) => {\r\n    if (queryObject.search) {\r\n      setSearchTerm(queryObject.search);\r\n      dispatch(postClaimsLossFilters({ term: queryObject.search, searchBy: queryObject.searchBy }));\r\n      dispatch(getClaims({ term: queryObject.search, direction: 'desc', searchBy: queryObject.searchBy }));\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getClaims({ page: newPage, term: searchTerm }));\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    reset();\r\n    dispatch(resetClaimLossFilters());\r\n    dispatch(getClaims({ term: searchTerm, filterTerm: '' }));\r\n  };\r\n\r\n  const handleSearchFilter = (data) => {\r\n    const { filters } = data;\r\n    dispatch(updateClaimLossFilters({ search: searchTerm, filters }));\r\n    return dispatch(getClaims({ term: searchTerm, filterTerm: filters }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getClaims({ size: rowsPerPage, term: searchTerm }));\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getClaims({ sortBy: by, direction: dir.toUpperCase(), term: searchTerm }));\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.columns.claimsList.lossRef'),\r\n      nowrap: true,\r\n      sort: { type: 'numeric', direction: 'desc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'pasEventID',\r\n      label: utils.string.t('claims.columns.claimsList.pasEventID'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossName',\r\n      label: utils.string.t('claims.columns.claimsList.lossName'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'lossFromDate',\r\n      label: utils.string.t('claims.columns.claimsList.lossFromDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      label: utils.string.t('claims.columns.claimsList.lossToDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'claimID',\r\n      label: utils.string.t('claims.columns.claimsList.claimID'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimLossFromDate',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimLossToDate',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossTo'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimReceivedDateTime',\r\n      label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimStatusName',\r\n      label: utils.string.t('claims.columns.claimsList.claimStatusName'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'catCodeDescription',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    { id: 'ucr', label: utils.string.t('claims.columns.claimsList.ucr'), sort: { type: 'string', direction: 'asc' } },\r\n\r\n    {\r\n      id: 'claimantName',\r\n      label: utils.string.t('claims.columns.claimsList.claimantName'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'beAdjuster',\r\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n\r\n    {\r\n      id: 'policyRef',\r\n      label: utils.string.t('claims.columns.claimsList.policyRef'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      label: utils.string.t('claims.columns.claimsList.policyType'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n\r\n    {\r\n      id: 'insured',\r\n      label: utils.string.t('claims.columns.claimsList.insured'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    { id: 'client', label: utils.string.t('claims.columns.claimsList.client'), sort: { type: 'string', direction: 'asc' }, ellipsis: true },\r\n\r\n    {\r\n      id: 'company',\r\n      label: utils.string.t('claims.columns.claimsList.company'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsList.team'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdBy'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n\r\n    { id: 'priority', label: utils.string.t('claims.columns.claimsList.priority'), sort: { type: 'string', direction: 'asc' } },\r\n\r\n    { id: 'actions', menu: true },\r\n  ];\r\n\r\n  const searchField = [\r\n    {\r\n      name: 'searchBy',\r\n      type: 'select',\r\n      defaultValue: 'lossName',\r\n      options: searchOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n    },\r\n    {\r\n      name: 'search',\r\n      defaultValue: '',\r\n      type: 'text',\r\n      placeholder: 'Search',\r\n      icon: SearchIcon,\r\n      value: '',\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, isTableHidden, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <ClaimsListView\r\n      claims={claims}\r\n      searchField={searchField}\r\n      sort={{\r\n        ...claims.sort,\r\n        type: 'numeric',\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      isTableHidden={isTableHidden}\r\n      handleSearch={handleSearch}\r\n      handleSort={handleSort}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      handleSearchFilter={handleSearchFilter}\r\n      handleCreateClaim={handleCreateClaim}\r\n      tableFilterFields={tableFilterFields}\r\n      onResetFilter={onResetFilter}\r\n      toggleColumn={toggleColumn}\r\n      anchorEl={anchorEl}\r\n      setAnchorEl={setAnchorEl}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}