{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocuments.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport config from 'config'; // app\n\nimport { selectClaimsPolicyInformation, selectClaimIdFromGrid, postClaimAndLossDocumentsToGxb } from 'stores';\nimport styles from './ClaimsManageDocuments.styles';\nimport { DmsSearch, Accordion, FormCheckbox, TableHead, TableCell, Button, PopoverMenu, FilterBar } from 'components';\nimport { RegisterNewLossFixedBottomBar } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { makeStyles, Grid, Box, Typography, Checkbox, FormControlLabel, Table, TableBody, TableRow } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsManageDocumentsView.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  })\n};\nexport function ClaimsManageDocumentsView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleBack = _ref.handleBack,\n      handleNext = _ref.handleNext,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      onSaveHandle = _ref.onSaveHandle,\n      col = _ref.col,\n      fields = _ref.fields,\n      formControls = _ref.formControls,\n      popoverActions = _ref.popoverActions,\n      searchFields = _ref.searchFields,\n      searchActions = _ref.searchActions,\n      claimDocuments = _ref.claimDocuments,\n      lossDocuments = _ref.lossDocuments,\n      updateClaimFileListAfterLinking = _ref.updateClaimFileListAfterLinking;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsManageDocuments'\n  })();\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      isLossAccordionExpanded = _useState2[0],\n      setLossAccordionExpanded = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isClaimAccordionExpanded = _useState4[0],\n      setClaimAccordionExpanded = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      checked = _useState6[0],\n      setChecked = _useState6[1];\n\n  var control = formControls.control,\n      register = formControls.register,\n      watch = formControls.watch;\n  var claimDetails = useSelector(selectClaimIdFromGrid);\n  var sectionType = constants.DMS_CONTEXT_CLAIM;\n  var dispatch = useDispatch();\n  var dms = {\n    context: constants.DMS_CONTEXT_POLICY,\n    source: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.sourceId,\n    refData: _objectSpread({}, policyInformation),\n    isFnolDmsSearch: true,\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking\n  };\n  var formValues = watch();\n\n  var SaveHandle = function SaveHandle() {\n    dispatch(postClaimAndLossDocumentsToGxb({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType,\n      documents: formValues\n    }));\n  };\n\n  var nextHandle = function nextHandle() {\n    dispatch(postClaimAndLossDocumentsToGxb({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType,\n      documents: formValues\n    })).then(function () {\n      handleNext(index);\n    });\n  };\n\n  var referenceId = policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 4,\n      ml: 4,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: /*#__PURE__*/_jsxDEV(DmsSearch, _objectSpread(_objectSpread({}, dms), {}, {\n            referenceId: referenceId,\n            isAutoSearchScreen: true\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 6,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            className: classes.gridFlex,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                className: classes.icon,\n                children: /*#__PURE__*/_jsxDEV(DescriptionOutlinedIcon, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 88,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 87,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                className: classes.title,\n                children: utils.string.t('claims.manageDocumentLabels.claimFile')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 90,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 86,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: '50%',\n              marginLeft: \"auto\",\n              children: [\" \", /*#__PURE__*/_jsxDEV(FilterBar, {\n                id: \"userFilter\",\n                fields: searchFields,\n                actions: searchActions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 53\n              }, this), \" \"]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 94,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 85,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              columns: col,\n              nestedClasses: {\n                tableHead: classes.tableHead\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 4,\n                  children: /*#__PURE__*/_jsxDEV(Accordion, {\n                    icon: false,\n                    expanded: isLossAccordionExpanded,\n                    actions: [{\n                      id: 'manageLossDocs',\n                      text: utils.string.t('claims.manageDocumentLabels.loss'),\n                      icon: KeyboardArrowUpIcon,\n                      iconPosition: 'left',\n                      color: 'primary',\n                      onClick: function onClick() {\n                        setLossAccordionExpanded(!isLossAccordionExpanded);\n                      },\n                      nestedClasses: {\n                        link: classes.toggleBtnLink,\n                        icon: classes.toggleBtnIcon\n                      }\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(TableBody, {\n                      children: lossDocuments === null || lossDocuments === void 0 ? void 0 : lossDocuments.map(function (eachRow, ind) {\n                        var actionDescId = eachRow === null || eachRow === void 0 ? void 0 : eachRow.documentId.toString();\n                        return /*#__PURE__*/_jsxDEV(TableRow, {\n                          hover: true,\n                          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                            compact: true,\n                            className: classes.checkBoxCell,\n                            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n                              name: actionDescId\n                            }, utils.form.getFieldProps(fields, actionDescId)), {}, {\n                              control: control,\n                              register: register,\n                              watch: watch\n                            }), void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 129,\n                              columnNumber: 33\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 128,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            compact: true,\n                            className: classes.actionDescCell,\n                            children: eachRow === null || eachRow === void 0 ? void 0 : eachRow.documentName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 138,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            compact: true,\n                            className: classes.tableCell,\n                            children: eachRow === null || eachRow === void 0 ? void 0 : eachRow.createdByName\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 142,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            compact: true,\n                            className: classes.tableCell,\n                            children: utils.string.t('format.date', {\n                              value: {\n                                date: eachRow === null || eachRow === void 0 ? void 0 : eachRow.createdDate,\n                                format: config.ui.format.date.text\n                              }\n                            })\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 145,\n                            columnNumber: 31\n                          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                            children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                              id: \"view-menu-list\",\n                              items: popoverActions,\n                              data: {\n                                eachRow: eachRow\n                              },\n                              anchorOrigin: {\n                                vertical: 'bottom',\n                                horizontal: 'right'\n                              },\n                              transformOrigin: {\n                                vertical: 'top',\n                                horizontal: 'right'\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 149,\n                              columnNumber: 33\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 148,\n                            columnNumber: 31\n                          }, _this)]\n                        }, ind, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 126,\n                          columnNumber: 29\n                        }, _this);\n                      })\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 121,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableRow, {\n                children: /*#__PURE__*/_jsxDEV(TableCell, {\n                  colSpan: 4,\n                  children: /*#__PURE__*/_jsxDEV(Accordion, {\n                    icon: false,\n                    expanded: isClaimAccordionExpanded,\n                    actions: [{\n                      id: 'manageLossDocs',\n                      text: utils.string.t('claims.manageDocumentLabels.claim'),\n                      icon: KeyboardArrowUpIcon,\n                      iconPosition: 'left',\n                      color: 'primary',\n                      onClick: function onClick() {\n                        setClaimAccordionExpanded(!isClaimAccordionExpanded);\n                      },\n                      nestedClasses: {\n                        link: classes.toggleBtnLink,\n                        icon: classes.toggleBtnIcon\n                      }\n                    }],\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      children: /*#__PURE__*/_jsxDEV(TableBody, {\n                        children: claimDocuments === null || claimDocuments === void 0 ? void 0 : claimDocuments.map(function (eachRow, ind) {\n                          var actionDescId = eachRow === null || eachRow === void 0 ? void 0 : eachRow.documentId.toString();\n                          return /*#__PURE__*/_jsxDEV(TableRow, {\n                            hover: true,\n                            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                              className: classes.checkBoxCell,\n                              children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n                                name: actionDescId\n                              }, utils.form.getFieldProps(fields, actionDescId)), {}, {\n                                control: control,\n                                register: register,\n                                watch: watch\n                              }), void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 198,\n                                columnNumber: 33\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 197,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                              className: classes.actionDescCell,\n                              children: eachRow === null || eachRow === void 0 ? void 0 : eachRow.documentName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 207,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                              className: classes.tableCell,\n                              children: eachRow === null || eachRow === void 0 ? void 0 : eachRow.createdByName\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 211,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                              className: classes.tableCell,\n                              children: utils.string.t('format.date', {\n                                value: {\n                                  date: eachRow === null || eachRow === void 0 ? void 0 : eachRow.createdDate,\n                                  format: config.ui.format.date.text\n                                }\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 214,\n                              columnNumber: 31\n                            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                              children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                                id: \"view-menu-list\",\n                                items: popoverActions,\n                                data: eachRow,\n                                anchorOrigin: {\n                                  vertical: 'bottom',\n                                  horizontal: 'left'\n                                },\n                                transformOrigin: {\n                                  vertical: 'top',\n                                  horizontal: 'left'\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 218,\n                                columnNumber: 33\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 217,\n                              columnNumber: 31\n                            }, _this)]\n                          }, ind, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 195,\n                            columnNumber: 29\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 23\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 10,\n            ml: 5,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              size: \"xsmall\",\n              variant: \"outlined\",\n              disabled: false,\n              text: /*#__PURE__*/_jsxDEV(FormControlLabel, {\n                control: /*#__PURE__*/_jsxDEV(Checkbox, {\n                  checked: checked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 247,\n                  columnNumber: 50\n                }, this),\n                label: \"SELECT ALL\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 23\n              }, this),\n              \"data-testid\": \"bulk-button\",\n              onClick: function onClick() {\n                console.log(\"ab\");\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: function handleSave() {\n        SaveHandle();\n      },\n      handleNextSubmit: function handleNextSubmit() {\n        return nextHandle();\n      },\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 257,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsManageDocumentsView, \"11LSIzESJ8NABlIWVeVptkIC/34=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ClaimsManageDocumentsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsManageDocumentsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsManageDocuments/ClaimsManageDocuments.view.js"],"names":["React","useState","PropTypes","useDispatch","useSelector","config","selectClaimsPolicyInformation","selectClaimIdFromGrid","postClaimAndLossDocumentsToGxb","styles","DmsSearch","Accordion","FormCheckbox","TableHead","TableCell","Button","PopoverMenu","FilterBar","RegisterNewLossFixedBottomBar","utils","constants","makeStyles","Grid","Box","Typography","Checkbox","FormControlLabel","Table","TableBody","TableRow","KeyboardArrowUpIcon","DescriptionOutlinedIcon","ClaimsManageDocumentsView","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","nestedClasses","shape","root","string","index","isFormsEdited","onSaveHandle","col","fields","formControls","popoverActions","searchFields","searchActions","claimDocuments","lossDocuments","updateClaimFileListAfterLinking","classes","name","policyInformation","isLossAccordionExpanded","setLossAccordionExpanded","isClaimAccordionExpanded","setClaimAccordionExpanded","checked","setChecked","control","register","watch","claimDetails","sectionType","DMS_CONTEXT_CLAIM","dispatch","dms","context","DMS_CONTEXT_POLICY","source","sourceId","refData","isFnolDmsSearch","formValues","SaveHandle","referenceId","claimReference","documents","nextHandle","then","policyRef","gridFlex","icon","title","t","tableHead","id","text","iconPosition","color","onClick","link","toggleBtnLink","toggleBtnIcon","map","eachRow","ind","actionDescId","documentId","toString","checkBoxCell","form","getFieldProps","actionDescCell","documentName","tableCell","createdByName","value","date","createdDate","format","ui","vertical","horizontal","console","log"],"mappings":"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","sourcesContent":["import React, {  useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport config from 'config';\r\n\r\n// app\r\nimport {  selectClaimsPolicyInformation, selectClaimIdFromGrid, postClaimAndLossDocumentsToGxb } from 'stores';\r\nimport styles from './ClaimsManageDocuments.styles';\r\nimport {\r\n  DmsSearch,  Accordion, FormCheckbox, TableHead, TableCell, Button, PopoverMenu, FilterBar\r\n} from 'components';\r\nimport { RegisterNewLossFixedBottomBar,  } from 'modules';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { makeStyles, Grid, Box, Typography, Checkbox, FormControlLabel, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\nimport DescriptionOutlinedIcon from '@material-ui/icons/DescriptionOutlined';\r\n\r\nClaimsManageDocumentsView.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport function ClaimsManageDocumentsView({  activeStep,\r\n  isAllStepsCompleted,\r\n  handleBack,\r\n  handleNext,\r\n  index,\r\n  isFormsEdited,\r\n  onSaveHandle, col, fields, formControls, popoverActions, searchFields, searchActions, claimDocuments, lossDocuments, updateClaimFileListAfterLinking}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsManageDocuments' })();\r\n  \r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  \r\n  \r\n  const [isLossAccordionExpanded, setLossAccordionExpanded] = useState(true);\r\n  const [isClaimAccordionExpanded, setClaimAccordionExpanded] = useState(true);\r\n\r\n  const [checked, setChecked] = useState(true);\r\n  const { control, register, watch } = formControls;\r\n  const claimDetails = useSelector(selectClaimIdFromGrid)\r\n  const sectionType = constants.DMS_CONTEXT_CLAIM;\r\n  const dispatch = useDispatch()\r\n  const dms = {\r\n    context: constants.DMS_CONTEXT_POLICY,\r\n    source: policyInformation?.sourceId,\r\n    refData: { ...policyInformation },\r\n    isFnolDmsSearch: true,\r\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking\r\n  };\r\n  const formValues = watch();\r\n\r\n  const SaveHandle = () => {\r\n    dispatch(postClaimAndLossDocumentsToGxb({ referenceId: claimDetails?.claimReference, sectionType: sectionType, documents: formValues }))\r\n  }\r\n\r\n  const nextHandle = () =>{\r\n    dispatch(postClaimAndLossDocumentsToGxb({ referenceId: claimDetails?.claimReference, \r\n      sectionType: sectionType, documents: formValues })).then(() => {\r\n        handleNext(index)\r\n    });\r\n  }\r\n\r\n  const referenceId = policyInformation?.policyRef;\r\n  return (\r\n    <div>\r\n\r\n      <Box mt={4} ml={4}>\r\n        <Grid container direction=\"row\">\r\n          <Grid item xs={12} sm={6}>\r\n            <DmsSearch {...dms} referenceId={referenceId} isAutoSearchScreen={true} />\r\n          </Grid>\r\n          <Grid item xs={12} sm={6}>\r\n            \r\n            <Grid className={classes.gridFlex} alignItems=\"center\">\r\n              <Box display=\"flex\" alignItems=\"center\">\r\n                <Box className={classes.icon}>\r\n                  <DescriptionOutlinedIcon />\r\n                </Box>\r\n                <Typography variant=\"body2\" className={classes.title}>\r\n                  {utils.string.t('claims.manageDocumentLabels.claimFile')}\r\n                </Typography>\r\n              </Box>\r\n              <Box width={'50%'} marginLeft=\"auto\"> <FilterBar id=\"userFilter\" fields={searchFields} actions={searchActions} /> </Box>\r\n            </Grid>\r\n\r\n            <Table size=\"small\" >\r\n              <TableHead columns={col} nestedClasses={{ tableHead: classes.tableHead }} />\r\n              <TableBody>\r\n                <TableRow>\r\n                  <TableCell colSpan={4}>\r\n                    <Accordion\r\n                      icon={false}\r\n                      expanded={isLossAccordionExpanded}\r\n                      actions={[\r\n                        {\r\n                          id: 'manageLossDocs',\r\n                          text: utils.string.t('claims.manageDocumentLabels.loss'),\r\n                          icon: KeyboardArrowUpIcon,\r\n                          iconPosition: 'left',\r\n                          color: 'primary',\r\n                          onClick: () => { setLossAccordionExpanded(!isLossAccordionExpanded) },\r\n                          nestedClasses: {\r\n                            link: classes.toggleBtnLink,\r\n                            icon: classes.toggleBtnIcon,\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      \r\n                      <TableBody>\r\n                        {lossDocuments?.map((eachRow, ind) => {\r\n                          \r\n                          const actionDescId = eachRow?.documentId.toString();\r\n                          return (\r\n                            <TableRow key={ind} hover>\r\n\r\n                              <TableCell compact className={classes.checkBoxCell}>\r\n                                <FormCheckbox\r\n                                  name={actionDescId}\r\n                                  {...utils.form.getFieldProps(fields, actionDescId)}\r\n                                  control={control}\r\n                                  register={register}\r\n                                  watch={watch}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              <TableCell compact className={classes.actionDescCell}>\r\n                                {eachRow?.documentName}\r\n                              </TableCell>\r\n\r\n                              <TableCell compact className={classes.tableCell}>\r\n                                {eachRow?.createdByName}\r\n                              </TableCell>\r\n                              <TableCell compact className={classes.tableCell}>\r\n                                {utils.string.t('format.date', { value: { date: eachRow?.createdDate, format: config.ui.format.date.text } })}\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <PopoverMenu id=\"view-menu-list\"\r\n                                  items={popoverActions}\r\n                                  data={{ eachRow }}\r\n                                  anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'right',\r\n                                  }}\r\n                                  transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'right',\r\n                                  }} />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Accordion>\r\n                  </TableCell>\r\n                </TableRow>\r\n\r\n                <TableRow>\r\n                  <TableCell colSpan={4}>\r\n                    <Accordion\r\n                      icon={false}\r\n                      expanded={isClaimAccordionExpanded}\r\n                      actions={[\r\n                        {\r\n                          id: 'manageLossDocs',\r\n                          text: utils.string.t('claims.manageDocumentLabels.claim'),\r\n                          icon: KeyboardArrowUpIcon,\r\n                          iconPosition: 'left',\r\n                          color: 'primary',\r\n                          onClick: () => { setClaimAccordionExpanded(!isClaimAccordionExpanded) },\r\n                          nestedClasses: {\r\n                            link: classes.toggleBtnLink,\r\n                            icon: classes.toggleBtnIcon,\r\n                          },\r\n                        },\r\n                      ]}\r\n                    >\r\n                      <Table>\r\n                      <TableBody>\r\n                        {claimDocuments?.map((eachRow, ind) => {\r\n                        \r\n                          const actionDescId = eachRow?.documentId.toString();\r\n                          return (\r\n                            <TableRow key={ind} hover>\r\n\r\n                              <TableCell className={classes.checkBoxCell}>\r\n                                <FormCheckbox\r\n                                  name={actionDescId}\r\n                                  {...utils.form.getFieldProps(fields, actionDescId)}\r\n                                  control={control}\r\n                                  register={register}\r\n                                  watch={watch}\r\n                                />\r\n                              </TableCell>\r\n\r\n                              <TableCell className={classes.actionDescCell}>\r\n                                {eachRow?.documentName}\r\n                              </TableCell>\r\n\r\n                              <TableCell className={classes.tableCell}>\r\n                                {eachRow?.createdByName}\r\n                              </TableCell>\r\n                              <TableCell className={classes.tableCell}>\r\n                                {utils.string.t('format.date', { value: { date: eachRow?.createdDate, format: config.ui.format.date.text } })}\r\n                              </TableCell>\r\n                              <TableCell>\r\n                                <PopoverMenu\r\n                                  id=\"view-menu-list\"\r\n                                  items={popoverActions}\r\n                                  data={eachRow}\r\n                                  anchorOrigin={{\r\n                                    vertical: 'bottom',\r\n                                    horizontal: 'left',\r\n                                  }}\r\n                                  transformOrigin={{\r\n                                    vertical: 'top',\r\n                                    horizontal: 'left',\r\n                                  }} />\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                      </Table>\r\n                    </Accordion>\r\n                  </TableCell>\r\n                </TableRow>\r\n              </TableBody>\r\n            </Table>\r\n            <Box mt={10} ml={5}>\r\n              <Button\r\n                color=\"primary\"\r\n                size=\"xsmall\"\r\n                variant=\"outlined\"\r\n                disabled={false}\r\n                text={<FormControlLabel control={<Checkbox checked={checked} />} label=\"SELECT ALL\" />}\r\n                data-testid=\"bulk-button\"\r\n                onClick={()=>{console.log(\"ab\")}}\r\n              />\r\n            </Box>\r\n\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      <RegisterNewLossFixedBottomBar\r\n        activeStep={activeStep}\r\n        isAllStepsCompleted={isAllStepsCompleted}\r\n        handleBack={() => { handleBack(index) }}\r\n        handleSave={() => { SaveHandle() }}\r\n        handleNextSubmit={() => nextHandle()}\r\n        save={true}\r\n      />\r\n    </div>\r\n  )\r\n}"]},"metadata":{},"sourceType":"module"}