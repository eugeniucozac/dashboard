{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsCreateRFIStepper\\\\ClaimsCreateRFIStepper.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport { getPriorityLevels, getUsersByOrg, selectPriorities, selectClaimsAssignedToUsers, showModal, postDraftRFI, selectCreateRfiInfo, postSaveRFIReset } from 'stores';\nimport * as utils from 'utils';\nimport ClaimsCreateRFIStepperView from './ClaimsCreateRFIStepper.view';\nimport { CREATE_RFI_FORM, API_RESPONSE_OK } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsCreateRFIStepper.propTypes = {\n  claim: PropTypes.object.isRequired,\n  type: PropTypes.string.isRequired,\n  cancelHandler: PropTypes.func.isRequired\n};\nexport default function ClaimsCreateRFIStepper(_ref) {\n  _s();\n\n  var claim = _ref.claim,\n      cancelHandler = _ref.cancelHandler,\n      type = _ref.type;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stepFields = _useState2[0],\n      setStepFields = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      saveStatus = _useState10[0],\n      setSaveStatus = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isAnyformDirty = _useState12[0],\n      checkDirtyStatus = _useState12[1];\n\n  var priorities = useSelector(selectPriorities);\n  var createRfiInfo = useSelector(selectCreateRfiInfo);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n\n  var _useState13 = useState([{\n    id: 0,\n    form: utils.string.t('claims.columns.createRFIStepper.rfiDetails'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }, {\n    id: 1,\n    form: utils.string.t('claims.columns.createRFIStepper.uploadDocs'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }, {\n    id: 2,\n    form: utils.string.t('claims.columns.createRFIStepper.confirmRFI'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      forms = _useState14[0],\n      editFormStatus = _useState14[1];\n\n  var steps = forms.map(function (frm) {\n    return frm === null || frm === void 0 ? void 0 : frm.form;\n  });\n  var initialFormStatus = forms;\n  var stepsForms = forms;\n  var currentStep = 0;\n  useEffect(function () {\n    currentStep && setActiveStep(currentStep);\n    setStepFields(steps);\n    setFormEditedStatus(stepsForms);\n    return function () {\n      _findDirtyForm(initialFormStatus);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isFormsEdited) {\n      _findDirtyForm(isFormsEdited);\n    }\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    return function () {\n      dispatch(postSaveRFIReset());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    !utils.generic.isValidArray(priorities, true) && dispatch(getPriorityLevels());\n    !utils.generic.isValidArray(selectAssignees.items, true) && dispatch(getUsersByOrg('', [claim], CREATE_RFI_FORM, true));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleBack = function handleBack() {\n    setActiveStep(activeStep - 1);\n  };\n\n  var _findDirtyForm = function findDirtyForm(forms) {\n    editFormStatus(forms === null || forms === void 0 ? void 0 : forms.map(function (form) {\n      return _objectSpread({}, form);\n    }));\n    checkDirtyStatus(forms.some(function (form) {\n      return (form === null || form === void 0 ? void 0 : form.formEditedStatus) === true;\n    }));\n  };\n\n  var handleNext = function handleNext() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState === null || formState === void 0 ? void 0 : formState.forEach(function (form) {\n      var _formState$activeStep;\n\n      if ((form === null || form === void 0 ? void 0 : form.id) > activeStep && (formState === null || formState === void 0 ? void 0 : (_formState$activeStep = formState[activeStep]) === null || _formState$activeStep === void 0 ? void 0 : _formState$activeStep['formEditedStatus'])) {\n        form['isSubmitted'] = false;\n      }\n    });\n    formState[activeStep]['isSubmitted'] = true;\n    formState[activeStep]['formEditedStatus'] = false;\n    setFormEditedStatus(formState);\n    setActiveStep(activeStep + 1);\n  };\n\n  var handleSkip = function handleSkip(step) {\n    if (activeStep === 0) {\n      setActiveStep(step);\n    }\n  };\n\n  var handleStep = function handleStep(step) {\n    if (activeStep < step) {\n      var _isFormsEdited$active, _isFormsEdited$active2, _isFormsEdited, _isFormsEdited2;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active = isFormsEdited[activeStep]) === null || _isFormsEdited$active === void 0 ? void 0 : _isFormsEdited$active['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active2 = isFormsEdited[activeStep]) === null || _isFormsEdited$active2 === void 0 ? void 0 : _isFormsEdited$active2['isSubmitted']) && !(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited = isFormsEdited[step - 1]) === null || _isFormsEdited === void 0 ? void 0 : _isFormsEdited['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited2 = isFormsEdited[step - 1]) === null || _isFormsEdited2 === void 0 ? void 0 : _isFormsEdited2['isSubmitted'])) {\n        setActiveStep(step);\n      }\n    } else if (activeStep > step) {\n      setActiveStep(step);\n    }\n  };\n\n  var handleFormStatus = function handleFormStatus() {\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep]['formEditedStatus'] = true;\n    formState[activeStep]['isSubmitted'] = false;\n    setFormEditedStatus(formState);\n  };\n\n  var handleSubmitRFI = function handleSubmitRFI() {\n    var rfiDetails = {\n      processInstanceId: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.processId,\n      queryCodeDescription: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.queryCodeDescription,\n      sendToTeam: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.sendToTeam,\n      sendToUser: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.sendToUser,\n      taskId: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.taskId\n    };\n    dispatch(postDraftRFI(rfiDetails)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === API_RESPONSE_OK) {\n        cancelHandler();\n      }\n    });\n  };\n\n  var handleRFIModalClose = function handleRFIModalClose() {\n    if (isAnyformDirty) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('status.alert'),\n          hint: utils.string.t('navigation.title'),\n          fullWidth: true,\n          maxWidth: 'xs',\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            submitHandler: function submitHandler() {\n              cancelHandler();\n            }\n          }\n        }\n      }));\n    } else {\n      cancelHandler();\n    }\n  }; // On click of Finish button\n\n\n  var launchFinishModal = function launchFinishModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('claims.modals.confirmRfiSubmission.title'),\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: utils.string.t('claims.modals.confirmRfiSubmission.content'),\n          submitHandler: function submitHandler() {\n            handleSubmitRFI();\n          },\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsCreateRFIStepperView, {\n    setActiveStep: setActiveStep,\n    steps: steps,\n    progress: progress,\n    claimData: claim,\n    rfiType: type,\n    handleStep: handleStep,\n    isFormsEdited: isFormsEdited,\n    isAllStepsCompleted: false,\n    handleFormStatus: handleFormStatus,\n    findDirtyForm: function findDirtyForm(forms) {\n      return _findDirtyForm(forms);\n    },\n    handleNext: handleNext,\n    activeStep: activeStep,\n    handleBack: handleBack,\n    handleSkip: handleSkip,\n    cancelHandler: handleRFIModalClose,\n    setFormEditedStatus: setFormEditedStatus,\n    launchFinishModal: launchFinishModal,\n    saveStatus: saveStatus,\n    setSaveStatus: setSaveStatus,\n    createRfiInfo: createRfiInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsCreateRFIStepper, \"coQAYE3i2vPlhmc22XY+eD3AcLE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsCreateRFIStepper;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsCreateRFIStepper\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsCreateRFIStepper/ClaimsCreateRFIStepper.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","getPriorityLevels","getUsersByOrg","selectPriorities","selectClaimsAssignedToUsers","showModal","postDraftRFI","selectCreateRfiInfo","postSaveRFIReset","utils","ClaimsCreateRFIStepperView","CREATE_RFI_FORM","API_RESPONSE_OK","ClaimsCreateRFIStepper","propTypes","claim","object","isRequired","type","string","cancelHandler","func","dispatch","stepFields","setStepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","saveStatus","setSaveStatus","isAnyformDirty","checkDirtyStatus","priorities","createRfiInfo","selectAssignees","id","form","t","formEditedStatus","isSubmitted","forms","editFormStatus","steps","map","frm","initialFormStatus","stepsForms","currentStep","findDirtyForm","length","generic","isValidArray","items","handleBack","some","handleNext","Date","getTime","formState","forEach","handleSkip","step","handleStep","handleFormStatus","handleSubmitRFI","rfiDetails","processInstanceId","processId","queryCodeDescription","sendToTeam","sendToUser","taskId","then","response","status","handleRFIModalClose","component","props","title","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","launchFinishModal","confirmMessage","handleClose"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n\r\n//app\r\nimport { getPriorityLevels, getUsersByOrg, selectPriorities, selectClaimsAssignedToUsers, showModal, postDraftRFI, selectCreateRfiInfo, postSaveRFIReset } from 'stores';\r\nimport * as utils from 'utils';\r\nimport ClaimsCreateRFIStepperView from './ClaimsCreateRFIStepper.view';\r\nimport { CREATE_RFI_FORM, API_RESPONSE_OK } from 'consts';\r\n\r\nClaimsCreateRFIStepper.propTypes = {\r\n  claim: PropTypes.object.isRequired,\r\n  type: PropTypes.string.isRequired,\r\n  cancelHandler: PropTypes.func.isRequired,\r\n}\r\n\r\nexport default function ClaimsCreateRFIStepper({ claim, cancelHandler, type }) {\r\n\r\n  const dispatch = useDispatch();\r\n  const [stepFields, setStepFields] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isFormsEdited, setFormEditedStatus] = useState([]);\r\n  const [saveStatus, setSaveStatus] = useState();\r\n  const [isAnyformDirty, checkDirtyStatus] = useState(false);\r\n  const priorities = useSelector(selectPriorities);\r\n  const createRfiInfo = useSelector(selectCreateRfiInfo);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n\r\n  const [forms, editFormStatus] = useState([\r\n    { id: 0, form: utils.string.t('claims.columns.createRFIStepper.rfiDetails'), formEditedStatus: false, isSubmitted: false },\r\n    { id: 1, form: utils.string.t('claims.columns.createRFIStepper.uploadDocs'), formEditedStatus: false, isSubmitted: false },\r\n    { id: 2, form: utils.string.t('claims.columns.createRFIStepper.confirmRFI'), formEditedStatus: false, isSubmitted: false }]);\r\n  const steps = forms.map((frm) => frm?.form);\r\n  const initialFormStatus = forms;\r\n  const stepsForms = forms;\r\n  const currentStep = 0;\r\n  useEffect(() => {\r\n    currentStep && setActiveStep(currentStep);\r\n    setStepFields(steps);\r\n    setFormEditedStatus(stepsForms);\r\n    return () => {\r\n      findDirtyForm(initialFormStatus);\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isFormsEdited) {\r\n      findDirtyForm(isFormsEdited);\r\n    }\r\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    return (() => { dispatch(postSaveRFIReset()) })\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    !utils.generic.isValidArray(priorities, true) && dispatch(getPriorityLevels());\r\n    !utils.generic.isValidArray(selectAssignees.items, true) && dispatch(getUsersByOrg('', [claim], CREATE_RFI_FORM, true));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n  const findDirtyForm = (forms) => {\r\n    editFormStatus(forms?.map((form) => ({ ...form })));\r\n    checkDirtyStatus(forms.some((form) => form?.formEditedStatus === true));\r\n  };\r\n\r\n  const handleNext = () => {\r\n    setSaveStatus(new Date().getTime());\r\n    const formState = isFormsEdited.map((form) => ({ ...form }));\r\n    formState?.forEach((form) => {\r\n      if (form?.id > activeStep && formState?.[activeStep]?.['formEditedStatus']) {\r\n        form['isSubmitted'] = false;\r\n      }\r\n    });\r\n    formState[activeStep]['isSubmitted'] = true;\r\n    formState[activeStep]['formEditedStatus'] = false;\r\n    setFormEditedStatus(formState);\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n  const handleSkip = (step) => {\r\n    if (activeStep === 0) {\r\n      setActiveStep(step);\r\n    }\r\n  }\r\n  const handleStep = (step) => {\r\n    if (activeStep < step) {\r\n      if (\r\n        !isFormsEdited?.[activeStep]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[activeStep]?.['isSubmitted'] &&\r\n        !isFormsEdited?.[step - 1]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[step - 1]?.['isSubmitted']\r\n      ) {\r\n        setActiveStep(step);\r\n      }\r\n    } else if (activeStep > step) {\r\n      setActiveStep(step);\r\n    }\r\n  };\r\n\r\n  const handleFormStatus = () => {\r\n    const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n    formState[activeStep]['formEditedStatus'] = true;\r\n    formState[activeStep]['isSubmitted'] = false;\r\n    setFormEditedStatus(formState);\r\n  };\r\n\r\n  const handleSubmitRFI = () => {\r\n    const rfiDetails =\r\n    {\r\n      processInstanceId: createRfiInfo?.processId,\r\n      queryCodeDescription: createRfiInfo?.queryCodeDescription,\r\n      sendToTeam: createRfiInfo?.sendToTeam,\r\n      sendToUser: createRfiInfo?.sendToUser,\r\n      taskId: createRfiInfo?.taskId\r\n    };\r\n\r\n    dispatch(postDraftRFI(rfiDetails)).then((response) => {\r\n      if (response?.status === API_RESPONSE_OK) {\r\n        cancelHandler();\r\n      }\r\n    });\r\n  };\r\n\r\n\r\n  const handleRFIModalClose = () => {\r\n    if (isAnyformDirty) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            title: utils.string.t('status.alert'),\r\n            hint: utils.string.t('navigation.title'),\r\n            fullWidth: true,\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              submitHandler: () => {\r\n                cancelHandler();\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    }\r\n    else { cancelHandler(); }\r\n  };\r\n\r\n  // On click of Finish button\r\n  const launchFinishModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('claims.modals.confirmRfiSubmission.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: utils.string.t('claims.modals.confirmRfiSubmission.content'),\r\n            submitHandler: () => {\r\n              handleSubmitRFI();\r\n            },\r\n            handleClose: () => { },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ClaimsCreateRFIStepperView\r\n      setActiveStep={setActiveStep}\r\n      steps={steps}\r\n      progress={progress}\r\n      claimData={claim}\r\n      rfiType={type}\r\n      handleStep={handleStep}\r\n      isFormsEdited={isFormsEdited}\r\n      isAllStepsCompleted={false}\r\n      handleFormStatus={handleFormStatus}\r\n      findDirtyForm={(forms) => findDirtyForm(forms)}\r\n      handleNext={handleNext}\r\n      activeStep={activeStep}\r\n      handleBack={handleBack}\r\n      handleSkip={handleSkip}\r\n      cancelHandler={handleRFIModalClose}\r\n      setFormEditedStatus={setFormEditedStatus}\r\n      launchFinishModal={launchFinishModal}\r\n      saveStatus={saveStatus}\r\n      setSaveStatus={setSaveStatus}\r\n      createRfiInfo={createRfiInfo}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}