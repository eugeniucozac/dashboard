{"ast":null,"code":"import \"core-js/modules/es.array.map\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Breadcrumb\\\\Breadcrumb.stories.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Breadcrumb } from 'components';\nimport { withKnobs, number, select } from '@storybook/addon-knobs';\nimport capitalize from 'lodash/capitalize';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Breadcrumb',\n  component: Breadcrumb,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  var links = ['home', 'departments', 'products', 'electronics', 'office', 'computers', 'monitors', '4k'];\n  var count = number('Count', 3, {\n    range: true,\n    min: 0,\n    max: 8,\n    step: 1\n  });\n  var active = select('Active', links, 'home');\n\n  var isActive = function isActive(name) {\n    return active === name;\n  };\n\n  return /*#__PURE__*/_jsxDEV(Breadcrumb, {\n    links: links.filter(function (l, index) {\n      return index < count;\n    }).map(function (l) {\n      return {\n        name: l,\n        label: capitalize(l),\n        link: '/iframe.html',\n        active: isActive(l)\n      };\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, _this);\n};\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Breadcrumb\\\\Breadcrumb.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\Breadcrumb\\\\Breadcrumb.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Breadcrumb/Breadcrumb.stories.js"],"names":["React","Breadcrumb","withKnobs","number","select","capitalize","title","component","decorators","Default","links","count","range","min","max","step","active","isActive","name","filter","l","index","map","label","link"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,UAAT,QAA2B,YAA3B;AACA,SAASC,SAAT,EAAoBC,MAApB,EAA4BC,MAA5B,QAA0C,wBAA1C;AACA,OAAOC,UAAP,MAAuB,mBAAvB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,YADM;AAEbC,EAAAA,SAAS,EAAEN,UAFE;AAGbO,EAAAA,UAAU,EAAE,CAACN,SAAD;AAHC,CAAf;AAMA,OAAO,IAAMO,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,MAAMC,KAAK,GAAG,CAAC,MAAD,EAAS,aAAT,EAAwB,UAAxB,EAAoC,aAApC,EAAmD,QAAnD,EAA6D,WAA7D,EAA0E,UAA1E,EAAsF,IAAtF,CAAd;AACA,MAAMC,KAAK,GAAGR,MAAM,CAAC,OAAD,EAAU,CAAV,EAAa;AAAES,IAAAA,KAAK,EAAE,IAAT;AAAeC,IAAAA,GAAG,EAAE,CAApB;AAAuBC,IAAAA,GAAG,EAAE,CAA5B;AAA+BC,IAAAA,IAAI,EAAE;AAArC,GAAb,CAApB;AACA,MAAMC,MAAM,GAAGZ,MAAM,CAAC,QAAD,EAAWM,KAAX,EAAkB,MAAlB,CAArB;;AAEA,MAAMO,QAAQ,GAAG,SAAXA,QAAW,CAACC,IAAD,EAAU;AACzB,WAAOF,MAAM,KAAKE,IAAlB;AACD,GAFD;;AAIA,sBACE,QAAC,UAAD;AACE,IAAA,KAAK,EAAER,KAAK,CACTS,MADI,CACG,UAACC,CAAD,EAAIC,KAAJ;AAAA,aAAcA,KAAK,GAAGV,KAAtB;AAAA,KADH,EAEJW,GAFI,CAEA,UAACF,CAAD;AAAA,aAAQ;AACXF,QAAAA,IAAI,EAAEE,CADK;AAEXG,QAAAA,KAAK,EAAElB,UAAU,CAACe,CAAD,CAFN;AAGXI,QAAAA,IAAI,EAAE,cAHK;AAIXR,QAAAA,MAAM,EAAEC,QAAQ,CAACG,CAAD;AAJL,OAAR;AAAA,KAFA;AADT;AAAA;AAAA;AAAA;AAAA,WADF;AAYD,CArBM;AAAMX,O;KAAAA,O","sourcesContent":["import React from 'react';\r\nimport { Breadcrumb } from 'components';\r\nimport { withKnobs, number, select } from '@storybook/addon-knobs';\r\nimport capitalize from 'lodash/capitalize';\r\n\r\nexport default {\r\n  title: 'Breadcrumb',\r\n  component: Breadcrumb,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const links = ['home', 'departments', 'products', 'electronics', 'office', 'computers', 'monitors', '4k'];\r\n  const count = number('Count', 3, { range: true, min: 0, max: 8, step: 1 });\r\n  const active = select('Active', links, 'home');\r\n\r\n  const isActive = (name) => {\r\n    return active === name;\r\n  };\r\n\r\n  return (\r\n    <Breadcrumb\r\n      links={links\r\n        .filter((l, index) => index < count)\r\n        .map((l) => ({\r\n          name: l,\r\n          label: capitalize(l),\r\n          link: '/iframe.html',\r\n          active: isActive(l),\r\n        }))}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}