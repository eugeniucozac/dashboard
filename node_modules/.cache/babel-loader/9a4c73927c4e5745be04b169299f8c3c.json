{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsAcknowledgement\\\\ClaimsAcknowledgement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\nimport { selectClaimIdUnderProgress, selectClaimsInformation, selectLossId, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectCatCodes, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClaimsAcknowledgement(props) {\n  _s();\n\n  var _get, _useSelector, _catCodes$find, _policySections$find, _interests$find;\n\n  var claimData = useSelector(selectClaimIdUnderProgress);\n  var claimId = (_get = get(claimData, 'claimID')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      generateLetterChecked = _useState2[0],\n      setGenerateLetterChecked = _useState2[1];\n\n  var lossInformation = useSelector(selectLossId);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var catCodes = useSelector(selectCatCodes);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.id) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? \"Our Share\" : \"100%\",\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n  var dispatch = useDispatch();\n  useEffect(function () {\n    var _claimData$data, _claimData$data2, _claimData$data3, _claimData$data4;\n\n    dispatch(getLossInformation(claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID, claimData === null || claimData === void 0 ? void 0 : claimData.sourceID, claimData === null || claimData === void 0 ? void 0 : claimData.divisionID, claimData === null || claimData === void 0 ? void 0 : claimData.claimReference));\n    dispatch(getClaimsPreviewInformation(claimId, claimData === null || claimData === void 0 ? void 0 : (_claimData$data = claimData.data) === null || _claimData$data === void 0 ? void 0 : _claimData$data.claimReference, claimData === null || claimData === void 0 ? void 0 : (_claimData$data2 = claimData.data) === null || _claimData$data2 === void 0 ? void 0 : _claimData$data2.sourceID, (claimData === null || claimData === void 0 ? void 0 : (_claimData$data3 = claimData.data) === null || _claimData$data3 === void 0 ? void 0 : _claimData$data3.divisionID) || (claimData === null || claimData === void 0 ? void 0 : (_claimData$data4 = claimData.data) === null || _claimData$data4 === void 0 ? void 0 : _claimData$data4.departmentID)));\n    dispatch(getPolicyInformation());\n    dispatch(getPolicySections());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.claimInformation.location') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.complexity') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.referral') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? \"Yes\" : \"No\"\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : \"NA\"\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : \"NA\",\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : \"NA\",\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : \"NA\",\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.originalCurrency,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.settlementCurrency,\n    isLoading: isPolicyInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ClaimsAcknowledgementView, _objectSpread(_objectSpread({}, props), {}, {\n      generateLetterChecked: generateLetterChecked,\n      setGenerateLetterChecked: setGenerateLetterChecked,\n      handleClaim: props === null || props === void 0 ? void 0 : props.handleClaim,\n      handleFinish: props === null || props === void 0 ? void 0 : props.handleFinish,\n      handleStep: props === null || props === void 0 ? void 0 : props.handleStep,\n      claimId: claimId,\n      claimsInformation: claimsInformation,\n      lossInfo: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n        return _objectSpread(_objectSpread({}, info), {}, {\n          isLoading: isLossInfoLoading\n        });\n      }),\n      policyInfo: policyInfo,\n      claimInfo: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n        return _objectSpread(_objectSpread({}, info), {}, {\n          isLoading: isClaimInfoLoading\n        });\n      }),\n      underWritingInfo: underWritingInfo,\n      underWritingGroupColumns: underWritingGroupColumns\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsAcknowledgement, \"CyVCLe0yZlMVJy+xqYlIdY6bzqs=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ClaimsAcknowledgement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsAcknowledgement\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsAcknowledgement/ClaimsAcknowledgement.js"],"names":["React","useState","useEffect","useSelector","useDispatch","get","moment","utils","ClaimsAcknowledgementView","selectClaimIdUnderProgress","selectClaimsInformation","selectLossId","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectCatCodes","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","config","constants","ClaimsAcknowledgement","props","claimData","claimId","claimsInformation","generateLetterChecked","setGenerateLetterChecked","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","catCodes","catCode","find","item","Number","id","catCodesID","description","policySections","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","toString","name","dispatch","lossDetailID","sourceID","divisionID","claimReference","data","departmentID","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","lossDescription","claimInfo","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","location","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","bordereauClaim","bordereauPeriod","claimStatus","policyInfo","policyRef","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","originalCurrency","settlementCurrency","underWritingGroupColumns","label","handleClaim","handleFinish","handleStep","map","info"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from 'utils';\r\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\r\nimport {\r\n  selectClaimIdUnderProgress,\r\n  selectClaimsInformation,\r\n  selectLossId,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectCatCodes,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n\r\n\r\nexport default function ClaimsAcknowledgement(props) {\r\n  const claimData = useSelector(selectClaimIdUnderProgress);\r\n  const claimId = get(claimData, 'claimID') ?? '';\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const [generateLetterChecked, setGenerateLetterChecked] = useState(false);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading)\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading)\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading)\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading)\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const catCode = catCodes.find((item) => Number(item.id) === lossInformation.catCodesID)?.description;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder ? \"Our Share\" : \"100%\",\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n        ? utils.string.t('app.all')\r\n        : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  }\r\n\r\n  const dispatch = useDispatch()\r\n  useEffect(() => {\r\n    dispatch(getLossInformation(claimData?.lossDetailID, claimData?.sourceID, claimData?.divisionID, claimData?.claimReference));\r\n    dispatch(getClaimsPreviewInformation(claimId, claimData?.data?.claimReference, claimData?.data?.sourceID, claimData?.data?.divisionID || claimData?.data?.departmentID));\r\n    dispatch(getPolicyInformation());\r\n    dispatch(getPolicySections());\r\n\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    { title: utils.string.t('claims.lossInformation.fromDate'), value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric) },\r\n    { title: utils.string.t('claims.lossInformation.toDate'), value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric) },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    { title: utils.string.t('claims.lossInformation.dateAndTime'), value: lossInformation?.firstContactDate && moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime) },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.lossRef },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n  ]\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    { title: utils.string.t('claims.claimInformation.claimReceivedDateTime'), value: claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric) },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'), value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime) },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateTo'), value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime) },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    { title: utils.string.t('claims.claimInformation.location') + '*', value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'), value: claimsInformation?.beAdjusterID === 0\r\n        ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n        : utils.string.t('claims.claimInformation.beAdjuster')\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.adjustorName'), value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName },\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.complexity') + '*', value: claimsInformation?.complexity },\r\n    { title: utils.string.t('claims.claimInformation.referral') + '*', value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse') + '*', value: claimsInformation?.referralResponseDescription },\r\n    { title: utils.string.t('claims.claimInformation.bordereauClaim') + '*', value: claimsInformation?.bordereauClaim === 1 ? \"Yes\" : \"No\" },\r\n    { title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*', value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : \"NA\" },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus') + '*', value: claimsInformation?.claimStatus },\r\n  ]\r\n  const policyInfo = [\r\n    { title: utils.string.t('claims.columns.claimsManagement.policyRef'), value: policyInformation?.policyRef, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.policyType'), value: policyInformation?.policyType, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.searchPolicy.columns.policyStatus'), value: policyInformation?.statusCode, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.division'), value: policyInformation?.division, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.searchPolicy.columns.riskDetails'), value: policyInformation?.policyNote, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.reinsured'), value: policyInformation?.reInsured, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.searchPolicy.columns.inceptionDate'), value: policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime), isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.searchPolicy.columns.expiryDate'), value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime), isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.interest'), value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description, isLoading: isClaimInfoLoading },\r\n    { title: utils.string.t('claims.claimInformation.certificateInceptionDate'), value: claimsInformation?.isBordereau ? claimsInformation?.certificateInceptionDate && moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : \"NA\", isLoading: isClaimInfoLoading },\r\n    { title: utils.string.t('claims.claimInformation.certificateExpiryDate'), value: claimsInformation?.isBordereau ? claimsInformation?.certificateExpiryDate && moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : \"NA\", isLoading: isClaimInfoLoading },\r\n    { title: utils.string.t('claims.claimInformation.certificateNumber'), value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : \"NA\", isLoading: isClaimInfoLoading },\r\n    { title: utils.string.t('claims.claimInformation.originalCurrency'), value: policyInformation?.originalCurrency, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.claimInformation.settlementCurrency'), value: policyInformation?.settlementCurrency, isLoading: isPolicyInfoLoading },\r\n  ]\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ClaimsAcknowledgementView\r\n        {...props}\r\n        generateLetterChecked={generateLetterChecked}\r\n        setGenerateLetterChecked={setGenerateLetterChecked}\r\n        handleClaim={props?.handleClaim}\r\n        handleFinish={props?.handleFinish}\r\n        handleStep={props?.handleStep}\r\n        claimId={claimId}\r\n        claimsInformation={claimsInformation}\r\n        lossInfo={lossInfo?.map(info => ({\r\n          ...info,\r\n          isLoading: isLossInfoLoading\r\n        }))}\r\n        policyInfo={policyInfo}\r\n        claimInfo={claimInfo?.map(info => ({\r\n          ...info,\r\n          isLoading: isClaimInfoLoading\r\n        }))}\r\n        underWritingInfo={underWritingInfo}\r\n        underWritingGroupColumns={underWritingGroupColumns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}