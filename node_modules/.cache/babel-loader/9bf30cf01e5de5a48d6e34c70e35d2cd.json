{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AdminOffices\\\\AdminOffices.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport { Button, Translate, TableCell, TableHead, Overflow, Pagination, FilterBar, PopoverMenu } from 'components';\nimport styles from './AdminOffices.styles';\nimport * as utils from 'utils'; // mui\n\nimport { Table, TableRow, TableBody, makeStyles, Box, Grid } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAdminOfficesView.propTypes = {\n  parents: PropTypes.array,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number\n  }).isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  sort: PropTypes.object,\n  handleClickRow: PropTypes.func,\n  handleCreateClientOffice: PropTypes.func,\n  selectedId: PropTypes.number,\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  popoverActions: PropTypes.array.isRequired\n};\nexport function AdminOfficesView(_ref) {\n  var _tableRowClasses,\n      _this = this;\n\n  var popoverActions = _ref.popoverActions,\n      pagination = _ref.pagination,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      _ref$parents = _ref.parents,\n      parents = _ref$parents === void 0 ? [] : _ref$parents,\n      sort = _ref.sort,\n      selectedId = _ref.selectedId,\n      handleClickRow = _ref.handleClickRow,\n      fields = _ref.fields,\n      actions = _ref.actions,\n      handleCreateClientOffice = _ref.handleCreateClientOffice;\n  var classes = makeStyles(styles, {\n    name: 'AdminOffices'\n  })();\n  var cols = [{\n    id: 'client-logo'\n  }, {\n    id: 'client',\n    label: utils.string.t('admin.client')\n  }, {\n    id: 'office',\n    label: utils.string.t('admin.office_plural')\n  }, {\n    id: 'edit'\n  }];\n  var tableRowClasses = (_tableRowClasses = {}, _defineProperty(_tableRowClasses, classes.parentRow, true), _defineProperty(_tableRowClasses, classes.hover, handleClickRow && utils.generic.isFunction(handleClickRow)), _tableRowClasses);\n\n  var OfficeRow = function OfficeRow(_ref2) {\n    var office = _ref2.office;\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        nestedClasses: {\n          root: classes.officeCell\n        },\n        nowrap: true,\n        \"data-testid\": \"office-\".concat(office.name),\n        children: office.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 61,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        menu: true,\n        \"data-testid\": \"admin-office-menu\",\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          id: \"admin-office-table-popover\",\n          data: {\n            office: office\n          },\n          items: popoverActions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 9\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var NoOffices = function NoOffices() {\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        nestedClasses: {\n          root: classes.officeCell\n        },\n        nowrap: true,\n        children: utils.string.t('admin.noOffices')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 5\n    }, _this);\n  };\n\n  var NoClients = function NoClients() {\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: utils.string.t('admin.noClients')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 7\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: 2\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 84,\n        columnNumber: 7\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n      id: \"officeFilter\",\n      fields: fields,\n      actions: actions\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"office-list\",\n          children: [parents.map(function (parent, index) {\n            var logo = utils.client.parent.getLogoFilePath(parent);\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                onClick: function onClick() {\n                  return handleClickRow(parent.id);\n                },\n                className: classnames(tableRowClasses, _defineProperty({}, classes.selectedRow, selectedId === parent.id)),\n                hover: true,\n                \"data-testid\": \"parent-row-id-\".concat(parent.id),\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  nowrap: true,\n                  nestedClasses: {\n                    root: classes.logoCell\n                  },\n                  children: logo && /*#__PURE__*/_jsxDEV(\"img\", {\n                    src: logo,\n                    alt: \"logo \".concat(parent.name),\n                    className: classes.logo\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 32\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 107,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  nowrap: true,\n                  \"data-testid\": \"parent-row-name-\".concat(parent.name),\n                  children: parent.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.officeCell\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 114,\n                  columnNumber: 21\n                }, _this)]\n              }, index, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 19\n              }, _this), selectedId === parent.id && (!parent.offices || parent.offices.length === 0 ? /*#__PURE__*/_jsxDEV(NoOffices, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 118,\n                columnNumber: 23\n              }, _this) : parent.offices.map(function (office, index) {\n                return /*#__PURE__*/_jsxDEV(OfficeRow, {\n                  office: office\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 61\n                }, _this);\n              }))]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, _this);\n          }), parents.length === 0 && /*#__PURE__*/_jsxDEV(NoClients, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 38\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            color: \"primary\",\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"admin.createOffice\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 21\n            }, this),\n            \"data-testid\": \"admin-create-office-button\",\n            onClick: function onClick() {\n              return handleCreateClientOffice();\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handleChangePage,\n          onChangeRowsPerPage: handleChangeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 89,\n    columnNumber: 5\n  }, this);\n}\n_c = AdminOfficesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdminOfficesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AdminOffices/AdminOffices.view.js"],"names":["React","Fragment","PropTypes","classnames","Button","Translate","TableCell","TableHead","Overflow","Pagination","FilterBar","PopoverMenu","styles","utils","Table","TableRow","TableBody","makeStyles","Box","Grid","AddIcon","AdminOfficesView","propTypes","parents","array","pagination","shape","page","number","isRequired","rowsPerPage","rowsTotal","handleChangePage","func","handleChangeRowsPerPage","sort","object","handleClickRow","handleCreateClientOffice","selectedId","fields","actions","popoverActions","classes","name","cols","id","label","string","t","tableRowClasses","parentRow","hover","generic","isFunction","OfficeRow","office","root","officeCell","NoOffices","NoClients","map","parent","index","logo","client","getLogoFilePath","selectedRow","logoCell","offices","length"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport { Button, Translate, TableCell, TableHead, Overflow, Pagination, FilterBar, PopoverMenu } from 'components';\r\nimport styles from './AdminOffices.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Table, TableRow, TableBody, makeStyles, Box, Grid } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nAdminOfficesView.propTypes = {\r\n  parents: PropTypes.array,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number,\r\n  }).isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  sort: PropTypes.object,\r\n  handleClickRow: PropTypes.func,\r\n  handleCreateClientOffice: PropTypes.func,\r\n  selectedId: PropTypes.number,\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function AdminOfficesView({\r\n  popoverActions,\r\n  pagination,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  parents = [],\r\n  sort,\r\n  selectedId,\r\n  handleClickRow,\r\n  fields,\r\n  actions,\r\n  handleCreateClientOffice,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'AdminOffices' })();\r\n  const cols = [\r\n    { id: 'client-logo' },\r\n    { id: 'client', label: utils.string.t('admin.client') },\r\n    { id: 'office', label: utils.string.t('admin.office_plural') },\r\n    { id: 'edit' },\r\n  ];\r\n\r\n  const tableRowClasses = {\r\n    [classes.parentRow]: true,\r\n    [classes.hover]: handleClickRow && utils.generic.isFunction(handleClickRow),\r\n  };\r\n\r\n  const OfficeRow = ({ office }) => (\r\n    <TableRow>\r\n      <TableCell colSpan={2} />\r\n      <TableCell nestedClasses={{ root: classes.officeCell }} nowrap data-testid={`office-${office.name}`}>\r\n        {office.name}\r\n      </TableCell>\r\n      <TableCell menu data-testid=\"admin-office-menu\">\r\n        <PopoverMenu id=\"admin-office-table-popover\" data={{ office }} items={popoverActions} />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n\r\n  const NoOffices = () => (\r\n    <TableRow>\r\n      <TableCell colSpan={2} />\r\n      <TableCell nestedClasses={{ root: classes.officeCell }} nowrap>\r\n        {utils.string.t('admin.noOffices')}\r\n      </TableCell>\r\n      <TableCell />\r\n    </TableRow>\r\n  );\r\n\r\n  const NoClients = () => (\r\n    <TableRow>\r\n      <TableCell />\r\n      <TableCell>{utils.string.t('admin.noClients')}</TableCell>\r\n      <TableCell colSpan={2} />\r\n    </TableRow>\r\n  );\r\n\r\n  return (\r\n    <div>\r\n      <FilterBar id=\"officeFilter\" fields={fields} actions={actions} />\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody data-testid=\"office-list\">\r\n            {parents.map((parent, index) => {\r\n              const logo = utils.client.parent.getLogoFilePath(parent);\r\n\r\n              return (\r\n                <Fragment key={index}>\r\n                  <TableRow\r\n                    onClick={() => handleClickRow(parent.id)}\r\n                    className={classnames(tableRowClasses, { [classes.selectedRow]: selectedId === parent.id })}\r\n                    hover\r\n                    key={index}\r\n                    data-testid={`parent-row-id-${parent.id}`}\r\n                  >\r\n                    <TableCell nowrap nestedClasses={{ root: classes.logoCell }}>\r\n                      {logo && <img src={logo} alt={`logo ${parent.name}`} className={classes.logo} />}\r\n                    </TableCell>\r\n                    <TableCell nowrap data-testid={`parent-row-name-${parent.name}`}>\r\n                      {parent.name}\r\n                    </TableCell>\r\n                    <TableCell className={classes.officeCell} />\r\n                    <TableCell />\r\n                  </TableRow>\r\n                  {selectedId === parent.id &&\r\n                    (!parent.offices || parent.offices.length === 0 ? (\r\n                      <NoOffices />\r\n                    ) : (\r\n                      parent.offices.map((office, index) => <OfficeRow key={index} office={office} />)\r\n                    ))}\r\n                </Fragment>\r\n              );\r\n            })}\r\n            {parents.length === 0 && <NoClients />}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box mt={2}>\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              text={<Translate label=\"admin.createOffice\" />}\r\n              data-testid=\"admin-create-office-button\"\r\n              onClick={() => handleCreateClientOffice()}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          <Pagination\r\n            page={pagination.page}\r\n            count={pagination.rowsTotal}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n            onChangePage={handleChangePage}\r\n            onChangeRowsPerPage={handleChangeRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}