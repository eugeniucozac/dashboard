{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditQuote\\\\EditQuote.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport get from 'lodash/get';\nimport isNumber from 'lodash/isNumber'; // app\n\nimport * as constants from 'consts';\nimport { EditQuoteView } from './EditQuote.view';\nimport styles from './EditQuote.styles';\nimport { enqueueNotification, hideModal, postPlacementEditQuote, selectRefDataStatusesMarketQuote, selectRefDataCapacityTypes } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, InputAdornment } from '@material-ui/core';\nimport GavelIcon from '@material-ui/icons/Gavel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditQuote.propTypes = {\n  policy: PropTypes.object.isRequired,\n  policyMarket: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function EditQuote(_ref) {\n  _s();\n\n  var _ref$policy = _ref.policy,\n      policy = _ref$policy === void 0 ? {} : _ref$policy,\n      _ref$policyMarket = _ref.policyMarket,\n      policyMarket = _ref$policyMarket === void 0 ? {} : _ref$policyMarket,\n      handleClose = _ref.handleClose;\n  var referenceDataStatusesPolicyMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'EditQuote'\n  })();\n\n  var isAmountRequired = function isAmountRequired(form, value) {\n    if (isNumber(value)) return true;\n    var statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\n    return !form.statusId || form.statusId !== statusQuotedId.toString();\n  };\n\n  var isQuoteDirty = function isQuoteDirty(form) {\n    return form.isLeader || form.lineToStand || !!form.premium || form.premium === 0 || !!form.writtenLinePercentage || form.writtenLinePercentage === 0 || !!form.subjectivities || !!form.validUntilDate;\n  };\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCapacityVisible = _useState2[0],\n      setIsCapacityVisible = _useState2[1];\n\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\n  useEffect(function () {\n    if (!refDataStatusesMarketQuote || !refDataStatusesMarketQuote.length > 0) {\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.generic.reload', 'error'));\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var fields = [{\n    name: 'statusId',\n    type: 'select',\n    value: get(policyMarket, 'statusId') || '',\n    options: refDataStatusesMarketQuote,\n    optionKey: 'id',\n    optionLabel: 'code',\n    validation: Yup.string().test('statusId', utils.string.t('validation.required'), function () {\n      return isQuoteDirty(this.options.parent) ? this.options.parent.statusId : true;\n    }),\n    label: utils.string.t('placement.form.status.label'),\n    muiComponentProps: {\n      autoFocus: true\n    }\n  }, {\n    name: 'quoteOptions',\n    type: 'checkbox',\n    options: [{\n      label: utils.string.t('placement.form.lead.label'),\n      name: 'isLeader',\n      value: get(policyMarket, 'isLeader')\n    }, {\n      label: utils.string.t('placement.form.lineToStand.label'),\n      name: 'lineToStand',\n      value: get(policyMarket, 'lineToStand')\n    }]\n  }, {\n    name: 'currency',\n    type: 'text',\n    value: utils.policy.getCurrency(policy, ''),\n    label: utils.string.t('placement.form.currency.label'),\n    muiComponentProps: {\n      InputProps: {\n        readOnly: true,\n        disabled: true\n      }\n    }\n  }, {\n    name: 'premium',\n    type: 'number',\n    value: isNumber(get(policyMarket, 'premium')) ? get(policyMarket, 'premium') : '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('premium', utils.string.t('validation.required'), function () {\n      return isAmountRequired(this.options.parent, this.options.parent.premium);\n    }),\n    label: utils.string.t('placement.form.premium.label'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }, {\n    name: 'writtenLinePercentage',\n    type: 'number',\n    value: isNumber(get(policyMarket, 'writtenLinePercentage')) ? get(policyMarket, 'writtenLinePercentage') : '',\n    validation: Yup.number().nullable().min(0).max(100).percent().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('writtenLinePercentage', utils.string.t('validation.required'), function () {\n      return isAmountRequired(this.options.parent, this.options.parent.writtenLinePercentage);\n    }),\n    label: utils.string.t('placement.form.written.label'),\n    muiComponentProps: {\n      autoComplete: 'off',\n      fullWidth: false,\n      InputProps: {\n        startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n          position: \"start\",\n          className: classes.iconWritten,\n          children: /*#__PURE__*/_jsxDEV(GavelIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 155,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 13\n        }, this)\n      }\n    }\n  }, {\n    name: 'subjectivities',\n    type: 'textarea',\n    value: get(policyMarket, 'subjectivities') || '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.subjectivities.label'),\n    muiComponentProps: {\n      multiline: true,\n      minRows: 2,\n      maxRows: 6\n    }\n  }, {\n    name: 'quoteDate',\n    type: 'datepicker',\n    label: utils.string.t('placement.form.dateFrom.label'),\n    value: get(policyMarket, 'quoteDate') || utils.date.today(),\n    validation: Yup.string().nullable().test('quoteDate', utils.string.t('validation.required'), function () {\n      return isQuoteDirty(this.options.parent) ? this.options.parent.quoteDate : true;\n    }),\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }, {\n    name: 'validUntilDate',\n    type: 'datepicker',\n    label: utils.string.t('placement.form.dateExpiry.label'),\n    value: get(policyMarket, 'validUntilDate') || null,\n    validation: Yup.string().nullable(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    muiPickerProps: {\n      clearable: true\n    }\n  }, {\n    name: 'capacityTypeId',\n    type: 'select',\n    value: get(policyMarket, 'market.capacityTypeId') || '',\n    margin: 'none',\n    options: refDataCapacityTypes,\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('placement.form.capacityType.label')\n  }, {\n    name: 'policyMarketId',\n    type: 'hidden',\n    value: get(policyMarket, 'id')\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      return dispatch(postPlacementEditQuote(values));\n    }\n  }];\n\n  var handleShowCapacity = function handleShowCapacity() {\n    setIsCapacityVisible(true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(EditQuoteView, {\n    fields: fields,\n    actions: actions,\n    isCapacityVisible: isCapacityVisible,\n    handleShowCapacity: handleShowCapacity\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 234,\n    columnNumber: 10\n  }, this);\n}\n\n_s(EditQuote, \"NAi1WabOVLSp6IPBiPjvtMUVsO8=\", false, function () {\n  return [useSelector, useDispatch, useSelector, useSelector];\n});\n\n_c = EditQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditQuote\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditQuote/EditQuote.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","get","isNumber","constants","EditQuoteView","styles","enqueueNotification","hideModal","postPlacementEditQuote","selectRefDataStatusesMarketQuote","selectRefDataCapacityTypes","utils","makeStyles","InputAdornment","GavelIcon","EditQuote","propTypes","policy","object","isRequired","policyMarket","handleClose","func","referenceDataStatusesPolicyMarketQuote","dispatch","classes","name","isAmountRequired","form","value","statusQuotedId","referenceData","status","getIdByCode","STATUS_MARKET_QUOTED","statusId","toString","isQuoteDirty","isLeader","lineToStand","premium","writtenLinePercentage","subjectivities","validUntilDate","isCapacityVisible","setIsCapacityVisible","refDataStatusesMarketQuote","refDataCapacityTypes","length","fields","type","options","optionKey","optionLabel","validation","string","test","t","parent","label","muiComponentProps","autoFocus","getCurrency","InputProps","readOnly","disabled","number","nullable","min","currency","transform","originalvalue","isType","Number","isNaN","autoComplete","max","percent","fullWidth","startAdornment","iconWritten","multiline","minRows","maxRows","date","today","quoteDate","muiPickerProps","clearable","margin","actions","handler","values","handleShowCapacity"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport get from 'lodash/get';\r\nimport isNumber from 'lodash/isNumber';\r\n\r\n// app\r\nimport * as constants from 'consts';\r\nimport { EditQuoteView } from './EditQuote.view';\r\nimport styles from './EditQuote.styles';\r\nimport {\r\n  enqueueNotification,\r\n  hideModal,\r\n  postPlacementEditQuote,\r\n  selectRefDataStatusesMarketQuote,\r\n  selectRefDataCapacityTypes,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, InputAdornment } from '@material-ui/core';\r\nimport GavelIcon from '@material-ui/icons/Gavel';\r\n\r\nEditQuote.propTypes = {\r\n  policy: PropTypes.object.isRequired,\r\n  policyMarket: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditQuote({ policy = {}, policyMarket = {}, handleClose }) {\r\n  const referenceDataStatusesPolicyMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'EditQuote' })();\r\n\r\n  const isAmountRequired = (form, value) => {\r\n    if (isNumber(value)) return true;\r\n\r\n    const statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n    return !form.statusId || form.statusId !== statusQuotedId.toString();\r\n  };\r\n\r\n  const isQuoteDirty = (form) => {\r\n    return (\r\n      form.isLeader ||\r\n      form.lineToStand ||\r\n      !!form.premium ||\r\n      form.premium === 0 ||\r\n      !!form.writtenLinePercentage ||\r\n      form.writtenLinePercentage === 0 ||\r\n      !!form.subjectivities ||\r\n      !!form.validUntilDate\r\n    );\r\n  };\r\n\r\n  const [isCapacityVisible, setIsCapacityVisible] = useState(false);\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!refDataStatusesMarketQuote || !refDataStatusesMarketQuote.length > 0) {\r\n        dispatch(hideModal());\r\n        dispatch(enqueueNotification('notification.generic.reload', 'error'));\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const fields = [\r\n    {\r\n      name: 'statusId',\r\n      type: 'select',\r\n      value: get(policyMarket, 'statusId') || '',\r\n      options: refDataStatusesMarketQuote,\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n      validation: Yup.string().test('statusId', utils.string.t('validation.required'), function () {\r\n        return isQuoteDirty(this.options.parent) ? this.options.parent.statusId : true;\r\n      }),\r\n      label: utils.string.t('placement.form.status.label'),\r\n      muiComponentProps: {\r\n        autoFocus: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'quoteOptions',\r\n      type: 'checkbox',\r\n      options: [\r\n        {\r\n          label: utils.string.t('placement.form.lead.label'),\r\n          name: 'isLeader',\r\n          value: get(policyMarket, 'isLeader'),\r\n        },\r\n        {\r\n          label: utils.string.t('placement.form.lineToStand.label'),\r\n          name: 'lineToStand',\r\n          value: get(policyMarket, 'lineToStand'),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'currency',\r\n      type: 'text',\r\n      value: utils.policy.getCurrency(policy, ''),\r\n      label: utils.string.t('placement.form.currency.label'),\r\n      muiComponentProps: {\r\n        InputProps: {\r\n          readOnly: true,\r\n          disabled: true,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'premium',\r\n      type: 'number',\r\n      value: isNumber(get(policyMarket, 'premium')) ? get(policyMarket, 'premium') : '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('premium', utils.string.t('validation.required'), function () {\r\n          return isAmountRequired(this.options.parent, this.options.parent.premium);\r\n        }),\r\n      label: utils.string.t('placement.form.premium.label'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n    {\r\n      name: 'writtenLinePercentage',\r\n      type: 'number',\r\n      value: isNumber(get(policyMarket, 'writtenLinePercentage')) ? get(policyMarket, 'writtenLinePercentage') : '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .max(100)\r\n        .percent()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('writtenLinePercentage', utils.string.t('validation.required'), function () {\r\n          return isAmountRequired(this.options.parent, this.options.parent.writtenLinePercentage);\r\n        }),\r\n      label: utils.string.t('placement.form.written.label'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        fullWidth: false,\r\n        InputProps: {\r\n          startAdornment: (\r\n            <InputAdornment position=\"start\" className={classes.iconWritten}>\r\n              <GavelIcon />\r\n            </InputAdornment>\r\n          ),\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'subjectivities',\r\n      type: 'textarea',\r\n      value: get(policyMarket, 'subjectivities') || '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.subjectivities.label'),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 2,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n    {\r\n      name: 'quoteDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('placement.form.dateFrom.label'),\r\n      value: get(policyMarket, 'quoteDate') || utils.date.today(),\r\n      validation: Yup.string()\r\n        .nullable()\r\n        .test('quoteDate', utils.string.t('validation.required'), function () {\r\n          return isQuoteDirty(this.options.parent) ? this.options.parent.quoteDate : true;\r\n        }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'validUntilDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('placement.form.dateExpiry.label'),\r\n      value: get(policyMarket, 'validUntilDate') || null,\r\n      validation: Yup.string().nullable(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      muiPickerProps: {\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'capacityTypeId',\r\n      type: 'select',\r\n      value: get(policyMarket, 'market.capacityTypeId') || '',\r\n      margin: 'none',\r\n      options: refDataCapacityTypes,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('placement.form.capacityType.label'),\r\n    },\r\n    {\r\n      name: 'policyMarketId',\r\n      type: 'hidden',\r\n      value: get(policyMarket, 'id'),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => dispatch(postPlacementEditQuote(values)),\r\n    },\r\n  ];\r\n\r\n  const handleShowCapacity = () => {\r\n    setIsCapacityVisible(true);\r\n  };\r\n\r\n  return <EditQuoteView fields={fields} actions={actions} isCapacityVisible={isCapacityVisible} handleShowCapacity={handleShowCapacity} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}