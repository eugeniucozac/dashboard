{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout, addLoader, removeLoader, storeProcessingInstruction } from 'stores';\nimport * as utils from 'utils';\nexport var getProcessingInstructionStatusUpdate = function getProcessingInstructionStatusUpdate(instructionId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getProcessingInstruction'\n    };\n    var putBody = {\n      id: instructionId,\n      statusId: 5\n    };\n    dispatch(getProcessingInstructionStatusRequest({\n      putBody: putBody\n    }));\n    dispatch(addLoader('getProcessingInstruction'));\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: \"instruction\",\n      data: putBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var processingInstruction = data.data;\n      dispatch(getProcessingInstructionStatusSuccess(processingInstruction));\n      dispatch(storeProcessingInstruction(processingInstruction));\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.getProcessingInstructionId)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getProcessingInstructionStatusFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getProcessingInstruction'));\n    });\n  };\n};\nexport var getProcessingInstructionStatusRequest = function getProcessingInstructionStatusRequest(payload) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_STATUS_REQUEST',\n    payload: payload\n  };\n};\nexport var getProcessingInstructionStatusSuccess = function getProcessingInstructionStatusSuccess(data) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_STATUS_SUCCESS',\n    payload: data\n  };\n};\nexport var getProcessingInstructionStatusFailure = function getProcessingInstructionStatusFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.getProcessingInstructionStatusUpdate.js"],"names":["authLogout","addLoader","removeLoader","storeProcessingInstruction","utils","getProcessingInstructionStatusUpdate","instructionId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","putBody","id","statusId","getProcessingInstructionStatusRequest","api","patch","token","accessToken","ppService","path","data","then","response","handleResponse","json","handleNewData","processingInstruction","getProcessingInstructionStatusSuccess","catch","err","handleError","message","handleUnauthorized","getProcessingInstructionStatusFailure","finally","payload","type","error"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,EAA8CC,0BAA9C,QAAgF,QAAhF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,oCAAoC,GAAG,SAAvCA,oCAAuC,CAACC,aAAD;AAAA,SAAmB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7F;AAD6F,oBAEpCA,QAAQ,EAF4B;AAAA,QAE7EC,IAF6E,aAErFC,IAFqF,CAE7ED,IAF6E;AAAA,QAEnDE,QAFmD,aAErEC,MAFqE,CAE3DC,IAF2D,CAEnDF,QAFmD;;AAI7F,QAAMG,YAAY,GAAG;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAArB;AACA,QAAMC,OAAO,GAAG;AACdC,MAAAA,EAAE,EAAEX,aADU;AAEdY,MAAAA,QAAQ,EAAE;AAFI,KAAhB;AAKAX,IAAAA,QAAQ,CAACY,qCAAqC,CAAC;AAAEH,MAAAA,OAAO,EAAPA;AAAF,KAAD,CAAtC,CAAR;AACAT,IAAAA,QAAQ,CAACN,SAAS,CAAC,0BAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACgB,GAAN,CACJC,KADI,CACE;AACLC,MAAAA,KAAK,EAAEb,IAAI,CAACc,WADP;AAELZ,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,SAFd;AAGLC,MAAAA,IAAI,eAHC;AAILC,MAAAA,IAAI,EAAEV;AAJD,KADF,EAOJW,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcxB,KAAK,CAACgB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU1B,KAAK,CAACgB,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACd,UAAMM,qBAAqB,GAAGN,IAAI,CAACA,IAAnC;AACAnB,MAAAA,QAAQ,CAAC0B,qCAAqC,CAACD,qBAAD,CAAtC,CAAR;AACAzB,MAAAA,QAAQ,CAACJ,0BAA0B,CAAC6B,qBAAD,CAA3B,CAAR;AACD,KAbI,EAcJE,KAdI,CAcE,UAACC,GAAD,EAAS;AACd/B,MAAAA,KAAK,CAACgB,GAAN,CAAUgB,WAAV,CAAsBD,GAAtB,kCAAgCrB,YAAhC;AAA8CuB,QAAAA,OAAO,EAAE;AAAvD;AACAjC,MAAAA,KAAK,CAACgB,GAAN,CAAUkB,kBAAV,CAA6BH,GAA7B,EAAkC5B,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACgC,qCAAqC,CAACJ,GAAD,CAAtC,CAAR;AACA,aAAOA,GAAP;AACD,KAnBI,EAoBJK,OApBI,CAoBI,YAAM;AACbjC,MAAAA,QAAQ,CAACL,YAAY,CAAC,0BAAD,CAAb,CAAR;AACD,KAtBI,CAAP;AAuBD,GApCmD;AAAA,CAA7C;AAsCP,OAAO,IAAMiB,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACsB,OAAD,EAAa;AAChE,SAAO;AACLC,IAAAA,IAAI,EAAE,wDADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMR,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACP,IAAD,EAAU;AAC7D,SAAO;AACLgB,IAAAA,IAAI,EAAE,wDADD;AAELD,IAAAA,OAAO,EAAEf;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMa,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACI,KAAD,EAAW;AAC9D,SAAO;AACLD,IAAAA,IAAI,EAAE,iDADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader, storeProcessingInstruction } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getProcessingInstructionStatusUpdate = (instructionId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = { file: 'stores/processingInstructions.actions.getProcessingInstruction' };\r\n  const putBody = {\r\n    id: instructionId,\r\n    statusId: 5,\r\n  };\r\n\r\n  dispatch(getProcessingInstructionStatusRequest({ putBody }));\r\n  dispatch(addLoader('getProcessingInstruction'));\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: `instruction`,\r\n      data: putBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      const processingInstruction = data.data;\r\n      dispatch(getProcessingInstructionStatusSuccess(processingInstruction));\r\n      dispatch(storeProcessingInstruction(processingInstruction));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.getProcessingInstructionId)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getProcessingInstructionStatusFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getProcessingInstruction'));\r\n    });\r\n};\r\n\r\nexport const getProcessingInstructionStatusRequest = (payload) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_STATUS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getProcessingInstructionStatusSuccess = (data) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_STATUS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getProcessingInstructionStatusFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_GET_INSTRUCTION_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}