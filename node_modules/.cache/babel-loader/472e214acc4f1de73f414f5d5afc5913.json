{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossAction\\\\LossAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './LossAction.styles';\nimport { LossActionView } from './LossAction.view';\nimport { selectLossActions, selectLossActionsItems, selectLossActionsFilterValues } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport { useFlexiColumns } from 'hooks';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossAction() {\n  _s();\n\n  var classes = makeStyles(styles, {\n    name: 'LossAction'\n  })();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      claimsType = _useState4[0],\n      setClaimsType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchBy = _useState6[0],\n      setSearchBy = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchByText = _useState8[0],\n      setSearchByText = _useState8[1];\n\n  var lossActions = useSelector(selectLossActions);\n  var lossActionsItems = useSelector(selectLossActionsItems);\n  var lossActionsFilterDropDown = useSelector(selectLossActionsFilterValues);\n  var viewFields = [{\n    name: 'createdDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'targetDueDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(viewFields);\n  var validationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      setValue = _useForm.setValue;\n\n  var tableFilterFields = [{\n    id: 'assignedTo',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.assignedTo'),\n    value: [],\n    options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.assignedTo,\n    nestedClasses: {\n      root: classes.fieldWidth\n    },\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"assignedTo\",\n      search: true,\n      options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.assignedTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'createdDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultValues, 'createdDate')), {}, {\n      id: \"creationdatepicker\",\n      name: \"createdDate\",\n      type: \"datepicker\",\n      value: '',\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'targetDueDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.targetDueDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultValues, 'targetDueDate')), {}, {\n      id: \"targetduedatepicker\",\n      name: \"targetDueDate\",\n      type: \"datepicker\",\n      value: '',\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'priority',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.priority'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.priority,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"priority\",\n      search: true,\n      options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'status',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.status,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"status\",\n      search: true,\n      options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.division,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.division\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.insured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: lossActionsFilterDropDown === null || lossActionsFilterDropDown === void 0 ? void 0 : lossActionsFilterDropDown.insured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 16\n    }, this)\n  }];\n  useEffect(function () {}, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSearch = function handleSearch() {};\n\n  var handleChangePage = function handleChangePage() {};\n\n  var handleResetFilter = function handleResetFilter() {};\n\n  var handleSearchFilter = function handleSearchFilter() {};\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage() {};\n\n  var handleSort = function handleSort() {};\n\n  var handleResetSearch = function handleResetSearch() {};\n\n  var onSelectSearchBy = function onSelectSearchBy() {};\n\n  var columns = [{\n    id: 'actionId',\n    label: utils.string.t('claims.columns.claimsManagement.ref'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    narrow: true,\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'claimantName',\n    label: utils.string.t('claims.columns.claimsManagement.claimant'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    ellipsis: true\n  }, {\n    id: 'description',\n    label: utils.string.t('claims.processing.tasksGridColumns.description'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true,\n    ellipsis: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsManagement.team'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'assignedTo',\n    label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'createdDate',\n    label: utils.string.t('claims.columns.claimsManagement.createdDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'targetDate',\n    label: utils.string.t('claims.columns.claimsManagement.targetDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsManagement.priority'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'status',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'insured',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.columns.claimsManagement.division'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'actions',\n    menu: true,\n    visible: true,\n    mandatory: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(LossActionView, {\n    items: lossActionsItems,\n    lossActions: lossActions,\n    sort: _objectSpread({}, lossActions.sort),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    viewFields: viewFields,\n    tableFilterFields: tableFilterFields,\n    control: control,\n    searchTerm: searchTerm,\n    handlers: {\n      search: handleSearch,\n      searchFilter: handleSearchFilter,\n      resetFilter: handleResetFilter,\n      sort: handleSort,\n      changePage: handleChangePage,\n      changeRowsPerPage: handleChangeRowsPerPage,\n      toggleColumn: toggleColumn,\n      resetSearch: handleResetSearch,\n      setClaimsType: setClaimsType,\n      onSelectSearchBy: onSelectSearchBy\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossAction, \"Gkq40vUnvqc7sQ569Pd9z5oDmQE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = LossAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossAction\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossAction/LossAction.js"],"names":["React","useState","useEffect","useSelector","Yup","useForm","yupResolver","styles","LossActionView","selectLossActions","selectLossActionsItems","selectLossActionsFilterValues","MultiSelect","FormDate","useFlexiColumns","constants","utils","makeStyles","LossAction","classes","name","searchTerm","setSearchTerm","claimsType","setClaimsType","searchBy","setSearchBy","searchByText","setSearchByText","lossActions","lossActionsItems","lossActionsFilterDropDown","viewFields","type","value","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","setValue","tableFilterFields","id","label","string","t","options","assignedTo","nestedClasses","root","fieldWidth","content","getFieldProps","fullWidth","margin","clearable","variant","format","placeholder","priority","status","division","insured","handleSearch","handleChangePage","handleResetFilter","handleSearchFilter","handleChangeRowsPerPage","handleSort","handleResetSearch","onSelectSearchBy","columns","sort","direction","narrow","nowrap","visible","mandatory","ellipsis","menu","columnsArray","columnProps","toggleColumn","search","searchFilter","resetFilter","changePage","changeRowsPerPage","resetSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './LossAction.styles';\r\nimport { LossActionView } from './LossAction.view';\r\nimport {\r\n  selectLossActions,\r\n  selectLossActionsItems,\r\n  selectLossActionsFilterValues,\r\n} from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function LossAction() {\r\n  const classes = makeStyles(styles, { name: 'LossAction' })();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [claimsType, setClaimsType] = useState(\"\");\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n  const [searchByText, setSearchByText] = useState(\"\");\r\n  const lossActions = useSelector(selectLossActions);\r\n  const lossActionsItems = useSelector(selectLossActionsItems);\r\n  const lossActionsFilterDropDown = useSelector(selectLossActionsFilterValues);\r\n\r\n  const viewFields = [\r\n    { name: 'createdDate', type: 'datepicker', value: null },\r\n    { name: 'targetDueDate', type: 'datepicker', value: null },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(viewFields);\r\n  const validationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'assignedTo',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.assignedTo'),\r\n      value: [],\r\n      options: lossActionsFilterDropDown?.assignedTo,\r\n      nestedClasses: { root: classes.fieldWidth },\r\n      content: <MultiSelect id=\"assignedTo\" search options={lossActionsFilterDropDown?.assignedTo} />,\r\n    },\r\n    {\r\n      id: 'createdDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultValues, 'createdDate')}\r\n          id=\"creationdatepicker\"\r\n          name=\"createdDate\"\r\n          type=\"datepicker\"\r\n          value={''}\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'targetDueDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.targetDueDate'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultValues, 'targetDueDate')}\r\n          id=\"targetduedatepicker\"\r\n          name=\"targetDueDate\"\r\n          type=\"datepicker\"\r\n          value={''}\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'priority',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossActionsFilterDropDown?.priority,\r\n      content: <MultiSelect id=\"priority\" search options={lossActionsFilterDropDown?.priority} />,\r\n    },\r\n    {\r\n      id: 'status',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossActionsFilterDropDown?.status,\r\n      content: <MultiSelect id=\"status\" search options={lossActionsFilterDropDown?.status} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossActionsFilterDropDown?.division,\r\n      content: <MultiSelect id=\"division\" search options={lossActionsFilterDropDown?.division} />,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossActionsFilterDropDown?.insured,\r\n      content: <MultiSelect id=\"insured\" search options={lossActionsFilterDropDown?.insured} />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleChangePage = () => {\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n  };\r\n\r\n  const handleSearchFilter = () => {\r\n  };\r\n\r\n  const handleChangeRowsPerPage = () => {\r\n  };\r\n\r\n  const handleSort = () => {\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n  };\r\n\r\n  const onSelectSearchBy = () => {\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'actionId',\r\n      label: utils.string.t('claims.columns.claimsManagement.ref'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      narrow: true,\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'claimantName',\r\n      label: utils.string.t('claims.columns.claimsManagement.claimant'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      ellipsis: true,\r\n    },\r\n\r\n    {\r\n      id: 'description',\r\n      label: utils.string.t('claims.processing.tasksGridColumns.description'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsManagement.team'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'assignedTo',\r\n      label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'createdDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'targetDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.targetDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      label: utils.string.t('claims.columns.claimsManagement.priority'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'status',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.columns.claimsManagement.division'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    { id: 'actions', menu: true, visible: true, mandatory: true },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <LossActionView\r\n      items={lossActionsItems}\r\n      lossActions={lossActions}\r\n      sort={{\r\n        ...lossActions.sort,\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      viewFields={viewFields}\r\n      tableFilterFields={tableFilterFields}\r\n      control={control}\r\n      searchTerm={searchTerm}\r\n      handlers={{\r\n        search: handleSearch,\r\n        searchFilter: handleSearchFilter,\r\n        resetFilter: handleResetFilter,\r\n        sort: handleSort,\r\n        changePage: handleChangePage,\r\n        changeRowsPerPage: handleChangeRowsPerPage,\r\n        toggleColumn,\r\n        resetSearch: handleResetSearch,\r\n        setClaimsType,\r\n        onSelectSearchBy,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}