{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.view.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel'; // app\n\nimport { makeStyles, Divider } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport styles from './ClaimsRegisterNewLoss.style';\nimport { RegisterNewLossFixedBottomBar } from 'modules';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClaimsRegisterNewLossView = function ClaimsRegisterNewLossView(_ref) {\n  _s();\n\n  var activeStep = _ref.activeStep,\n      handleStep = _ref.handleStep,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      isFormsEdited = _ref.isFormsEdited,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      handleNext = _ref.handleNext,\n      handleFormStatus = _ref.handleFormStatus,\n      _handleBack = _ref.handleBack,\n      _handleSave = _ref.handleSave;\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'ClaimsRegisterNewLoss'\n  })();\n\n  var stepContent = function stepContent(index) {\n    var _isFormsEdited$index, _isFormsEdited$index2, _isFormsEdited$index3, _isFormsEdited$index4, _isFormsEdited$index5, _isFormsEdited$index6, _isFormsEdited$index7, _isFormsEdited$index8, _isFormsEdited$index9, _isFormsEdited$index10, _isFormsEdited$index11, _isFormsEdited$index12;\n\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: [\" \", ((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 23,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 25,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 22,\n          columnNumber: 21\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 21\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 21\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index7 = isFormsEdited[index]) === null || _isFormsEdited$index7 === void 0 ? void 0 : _isFormsEdited$index7.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index8 = isFormsEdited[index]) === null || _isFormsEdited$index8 === void 0 ? void 0 : _isFormsEdited$index8.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 21\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index9 = isFormsEdited[index]) === null || _isFormsEdited$index9 === void 0 ? void 0 : _isFormsEdited$index9.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            lastStep: true,\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index10 = isFormsEdited[index]) === null || _isFormsEdited$index10 === void 0 ? void 0 : _isFormsEdited$index10.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 81,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 21\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index11 = isFormsEdited[index]) === null || _isFormsEdited$index11 === void 0 ? void 0 : _isFormsEdited$index11.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 94,\n            columnNumber: 25\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            onSave: function onSave() {},\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index12 = isFormsEdited[index]) === null || _isFormsEdited$index12 === void 0 ? void 0 : _isFormsEdited$index12.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 25\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 21\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      children: steps.map(function (label, index) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          onClick: function onClick() {\n            return handleStep(index);\n          },\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: classes.iconContainer\n              }\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 25\n          }, _this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 21\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 13\n    }, _this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 123,\n      columnNumber: 13\n    }, _this), stepContent(activeStep)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 109,\n    columnNumber: 9\n  }, _this);\n};\n\n_s(ClaimsRegisterNewLossView, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ClaimsRegisterNewLossView;\nexport default ClaimsRegisterNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.view.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Stepper","Step","StepLabel","makeStyles","Divider","LinearProgress","styles","RegisterNewLossFixedBottomBar","ClaimsRegisterNewLossView","activeStep","handleStep","steps","progress","isFormsEdited","isAllStepsCompleted","handleNext","handleFormStatus","handleBack","handleSave","dispatch","classes","name","stepContent","index","formEditedStatus","map","label","root","iconContainer","linearProgress"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n// app\r\n\r\nimport { makeStyles, Divider } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\n\r\nimport styles from './ClaimsRegisterNewLoss.style';\r\nimport { RegisterNewLossFixedBottomBar } from 'modules';\r\n\r\n\r\nconst ClaimsRegisterNewLossView = ({ activeStep, handleStep, steps, progress, isFormsEdited, isAllStepsCompleted, handleNext, handleFormStatus, handleBack, handleSave }) => {\r\n    const dispatch = useDispatch();\r\n    const classes = makeStyles(styles, { name: 'ClaimsRegisterNewLoss' })();\r\n    const stepContent = (index) => {\r\n        switch (index) {\r\n            case 0:\r\n                return (\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}> {isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <Divider />\r\n                        <RegisterNewLossFixedBottomBar\r\n                            activeStep={activeStep}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 1:\r\n                return (\r\n\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <RegisterNewLossFixedBottomBar\r\n                            activeStep={activeStep}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleBack={() => { handleBack(index) }}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 2:\r\n                return (\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <RegisterNewLossFixedBottomBar\r\n                            activeStep={activeStep}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleBack={() => { handleBack(index) }}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 3:\r\n                return (\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <RegisterNewLossFixedBottomBar\r\n                            activeStep={activeStep}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleBack={() => { handleBack(index) }}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n            case 4:\r\n                return (\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <RegisterNewLossFixedBottomBar\r\n                            lastStep={true} activeStep={activeStep}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleBack={() => { handleBack(index) }}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n            default:\r\n                return (\r\n                    <div>\r\n                        <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n                        <RegisterNewLossFixedBottomBar\r\n                            activeStep={activeStep}\r\n                            onSave={() => { }}\r\n                            isAllStepsCompleted={isAllStepsCompleted}\r\n                            handleSave={() => { handleSave(index) }}\r\n                            handleNextSubmit={() => handleNext(index)}\r\n                            save={isFormsEdited[index]?.formEditedStatus}\r\n                        />\r\n                    </div>\r\n                );\r\n        }\r\n    };\r\n\r\n    return (\r\n        <div>\r\n            <Stepper alternativeLabel activeStep={activeStep}>\r\n                {steps.map((label, index) => (\r\n                    <Step key={label} onClick={() => handleStep(index)}>\r\n                        <StepLabel\r\n                            StepIconProps={{\r\n                                classes: { root: classes.iconContainer },\r\n                            }}\r\n                        >\r\n                            {label}\r\n                        </StepLabel>\r\n                    </Step>\r\n                ))}\r\n            </Stepper>\r\n            <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n            {\r\n                stepContent(activeStep)\r\n            }\r\n\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default ClaimsRegisterNewLossView;\r\n"]},"metadata":{},"sourceType":"module"}