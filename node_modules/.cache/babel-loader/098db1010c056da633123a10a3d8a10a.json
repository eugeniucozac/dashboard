{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getClaimBordereauPeriods = function getClaimBordereauPeriods() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimBordereauPeriods'\n    };\n    var xbPolicyId = get(claims, 'policyData.xbPolicyID') || '';\n    var xbInstanceId = get(claims, 'policyData.xbInstanceID') || '';\n    dispatch(getClaimBordereauPeriodsRequest());\n    dispatch(addLoader('getClaimBordereauPeriods'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/gui/policy/\".concat(xbPolicyId, \"/source/\").concat(xbInstanceId, \"/BordereauPeriod\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getClaimBordereauPeriodsSuccess(data.data));\n      dispatch(removeLoader('getClaimBordereauPeriods'));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getClaimBordereauPeriodsFailure(err, defaultError));\n      dispatch(removeLoader('getClaimBordereauPeriods'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getClaimBordereauPeriodsRequest = function getClaimBordereauPeriodsRequest() {\n  return {\n    type: 'CLAIMS_BORDEREAU_REQUEST'\n  };\n};\nexport var getClaimBordereauPeriodsSuccess = function getClaimBordereauPeriodsSuccess(data) {\n  return {\n    type: 'CLAIMS_BORDEREAU_SUCCESS',\n    payload: data\n  };\n};\nexport var getClaimBordereauPeriodsFailure = function getClaimBordereauPeriodsFailure(error) {\n  return {\n    type: 'CLAIMS_BORDEREAU_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimBordereauPeriods.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getClaimBordereauPeriods","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","xbPolicyId","xbInstanceId","getClaimBordereauPeriodsRequest","api","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","data","getClaimBordereauPeriodsSuccess","err","getClaimBordereauPeriodsFailure","handleUnauthorized","type","payload","error"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACpE;AADoE,oBAEHA,QAAQ,EAFL;AAAA,QAEpDC,IAFoD,aAE5DC,IAF4D,CAEpDD,IAFoD;AAAA,QAE1BE,QAF0B,aAE5CC,MAF4C,CAElCC,IAFkC,CAE1BF,QAF0B;AAAA,QAEbG,MAFa,aAEbA,MAFa;;AAIpE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,UAAU,GAAGZ,GAAG,CAACS,MAAD,EAAS,uBAAT,CAAH,IAAwC,EAA3D;AACA,QAAMI,YAAY,GAAGb,GAAG,CAACS,MAAD,EAAS,yBAAT,CAAH,IAA0C,EAA/D;AAEAP,IAAAA,QAAQ,CAACY,+BAA+B,EAAhC,CAAR;AACAZ,IAAAA,QAAQ,CAACL,SAAS,CAAC,0BAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACgB,GAAN,CACJf,GADI,CACA;AACHgB,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,YAFhB;AAGHC,MAAAA,IAAI,gCAAyBP,UAAzB,qBAA8CC,YAA9C;AAHD,KADA,EAMJO,IANI,CAMC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACgB,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUxB,KAAK,CAACgB,GAAN,CAAUS,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,+BAA+B,CAACD,IAAI,CAACA,IAAN,CAAhC,CAAR;AACAvB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,0BAAD,CAAb,CAAR;AACA,aAAO2B,IAAI,CAACA,IAAZ;AACD,KAZI,WAaE,UAACE,GAAD,EAAS;AACdzB,MAAAA,QAAQ,CAAC0B,+BAA+B,CAACD,GAAD,EAAMjB,YAAN,CAAhC,CAAR;AACAR,MAAAA,QAAQ,CAACJ,YAAY,CAAC,0BAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACgB,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CN,UAA5C;AACA,aAAO+B,GAAP;AACD,KAlBI,CAAP;AAmBD,GAjCuC;AAAA,CAAjC;AAmCP,OAAO,IAAMb,+BAA+B,GAAG,SAAlCA,+BAAkC,GAAM;AACnD,SAAO;AACLgB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMJ,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACD,IAAD,EAAU;AACvD,SAAO;AACLK,IAAAA,IAAI,EAAE,0BADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACI,KAAD,EAAW;AACxD,SAAO;AACLF,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getClaimBordereauPeriods = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}, claims} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getClaimBordereauPeriods',\r\n  };\r\n\r\n  const xbPolicyId = get(claims, 'policyData.xbPolicyID') || '';\r\n  const xbInstanceId = get(claims, 'policyData.xbInstanceID') || '';\r\n\r\n  dispatch(getClaimBordereauPeriodsRequest());\r\n  dispatch(addLoader('getClaimBordereauPeriods'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/gui/policy/${xbPolicyId}/source/${xbInstanceId}/BordereauPeriod`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getClaimBordereauPeriodsSuccess(data.data));\r\n      dispatch(removeLoader('getClaimBordereauPeriods'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getClaimBordereauPeriodsFailure(err, defaultError));\r\n      dispatch(removeLoader('getClaimBordereauPeriods'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getClaimBordereauPeriodsRequest = () => {\r\n  return {\r\n    type: 'CLAIMS_BORDEREAU_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getClaimBordereauPeriodsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_BORDEREAU_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getClaimBordereauPeriodsFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_BORDEREAU_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}