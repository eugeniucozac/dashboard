{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { postEditClaimDetailsInformation } from 'stores';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  lossQualifiers: PropTypes.object,\n  resetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool.isRequired,\n  claimsDocsList: PropTypes.array,\n  parentLossRef: PropTypes.string,\n  savedClaimInfo: PropTypes.object\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _watch, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      claimsDocsList = _ref.claimsDocsList,\n      claimRefId = _ref.claimRefId,\n      claimData = _ref.claimData,\n      policyInformation = _ref.policyInformation,\n      complexityValues = _ref.complexityValues,\n      index = _ref.index,\n      handleNext = _ref.handleNext,\n      handleSave = _ref.handleSave,\n      _handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      isBordereauChecked = _ref.isBordereauChecked,\n      lossQualifiers = _ref.lossQualifiers,\n      handleFormStatus = _ref.handleFormStatus,\n      lossInformation = _ref.lossInformation,\n      parentLossRef = _ref.parentLossRef,\n      savedClaimInfo = _ref.savedClaimInfo;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refResponseDisable = _useState4[0],\n      setRefResponseDisable = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refValuesDisable = _useState6[0],\n      setRefValueDisable = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimCardRef = useRef();\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      isDirty = _useForm.formState.isDirty;\n\n  var lossQualifierID = (_watch = watch('lossQualifierID')) === null || _watch === void 0 ? void 0 : _watch.id;\n  var complexValues = watch('complexity');\n  var refValues = watch('referral');\n  var isBordereauClaim = watch('bordereauClaim');\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n      setRefResponseDisable(refResponseState);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setRefResponseDisable(true);\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleNext(index);\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  useEffect(function () {\n    var _Object$keys, _claimCardRef$current;\n\n    isDirty && handleFormStatus();\n    if (((_Object$keys = Object.keys(errors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) claimCardRef === null || claimCardRef === void 0 ? void 0 : (_claimCardRef$current = claimCardRef.current) === null || _claimCardRef$current === void 0 ? void 0 : _claimCardRef$current.scrollIntoView();\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n      return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n        return itr === item.name;\n      });\n    }).map(function (item) {\n      return item.id;\n    });\n    var isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\n    setDateValidation(!isRequired);\n\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\n      var fromDate = (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossFromDate);\n      var toDate = (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossToDate);\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\n    } else {\n      setValue('fromDate', null);\n      setValue('toDate', null);\n    }\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (complexValues) {\n      var _complexityValues$fin;\n\n      var getComplexityStatus = ((_complexityValues$fin = complexityValues.find(function (item) {\n        return item.complexityRulesID === (complexValues === null || complexValues === void 0 ? void 0 : complexValues.complexityRulesID);\n      })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      setRefValueDisable(getComplexityStatus);\n      getRefValues(refValues);\n    } else if (complexValues === null) {\n      setRefValueDisable(false);\n    }\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1 1 auto\",\n      className: classes.container,\n      \"data-testid\": \"register-claim-card-information\",\n      ref: claimCardRef,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n          text: utils.string.t('claims.claimInformation.title'),\n          nestedClasses: {\n            root: classes.formLegend\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef), \" | \").concat(policyInformation.policyRef, \" | \").concat(policyInformation.insured),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        \"data-testid\": \"form-claimsCardInformation\",\n        children: /*#__PURE__*/_jsxDEV(FormFields, {\n          type: \"dialog\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 6,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                    label: utils.string.t('claims.claimInformation.claimRef'),\n                    align: \"left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                    label: (_ref2 = (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                    nestedClasses: {\n                      root: classes.claimRef\n                    },\n                    align: \"left\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 166,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 164,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                    error: errors.fromDate,\n                    muiComponentProps: {\n                      disabled: dateValidation,\n                      fullWidth: true,\n                      classes: {\n                        root: classes.datepicker\n                      }\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                    error: errors.location\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 197,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                    error: errors.complexity\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 201,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 200,\n                columnNumber: 17\n              }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                    error: errors.bordereauClaim,\n                    nestedClasses: {\n                      root: classes.checkbox\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 208,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 207,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 206,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                        container: true,\n                        alignItems: \"center\",\n                        spacing: 2,\n                        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                          item: true,\n                          xs: 7,\n                          children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                            error: errors.claimReceivedDate\n                          }), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 224,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 223,\n                          columnNumber: 27\n                        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                          item: true,\n                          xs: 5,\n                          nestedClasses: {\n                            root: classes.lossTime\n                          },\n                          children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 230,\n                            columnNumber: 29\n                          }, this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 229,\n                          columnNumber: 27\n                        }, this)]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 220,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                        error: errors.toDate,\n                        muiComponentProps: {\n                          disabled: dateValidation,\n                          fullWidth: true,\n                          classes: {\n                            root: classes.datepicker\n                          }\n                        }\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 235,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                        error: errors.fgunarrative\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 252,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: watch('adjuster') === 'beAdjuster' ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 258,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 257,\n                      columnNumber: 25\n                    }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'nonBeAdjuster', control)), {}, {\n                        error: errors.nonBeAdjuster\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 262,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 261,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 255,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                        error: errors.referral,\n                        muiComponentProps: {\n                          disabled: !refValuesDisable\n                        },\n                        callback: function callback(e, data) {\n                          getRefValues(data);\n                        }\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 25\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 21\n                  }, this), isBordereauChecked && isBordereauClaim && /*#__PURE__*/_jsxDEV(FormGrid, {\n                    container: true,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      item: true,\n                      xs: 12,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                        error: errors.bordereauPeriod\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 283,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 282,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 281,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                    error: errors.claimantName\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 296,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 295,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 294,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                    error: errors.lossQualifierID\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 301,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 300,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 299,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                    error: errors.priority\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 306,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 305,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 304,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                    error: errors.adjusterReference\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 311,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 310,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 309,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                    error: errors.rfiResponse,\n                    muiComponentProps: {\n                      disabled: refResponseDisable\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 316,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 315,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 314,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 293,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.UploadDocumentContainer,\n        children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: claimData,\n          refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n          ,\n          dmsContext: DMS_CONTEXT_CLAIM,\n          documentTypeKey: DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          isTabView: false,\n          isClaims: true,\n          isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n          claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n          claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n          uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\n          docList: claimsDocsList,\n          parentLossRef: parentLossRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 331,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 150,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n        activeStep: activeStep,\n        isAllStepsCompleted: isAllStepsCompleted,\n        handleBack: function handleBack() {\n          _handleBack(index);\n        },\n        handleSave: handleSaveForm,\n        handleNextSubmit: handleSubmit(handleSubmitForm),\n        save: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 349,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 348,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterClaimCardInformationView, \"5O1PwahTB+yeJX6GLV6JJpUMPkM=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useEffect","useState","useRef","useDispatch","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","postEditClaimDetailsInformation","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","makeStyles","Box","RegisterClaimCardInformationView","prototype","claimantNames","array","isRequired","referralValues","lossQualifiers","object","resetKey","number","hasClaimRef","bool","claimsDocsList","parentLossRef","string","savedClaimInfo","fields","claimRefId","claimData","policyInformation","complexityValues","index","handleNext","handleSave","handleBack","activeStep","isAllStepsCompleted","isBordereauChecked","handleFormStatus","lossInformation","classes","name","dispatch","dateValidation","setDateValidation","refResponseDisable","setRefResponseDisable","refValuesDisable","setRefValueDisable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimCardRef","resolver","control","errors","setValue","handleSubmit","watch","isDirty","formState","lossQualifierID","id","complexValues","refValues","isBordereauClaim","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","handleSubmitForm","values","then","response","handleSaveForm","Object","keys","length","current","scrollIntoView","dateDisabledLossQualifiers","filter","itr","map","fromDate","lossFromDate","toDate","lossToDate","getComplexityStatus","container","t","root","formLegend","claimReference","claimRef","policyRef","insured","getFieldProps","disabled","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fgunarrative","nonBeAdjuster","referral","e","data","bordereauPeriod","claimantName","priority","adjusterReference","rfiResponse","UploadDocumentContainer","claim"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { postEditClaimDetailsInformation } from 'stores';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  lossQualifiers: PropTypes.object,\r\n  resetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  claimsDocsList: PropTypes.array,\r\n  parentLossRef: PropTypes.string,\r\n  savedClaimInfo: PropTypes.object,\r\n};\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  claimsDocsList,\r\n  claimRefId,\r\n  claimData,\r\n  policyInformation,\r\n  complexityValues,\r\n  index,\r\n  handleNext,\r\n  handleSave,\r\n  handleBack,\r\n  activeStep,\r\n  isAllStepsCompleted,\r\n  isBordereauChecked,\r\n  lossQualifiers,\r\n  handleFormStatus,\r\n  lossInformation,\r\n  parentLossRef,\r\n  savedClaimInfo,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch();\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const [refResponseDisable, setRefResponseDisable] = useState(true);\r\n  const [refValuesDisable, setRefValueDisable] = useState(false);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const claimCardRef = useRef();\r\n\r\n  const {\r\n    control,\r\n    errors,\r\n    setValue,\r\n    handleSubmit,\r\n    watch,\r\n    formState: { isDirty },\r\n  } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const lossQualifierID = watch('lossQualifierID')?.id;\r\n  const complexValues = watch('complexity');\r\n  const refValues = watch('referral');\r\n  const isBordereauClaim = watch('bordereauClaim');\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      setRefResponseDisable(refResponseState);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setRefResponseDisable(true);\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) handleNext(index);\r\n    });\r\n  };\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response) => {\r\n      if (response) handleSave();\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    isDirty && handleFormStatus();\r\n    if (Object.keys(errors)?.length > 0) claimCardRef?.current?.scrollIntoView();\r\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const dateDisabledLossQualifiers = lossQualifiers\r\n      .filter((item) => CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name))\r\n      .map((item) => item.id);\r\n    const isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\r\n    setDateValidation(!isRequired);\r\n    if (!dateDisabledLossQualifiers.includes(lossQualifierID)) {\r\n      const fromDate = lossInformation?.fromDate || savedClaimInfo?.lossFromDate;\r\n      const toDate = lossInformation?.toDate || savedClaimInfo?.lossToDate;\r\n      fromDate ? setValue('fromDate', fromDate) : setValue('fromDate', null);\r\n      toDate ? setValue('toDate', toDate) : setValue('toDate', null);\r\n    } else {\r\n      setValue('fromDate', null);\r\n      setValue('toDate', null);\r\n    }\r\n  }, [lossQualifierID]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (complexValues) {\r\n      const getComplexityStatus =\r\n        complexityValues.find((item) => item.complexityRulesID === complexValues?.complexityRulesID)?.complexityRulesValue ===\r\n        'Referral Required';\r\n      setRefValueDisable(getComplexityStatus);\r\n      getRefValues(refValues);\r\n    } else if (complexValues === null) {\r\n      setRefValueDisable(false);\r\n    }\r\n  }, [complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box flex=\"1 1 auto\" className={classes.container} data-testid=\"register-claim-card-information\" ref={claimCardRef}>\r\n        <Box mt={4}>\r\n          <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          <FormLabel\r\n            label={`${claimRefId?.claimReference || claimRefId?.claimRef} | ${policyInformation.policyRef} | ${policyInformation.insured}`}\r\n            align=\"left\"\r\n          />\r\n        </Box>\r\n\r\n        <FormContainer data-testid=\"form-claimsCardInformation\">\r\n          <FormFields type=\"dialog\">\r\n            <FormGrid container spacing={6}>\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                    <FormLabel\r\n                      label={\r\n                        (claimRefId?.claimReference || claimRefId?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')\r\n                      }\r\n                      nestedClasses={{ root: classes.claimRef }}\r\n                      align=\"left\"\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormDate\r\n                      {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                      error={errors.fromDate}\r\n                      muiComponentProps={{\r\n                        disabled: dateValidation,\r\n                        fullWidth: true,\r\n                        classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                {isBordereauChecked && (\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormCheckbox\r\n                        {...utils.form.getFieldProps(fields, 'bordereauClaim', control)}\r\n                        error={errors.bordereauClaim}\r\n                        nestedClasses={{ root: classes.checkbox }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                )}\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormGrid container alignItems=\"center\" spacing={2}>\r\n                          <FormGrid item xs={7}>\r\n                            <FormDate\r\n                              {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)}\r\n                              error={errors.claimReceivedDate}\r\n                            />\r\n                          </FormGrid>\r\n                          <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                            <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                          </FormGrid>\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormDate\r\n                          {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                          error={errors.toDate}\r\n                          muiComponentProps={{\r\n                            disabled: dateValidation,\r\n                            fullWidth: true,\r\n                            classes: {\r\n                              root: classes.datepicker,\r\n                            },\r\n                          }}\r\n                        />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                    <FormGrid container>\r\n                      {watch('adjuster') === 'beAdjuster' ? (\r\n                        <FormGrid item xs={12}>\r\n                          <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} />\r\n                        </FormGrid>\r\n                      ) : (\r\n                        <FormGrid item xs={12}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'nonBeAdjuster', control)} error={errors.nonBeAdjuster} />\r\n                        </FormGrid>\r\n                      )}\r\n                    </FormGrid>\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormAutocompleteMui\r\n                          {...utils.form.getFieldProps(fields, 'referral', control)}\r\n                          error={errors.referral}\r\n                          muiComponentProps={{\r\n                            disabled: !refValuesDisable,\r\n                          }}\r\n                          callback={(e, data) => {\r\n                            getRefValues(data);\r\n                          }}\r\n                        />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                    {isBordereauChecked && isBordereauClaim && (\r\n                      <FormGrid container>\r\n                        <FormGrid item xs={12}>\r\n                          <FormAutocompleteMui\r\n                            {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)}\r\n                            error={errors.bordereauPeriod}\r\n                          />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    )}\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'rfiResponse', control)}\r\n                      error={errors.rfiResponse}\r\n                      muiComponentProps={{\r\n                        disabled: refResponseDisable,\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormFields>\r\n        </FormContainer>\r\n\r\n        <Box className={classes.UploadDocumentContainer}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={claimData}\r\n            refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n            dmsContext={DMS_CONTEXT_CLAIM}\r\n            documentTypeKey={DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n            isTabView={false}\r\n            isClaims\r\n            isClaimsUploadDisabled={!claimRefId?.claimRef}\r\n            claimsUploadWarningMsg={!claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : ''}\r\n            claimsSearchDocumentsTxt={utils.string.t('claims.claimInformation.dms.searchDocuments')}\r\n            uploadDocumentsTitle={utils.string.t('claims.claimInformation.dms.uploadDocuments')}\r\n            docList={claimsDocsList}\r\n            parentLossRef={parentLossRef}\r\n          />\r\n        </Box>\r\n      </Box>\r\n\r\n      <Box flex=\"0 1 auto\">\r\n        <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => {\r\n            handleBack(index);\r\n          }}\r\n          handleSave={handleSaveForm}\r\n          handleNextSubmit={handleSubmit(handleSubmitForm)}\r\n          save={true}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}