{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseAccordion\\\\PremiumProcessingCaseAccordion.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'; // app\n\nimport { PremiumProcessingCaseAccordionView } from './PremiumProcessingCaseAccordion.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { selectCaseIsCheckSigning, selectRefDataQueryCodes } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseAccordion.propTypes = {\n  caseTeamDetails: PropTypes.object,\n  caseRfiDetails: PropTypes.object.isRequired,\n  caseInstructionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  caseInstructionStatusId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  selectedCases: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    caseTeamHandler: PropTypes.func.isRequired,\n    caseRfiHandler: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function PremiumProcessingCaseAccordion(_ref) {\n  _s();\n\n  var caseTeamDetails = _ref.caseTeamDetails,\n      caseRfiDetails = _ref.caseRfiDetails,\n      caseInstructionId = _ref.caseInstructionId,\n      caseInstructionStatusId = _ref.caseInstructionStatusId,\n      selectedCases = _ref.selectedCases,\n      handlers = _ref.handlers;\n  var selectedCase = selectedCases === null || selectedCases === void 0 ? void 0 : selectedCases[0];\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(caseInstructionStatusId);\n  var isRfiCase = utils.generic.isValidArray(selectedCases, true) && utils.premiumProcessing.isRfi(selectedCases === null || selectedCases === void 0 ? void 0 : selectedCases[0]);\n  var isCheckSigningCase = useSelector(selectCaseIsCheckSigning);\n  var queryCodes = useSelector(selectRefDataQueryCodes);\n  var queryCodesRfi = queryCodes.find(function (queryCode) {\n    return (queryCode === null || queryCode === void 0 ? void 0 : queryCode.queryCodeDetails) === (caseRfiDetails === null || caseRfiDetails === void 0 ? void 0 : caseRfiDetails.queryCode);\n  });\n\n  var clickCaseDetails = function clickCaseDetails() {\n    handlers.caseTeamHandler();\n  };\n\n  var clickPiLink = function clickPiLink() {\n    if (isSubmittedProcessing) {\n      window.open(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(caseInstructionId), '_blank');\n    } else {\n      handlers.openUpdatingPopup();\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseAccordionView, {\n    selectedCase: selectedCase,\n    caseDetails: caseTeamDetails,\n    caseInstructionId: caseInstructionId,\n    rfiDetails: caseRfiDetails,\n    isRfi: isRfiCase,\n    isCheckSigningCase: isCheckSigningCase,\n    queryCodesRfi: queryCodesRfi,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      clickCaseDetails: clickCaseDetails,\n      clickPiLink: clickPiLink\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseAccordion, \"KQqdSxQsuRLrwAa0lltEOkedvT0=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = PremiumProcessingCaseAccordion;\nPremiumProcessingCaseAccordion.displayName = \"PremiumProcessingCaseAccordion\";\nPremiumProcessingCaseAccordion.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseAccordion\",\n  \"props\": {\n    \"caseTeamDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"caseRfiDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"caseInstructionId\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"caseInstructionStatusId\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectedCases\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"caseTeamHandler\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"caseRfiHandler\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseAccordion\\\\PremiumProcessingCaseAccordion.js\"] = {\n    name: \"PremiumProcessingCaseAccordion\",\n    docgenInfo: PremiumProcessingCaseAccordion.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseAccordion\\\\PremiumProcessingCaseAccordion.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseAccordion\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseAccordion/PremiumProcessingCaseAccordion.js"],"names":["React","PropTypes","useSelector","PremiumProcessingCaseAccordionView","utils","config","selectCaseIsCheckSigning","selectRefDataQueryCodes","PremiumProcessingCaseAccordion","propTypes","caseTeamDetails","object","caseRfiDetails","isRequired","caseInstructionId","oneOfType","string","number","caseInstructionStatusId","selectedCases","array","handlers","shape","caseTeamHandler","func","caseRfiHandler","selectedCase","isSubmittedProcessing","processingInstructions","status","isRfiCase","generic","isValidArray","premiumProcessing","isRfi","isCheckSigningCase","queryCodes","queryCodesRfi","find","queryCode","queryCodeDetails","clickCaseDetails","clickPiLink","window","open","routes","steps","openUpdatingPopup"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { PremiumProcessingCaseAccordionView } from './PremiumProcessingCaseAccordion.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { selectCaseIsCheckSigning, selectRefDataQueryCodes } from 'stores';\r\n\r\nPremiumProcessingCaseAccordion.propTypes = {\r\n  caseTeamDetails: PropTypes.object,\r\n  caseRfiDetails: PropTypes.object.isRequired,\r\n  caseInstructionId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  caseInstructionStatusId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  selectedCases: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    caseTeamHandler: PropTypes.func.isRequired,\r\n    caseRfiHandler: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseAccordion({\r\n  caseTeamDetails,\r\n  caseRfiDetails,\r\n  caseInstructionId,\r\n  caseInstructionStatusId,\r\n  selectedCases,\r\n  handlers,\r\n}) {\r\n  const selectedCase = selectedCases?.[0];\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(caseInstructionStatusId);\r\n  const isRfiCase = utils.generic.isValidArray(selectedCases, true) && utils.premiumProcessing.isRfi(selectedCases?.[0]);\r\n  const isCheckSigningCase = useSelector(selectCaseIsCheckSigning);\r\n  const queryCodes = useSelector(selectRefDataQueryCodes);\r\n  const queryCodesRfi = queryCodes.find((queryCode) => queryCode?.queryCodeDetails === caseRfiDetails?.queryCode);\r\n  const clickCaseDetails = () => {\r\n    handlers.caseTeamHandler();\r\n  };\r\n\r\n  const clickPiLink = () => {\r\n    if (isSubmittedProcessing) {\r\n      window.open(`${config.routes.processingInstructions.steps}/${caseInstructionId}`, '_blank');\r\n    } else {\r\n      handlers.openUpdatingPopup();\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PremiumProcessingCaseAccordionView\r\n      selectedCase={selectedCase}\r\n      caseDetails={caseTeamDetails}\r\n      caseInstructionId={caseInstructionId}\r\n      rfiDetails={caseRfiDetails}\r\n      isRfi={isRfiCase}\r\n      isCheckSigningCase={isCheckSigningCase}\r\n      queryCodesRfi={queryCodesRfi}\r\n      handlers={{ ...handlers, clickCaseDetails, clickPiLink }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}