{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsPreviewInformation\\\\ClaimsPreviewInformation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { ClaimsPreviewInformationView } from './ClaimsPreviewInformation.view';\nimport * as utils from 'utils';\nimport { selectClaimsInformation, getClaimsPreviewInformation, getPolicyInformation, selectLossQualifiers, selectLossId, selectCatCodes, selectClaimsPolicyInformation, selectClaimsInterest, selectBEAdjusterList, selectClaimsPolicySections, showModal } from 'stores';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsPreviewInformation(props) {\n  _s();\n\n  var _useSelector, _useSelector2, _beAdjuster$find, _lossQualifiers$find, _policySections$find;\n\n  var dispatch = useDispatch();\n  var claimPreviewInfo = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var beAdjuster = (_useSelector2 = useSelector(selectBEAdjusterList)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.items;\n  var policySections = useSelector(selectClaimsPolicySections);\n\n  var _useState = useState(true),\n      _useState2 = _slicedToArray(_useState, 2),\n      currentContextActive = _useState2[0],\n      setCurrentContextActive = _useState2[1];\n\n  var interestObj = interests === null || interests === void 0 ? void 0 : interests.find(function (item) {\n    return item.policyInterestID === claimPreviewInfo.policyInterestID;\n  });\n  var interest = interestObj === null || interestObj === void 0 ? void 0 : interestObj.description;\n  var beAdjusterName = beAdjuster === null || beAdjuster === void 0 ? void 0 : (_beAdjuster$find = beAdjuster.find(function (item) {\n    var _claimPreviewInfo$beA;\n\n    return item.id === (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : (_claimPreviewInfo$beA = claimPreviewInfo.beAdjusterID) === null || _claimPreviewInfo$beA === void 0 ? void 0 : _claimPreviewInfo$beA.toString());\n  })) === null || _beAdjuster$find === void 0 ? void 0 : _beAdjuster$find.name;\n  var selectedLossQualifier = claimPreviewInfo && ((_lossQualifiers$find = lossQualifiers.find(function (list) {\n    return parseInt(list.id) === claimPreviewInfo.lossQualifierID;\n  })) === null || _lossQualifiers$find === void 0 ? void 0 : _lossQualifiers$find.name);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var claimDetails = {\n    claimant: claimPreviewInfo.claimantName,\n    status: claimPreviewInfo.claimStatus,\n    claimRef: claimPreviewInfo.claimReference,\n    lossQualifierName: selectedLossQualifier,\n    lossDateFrom: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.lossFromDate,\n    lossDateTo: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.lossToDate,\n    adjusterType: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster'),\n    adjusterName: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) !== 0 ? beAdjusterName : claimPreviewInfo.nonBEAdjusterName,\n    adjusterRef: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.adjusterReference,\n    priority: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.priorityDescription,\n    settlementCurrency: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.settlementCurrencyCode,\n    interest: interest,\n    complexity: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexity,\n    complexityBasis: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexityBasis,\n    referral: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralValue,\n    referralResponse: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralResponseDescription,\n    location: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.location,\n    fguNarrative: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.fgunarrative,\n    processNotes: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.processNotes,\n    isBordereau: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.isBordereau,\n    certificateNumber: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateNumber,\n    certificateInceptionDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateInceptionDate,\n    certificateExpiryDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateExpiryDate,\n    basisOfOrder: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.basisOfOrder) || 0, \"%\"),\n    orderPercentage: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.orderPercentage) || 0, \" %\"),\n    movementType: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.movementType,\n    underWritingGroupData: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policyUnderWritingGroupDtoList,\n    policySectionID: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policySectionID,\n    policySectionDesc: !isSectionEnabled ? '' : !(claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _claimPreviewInfo$pol;\n\n      return sec.id.toString() === (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : (_claimPreviewInfo$pol = claimPreviewInfo.policySectionID) === null || _claimPreviewInfo$pol === void 0 ? void 0 : _claimPreviewInfo$pol.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name,\n    documentInfo: {\n      firmOrder: {\n        name: 'Filename1.pdf',\n        type: 'pdf'\n      },\n      processingInstructions: {\n        name: 'Filename2.pdf',\n        type: 'pdf'\n      },\n      transactionSheets: {\n        name: 'Filename3.html',\n        type: 'html'\n      }\n    },\n    claimReceivedDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.claimReceivedDate,\n    bordereauPeriod: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.bordereauPeriod\n  };\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  useEffect(function () {\n    dispatch(getClaimsPreviewInformation());\n    dispatch(getPolicyInformation());\n\n    if (claimPreviewInfo.claimStatus === 'submitted') {\n      props.handleNext();\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleClaimSubmit = function handleClaimSubmit() {\n    if (claimPreviewInfo.complexityBasis === 'Referral Required' && claimPreviewInfo.referralResponseDescription === null) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\n          maxWidth: 'xs',\n          componentProps: {\n            confirmLabel: utils.string.t('app.ok'),\n            confirmMessage: utils.string.t('claims.modals.referralResponse.subtitle'),\n            hideCancelButton: true,\n            buttonColors: {\n              confirm: 'secondary'\n            },\n            submitHandler: function submitHandler() {},\n            handleClose: function handleClose() {}\n          }\n        }\n      }));\n    } else {\n      dispatch(showModal({\n        component: 'CONFIRM_CLAIM_SUBMISSION',\n        props: {\n          title: utils.string.t('claims.modals.confirmClaimSubmission.title'),\n          fullWidth: false,\n          maxWidth: 'sm',\n          disableAutoFocus: true,\n          componentProps: {\n            handleNext: props.handleNext\n          }\n        }\n      }));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsPreviewInformationView, _objectSpread(_objectSpread({}, props), {}, {\n    policyInformation: policyInformation,\n    lossInformation: lossInformation,\n    catCodes: catCodes,\n    lossQualifiers: lossQualifiers,\n    claimInformation: claimDetails,\n    columns: underWritingGroupColumns,\n    handleClaimSubmit: handleClaimSubmit,\n    claimPreviewInfo: claimPreviewInfo,\n    setCurrentContextActive: setCurrentContextActive,\n    currentContextActive: currentContextActive\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 167,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsPreviewInformation, \"HHtJUIIEO0csuNRHMaJxhik3CP0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsPreviewInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsPreviewInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsPreviewInformation/ClaimsPreviewInformation.js"],"names":["React","useEffect","useState","useDispatch","useSelector","ClaimsPreviewInformationView","utils","selectClaimsInformation","getClaimsPreviewInformation","getPolicyInformation","selectLossQualifiers","selectLossId","selectCatCodes","selectClaimsPolicyInformation","selectClaimsInterest","selectBEAdjusterList","selectClaimsPolicySections","showModal","constants","ClaimsPreviewInformation","props","dispatch","claimPreviewInfo","lossInformation","catCodes","lossQualifiers","policyInformation","interests","items","beAdjuster","policySections","currentContextActive","setCurrentContextActive","interestObj","find","item","policyInterestID","interest","description","beAdjusterName","id","beAdjusterID","toString","name","selectedLossQualifier","list","parseInt","lossQualifierID","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","claimDetails","claimant","claimantName","status","claimStatus","claimRef","claimReference","lossQualifierName","lossDateFrom","lossFromDate","lossDateTo","lossToDate","adjusterType","string","t","adjusterName","nonBEAdjusterName","adjusterRef","adjusterReference","priority","priorityDescription","settlementCurrency","settlementCurrencyCode","complexity","complexityBasis","referral","referralValue","referralResponse","referralResponseDescription","location","fguNarrative","fgunarrative","processNotes","isBordereau","certificateNumber","certificateInceptionDate","certificateExpiryDate","basisOfOrder","orderPercentage","movementType","underWritingGroupData","policyUnderWritingGroupDtoList","policySectionID","policySectionDesc","sec","documentInfo","firmOrder","type","processingInstructions","transactionSheets","claimReceivedDate","bordereauPeriod","underWritingGroupColumns","label","handleNext","handleClaimSubmit","component","fullWidth","title","maxWidth","componentProps","confirmLabel","confirmMessage","hideCancelButton","buttonColors","confirm","submitHandler","handleClose","disableAutoFocus"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { ClaimsPreviewInformationView } from './ClaimsPreviewInformation.view';\r\nimport * as utils from 'utils';\r\nimport {\r\n  selectClaimsInformation,\r\n  getClaimsPreviewInformation,\r\n  getPolicyInformation,\r\n  selectLossQualifiers,\r\n  selectLossId,\r\n  selectCatCodes,\r\n  selectClaimsPolicyInformation,\r\n  selectClaimsInterest,\r\n  selectBEAdjusterList,\r\n  selectClaimsPolicySections,\r\n  showModal,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ClaimsPreviewInformation(props) {\r\n  const dispatch = useDispatch();\r\n  const claimPreviewInfo = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const beAdjuster = useSelector(selectBEAdjusterList)?.items;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const [currentContextActive, setCurrentContextActive] = useState(true);\r\n\r\n  const interestObj = interests?.find((item) => item.policyInterestID === claimPreviewInfo.policyInterestID);\r\n  const interest = interestObj?.description;\r\n  const beAdjusterName = beAdjuster?.find((item) => item.id === claimPreviewInfo?.beAdjusterID?.toString())?.name;\r\n  const selectedLossQualifier =\r\n    claimPreviewInfo && lossQualifiers.find((list) => parseInt(list.id) === claimPreviewInfo.lossQualifierID)?.name;\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n\r\n  const claimDetails = {\r\n    claimant: claimPreviewInfo.claimantName,\r\n    status: claimPreviewInfo.claimStatus,\r\n    claimRef: claimPreviewInfo.claimReference,\r\n    lossQualifierName: selectedLossQualifier,\r\n    lossDateFrom: claimPreviewInfo?.lossFromDate,\r\n    lossDateTo: claimPreviewInfo?.lossToDate,\r\n    adjusterType:\r\n      claimPreviewInfo?.beAdjusterID === 0\r\n        ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n        : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    adjusterName: claimPreviewInfo?.beAdjusterID !== 0 ? beAdjusterName : claimPreviewInfo.nonBEAdjusterName,\r\n    adjusterRef: claimPreviewInfo?.adjusterReference,\r\n    priority: claimPreviewInfo?.priorityDescription,\r\n    settlementCurrency: claimPreviewInfo?.settlementCurrencyCode,\r\n    interest,\r\n    complexity: claimPreviewInfo?.complexity,\r\n    complexityBasis: claimPreviewInfo?.complexityBasis,\r\n    referral: claimPreviewInfo?.referralValue,\r\n    referralResponse: claimPreviewInfo?.referralResponseDescription,\r\n    location: claimPreviewInfo?.location,\r\n    fguNarrative: claimPreviewInfo?.fgunarrative,\r\n    processNotes: claimPreviewInfo?.processNotes,\r\n    isBordereau: claimPreviewInfo?.isBordereau,\r\n    certificateNumber: claimPreviewInfo?.certificateNumber,\r\n    certificateInceptionDate: claimPreviewInfo?.certificateInceptionDate,\r\n    certificateExpiryDate: claimPreviewInfo?.certificateExpiryDate,\r\n    basisOfOrder: `${claimPreviewInfo?.basisOfOrder || 0}%`,\r\n    orderPercentage: `${claimPreviewInfo?.orderPercentage || 0} %`,\r\n    movementType: claimPreviewInfo?.movementType,\r\n    underWritingGroupData: claimPreviewInfo?.policyUnderWritingGroupDtoList,\r\n    policySectionID: claimPreviewInfo?.policySectionID,\r\n    policySectionDesc: !isSectionEnabled\r\n      ? ''\r\n      : !claimPreviewInfo?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec.id.toString() === claimPreviewInfo?.policySectionID?.toString())?.name,\r\n    documentInfo: {\r\n      firmOrder: { name: 'Filename1.pdf', type: 'pdf' },\r\n      processingInstructions: { name: 'Filename2.pdf', type: 'pdf' },\r\n      transactionSheets: { name: 'Filename3.html', type: 'html' },\r\n    },\r\n    claimReceivedDate: claimPreviewInfo?.claimReceivedDate,\r\n    bordereauPeriod: claimPreviewInfo?.bordereauPeriod,\r\n  };\r\n\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(getClaimsPreviewInformation());\r\n    dispatch(getPolicyInformation());\r\n    if (claimPreviewInfo.claimStatus === 'submitted') {\r\n      props.handleNext();\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleClaimSubmit = () => {\r\n    if (claimPreviewInfo.complexityBasis === 'Referral Required' && claimPreviewInfo.referralResponseDescription === null) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            fullWidth: true,\r\n            title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              confirmLabel: utils.string.t('app.ok'),\r\n              confirmMessage: utils.string.t('claims.modals.referralResponse.subtitle'),\r\n              hideCancelButton: true,\r\n              buttonColors: { confirm: 'secondary' },\r\n              submitHandler: () => {},\r\n              handleClose: () => {},\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM_CLAIM_SUBMISSION',\r\n          props: {\r\n            title: utils.string.t('claims.modals.confirmClaimSubmission.title'),\r\n            fullWidth: false,\r\n            maxWidth: 'sm',\r\n            disableAutoFocus: true,\r\n            componentProps: { handleNext: props.handleNext },\r\n          },\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ClaimsPreviewInformationView\r\n      {...props}\r\n      policyInformation={policyInformation}\r\n      lossInformation={lossInformation}\r\n      catCodes={catCodes}\r\n      lossQualifiers={lossQualifiers}\r\n      claimInformation={claimDetails}\r\n      columns={underWritingGroupColumns}\r\n      handleClaimSubmit={handleClaimSubmit}\r\n      claimPreviewInfo={claimPreviewInfo}\r\n      setCurrentContextActive={setCurrentContextActive}\r\n      currentContextActive={currentContextActive}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}