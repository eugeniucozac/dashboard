{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditQuoteBind\\\\RenderStep.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport { useFormContext } from 'react-hook-form';\nimport isString from 'lodash/isString';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport * as utils from 'utils';\nimport { AddRiskColumn, AddRiskObject, AddRiskObjectAddress, AddRiskFormField, AddRiskRow, AddRiskRowMultiple } from 'modules';\nimport { FormAutocomplete, FormAutocompleteMui, FormAutocompleteMuiAsync, FormCheckbox, FormDate, FormGrid, FormHidden, FormLegend, FormRadio, FormSelect, FormText, FormToggle } from 'components';\nimport Box from '@material-ui/core/Box';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar RenderStep = function RenderStep(_ref) {\n  _s();\n\n  var fieldsArray = _ref.fieldsArray,\n      fields = _ref.fields,\n      definitionsFields = _ref.definitionsFields,\n      classes = _ref.classes,\n      _ref$options = _ref.options,\n      options = _ref$options === void 0 ? {} : _ref$options;\n\n  var _useFormContext = useFormContext(),\n      control = _useFormContext.control,\n      register = _useFormContext.register,\n      watch = _useFormContext.watch,\n      errors = _useFormContext.errors,\n      setValue = _useFormContext.setValue,\n      trigger = _useFormContext.trigger;\n\n  var updateObject = function updateObject(objName, values) {\n    if (utils.generic.isValidObject(values)) {\n      setValue(objName, values);\n    }\n  };\n\n  var fieldMap = {\n    text: FormText,\n    number: FormText,\n    datepicker: FormDate,\n    select: FormSelect,\n    selectAsync: FormSelect,\n    autocomplete: FormAutocomplete,\n    autocompletemui: FormAutocompleteMui,\n    autocompletemuiAsync: FormAutocompleteMuiAsync,\n    radio: FormRadio,\n    checkbox: FormCheckbox,\n    toggle: FormToggle,\n    hidden: FormHidden,\n    label: FormLegend\n  };\n  var objectMap = {\n    address: AddRiskObjectAddress,\n    object: AddRiskObject\n  };\n  return /*#__PURE__*/_jsxDEV(FormGrid, {\n    container: true,\n    spacing: 4,\n    children: fieldsArray.map(function (field, idx) {\n      var condition = utils.risk.getCondition(field, fields);\n      var isValid = !condition || condition && utils.risk.isConditionValid(condition, watch(condition.name));\n      var hasLegend = isString(field.header);\n      var gridField = field.gridSize || get(options, 'gridSize') || {};\n      var gridDefault = {\n        xs: 12,\n        sm: 6,\n        md: 4,\n        lg: 4,\n        xl: 4\n      };\n      var grid = gridField ? _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, (gridField === null || gridField === void 0 ? void 0 : gridField.xs) && {\n        xs: gridField === null || gridField === void 0 ? void 0 : gridField.xs\n      }), (gridField === null || gridField === void 0 ? void 0 : gridField.sm) && {\n        sm: gridField === null || gridField === void 0 ? void 0 : gridField.sm\n      }), (gridField === null || gridField === void 0 ? void 0 : gridField.md) && {\n        md: gridField === null || gridField === void 0 ? void 0 : gridField.md\n      }), (gridField === null || gridField === void 0 ? void 0 : gridField.lg) && {\n        lg: gridField === null || gridField === void 0 ? void 0 : gridField.lg\n      }), (gridField === null || gridField === void 0 ? void 0 : gridField.xl) && {\n        xl: gridField === null || gridField === void 0 ? void 0 : gridField.xl\n      }) : gridDefault;\n      var classesHighlight = classnames(_defineProperty({}, classes.highlight, condition));\n      var classesLabel = classnames(_defineProperty({}, classes.gridLabel, field.type === 'label')); // grid spacer\n\n      if (utils.risk.isGridSpacer(field)) {\n        return /*#__PURE__*/_createElement(FormGrid, _objectSpread(_objectSpread({\n          item: true,\n          xs: 12\n        }, field.gridSize), {}, {\n          nestedClasses: {\n            root: classes.spacer\n          },\n          key: \"\".concat(field.group, \"-spacer-\").concat(idx),\n          \"data-testid\": \"spacer-\".concat(field.group, \"-\").concat(idx),\n          __self: _this,\n          __source: {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }\n        }), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 15\n        }, _this));\n      } // column\n\n\n      if (utils.risk.isArrayColumn(field)) {\n        return isValid && /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(AddRiskColumn, {\n            field: field,\n            formProps: {\n              control: control,\n              register: register,\n              watch: watch,\n              errors: errors,\n              setValue: setValue,\n              trigger: trigger\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 17\n          }, _this)\n        }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 15\n        }, _this);\n      } // row\n\n\n      if (utils.risk.isArrayTable(field)) {\n        return isValid && /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mb: 5,\n            children: field.display === 'MULTICARD' ? /*#__PURE__*/_jsxDEV(AddRiskRowMultiple, {\n              field: field,\n              definitionsFields: definitionsFields,\n              formProps: {\n                control: control,\n                register: register,\n                watch: watch,\n                errors: errors,\n                setValue: setValue,\n                trigger: trigger\n              },\n              formatData: \"PROPERTY\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 21\n            }, _this) : /*#__PURE__*/_jsxDEV(AddRiskRow, {\n              field: field,\n              formProps: {\n                control: control,\n                register: register,\n                watch: watch,\n                errors: errors,\n                setValue: setValue,\n                trigger: trigger\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 125,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 17\n          }, _this)\n        }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 115,\n          columnNumber: 15\n        }, _this);\n      } // object\n\n\n      if (utils.risk.isObject(field)) {\n        var ObjectComponent = objectMap[field.type];\n        return (field === null || field === void 0 ? void 0 : field.hidden) ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: /*#__PURE__*/_jsxDEV(ObjectComponent, {\n            field: field,\n            formProps: {\n              control: control,\n              register: register,\n              watch: watch,\n              errors: errors,\n              setValue: setValue,\n              trigger: trigger\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false) : isValid ? /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ObjectComponent, {\n            field: field,\n            formProps: {\n              control: control,\n              register: register,\n              watch: watch,\n              errors: errors,\n              setValue: setValue,\n              trigger: trigger\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 15\n          }, _this)\n        }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 13\n        }, _this) : null;\n      } // abort\n\n\n      if (!fieldMap[field.type]) return null; // field\n\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [hasLegend && /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 12,\n          nestedClasses: {\n            root: classes.legend\n          },\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: field.header\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 15\n        }, _this), isValid ? utils.risk.isHiddenField(field) ? /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n          variant: \"outlined\",\n          field: field,\n          formProps: {\n            control: control,\n            register: register,\n            watch: watch,\n            errors: errors,\n            setValue: setValue,\n            trigger: trigger\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 17\n        }, _this) : /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n          item: true,\n          xs: 12\n        }, grid), {}, {\n          nestedClasses: {\n            root: classesLabel\n          },\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classesHighlight,\n            children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n              variant: \"outlined\",\n              field: field,\n              formProps: {\n                control: control,\n                register: register,\n                watch: watch,\n                errors: errors,\n                setValue: setValue,\n                trigger: trigger\n              },\n              handleUpdateObject: updateObject\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 21\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 19\n          }, _this)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 17\n        }, _this) : null]\n      }, \"\".concat(field.group, \"-\").concat(field.name), true, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(RenderStep, \"rhy4u4r3BjHZEirENkW5IU3xTI0=\", false, function () {\n  return [useFormContext];\n});\n\n_c = RenderStep;\nexport default RenderStep;\n\nvar _c;\n\n$RefreshReg$(_c, \"RenderStep\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditQuoteBind/RenderStep.js"],"names":["React","Fragment","useFormContext","isString","classnames","get","utils","AddRiskColumn","AddRiskObject","AddRiskObjectAddress","AddRiskFormField","AddRiskRow","AddRiskRowMultiple","FormAutocomplete","FormAutocompleteMui","FormAutocompleteMuiAsync","FormCheckbox","FormDate","FormGrid","FormHidden","FormLegend","FormRadio","FormSelect","FormText","FormToggle","Box","RenderStep","fieldsArray","fields","definitionsFields","classes","options","control","register","watch","errors","setValue","trigger","updateObject","objName","values","generic","isValidObject","fieldMap","text","number","datepicker","select","selectAsync","autocomplete","autocompletemui","autocompletemuiAsync","radio","checkbox","toggle","hidden","label","objectMap","address","object","map","field","idx","condition","risk","getCondition","isValid","isConditionValid","name","hasLegend","header","gridField","gridSize","gridDefault","xs","sm","md","lg","xl","grid","classesHighlight","highlight","classesLabel","gridLabel","type","isGridSpacer","root","spacer","group","isArrayColumn","isArrayTable","display","isObject","ObjectComponent","legend","isHiddenField"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport { useFormContext } from 'react-hook-form';\r\nimport isString from 'lodash/isString';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\nimport * as utils from 'utils';\r\n\r\nimport { AddRiskColumn, AddRiskObject, AddRiskObjectAddress, AddRiskFormField, AddRiskRow, AddRiskRowMultiple } from 'modules';\r\nimport {\r\n  FormAutocomplete,\r\n  FormAutocompleteMui,\r\n  FormAutocompleteMuiAsync,\r\n  FormCheckbox,\r\n  FormDate,\r\n  FormGrid,\r\n  FormHidden,\r\n  FormLegend,\r\n  FormRadio,\r\n  FormSelect,\r\n  FormText,\r\n  FormToggle,\r\n} from 'components';\r\nimport Box from '@material-ui/core/Box';\r\n\r\nconst RenderStep = ({ fieldsArray, fields, definitionsFields, classes, options = {} }) => {\r\n  const { control, register, watch, errors, setValue, trigger } = useFormContext();\r\n\r\n  const updateObject = (objName, values) => {\r\n    if (utils.generic.isValidObject(values)) {\r\n      setValue(objName, values);\r\n    }\r\n  };\r\n\r\n  const fieldMap = {\r\n    text: FormText,\r\n    number: FormText,\r\n    datepicker: FormDate,\r\n    select: FormSelect,\r\n    selectAsync: FormSelect,\r\n    autocomplete: FormAutocomplete,\r\n    autocompletemui: FormAutocompleteMui,\r\n    autocompletemuiAsync: FormAutocompleteMuiAsync,\r\n    radio: FormRadio,\r\n    checkbox: FormCheckbox,\r\n    toggle: FormToggle,\r\n    hidden: FormHidden,\r\n    label: FormLegend,\r\n  };\r\n\r\n  const objectMap = {\r\n    address: AddRiskObjectAddress,\r\n    object: AddRiskObject,\r\n  };\r\n\r\n  return (\r\n    <FormGrid container spacing={4}>\r\n      {fieldsArray.map((field, idx) => {\r\n        const condition = utils.risk.getCondition(field, fields);\r\n        const isValid = !condition || (condition && utils.risk.isConditionValid(condition, watch(condition.name)));\r\n\r\n        const hasLegend = isString(field.header);\r\n\r\n        const gridField = field.gridSize || get(options, 'gridSize') || {};\r\n        const gridDefault = { xs: 12, sm: 6, md: 4, lg: 4, xl: 4 };\r\n        const grid = gridField\r\n          ? {\r\n              ...(gridField?.xs && { xs: gridField?.xs }),\r\n              ...(gridField?.sm && { sm: gridField?.sm }),\r\n              ...(gridField?.md && { md: gridField?.md }),\r\n              ...(gridField?.lg && { lg: gridField?.lg }),\r\n              ...(gridField?.xl && { xl: gridField?.xl }),\r\n            }\r\n          : gridDefault;\r\n\r\n        const classesHighlight = classnames({\r\n          [classes.highlight]: condition,\r\n        });\r\n\r\n        const classesLabel = classnames({\r\n          [classes.gridLabel]: field.type === 'label',\r\n        });\r\n\r\n        // grid spacer\r\n        if (utils.risk.isGridSpacer(field)) {\r\n          return (\r\n            <FormGrid\r\n              item\r\n              xs={12}\r\n              {...field.gridSize}\r\n              nestedClasses={{ root: classes.spacer }}\r\n              key={`${field.group}-spacer-${idx}`}\r\n              data-testid={`spacer-${field.group}-${idx}`}\r\n            >\r\n              <span />\r\n            </FormGrid>\r\n          );\r\n        }\r\n\r\n        // column\r\n        if (utils.risk.isArrayColumn(field)) {\r\n          return (\r\n            isValid && (\r\n              <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n                <AddRiskColumn field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n              </FormGrid>\r\n            )\r\n          );\r\n        }\r\n\r\n        // row\r\n        if (utils.risk.isArrayTable(field)) {\r\n          return (\r\n            isValid && (\r\n              <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n                <Box mb={5}>\r\n                  {field.display === 'MULTICARD' ? (\r\n                    <AddRiskRowMultiple\r\n                      field={field}\r\n                      definitionsFields={definitionsFields}\r\n                      formProps={{ control, register, watch, errors, setValue, trigger }}\r\n                      formatData=\"PROPERTY\"\r\n                    />\r\n                  ) : (\r\n                    <AddRiskRow field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n                  )}\r\n                </Box>\r\n              </FormGrid>\r\n            )\r\n          );\r\n        }\r\n\r\n        // object\r\n        if (utils.risk.isObject(field)) {\r\n          const ObjectComponent = objectMap[field.type];\r\n\r\n          return field?.hidden ? (\r\n            <>\r\n              <ObjectComponent field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n            </>\r\n          ) : isValid ? (\r\n            <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n              <ObjectComponent field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n            </FormGrid>\r\n          ) : null;\r\n        }\r\n\r\n        // abort\r\n        if (!fieldMap[field.type]) return null;\r\n\r\n        // field\r\n        return (\r\n          <Fragment key={`${field.group}-${field.name}`}>\r\n            {hasLegend && (\r\n              <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                <FormLegend text={field.header} />\r\n              </FormGrid>\r\n            )}\r\n            {isValid ? (\r\n              utils.risk.isHiddenField(field) ? (\r\n                <AddRiskFormField variant=\"outlined\" field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n              ) : (\r\n                <FormGrid item xs={12} {...grid} nestedClasses={{ root: classesLabel }}>\r\n                  <div className={classesHighlight}>\r\n                    <AddRiskFormField\r\n                      variant=\"outlined\"\r\n                      field={field}\r\n                      formProps={{ control, register, watch, errors, setValue, trigger }}\r\n                      handleUpdateObject={updateObject}\r\n                    />\r\n                  </div>\r\n                </FormGrid>\r\n              )\r\n            ) : null}\r\n          </Fragment>\r\n        );\r\n      })}\r\n    </FormGrid>\r\n  );\r\n};\r\n\r\nexport default RenderStep;\r\n"]},"metadata":{},"sourceType":"module"}