{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ComplexityManagementAddPolicy\\\\ComplexityManagementAddPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport moment from 'moment'; //app\n\nimport { Translate } from 'components';\nimport { ComplexityManagementAddPolicyView } from './ComplexityManagementAddPolicy.view';\nimport { getComplexityPolicies, selectComplexityPolicies, checkedPolicyDetails, selectedCheckedComplexPolicies, postSaveComplexityAddPolicy, resetComplexityPolicies, hideModal } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplexityManagementAddPolicy() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch;\n\n  var complexityPolicies = useSelector(selectComplexityPolicies);\n  var selectedPoliciesData = useSelector(selectedCheckedComplexPolicies);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resetKey = _useState4[0],\n      setResetKey = _useState4[1];\n\n  var selectedPolicyItemsHandler = function selectedPolicyItemsHandler(id, checkedType, policy) {\n    dispatch(checkedPolicyDetails({\n      id: id,\n      checkedType: checkedType,\n      policy: policy\n    }));\n  };\n\n  var enableDisableFlag = function enableDisableFlag(field) {\n    return selectedPoliciesData === null || selectedPoliciesData === void 0 ? void 0 : selectedPoliciesData.some(function (item) {\n      return item.id === field && item.checkedType;\n    });\n  };\n\n  var postSaveComplexPolicyHandler = function postSaveComplexPolicyHandler() {\n    dispatch(postSaveComplexityAddPolicy());\n    dispatch(hideModal());\n  };\n\n  var columns = [{\n    id: 'actions',\n    empty: true,\n    narrow: true\n  }, {\n    id: 'policyRef',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Contract/Policy Ref\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 31\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'policyType',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Policy Type\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 32\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'insured',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Insured\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 29\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'claimant',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Claimant\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 30\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'riskDetails',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Risk Details\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 33\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'inceptionDate',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Inception Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 35\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'expiryDate',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Expiry Date\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 32\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'company',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Company\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 29\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'division',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"Division\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 30\n    }, this),\n    nowrap: true,\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }];\n\n  var handleReset = function handleReset() {\n    setSearchTerm('');\n    setResetKey(moment().format());\n  };\n\n  var handleSearch = function handleSearch(query) {\n    setSearchTerm(query);\n    dispatch(getComplexityPolicies({\n      term: query\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getComplexityPolicies({\n      page: newPage,\n      term: searchTerm\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getComplexityPolicies({\n      size: rowsPerPage,\n      term: searchTerm\n    }));\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getComplexityPolicies({\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm\n    }));\n  };\n\n  useEffect(function () {\n    // cleanup\n    return function () {\n      dispatch(resetComplexityPolicies());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return /*#__PURE__*/_jsxDEV(ComplexityManagementAddPolicyView, {\n    cols: columns,\n    rows: complexityPolicies,\n    pagination: {\n      page: complexityPolicies.page,\n      rowsTotal: complexityPolicies.itemsTotal,\n      rowsPerPage: complexityPolicies.pageSize\n    },\n    handleSort: handleSort,\n    handleSearch: handleSearch,\n    handleReset: handleReset,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    control: control,\n    register: register,\n    watch: watch,\n    complexityFlag: true,\n    selectedPolicyItemsHandler: selectedPolicyItemsHandler,\n    postSaveComplexPolicyHandler: postSaveComplexPolicyHandler,\n    enableDisableFlag: enableDisableFlag,\n    selectedPoliciesData: selectedPoliciesData,\n    resetKey: resetKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 83,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ComplexityManagementAddPolicy, \"1NK979n1aZKEYf06iXhrKTM2uVA=\", false, function () {\n  return [useDispatch, useForm, useSelector, useSelector];\n});\n\n_c = ComplexityManagementAddPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexityManagementAddPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ComplexityManagementAddPolicy/ComplexityManagementAddPolicy.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","moment","Translate","ComplexityManagementAddPolicyView","getComplexityPolicies","selectComplexityPolicies","checkedPolicyDetails","selectedCheckedComplexPolicies","postSaveComplexityAddPolicy","resetComplexityPolicies","hideModal","ComplexityManagementAddPolicy","dispatch","control","register","watch","complexityPolicies","selectedPoliciesData","searchTerm","setSearchTerm","resetKey","setResetKey","selectedPolicyItemsHandler","id","checkedType","policy","enableDisableFlag","field","some","item","postSaveComplexPolicyHandler","columns","empty","narrow","label","nowrap","sort","type","direction","handleReset","format","handleSearch","query","term","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","toUpperCase","rowsTotal","itemsTotal","pageSize"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport { Translate } from 'components';\r\nimport { ComplexityManagementAddPolicyView } from './ComplexityManagementAddPolicy.view';\r\n\r\nimport {\r\n  getComplexityPolicies,\r\n  selectComplexityPolicies,\r\n  checkedPolicyDetails,\r\n  selectedCheckedComplexPolicies,\r\n  postSaveComplexityAddPolicy,\r\n  resetComplexityPolicies,\r\n  hideModal,\r\n} from 'stores';\r\n\r\nexport default function ComplexityManagementAddPolicy() {\r\n  const dispatch = useDispatch();\r\n  const { control, register, watch } = useForm();\r\n  const complexityPolicies = useSelector(selectComplexityPolicies);\r\n  const selectedPoliciesData = useSelector(selectedCheckedComplexPolicies);\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const selectedPolicyItemsHandler = (id, checkedType, policy) => {\r\n    dispatch(checkedPolicyDetails({ id, checkedType, policy }));\r\n  };\r\n\r\n  const enableDisableFlag = (field) => selectedPoliciesData?.some((item) => item.id === field && item.checkedType);\r\n\r\n  const postSaveComplexPolicyHandler = () => {\r\n    dispatch(postSaveComplexityAddPolicy());\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'actions', empty: true, narrow: true },\r\n    { id: 'policyRef', label: <Translate label=\"Contract/Policy Ref\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'policyType', label: <Translate label=\"Policy Type\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'insured', label: <Translate label=\"Insured\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'claimant', label: <Translate label=\"Claimant\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'riskDetails', label: <Translate label=\"Risk Details\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'inceptionDate', label: <Translate label=\"Inception Date\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'expiryDate', label: <Translate label=\"Expiry Date\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'company', label: <Translate label=\"Company\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n    { id: 'division', label: <Translate label=\"Division\" />, nowrap: true, sort: { type: '', direction: 'asc' } },\r\n  ];\r\n\r\n  const handleReset = () => {\r\n    setSearchTerm('');\r\n    setResetKey(moment().format());\r\n  };\r\n\r\n  const handleSearch = (query) => {\r\n    setSearchTerm(query);\r\n    dispatch(getComplexityPolicies({ term: query }));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getComplexityPolicies({ page: newPage, term: searchTerm }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getComplexityPolicies({ size: rowsPerPage, term: searchTerm }));\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getComplexityPolicies({ sortBy: by, direction: dir.toUpperCase(), term: searchTerm }));\r\n  };\r\n  useEffect(\r\n    () => {\r\n      // cleanup\r\n      return () => {\r\n        dispatch(resetComplexityPolicies());\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n  return (\r\n    <ComplexityManagementAddPolicyView\r\n      cols={columns}\r\n      rows={complexityPolicies}\r\n      pagination={{\r\n        page: complexityPolicies.page,\r\n        rowsTotal: complexityPolicies.itemsTotal,\r\n        rowsPerPage: complexityPolicies.pageSize,\r\n      }}\r\n      handleSort={handleSort}\r\n      handleSearch={handleSearch}\r\n      handleReset={handleReset}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      control={control}\r\n      register={register}\r\n      watch={watch}\r\n      complexityFlag={true}\r\n      selectedPolicyItemsHandler={selectedPolicyItemsHandler}\r\n      postSaveComplexPolicyHandler={postSaveComplexPolicyHandler}\r\n      enableDisableFlag={enableDisableFlag}\r\n      selectedPoliciesData={selectedPoliciesData}\r\n      resetKey={resetKey}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}