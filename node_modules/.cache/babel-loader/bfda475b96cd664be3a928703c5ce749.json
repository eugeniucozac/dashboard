{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseClientTable\\\\PremiumProcessingCaseClientTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport PremiumProcessingCaseClientTableView from './PremiumProcessingCaseClientTable.view';\nimport * as utils from 'utils';\nimport { getCaseClientTable, selectUser } from 'stores';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseClientTable.propTypes = {\n  caseDetailsObject: PropTypes.object.isRequired,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseClientTable(_ref) {\n  _s();\n\n  var _caseDetailsObject$ca, _caseDetailsObject$ca2, _caseDetailsObject$ca3;\n\n  var caseDetailsObject = _ref.caseDetailsObject,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var dispatch = useDispatch();\n  var user = useSelector(selectUser);\n  var clientList = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca === void 0 ? void 0 : (_caseDetailsObject$ca2 = _caseDetailsObject$ca.caseClientList) === null || _caseDetailsObject$ca2 === void 0 ? void 0 : _caseDetailsObject$ca2.items;\n  var frontEndSendDocs = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.frontEndSendDocs) || false;\n  var policyId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.policyId) || '';\n  var sourceId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca3 = caseDetailsObject.caseTeamData) === null || _caseDetailsObject$ca3 === void 0 ? void 0 : _caseDetailsObject$ca3.xbInstanceId) || '';\n  var caseIncidentID = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseId;\n  var caseStageDetails = caseDetailsObject.caseStageDetails;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openEms = _useState2[0],\n      setOpenEms = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      clientDetails = _useState4[0],\n      setClientDetails = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isSendEmailAllowed = _useState6[0],\n      setIsSendEmailAllowed = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFecSendEmailAllowed = _useState8[0],\n      setIsFecSendEmailAllowed = _useState8[1];\n\n  var _useState9 = useState(''),\n      _useState10 = _slicedToArray(_useState9, 2),\n      accountName = _useState10[0],\n      setAccountName = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      clientListData = _useState12[0],\n      setClientListData = _useState12[1];\n\n  var hasSendEmailPermission = utils.app.access.feature('premiumProcessing.issueDocumentClient', ['read', 'create', 'update', 'delete'], user);\n  var isFecToClientSendEmail = utils.app.access.feature('issueDocumentClient.fecToClientSendEmail', ['read', 'create', 'update', 'delete'], user);\n  var hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentClient', ['read', 'create', 'update', 'delete'], user);\n  var hasViewPermission = utils.app.access.feature('premiumProcessing.issueDocumentClient', ['read'], user);\n  var isCompletedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active;\n  });\n  var isRejectedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active;\n  });\n\n  var setEmailPermission = function setEmailPermission() {\n    if (!isCompletedStage && !isRejectedStage) {\n      // for junior and senior technician role\n      if (hasSendEmailPermission && !isFecToClientSendEmail) {\n        setIsSendEmailAllowed(true);\n      } // for FEC and OL role\n      else if (!hasSendEmailPermission && isFecToClientSendEmail) {\n          setIsFecSendEmailAllowed(true);\n        } // for other role\n        else {\n            setIsSendEmailAllowed(false);\n            setIsFecSendEmailAllowed(false);\n          }\n    } else {\n      setIsSendEmailAllowed(false);\n      setIsFecSendEmailAllowed(false);\n    }\n  };\n\n  useEffect(function () {\n    if (utils.generic.isValidArray(clientList, true)) {\n      clientList.forEach(function (data, index) {\n        var isNotBackOfficeToFecMailSent = [utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC').toLowerCase()].includes(data.documentsSend.toLowerCase()) && !data.sendDate || false;\n\n        if (isNotBackOfficeToFecMailSent) {\n          clientList.splice(index, 1, _objectSpread(_objectSpread({}, data), {}, {\n            isNotBackOfficeToFecMailSent: isNotBackOfficeToFecMailSent\n          }));\n        }\n      });\n    }\n\n    setClientListData(clientList);\n  }, [clientList]);\n  useEffect(function () {\n    dispatch(getCaseClientTable({\n      caseIncidentID: caseIncidentID,\n      policyId: policyId,\n      sourceId: sourceId\n    }));\n  }, [dispatch, policyId, sourceId, caseIncidentID]);\n  useEffect(function () {\n    setEmailPermission();\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var sendEmail = function sendEmail(clientData) {\n    setOpenEms(true);\n    setClientDetails(clientData);\n    setAccountName(clientData === null || clientData === void 0 ? void 0 : clientData.accountName);\n  };\n\n  var goBack = function goBack() {\n    dispatch(getCaseClientTable({\n      caseIncidentID: caseIncidentID,\n      policyId: policyId,\n      sourceId: sourceId\n    })).then(function (data) {\n      var _data$status;\n\n      if ((data === null || data === void 0 ? void 0 : (_data$status = data.status) === null || _data$status === void 0 ? void 0 : _data$status.toLowerCase()) === constants.API_RESPONSE_OK.toLowerCase()) {\n        setOpenEms(false);\n        setClientDetails({});\n        setAccountName('');\n      }\n    });\n  };\n\n  var columnsData = [{\n    id: 'client',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.client')\n  }, {\n    id: 'documentSent',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.documentSent')\n  }, {\n    id: 'status',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.status')\n  }, {\n    id: 'sentDate',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.sentDate')\n  }, {\n    id: 'emailDocument',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.emailDocument')\n  }];\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseClientTableView, {\n    accountName: accountName,\n    caseDetailsObject: caseDetailsObject,\n    caseIncidentID: caseIncidentID,\n    frontEndSendDocs: frontEndSendDocs,\n    openEms: openEms,\n    clientDetails: clientDetails,\n    columnsData: columnsData,\n    clientTable: clientListData,\n    isSendEmailAllowed: isSendEmailAllowed,\n    isFecSendEmailAllowed: isFecSendEmailAllowed,\n    hasViewOrEditAccess: hasEditPermission || hasViewPermission,\n    handlers: {\n      sendEmail: sendEmail,\n      goBack: goBack\n    },\n    isNotMyTaskView: isNotMyTaskView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 146,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseClientTable, \"KlO9hvrGruLEl3GUafBt792sM/g=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PremiumProcessingCaseClientTable;\nPremiumProcessingCaseClientTable.displayName = \"PremiumProcessingCaseClientTable\";\nPremiumProcessingCaseClientTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseClientTable\",\n  \"props\": {\n    \"caseDetailsObject\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isNotMyTaskView\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseClientTable\\\\PremiumProcessingCaseClientTable.js\"] = {\n    name: \"PremiumProcessingCaseClientTable\",\n    docgenInfo: PremiumProcessingCaseClientTable.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseClientTable\\\\PremiumProcessingCaseClientTable.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseClientTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseClientTable/PremiumProcessingCaseClientTable.js"],"names":["React","useState","useEffect","useDispatch","useSelector","PropTypes","PremiumProcessingCaseClientTableView","utils","getCaseClientTable","selectUser","constants","PremiumProcessingCaseClientTable","propTypes","caseDetailsObject","object","isRequired","isNotMyTaskView","bool","dispatch","user","clientList","caseIssueDocuments","caseClientList","items","frontEndSendDocs","policyId","sourceId","caseTeamData","xbInstanceId","caseIncidentID","caseId","caseStageDetails","openEms","setOpenEms","clientDetails","setClientDetails","isSendEmailAllowed","setIsSendEmailAllowed","isFecSendEmailAllowed","setIsFecSendEmailAllowed","accountName","setAccountName","clientListData","setClientListData","hasSendEmailPermission","app","access","feature","isFecToClientSendEmail","hasEditPermission","hasViewPermission","isCompletedStage","some","cs","BPM_STAGE_COMPLETED","includes","bpmStageCode","active","isRejectedStage","BPM_STAGE_REJECTED","setEmailPermission","generic","isValidArray","forEach","data","index","isNotBackOfficeToFecMailSent","string","t","toLowerCase","documentsSend","sendDate","splice","sendEmail","clientData","goBack","then","status","API_RESPONSE_OK","columnsData","id","visible","nowrap","label"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport PremiumProcessingCaseClientTableView from './PremiumProcessingCaseClientTable.view';\r\nimport * as utils from 'utils';\r\nimport { getCaseClientTable, selectUser } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nPremiumProcessingCaseClientTable.propTypes = {\r\n  caseDetailsObject: PropTypes.object.isRequired,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseClientTable({ caseDetailsObject, isNotMyTaskView }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n\r\n  const clientList = caseDetailsObject?.caseIssueDocuments?.caseClientList?.items;\r\n  const frontEndSendDocs = caseDetailsObject?.frontEndSendDocs || false;\r\n  const policyId = caseDetailsObject?.policyId || '';\r\n  const sourceId = caseDetailsObject?.caseTeamData?.xbInstanceId || '';\r\n  const caseIncidentID = caseDetailsObject?.caseId;\r\n  const { caseStageDetails } = caseDetailsObject;\r\n  const [openEms, setOpenEms] = useState(false);\r\n  const [clientDetails, setClientDetails] = useState({});\r\n  const [isSendEmailAllowed, setIsSendEmailAllowed] = useState(false);\r\n  const [isFecSendEmailAllowed, setIsFecSendEmailAllowed] = useState(false);\r\n  const [accountName, setAccountName] = useState('');\r\n  const [clientListData, setClientListData] = useState([]);\r\n  const hasSendEmailPermission = utils.app.access.feature(\r\n    'premiumProcessing.issueDocumentClient',\r\n    ['read', 'create', 'update', 'delete'],\r\n    user\r\n  );\r\n  const isFecToClientSendEmail = utils.app.access.feature(\r\n    'issueDocumentClient.fecToClientSendEmail',\r\n    ['read', 'create', 'update', 'delete'],\r\n    user\r\n  );\r\n  const hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentClient', ['read', 'create', 'update', 'delete'], user);\r\n  const hasViewPermission = utils.app.access.feature('premiumProcessing.issueDocumentClient', ['read'], user);\r\n  const isCompletedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active);\r\n  const isRejectedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active);\r\n  const setEmailPermission = () => {\r\n    if (!isCompletedStage && !isRejectedStage) {\r\n      // for junior and senior technician role\r\n      if (hasSendEmailPermission && !isFecToClientSendEmail) {\r\n        setIsSendEmailAllowed(true);\r\n      }\r\n      // for FEC and OL role\r\n      else if (!hasSendEmailPermission && isFecToClientSendEmail) {\r\n        setIsFecSendEmailAllowed(true);\r\n      }\r\n      // for other role\r\n      else {\r\n        setIsSendEmailAllowed(false);\r\n        setIsFecSendEmailAllowed(false);\r\n      }\r\n    } else {\r\n      setIsSendEmailAllowed(false);\r\n      setIsFecSendEmailAllowed(false);\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isValidArray(clientList, true)) {\r\n      clientList.forEach((data, index) => {\r\n        const isNotBackOfficeToFecMailSent =\r\n          ([utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC').toLowerCase()].includes(\r\n            data.documentsSend.toLowerCase()\r\n          ) &&\r\n            !data.sendDate) ||\r\n          false;\r\n        if (isNotBackOfficeToFecMailSent) {\r\n          clientList.splice(index, 1, { ...data, isNotBackOfficeToFecMailSent });\r\n        }\r\n      });\r\n    }\r\n    setClientListData(clientList);\r\n  }, [clientList]);\r\n\r\n  useEffect(() => {\r\n    dispatch(getCaseClientTable({ caseIncidentID, policyId, sourceId }));\r\n  }, [dispatch, policyId, sourceId, caseIncidentID]);\r\n\r\n  useEffect(\r\n    () => {\r\n      setEmailPermission();\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const sendEmail = (clientData) => {\r\n    setOpenEms(true);\r\n    setClientDetails(clientData);\r\n    setAccountName(clientData?.accountName);\r\n  };\r\n\r\n  const goBack = () => {\r\n    dispatch(getCaseClientTable({ caseIncidentID, policyId, sourceId })).then((data) => {\r\n      if (data?.status?.toLowerCase() === constants.API_RESPONSE_OK.toLowerCase()) {\r\n        setOpenEms(false);\r\n        setClientDetails({});\r\n        setAccountName('');\r\n      }\r\n    });\r\n  };\r\n\r\n  const columnsData = [\r\n    {\r\n      id: 'client',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.client'),\r\n    },\r\n    {\r\n      id: 'documentSent',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.documentSent'),\r\n    },\r\n    {\r\n      id: 'status',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.status'),\r\n    },\r\n    {\r\n      id: 'sentDate',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.sentDate'),\r\n    },\r\n    {\r\n      id: 'emailDocument',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.processingClientTable.tableColumns.emailDocument'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PremiumProcessingCaseClientTableView\r\n      accountName={accountName}\r\n      caseDetailsObject={caseDetailsObject}\r\n      caseIncidentID={caseIncidentID}\r\n      frontEndSendDocs={frontEndSendDocs}\r\n      openEms={openEms}\r\n      clientDetails={clientDetails}\r\n      columnsData={columnsData}\r\n      clientTable={clientListData}\r\n      isSendEmailAllowed={isSendEmailAllowed}\r\n      isFecSendEmailAllowed={isFecSendEmailAllowed}\r\n      hasViewOrEditAccess={hasEditPermission || hasViewPermission}\r\n      handlers={{ sendEmail, goBack }}\r\n      isNotMyTaskView={isNotMyTaskView}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}