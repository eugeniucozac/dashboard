{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimsProcessing\\\\ClaimsProcessing.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { AccessControl, Layout, SectionHeader, Tabs, Translate, PreventNavigation } from 'components';\nimport { ClaimsManagement, TasksManagement, TaskSummary, ClaimSummary, ClaimsTasksReporting } from 'modules';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsProcessingView.propTypes = {\n  claimsSelected: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  hasUnsavedChanges: PropTypes.bool.isRequired,\n  allowedNavigationUrls: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    selectTab: PropTypes.func.isRequired,\n    allowNavigation: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsProcessingView(_ref) {\n  var claimsSelected = _ref.claimsSelected,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      handlers = _ref.handlers,\n      hasUnsavedChanges = _ref.hasUnsavedChanges,\n      allowedNavigationUrls = _ref.allowedNavigationUrls;\n  var hasOneClaim = (claimsSelected === null || claimsSelected === void 0 ? void 0 : claimsSelected.length) === 1;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      showDesktopControls: true,\n      disableDesktopControls: !hasOneClaim,\n      testid: \"claims-processing\",\n      children: [/*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: /*#__PURE__*/_jsxDEV(Translate, {\n            label: utils.string.t('claims.processing.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 20\n          }, this),\n          icon: AssignmentTurnedInIcon,\n          testid: \"claims-processing-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 32,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(AccessControl, {\n          feature: \"claimsProcessing.myTasks\",\n          permissions: ['read', 'create', 'update'],\n          children: /*#__PURE__*/_jsxDEV(ClaimsTasksReporting, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handlers.selectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), selectedTab === constants.RFI_ON_CLAIMS && /*#__PURE__*/_jsxDEV(ClaimsManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 55\n        }, this), selectedTab === constants.RFI_ON_TASKS && /*#__PURE__*/_jsxDEV(TasksManagement, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Layout, {\n        sidebar: true,\n        padding: false,\n        children: [selectedTab === constants.RFI_ON_CLAIMS && /*#__PURE__*/_jsxDEV(ClaimSummary, {\n          claim: claimsSelected === null || claimsSelected === void 0 ? void 0 : claimsSelected[0],\n          allowNavigation: handlers.allowNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 47,\n          columnNumber: 13\n        }, this), selectedTab === constants.RFI_ON_TASKS && /*#__PURE__*/_jsxDEV(TaskSummary, {\n          claim: claimsSelected === null || claimsSelected === void 0 ? void 0 : claimsSelected[0],\n          allowNavigation: handlers.allowNavigation\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 54\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this), hasUnsavedChanges && /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: true,\n      allowedUrls: allowedNavigationUrls,\n      title: hasUnsavedChanges ? 'navigation.page.subtitle' : 'status.alert',\n      subtitle: '',\n      hint: hasUnsavedChanges ? 'navigation.page.title' : 'claims.notes.notifications.alertPopup',\n      maxWidth: 'xs',\n      confirmLabel: 'form.options.yesNoNa.yes',\n      cancelLabel: 'form.options.yesNoNa.no'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n_c = ClaimsProcessingView;\nClaimsProcessingView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsProcessingView\",\n  \"props\": {\n    \"claimsSelected\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tabs\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"hasUnsavedChanges\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"allowedNavigationUrls\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"selectTab\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"allowNavigation\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\ClaimsProcessing\\\\ClaimsProcessing.view.js\"] = {\n    name: \"ClaimsProcessingView\",\n    docgenInfo: ClaimsProcessingView.__docgenInfo,\n    path: \"src\\\\pages\\\\ClaimsProcessing\\\\ClaimsProcessing.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsProcessingView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimsProcessing/ClaimsProcessing.view.js"],"names":["React","PropTypes","AccessControl","Layout","SectionHeader","Tabs","Translate","PreventNavigation","ClaimsManagement","TasksManagement","TaskSummary","ClaimSummary","ClaimsTasksReporting","constants","utils","AssignmentTurnedInIcon","ClaimsProcessingView","propTypes","claimsSelected","array","tabs","isRequired","selectedTab","string","hasUnsavedChanges","bool","allowedNavigationUrls","handlers","shape","selectTab","func","allowNavigation","hasOneClaim","length","t","tabName","RFI_ON_CLAIMS","RFI_ON_TASKS"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { AccessControl, Layout, SectionHeader, Tabs, Translate, PreventNavigation } from 'components';\r\nimport { ClaimsManagement, TasksManagement, TaskSummary, ClaimSummary, ClaimsTasksReporting } from 'modules';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport AssignmentTurnedInIcon from '@material-ui/icons/AssignmentTurnedIn';\r\n\r\nClaimsProcessingView.propTypes = {\r\n  claimsSelected: PropTypes.array,\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  hasUnsavedChanges: PropTypes.bool.isRequired,\r\n  allowedNavigationUrls: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    selectTab: PropTypes.func.isRequired,\r\n    allowNavigation: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsProcessingView({ claimsSelected, tabs, selectedTab, handlers, hasUnsavedChanges, allowedNavigationUrls }) {\r\n  const hasOneClaim = claimsSelected?.length === 1;\r\n\r\n  return (\r\n    <>\r\n      <Layout showDesktopControls disableDesktopControls={!hasOneClaim} testid=\"claims-processing\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={<Translate label={utils.string.t('claims.processing.title')} />}\r\n            icon={AssignmentTurnedInIcon}\r\n            testid=\"claims-processing-header\"\r\n          />\r\n          <AccessControl feature=\"claimsProcessing.myTasks\" permissions={['read', 'create', 'update']}>\r\n            <ClaimsTasksReporting />\r\n          </AccessControl>\r\n\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handlers.selectTab(tabName)} />\r\n          {selectedTab === constants.RFI_ON_CLAIMS && <ClaimsManagement />}\r\n          {selectedTab === constants.RFI_ON_TASKS && <TasksManagement />}\r\n        </Layout>\r\n        <Layout sidebar padding={false}>\r\n          {selectedTab === constants.RFI_ON_CLAIMS && (\r\n            <ClaimSummary claim={claimsSelected?.[0]} allowNavigation={handlers.allowNavigation} />\r\n          )}\r\n          {selectedTab === constants.RFI_ON_TASKS && <TaskSummary claim={claimsSelected?.[0]} allowNavigation={handlers.allowNavigation} />}\r\n        </Layout>\r\n      </Layout>\r\n      {hasUnsavedChanges && (\r\n        <PreventNavigation\r\n          dirty={true}\r\n          allowedUrls={allowedNavigationUrls}\r\n          title={hasUnsavedChanges ? 'navigation.page.subtitle' : 'status.alert'}\r\n          subtitle={''}\r\n          hint={hasUnsavedChanges ? 'navigation.page.title' : 'claims.notes.notifications.alertPopup'}\r\n          maxWidth={'xs'}\r\n          confirmLabel={'form.options.yesNoNa.yes'}\r\n          cancelLabel={'form.options.yesNoNa.no'}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}