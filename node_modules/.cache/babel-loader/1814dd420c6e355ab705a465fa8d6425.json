{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.view.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; // app\n\nimport styles from './ClaimsRegisterNewLoss.style';\nimport { RegisterNewLossFixedBottomBar, LinkSearchPolicy } from 'modules'; // mui\n\nimport { makeStyles, Divider } from '@material-ui/core';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClaimsRegisterNewLossView = function ClaimsRegisterNewLossView(_ref) {\n  _s();\n\n  var activeStep = _ref.activeStep,\n      setActiveStep = _ref.setActiveStep,\n      handleStep = _ref.handleStep,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      handleNext = _ref.handleNext,\n      handleFormStatus = _ref.handleFormStatus,\n      _handleBack = _ref.handleBack,\n      _handleSave = _ref.handleSave,\n      saveStatus = _ref.saveStatus,\n      setSaveStatus = _ref.setSaveStatus;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsRegisterNewLoss'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var stepContent = function stepContent(index) {\n    var _isFormsEdited$index, _isFormsEdited$index2, _isFormsEdited$index3, _isFormsEdited$index4, _isFormsEdited$index5, _isFormsEdited$index6, _isFormsEdited$index7, _isFormsEdited$index8, _isFormsEdited$index9, _isFormsEdited$index10, _isFormsEdited$index11, _isFormsEdited$index12;\n\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: [\" \", ((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) ? 'Dirty : true' : 'Dirty : false']\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 37,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 39,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus) ? 'Dirty : true' : 'Dirty : false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(LinkSearchPolicy, {\n            policyRef: policyRef,\n            setPolicyRef: setPolicyRef,\n            isFormsEdited: isFormsEdited,\n            setFormEditedStatus: setFormEditedStatus,\n            activeStep: activeStep,\n            setActiveStep: setActiveStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: _handleBack,\n            handleSave: _handleSave,\n            handleNext: handleNext,\n            save: (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus,\n            index: index,\n            saveStatus: saveStatus,\n            setSaveStatus: setSaveStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus) ? 'Dirty : true' : 'Dirty : false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index7 = isFormsEdited[index]) === null || _isFormsEdited$index7 === void 0 ? void 0 : _isFormsEdited$index7.formEditedStatus) ? 'Dirty : true' : 'Dirty : false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index8 = isFormsEdited[index]) === null || _isFormsEdited$index8 === void 0 ? void 0 : _isFormsEdited$index8.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index9 = isFormsEdited[index]) === null || _isFormsEdited$index9 === void 0 ? void 0 : _isFormsEdited$index9.formEditedStatus) ? 'Dirty : true' : 'Dirty : false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            lastStep: true,\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index10 = isFormsEdited[index]) === null || _isFormsEdited$index10 === void 0 ? void 0 : _isFormsEdited$index10.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 124,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: ((_isFormsEdited$index11 = isFormsEdited[index]) === null || _isFormsEdited$index11 === void 0 ? void 0 : _isFormsEdited$index11.formEditedStatus) ? 'Dirty : true' : 'Dirty : false'\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            onSave: function onSave() {},\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return handleNext(index);\n            },\n            save: (_isFormsEdited$index12 = isFormsEdited[index]) === null || _isFormsEdited$index12 === void 0 ? void 0 : _isFormsEdited$index12.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      children: steps.map(function (label, index) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          onClick: function onClick() {\n            return handleStep(index);\n          },\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: classes.iconContainer\n              }\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 13\n          }, _this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 160,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 173,\n      columnNumber: 7\n    }, _this), stepContent(activeStep)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ClaimsRegisterNewLossView, \"ERcsBcHGhMlKA4vL/xpmCNlNrRw=\");\n\n_c = ClaimsRegisterNewLossView;\nexport default ClaimsRegisterNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.view.js"],"names":["React","useState","styles","RegisterNewLossFixedBottomBar","LinkSearchPolicy","makeStyles","Divider","LinearProgress","Stepper","Step","StepLabel","ClaimsRegisterNewLossView","activeStep","setActiveStep","handleStep","steps","progress","isFormsEdited","setFormEditedStatus","isAllStepsCompleted","handleNext","handleFormStatus","handleBack","handleSave","saveStatus","setSaveStatus","classes","name","policyRef","setPolicyRef","stepContent","index","formEditedStatus","map","label","root","iconContainer","linearProgress"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n// app\r\nimport styles from './ClaimsRegisterNewLoss.style';\r\nimport { RegisterNewLossFixedBottomBar, LinkSearchPolicy, } from 'modules';\r\n\r\n// mui\r\nimport { makeStyles, Divider } from '@material-ui/core';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\n\r\nconst ClaimsRegisterNewLossView = ({\r\n  activeStep,\r\n  setActiveStep,\r\n  handleStep,\r\n  steps,\r\n  progress,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  isAllStepsCompleted,\r\n  handleNext,\r\n  handleFormStatus,\r\n  handleBack,\r\n  handleSave,\r\n  saveStatus, \r\n  setSaveStatus\r\n}) => {\r\n  const classes = makeStyles(styles, { name: 'ClaimsRegisterNewLoss' })();\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}> {isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <Divider />\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <LinkSearchPolicy\r\n                policyRef={policyRef}\r\n                setPolicyRef={setPolicyRef}\r\n                isFormsEdited={isFormsEdited}\r\n                setFormEditedStatus={setFormEditedStatus}\r\n                activeStep={activeStep}\r\n                setActiveStep={setActiveStep}\r\n                isAllStepsCompleted={isAllStepsCompleted}\r\n                handleBack={handleBack}\r\n                handleSave={handleSave}\r\n                handleNext={handleNext}\r\n                save={isFormsEdited[index]?.formEditedStatus}\r\n                index={index}\r\n                saveStatus={saveStatus}\r\n                setSaveStatus={setSaveStatus}\r\n            />\r\n            {/* <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => {\r\n                handleBack(index);\r\n              }}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            /> */}\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => {\r\n                handleBack(index);\r\n              }}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => {\r\n                handleBack(index);\r\n              }}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <RegisterNewLossFixedBottomBar\r\n              lastStep={true}\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => {\r\n                handleBack(index);\r\n              }}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}>{isFormsEdited[index]?.formEditedStatus ? 'Dirty : true' : 'Dirty : false'}</h1>\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              onSave={() => {}}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stepper alternativeLabel activeStep={activeStep}>\r\n        {steps.map((label, index) => (\r\n          <Step key={label} onClick={() => handleStep(index)}>\r\n            <StepLabel\r\n              StepIconProps={{\r\n                classes: { root: classes.iconContainer },\r\n              }}\r\n            >\r\n              {label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      {stepContent(activeStep)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default ClaimsRegisterNewLossView;\r\n"]},"metadata":{},"sourceType":"module"}