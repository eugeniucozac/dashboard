{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './LossActionTable.styles';\nimport { Empty, Overflow, TableHead } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { useSort } from 'hooks';\nimport * as utils from 'utils';\nimport { LossActionLevelOne } from './LossActionLevelOne'; //mui\n\nimport { makeStyles, Table, Grid, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossActionTableView.prototype = {\n  sort: PropTypes.object.isRequired,\n  rows: PropTypes.array.isRequired,\n  columnProps: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  handleSort: PropTypes.func.isRequired\n};\nexport function LossActionTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var rows = _ref.rows,\n      sortObj = _ref.sort,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      handleSort = _ref.handleSort;\n  var classes = makeStyles(styles, {\n    name: 'SearchTable'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var hasRows = utils.generic.isValidArray(rows, true); // console.log('rows ', rows);\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"loss-action-search-table\",\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"data-testid\": \"loss-action-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort,\n          nestedClasses: {\n            tableHead: classes.tableHead\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 11\n        }, this), hasRows && rows.length && rows.map(function (itemLevelOne, index) {\n          return /*#__PURE__*/_jsxDEV(LossActionLevelOne, {\n            data: itemLevelOne,\n            columnProps: columnProps\n          }, index, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 22\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), rows ? rows.length ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('claims.noMatchFound'),\n        icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 72\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 48,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('claims.searchLossAndClaims'),\n        icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 77\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossActionTableView, \"SQefsCp2xDkS0XQZxfxwHsN4W1o=\", false, function () {\n  return [useSort];\n});\n\n_c = LossActionTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTable.view.js"],"names":["React","PropTypes","styles","Empty","Overflow","TableHead","useSort","utils","LossActionLevelOne","makeStyles","Table","Grid","Box","LossActionTableView","prototype","sort","object","isRequired","rows","array","columnProps","cols","handleSort","func","sortObj","colsArr","classes","name","hasRows","generic","isValidArray","wrapper","tableHead","length","map","itemLevelOne","index","string","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,KAAT,EAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,YAA3C;;AAEA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,sBAAnC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,IAA5B,EAAkCC,GAAlC,QAA6C,mBAA7C;;AAEAC,mBAAmB,CAACC,SAApB,GAAgC;AAC9BC,EAAAA,IAAI,EAAEd,SAAS,CAACe,MAAV,CAAiBC,UADO;AAE9BC,EAAAA,IAAI,EAAEjB,SAAS,CAACkB,KAAV,CAAgBF,UAFQ;AAG9BG,EAAAA,WAAW,EAAEnB,SAAS,CAACkB,KAAV,CAAgBF,UAHC;AAI9BI,EAAAA,IAAI,EAAEpB,SAAS,CAACkB,KAAV,CAAgBF,UAJQ;AAK9BK,EAAAA,UAAU,EAAErB,SAAS,CAACsB,IAAV,CAAeN;AALG,CAAhC;AAQA,OAAO,SAASJ,mBAAT,OAA8F;AAAA;;AAAA;;AAAA,MAA/DK,IAA+D,QAA/DA,IAA+D;AAAA,MAAnDM,OAAmD,QAAzDT,IAAyD;AAAA,MAApCU,OAAoC,QAA1CJ,IAA0C;AAAA,MAA3BD,WAA2B,QAA3BA,WAA2B;AAAA,MAAdE,UAAc,QAAdA,UAAc;AACnG,MAAMI,OAAO,GAAGjB,UAAU,CAACP,MAAD,EAAS;AAAEyB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADmG,iBAE5ErB,OAAO,CAACmB,OAAD,EAAUD,OAAV,EAAmBF,UAAnB,CAFqE;AAAA,MAE3FD,IAF2F,YAE3FA,IAF2F;AAAA,MAErFN,IAFqF,YAErFA,IAFqF;;AAGnG,MAAMa,OAAO,GAAGrB,KAAK,CAACsB,OAAN,CAAcC,YAAd,CAA2BZ,IAA3B,EAAiC,IAAjC,CAAhB,CAHmG,CAKnG;;AAEA,sBACE,QAAC,GAAD;AAAK,mBAAY,0BAAjB;AAA4C,IAAA,SAAS,EAAEQ,OAAO,CAACK,OAA/D;AAAA,4BACE,QAAC,QAAD;AAAA,6BACE,QAAC,KAAD;AAAO,uBAAY,mBAAnB;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEV,IAApB;AAA0B,UAAA,OAAO,EAAEN,IAAnC;AAAyC,UAAA,aAAa,EAAE;AAAEiB,YAAAA,SAAS,EAAEN,OAAO,CAACM;AAArB;AAAxD;AAAA;AAAA;AAAA;AAAA,gBADF,EAEGJ,OAAO,IACNV,IAAI,CAACe,MADN,IAECf,IAAI,CAACgB,GAAL,CAAS,UAACC,YAAD,EAAeC,KAAf,EAAyB;AAChC,8BAAO,QAAC,kBAAD;AAAgC,YAAA,IAAI,EAAED,YAAtC;AAAoD,YAAA,WAAW,EAAEf;AAAjE,aAAyBgB,KAAzB;AAAA;AAAA;AAAA;AAAA,mBAAP;AACD,SAFD,CAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,EAWGlB,IAAI,GACHA,IAAI,CAACe,MAAL,gBACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE;AAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,gBAKE,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE1B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAd;AAAqD,QAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAA3D;AAA+E,QAAA,OAAO;AAAtF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YANC,gBAWH,QAAC,IAAD;AAAM,MAAA,IAAI,MAAV;AAAW,MAAA,EAAE,EAAE,EAAf;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,KAAK,EAAE/B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,4BAAf,CAAd;AAA4D,QAAA,IAAI,eAAE,QAAC,cAAD;AAAA;AAAA;AAAA;AAAA,gBAAlE;AAAsF,QAAA,OAAO;AAA7F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAtBJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA6BD;;GApCezB,mB;UAESP,O;;;KAFTO,mB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './LossActionTable.styles';\r\nimport { Empty, Overflow, TableHead } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { LossActionLevelOne } from './LossActionLevelOne';\r\n\r\n//mui\r\nimport { makeStyles, Table, Grid, Box } from '@material-ui/core';\r\n\r\nLossActionTableView.prototype = {\r\n  sort: PropTypes.object.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function LossActionTableView({ rows, sort: sortObj, cols: colsArr, columnProps, handleSort }) {\r\n  const classes = makeStyles(styles, { name: 'SearchTable' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const hasRows = utils.generic.isValidArray(rows, true);\r\n\r\n  // console.log('rows ', rows);\r\n\r\n  return (\r\n    <Box data-testid=\"loss-action-search-table\" className={classes.wrapper}>\r\n      <Overflow>\r\n        <Table data-testid=\"loss-action-table\">\r\n          <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n          {hasRows &&\r\n            rows.length &&\r\n            rows.map((itemLevelOne, index) => {\r\n              return <LossActionLevelOne key={index} data={itemLevelOne} columnProps={columnProps} />;\r\n            })}\r\n        </Table>\r\n      </Overflow>\r\n      {rows ? (\r\n        rows.length ? (\r\n          <Grid container>\r\n            <Grid item xs={12}></Grid>\r\n          </Grid>\r\n        ) : (\r\n          <Grid item xs={12}>\r\n            <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n          </Grid>\r\n        )\r\n      ) : (\r\n        <Grid item xs={12}>\r\n          <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n        </Grid>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}