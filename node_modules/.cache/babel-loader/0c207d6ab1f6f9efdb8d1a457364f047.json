{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; //app\n\nimport { ClaimsComplexityBasisTableView } from './ClaimsComplexityBasisTable.view';\nimport * as utils from 'utils';\nimport { getComplexityBasisValue } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsComplexityBasisTable.prototypes = {\n  complexityBasisValueData: PropTypes.object.isRequired,\n  handleEditComplexityRule: PropTypes.func.isRequired\n};\nexport default function ClaimsComplexityBasisTable(_ref) {\n  _s();\n\n  var _complexityBasisValue;\n\n  var complexityBasisValueData = _ref.complexityBasisValueData,\n      handleEditComplexityRule = _ref.handleEditComplexityRule;\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeItem = _useState2[0],\n      setActiveItem = _useState2[1];\n\n  var columns = [{\n    id: 'createdDate',\n    label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.basisValues'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'forCompany',\n    label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forCompany')\n  }, {\n    id: 'forDivision',\n    label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forDivision')\n  }];\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getComplexityBasisValue({\n      page: newPage\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getComplexityBasisValue({\n      size: rowsPerPage\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getComplexityBasisValue({\n      sortBy: by,\n      direction: dir.toUpperCase()\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleValueSelect = function handleValueSelect(val) {\n    setActiveItem(val);\n    handleEditComplexityRule(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsComplexityBasisTableView, {\n    activeItem: activeItem,\n    cols: columns,\n    rows: (complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : complexityBasisValueData.items) || [],\n    sort: _objectSpread(_objectSpread({}, complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : complexityBasisValueData.sort), {}, {\n      direction: complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : (_complexityBasisValue = complexityBasisValueData.sort) === null || _complexityBasisValue === void 0 ? void 0 : _complexityBasisValue.direction.toLowerCase(),\n      type: 'id'\n    }),\n    pagination: {\n      page: complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : complexityBasisValueData.page,\n      rowsTotal: complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : complexityBasisValueData.itemsTotal,\n      rowsPerPage: complexityBasisValueData === null || complexityBasisValueData === void 0 ? void 0 : complexityBasisValueData.pageSize\n    },\n    handlers: {\n      handleSort: handleSort,\n      handleChangePage: handleChangePage,\n      handleChangeRowsPerPage: handleChangeRowsPerPage,\n      handleValueSelect: handleValueSelect\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsComplexityBasisTable, \"V34LCib2YTUOGTGweM8ULpApyGE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ClaimsComplexityBasisTable;\nClaimsComplexityBasisTable.displayName = \"ClaimsComplexityBasisTable\";\nClaimsComplexityBasisTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexityBasisTable\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.js\"] = {\n    name: \"ClaimsComplexityBasisTable\",\n    docgenInfo: ClaimsComplexityBasisTable.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityBasisTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityBasisTable/ClaimsComplexityBasisTable.js"],"names":["React","useState","PropTypes","useDispatch","ClaimsComplexityBasisTableView","utils","getComplexityBasisValue","ClaimsComplexityBasisTable","prototypes","complexityBasisValueData","object","isRequired","handleEditComplexityRule","func","dispatch","activeItem","setActiveItem","columns","id","label","string","t","sort","type","direction","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","toUpperCase","handleValueSelect","val","items","toLowerCase","rowsTotal","itemsTotal","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//app\r\nimport { ClaimsComplexityBasisTableView } from './ClaimsComplexityBasisTable.view';\r\nimport * as utils from 'utils';\r\nimport { getComplexityBasisValue } from 'stores';\r\n\r\nClaimsComplexityBasisTable.prototypes = {\r\n  complexityBasisValueData: PropTypes.object.isRequired,\r\n  handleEditComplexityRule: PropTypes.func.isRequired,\r\n};\r\nexport default function ClaimsComplexityBasisTable({ complexityBasisValueData, handleEditComplexityRule }) {\r\n  const dispatch = useDispatch();\r\n  const [activeItem, setActiveItem] = useState({});\r\n\r\n  const columns = [\r\n    {\r\n      id: 'createdDate',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.basisValues'),\r\n      sort: { type: '', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'forCompany',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forCompany'),\r\n    },\r\n    {\r\n      id: 'forDivision',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forDivision'),\r\n    },\r\n  ];\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getComplexityBasisValue({ page: newPage }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getComplexityBasisValue({ size: rowsPerPage }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getComplexityBasisValue({ sortBy: by, direction: dir.toUpperCase() }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleValueSelect = (val) => {\r\n    setActiveItem(val);\r\n    handleEditComplexityRule(val);\r\n  };\r\n\r\n  return (\r\n    <ClaimsComplexityBasisTableView\r\n      activeItem={activeItem}\r\n      cols={columns}\r\n      rows={complexityBasisValueData?.items || []}\r\n      sort={{\r\n        ...complexityBasisValueData?.sort,\r\n        direction: complexityBasisValueData?.sort?.direction.toLowerCase(),\r\n        type: 'id',\r\n      }}\r\n      pagination={{\r\n        page: complexityBasisValueData?.page,\r\n        rowsTotal: complexityBasisValueData?.itemsTotal,\r\n        rowsPerPage: complexityBasisValueData?.pageSize,\r\n      }}\r\n      handlers={{\r\n        handleSort,\r\n        handleChangePage,\r\n        handleChangeRowsPerPage,\r\n        handleValueSelect,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}