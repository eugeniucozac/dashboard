{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpeningMemoList\\\\OpeningMemoList.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './OpeningMemoList.styles';\nimport { Button, Status, TableCell, TableHead, Translate, Pagination, PopoverMenu } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nOpeningMemoListView.propTypes = {\n  openingMemoList: PropTypes.array.isRequired,\n  handleDoubleClickRow: PropTypes.func.isRequired,\n  handleDownload: PropTypes.func.isRequired,\n  filterOpeningMemoList: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  }).isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  }).isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired\n};\nexport function OpeningMemoListView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var _ref$openingMemoList = _ref.openingMemoList,\n      openingMemoList = _ref$openingMemoList === void 0 ? [] : _ref$openingMemoList,\n      handleDoubleClickRow = _ref.handleDoubleClickRow,\n      handleDownload = _ref.handleDownload,\n      filterOpeningMemoList = _ref.filterOpeningMemoList,\n      pagination = _ref.pagination,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      sort = _ref.sort;\n  var classes = makeStyles(styles, {\n    name: 'OpeningMemoList'\n  })();\n  var filterOptions = [{\n    id: 'all',\n    label: utils.string.t('openingMemo.filter.all'),\n    callback: function callback() {\n      return filterOpeningMemoList('');\n    }\n  }, {\n    id: 'inProgress',\n    label: utils.string.t('openingMemo.filter.inProgress'),\n    callback: function callback() {\n      return filterOpeningMemoList(utils.string.t('openingMemo.filter.inProgress'));\n    }\n  }, {\n    id: 'awaitingApproval',\n    label: utils.string.t('openingMemo.filter.awaitingApproval'),\n    callback: function callback() {\n      return filterOpeningMemoList(utils.string.t('openingMemo.filter.awaitingApproval'));\n    }\n  }, {\n    id: 'approved',\n    label: utils.string.t('openingMemo.filter.approved'),\n    callback: function callback() {\n      return filterOpeningMemoList(utils.string.t('openingMemo.filter.approved'));\n    }\n  }];\n\n  var filterIcon = /*#__PURE__*/_jsxDEV(PopoverMenu, {\n    id: \"status-select\",\n    size: \"small\",\n    offset: true,\n    icon: FilterListIcon,\n    iconPosition: \"right\",\n    anchorOrigin: {\n      vertical: 'bottom',\n      horizontal: 'left'\n    },\n    items: filterOptions,\n    nestedClasses: {\n      btn: classes.filterIcon\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n\n  var riskReferenceTitleWidth = useMediaQuery('(max-width:1400px)');\n  var cols = [_objectSpread({\n    id: 'riskReference',\n    label: utils.string.t('placement.openingMemo.riskReference')\n  }, riskReferenceTitleWidth && {\n    width: 250\n  }), {\n    id: 'status',\n    label: utils.string.t('app.status'),\n    icon: filterIcon,\n    width: 150\n  }, {\n    id: 'accountHandler',\n    label: utils.string.t('placement.openingMemo.columnNames.accountHandler'),\n    width: 200\n  }, {\n    id: 'isAuthorised',\n    label: utils.string.t('placement.openingMemo.columnNames.isAuthorised'),\n    width: 200\n  }, {\n    id: 'insuredName',\n    label: utils.string.t('openingMemo.reInsured'),\n    width: 200\n  }, {\n    id: 'inceptionDate',\n    label: utils.string.t('app.inceptionDate'),\n    width: 110\n  }, {\n    id: 'download',\n    label: utils.string.t('app.download'),\n    width: 60\n  }];\n\n  var Approval = function Approval(_ref2) {\n    var status = _ref2.status;\n    return /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n      className: status ? classes.statusApproved : classes.statusInProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 12\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        columns: cols,\n        sorting: sort\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n        \"data-testid\": \"opening-memo-list\",\n        children: openingMemoList.map(function (openingMemo, index) {\n          var _openingMemo$accountH, _openingMemo$authoris;\n\n          var umr = openingMemo.uniqueMarketReference || '';\n          var inceptionDate = (openingMemo === null || openingMemo === void 0 ? void 0 : openingMemo.inceptionDate) ? utils.string.t('format.date', {\n            value: {\n              date: openingMemo.inceptionDate,\n              format: config.ui.format.date.text\n            }\n          }) : '';\n          var reInsured = (openingMemo === null || openingMemo === void 0 ? void 0 : openingMemo.reInsured) ? openingMemo.reInsured : '';\n          return /*#__PURE__*/_jsxDEV(TableRow, {\n            hover: true,\n            \"data-testid\": \"opening-memo-\".concat(openingMemo.id),\n            onDoubleClick: function onDoubleClick() {\n              return handleDoubleClickRow(openingMemo.id);\n            },\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"opening-memo-cell-policy\",\n              children: umr.toString().replace(/,/g, ', ')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"opening-memo-cell-status\",\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.statusContainer,\n                children: /*#__PURE__*/_jsxDEV(Status, {\n                  nestedClasses: {\n                    root: classes.statusChip\n                  },\n                  size: \"sm\",\n                  text: /*#__PURE__*/_jsxDEV(Translate, {\n                    label: \"status.\".concat(utils.string.replaceLowerCase(openingMemo.status))\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 131,\n                    columnNumber: 29\n                  }, _this),\n                  status: utils.string.replaceLowerCase(openingMemo.status)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 128,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 127,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.approvalCell,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.approvalContainer,\n                children: [/*#__PURE__*/_jsxDEV(Approval, {\n                  status: openingMemo.isAccountHandlerApproved\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.approvalChild,\n                  children: (openingMemo === null || openingMemo === void 0 ? void 0 : (_openingMemo$accountH = openingMemo.accountHandler) === null || _openingMemo$accountH === void 0 ? void 0 : _openingMemo$accountH.fullName) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              className: classes.approvalCell,\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.approvalContainer,\n                children: [/*#__PURE__*/_jsxDEV(Approval, {\n                  status: openingMemo.isAuthorisedSignatoryApproved\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classes.approvalChild,\n                  children: (openingMemo === null || openingMemo === void 0 ? void 0 : (_openingMemo$authoris = openingMemo.authorisedSignatory) === null || _openingMemo$authoris === void 0 ? void 0 : _openingMemo$authoris.fullName) || ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"opening-memo-cell-reInsured\",\n              children: reInsured\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"opening-memo-cell-inceptionDate\",\n              children: inceptionDate\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              align: \"center\",\n              className: classes.downloadColumn,\n              \"data-testid\": \"opening-memo-cell-download\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleDownload(openingMemo.id);\n                },\n                nestedClasses: {\n                  btn: classes.downloadPdfButton\n                },\n                size: \"xsmall\",\n                color: \"primary\",\n                icon: PictureAsPdfIcon,\n                \"data-testid\": \"download-pdf\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: pagination.page,\n      count: pagination.rowsTotal,\n      rowsPerPage: pagination.rowsPerPage,\n      onChangePage: handleChangePage,\n      onChangeRowsPerPage: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(OpeningMemoListView, \"gWDpvmqObTqHrtiw+u/lwUH12lM=\", false, function () {\n  return [useMediaQuery];\n});\n\n_c = OpeningMemoListView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpeningMemoListView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpeningMemoList/OpeningMemoList.view.js"],"names":["React","PropTypes","styles","Button","Status","TableCell","TableHead","Translate","Pagination","PopoverMenu","utils","config","Table","TableRow","TableBody","makeStyles","PictureAsPdfIcon","CheckCircleOutlineIcon","FilterListIcon","useMediaQuery","OpeningMemoListView","propTypes","openingMemoList","array","isRequired","handleDoubleClickRow","func","handleDownload","filterOpeningMemoList","pagination","shape","page","number","rowsTotal","rowsPerPage","sort","by","string","type","direction","handleChangePage","handleChangeRowsPerPage","classes","name","filterOptions","id","label","t","callback","filterIcon","vertical","horizontal","btn","riskReferenceTitleWidth","cols","width","icon","Approval","status","statusApproved","statusInProgress","map","openingMemo","index","umr","uniqueMarketReference","inceptionDate","value","date","format","ui","text","reInsured","toString","replace","statusContainer","root","statusChip","replaceLowerCase","approvalCell","approvalContainer","isAccountHandlerApproved","approvalChild","accountHandler","fullName","isAuthorisedSignatoryApproved","authorisedSignatory","downloadColumn","downloadPdfButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './OpeningMemoList.styles';\r\nimport { Button, Status, TableCell, TableHead, Translate, Pagination, PopoverMenu } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\r\nimport PictureAsPdfIcon from '@material-ui/icons/PictureAsPdf';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport useMediaQuery from '@material-ui/core/useMediaQuery';\r\n\r\nOpeningMemoListView.propTypes = {\r\n  openingMemoList: PropTypes.array.isRequired,\r\n  handleDoubleClickRow: PropTypes.func.isRequired,\r\n  handleDownload: PropTypes.func.isRequired,\r\n  filterOpeningMemoList: PropTypes.func.isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function OpeningMemoListView({\r\n  openingMemoList = [],\r\n  handleDoubleClickRow,\r\n  handleDownload,\r\n  filterOpeningMemoList,\r\n  pagination,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  sort,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'OpeningMemoList' })();\r\n\r\n  const filterOptions = [\r\n    {\r\n      id: 'all',\r\n      label: utils.string.t('openingMemo.filter.all'),\r\n      callback: () => filterOpeningMemoList(''),\r\n    },\r\n    {\r\n      id: 'inProgress',\r\n      label: utils.string.t('openingMemo.filter.inProgress'),\r\n      callback: () => filterOpeningMemoList(utils.string.t('openingMemo.filter.inProgress')),\r\n    },\r\n    {\r\n      id: 'awaitingApproval',\r\n      label: utils.string.t('openingMemo.filter.awaitingApproval'),\r\n      callback: () => filterOpeningMemoList(utils.string.t('openingMemo.filter.awaitingApproval')),\r\n    },\r\n    {\r\n      id: 'approved',\r\n      label: utils.string.t('openingMemo.filter.approved'),\r\n      callback: () => filterOpeningMemoList(utils.string.t('openingMemo.filter.approved')),\r\n    },\r\n  ];\r\n\r\n  const filterIcon = (\r\n    <PopoverMenu\r\n      id={`status-select`}\r\n      size=\"small\"\r\n      offset\r\n      icon={FilterListIcon}\r\n      iconPosition=\"right\"\r\n      anchorOrigin={{\r\n        vertical: 'bottom',\r\n        horizontal: 'left',\r\n      }}\r\n      items={filterOptions}\r\n      nestedClasses={{ btn: classes.filterIcon }}\r\n    />\r\n  );\r\n\r\n  const riskReferenceTitleWidth = useMediaQuery('(max-width:1400px)');\r\n\r\n  const cols = [\r\n    { id: 'riskReference', label: utils.string.t('placement.openingMemo.riskReference'), ...(riskReferenceTitleWidth && { width: 250 }) },\r\n    { id: 'status', label: utils.string.t('app.status'), icon: filterIcon, width: 150 },\r\n    { id: 'accountHandler', label: utils.string.t('placement.openingMemo.columnNames.accountHandler'), width: 200 },\r\n    { id: 'isAuthorised', label: utils.string.t('placement.openingMemo.columnNames.isAuthorised'), width: 200 },\r\n    { id: 'insuredName', label: utils.string.t('openingMemo.reInsured'), width: 200 },\r\n    { id: 'inceptionDate', label: utils.string.t('app.inceptionDate'), width: 110 },\r\n    { id: 'download', label: utils.string.t('app.download'), width: 60 },\r\n  ];\r\n\r\n  const Approval = ({ status }) => {\r\n    return <CheckCircleOutlineIcon className={status ? classes.statusApproved : classes.statusInProgress} />;\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Table size=\"small\">\r\n        <TableHead columns={cols} sorting={sort} />\r\n        <TableBody data-testid=\"opening-memo-list\">\r\n          {openingMemoList.map((openingMemo, index) => {\r\n            const umr = openingMemo.uniqueMarketReference || '';\r\n            const inceptionDate = openingMemo?.inceptionDate\r\n              ? utils.string.t('format.date', {\r\n                  value: { date: openingMemo.inceptionDate, format: config.ui.format.date.text },\r\n                })\r\n              : '';\r\n            const reInsured = openingMemo?.reInsured ? openingMemo.reInsured : '';\r\n\r\n            return (\r\n              <TableRow\r\n                key={index}\r\n                hover\r\n                data-testid={`opening-memo-${openingMemo.id}`}\r\n                onDoubleClick={() => handleDoubleClickRow(openingMemo.id)}\r\n              >\r\n                <TableCell data-testid={`opening-memo-cell-policy`}>{umr.toString().replace(/,/g, ', ')}</TableCell>\r\n\r\n                <TableCell data-testid={`opening-memo-cell-status`}>\r\n                  <div className={classes.statusContainer}>\r\n                    <Status\r\n                      nestedClasses={{ root: classes.statusChip }}\r\n                      size=\"sm\"\r\n                      text={<Translate label={`status.${utils.string.replaceLowerCase(openingMemo.status)}`} />}\r\n                      status={utils.string.replaceLowerCase(openingMemo.status)}\r\n                    />\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className={classes.approvalCell}>\r\n                  <div className={classes.approvalContainer}>\r\n                    <Approval status={openingMemo.isAccountHandlerApproved} />\r\n                    <div className={classes.approvalChild}>{openingMemo?.accountHandler?.fullName || ''}</div>\r\n                  </div>\r\n                </TableCell>\r\n                <TableCell className={classes.approvalCell}>\r\n                  <div className={classes.approvalContainer}>\r\n                    <Approval status={openingMemo.isAuthorisedSignatoryApproved} />\r\n                    <div className={classes.approvalChild}>{openingMemo?.authorisedSignatory?.fullName || ''}</div>\r\n                  </div>\r\n                </TableCell>\r\n\r\n                <TableCell data-testid={`opening-memo-cell-reInsured`}>{reInsured}</TableCell>\r\n                <TableCell data-testid={`opening-memo-cell-inceptionDate`}>{inceptionDate}</TableCell>\r\n\r\n                <TableCell align=\"center\" className={classes.downloadColumn} data-testid={`opening-memo-cell-download`}>\r\n                  <Button\r\n                    onClick={() => handleDownload(openingMemo.id)}\r\n                    nestedClasses={{ btn: classes.downloadPdfButton }}\r\n                    size=\"xsmall\"\r\n                    color=\"primary\"\r\n                    icon={PictureAsPdfIcon}\r\n                    data-testid=\"download-pdf\"\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n      <Pagination\r\n        page={pagination.page}\r\n        count={pagination.rowsTotal}\r\n        rowsPerPage={pagination.rowsPerPage}\r\n        onChangePage={handleChangePage}\r\n        onChangeRowsPerPage={handleChangeRowsPerPage}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}