{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskFormField\\\\AddRiskFormField.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useWatch } from 'react-hook-form'; // app\n\nimport { FormAutocomplete, FormAutocompleteMui, FormAutocompleteMuiAsync, FormCheckbox, FormDate, FormHidden, FormRadio, FormSelect, FormText, FormToggle, FormLabel } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskFormFieldView.propTypes = {\n  field: PropTypes.object.isRequired,\n  control: PropTypes.object.isRequired,\n  checkboxProps: PropTypes.object.isRequired,\n  selectProps: PropTypes.object.isRequired\n};\nexport function AddRiskFormFieldView(_ref) {\n  _s();\n\n  var field = _ref.field,\n      control = _ref.control,\n      checkboxProps = _ref.checkboxProps,\n      selectProps = _ref.selectProps,\n      setValue = _ref.setValue;\n  var fieldMap = {\n    text: FormText,\n    number: FormText,\n    datepicker: FormDate,\n    select: FormSelect,\n    selectAsync: FormSelect,\n    autocompletemuiAsync: FormAutocompleteMuiAsync,\n    autocomplete: FormAutocomplete,\n    autocompletemui: FormAutocompleteMui,\n    radio: FormRadio,\n    checkbox: FormCheckbox,\n    toggle: FormToggle,\n    hidden: FormHidden,\n    label: FormLabel\n  };\n  var FieldComponent = fieldMap[field.type];\n  var dependants = field === null || field === void 0 ? void 0 : field.dependants;\n  var dependentBy = dependants === null || dependants === void 0 ? void 0 : dependants.map(function (value) {\n    return value.split(':')[1];\n  });\n  var dependentFieldsValues = useWatch({\n    control: control,\n    name: dependentBy\n  }); // abort\n\n  if (!FieldComponent) return null;\n  return /*#__PURE__*/_jsxDEV(FieldComponent, _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n    control: control,\n    setValue: setValue\n  }, checkboxProps), selectProps), field), {}, {\n    dependentFieldsValues: dependentFieldsValues,\n    dependentBy: dependentBy\n  }), field.name, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRiskFormFieldView, \"4wcp7zKBAbr4Fmp1RBKzdjl9MSg=\", false, function () {\n  return [useWatch];\n});\n\n_c = AddRiskFormFieldView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskFormFieldView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskFormField/AddRiskFormField.view.js"],"names":["React","PropTypes","useWatch","FormAutocomplete","FormAutocompleteMui","FormAutocompleteMuiAsync","FormCheckbox","FormDate","FormHidden","FormRadio","FormSelect","FormText","FormToggle","FormLabel","AddRiskFormFieldView","propTypes","field","object","isRequired","control","checkboxProps","selectProps","setValue","fieldMap","text","number","datepicker","select","selectAsync","autocompletemuiAsync","autocomplete","autocompletemui","radio","checkbox","toggle","hidden","label","FieldComponent","type","dependants","dependentBy","map","value","split","dependentFieldsValues","name"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,QAAT,QAAyB,iBAAzB,C,CACA;;AACA,SACEC,gBADF,EAEEC,mBAFF,EAGEC,wBAHF,EAIEC,YAJF,EAKEC,QALF,EAMEC,UANF,EAOEC,SAPF,EAQEC,UARF,EASEC,QATF,EAUEC,UAVF,EAWEC,SAXF,QAYO,YAZP;;AAcAC,oBAAoB,CAACC,SAArB,GAAiC;AAC/BC,EAAAA,KAAK,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADO;AAE/BC,EAAAA,OAAO,EAAElB,SAAS,CAACgB,MAAV,CAAiBC,UAFK;AAG/BE,EAAAA,aAAa,EAAEnB,SAAS,CAACgB,MAAV,CAAiBC,UAHD;AAI/BG,EAAAA,WAAW,EAAEpB,SAAS,CAACgB,MAAV,CAAiBC;AAJC,CAAjC;AAOA,OAAO,SAASJ,oBAAT,OAAwF;AAAA;;AAAA,MAAxDE,KAAwD,QAAxDA,KAAwD;AAAA,MAAjDG,OAAiD,QAAjDA,OAAiD;AAAA,MAAxCC,aAAwC,QAAxCA,aAAwC;AAAA,MAAzBC,WAAyB,QAAzBA,WAAyB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC7F,MAAMC,QAAQ,GAAG;AACfC,IAAAA,IAAI,EAAEb,QADS;AAEfc,IAAAA,MAAM,EAAEd,QAFO;AAGfe,IAAAA,UAAU,EAAEnB,QAHG;AAIfoB,IAAAA,MAAM,EAAEjB,UAJO;AAKfkB,IAAAA,WAAW,EAAElB,UALE;AAMfmB,IAAAA,oBAAoB,EAAExB,wBANP;AAOfyB,IAAAA,YAAY,EAAE3B,gBAPC;AAQf4B,IAAAA,eAAe,EAAE3B,mBARF;AASf4B,IAAAA,KAAK,EAAEvB,SATQ;AAUfwB,IAAAA,QAAQ,EAAE3B,YAVK;AAWf4B,IAAAA,MAAM,EAAEtB,UAXO;AAYfuB,IAAAA,MAAM,EAAE3B,UAZO;AAaf4B,IAAAA,KAAK,EAAEvB;AAbQ,GAAjB;AAgBA,MAAMwB,cAAc,GAAGd,QAAQ,CAACP,KAAK,CAACsB,IAAP,CAA/B;AACA,MAAMC,UAAU,GAAGvB,KAAH,aAAGA,KAAH,uBAAGA,KAAK,CAAEuB,UAA1B;AACA,MAAMC,WAAW,GAAGD,UAAH,aAAGA,UAAH,uBAAGA,UAAU,CAAEE,GAAZ,CAAgB,UAACC,KAAD;AAAA,WAAWA,KAAK,CAACC,KAAN,CAAY,GAAZ,EAAiB,CAAjB,CAAX;AAAA,GAAhB,CAApB;AACA,MAAMC,qBAAqB,GAAG1C,QAAQ,CAAC;AACrCiB,IAAAA,OAAO,EAAPA,OADqC;AAErC0B,IAAAA,IAAI,EAAEL;AAF+B,GAAD,CAAtC,CApB6F,CAyB7F;;AACA,MAAI,CAACH,cAAL,EAAqB,OAAO,IAAP;AAErB,sBACE,QAAC,cAAD;AAEE,IAAA,OAAO,EAAElB,OAFX;AAGE,IAAA,QAAQ,EAAEG;AAHZ,KAIMF,aAJN,GAKMC,WALN,GAMML,KANN;AAOE,IAAA,qBAAqB,EAAE4B,qBAPzB;AAQE,IAAA,WAAW,EAAEJ;AARf,MACOxB,KAAK,CAAC6B,IADb;AAAA;AAAA;AAAA;AAAA,UADF;AAYD;;GAxCe/B,oB;UAoBgBZ,Q;;;KApBhBY,oB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useWatch } from 'react-hook-form';\r\n// app\r\nimport {\r\n  FormAutocomplete,\r\n  FormAutocompleteMui,\r\n  FormAutocompleteMuiAsync,\r\n  FormCheckbox,\r\n  FormDate,\r\n  FormHidden,\r\n  FormRadio,\r\n  FormSelect,\r\n  FormText,\r\n  FormToggle,\r\n  FormLabel,\r\n} from 'components';\r\n\r\nAddRiskFormFieldView.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  checkboxProps: PropTypes.object.isRequired,\r\n  selectProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function AddRiskFormFieldView({ field, control, checkboxProps, selectProps, setValue }) {\r\n  const fieldMap = {\r\n    text: FormText,\r\n    number: FormText,\r\n    datepicker: FormDate,\r\n    select: FormSelect,\r\n    selectAsync: FormSelect,\r\n    autocompletemuiAsync: FormAutocompleteMuiAsync,\r\n    autocomplete: FormAutocomplete,\r\n    autocompletemui: FormAutocompleteMui,\r\n    radio: FormRadio,\r\n    checkbox: FormCheckbox,\r\n    toggle: FormToggle,\r\n    hidden: FormHidden,\r\n    label: FormLabel,\r\n  };\r\n\r\n  const FieldComponent = fieldMap[field.type];\r\n  const dependants = field?.dependants;\r\n  const dependentBy = dependants?.map((value) => value.split(':')[1]);\r\n  const dependentFieldsValues = useWatch({\r\n    control,\r\n    name: dependentBy,\r\n  });\r\n\r\n  // abort\r\n  if (!FieldComponent) return null;\r\n\r\n  return (\r\n    <FieldComponent\r\n      key={field.name}\r\n      control={control}\r\n      setValue={setValue}\r\n      {...checkboxProps}\r\n      {...selectProps}\r\n      {...field}\r\n      dependentFieldsValues={dependentFieldsValues}\r\n      dependentBy={dependentBy}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}