{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, removeLoader, hideModal } from 'stores';\nimport * as utils from 'utils';\nimport isEmpty from 'lodash/isEmpty';\nexport var postCarrier = function postCarrier(body, isCreateCarrierModal) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.postCarrier',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postCarrierRequest(body));\n    dispatch(addLoader('postCarrier'));\n\n    if (!body || isEmpty(body)) {\n      dispatch(postCarrierFailure(defaultError));\n      dispatch(enqueueNotification('notification.generic.request', 'error'));\n      dispatch(removeLoader('postCarrier'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: 'api/v1/carriers',\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(postCarrierSuccess(data));\n      dispatch(enqueueNotification('notification.carrier.postSuccess', 'success'));\n      return data;\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (risk.postCarrier)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postCarrierFailure(err));\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(hideModal(isCreateCarrierModal ? 'ADD_PRODUCTS_CARRIER' : undefined));\n      dispatch(removeLoader('postCarrier'));\n    });\n  };\n};\nexport var postCarrierRequest = function postCarrierRequest(formData) {\n  return {\n    type: 'CARRIER_POST_REQUEST',\n    payload: formData\n  };\n};\nexport var postCarrierSuccess = function postCarrierSuccess(responseData) {\n  return {\n    type: 'CARRIER_POST_SUCCESS',\n    payload: responseData\n  };\n};\nexport var postCarrierFailure = function postCarrierFailure(error) {\n  return {\n    type: 'CARRIER_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/party/party.actions.postCarrier.js"],"names":["addLoader","authLogout","enqueueNotification","removeLoader","hideModal","utils","isEmpty","postCarrier","body","isCreateCarrierModal","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postCarrierRequest","postCarrierFailure","api","post","token","accessToken","path","data","then","response","handleResponse","postCarrierSuccess","err","errorParams","handleError","handleUnauthorized","getErrorMessage","undefined","formData","type","payload","responseData","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,mBAAhC,EAAqDC,YAArD,EAAmEC,SAAnE,QAAoF,QAApF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,IAAD,EAAOC,oBAAP;AAAA,SAAgC,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACjF;AADiF,oBAExBA,QAAQ,EAFgB;AAAA,QAEjEC,IAFiE,aAEzEC,IAFyE,CAEjED,IAFiE;AAAA,QAEvCE,QAFuC,aAEzDC,MAFyD,CAE/CC,IAF+C,CAEvCF,QAFuC;;AAIjF,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE,iCADa;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAKAT,IAAAA,QAAQ,CAACU,kBAAkB,CAACZ,IAAD,CAAnB,CAAR;AACAE,IAAAA,QAAQ,CAACV,SAAS,CAAC,aAAD,CAAV,CAAR;;AAEA,QAAI,CAACQ,IAAD,IAASF,OAAO,CAACE,IAAD,CAApB,EAA4B;AAC1BE,MAAAA,QAAQ,CAACW,kBAAkB,CAACJ,YAAD,CAAnB,CAAR;AACAP,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,8BAAD,EAAiC,OAAjC,CAApB,CAAR;AACAQ,MAAAA,QAAQ,CAACP,YAAY,CAAC,aAAD,CAAb,CAAR;AACA;AACD;;AAED,WAAOE,KAAK,CAACiB,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADR;AAEJX,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFf;AAGJc,MAAAA,IAAI,EAAE,iBAHF;AAIJC,MAAAA,IAAI,EAAEnB;AAJF,KADD,EAOJoB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcxB,KAAK,CAACiB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACD,IAAD,EAAU;AACdjB,MAAAA,QAAQ,CAACqB,kBAAkB,CAACJ,IAAD,CAAnB,CAAR;AACAjB,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,kCAAD,EAAqC,SAArC,CAApB,CAAR;AACA,aAAOyB,IAAP;AACD,KAZI,WAaE,UAACK,GAAD,EAAS;AACd,UAAMC,WAAW,mCACZhB,YADY;AAEfE,QAAAA,OAAO,EAAE;AAFM,QAAjB;;AAKAd,MAAAA,KAAK,CAACiB,GAAN,CAAUY,WAAV,CAAsBF,GAAtB,EAA2BC,WAA3B;AACA5B,MAAAA,KAAK,CAACiB,GAAN,CAAUa,kBAAV,CAA6BH,GAA7B,EAAkCtB,QAAlC,EAA4CT,UAA5C;AACAS,MAAAA,QAAQ,CAACW,kBAAkB,CAACW,GAAD,CAAnB,CAAR;AACAtB,MAAAA,QAAQ,CAACR,mBAAmB,CAACG,KAAK,CAACiB,GAAN,CAAUc,eAAV,CAA0BJ,GAA1B,CAAD,EAAiC,OAAjC,CAApB,CAAR;AACA,aAAOA,GAAP;AACD,KAxBI,aAyBI,YAAM;AACbtB,MAAAA,QAAQ,CAACN,SAAS,CAACK,oBAAoB,GAAG,sBAAH,GAA4B4B,SAAjD,CAAV,CAAR;AACA3B,MAAAA,QAAQ,CAACP,YAAY,CAAC,aAAD,CAAb,CAAR;AACD,KA5BI,CAAP;AA6BD,GAhD0B;AAAA,CAApB;AAkDP,OAAO,IAAMiB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACkB,QAAD,EAAc;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMP,kBAAkB,GAAG,SAArBA,kBAAqB,CAACU,YAAD,EAAkB;AAClD,SAAO;AACLF,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMpB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACqB,KAAD,EAAW;AAC3C,SAAO;AACLH,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, enqueueNotification, removeLoader, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\nexport const postCarrier = (body, isCreateCarrierModal) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.postCarrier',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postCarrierRequest(body));\r\n  dispatch(addLoader('postCarrier'));\r\n\r\n  if (!body || isEmpty(body)) {\r\n    dispatch(postCarrierFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.generic.request', 'error'));\r\n    dispatch(removeLoader('postCarrier'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: 'api/v1/carriers',\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(postCarrierSuccess(data));\r\n      dispatch(enqueueNotification('notification.carrier.postSuccess', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (risk.postCarrier)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postCarrierFailure(err));\r\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal(isCreateCarrierModal ? 'ADD_PRODUCTS_CARRIER' : undefined));\r\n      dispatch(removeLoader('postCarrier'));\r\n    });\r\n};\r\n\r\nexport const postCarrierRequest = (formData) => {\r\n  return {\r\n    type: 'CARRIER_POST_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const postCarrierSuccess = (responseData) => {\r\n  return {\r\n    type: 'CARRIER_POST_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const postCarrierFailure = (error) => {\r\n  return {\r\n    type: 'CARRIER_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}