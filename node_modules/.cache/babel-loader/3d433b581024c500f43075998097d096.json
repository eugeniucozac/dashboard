{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ReportingGroup\\\\ReportingGroup.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport { ReportingGroupView } from './ReportingGroup.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { showModal, selectReportList, getReportList, selectSelectedGroup, deleteReport, selectIsReportAdmin, getReportingDcouments, deselectDocument } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function Reporting() {\n  _s();\n\n  var _useParams = useParams(),\n      id = _useParams.id;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var reportingList = useSelector(selectReportList);\n  var selectedGroup = useSelector(selectSelectedGroup);\n  var isReportAdmin = useSelector(selectIsReportAdmin);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      breadcrumbs = _useState2[0],\n      setBreadcrumbs = _useState2[1];\n\n  var groupTitle = selectedGroup.name;\n  var reportGroupId = id;\n  var documents = useSelector(function (state) {\n    return state.document.documents;\n  });\n  var folders = useSelector(function (state) {\n    return state.document.folders;\n  });\n  useEffect(function () {\n    dispatch(getReportList(id));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var isSubscribed = true;\n    if (!reportGroupId) return;\n\n    if (isSubscribed) {\n      dispatch(getReportingDcouments(reportGroupId));\n      return function () {\n        return dispatch(deselectDocument());\n      };\n    }\n\n    return function () {\n      isSubscribed = false;\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    setBreadcrumbs([{\n      name: 'report-group',\n      label: utils.string.t('reporting.title'),\n      link: \"\".concat(config.routes.reporting.root)\n    }, {\n      name: 'report',\n      label: groupTitle || '',\n      link: \"\".concat(config.routes.reporting.root, \"/\").concat(id),\n      active: false\n    }]);\n  }, [groupTitle] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var filterReportngList = reportingList.items;\n\n  var setActiveStep = function setActiveStep(breadcrumbs) {\n    return breadcrumbs.map(function (item) {\n      if (item.name === 'report' && history.location.pathname.includes(\"reporting/\".concat(id))) {\n        item.active = true;\n      } else {\n        item.active = history.location.pathname === item.link;\n      }\n\n      return item;\n    });\n  };\n\n  var handleClickRow = function handleClickRow(report) {\n    return function (event) {\n      var id = report.id;\n      var reportTitle = report.title;\n      var route = report.id && \"\".concat(config.routes.reporting.root);\n      var slug = groupTitle.toLowerCase().replace(/\\s/g, '-');\n      history.push(\"\".concat(route, \"/\").concat(slug, \"/\").concat(id), {\n        groupTitle: groupTitle,\n        reportTitle: reportTitle,\n        reportGroupId: reportGroupId\n      });\n    };\n  };\n\n  var handleEdit = function handleEdit(popoverData) {\n    dispatch(showModal({\n      component: 'EDIT_REPORT_GROUP',\n      props: {\n        fullWidth: false,\n        maxWidth: 'sm',\n        title: utils.string.t('reporting.editReport'),\n        componentProps: _objectSpread(_objectSpread({}, popoverData), {}, {\n          report: popoverData\n        })\n      }\n    }));\n  };\n\n  var handleAdd = function handleAdd() {\n    var newPopoverData = {\n      groupId: id\n    };\n    dispatch(showModal({\n      component: 'ADD_REPORT_GROUP',\n      props: {\n        fullWidth: false,\n        maxWidth: 'sm',\n        title: utils.string.t('reporting.addReport'),\n        componentProps: _objectSpread(_objectSpread({}, newPopoverData), {}, {\n          report: newPopoverData\n        })\n      }\n    }));\n  };\n\n  var handleDelete = function handleDelete(popoverData) {\n    var submitHandler = function submitHandler() {\n      dispatch(deleteReport(popoverData === null || popoverData === void 0 ? void 0 : popoverData.id));\n    };\n\n    dispatch(showModal({\n      component: 'CONFIRM_DELETE',\n      props: {\n        title: utils.string.t('reporting.deleteReport'),\n        subtitle: popoverData.title,\n        fullWidth: true,\n        maxWidth: 'xs',\n        disableAutoFocus: true,\n        componentProps: {\n          submitHandler: submitHandler\n        }\n      }\n    }));\n  };\n\n  var uploadNew = function uploadNew() {\n    dispatch(showModal({\n      component: 'DOCUMENT_UPLOAD',\n      props: {\n        title: 'documents.upload.modal.title',\n        fullWidth: true,\n        maxWidth: 'sm',\n        disableAutoFocus: true,\n        componentProps: {\n          reportGroupId: reportGroupId,\n          isFolderCreatable: true\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(groupTitle, \" - \").concat(groupTitle, \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 168,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 167,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportingGroupView, {\n      isReportAdmin: isReportAdmin,\n      groupTitle: groupTitle || '',\n      groupId: id,\n      list: filterReportngList,\n      handleClickRow: handleClickRow,\n      handleAdd: handleAdd,\n      handleEdit: handleEdit,\n      handleDelete: handleDelete,\n      breadcrumbs: setActiveStep(breadcrumbs) || [],\n      uploadNew: uploadNew,\n      documents: documents,\n      folders: folders\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 170,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Reporting, \"p8Fa+p3oX1+M5YGE1Bf027d/LjU=\", false, function () {\n  return [useParams, useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Reporting;\nReporting.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Reporting\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ReportingGroup\\\\ReportingGroup.js\"] = {\n    name: \"Reporting\",\n    docgenInfo: Reporting.__docgenInfo,\n    path: \"src\\\\modules\\\\ReportingGroup\\\\ReportingGroup.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Reporting\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ReportingGroup/ReportingGroup.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useParams","useHistory","Helmet","ReportingGroupView","utils","config","showModal","selectReportList","getReportList","selectSelectedGroup","deleteReport","selectIsReportAdmin","getReportingDcouments","deselectDocument","Reporting","id","dispatch","history","brand","state","ui","reportingList","selectedGroup","isReportAdmin","breadcrumbs","setBreadcrumbs","groupTitle","name","reportGroupId","documents","document","folders","isSubscribed","label","string","t","link","routes","reporting","root","active","filterReportngList","items","setActiveStep","map","item","location","pathname","includes","handleClickRow","report","event","reportTitle","title","route","slug","toLowerCase","replace","push","handleEdit","popoverData","component","props","fullWidth","maxWidth","componentProps","handleAdd","newPopoverData","groupId","handleDelete","submitHandler","subtitle","disableAutoFocus","uploadNew","isFolderCreatable","app","getAppName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { Helmet } from 'react-helmet';\r\n\r\nimport { ReportingGroupView } from './ReportingGroup.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport {\r\n  showModal,\r\n  selectReportList,\r\n  getReportList,\r\n  selectSelectedGroup,\r\n  deleteReport,\r\n  selectIsReportAdmin,\r\n  getReportingDcouments,\r\n  deselectDocument,\r\n} from 'stores';\r\n\r\nexport default function Reporting() {\r\n  const { id } = useParams();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const brand = useSelector((state) => state.ui.brand);\r\n  const reportingList = useSelector(selectReportList);\r\n  const selectedGroup = useSelector(selectSelectedGroup);\r\n  const isReportAdmin = useSelector(selectIsReportAdmin);\r\n  const [breadcrumbs, setBreadcrumbs] = useState([]);\r\n  const groupTitle = selectedGroup.name;\r\n  const reportGroupId = id;\r\n  const documents = useSelector((state) => state.document.documents);\r\n  const folders = useSelector((state) => state.document.folders);\r\n\r\n  useEffect(() => {\r\n    dispatch(getReportList(id));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(\r\n    () => {\r\n      let isSubscribed = true;\r\n      if (!reportGroupId) return;\r\n      if (isSubscribed) {\r\n        dispatch(getReportingDcouments(reportGroupId));\r\n        return () => dispatch(deselectDocument());\r\n      }\r\n      return () => {\r\n        isSubscribed = false;\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      setBreadcrumbs([\r\n        {\r\n          name: 'report-group',\r\n          label: utils.string.t('reporting.title'),\r\n          link: `${config.routes.reporting.root}`,\r\n        },\r\n        {\r\n          name: 'report',\r\n          label: groupTitle || '',\r\n          link: `${config.routes.reporting.root}/${id}`,\r\n          active: false,\r\n        },\r\n      ]);\r\n    },\r\n    [groupTitle] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const filterReportngList = reportingList.items;\r\n\r\n  const setActiveStep = (breadcrumbs) => {\r\n    return breadcrumbs.map((item) => {\r\n      if (item.name === 'report' && history.location.pathname.includes(`reporting/${id}`)) {\r\n        item.active = true;\r\n      } else {\r\n        item.active = history.location.pathname === item.link;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n  const handleClickRow = (report) => (event) => {\r\n    const id = report.id;\r\n    const reportTitle = report.title;\r\n    const route = report.id && `${config.routes.reporting.root}`;\r\n    const slug = groupTitle.toLowerCase().replace(/\\s/g, '-');\r\n    history.push(`${route}/${slug}/${id}`, { groupTitle, reportTitle, reportGroupId });\r\n  };\r\n\r\n  const handleEdit = (popoverData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_REPORT_GROUP',\r\n        props: {\r\n          fullWidth: false,\r\n          maxWidth: 'sm',\r\n          title: utils.string.t('reporting.editReport'),\r\n          componentProps: {\r\n            ...popoverData,\r\n            report: popoverData,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleAdd = () => {\r\n    const newPopoverData = { groupId: id };\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_REPORT_GROUP',\r\n        props: {\r\n          fullWidth: false,\r\n          maxWidth: 'sm',\r\n          title: utils.string.t('reporting.addReport'),\r\n          componentProps: {\r\n            ...newPopoverData,\r\n            report: newPopoverData,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const handleDelete = (popoverData) => {\r\n    let submitHandler = () => {\r\n      dispatch(deleteReport(popoverData?.id));\r\n    };\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM_DELETE',\r\n        props: {\r\n          title: utils.string.t('reporting.deleteReport'),\r\n          subtitle: popoverData.title,\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            submitHandler,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const uploadNew = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'DOCUMENT_UPLOAD',\r\n        props: {\r\n          title: 'documents.upload.modal.title',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            reportGroupId,\r\n            isFolderCreatable: true,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${groupTitle} - ${groupTitle} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <ReportingGroupView\r\n        isReportAdmin={isReportAdmin}\r\n        groupTitle={groupTitle || ''}\r\n        groupId={id}\r\n        list={filterReportngList}\r\n        handleClickRow={handleClickRow}\r\n        handleAdd={handleAdd}\r\n        handleEdit={handleEdit}\r\n        handleDelete={handleDelete}\r\n        breadcrumbs={setActiveStep(breadcrumbs) || []}\r\n        uploadNew={uploadNew}\r\n        documents={documents}\r\n        folders={folders}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}