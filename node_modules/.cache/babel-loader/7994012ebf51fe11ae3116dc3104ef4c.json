{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateEditUser\\\\CreateEditUser.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './CreateEditUser.styles';\nimport { Button, FormActions, FormAutocomplete, FormContainer, FormFields, FormGrid, FormSelect, FormText } from 'components';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateEditUserView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  onChangeGroups: PropTypes.func.isRequired,\n  onChangeXbInstances: PropTypes.func.isRequired,\n  setTeamLoaded: PropTypes.func.isRequired,\n  user: PropTypes.object,\n  showClaimGroups: PropTypes.func.isRequired\n};\nexport function CreateEditUserView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      onChangeGroups = _ref.onChangeGroups,\n      onChangeXbInstances = _ref.onChangeXbInstances,\n      setTeamLoaded = _ref.setTeamLoaded,\n      user = _ref.user,\n      showClaimGroups = _ref.showClaimGroups;\n  var classes = makeStyles(styles, {\n    name: 'CreateEditUser'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue,\n      setError = _useForm.setError;\n\n  var groups = watch('groups');\n  var xbInstances = watch('xbInstances');\n  var departments = watch('departments');\n  var businessProcesses = watch('businessProcesses');\n  useEffect(function () {\n    onChangeGroups(groups);\n  }, [groups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var xbInstanceNames = xbInstances.map(function (xbi) {\n      return xbi.edgeSourceName;\n    }); //remove any departments that don't have this XB instance name in their name.\n\n    setValue('departments', departments.filter(function (dept) {\n      return xbInstanceNames.includes(dept.name.split('-').pop());\n    }));\n    onChangeXbInstances(xbInstances);\n  }, [xbInstances]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var teamEnableDisableSelection = (businessProcesses === null || businessProcesses === void 0 ? void 0 : businessProcesses.length) === 1 && (businessProcesses === null || businessProcesses === void 0 ? void 0 : businessProcesses.some(function (itm) {\n      return (itm === null || itm === void 0 ? void 0 : itm.businessProcessName) === 'Claims';\n    }));\n    setTeamLoaded(teamEnableDisableSelection);\n  }, [businessProcesses]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var _useFormActions = useFormActions(actions, reset, null, setError),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"form-addUser\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstName')), {}, {\n              control: control,\n              error: errors.firstName\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lastName')), {}, {\n              control: control,\n              error: errors.lastName\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'emailId')), {}, {\n              control: control,\n              error: errors.emailId\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'businessProcesses')), {}, {\n              control: control,\n              error: errors.businessProcesses,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue('team', []);\n                setValue('groups', []);\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'team')), {}, {\n              control: control,\n              error: errors.team,\n              handleUpdate: function handleUpdate(id, value) {\n                showClaimGroups(id, value);\n                setValue('groups', []);\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'groups')), {}, {\n              control: control,\n              error: errors.groups,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue('role', '');\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'role')), {}, {\n              error: errors.role,\n              control: control,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'xbInstances')), {}, {\n              control: control,\n              error: errors.xbInstances,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 120,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'departments')), {}, {\n              control: control,\n              error: errors.departments,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value, {\n                  shouldDirty: true\n                });\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 144,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 143,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          onClick: cancel.handler,\n          disabled: formState.isSubmitting\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 158,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 159,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 157,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateEditUserView, \"+VFpjyQ8RiVzXQAjFqxE8gAJb9Y=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = CreateEditUserView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateEditUserView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateEditUser/CreateEditUser.view.js"],"names":["React","useEffect","PropTypes","useForm","yupResolver","styles","Button","FormActions","FormAutocomplete","FormContainer","FormFields","FormGrid","FormSelect","FormText","useFormActions","utils","makeStyles","CreateEditUserView","propTypes","fields","array","isRequired","actions","onChangeGroups","func","onChangeXbInstances","setTeamLoaded","user","object","showClaimGroups","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","reset","errors","handleSubmit","formState","setValue","setError","groups","xbInstances","departments","businessProcesses","xbInstanceNames","map","xbi","edgeSourceName","filter","dept","includes","split","pop","teamEnableDisableSelection","length","some","itm","businessProcessName","cancel","submit","root","handler","getFieldProps","firstName","lastName","emailId","id","value","shouldDirty","team","role","label","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './CreateEditUser.styles';\r\nimport { Button, FormActions, FormAutocomplete, FormContainer, FormFields, FormGrid, FormSelect, FormText } from 'components';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nCreateEditUserView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  onChangeGroups: PropTypes.func.isRequired,\r\n  onChangeXbInstances: PropTypes.func.isRequired,\r\n  setTeamLoaded: PropTypes.func.isRequired,\r\n  user: PropTypes.object,\r\n  showClaimGroups: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function CreateEditUserView({ fields, actions, onChangeGroups, onChangeXbInstances, setTeamLoaded, user, showClaimGroups }) {\r\n  const classes = makeStyles(styles, { name: 'CreateEditUser' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, watch, reset, errors, handleSubmit, formState, setValue, setError } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const groups = watch('groups');\r\n  const xbInstances = watch('xbInstances');\r\n  const departments = watch('departments');\r\n  const businessProcesses = watch('businessProcesses');\r\n\r\n  useEffect(() => {\r\n    onChangeGroups(groups);\r\n  }, [groups]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const xbInstanceNames = xbInstances.map((xbi) => xbi.edgeSourceName);\r\n\r\n    //remove any departments that don't have this XB instance name in their name.\r\n    setValue(\r\n      'departments',\r\n      departments.filter((dept) => xbInstanceNames.includes(dept.name.split('-').pop()))\r\n    );\r\n    onChangeXbInstances(xbInstances);\r\n  }, [xbInstances]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    const teamEnableDisableSelection =\r\n      businessProcesses?.length === 1 && businessProcesses?.some((itm) => itm?.businessProcessName === 'Claims');\r\n    setTeamLoaded(teamEnableDisableSelection);\r\n  }, [businessProcesses]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset, null, setError);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"form-addUser\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'firstName')} control={control} error={errors.firstName} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'lastName')} control={control} error={errors.lastName} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'emailId')} control={control} error={errors.emailId} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'businessProcesses')}\r\n                control={control}\r\n                error={errors.businessProcesses}\r\n                handleUpdate={(id, value) => {\r\n                  setValue('team', []);\r\n                  setValue('groups', []);\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormSelect\r\n                {...utils.form.getFieldProps(fields, 'team')}\r\n                control={control}\r\n                error={errors.team}\r\n                handleUpdate={(id, value) => {\r\n                  showClaimGroups(id, value);\r\n                  setValue('groups', []);\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'groups')}\r\n                control={control}\r\n                error={errors.groups}\r\n                handleUpdate={(id, value) => {\r\n                  setValue('role', '');\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormSelect\r\n                {...utils.form.getFieldProps(fields, 'role')}\r\n                error={errors.role}\r\n                control={control}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'xbInstances')}\r\n                control={control}\r\n                error={errors.xbInstances}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'departments')}\r\n                control={control}\r\n                error={errors.departments}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value, { shouldDirty: true });\r\n                }}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" onClick={cancel.handler} disabled={formState.isSubmitting} />}\r\n          {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting || !formState.isDirty} color=\"primary\" />}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}