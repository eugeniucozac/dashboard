{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TreeView\\\\TreeView.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './TreeView.styles';\nimport { Search, Status, Tooltip, Warning } from 'components';\nimport { DmsDocDetailsTooltip } from 'modules';\nimport * as utils from 'utils'; // mui\n\nimport { TreeView as TreeViewMui, TreeItem } from '@material-ui/lab';\nimport { Box, Typography, Divider, makeStyles } from '@material-ui/core';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTreeView.propTypes = {\n  title: PropTypes.string,\n  rootRef: PropTypes.string,\n  treeData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    labelInfo: PropTypes.string,\n    children: PropTypes.array.isRequired\n  }),\n  filteredData: PropTypes.arrayOf(PropTypes.object),\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string.isRequired),\n  searchQuery: PropTypes.string,\n  handlers: PropTypes.shape({\n    submitSearch: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    rowClick: PropTypes.func.isRequired,\n    onClickAccordion: PropTypes.func\n  })\n};\nexport default function TreeView(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      rootRef = _ref.rootRef,\n      treeData = _ref.treeData,\n      filteredData = _ref.filteredData,\n      defaultExpanded = _ref.defaultExpanded,\n      searchQuery = _ref.searchQuery,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'TreeView'\n  })();\n\n  var renderContent = function renderContent(node) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.treeItem,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.column1,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classnames(classes.label, classes.file, _defineProperty({}, classes.parent, node.hasChildren)),\n          children: node.labelInfo ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [node.isUploadedOnGxb === 1 && /*#__PURE__*/_jsxDEV(Status, {\n              size: \"xxs\",\n              text: utils.string.t('app.gxb'),\n              status: \"light\",\n              nestedClasses: {\n                root: classes.status\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.name,\n              children: node.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true) : node.label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.column2,\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          className: classnames([classes.label, classes.date]),\n          children: node.labelInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var renderItem = function renderItem(node) {\n    // abort\n    if (!utils.generic.isValidObject(node, 'label')) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: node.labelInfo ? /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: /*#__PURE__*/_jsxDEV(DmsDocDetailsTooltip, {\n          data: node\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 27\n        }, _this),\n        placement: \"bottom\",\n        arrow: true,\n        children: renderContent(node)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 72,\n        columnNumber: 11\n      }, _this) : renderContent(node)\n    }, void 0, false);\n  };\n\n  var renderTree = function renderTree(node, parentId, idx) {\n    var _node$children;\n\n    var hasChildren = !utils.generic.isInvalidOrEmptyArray(node === null || node === void 0 ? void 0 : node.children);\n    return /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: \"\".concat(node === null || node === void 0 ? void 0 : node.id),\n      label: renderItem(_objectSpread(_objectSpread({}, node), {}, {\n        hasChildren: hasChildren\n      })),\n      onClick: function onClick(e) {\n        return !hasChildren ? handlers.rowClick(e, node) : null;\n      },\n      classes: {\n        root: classes.treeItemRoot,\n        label: classes.treeItemLabel\n      },\n      children: !hasChildren ? null : node === null || node === void 0 ? void 0 : (_node$children = node.children) === null || _node$children === void 0 ? void 0 : _node$children.map(function (child, idx) {\n        return renderTree(child, node === null || node === void 0 ? void 0 : node.id, idx);\n      })\n    }, (node === null || node === void 0 ? void 0 : node.id) || \"\".concat(parentId, \"-\").concat(idx), false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      alignItems: \"center\",\n      mb: 2.5,\n      children: [/*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body1\",\n        children: title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mb: 3,\n      children: /*#__PURE__*/_jsxDEV(Search, {\n        text: \"\",\n        placeholder: utils.string.t('dms.view.searchDocuments'),\n        submitButtonProps: {\n          size: 'small'\n        },\n        minChars: 3,\n        nestedClasses: {\n          btn: classes.searchBtn,\n          inputPropsRoot: classes.searchRoot\n        },\n        handlers: {\n          search: function search(args) {\n            handlers.submitSearch(args);\n          },\n          reset: function reset() {\n            handlers.resetSearch();\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classnames([classes.column1, classes.header]),\n          children: utils.string.t('dms.upload.file')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classnames([classes.column2, classes.header]),\n          children: utils.string.t('dms.upload.uploadedOn')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {\n        className: classes.divider\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this), searchQuery ? !utils.generic.isInvalidOrEmptyArray(filteredData) ? filteredData === null || filteredData === void 0 ? void 0 : filteredData.map(function (data) {\n        return renderItem(data);\n      }) : /*#__PURE__*/_jsxDEV(Box, {\n        my: 2,\n        children: /*#__PURE__*/_jsxDEV(Warning, {\n          text: utils.string.t('app.editableTableNoData'),\n          type: \"info\",\n          align: \"center\",\n          size: \"small\",\n          icon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 15\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 13\n      }, this) : /*#__PURE__*/_jsxDEV(TreeViewMui, {\n        \"aria-label\": \"rich object\",\n        defaultExpanded: defaultExpanded,\n        defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 34\n        }, this),\n        defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 32\n        }, this),\n        onNodeSelect: handlers === null || handlers === void 0 ? void 0 : handlers.onClickAccordion,\n        children: rootRef ? renderTree(treeData) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n_c = TreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TreeView/TreeView.js"],"names":["React","PropTypes","classnames","styles","Search","Status","Tooltip","Warning","DmsDocDetailsTooltip","utils","TreeView","TreeViewMui","TreeItem","Box","Typography","Divider","makeStyles","ChevronRightIcon","DescriptionIcon","ExpandMoreIcon","propTypes","title","string","rootRef","treeData","shape","id","isRequired","label","labelInfo","children","array","filteredData","arrayOf","object","defaultExpanded","searchQuery","handlers","submitSearch","func","resetSearch","rowClick","onClickAccordion","classes","name","renderContent","node","treeItem","column1","file","parent","hasChildren","isUploadedOnGxb","t","root","status","column2","date","renderItem","generic","isValidObject","renderTree","parentId","idx","isInvalidOrEmptyArray","e","treeItemRoot","treeItemLabel","map","child","size","btn","searchBtn","inputPropsRoot","searchRoot","search","args","reset","header","divider","data"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './TreeView.styles';\r\nimport { Search, Status, Tooltip, Warning } from 'components';\r\nimport { DmsDocDetailsTooltip } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { TreeView as TreeViewMui, TreeItem } from '@material-ui/lab';\r\nimport { Box, Typography, Divider, makeStyles } from '@material-ui/core';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nTreeView.propTypes = {\r\n  title: PropTypes.string,\r\n  rootRef: PropTypes.string,\r\n  treeData: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    labelInfo: PropTypes.string,\r\n    children: PropTypes.array.isRequired,\r\n  }),\r\n  filteredData: PropTypes.arrayOf(PropTypes.object),\r\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  searchQuery: PropTypes.string,\r\n  handlers: PropTypes.shape({\r\n    submitSearch: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    rowClick: PropTypes.func.isRequired,\r\n    onClickAccordion: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default function TreeView({ title, rootRef, treeData, filteredData, defaultExpanded, searchQuery, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'TreeView' })();\r\n\r\n  const renderContent = (node) => {\r\n    return (\r\n      <Box className={classes.treeItem}>\r\n        <Box className={classes.column1}>\r\n          <Typography className={classnames(classes.label, classes.file, { [classes.parent]: node.hasChildren })}>\r\n            {node.labelInfo ? (\r\n              <>\r\n                {node.isUploadedOnGxb === 1 && (\r\n                  <Status size=\"xxs\" text={utils.string.t('app.gxb')} status=\"light\" nestedClasses={{ root: classes.status }} />\r\n                )}\r\n                <span className={classes.name}>{node.label}</span>\r\n              </>\r\n            ) : (\r\n              node.label\r\n            )}\r\n          </Typography>\r\n        </Box>\r\n        <Box className={classes.column2}>\r\n          <Typography className={classnames([classes.label, classes.date])}>{node.labelInfo}</Typography>\r\n        </Box>\r\n      </Box>\r\n    );\r\n  };\r\n\r\n  const renderItem = (node) => {\r\n    // abort\r\n    if (!utils.generic.isValidObject(node, 'label')) return;\r\n\r\n    return (\r\n      <>\r\n        {node.labelInfo ? (\r\n          <Tooltip title={<DmsDocDetailsTooltip data={node} />} placement=\"bottom\" arrow>\r\n            {renderContent(node)}\r\n          </Tooltip>\r\n        ) : (\r\n          renderContent(node)\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderTree = (node, parentId, idx) => {\r\n    const hasChildren = !utils.generic.isInvalidOrEmptyArray(node?.children);\r\n\r\n    return (\r\n      <TreeItem\r\n        key={node?.id || `${parentId}-${idx}`}\r\n        nodeId={`${node?.id}`}\r\n        label={renderItem({ ...node, hasChildren })}\r\n        onClick={(e) => (!hasChildren ? handlers.rowClick(e, node) : null)}\r\n        classes={{\r\n          root: classes.treeItemRoot,\r\n          label: classes.treeItemLabel,\r\n        }}\r\n      >\r\n        {!hasChildren ? null : node?.children?.map((child, idx) => renderTree(child, node?.id, idx))}\r\n      </TreeItem>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Box display=\"flex\" alignItems=\"center\" mb={2.5}>\r\n        <DescriptionIcon />\r\n        <Typography variant=\"body1\">{title}</Typography>\r\n      </Box>\r\n      <Box mb={3}>\r\n        <Search\r\n          text=\"\"\r\n          placeholder={utils.string.t('dms.view.searchDocuments')}\r\n          submitButtonProps={{ size: 'small' }}\r\n          minChars={3}\r\n          nestedClasses={{\r\n            btn: classes.searchBtn,\r\n            inputPropsRoot: classes.searchRoot,\r\n          }}\r\n          handlers={{\r\n            search: (args) => {\r\n              handlers.submitSearch(args);\r\n            },\r\n            reset: () => {\r\n              handlers.resetSearch();\r\n            },\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box>\r\n        <Box display=\"flex\">\r\n          <Typography variant=\"body2\" className={classnames([classes.column1, classes.header])}>\r\n            {utils.string.t('dms.upload.file')}\r\n          </Typography>\r\n          <Typography variant=\"body2\" className={classnames([classes.column2, classes.header])}>\r\n            {utils.string.t('dms.upload.uploadedOn')}\r\n          </Typography>\r\n        </Box>\r\n\r\n        <Divider className={classes.divider} />\r\n\r\n        {searchQuery ? (\r\n          !utils.generic.isInvalidOrEmptyArray(filteredData) ? (\r\n            filteredData?.map((data) => {\r\n              return renderItem(data);\r\n            })\r\n          ) : (\r\n            <Box my={2}>\r\n              <Warning text={utils.string.t('app.editableTableNoData')} type=\"info\" align=\"center\" size=\"small\" icon />\r\n            </Box>\r\n          )\r\n        ) : (\r\n          <TreeViewMui\r\n            aria-label=\"rich object\"\r\n            defaultExpanded={defaultExpanded}\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            onNodeSelect={handlers?.onClickAccordion}\r\n          >\r\n            {rootRef ? renderTree(treeData) : null}\r\n          </TreeViewMui>\r\n        )}\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}