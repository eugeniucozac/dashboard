{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormDataGrid\\\\FormDataGrid.view.js\",\n    _this = this;\n\nimport React, { Fragment } from 'react';\nimport classnames from 'classnames';\nimport merge from 'lodash/merge';\nimport styles from './FormDataGrid.style';\nimport { Button, Overflow, TableCell, TableHead } from 'components';\nimport { AddRiskFormField } from 'modules';\nimport StringDisplay from './StringDisplay';\nimport SumTotalValues from './SumTotalValues';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar FormDataGridView = function FormDataGridView(_ref) {\n  var cols = _ref.cols,\n      field = _ref.field,\n      formProps = _ref.formProps,\n      validFields = _ref.validFields,\n      customFields = _ref.customFields,\n      handlers = _ref.handlers,\n      fields = _ref.fields,\n      showCopyIconFirst = _ref.showCopyIconFirst;\n  var classes = makeStyles(styles, {\n    name: 'FormDataGrid'\n  })();\n\n  var copyIcon = function copyIcon(index) {\n    return /*#__PURE__*/_jsxDEV(TableCell, {\n      className: classnames([classes.deleteCell, classes.tableRowCell]),\n      children: index ? /*#__PURE__*/_jsxDEV(Button, {\n        tooltip: {\n          title: utils.string.t('form.formDataGrid.copyHelp'),\n          placement: 'top'\n        },\n        size: \"small\",\n        icon: FileCopyIcon,\n        variant: \"outlined\",\n        nestedClasses: {\n          btn: classes.copyBtn\n        },\n        onClick: function onClick() {\n          return handlers.copyRowData(index);\n        },\n        \"data-testid\": \"btn-row-copy-\".concat(index)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 11\n      }, _this) : null\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 21,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var CustomComponent = function CustomComponent(_ref2) {\n    var field = _ref2.field,\n        item = _ref2.item,\n        index = _ref2.index,\n        formProps = _ref2.formProps;\n\n    switch (item.type) {\n      case 'stringDisplay':\n        return /*#__PURE__*/_jsxDEV(StringDisplay, {\n          field: field.name,\n          item: item,\n          index: index,\n          formProps: formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 16\n        }, _this);\n\n      case 'sumOfValues':\n        return /*#__PURE__*/_jsxDEV(SumTotalValues, {\n          field: field.name,\n          item: item,\n          index: index,\n          formProps: formProps\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 16\n        }, _this);\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Overflow, {\n    children: /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      className: classes.table,\n      \"data-testid\": \"form-data-grid\",\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        columns: cols,\n        nestedClasses: {\n          tableHead: classes.tableHead\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        \"data-testid\": \"risk-array-table\",\n        className: classes.tableBody,\n        children: fields.map(function (item, index) {\n          var visibleDefs = field.arrayItemDef.filter(function (f) {\n            return f.type !== 'hidden';\n          });\n          var hiddenDefs = field.arrayItemDef.filter(function (f) {\n            return f.type === 'hidden';\n          });\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableRow,\n              children: [hiddenDefs.map(function (def) {\n                return /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                  field: _objectSpread(_objectSpread({}, def), {}, {\n                    name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                    defaultValue: item[def.name]\n                  }),\n                  formProps: formProps\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, _this);\n              }), showCopyIconFirst ? copyIcon(index) : null, visibleDefs.map(function (def, defIndex) {\n                var _ref3;\n\n                if (![].concat(_toConsumableArray(validFields), _toConsumableArray(customFields)).includes(def.type)) return null;\n\n                var label = def.label,\n                    fieldProps = _objectWithoutProperties(def, [\"label\"]);\n\n                var condition = utils.risk.getCondition(def, field.arrayItemDef);\n                var conditionValue = condition && formProps.watch(\"\".concat(field.name, \"[\").concat(index, \"].\").concat(condition.name));\n                var isValid = !condition || condition && utils.risk.isConditionValid(condition, conditionValue);\n                var isDisabled = (def === null || def === void 0 ? void 0 : def.disabled) || condition && !isValid;\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classnames([classes.sizeSmall, (_ref3 = {}, _defineProperty(_ref3, classes.tableRowCell, true), _defineProperty(_ref3, classes.minimal, true), _defineProperty(_ref3, classes.tableRowCellDisabled, isDisabled), _defineProperty(_ref3, classes.tableRowCellFirst, defIndex === 0), _defineProperty(_ref3, classes.tableRowCellMiddle, defIndex > 0 && defIndex < visibleDefs.length - 1), _defineProperty(_ref3, classes.tableRowCellLast, defIndex === visibleDefs.length - 1), _defineProperty(_ref3, classes.tableRowAlignCenter, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.alignCenter), _ref3)]),\n                  style: _objectSpread({}, fieldProps.width && {\n                    width: \"\".concat(fieldProps.width, \"px\")\n                  }),\n                  children: customFields.includes(def.type) ? /*#__PURE__*/_jsxDEV(CustomComponent, {\n                    field: field,\n                    index: index,\n                    item: def,\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 27\n                  }, _this) : /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, fieldProps), {}, {\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name],\n                      muiComponentProps: merge(fieldProps.muiComponentProps || {}, _objectSpread({}, ['text', 'number'].includes(def.type) && {\n                        InputProps: {\n                          disabled: isDisabled\n                        }\n                      }))\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 106,\n                    columnNumber: 27\n                  }, _this)\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, _this);\n              }), showCopyIconFirst ? null : copyIcon(index)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, _this)\n          }, item.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, _this);\n};\n\n_c = FormDataGridView;\nexport default FormDataGridView;\n\nvar _c;\n\n$RefreshReg$(_c, \"FormDataGridView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormDataGrid/FormDataGrid.view.js"],"names":["React","Fragment","classnames","merge","styles","Button","Overflow","TableCell","TableHead","AddRiskFormField","StringDisplay","SumTotalValues","utils","makeStyles","Table","TableRow","TableBody","FileCopyIcon","FormDataGridView","cols","field","formProps","validFields","customFields","handlers","fields","showCopyIconFirst","classes","name","copyIcon","index","deleteCell","tableRowCell","title","string","t","placement","btn","copyBtn","copyRowData","CustomComponent","item","type","table","tableHead","tableBody","map","visibleDefs","arrayItemDef","filter","f","hiddenDefs","tableRow","def","defaultValue","defIndex","includes","label","fieldProps","condition","risk","getCondition","conditionValue","watch","isValid","isConditionValid","isDisabled","disabled","sizeSmall","minimal","tableRowCellDisabled","tableRowCellFirst","tableRowCellMiddle","length","tableRowCellLast","tableRowAlignCenter","alignCenter","width","muiComponentProps","InputProps","id"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport merge from 'lodash/merge';\r\n\r\nimport styles from './FormDataGrid.style';\r\nimport { Button, Overflow, TableCell, TableHead } from 'components';\r\nimport { AddRiskFormField } from 'modules';\r\nimport StringDisplay from './StringDisplay';\r\nimport SumTotalValues from './SumTotalValues';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\n\r\nconst FormDataGridView = ({ cols, field, formProps, validFields, customFields, handlers, fields, showCopyIconFirst }) => {\r\n  const classes = makeStyles(styles, { name: 'FormDataGrid' })();\r\n\r\n  const copyIcon = (index) => {\r\n    return (\r\n      <TableCell className={classnames([classes.deleteCell, classes.tableRowCell])}>\r\n        {index ? (\r\n          <Button\r\n            tooltip={{ title: utils.string.t('form.formDataGrid.copyHelp'), placement: 'top' }}\r\n            size=\"small\"\r\n            icon={FileCopyIcon}\r\n            variant=\"outlined\"\r\n            nestedClasses={{ btn: classes.copyBtn }}\r\n            onClick={() => handlers.copyRowData(index)}\r\n            data-testid={`btn-row-copy-${index}`}\r\n          />\r\n        ) : null}\r\n      </TableCell>\r\n    );\r\n  };\r\n\r\n  const CustomComponent = ({ field, item, index, formProps }) => {\r\n    switch (item.type) {\r\n      case 'stringDisplay':\r\n        return <StringDisplay field={field.name} item={item} index={index} formProps={formProps} />;\r\n      case 'sumOfValues':\r\n        return <SumTotalValues field={field.name} item={item} index={index} formProps={formProps} />;\r\n\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Overflow>\r\n      <Table size=\"small\" className={classes.table} data-testid={`form-data-grid`}>\r\n        <TableHead columns={cols} nestedClasses={{ tableHead: classes.tableHead }} />\r\n        <TableBody data-testid=\"risk-array-table\" className={classes.tableBody}>\r\n          {fields.map((item, index) => {\r\n            const visibleDefs = field.arrayItemDef.filter((f) => f.type !== 'hidden');\r\n            const hiddenDefs = field.arrayItemDef.filter((f) => f.type === 'hidden');\r\n\r\n            return (\r\n              <Fragment key={item.id}>\r\n                <TableRow className={classes.tableRow}>\r\n                  {hiddenDefs.map((def) => {\r\n                    return (\r\n                      <AddRiskFormField\r\n                        key={def.name}\r\n                        field={{\r\n                          ...def,\r\n                          name: `${field.name}[${index}].${def.name}`,\r\n                          defaultValue: item[def.name],\r\n                        }}\r\n                        formProps={formProps}\r\n                      />\r\n                    );\r\n                  })}\r\n\r\n                  {showCopyIconFirst ? copyIcon(index) : null}\r\n\r\n                  {visibleDefs.map((def, defIndex) => {\r\n                    if (![...validFields, ...customFields].includes(def.type)) return null;\r\n\r\n                    const { label, ...fieldProps } = def;\r\n                    const condition = utils.risk.getCondition(def, field.arrayItemDef);\r\n                    const conditionValue = condition && formProps.watch(`${field.name}[${index}].${condition.name}`);\r\n                    const isValid = !condition || (condition && utils.risk.isConditionValid(condition, conditionValue));\r\n                    const isDisabled = def?.disabled || (condition && !isValid);\r\n\r\n                    return (\r\n                      <TableCell\r\n                        key={def.name}\r\n                        className={classnames([\r\n                          classes.sizeSmall,\r\n                          {\r\n                            [classes.tableRowCell]: true,\r\n                            [classes.minimal]: true,\r\n                            [classes.tableRowCellDisabled]: isDisabled,\r\n                            [classes.tableRowCellFirst]: defIndex === 0,\r\n                            [classes.tableRowCellMiddle]: defIndex > 0 && defIndex < visibleDefs.length - 1,\r\n                            [classes.tableRowCellLast]: defIndex === visibleDefs.length - 1,\r\n                            [classes.tableRowAlignCenter]: fieldProps?.alignCenter,\r\n                          },\r\n                        ])}\r\n                        style={{ ...(fieldProps.width && { width: `${fieldProps.width}px` }) }}\r\n                      >\r\n                        {customFields.includes(def.type) ? (\r\n                          <CustomComponent field={field} index={index} item={def} formProps={formProps} />\r\n                        ) : (\r\n                          <AddRiskFormField\r\n                            field={{\r\n                              ...fieldProps,\r\n                              name: `${field.name}[${index}].${def.name}`,\r\n                              defaultValue: item[def.name],\r\n                              muiComponentProps: merge(fieldProps.muiComponentProps || {}, {\r\n                                ...(['text', 'number'].includes(def.type) && { InputProps: { disabled: isDisabled } }),\r\n                              }),\r\n                            }}\r\n                            formProps={formProps}\r\n                          />\r\n                        )}\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n                  {showCopyIconFirst ? null : copyIcon(index)}\r\n                </TableRow>\r\n              </Fragment>\r\n            );\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    </Overflow>\r\n  );\r\n};\r\n\r\nexport default FormDataGridView;\r\n"]},"metadata":{},"sourceType":"module"}