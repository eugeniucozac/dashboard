{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport styles from './ClaimsTabTable.styles';\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\nimport { Button, Empty, FormLabel, FormSwitch, Overflow, Pagination, TableCell, TableHead, Skeleton } from 'components';\nimport * as utils from 'utils';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\"; // mui\n\nimport { makeStyles, Table, TableBody, Box, TableRow } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableView.prototype = {\n  claims: PropTypes.array.isRequired,\n  claimsSelected: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.shape({\n      handleChangePage: PropTypes.func.isRequired,\n      handleChangeRowsPerPage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  tabData: PropTypes.object.isRequired,\n  multiSelect: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    clickClaim: PropTypes.func.isRequired,\n    editClaims: PropTypes.func.isRequired,\n    selectClaim: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n    toggleMultiSelect: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableView(_ref) {\n  var _tabData$tableDetails,\n      _this = this;\n\n  var claims = _ref.claims,\n      claimsSelected = _ref.claimsSelected,\n      cols = _ref.cols,\n      columnProps = _ref.columnProps,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      tabData = _ref.tabData,\n      multiSelect = _ref.multiSelect,\n      viewFields = _ref.viewFields,\n      control = _ref.control,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTabTable'\n  })();\n  var hasNotSearchClaims = !claims;\n  var hasClaims = utils.generic.isValidArray(claims, true);\n  var isClaimsLoading = tabData === null || tabData === void 0 ? void 0 : (_tabData$tableDetails = tabData.tableDetails) === null || _tabData$tableDetails === void 0 ? void 0 : _tabData$tableDetails.isloadingTable;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-tab-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"claims-list-body\",\n          children: [isClaimsLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: cols.length,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 40,\n                animation: \"wave\",\n                displayNumber: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this), hasClaims && !isClaimsLoading && claims.map(function (claim) {\n            return /*#__PURE__*/_jsxDEV(ClaimsTabTableRow, {\n              claim: claim,\n              isSelected: multiSelect && Boolean(claimsSelected.map(function (c) {\n                return c.processID;\n              }).includes(claim.processID)),\n              isMultiSelect: multiSelect,\n              columnProps: columnProps,\n              handlers: {\n                clickClaim: handlers.clickClaim,\n                selectClaim: handlers.selectClaim\n              }\n            }, claims === null || claims === void 0 ? void 0 : claims.processID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), hasNotSearchClaims ? /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.searchLossAndClaims'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 75\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 9\n    }, this) : hasClaims ? /*#__PURE__*/_jsxDEV(Box, {\n      mt: 1,\n      display: \"flex\",\n      alignItems: \"flex-start\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        flexGrow: 1,\n        style: {\n          minHeight: 52\n        },\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          m: 1,\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: utils.string.t('claims.claimsTab.multiSelect'),\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'multiSelect', control)), {}, {\n          muiComponentProps: {\n            onChange: handlers.toggleMultiSelect,\n            size: 'small'\n          },\n          nestedClasses: {\n            root: classes.switch\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 13\n        }, this), multiSelect && /*#__PURE__*/_jsxDEV(Box, {\n          m: 0.5,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: EditIcon,\n            color: \"primary\",\n            variant: \"outlined\",\n            size: \"xsmall\",\n            text: utils.string.t('claims.processing.summary.buttons.changeComplexityPriorityAssignment'),\n            onClick: function onClick() {\n              return handlers.editClaims(claimsSelected);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flexShrink: 0,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          page: get(pagination, 'obj.page'),\n          count: get(pagination, 'obj.rowsTotal'),\n          rowsPerPage: get(pagination, 'obj.rowsPerPage'),\n          onChangePage: get(pagination, 'handlers.handleChangePage'),\n          onChangeRowsPerPage: get(pagination, 'handlers.handleChangeRowsPerPage')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 9\n    }, this) : !isClaimsLoading && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 88\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTabTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTable.view.js"],"names":["React","PropTypes","get","styles","ClaimsTabTableRow","Button","Empty","FormLabel","FormSwitch","Overflow","Pagination","TableCell","TableHead","Skeleton","utils","makeStyles","Table","TableBody","Box","TableRow","EditIcon","ClaimsTabTableView","prototype","claims","array","isRequired","claimsSelected","cols","columnProps","func","sort","object","pagination","shape","obj","handlers","handleChangePage","handleChangeRowsPerPage","tabData","multiSelect","bool","clickClaim","editClaims","selectClaim","toggleMultiSelect","viewFields","control","classes","name","hasNotSearchClaims","hasClaims","generic","isValidArray","isClaimsLoading","tableDetails","isloadingTable","length","map","claim","Boolean","c","processID","includes","string","t","minHeight","form","getFieldProps","onChange","size","root","switch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ClaimsTabTable.styles';\r\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\r\nimport { Button, Empty, FormLabel, FormSwitch, Overflow, Pagination, TableCell, TableHead, Skeleton } from 'components';\r\nimport * as utils from 'utils';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableBody, Box, TableRow } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nClaimsTabTableView.prototype = {\r\n  claims: PropTypes.array.isRequired,\r\n  claimsSelected: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.shape({\r\n      handleChangePage: PropTypes.func.isRequired,\r\n      handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  tabData: PropTypes.object.isRequired,\r\n  multiSelect: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    clickClaim: PropTypes.func.isRequired,\r\n    editClaims: PropTypes.func.isRequired,\r\n    selectClaim: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n    toggleMultiSelect: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableView({\r\n  claims,\r\n  claimsSelected,\r\n  cols,\r\n  columnProps,\r\n  sort,\r\n  pagination,\r\n  tabData,\r\n  multiSelect,\r\n  viewFields,\r\n  control,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTabTable' })();\r\n\r\n  const hasNotSearchClaims = !claims;\r\n  const hasClaims = utils.generic.isValidArray(claims, true);\r\n  const isClaimsLoading = tabData?.tableDetails?.isloadingTable;\r\n\r\n  return (\r\n    <Box data-testid=\"claims-tab-table\">\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody data-testid=\"claims-list-body\">\r\n            {isClaimsLoading && (\r\n              <TableRow>\r\n                <TableCell colSpan={cols.length}>\r\n                  <Skeleton height={40} animation=\"wave\" displayNumber={10} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {hasClaims &&\r\n              !isClaimsLoading &&\r\n              claims.map((claim) => {\r\n                return (\r\n                  <ClaimsTabTableRow\r\n                    key={claims?.processID}\r\n                    claim={claim}\r\n                    isSelected={multiSelect && Boolean(claimsSelected.map((c) => c.processID).includes(claim.processID))}\r\n                    isMultiSelect={multiSelect}\r\n                    columnProps={columnProps}\r\n                    handlers={{\r\n                      clickClaim: handlers.clickClaim,\r\n                      selectClaim: handlers.selectClaim,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {hasNotSearchClaims ? (\r\n        <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n      ) : hasClaims ? (\r\n        <Box mt={1} display=\"flex\" alignItems=\"flex-start\">\r\n          <Box display=\"flex\" alignItems=\"center\" flexGrow={1} style={{ minHeight: 52 }}>\r\n            <Box m={1}>\r\n              <FormLabel label={utils.string.t('claims.claimsTab.multiSelect')} align=\"left\" />\r\n            </Box>\r\n            <FormSwitch\r\n              {...utils.form.getFieldProps(viewFields, 'multiSelect', control)}\r\n              muiComponentProps={{ onChange: handlers.toggleMultiSelect, size: 'small' }}\r\n              nestedClasses={{ root: classes.switch }}\r\n            />\r\n            {multiSelect && (\r\n              <Box m={0.5}>\r\n                <Button\r\n                  icon={EditIcon}\r\n                  color=\"primary\"\r\n                  variant=\"outlined\"\r\n                  size=\"xsmall\"\r\n                  text={utils.string.t('claims.processing.summary.buttons.changeComplexityPriorityAssignment')}\r\n                  onClick={() => handlers.editClaims(claimsSelected)}\r\n                />\r\n              </Box>\r\n            )}\r\n          </Box>\r\n          <Box flexShrink={0}>\r\n            <Pagination\r\n              page={get(pagination, 'obj.page')}\r\n              count={get(pagination, 'obj.rowsTotal')}\r\n              rowsPerPage={get(pagination, 'obj.rowsPerPage')}\r\n              onChangePage={get(pagination, 'handlers.handleChangePage')}\r\n              onChangeRowsPerPage={get(pagination, 'handlers.handleChangeRowsPerPage')}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      ) : (\r\n        !isClaimsLoading && <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}