{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SetClaimPriority\\\\SetClaimPriority.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; //app\n\nimport { SetClaimPriorityView } from './SetClaimPriority.view';\nimport { hideModal, showModal, getPriorityLevels, selectPriorities, editClaimPriority } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSetClaimPriority.propTypes = {\n  claim: PropTypes.object\n};\nexport default function SetClaimPriority(_ref) {\n  _s();\n\n  var claim = _ref.claim;\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities);\n  var fields = [{\n    name: 'priority',\n    type: 'autocompletemui',\n    options: priorities || [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: priorities === null || priorities === void 0 ? void 0 : priorities.find(function (item) {\n      return (claim === null || claim === void 0 ? void 0 : claim.priority) === (item === null || item === void 0 ? void 0 : item.description);\n    }),\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.exit'),\n    handler: function handler() {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('status.alert'),\n          hint: utils.string.t('claims.notes.notifications.alertPopup'),\n          fullWidth: true,\n          maxWidth: 'xs',\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            submitHandler: function submitHandler() {\n              dispatch(hideModal());\n            },\n            cancelHandler: function cancelHandler() {}\n          }\n        }\n      }));\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: function handler(values) {\n      var _values$priority;\n\n      var value = {\n        priority: values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id\n      };\n      dispatch(editClaimPriority(value, priorities, claim));\n    }\n  }];\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(priorities)) {\n      dispatch(getPriorityLevels());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return /*#__PURE__*/_jsxDEV(SetClaimPriorityView, {\n    actions: actions,\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 76,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SetClaimPriority, \"EeYhuYugmALoY7xe6+87jV+F/bM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SetClaimPriority;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetClaimPriority\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SetClaimPriority/SetClaimPriority.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Yup","SetClaimPriorityView","hideModal","showModal","getPriorityLevels","selectPriorities","editClaimPriority","utils","SetClaimPriority","propTypes","claim","object","dispatch","priorities","fields","name","type","options","optionKey","optionLabel","value","find","item","priority","description","validation","required","string","t","actions","label","handler","component","props","title","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","cancelHandler","values","id","generic","isInvalidOrEmptyArray"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n//app\r\nimport { SetClaimPriorityView } from './SetClaimPriority.view';\r\nimport { hideModal, showModal, getPriorityLevels, selectPriorities, editClaimPriority } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nSetClaimPriority.propTypes = {\r\n  claim: PropTypes.object,\r\n};\r\n\r\nexport default function SetClaimPriority({ claim }) {\r\n  const dispatch = useDispatch();\r\n  const priorities = useSelector(selectPriorities);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value: priorities?.find((item) => claim?.priority === item?.description),\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.exit'),\r\n      handler: () => {\r\n        dispatch(\r\n          showModal({\r\n            component: 'CONFIRM',\r\n            props: {\r\n              title: utils.string.t('status.alert'),\r\n              hint: utils.string.t('claims.notes.notifications.alertPopup'),\r\n              fullWidth: true,\r\n              maxWidth: 'xs',\r\n              componentProps: {\r\n                cancelLabel: utils.string.t('app.no'),\r\n                confirmLabel: utils.string.t('app.yes'),\r\n                submitHandler: () => {\r\n                  dispatch(hideModal());\r\n                },\r\n                cancelHandler: () => {},\r\n              },\r\n            },\r\n          })\r\n        );\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: (values) => {\r\n        const value = { priority: values?.priority?.id };\r\n        dispatch(editClaimPriority(value, priorities, claim));\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(\r\n    () => {\r\n      if (utils.generic.isInvalidOrEmptyArray(priorities)) {\r\n        dispatch(getPriorityLevels());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  return <SetClaimPriorityView actions={actions} fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}