{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\Policy\\\\Policy.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport { Info, Layout, Loader, PopoverMenu, SectionHeader, Translate } from 'components';\nimport { PlacementSummary } from 'modules';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Box, Grid } from '@material-ui/core';\nimport PolicyIcon from '@material-ui/icons/Policy';\nimport TodayIcon from '@material-ui/icons/Today';\nimport EventIcon from '@material-ui/icons/Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPolicyView.propTypes = {\n  id: PropTypes.string.isRequired,\n  policy: PropTypes.object,\n  placement: PropTypes.object,\n  placementLoading: PropTypes.bool,\n  popoverItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  }))\n};\nexport function PolicyView(_ref) {\n  var id = _ref.id,\n      policy = _ref.policy,\n      placement = _ref.placement,\n      placementLoading = _ref.placementLoading,\n      popoverItems = _ref.popoverItems;\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    testid: \"policy\",\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n        title: utils.string.t('policy.title'),\n        icon: PolicyIcon,\n        testid: \"policy\",\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          variant: \"outlined\",\n          id: \"goTo\",\n          size: \"medium\",\n          color: \"primary\",\n          isButton: true,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          items: popoverItems\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 9\n      }, this), policy && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          \"data-testid\": \"policy-content\",\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('policy.umr'),\n                avatarIcon: PolicyIcon,\n                description: policy.umrId,\n                \"data-testid\": \"policy-umrid\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('app.inceptionDate'),\n                avatarIcon: TodayIcon,\n                description: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"format.date\",\n                  options: {\n                    value: {\n                      date: policy.inceptionDate,\n                      format: config.ui.format.date.text,\n                      default: '-'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 23\n                }, this),\n                \"data-testid\": \"policy-inception-date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('app.expiryDate'),\n                avatarIcon: EventIcon,\n                description: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"format.date\",\n                  options: {\n                    value: {\n                      date: policy.expiryDate,\n                      format: config.ui.format.date.text,\n                      default: '-'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this),\n                \"data-testid\": \"risk-summary-expiry-date\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('app.department'),\n                description: get(policy, 'department.name'),\n                \"data-testid\": \"policy-department\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 97,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('app.businessType'),\n                description: get(policy, 'businessType.description'),\n                \"data-testid\": \"policy-business-type\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('policy.notes'),\n                description: policy.notes,\n                \"data-testid\": \"policy-notes\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 34,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      sidebar: true,\n      padding: false,\n      children: [placement && /*#__PURE__*/_jsxDEV(PlacementSummary, {\n        placement: placement,\n        showToggle: false,\n        expanded: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 23\n      }, this), /*#__PURE__*/_jsxDEV(Loader, {\n        visible: placementLoading,\n        panel: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 33,\n    columnNumber: 5\n  }, this);\n}\n_c = PolicyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PolicyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/Policy/Policy.view.js"],"names":["React","PropTypes","get","Info","Layout","Loader","PopoverMenu","SectionHeader","Translate","PlacementSummary","utils","config","Box","Grid","PolicyIcon","TodayIcon","EventIcon","PolicyView","propTypes","id","string","isRequired","policy","object","placement","placementLoading","bool","popoverItems","arrayOf","shape","label","callback","func","t","vertical","horizontal","umrId","value","date","inceptionDate","format","ui","text","default","expiryDate","notes"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { Info, Layout, Loader, PopoverMenu, SectionHeader, Translate } from 'components';\r\nimport { PlacementSummary } from 'modules';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport PolicyIcon from '@material-ui/icons/Policy';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nPolicyView.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  policy: PropTypes.object,\r\n  placement: PropTypes.object,\r\n  placementLoading: PropTypes.bool,\r\n  popoverItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      callback: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport function PolicyView({ id, policy, placement, placementLoading, popoverItems }) {\r\n  return (\r\n    <Layout testid=\"policy\">\r\n      <Layout main>\r\n        <SectionHeader title={utils.string.t('policy.title')} icon={PolicyIcon} testid=\"policy\">\r\n          <PopoverMenu\r\n            variant=\"outlined\"\r\n            id=\"goTo\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            isButton\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={popoverItems}\r\n          />\r\n        </SectionHeader>\r\n\r\n        {policy && (\r\n          <>\r\n            <Box mt={2} data-testid=\"policy-content\">\r\n              <Grid container spacing={3}>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Info\r\n                    title={utils.string.t('policy.umr')}\r\n                    avatarIcon={PolicyIcon}\r\n                    description={policy.umrId}\r\n                    data-testid=\"policy-umrid\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Info\r\n                    title={utils.string.t('app.inceptionDate')}\r\n                    avatarIcon={TodayIcon}\r\n                    description={\r\n                      <Translate\r\n                        label=\"format.date\"\r\n                        options={{ value: { date: policy.inceptionDate, format: config.ui.format.date.text, default: '-' } }}\r\n                      />\r\n                    }\r\n                    data-testid=\"policy-inception-date\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} sm={6} md={4}>\r\n                  <Info\r\n                    title={utils.string.t('app.expiryDate')}\r\n                    avatarIcon={EventIcon}\r\n                    description={\r\n                      <Translate\r\n                        label=\"format.date\"\r\n                        options={{ value: { date: policy.expiryDate, format: config.ui.format.date.text, default: '-' } }}\r\n                      />\r\n                    }\r\n                    data-testid=\"risk-summary-expiry-date\"\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n\r\n            <Box mt={4}>\r\n              <Grid container spacing={2}>\r\n                <Grid item xs={12}>\r\n                  <Info\r\n                    title={utils.string.t('app.department')}\r\n                    description={get(policy, 'department.name')}\r\n                    data-testid=\"policy-department\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Info\r\n                    title={utils.string.t('app.businessType')}\r\n                    description={get(policy, 'businessType.description')}\r\n                    data-testid=\"policy-business-type\"\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12}>\r\n                  <Info title={utils.string.t('policy.notes')} description={policy.notes} data-testid=\"policy-notes\" />\r\n                </Grid>\r\n              </Grid>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Layout>\r\n\r\n      <Layout sidebar padding={false}>\r\n        {placement && <PlacementSummary placement={placement} showToggle={false} expanded />}\r\n        <Loader visible={placementLoading} panel />\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}