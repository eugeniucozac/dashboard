{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsUnderwritingGroups\\\\ClaimsUnderwritingGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport { ClaimsUnderwritingGroupsView } from './ClaimsUnderwritingGroups.view';\nimport { getUnderwritingGroupsBySection, selectClaimsUnderwritingGroups, selectSectionEnabledUG, sortingUnderwritingGroups } from 'stores';\nimport * as utils from 'utils';\nimport { useFlexiColumns, useSort } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsUnderwritingGroups.prototypes = {\n  fields: PropTypes.array.isRequired,\n  claimForm: PropTypes.object,\n  uwResetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool\n};\nexport default function ClaimsUnderwritingGroups(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      claimForm = _ref.claimForm,\n      uwResetKey = _ref.uwResetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      selectedPolicyRender = _ref.selectedPolicyRender;\n  var dispatch = useDispatch();\n  var underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\n  var isUwGroupsLoading = underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.isLoading;\n  var facilityKeys = underWritingGroups.items.map(function (item) {\n    return item.id;\n  });\n\n  var ugSortData = _objectSpread(_objectSpread({}, underWritingGroups.sort), {}, {\n    type: 'numeric'\n  });\n\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  useEffect(function () {\n    if (selectedPolicyRender !== '') {\n      if (hasClaimRef) {\n        utils.generic.isInvalidOrEmptyArray(underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items) && dispatch(getUnderwritingGroupsBySection());\n      } else {\n        dispatch(getUnderwritingGroupsBySection({\n          viewLoader: false\n        }));\n      }\n    }\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getUnderwritingGroupsBySection({\n      sortBy: by,\n      direction: dir.toUpperCase()\n    }));\n  };\n\n  var columns = [{\n    id: 'id',\n    empty: true,\n    visible: true\n  }, {\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage'),\n    visible: true\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility'),\n    visible: true\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef'),\n    visible: true\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader'),\n    visible: true\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr'),\n    visible: true\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative'),\n    visible: true\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    visible: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns;\n\n  var _useSort = useSort(columnsArray, ugSortData, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  return /*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroupsView, {\n    isSectionEnabled: isSectionEnabled,\n    claimFields: fields,\n    claimForm: claimForm,\n    uwResetKey: uwResetKey,\n    underWritingGroups: underWritingGroups,\n    sortingUnderwritingGroups: sortingUnderwritingGroups,\n    cols: cols,\n    sort: sort,\n    handleSort: handleSort,\n    facilityKeys: facilityKeys,\n    isUwGroupsLoading: isUwGroupsLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsUnderwritingGroups, \"P2j+2/zDda3c2PhmWd9Yc+wDKzM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useFlexiColumns, useSort];\n});\n\n_c = ClaimsUnderwritingGroups;\nClaimsUnderwritingGroups.displayName = \"ClaimsUnderwritingGroups\";\nClaimsUnderwritingGroups.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsUnderwritingGroups\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsUnderwritingGroups\\\\ClaimsUnderwritingGroups.js\"] = {\n    name: \"ClaimsUnderwritingGroups\",\n    docgenInfo: ClaimsUnderwritingGroups.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsUnderwritingGroups\\\\ClaimsUnderwritingGroups.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsUnderwritingGroups\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsUnderwritingGroups/ClaimsUnderwritingGroups.js"],"names":["React","useEffect","useDispatch","useSelector","PropTypes","ClaimsUnderwritingGroupsView","getUnderwritingGroupsBySection","selectClaimsUnderwritingGroups","selectSectionEnabledUG","sortingUnderwritingGroups","utils","useFlexiColumns","useSort","ClaimsUnderwritingGroups","prototypes","fields","array","isRequired","claimForm","object","uwResetKey","number","hasClaimRef","bool","selectedPolicyRender","dispatch","underWritingGroups","isUwGroupsLoading","isLoading","facilityKeys","items","map","item","id","ugSortData","sort","type","isSectionEnabled","generic","isInvalidOrEmptyArray","viewLoader","handleSort","by","dir","sortBy","direction","toUpperCase","columns","empty","visible","label","string","t","columnsArray","cols"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,4BAAT,QAA6C,iCAA7C;AACA,SAASC,8BAAT,EAAyCC,8BAAzC,EAAyEC,sBAAzE,EAAiGC,yBAAjG,QAAkI,QAAlI;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,eAAT,EAA0BC,OAA1B,QAAyC,OAAzC;;AAEAC,wBAAwB,CAACC,UAAzB,GAAsC;AACpCC,EAAAA,MAAM,EAAEX,SAAS,CAACY,KAAV,CAAgBC,UADY;AAEpCC,EAAAA,SAAS,EAAEd,SAAS,CAACe,MAFe;AAGpCC,EAAAA,UAAU,EAAEhB,SAAS,CAACiB,MAHc;AAIpCC,EAAAA,WAAW,EAAElB,SAAS,CAACmB;AAJa,CAAtC;AAMA,eAAe,SAASV,wBAAT,OAAwG;AAAA;;AAAA,MAApEE,MAAoE,QAApEA,MAAoE;AAAA,MAA5DG,SAA4D,QAA5DA,SAA4D;AAAA,MAAjDE,UAAiD,QAAjDA,UAAiD;AAAA,MAArCE,WAAqC,QAArCA,WAAqC;AAAA,MAAxBE,oBAAwB,QAAxBA,oBAAwB;AACrH,MAAMC,QAAQ,GAAGvB,WAAW,EAA5B;AACA,MAAMwB,kBAAkB,GAAGvB,WAAW,CAACI,8BAAD,CAAtC;AACA,MAAMoB,iBAAiB,GAAED,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEE,SAA7C;AACA,MAAMC,YAAY,GAAGH,kBAAkB,CAACI,KAAnB,CAAyBC,GAAzB,CAA6B,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,EAAf;AAAA,GAA7B,CAArB;;AACA,MAAMC,UAAU,mCAAQR,kBAAkB,CAACS,IAA3B;AAAiCC,IAAAA,IAAI,EAAE;AAAvC,IAAhB;;AACA,MAAMC,gBAAgB,GAAGlC,WAAW,CAACK,sBAAD,CAApC;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIuB,oBAAoB,KAAK,EAA7B,EAAiC;AAC/B,UAAIF,WAAJ,EAAiB;AACfZ,QAAAA,KAAK,CAAC4B,OAAN,CAAcC,qBAAd,CAAoCb,kBAApC,aAAoCA,kBAApC,uBAAoCA,kBAAkB,CAAEI,KAAxD,KAAkEL,QAAQ,CAACnB,8BAA8B,EAA/B,CAA1E;AACD,OAFD,MAEO;AACLmB,QAAAA,QAAQ,CAACnB,8BAA8B,CAAC;AAACkC,UAAAA,UAAU,EAAC;AAAZ,SAAD,CAA/B,CAAR;AACD;AACF;AACF,GARQ,EAQN,CAACpB,UAAD,CARM,CAAT,CARqH,CAgBnG;;AAElB,MAAMqB,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,GAAL,EAAa;AAC9BlB,IAAAA,QAAQ,CAACnB,8BAA8B,CAAC;AAAEsC,MAAAA,MAAM,EAAEF,EAAV;AAAcG,MAAAA,SAAS,EAAEF,GAAG,CAACG,WAAJ;AAAzB,KAAD,CAA/B,CAAR;AACD,GAFD;;AAIA,MAAMC,OAAO,GAAG,CACd;AAAEd,IAAAA,EAAE,EAAE,IAAN;AAAYe,IAAAA,KAAK,EAAE,IAAnB;AAAyBC,IAAAA,OAAO,EAAE;AAAlC,GADc,EAEd;AACEhB,IAAAA,EAAE,EAAE,UADN;AAEEiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAFT;AAGEjB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBS,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEI,IAAAA,OAAO,EAAE;AAJX,GAFc,EAQd;AAAEhB,IAAAA,EAAE,EAAE,YAAN;AAAoBiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAA3B;AAAmFH,IAAAA,OAAO,EAAE;AAA5F,GARc,EASd;AAAEhB,IAAAA,EAAE,EAAE,UAAN;AAAkBiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAAzB;AAA+EH,IAAAA,OAAO,EAAE;AAAxF,GATc,EAUd;AAAEhB,IAAAA,EAAE,EAAE,aAAN;AAAqBiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,uCAAf,CAA5B;AAAqFH,IAAAA,OAAO,EAAE;AAA9F,GAVc,EAWd;AAAEhB,IAAAA,EAAE,EAAE,YAAN;AAAoBiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAA3B;AAAmFH,IAAAA,OAAO,EAAE;AAA5F,GAXc,EAYd;AAAEhB,IAAAA,EAAE,EAAE,KAAN;AAAaiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAApB;AAAqEH,IAAAA,OAAO,EAAE;AAA9E,GAZc,EAad;AAAEhB,IAAAA,EAAE,EAAE,WAAN;AAAmBiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,qCAAf,CAA1B;AAAiFH,IAAAA,OAAO,EAAE;AAA1F,GAbc,EAcd;AACEhB,IAAAA,EAAE,EAAE,eADN;AAEEiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,yCAAf,CAFT;AAGEjB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBS,MAAAA,SAAS,EAAE;AAA3B,KAHR;AAIEI,IAAAA,OAAO,EAAE;AAJX,GAdc,EAoBd;AACEhB,IAAAA,EAAE,EAAE,aADN;AAEEiB,IAAAA,KAAK,EAAExC,KAAK,CAACyC,MAAN,CAAaC,CAAb,CAAe,uCAAf,CAFT;AAGEjB,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBS,MAAAA,SAAS,EAAE;AAA3B,KAHR;AAIEI,IAAAA,OAAO,EAAE;AAJX,GApBc,CAAhB;;AAtBqH,yBAkDnFtC,eAAe,CAACoC,OAAD,CAlDoE;AAAA,MAkDpGM,YAlDoG,oBAkD7GN,OAlD6G;;AAAA,iBAmD9FnC,OAAO,CAACyC,YAAD,EAAenB,UAAf,EAA2BO,UAA3B,CAnDuF;AAAA,MAmD7Ga,IAnD6G,YAmD7GA,IAnD6G;AAAA,MAmDvGnB,IAnDuG,YAmDvGA,IAnDuG;;AAqDrH,sBACE,QAAC,4BAAD;AACE,IAAA,gBAAgB,EAAEE,gBADpB;AAEE,IAAA,WAAW,EAAEtB,MAFf;AAGE,IAAA,SAAS,EAAEG,SAHb;AAIE,IAAA,UAAU,EAAEE,UAJd;AAKE,IAAA,kBAAkB,EAAEM,kBALtB;AAME,IAAA,yBAAyB,EAAEjB,yBAN7B;AAOE,IAAA,IAAI,EAAE6C,IAPR;AAQE,IAAA,IAAI,EAAEnB,IARR;AASE,IAAA,UAAU,EAAEM,UATd;AAUE,IAAA,YAAY,EAAEZ,YAVhB;AAWE,IAAA,iBAAiB,EAAEF;AAXrB;AAAA;AAAA;AAAA;AAAA,UADF;AAeD;;GApEuBd,wB;UACLX,W,EACUC,W,EAIFA,W,EA4CSQ,e,EACXC,O;;;KAnDDC,wB;AAAAA,wB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { ClaimsUnderwritingGroupsView } from './ClaimsUnderwritingGroups.view';\r\nimport { getUnderwritingGroupsBySection, selectClaimsUnderwritingGroups, selectSectionEnabledUG, sortingUnderwritingGroups } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { useFlexiColumns, useSort } from 'hooks';\r\n\r\nClaimsUnderwritingGroups.prototypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  claimForm: PropTypes.object,\r\n  uwResetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool,\r\n};\r\nexport default function ClaimsUnderwritingGroups({ fields, claimForm, uwResetKey, hasClaimRef, selectedPolicyRender }) {\r\n  const dispatch = useDispatch();\r\n  const underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\r\n  const isUwGroupsLoading= underWritingGroups?.isLoading\r\n  const facilityKeys = underWritingGroups.items.map((item) => item.id);\r\n  const ugSortData = { ...underWritingGroups.sort, type: 'numeric' };\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n\r\n  useEffect(() => {\r\n    if (selectedPolicyRender !== '') {\r\n      if (hasClaimRef) {\r\n        utils.generic.isInvalidOrEmptyArray(underWritingGroups?.items) && dispatch(getUnderwritingGroupsBySection());\r\n      } else {\r\n        dispatch(getUnderwritingGroupsBySection({viewLoader:false}));\r\n      }\r\n    }\r\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getUnderwritingGroupsBySection({ sortBy: by, direction: dir.toUpperCase() }));\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'id', empty: true, visible: true },\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    { id: 'percentage', label: utils.string.t('claims.underWritingGroups.percentage'), visible: true },\r\n    { id: 'facility', label: utils.string.t('claims.underWritingGroups.facility'), visible: true },\r\n    { id: 'facilityRef', label: utils.string.t('claims.underWritingGroups.facilityRef'), visible: true },\r\n    { id: 'slipLeader', label: utils.string.t('claims.underWritingGroups.slipLeader'), visible: true },\r\n    { id: 'ucr', label: utils.string.t('claims.underWritingGroups.ucr'), visible: true },\r\n    { id: 'narrative', label: utils.string.t('claims.underWritingGroups.narrative'), visible: true },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray } = useFlexiColumns(columns);\r\n  const { cols, sort } = useSort(columnsArray, ugSortData, handleSort);\r\n\r\n  return (\r\n    <ClaimsUnderwritingGroupsView\r\n      isSectionEnabled={isSectionEnabled}\r\n      claimFields={fields}\r\n      claimForm={claimForm}\r\n      uwResetKey={uwResetKey}\r\n      underWritingGroups={underWritingGroups}\r\n      sortingUnderwritingGroups={sortingUnderwritingGroups}\r\n      cols={cols}\r\n      sort={sort}\r\n      handleSort={handleSort}\r\n      facilityKeys={facilityKeys}\r\n      isUwGroupsLoading={isUwGroupsLoading}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}