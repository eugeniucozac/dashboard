{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nexport var premiumProcessingRejectCaseInitiation = function premiumProcessingRejectCaseInitiation(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(addLoader('premiumProcessingRejectCaseInitiation'));\n    var caseId = params.caseId,\n        taskId = params.taskId,\n        notesValue = params.notesValue,\n        policyRef = params.policyRef;\n    var rejectCase = {\n      bpmTaskId: taskId,\n      notes: notesValue,\n      policyRef: policyRef\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/task/rejectinitiation',\n      data: rejectCase\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(premiumProcessingRejectCaseInitiationSuccess(data === null || data === void 0 ? void 0 : data.data));\n      dispatch(enqueueNotification(\"CASE ID \".concat(caseId, \" is now rejected and sent back to the Front end contact\"), 'success'));\n      return data;\n    })[\"catch\"](function (error) {\n      dispatch(premiumProcessingRejectCaseInitiationError(error, {\n        file: 'stores/premiumProcessing.actions.getRejectCaseInitiation'\n      }));\n      dispatch(enqueueNotification('premiumProcessing.rejectingCase.rejectCaseFailMsg.fail', 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('premiumProcessingRejectCaseInitiation'));\n    });\n  };\n};\nexport var premiumProcessingRejectCaseInitiationRequest = function premiumProcessingRejectCaseInitiationRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_REQUEST',\n    payload: payload\n  };\n};\nexport var premiumProcessingRejectCaseInitiationSuccess = function premiumProcessingRejectCaseInitiationSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_SUCCESS',\n    payload: data\n  };\n};\nexport var premiumProcessingRejectCaseInitiationError = function premiumProcessingRejectCaseInitiationError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getRejectCaseInitiation.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","premiumProcessingRejectCaseInitiation","params","dispatch","getState","auth","user","endpoint","config","vars","caseId","taskId","notesValue","policyRef","rejectCase","bpmTaskId","notes","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","premiumProcessingRejectCaseInitiationSuccess","error","premiumProcessingRejectCaseInitiationError","file","handleUnauthorized","premiumProcessingRejectCaseInitiationRequest","payload","type"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\n\r\nexport const premiumProcessingRejectCaseInitiation = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  dispatch(addLoader('premiumProcessingRejectCaseInitiation'));\r\n  const { caseId, taskId, notesValue, policyRef } = params;\r\n  const rejectCase = {\r\n    bpmTaskId: taskId,\r\n    notes: notesValue,\r\n    policyRef: policyRef,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/task/rejectinitiation',\r\n      data: rejectCase,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(premiumProcessingRejectCaseInitiationSuccess(data?.data));\r\n      dispatch(enqueueNotification(`CASE ID ${caseId} is now rejected and sent back to the Front end contact`, 'success'));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        premiumProcessingRejectCaseInitiationError(error, {\r\n          file: 'stores/premiumProcessing.actions.getRejectCaseInitiation',\r\n        })\r\n      );\r\n      dispatch(enqueueNotification('premiumProcessing.rejectingCase.rejectCaseFailMsg.fail', 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('premiumProcessingRejectCaseInitiation'));\r\n    });\r\n};\r\n\r\nexport const premiumProcessingRejectCaseInitiationRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingRejectCaseInitiationSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingRejectCaseInitiationError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}