{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, enqueueNotification } from 'stores';\nexport var deleteComment = function deleteComment(id, commentId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/comment.actions.delete'\n    };\n    dispatch(deleteCommentRequest(commentId));\n\n    if (!id) {\n      return _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Data missing'\n      });\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/comment/\".concat(commentId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(deleteCommentSuccess(id, commentId));\n      dispatch(enqueueNotification('notification.deleteComment.success', 'success'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (comment.delete)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(deleteCommentFailure(err));\n      dispatch(enqueueNotification('notification.deleteComment.fail', 'error'));\n      return err;\n    });\n  };\n};\nexport var deleteCommentRequest = function deleteCommentRequest(id) {\n  return {\n    type: 'COMMENTS_DELETE_REQUEST',\n    payload: {\n      id: id\n    }\n  };\n};\nexport var deleteCommentSuccess = function deleteCommentSuccess(id, commentId) {\n  return {\n    type: 'COMMENTS_DELETE_SUCCESS',\n    payload: {\n      id: id,\n      commentId: commentId\n    }\n  };\n};\nexport var deleteCommentFailure = function deleteCommentFailure(error) {\n  return {\n    type: 'COMMENTS_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/comment/comments.actions.delete.js"],"names":["utils","authLogout","enqueueNotification","deleteComment","id","commentId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","deleteCommentRequest","message","api","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","deleteCommentSuccess","err","errorParams","handleError","handleUnauthorized","deleteCommentFailure","type","payload","error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,mBAArB,QAAgD,QAAhD;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,EAAD,EAAKC,SAAL;AAAA,SAAmB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACtE;AADsE,oBAEbA,QAAQ,EAFK;AAAA,QAEtDC,IAFsD,aAE9DC,IAF8D,CAEtDD,IAFsD;AAAA,QAE5BE,QAF4B,aAE9CC,MAF8C,CAEpCC,IAFoC,CAE5BF,QAF4B;;AAItE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,oBAAoB,CAACV,SAAD,CAArB,CAAR;;AAEA,QAAI,CAACD,EAAL,EAAS;AACP,6CAAYS,YAAZ;AAA0BG,QAAAA,OAAO,EAAE;AAAnC;AACD;;AAED,WAAOhB,KAAK,CAACiB,GAAN,WACG;AACNC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADN;AAENT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,IAFb;AAGNC,MAAAA,IAAI,wBAAiBhB,SAAjB;AAHE,KADH,EAMJiB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACiB,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACiB,GAAN,CAAUS,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,oBAAoB,CAACxB,EAAD,EAAKC,SAAL,CAArB,CAAR;AACAC,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,oCAAD,EAAuC,SAAvC,CAApB,CAAR;AACD,KAXI,WAYE,UAAC2B,GAAD,EAAS;AACd,UAAMC,WAAW,mCACZjB,YADY;AAEfG,QAAAA,OAAO,EAAE;AAFM,QAAjB;;AAKAhB,MAAAA,KAAK,CAACiB,GAAN,CAAUc,WAAV,CAAsBF,GAAtB,EAA2BC,WAA3B;AACA9B,MAAAA,KAAK,CAACiB,GAAN,CAAUe,kBAAV,CAA6BH,GAA7B,EAAkCvB,QAAlC,EAA4CL,UAA5C;AACAK,MAAAA,QAAQ,CAAC2B,oBAAoB,CAACJ,GAAD,CAArB,CAAR;AACAvB,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,iCAAD,EAAoC,OAApC,CAApB,CAAR;AACA,aAAO2B,GAAP;AACD,KAvBI,CAAP;AAwBD,GAtC4B;AAAA,CAAtB;AAwCP,OAAO,IAAMd,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACX,EAAD,EAAQ;AAC1C,SAAO;AACL8B,IAAAA,IAAI,EAAE,yBADD;AAELC,IAAAA,OAAO,EAAE;AAAE/B,MAAAA,EAAE,EAAFA;AAAF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMwB,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACxB,EAAD,EAAKC,SAAL,EAAmB;AACrD,SAAO;AACL6B,IAAAA,IAAI,EAAE,yBADD;AAELC,IAAAA,OAAO,EAAE;AACP/B,MAAAA,EAAE,EAAFA,EADO;AAEPC,MAAAA,SAAS,EAATA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,IAAM4B,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACG,KAAD,EAAW;AAC7C,SAAO;AACLF,IAAAA,IAAI,EAAE,yBADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, enqueueNotification } from 'stores';\r\n\r\nexport const deleteComment = (id, commentId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/comment.actions.delete',\r\n  };\r\n\r\n  dispatch(deleteCommentRequest(commentId));\r\n\r\n  if (!id) {\r\n    return { ...defaultError, message: 'Data missing' };\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/comment/${commentId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(deleteCommentSuccess(id, commentId));\r\n      dispatch(enqueueNotification('notification.deleteComment.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (comment.delete)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(deleteCommentFailure(err));\r\n      dispatch(enqueueNotification('notification.deleteComment.fail', 'error'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const deleteCommentRequest = (id) => {\r\n  return {\r\n    type: 'COMMENTS_DELETE_REQUEST',\r\n    payload: { id },\r\n  };\r\n};\r\n\r\nexport const deleteCommentSuccess = (id, commentId) => {\r\n  return {\r\n    type: 'COMMENTS_DELETE_SUCCESS',\r\n    payload: {\r\n      id,\r\n      commentId,\r\n    },\r\n  };\r\n};\r\n\r\nexport const deleteCommentFailure = (error) => {\r\n  return {\r\n    type: 'COMMENTS_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}