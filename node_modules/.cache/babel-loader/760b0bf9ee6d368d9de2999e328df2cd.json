{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\AccessControl\\\\AccessControl.js\",\n    _s = $RefreshSig$();\n\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport { Redirect } from 'react-router'; // app\n\nimport featuresPropsCheck from './AccessControl.props';\nimport { selectUser } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAccessControl.propTypes = {\n  feature: featuresPropsCheck('feature'),\n  permissions: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.oneOf(['create', 'read', 'update', 'delete'])), PropTypes.oneOf(['create', 'read', 'update', 'delete'])]),\n  route: featuresPropsCheck('route')\n};\nexport default function AccessControl(_ref) {\n  _s();\n\n  var feature = _ref.feature,\n      permissions = _ref.permissions,\n      route = _ref.route,\n      children = _ref.children;\n  var user = useSelector(selectUser); // missing or invalid props\n\n  if (!feature && !route || // at least one prop is required\n  feature && route || // both props are not allowed at the same time\n  feature && !permissions || // if feature prop, permissions is required\n  route && permissions || // if route prop, permissions is not allowed\n  !children // children is mandatory\n  ) return null; // feature\n\n  var isFeature = Boolean(feature);\n  var isFeatureAllowed = utils.app.access.feature(feature, permissions, user); // route\n\n  var isRoute = Boolean(route);\n  var isRouteAllowed = utils.app.access.route(route, user);\n\n  if (isFeature) {\n    return isFeatureAllowed ? children : null;\n  } else if (isRoute) {\n    return isRouteAllowed ? children : /*#__PURE__*/_jsxDEV(Redirect, {\n      to: \"/\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 40\n    }, this);\n  } else {\n    return null;\n  }\n}\n\n_s(AccessControl, \"ODc3cjw/vvoWaLFqHWcEGODyOfo=\", false, function () {\n  return [useSelector];\n});\n\n_c = AccessControl;\nAccessControl.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AccessControl\",\n  \"props\": {\n    \"feature\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"featuresPropsCheck('feature')\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"permissions\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"arrayOf\",\n          \"value\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'create'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'read'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'update'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'delete'\",\n              \"computed\": false\n            }]\n          }\n        }, {\n          \"name\": \"enum\",\n          \"value\": [{\n            \"value\": \"'create'\",\n            \"computed\": false\n          }, {\n            \"value\": \"'read'\",\n            \"computed\": false\n          }, {\n            \"value\": \"'update'\",\n            \"computed\": false\n          }, {\n            \"value\": \"'delete'\",\n            \"computed\": false\n          }]\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"route\": {\n      \"type\": {\n        \"name\": \"custom\",\n        \"raw\": \"featuresPropsCheck('route')\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\AccessControl\\\\AccessControl.js\"] = {\n    name: \"AccessControl\",\n    docgenInfo: AccessControl.__docgenInfo,\n    path: \"src\\\\components\\\\AccessControl\\\\AccessControl.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AccessControl\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/AccessControl/AccessControl.js"],"names":["PropTypes","useSelector","Redirect","featuresPropsCheck","selectUser","utils","AccessControl","propTypes","feature","permissions","oneOfType","arrayOf","oneOf","route","children","user","isFeature","Boolean","isFeatureAllowed","app","access","isRoute","isRouteAllowed"],"mappings":";;;AAAA,OAAOA,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,QAAT,QAAyB,cAAzB,C,CAEA;;AACA,OAAOC,kBAAP,MAA+B,uBAA/B;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,aAAa,CAACC,SAAd,GAA0B;AACxBC,EAAAA,OAAO,EAAEL,kBAAkB,CAAC,SAAD,CADH;AAExBM,EAAAA,WAAW,EAAET,SAAS,CAACU,SAAV,CAAoB,CAC/BV,SAAS,CAACW,OAAV,CAAkBX,SAAS,CAACY,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,QAA7B,CAAhB,CAAlB,CAD+B,EAE/BZ,SAAS,CAACY,KAAV,CAAgB,CAAC,QAAD,EAAW,MAAX,EAAmB,QAAnB,EAA6B,QAA7B,CAAhB,CAF+B,CAApB,CAFW;AAMxBC,EAAAA,KAAK,EAAEV,kBAAkB,CAAC,OAAD;AAND,CAA1B;AASA,eAAe,SAASG,aAAT,OAAkE;AAAA;;AAAA,MAAzCE,OAAyC,QAAzCA,OAAyC;AAAA,MAAhCC,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBI,KAAmB,QAAnBA,KAAmB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC/E,MAAMC,IAAI,GAAGd,WAAW,CAACG,UAAD,CAAxB,CAD+E,CAG/E;;AACA,MACG,CAACI,OAAD,IAAY,CAACK,KAAd,IAAwB;AACvBL,EAAAA,OAAO,IAAIK,KADZ,IACsB;AACrBL,EAAAA,OAAO,IAAI,CAACC,WAFb,IAE6B;AAC5BI,EAAAA,KAAK,IAAIJ,WAHV,IAG0B;AAC1B,GAACK,QALH,CAKY;AALZ,IAOE,OAAO,IAAP,CAX6E,CAa/E;;AACA,MAAME,SAAS,GAAGC,OAAO,CAACT,OAAD,CAAzB;AACA,MAAMU,gBAAgB,GAAGb,KAAK,CAACc,GAAN,CAAUC,MAAV,CAAiBZ,OAAjB,CAAyBA,OAAzB,EAAkCC,WAAlC,EAA+CM,IAA/C,CAAzB,CAf+E,CAiB/E;;AACA,MAAMM,OAAO,GAAGJ,OAAO,CAACJ,KAAD,CAAvB;AACA,MAAMS,cAAc,GAAGjB,KAAK,CAACc,GAAN,CAAUC,MAAV,CAAiBP,KAAjB,CAAuBA,KAAvB,EAA8BE,IAA9B,CAAvB;;AAEA,MAAIC,SAAJ,EAAe;AACb,WAAOE,gBAAgB,GAAGJ,QAAH,GAAc,IAArC;AACD,GAFD,MAEO,IAAIO,OAAJ,EAAa;AAClB,WAAOC,cAAc,GAAGR,QAAH,gBAAc,QAAC,QAAD;AAAU,MAAA,EAAE,EAAC;AAAb;AAAA;AAAA;AAAA;AAAA,YAAnC;AACD,GAFM,MAEA;AACL,WAAO,IAAP;AACD;AACF;;GA5BuBR,a;UACTL,W;;;KADSK,a","sourcesContent":["import PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport { Redirect } from 'react-router';\r\n\r\n// app\r\nimport featuresPropsCheck from './AccessControl.props';\r\nimport { selectUser } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nAccessControl.propTypes = {\r\n  feature: featuresPropsCheck('feature'),\r\n  permissions: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(PropTypes.oneOf(['create', 'read', 'update', 'delete'])),\r\n    PropTypes.oneOf(['create', 'read', 'update', 'delete']),\r\n  ]),\r\n  route: featuresPropsCheck('route'),\r\n};\r\n\r\nexport default function AccessControl({ feature, permissions, route, children }) {\r\n  const user = useSelector(selectUser);\r\n\r\n  // missing or invalid props\r\n  if (\r\n    (!feature && !route) || // at least one prop is required\r\n    (feature && route) || // both props are not allowed at the same time\r\n    (feature && !permissions) || // if feature prop, permissions is required\r\n    (route && permissions) || // if route prop, permissions is not allowed\r\n    !children // children is mandatory\r\n  )\r\n    return null;\r\n\r\n  // feature\r\n  const isFeature = Boolean(feature);\r\n  const isFeatureAllowed = utils.app.access.feature(feature, permissions, user);\r\n\r\n  // route\r\n  const isRoute = Boolean(route);\r\n  const isRouteAllowed = utils.app.access.route(route, user);\r\n\r\n  if (isFeature) {\r\n    return isFeatureAllowed ? children : null;\r\n  } else if (isRoute) {\r\n    return isRouteAllowed ? children : <Redirect to=\"/\" />;\r\n  } else {\r\n    return null;\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}