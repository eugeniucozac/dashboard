{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocuments.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClaimsManageDocumentsView } from './ClaimsManageDocuments.view';\nimport { selectorDmsViewFiles, getViewTableDocuments, selectClaimIdFromGrid, selectLossId, unlinkDmsViewDocuments, viewDocumentsDelete, showModal, viewDocumentsDownload, postClaimAndLossDocumentsToGxb, resetDmsDocumentsUpload, resetDmsDocumentsView, resetDmsDocumentsHistory, resetFilesUploaded, selectDmsDocDetails } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsManageDocuments.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired\n};\nexport default function ClaimsManageDocuments(props) {\n  _s();\n\n  var _savedDmsDocList$mana6, _savedDmsDocList$mana7;\n\n  var activeStep = props.activeStep,\n      isAllStepsCompleted = props.isAllStepsCompleted,\n      handleBack = props.handleBack,\n      handleNext = props.handleNext,\n      index = props.index,\n      isFormsEdited = props.isFormsEdited,\n      onSaveHandle = props.onSaveHandle;\n  var dispatch = useDispatch();\n  var claimDetails = useSelector(selectClaimIdFromGrid);\n  var lossDetails = useSelector(selectLossId);\n  var sectionType = constants.DMS_CONTEXT_CLAIM;\n  var viewDocumentsList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var claimDocuments = [];\n  var lossDocuments = [];\n\n  var updateClaimFileListAfterLinking = function updateClaimFileListAfterLinking() {\n    dispatch(getViewTableDocuments({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType,\n      parentLossRef: lossDetails === null || lossDetails === void 0 ? void 0 : lossDetails.lossRef\n    }));\n  };\n\n  var sendDocumentToGXB = function sendDocumentToGXB(documents) {\n    dispatch(postClaimAndLossDocumentsToGxb({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType,\n      documents: documents\n    }));\n  };\n\n  useEffect(function () {\n    var _savedDmsDocList$mana, _savedDmsDocList$mana2, _savedDmsDocList$mana3, _savedDmsDocList$mana4;\n\n    if (!(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : (_savedDmsDocList$mana = savedDmsDocList.manageDocument) === null || _savedDmsDocList$mana === void 0 ? void 0 : (_savedDmsDocList$mana2 = _savedDmsDocList$mana.lossDocumentDetails) === null || _savedDmsDocList$mana2 === void 0 ? void 0 : _savedDmsDocList$mana2.length) || !(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : (_savedDmsDocList$mana3 = savedDmsDocList.manageDocument) === null || _savedDmsDocList$mana3 === void 0 ? void 0 : (_savedDmsDocList$mana4 = _savedDmsDocList$mana3.claimDocumentDetails) === null || _savedDmsDocList$mana4 === void 0 ? void 0 : _savedDmsDocList$mana4.length)) {\n      updateClaimFileListAfterLinking();\n    }\n\n    return function () {\n      dispatch(resetDmsDocumentsUpload());\n      dispatch(resetDmsDocumentsView());\n      dispatch(resetDmsDocumentsHistory());\n      dispatch(resetFilesUploaded());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var _savedDmsDocList$mana5 = savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.manageDocument,\n      lossDocumentDetails = _savedDmsDocList$mana5.lossDocumentDetails,\n      claimDocumentDetails = _savedDmsDocList$mana5.claimDocumentDetails;\n\n  var exsistedDocumentList = !utils.generic.isInvalidOrEmptyArray(viewDocumentsList) ? viewDocumentsList : [].concat(_toConsumableArray(lossDocumentDetails), _toConsumableArray(claimDocumentDetails));\n  var fields = utils.generic.isValidArray(exsistedDocumentList, true) ? exsistedDocumentList === null || exsistedDocumentList === void 0 ? void 0 : exsistedDocumentList.map(function (eachCheck) {\n    return {\n      name: eachCheck === null || eachCheck === void 0 ? void 0 : eachCheck.documentId.toString(),\n      type: 'checkbox',\n      defaultValue: eachCheck.isSendToGxb\n    };\n  }) : [];\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var checkListForm = useForm(_objectSpread({}, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: true\n    }\n  }));\n  var defaultCheckValues = exsistedDocumentList === null || exsistedDocumentList === void 0 ? void 0 : exsistedDocumentList.filter(function (item) {\n    return !!item.isSendToGxb === true;\n  }).length;\n\n  var _useState = useState(defaultCheckValues === exsistedDocumentList.length),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectAll = _useState2[0],\n      setSelectAll = _useState2[1];\n\n  exsistedDocumentList === null || exsistedDocumentList === void 0 ? void 0 : exsistedDocumentList.forEach(function (item) {\n    if (item === null || item === void 0 ? void 0 : item.isLinkedFromLoss) {\n      lossDocuments.push(item);\n    } else {\n      claimDocuments.push(item);\n    }\n  });\n  var columns = [{\n    id: 'gxb',\n    label: utils.string.t('claims.manageDocumentLabels.gxb'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }, {\n    id: 'filename',\n    label: utils.string.t('claims.manageDocumentLabels.filename'),\n    visible: true,\n    compact: true,\n    align: 'left',\n    width: '25px'\n  }, {\n    id: 'uploadedby',\n    label: utils.string.t('claims.manageDocumentLabels.uploadedby'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }, {\n    id: 'uploadedon',\n    label: utils.string.t('claims.manageDocumentLabels.uploadedon'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }];\n  var popoverActions = [{\n    id: 'download',\n    label: utils.string.t('dms.view.popOverMenuItems.download'),\n    callback: function callback(_ref) {\n      var doc = _ref.doc;\n      return dispatch(viewDocumentsDownload(doc));\n    }\n  }, {\n    id: 'unlink',\n    label: utils.string.t('dms.view.popOverMenuItems.unlink'),\n    callback: function callback(_ref2) {\n      var doc = _ref2.doc;\n      return confirmDocumentUnlink([doc]);\n    }\n  }, {\n    id: 'delete',\n    label: utils.string.t('dms.view.popOverMenuItems.delete'),\n    callback: function callback(_ref3) {\n      var doc = _ref3.doc;\n      return confirmDocumentDelete([doc]);\n    }\n  }, {\n    id: 'versionHistory',\n    label: utils.string.t('dms.view.popOverMenuItems.versionHistory'),\n    callback: function callback(_ref4) {\n      var doc = _ref4.doc;\n      return showVersionHistoryModal(doc);\n    }\n  }];\n  var searchFields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: utils.string.t('claims.manageDocumentLabels.searchPlaceholder'),\n    defaultValue: '',\n    gridSize: {\n      xs: 12\n    },\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }];\n  var searchActions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {}\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: {}\n  }];\n\n  var confirmDocumentUnlink = function confirmDocumentUnlink(docs) {\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n      return {\n        documentId: d.documentId,\n        referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n        sectionType: sectionType\n      };\n    });\n    var requestParamsLength = requestParams === null || requestParams === void 0 ? void 0 : requestParams.length;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.unlinkDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.unlinkDocument.confirmLabel'),\n          confirmMessage: requestParamsLength === 1 ? utils.string.t('dms.view.unlinkDocument.confirmMessage') : utils.string.t('dms.view.unlinkDocument.confirmMessageForMulti', {\n            count: requestParamsLength\n          }),\n          submitHandler: function submitHandler() {\n            return dispatch(unlinkDmsViewDocuments(requestParams)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                updateClaimFileListAfterLinking();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var confirmDocumentDelete = function confirmDocumentDelete(docs) {\n    var documentIds = docs === null || docs === void 0 ? void 0 : docs.map(function (doc) {\n      return doc.documentId;\n    });\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.deleteDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\n          confirmMessage: utils.string.t('dms.view.deleteDocument.confirmMessage'),\n          submitHandler: function submitHandler() {\n            return dispatch(viewDocumentsDelete(documentIds)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                updateClaimFileListAfterLinking();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var showVersionHistoryModal = function showVersionHistoryModal(docData) {\n    dispatch(showModal({\n      component: 'DMS_VERSION_HISTORY',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.versionHistory.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          docData: docData\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsManageDocumentsView, {\n    activeStep: activeStep,\n    isAllStepsCompleted: isAllStepsCompleted,\n    handleBack: handleBack,\n    handleNext: handleNext,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    onSaveHandle: onSaveHandle,\n    col: columns,\n    fields: fields,\n    rows: exsistedDocumentList,\n    formControls: checkListForm,\n    popoverActions: popoverActions,\n    searchFields: searchFields,\n    searchActions: searchActions,\n    claimDocuments: (viewDocumentsList === null || viewDocumentsList === void 0 ? void 0 : viewDocumentsList.length) ? claimDocuments : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : (_savedDmsDocList$mana6 = savedDmsDocList.manageDocument) === null || _savedDmsDocList$mana6 === void 0 ? void 0 : _savedDmsDocList$mana6.claimDocumentDetails,\n    lossDocuments: (viewDocumentsList === null || viewDocumentsList === void 0 ? void 0 : viewDocumentsList.length) ? lossDocuments : savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : (_savedDmsDocList$mana7 = savedDmsDocList.manageDocument) === null || _savedDmsDocList$mana7 === void 0 ? void 0 : _savedDmsDocList$mana7.lossDocumentDetails,\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking,\n    sendDocumentToGXB: sendDocumentToGXB,\n    selectAll: selectAll,\n    setSelectAll: setSelectAll\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsManageDocuments, \"qWrtnWyMiWlnF+X9HX+86IBkIz8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = ClaimsManageDocuments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsManageDocuments\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsManageDocuments/ClaimsManageDocuments.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","ClaimsManageDocumentsView","selectorDmsViewFiles","getViewTableDocuments","selectClaimIdFromGrid","selectLossId","unlinkDmsViewDocuments","viewDocumentsDelete","showModal","viewDocumentsDownload","postClaimAndLossDocumentsToGxb","resetDmsDocumentsUpload","resetDmsDocumentsView","resetDmsDocumentsHistory","resetFilesUploaded","selectDmsDocDetails","utils","constants","useForm","yupResolver","ClaimsManageDocuments","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","props","index","isFormsEdited","onSaveHandle","dispatch","claimDetails","lossDetails","sectionType","DMS_CONTEXT_CLAIM","viewDocumentsList","savedDmsDocList","claimDocuments","lossDocuments","updateClaimFileListAfterLinking","referenceId","claimReference","parentLossRef","lossRef","sendDocumentToGXB","documents","manageDocument","lossDocumentDetails","length","claimDocumentDetails","exsistedDocumentList","generic","isInvalidOrEmptyArray","fields","isValidArray","map","eachCheck","name","documentId","toString","type","defaultValue","isSendToGxb","validationSchema","form","getValidationSchema","checkListForm","resolver","context","validation","defaultCheckValues","filter","item","selectAll","setSelectAll","forEach","isLinkedFromLoss","push","columns","id","label","string","t","visible","compact","align","width","popoverActions","callback","doc","confirmDocumentUnlink","confirmDocumentDelete","showVersionHistoryModal","searchFields","placeholder","gridSize","xs","muiComponentProps","autoComplete","searchActions","handler","values","docs","requestParams","d","requestParamsLength","component","fullWidth","title","maxWidth","componentProps","confirmLabel","confirmMessage","count","submitHandler","then","response","status","API_RESPONSE_OK","documentIds","docData"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ClaimsManageDocumentsView } from './ClaimsManageDocuments.view';\r\nimport {\r\n  selectorDmsViewFiles, getViewTableDocuments, selectClaimIdFromGrid, selectLossId,\r\n  unlinkDmsViewDocuments, viewDocumentsDelete, showModal, viewDocumentsDownload, postClaimAndLossDocumentsToGxb,\r\n  resetDmsDocumentsUpload,\r\n  resetDmsDocumentsView,\r\n  resetDmsDocumentsHistory,\r\n  resetFilesUploaded,\r\n  selectDmsDocDetails\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nClaimsManageDocuments.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function ClaimsManageDocuments(props) {\r\n  const {\r\n    activeStep,\r\n    isAllStepsCompleted,\r\n    handleBack,\r\n    handleNext,\r\n    index,\r\n    isFormsEdited,\r\n    onSaveHandle,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch()\r\n  const claimDetails = useSelector(selectClaimIdFromGrid)\r\n  const lossDetails = useSelector(selectLossId)\r\n  const sectionType = constants.DMS_CONTEXT_CLAIM;\r\n\r\n  const viewDocumentsList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n\r\n  const claimDocuments = [];\r\n  const lossDocuments = [];\r\n\r\n  const updateClaimFileListAfterLinking = () => {\r\n    dispatch(getViewTableDocuments({ referenceId: claimDetails?.claimReference, sectionType, parentLossRef: lossDetails?.lossRef }));\r\n  }\r\n\r\n  const sendDocumentToGXB = (documents) => {\r\n    dispatch(postClaimAndLossDocumentsToGxb({ referenceId: claimDetails?.claimReference, sectionType: sectionType, documents: documents }))\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!savedDmsDocList?.manageDocument?.lossDocumentDetails?.length ||\r\n        !savedDmsDocList?.manageDocument?.claimDocumentDetails?.length) {\r\n        updateClaimFileListAfterLinking();\r\n      }\r\n      return () => {\r\n        dispatch(resetDmsDocumentsUpload());\r\n        dispatch(resetDmsDocumentsView());\r\n        dispatch(resetDmsDocumentsHistory());\r\n        dispatch(resetFilesUploaded());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const { lossDocumentDetails, claimDocumentDetails } = savedDmsDocList?.manageDocument;\r\n  let exsistedDocumentList = !utils.generic.isInvalidOrEmptyArray(viewDocumentsList) ?\r\n    viewDocumentsList : [...lossDocumentDetails, ...claimDocumentDetails];\r\n\r\n  const fields = utils.generic.isValidArray(exsistedDocumentList, true)\r\n    ? exsistedDocumentList?.map((eachCheck) => ({\r\n      name: eachCheck?.documentId.toString(),\r\n      type: 'checkbox',\r\n      defaultValue: eachCheck.isSendToGxb,\r\n    }))\r\n    : [];\r\n\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const checkListForm = useForm({\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation: true } }),\r\n  });\r\n\r\n\r\n  const defaultCheckValues = exsistedDocumentList?.filter(item => !!item.isSendToGxb === true).length;\r\n  const [selectAll, setSelectAll] = useState(defaultCheckValues === exsistedDocumentList.length);\r\n\r\n  exsistedDocumentList?.forEach((item) => {\r\n    if (item?.isLinkedFromLoss) {\r\n      lossDocuments.push(item)\r\n    } else {\r\n      claimDocuments.push(item);\r\n    }\r\n  })\r\n\r\n  const columns = [\r\n    {\r\n      id: 'gxb',\r\n      label: utils.string.t('claims.manageDocumentLabels.gxb'),\r\n      visible: true,\r\n      compact: true,\r\n      align: 'left'\r\n    },\r\n    {\r\n      id: 'filename',\r\n      label: utils.string.t('claims.manageDocumentLabels.filename'),\r\n      visible: true,\r\n      compact: true,\r\n      align: 'left',\r\n      width: '25px'\r\n    },\r\n    {\r\n      id: 'uploadedby',\r\n      label: utils.string.t('claims.manageDocumentLabels.uploadedby'),\r\n      visible: true,\r\n      compact: true,\r\n      align: 'left'\r\n    },\r\n    {\r\n      id: 'uploadedon',\r\n      label: utils.string.t('claims.manageDocumentLabels.uploadedon'),\r\n      visible: true,\r\n      compact: true,\r\n      align: 'left'\r\n    }\r\n  ];\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'download',\r\n      label: utils.string.t('dms.view.popOverMenuItems.download'),\r\n      callback: ({ doc }) => dispatch(viewDocumentsDownload(doc)),\r\n    },\r\n    {\r\n      id: 'unlink',\r\n      label: utils.string.t('dms.view.popOverMenuItems.unlink'),\r\n      callback: ({ doc }) => confirmDocumentUnlink([doc]),\r\n    },\r\n    {\r\n      id: 'delete',\r\n      label: utils.string.t('dms.view.popOverMenuItems.delete'),\r\n      callback: ({ doc }) => confirmDocumentDelete([doc]),\r\n    },\r\n    {\r\n      id: 'versionHistory',\r\n      label: utils.string.t('dms.view.popOverMenuItems.versionHistory'),\r\n      callback: ({ doc }) => showVersionHistoryModal(doc),\r\n    },\r\n\r\n  ];\r\n\r\n  const searchFields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: utils.string.t('claims.manageDocumentLabels.searchPlaceholder'),\r\n      defaultValue: '',\r\n      gridSize: { xs: 12 },\r\n      muiComponentProps: {\r\n        autoComplete: 'off'\r\n      },\r\n    },\r\n  ];\r\n\r\n  const searchActions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.searchLabel'),\r\n      handler: (values) => { },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: {},\r\n    },\r\n  ];\r\n\r\n  const confirmDocumentUnlink = (docs) => {\r\n    const requestParams = docs?.map((d) => {\r\n      return {\r\n        documentId: d.documentId,\r\n        referenceId: claimDetails?.claimReference,\r\n        sectionType: sectionType,\r\n      };\r\n    });\r\n    const requestParamsLength = requestParams?.length;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.unlinkDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.unlinkDocument.confirmLabel'),\r\n            confirmMessage:\r\n              requestParamsLength === 1\r\n                ? utils.string.t('dms.view.unlinkDocument.confirmMessage')\r\n                : utils.string.t('dms.view.unlinkDocument.confirmMessageForMulti', {\r\n                  count: requestParamsLength,\r\n                }),\r\n            submitHandler: () =>\r\n              dispatch(unlinkDmsViewDocuments(requestParams)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  updateClaimFileListAfterLinking();\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n  const confirmDocumentDelete = (docs) => {\r\n    const documentIds = docs?.map((doc) => doc.documentId);\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.deleteDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\r\n            confirmMessage:\r\n              utils.string.t('dms.view.deleteDocument.confirmMessage'),\r\n            submitHandler: () =>\r\n              dispatch(viewDocumentsDelete(documentIds)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  updateClaimFileListAfterLinking();\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const showVersionHistoryModal = (docData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_VERSION_HISTORY',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.versionHistory.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            docData: docData,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n\r\n  return (\r\n    <ClaimsManageDocumentsView\r\n      activeStep={activeStep}\r\n      isAllStepsCompleted={isAllStepsCompleted}\r\n      handleBack={handleBack}\r\n      handleNext={handleNext}\r\n      index={index}\r\n      isFormsEdited={isFormsEdited}\r\n      onSaveHandle={onSaveHandle}\r\n      col={columns}\r\n      fields={fields}\r\n      rows={exsistedDocumentList}\r\n      formControls={checkListForm}\r\n      popoverActions={popoverActions}\r\n      searchFields={searchFields}\r\n      searchActions={searchActions}\r\n      claimDocuments={viewDocumentsList?.length ? claimDocuments : savedDmsDocList?.manageDocument?.claimDocumentDetails}\r\n      lossDocuments={viewDocumentsList?.length ? lossDocuments : savedDmsDocList?.manageDocument?.lossDocumentDetails}\r\n      updateClaimFileListAfterLinking={updateClaimFileListAfterLinking}\r\n      sendDocumentToGXB={sendDocumentToGXB}\r\n      selectAll={selectAll}\r\n      setSelectAll={setSelectAll}\r\n    />\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}