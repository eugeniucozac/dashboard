{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexData\\\\ClaimsComplexData.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport get from 'lodash/get'; //app\n\nimport * as utils from 'utils';\nimport styles from './ClaimsComplexData.styles';\nimport { Button, FormCheckbox, TableCell, Overflow, TableHead, Search, Pagination, Empty, Tooltip } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks'; //mui\n\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ClaimsComplexDataView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      setData = _ref.setData,\n      searchBy = _ref.searchBy,\n      checkedBy = _ref.checkedBy,\n      control = _ref.control,\n      register = _ref.register,\n      watch = _ref.watch,\n      handleSort = _ref.handleSort,\n      handleSearch = _ref.handleSearch,\n      handleReset = _ref.handleReset,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      saveComplexButton = _ref.saveComplexButton,\n      selectedPolicyItemsHandler = _ref.selectedPolicyItemsHandler,\n      complexityFlag = _ref.complexityFlag,\n      postSaveComplexPolicyHandler = _ref.postSaveComplexPolicyHandler,\n      enableDisableFlag = _ref.enableDisableFlag,\n      selectedPoliciesData = _ref.selectedPoliciesData,\n      title = _ref.title;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsSelectData'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\n  var cellLength = 25;\n  var fields = rows.items && rows.items.length && rows.items.map(function (field) {\n    return {\n      name: field[checkedBy],\n      type: 'checkbox',\n      disabled: complexityFlag ? field.complexityFlag : false,\n      defaultValue: complexityFlag ? field.complexityFlag || enableDisableFlag(field[checkedBy]) : false\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.searchWrapper,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            text: \"\",\n            placeholder: \"\",\n            minChars: 4,\n            nestedClasses: {\n              root: classes.search\n            },\n            handlers: {\n              search: handleSearch,\n              reset: handleReset\n            }\n          }, \"key\", false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: utils.string.t('claims.searchPolicy.minimumCharacters')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          ml: 2,\n          className: classes.tableWrapper,\n          children: rows.items ? rows.items.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Overflow, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"data-testid\": \"claims-table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: cols,\n                  sorting: sort,\n                  nestedClasses: {\n                    tableHead: classes.tableHead\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  \"data-testid\": \"claims-list\",\n                  children: rows.items.map(function (item) {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: cols.map(function (col, i) {\n                        if (col.id === 'actions') {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            compact: true,\n                            \"data-testid\": \"row-col-\".concat(item[checkedBy]),\n                            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, item[checkedBy])), {}, {\n                              control: control,\n                              register: register,\n                              watch: watch,\n                              muiComponentProps: {\n                                onChange: function onChange(id, checked) {\n                                  return complexityFlag ? selectedPolicyItemsHandler(id, checked, item) : null;\n                                }\n                              }\n                            }), void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 89,\n                              columnNumber: 39\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 88,\n                            columnNumber: 37\n                          }, _this);\n                        }\n\n                        if (col.id === 'riskDetails') {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            \"data-testid\": \"row-col-\".concat(item[col.id]),\n                            children: item[col.id].length > cellLength ? /*#__PURE__*/_jsxDEV(Tooltip, {\n                              block: true,\n                              title: item[col.id],\n                              children: [item[col.id].slice(0, cellLength), \"...\"]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 106,\n                              columnNumber: 41\n                            }, _this) : item[col.id]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 104,\n                            columnNumber: 37\n                          }, _this);\n                        }\n\n                        if (col.id === 'company') {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            \"data-testid\": \"row-col-\".concat(item[col.id]),\n                            children: /*#__PURE__*/_jsxDEV(\"strong\", {\n                              children: item[col.id]\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 118,\n                              columnNumber: 39\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 117,\n                            columnNumber: 37\n                          }, _this);\n                        } else {\n                          return /*#__PURE__*/_jsxDEV(TableCell, {\n                            \"data-testid\": \"row-col-\".concat(item[col.id]),\n                            children: item[col.id]\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 122,\n                            columnNumber: 42\n                          }, _this);\n                        }\n                      })\n                    }, item[checkedBy], false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 84,\n                      columnNumber: 29\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Pagination, {\n                  page: get(paginationObj, 'obj.page'),\n                  count: get(paginationObj, 'obj.rowsTotal'),\n                  rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n                  onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n                  onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 23\n                }, this), saveComplexButton && /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mt: 3,\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      text: utils.string.t('claims.complexityRulesManagementDetails.saveAsComplex'),\n                      onClick: function onClick() {\n                        return postSaveComplexPolicyHandler();\n                      },\n                      disabled: (selectedPoliciesData === null || selectedPoliciesData === void 0 ? void 0 : selectedPoliciesData.length) === 0 ? true : false,\n                      color: \"primary\",\n                      size: \"medium\",\n                      nestedClasses: {\n                        btn: classes.actionButton\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 143,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 142,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 141,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 132,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Empty, {\n              title: utils.string.t('claims.noMatchFound'),\n              text: utils.string.t('claims.noMatchDetails'),\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 27\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Empty, {\n              title: utils.string.t('claims.noMatchFound'),\n              text: utils.string.t('claims.noMatchDetails'),\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 172,\n                columnNumber: 25\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 168,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsComplexDataView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = ClaimsComplexDataView;\nClaimsComplexDataView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexDataView\",\n  \"props\": {\n    \"rows\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexData\\\\ClaimsComplexData.view.js\"] = {\n    name: \"ClaimsComplexDataView\",\n    docgenInfo: ClaimsComplexDataView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexData\\\\ClaimsComplexData.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexDataView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexData/ClaimsComplexData.view.js"],"names":["React","get","utils","styles","Button","FormCheckbox","TableCell","Overflow","TableHead","Search","Pagination","Empty","Tooltip","usePagination","useSort","makeStyles","Grid","Table","TableRow","TableBody","Typography","Box","ClaimsComplexDataView","colsArr","cols","rows","sortObj","sort","pagination","setData","searchBy","checkedBy","control","register","watch","handleSort","handleSearch","handleReset","handleChangePage","handleChangeRowsPerPage","saveComplexButton","selectedPolicyItemsHandler","complexityFlag","postSaveComplexPolicyHandler","enableDisableFlag","selectedPoliciesData","title","classes","name","paginationObj","cellLength","fields","items","length","map","field","type","disabled","defaultValue","searchWrapper","root","search","reset","string","t","tableWrapper","tableHead","item","col","i","id","form","getFieldProps","onChange","checked","slice","btn","actionButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport styles from './ClaimsComplexData.styles';\r\nimport { Button, FormCheckbox, TableCell, Overflow, TableHead, Search, Pagination, Empty, Tooltip } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\r\n\r\nexport function ClaimsComplexDataView({\r\n  cols: colsArr,\r\n  rows = [],\r\n  sort: sortObj,\r\n  pagination,\r\n  setData,\r\n  searchBy,\r\n  checkedBy,\r\n  control,\r\n  register,\r\n  watch,\r\n  handleSort,\r\n  handleSearch,\r\n  handleReset,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  saveComplexButton,\r\n  selectedPolicyItemsHandler,\r\n  complexityFlag,\r\n  postSaveComplexPolicyHandler,\r\n  enableDisableFlag,\r\n  selectedPoliciesData,\r\n  title,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsSelectData' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\r\n  const cellLength = 25;\r\n\r\n  const fields =\r\n    rows.items &&\r\n    rows.items.length &&\r\n    rows.items.map((field) => ({\r\n      name: field[checkedBy],\r\n      type: 'checkbox',\r\n      disabled: complexityFlag ? field.complexityFlag : false,\r\n      defaultValue: complexityFlag ? field.complexityFlag || enableDisableFlag(field[checkedBy]) : false,\r\n    }));\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.searchWrapper}>\r\n          <Box>\r\n            <Typography variant=\"h5\">{title}</Typography>\r\n            <Search\r\n              key=\"key\"\r\n              text=\"\"\r\n              placeholder=\"\"\r\n              minChars={4}\r\n              nestedClasses={{ root: classes.search }}\r\n              handlers={{\r\n                search: handleSearch,\r\n                reset: handleReset,\r\n              }}\r\n            />\r\n            <Typography variant=\"h5\">{utils.string.t('claims.searchPolicy.minimumCharacters')}</Typography>\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box ml={2} className={classes.tableWrapper}>\r\n            {rows.items ? (\r\n              rows.items.length ? (\r\n                <>\r\n                  <Overflow>\r\n                    <Table data-testid=\"claims-table\">\r\n                      <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                      <TableBody data-testid=\"claims-list\">\r\n                        {rows.items.map((item) => {\r\n                          return (\r\n                            <TableRow key={item[checkedBy]} hover>\r\n                              {cols.map((col, i) => {\r\n                                if (col.id === 'actions') {\r\n                                  return (\r\n                                    <TableCell compact data-testid={`row-col-${item[checkedBy]}`}>\r\n                                      <FormCheckbox\r\n                                        {...utils.form.getFieldProps(fields, item[checkedBy])}\r\n                                        control={control}\r\n                                        register={register}\r\n                                        watch={watch}\r\n                                        muiComponentProps={{\r\n                                          onChange: (id, checked) =>\r\n                                            complexityFlag ? selectedPolicyItemsHandler(id, checked, item) : null,\r\n                                        }}\r\n                                      />\r\n                                    </TableCell>\r\n                                  );\r\n                                }\r\n                                if (col.id === 'riskDetails') {\r\n                                  return (\r\n                                    <TableCell data-testid={`row-col-${item[col.id]}`}>\r\n                                      {item[col.id].length > cellLength ? (\r\n                                        <Tooltip block title={item[col.id]}>\r\n                                          {item[col.id].slice(0, cellLength)}...\r\n                                        </Tooltip>\r\n                                      ) : (\r\n                                        item[col.id]\r\n                                      )}\r\n                                    </TableCell>\r\n                                  );\r\n                                }\r\n                                if (col.id === 'company') {\r\n                                  return (\r\n                                    <TableCell data-testid={`row-col-${item[col.id]}`}>\r\n                                      <strong>{item[col.id]}</strong>\r\n                                    </TableCell>\r\n                                  );\r\n                                } else {\r\n                                  return <TableCell data-testid={`row-col-${item[col.id]}`}>{item[col.id]}</TableCell>;\r\n                                }\r\n                              })}\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Overflow>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Pagination\r\n                        page={get(paginationObj, 'obj.page')}\r\n                        count={get(paginationObj, 'obj.rowsTotal')}\r\n                        rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                        onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                        onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n                      />\r\n                      {saveComplexButton && (\r\n                        <Grid item xs={12}>\r\n                          <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n                            <Button\r\n                              text={utils.string.t('claims.complexityRulesManagementDetails.saveAsComplex')}\r\n                              onClick={() => postSaveComplexPolicyHandler()}\r\n                              disabled={selectedPoliciesData?.length === 0 ? true : false}\r\n                              color=\"primary\"\r\n                              size=\"medium\"\r\n                              nestedClasses={{ btn: classes.actionButton }}\r\n                            />\r\n                          </Box>\r\n                        </Grid>\r\n                      )}\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Empty\r\n                    title={utils.string.t('claims.noMatchFound')}\r\n                    text={utils.string.t('claims.noMatchDetails')}\r\n                    icon={<IconSearchFile />}\r\n                    padding\r\n                  />\r\n                </Grid>\r\n              )\r\n            ) : (\r\n              <Grid item xs={12}>\r\n                <Empty\r\n                  title={utils.string.t('claims.noMatchFound')}\r\n                  text={utils.string.t('claims.noMatchDetails')}\r\n                  icon={<IconSearchFile />}\r\n                  padding\r\n                />\r\n              </Grid>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}