{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var searchPiIds = function searchPiIds(query) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.searchPiIds'\n    };\n    dispatch(searchPiIdsRequest(query));\n\n    if (!query) {\n      dispatch(searchPiIdsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing processing instruction id'\n      })));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: \"instruction/refdata/instructionId/\".concat(query)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (data) {\n      dispatch(searchPiIdsSuccess(data.data));\n      return data.data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.searchPiIds)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(searchPiIdsFailure(err));\n      return err;\n    });\n  };\n};\nexport var searchPiIdsRequest = function searchPiIdsRequest(query) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_REQUEST',\n    payload: query\n  };\n};\nexport var searchPiIdsSuccess = function searchPiIdsSuccess(responseData) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_SUCCESS',\n    payload: responseData\n  };\n};\nexport var searchPiIdsFailure = function searchPiIdsFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.searchPiIds.js"],"names":["utils","authLogout","searchPiIds","query","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","searchPiIdsRequest","searchPiIdsFailure","message","api","get","token","accessToken","ppService","path","then","response","handleResponse","data","handleNewData","searchPiIdsSuccess","err","handleError","handleUnauthorized","type","payload","responseData","error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAW,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5D;AAD4D,oBAEHA,QAAQ,EAFL;AAAA,QAE5CC,IAF4C,aAEpDC,IAFoD,CAE5CD,IAF4C;AAAA,QAElBE,QAFkB,aAEpCC,MAFoC,CAE1BC,IAF0B,CAElBF,QAFkB;;AAI5D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,kBAAkB,CAACV,KAAD,CAAnB,CAAR;;AAEA,QAAI,CAACA,KAAL,EAAY;AACVC,MAAAA,QAAQ,CAACU,kBAAkB,iCAAMH,YAAN;AAAoBI,QAAAA,OAAO,EAAE;AAA7B,SAAnB,CAAR;AACA;AACD;;AAED,WAAOf,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,SAFhB;AAGHC,MAAAA,IAAI,8CAAuClB,KAAvC;AAHD,KADA,EAMJmB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACgB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACgB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACG,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACuB,kBAAkB,CAACF,IAAI,CAACA,IAAN,CAAnB,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAXI,WAYE,UAACG,GAAD,EAAS;AACd5B,MAAAA,KAAK,CAACgB,GAAN,CAAUa,WAAV,CAAsBD,GAAtB,kCAAgCjB,YAAhC;AAA8CI,QAAAA,OAAO,EAAE;AAAvD;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CH,UAA5C;AACAG,MAAAA,QAAQ,CAACU,kBAAkB,CAACc,GAAD,CAAnB,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,CAAP;AAkBD,GAjC0B;AAAA,CAApB;AAmCP,OAAO,IAAMf,kBAAkB,GAAG,SAArBA,kBAAqB,CAACV,KAAD,EAAW;AAC3C,SAAO;AACL4B,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAE7B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACM,YAAD,EAAkB;AAClD,SAAO;AACLF,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMnB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACoB,KAAD,EAAW;AAC3C,SAAO;AACLH,IAAAA,IAAI,EAAE,+CADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const searchPiIds = (query) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.searchPiIds',\r\n  };\r\n\r\n  dispatch(searchPiIdsRequest(query));\r\n\r\n  if (!query) {\r\n    dispatch(searchPiIdsFailure({ ...defaultError, message: 'Missing processing instruction id' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: `instruction/refdata/instructionId/${query}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => utils.api.handleNewData(data))\r\n    .then((data) => {\r\n      dispatch(searchPiIdsSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.searchPiIds)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(searchPiIdsFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const searchPiIdsRequest = (query) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_REQUEST',\r\n    payload: query,\r\n  };\r\n};\r\n\r\nexport const searchPiIdsSuccess = (responseData) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const searchPiIdsFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_SEARCH_PI_IDS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}