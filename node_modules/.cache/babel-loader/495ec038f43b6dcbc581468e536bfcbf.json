{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\BulkUpdateLayer\\\\BulkUpdateLayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { makeStyles } from '@material-ui/core';\nimport isNumber from 'lodash/isNumber'; // app\n\nimport { BulkUpdateLayerView } from './BulkUpdateLayer.view';\nimport styles from './BulkUpdateLayer.styles';\nimport { enqueueNotification, hideModal, postPlacementBulkLayer, selectRefDataStatusesMarketQuote, selectPlacementBulkType, selectPlacementBulkItemsLayers, selectPlacementBulkItemsMarkets, selectRefDataCurrencies, selectPlacementLayers, selectRefDataStatusIdByCode } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nBulkUpdateLayer.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  isLayerBulkEdit: PropTypes.bool\n};\nexport default function BulkUpdateLayer(_ref) {\n  _s();\n\n  var handleClose = _ref.handleClose,\n      isLayerBulkEdit = _ref.isLayerBulkEdit;\n  var classes = makeStyles(styles, {\n    name: 'BulkUpdateLayer'\n  })();\n  var dispatch = useDispatch();\n  var placementBulkType = useSelector(selectPlacementBulkType);\n  var placementBulkItems = useSelector(selectPlacementBulkItemsLayers);\n  var placementBulkItemMarkets = useSelector(selectPlacementBulkItemsMarkets);\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var refDataCurrencies = useSelector(selectRefDataCurrencies);\n  var placementLayers = useSelector(selectPlacementLayers);\n  var statusQuotedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_QUOTED));\n  var marketSpecificFields = ['statusId', 'premium', 'isoCode', 'uniqueMarketReference', 'section', 'written', 'quoteDate', 'validUntilDate', 'subjectivities'];\n  useEffect(function () {\n    if (!refDataStatusesMarketQuote || !refDataStatusesMarketQuote.length > 0) {\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.generic.reload', 'error'));\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var isLayerMarketAmountRequired = function isLayerMarketAmountRequired(form, value) {\n    if (isNumber(value)) return true;\n    return !form.layerMarket_statusId || form.layerMarket_statusId.toString() !== statusQuotedId.toString();\n  };\n\n  var getUmrOptions = function getUmrOptions() {\n    var umrSet = new Set();\n\n    if (utils.generic.isValidArray(placementLayers)) {\n      placementLayers.forEach(function (layer) {\n        if (utils.generic.isValidArray(layer.markets)) {\n          layer.markets.forEach(function (market) {\n            var umr = market.uniqueMarketReference;\n\n            if (umr) {\n              umrSet.add(market.uniqueMarketReference);\n            }\n          });\n        }\n      });\n    }\n\n    return _toConsumableArray(umrSet).sort().map(function (umr) {\n      return {\n        id: umr,\n        label: umr\n      };\n    });\n  };\n\n  var umrOptions = getUmrOptions();\n  var fields = [{\n    name: 'isoCode',\n    type: 'select',\n    value: '',\n    options: refDataCurrencies,\n    optionKey: 'code',\n    optionLabel: 'code',\n    label: utils.string.t('placement.form.currency.label'),\n    nestedClasses: {\n      root: classes.isoCode\n    }\n  }, {\n    name: 'uniqueMarketReference',\n    type: 'autocompletemui',\n    label: utils.string.t('placement.form.uniqueMarketReference.label'),\n    value: null,\n    options: umrOptions,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'label',\n    muiComponentProps: {\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params); // Suggest the creation of a new value\n\n        if (params.inputValue !== '') {\n          filtered.push({\n            id: params.inputValue,\n            label: \"\".concat(utils.string.t('app.add'), \" \\\"\").concat(params.inputValue, \"\\\"\")\n          });\n        }\n\n        return filtered;\n      }\n    },\n    validation: Yup.object({\n      id: Yup.string().matches(/^[a-zA-Z0-9]*$/, utils.string.t('validation.string.alphaNumericOnly'))\n    }).nullable()\n  }, {\n    name: 'section',\n    type: 'text',\n    label: utils.string.t('placement.form.section.label'),\n    value: '',\n    validation: Yup.string().trim().max(2).uppercase().matches(/^[A-Z]{0,2}$/, utils.string.t('validation.string.alphaOnly')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 2\n      },\n      InputProps: {\n        classes: {\n          input: classes.section\n        }\n      }\n    }\n  }, {\n    name: 'statusId',\n    type: 'select',\n    label: utils.string.t('placement.marketing.fields.status'),\n    value: '',\n    options: refDataStatusesMarketQuote,\n    optionKey: 'id',\n    optionLabel: 'code'\n  }, {\n    name: 'premium',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('placement.form.premium.label')\n  }, {\n    name: 'written',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).max(100).percent().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }).test('written', utils.string.t('validation.required'), function () {\n      return isLayerMarketAmountRequired(this.options.parent, this.options.parent.layerMarket_writtenLinePercentage);\n    }),\n    label: utils.string.t('placement.form.written.label'),\n    muiComponentProps: {\n      autoComplete: 'off',\n      fullWidth: false\n    }\n  }, {\n    name: 'quoteDate',\n    type: 'datepicker',\n    icon: 'TodayIcon',\n    label: utils.string.t('placement.form.quoteReceived.label'),\n    value: null,\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }, {\n    name: 'validUntilDate',\n    type: 'datepicker',\n    label: utils.string.t('placement.form.quoteExpiry.label'),\n    value: null,\n    muiComponentProps: {\n      fullWidth: true\n    },\n    muiPickerProps: {\n      clearable: true\n    }\n  }, {\n    name: 'subjectivities',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.subjectivities.label'),\n    muiComponentProps: {\n      multiline: true,\n      minRows: 1,\n      maxRows: 6\n    }\n  }, {\n    name: 'delete',\n    type: 'checkbox',\n    value: false,\n    label: utils.string.t('placement.form.delete.label', {\n      count: isLayerBulkEdit ? placementBulkItems.length : placementBulkItemMarkets.length,\n      type: \"placement.generic.\".concat(isLayerBulkEdit ? 'layer' : 'line')\n    })\n  }, {\n    name: 'deleteConfirm',\n    type: 'text',\n    value: '',\n    validation: Yup.string().test('deleteConfirm', utils.string.t('form.deleteConfirm.required'), function () {\n      var parent = this.options.parent;\n      return parent.delete ? parent.deleteConfirm === 'Delete' : true;\n    }),\n    label: utils.string.t('form.deleteConfirm.label'),\n    hint: utils.string.t('form.deleteConfirm.hint'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }]; // remove fields specific to market if bulk type is layer\n\n  var fieldsFiltered = fields.filter(function (field) {\n    return !(placementBulkType === 'layer' && marketSpecificFields.includes(field.name));\n  });\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      if (isLayerBulkEdit) {\n        dispatch(postPlacementBulkLayer(values, 'layer'));\n      } else {\n        dispatch(postPlacementBulkLayer(values, 'layerMarket'));\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(BulkUpdateLayerView, {\n    fields: fieldsFiltered,\n    actions: actions,\n    isBulkLayer: isLayerBulkEdit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 10\n  }, this);\n}\n\n_s(BulkUpdateLayer, \"CKNRJtLg0llZFQugaSHEG1uBsW0=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = BulkUpdateLayer;\n\nvar _c;\n\n$RefreshReg$(_c, \"BulkUpdateLayer\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/BulkUpdateLayer/BulkUpdateLayer.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Yup","createFilterOptions","makeStyles","isNumber","BulkUpdateLayerView","styles","enqueueNotification","hideModal","postPlacementBulkLayer","selectRefDataStatusesMarketQuote","selectPlacementBulkType","selectPlacementBulkItemsLayers","selectPlacementBulkItemsMarkets","selectRefDataCurrencies","selectPlacementLayers","selectRefDataStatusIdByCode","utils","constants","BulkUpdateLayer","propTypes","handleClose","func","isRequired","isLayerBulkEdit","bool","classes","name","dispatch","placementBulkType","placementBulkItems","placementBulkItemMarkets","refDataStatusesMarketQuote","refDataCurrencies","placementLayers","statusQuotedId","STATUS_MARKET_QUOTED","marketSpecificFields","length","isLayerMarketAmountRequired","form","value","layerMarket_statusId","toString","getUmrOptions","umrSet","Set","generic","isValidArray","forEach","layer","markets","market","umr","uniqueMarketReference","add","sort","map","id","label","umrOptions","fields","type","options","optionKey","optionLabel","string","t","nestedClasses","root","isoCode","optionsCreatable","muiComponentProps","filterOptions","params","filtered","inputValue","push","validation","object","matches","nullable","trim","max","uppercase","inputProps","maxLength","InputProps","input","section","number","min","currency","transform","originalvalue","isType","Number","isNaN","percent","test","parent","layerMarket_writtenLinePercentage","autoComplete","fullWidth","icon","muiPickerProps","clearable","multiline","minRows","maxRows","count","delete","deleteConfirm","hint","fieldsFiltered","filter","field","includes","actions","handler","values"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,SAASC,mBAAT,QAAoC,+BAApC;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,QAAP,MAAqB,iBAArB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SACEC,mBADF,EAEEC,SAFF,EAGEC,sBAHF,EAIEC,gCAJF,EAKEC,uBALF,EAMEC,8BANF,EAOEC,+BAPF,EAQEC,uBARF,EASEC,qBATF,EAUEC,2BAVF,QAWO,QAXP;AAYA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,WAAW,EAAEvB,SAAS,CAACwB,IAAV,CAAeC,UADF;AAE1BC,EAAAA,eAAe,EAAE1B,SAAS,CAAC2B;AAFD,CAA5B;AAKA,eAAe,SAASN,eAAT,OAA2D;AAAA;;AAAA,MAAhCE,WAAgC,QAAhCA,WAAgC;AAAA,MAAnBG,eAAmB,QAAnBA,eAAmB;AACxE,MAAME,OAAO,GAAGvB,UAAU,CAACG,MAAD,EAAS;AAAEqB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAG7B,WAAW,EAA5B;AACA,MAAM8B,iBAAiB,GAAG7B,WAAW,CAACW,uBAAD,CAArC;AACA,MAAMmB,kBAAkB,GAAG9B,WAAW,CAACY,8BAAD,CAAtC;AACA,MAAMmB,wBAAwB,GAAG/B,WAAW,CAACa,+BAAD,CAA5C;AACA,MAAMmB,0BAA0B,GAAGhC,WAAW,CAACU,gCAAD,CAA9C;AACA,MAAMuB,iBAAiB,GAAGjC,WAAW,CAACc,uBAAD,CAArC;AACA,MAAMoB,eAAe,GAAGlC,WAAW,CAACe,qBAAD,CAAnC;AACA,MAAMoB,cAAc,GAAGnC,WAAW,CAACgB,2BAA2B,CAAC,QAAD,EAAWE,SAAS,CAACkB,oBAArB,CAA5B,CAAlC;AACA,MAAMC,oBAAoB,GAAG,CAC3B,UAD2B,EAE3B,SAF2B,EAG3B,SAH2B,EAI3B,uBAJ2B,EAK3B,SAL2B,EAM3B,SAN2B,EAO3B,WAP2B,EAQ3B,gBAR2B,EAS3B,gBAT2B,CAA7B;AAYAxC,EAAAA,SAAS,CACP,YAAM;AACJ,QAAI,CAACmC,0BAAD,IAA+B,CAACA,0BAA0B,CAACM,MAA5B,GAAqC,CAAxE,EAA2E;AACzEV,MAAAA,QAAQ,CAACpB,SAAS,EAAV,CAAR;AACAoB,MAAAA,QAAQ,CAACrB,mBAAmB,CAAC,6BAAD,EAAgC,OAAhC,CAApB,CAAR;AACD;AACF,GANM,EAOP,EAPO,CAOJ;AAPI,GAAT;;AASA,MAAMgC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,IAAD,EAAOC,KAAP,EAAiB;AACnD,QAAIrC,QAAQ,CAACqC,KAAD,CAAZ,EAAqB,OAAO,IAAP;AACrB,WAAO,CAACD,IAAI,CAACE,oBAAN,IAA8BF,IAAI,CAACE,oBAAL,CAA0BC,QAA1B,OAAyCR,cAAc,CAACQ,QAAf,EAA9E;AACD,GAHD;;AAIA,MAAMC,aAAa,GAAG,SAAhBA,aAAgB,GAAM;AAC1B,QAAMC,MAAM,GAAG,IAAIC,GAAJ,EAAf;;AAEA,QAAI7B,KAAK,CAAC8B,OAAN,CAAcC,YAAd,CAA2Bd,eAA3B,CAAJ,EAAiD;AAC/CA,MAAAA,eAAe,CAACe,OAAhB,CAAwB,UAACC,KAAD,EAAW;AACjC,YAAIjC,KAAK,CAAC8B,OAAN,CAAcC,YAAd,CAA2BE,KAAK,CAACC,OAAjC,CAAJ,EAA+C;AAC7CD,UAAAA,KAAK,CAACC,OAAN,CAAcF,OAAd,CAAsB,UAACG,MAAD,EAAY;AAChC,gBAAMC,GAAG,GAAGD,MAAM,CAACE,qBAAnB;;AAEA,gBAAID,GAAJ,EAAS;AACPR,cAAAA,MAAM,CAACU,GAAP,CAAWH,MAAM,CAACE,qBAAlB;AACD;AACF,WAND;AAOD;AACF,OAVD;AAWD;;AACD,WAAO,mBAAIT,MAAJ,EAAYW,IAAZ,GAAmBC,GAAnB,CAAuB,UAACJ,GAAD;AAAA,aAAU;AAAEK,QAAAA,EAAE,EAAEL,GAAN;AAAWM,QAAAA,KAAK,EAAEN;AAAlB,OAAV;AAAA,KAAvB,CAAP;AACD,GAjBD;;AAkBA,MAAMO,UAAU,GAAGhB,aAAa,EAAhC;AAEA,MAAMiB,MAAM,GAAG,CACb;AACElC,IAAAA,IAAI,EAAE,SADR;AAEEmC,IAAAA,IAAI,EAAE,QAFR;AAGErB,IAAAA,KAAK,EAAE,EAHT;AAIEsB,IAAAA,OAAO,EAAE9B,iBAJX;AAKE+B,IAAAA,SAAS,EAAE,MALb;AAMEC,IAAAA,WAAW,EAAE,MANf;AAOEN,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAPT;AAQEC,IAAAA,aAAa,EAAE;AACbC,MAAAA,IAAI,EAAE3C,OAAO,CAAC4C;AADD;AARjB,GADa,EAab;AACE3C,IAAAA,IAAI,EAAE,uBADR;AAEEmC,IAAAA,IAAI,EAAE,iBAFR;AAGEH,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,4CAAf,CAHT;AAIE1B,IAAAA,KAAK,EAAE,IAJT;AAKEsB,IAAAA,OAAO,EAAEH,UALX;AAMEW,IAAAA,gBAAgB,EAAE,IANpB;AAOEP,IAAAA,SAAS,EAAE,IAPb;AAQEC,IAAAA,WAAW,EAAE,OARf;AASEO,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,aAAa,EAAE,uBAACV,OAAD,EAAUW,MAAV,EAAqB;AAClC,YAAMC,QAAQ,GAAGzE,mBAAmB,GAAG6D,OAAH,EAAYW,MAAZ,CAApC,CADkC,CAGlC;;AACA,YAAIA,MAAM,CAACE,UAAP,KAAsB,EAA1B,EAA8B;AAC5BD,UAAAA,QAAQ,CAACE,IAAT,CAAc;AACZnB,YAAAA,EAAE,EAAEgB,MAAM,CAACE,UADC;AAEZjB,YAAAA,KAAK,YAAK1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,SAAf,CAAL,gBAAmCO,MAAM,CAACE,UAA1C;AAFO,WAAd;AAID;;AAED,eAAOD,QAAP;AACD;AAbgB,KATrB;AAwBEG,IAAAA,UAAU,EAAE7E,GAAG,CAAC8E,MAAJ,CAAW;AACrBrB,MAAAA,EAAE,EAAEzD,GAAG,CAACiE,MAAJ,GAAac,OAAb,CAAqB,gBAArB,EAAuC/D,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAAvC;AADiB,KAAX,EAETc,QAFS;AAxBd,GAba,EAyCb;AACEtD,IAAAA,IAAI,EAAE,SADR;AAEEmC,IAAAA,IAAI,EAAE,MAFR;AAGEH,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,8BAAf,CAHT;AAIE1B,IAAAA,KAAK,EAAE,EAJT;AAKEqC,IAAAA,UAAU,EAAE7E,GAAG,CAACiE,MAAJ,GACTgB,IADS,GAETC,GAFS,CAEL,CAFK,EAGTC,SAHS,GAITJ,OAJS,CAID,cAJC,EAIe/D,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,6BAAf,CAJf,CALd;AAUEK,IAAAA,iBAAiB,EAAE;AACjBa,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE;AADD,OADK;AAIjBC,MAAAA,UAAU,EAAE;AACV7D,QAAAA,OAAO,EAAE;AACP8D,UAAAA,KAAK,EAAE9D,OAAO,CAAC+D;AADR;AADC;AAJK;AAVrB,GAzCa,EA8Db;AACE9D,IAAAA,IAAI,EAAE,UADR;AAEEmC,IAAAA,IAAI,EAAE,QAFR;AAGEH,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,mCAAf,CAHT;AAIE1B,IAAAA,KAAK,EAAE,EAJT;AAKEsB,IAAAA,OAAO,EAAE/B,0BALX;AAMEgC,IAAAA,SAAS,EAAE,IANb;AAOEC,IAAAA,WAAW,EAAE;AAPf,GA9Da,EAuEb;AACEtC,IAAAA,IAAI,EAAE,SADR;AAEEmC,IAAAA,IAAI,EAAE,QAFR;AAGErB,IAAAA,KAAK,EAAE,EAHT;AAIEqC,IAAAA,UAAU,EAAE7E,GAAG,CAACyF,MAAJ,GACTT,QADS,GAETU,GAFS,CAEL,CAFK,EAGTC,QAHS,GAITC,SAJS,CAIC,UAAUpD,KAAV,EAAiBqD,aAAjB,EAAgC;AACzC,aAAO,KAAKC,MAAL,CAAYtD,KAAZ,IAAsBuD,MAAM,CAACC,KAAP,CAAaxD,KAAb,IAAsB,IAAtB,GAA6BA,KAAnD,GAA4D,IAAnE;AACD,KANS,CAJd;AAWEkB,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,8BAAf;AAXT,GAvEa,EAoFb;AACExC,IAAAA,IAAI,EAAE,SADR;AAEEmC,IAAAA,IAAI,EAAE,QAFR;AAGErB,IAAAA,KAAK,EAAE,EAHT;AAIEqC,IAAAA,UAAU,EAAE7E,GAAG,CAACyF,MAAJ,GACTT,QADS,GAETU,GAFS,CAEL,CAFK,EAGTR,GAHS,CAGL,GAHK,EAITe,OAJS,GAKTL,SALS,CAKC,UAAUpD,KAAV,EAAiBqD,aAAjB,EAAgC;AACzC,aAAO,KAAKC,MAAL,CAAYtD,KAAZ,IAAsBuD,MAAM,CAACC,KAAP,CAAaxD,KAAb,IAAsB,IAAtB,GAA6BA,KAAnD,GAA4D,IAAnE;AACD,KAPS,EAQT0D,IARS,CAQJ,SARI,EAQOlF,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,qBAAf,CARP,EAQ8C,YAAY;AAClE,aAAO5B,2BAA2B,CAAC,KAAKwB,OAAL,CAAaqC,MAAd,EAAsB,KAAKrC,OAAL,CAAaqC,MAAb,CAAoBC,iCAA1C,CAAlC;AACD,KAVS,CAJd;AAeE1C,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,8BAAf,CAfT;AAgBEK,IAAAA,iBAAiB,EAAE;AACjB8B,MAAAA,YAAY,EAAE,KADG;AAEjBC,MAAAA,SAAS,EAAE;AAFM;AAhBrB,GApFa,EAyGb;AACE5E,IAAAA,IAAI,EAAE,WADR;AAEEmC,IAAAA,IAAI,EAAE,YAFR;AAGE0C,IAAAA,IAAI,EAAE,WAHR;AAIE7C,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,oCAAf,CAJT;AAKE1B,IAAAA,KAAK,EAAE,IALT;AAME+B,IAAAA,iBAAiB,EAAE;AACjB+B,MAAAA,SAAS,EAAE;AADM;AANrB,GAzGa,EAmHb;AACE5E,IAAAA,IAAI,EAAE,gBADR;AAEEmC,IAAAA,IAAI,EAAE,YAFR;AAGEH,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAHT;AAIE1B,IAAAA,KAAK,EAAE,IAJT;AAKE+B,IAAAA,iBAAiB,EAAE;AACjB+B,MAAAA,SAAS,EAAE;AADM,KALrB;AAQEE,IAAAA,cAAc,EAAE;AACdC,MAAAA,SAAS,EAAE;AADG;AARlB,GAnHa,EA+Hb;AACE/E,IAAAA,IAAI,EAAE,gBADR;AAEEmC,IAAAA,IAAI,EAAE,UAFR;AAGErB,IAAAA,KAAK,EAAE,EAHT;AAIEqC,IAAAA,UAAU,EAAE7E,GAAG,CAACiE,MAAJ,GAAaiB,GAAb,CAAiB,GAAjB,CAJd;AAKExB,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,qCAAf,CALT;AAMEK,IAAAA,iBAAiB,EAAE;AACjBmC,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,OAAO,EAAE,CAFQ;AAGjBC,MAAAA,OAAO,EAAE;AAHQ;AANrB,GA/Ha,EA2Ib;AACElF,IAAAA,IAAI,EAAE,QADR;AAEEmC,IAAAA,IAAI,EAAE,UAFR;AAGErB,IAAAA,KAAK,EAAE,KAHT;AAIEkB,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,6BAAf,EAA8C;AACnD2C,MAAAA,KAAK,EAAEtF,eAAe,GAAGM,kBAAkB,CAACQ,MAAtB,GAA+BP,wBAAwB,CAACO,MAD3B;AAEnDwB,MAAAA,IAAI,8BAAuBtC,eAAe,GAAG,OAAH,GAAa,MAAnD;AAF+C,KAA9C;AAJT,GA3Ia,EAoJb;AACEG,IAAAA,IAAI,EAAE,eADR;AAEEmC,IAAAA,IAAI,EAAE,MAFR;AAGErB,IAAAA,KAAK,EAAE,EAHT;AAIEqC,IAAAA,UAAU,EAAE7E,GAAG,CAACiE,MAAJ,GAAaiC,IAAb,CAAkB,eAAlB,EAAmClF,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,6BAAf,CAAnC,EAAkF,YAAY;AACxG,UAAMiC,MAAM,GAAG,KAAKrC,OAAL,CAAaqC,MAA5B;AACA,aAAOA,MAAM,CAACW,MAAP,GAAgBX,MAAM,CAACY,aAAP,KAAyB,QAAzC,GAAoD,IAA3D;AACD,KAHW,CAJd;AAQErD,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,0BAAf,CART;AASE8C,IAAAA,IAAI,EAAEhG,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,yBAAf,CATR;AAUEK,IAAAA,iBAAiB,EAAE;AACjB8B,MAAAA,YAAY,EAAE;AADG;AAVrB,GApJa,CAAf,CAvDwE,CA2NxE;;AACA,MAAMY,cAAc,GAAGrD,MAAM,CAACsD,MAAP,CAAc,UAACC,KAAD,EAAW;AAC9C,WAAO,EAAEvF,iBAAiB,KAAK,OAAtB,IAAiCQ,oBAAoB,CAACgF,QAArB,CAA8BD,KAAK,CAACzF,IAApC,CAAnC,CAAP;AACD,GAFsB,CAAvB;AAIA,MAAM2F,OAAO,GAAG,CACd;AACE3F,IAAAA,IAAI,EAAE,QADR;AAEEgC,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEoD,IAAAA,OAAO,EAAElG;AAHX,GADc,EAMd;AACEM,IAAAA,IAAI,EAAE,QADR;AAEEgC,IAAAA,KAAK,EAAE1C,KAAK,CAACiD,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEoD,IAAAA,OAAO,EAAE,iBAACC,MAAD,EAAY;AACnB,UAAIhG,eAAJ,EAAqB;AACnBI,QAAAA,QAAQ,CAACnB,sBAAsB,CAAC+G,MAAD,EAAS,OAAT,CAAvB,CAAR;AACD,OAFD,MAEO;AACL5F,QAAAA,QAAQ,CAACnB,sBAAsB,CAAC+G,MAAD,EAAS,aAAT,CAAvB,CAAR;AACD;AACF;AATH,GANc,CAAhB;AAmBA,sBAAO,QAAC,mBAAD;AAAqB,IAAA,MAAM,EAAEN,cAA7B;AAA6C,IAAA,OAAO,EAAEI,OAAtD;AAA+D,IAAA,WAAW,EAAE9F;AAA5E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GApPuBL,e;UAELpB,W,EACSC,W,EACCA,W,EACMA,W,EACEA,W,EACTA,W,EACFA,W,EACDA,W;;;KATDmB,e","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\nimport { makeStyles } from '@material-ui/core';\r\nimport isNumber from 'lodash/isNumber';\r\n\r\n// app\r\nimport { BulkUpdateLayerView } from './BulkUpdateLayer.view';\r\nimport styles from './BulkUpdateLayer.styles';\r\nimport {\r\n  enqueueNotification,\r\n  hideModal,\r\n  postPlacementBulkLayer,\r\n  selectRefDataStatusesMarketQuote,\r\n  selectPlacementBulkType,\r\n  selectPlacementBulkItemsLayers,\r\n  selectPlacementBulkItemsMarkets,\r\n  selectRefDataCurrencies,\r\n  selectPlacementLayers,\r\n  selectRefDataStatusIdByCode,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nBulkUpdateLayer.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  isLayerBulkEdit: PropTypes.bool,\r\n};\r\n\r\nexport default function BulkUpdateLayer({ handleClose, isLayerBulkEdit }) {\r\n  const classes = makeStyles(styles, { name: 'BulkUpdateLayer' })();\r\n  const dispatch = useDispatch();\r\n  const placementBulkType = useSelector(selectPlacementBulkType);\r\n  const placementBulkItems = useSelector(selectPlacementBulkItemsLayers);\r\n  const placementBulkItemMarkets = useSelector(selectPlacementBulkItemsMarkets);\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const refDataCurrencies = useSelector(selectRefDataCurrencies);\r\n  const placementLayers = useSelector(selectPlacementLayers);\r\n  const statusQuotedId = useSelector(selectRefDataStatusIdByCode('market', constants.STATUS_MARKET_QUOTED));\r\n  const marketSpecificFields = [\r\n    'statusId',\r\n    'premium',\r\n    'isoCode',\r\n    'uniqueMarketReference',\r\n    'section',\r\n    'written',\r\n    'quoteDate',\r\n    'validUntilDate',\r\n    'subjectivities',\r\n  ];\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!refDataStatusesMarketQuote || !refDataStatusesMarketQuote.length > 0) {\r\n        dispatch(hideModal());\r\n        dispatch(enqueueNotification('notification.generic.reload', 'error'));\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n  const isLayerMarketAmountRequired = (form, value) => {\r\n    if (isNumber(value)) return true;\r\n    return !form.layerMarket_statusId || form.layerMarket_statusId.toString() !== statusQuotedId.toString();\r\n  };\r\n  const getUmrOptions = () => {\r\n    const umrSet = new Set();\r\n\r\n    if (utils.generic.isValidArray(placementLayers)) {\r\n      placementLayers.forEach((layer) => {\r\n        if (utils.generic.isValidArray(layer.markets)) {\r\n          layer.markets.forEach((market) => {\r\n            const umr = market.uniqueMarketReference;\r\n\r\n            if (umr) {\r\n              umrSet.add(market.uniqueMarketReference);\r\n            }\r\n          });\r\n        }\r\n      });\r\n    }\r\n    return [...umrSet].sort().map((umr) => ({ id: umr, label: umr }));\r\n  };\r\n  const umrOptions = getUmrOptions();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'isoCode',\r\n      type: 'select',\r\n      value: '',\r\n      options: refDataCurrencies,\r\n      optionKey: 'code',\r\n      optionLabel: 'code',\r\n      label: utils.string.t('placement.form.currency.label'),\r\n      nestedClasses: {\r\n        root: classes.isoCode,\r\n      },\r\n    },\r\n    {\r\n      name: 'uniqueMarketReference',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('placement.form.uniqueMarketReference.label'),\r\n      value: null,\r\n      options: umrOptions,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      muiComponentProps: {\r\n        filterOptions: (options, params) => {\r\n          const filtered = createFilterOptions()(options, params);\r\n\r\n          // Suggest the creation of a new value\r\n          if (params.inputValue !== '') {\r\n            filtered.push({\r\n              id: params.inputValue,\r\n              label: `${utils.string.t('app.add')} \"${params.inputValue}\"`,\r\n            });\r\n          }\r\n\r\n          return filtered;\r\n        },\r\n      },\r\n      validation: Yup.object({\r\n        id: Yup.string().matches(/^[a-zA-Z0-9]*$/, utils.string.t('validation.string.alphaNumericOnly')),\r\n      }).nullable(),\r\n    },\r\n    {\r\n      name: 'section',\r\n      type: 'text',\r\n      label: utils.string.t('placement.form.section.label'),\r\n      value: '',\r\n      validation: Yup.string()\r\n        .trim()\r\n        .max(2)\r\n        .uppercase()\r\n        .matches(/^[A-Z]{0,2}$/, utils.string.t('validation.string.alphaOnly')),\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 2,\r\n        },\r\n        InputProps: {\r\n          classes: {\r\n            input: classes.section,\r\n          },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'statusId',\r\n      type: 'select',\r\n      label: utils.string.t('placement.marketing.fields.status'),\r\n      value: '',\r\n      options: refDataStatusesMarketQuote,\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n    },\r\n    {\r\n      name: 'premium',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('placement.form.premium.label'),\r\n    },\r\n    {\r\n      name: 'written',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .max(100)\r\n        .percent()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        })\r\n        .test('written', utils.string.t('validation.required'), function () {\r\n          return isLayerMarketAmountRequired(this.options.parent, this.options.parent.layerMarket_writtenLinePercentage);\r\n        }),\r\n      label: utils.string.t('placement.form.written.label'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        fullWidth: false,\r\n      },\r\n    },\r\n    {\r\n      name: 'quoteDate',\r\n      type: 'datepicker',\r\n      icon: 'TodayIcon',\r\n      label: utils.string.t('placement.form.quoteReceived.label'),\r\n      value: null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'validUntilDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('placement.form.quoteExpiry.label'),\r\n      value: null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      muiPickerProps: {\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'subjectivities',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.subjectivities.label'),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 1,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n    {\r\n      name: 'delete',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: utils.string.t('placement.form.delete.label', {\r\n        count: isLayerBulkEdit ? placementBulkItems.length : placementBulkItemMarkets.length,\r\n        type: `placement.generic.${isLayerBulkEdit ? 'layer' : 'line'}`,\r\n      }),\r\n    },\r\n    {\r\n      name: 'deleteConfirm',\r\n      type: 'text',\r\n      value: '',\r\n      validation: Yup.string().test('deleteConfirm', utils.string.t('form.deleteConfirm.required'), function () {\r\n        const parent = this.options.parent;\r\n        return parent.delete ? parent.deleteConfirm === 'Delete' : true;\r\n      }),\r\n      label: utils.string.t('form.deleteConfirm.label'),\r\n      hint: utils.string.t('form.deleteConfirm.hint'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n  ];\r\n\r\n  // remove fields specific to market if bulk type is layer\r\n  const fieldsFiltered = fields.filter((field) => {\r\n    return !(placementBulkType === 'layer' && marketSpecificFields.includes(field.name));\r\n  });\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => {\r\n        if (isLayerBulkEdit) {\r\n          dispatch(postPlacementBulkLayer(values, 'layer'));\r\n        } else {\r\n          dispatch(postPlacementBulkLayer(values, 'layerMarket'));\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <BulkUpdateLayerView fields={fieldsFiltered} actions={actions} isBulkLayer={isLayerBulkEdit} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}