{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\CustomizedDialog\\\\CustomizedDialog.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect, useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router'; // app\n\nimport styles from './CustomizedDialog.styles';\nimport { Button, Translate } from 'components';\nimport { selectDmsWidgetExpanded } from 'stores';\nimport config from 'config'; // mui\n\nimport { makeStyles, Dialog, DialogTitle, DialogContent, Divider } from '@material-ui/core';\nimport { withStyles } from '@material-ui/core/styles';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCustomizedDialog.propTypes = {\n  drawerOpen: PropTypes.bool.isRequired,\n  dialogOpen: PropTypes.bool.isRequired,\n  modalTitle: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    handleDialogClose: PropTypes.func.isRequired\n  }),\n  isDrawerExpanded: PropTypes.bool.isRequired,\n  isAnyformDirty: PropTypes.bool.isRequired\n};\n\nfunction CustomizedDialog(_ref) {\n  _s();\n\n  var parentRef = _ref.parentRef,\n      children = _ref.children,\n      dialogOpen = _ref.dialogOpen,\n      modalTitle = _ref.modalTitle,\n      handlers = _ref.handlers,\n      isDirty = _ref.isDirty,\n      redirectUrl = _ref.redirectUrl;\n  var classes = makeStyles(styles, {\n    name: 'CustomizedDialog'\n  })();\n  var history = useHistory();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openDialog = _useState2[0],\n      setOpenDialog = _useState2[1];\n\n  var isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\n  useEffect(function () {\n    setOpenDialog(dialogOpen);\n  }, [dialogOpen]);\n\n  var handleClose = function handleClose() {\n    if (isDirty) {\n      handlers.handleDialogClose();\n    } else {\n      setOpenDialog(false);\n      history.push(redirectUrl || config.routes.claimsFNOL.root);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(Dialog, {\n    maxWidth: \"xl\",\n    className: isDmsWidgetExpanded ? classes.dialogExpanded : classes.dialog,\n    fullWidth: true,\n    onClose: handleClose,\n    disableBackdropClick: true,\n    \"aria-labelledby\": \"customized-dialog-title\",\n    open: openDialog,\n    disablePortal: true,\n    container: function container() {\n      return parentRef.current;\n    },\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      icon: CloseIcon,\n      variant: \"text\",\n      onClick: handleClose,\n      nestedClasses: {\n        btn: classes.close\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogTitle, {\n      disableTypography: true,\n      children: /*#__PURE__*/_jsxDEV(Translate, {\n        label: modalTitle,\n        variant: \"h2\",\n        className: classes.title\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DialogContent, {\n      className: classes.content,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.container,\n        children: children\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CustomizedDialog, \"L+uDn9XGD+C4/3jr8EW1CkU9Zx0=\", false, function () {\n  return [useHistory, useSelector];\n});\n\n_c = CustomizedDialog;\nCustomizedDialog.displayName = \"CustomizedDialog\";\nCustomizedDialog.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CustomizedDialog\",\n  \"props\": {\n    \"drawerOpen\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"dialogOpen\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"modalTitle\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"handleDialogClose\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isDrawerExpanded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isAnyformDirty\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default withStyles(styles)(CustomizedDialog);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\CustomizedDialog\\\\CustomizedDialog.js\"] = {\n    name: \"CustomizedDialog\",\n    docgenInfo: CustomizedDialog.__docgenInfo,\n    path: \"src\\\\components\\\\CustomizedDialog\\\\CustomizedDialog.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CustomizedDialog\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/CustomizedDialog/CustomizedDialog.js"],"names":["React","useEffect","useState","useSelector","PropTypes","useHistory","styles","Button","Translate","selectDmsWidgetExpanded","config","makeStyles","Dialog","DialogTitle","DialogContent","Divider","withStyles","CloseIcon","CustomizedDialog","propTypes","drawerOpen","bool","isRequired","dialogOpen","modalTitle","string","handlers","shape","handleDialogClose","func","isDrawerExpanded","isAnyformDirty","parentRef","children","isDirty","redirectUrl","classes","name","history","openDialog","setOpenDialog","isDmsWidgetExpanded","handleClose","push","routes","claimsFNOL","root","dialogExpanded","dialog","current","btn","close","title","content","container"],"mappings":"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","sourcesContent":["import { React, useEffect, useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\n// app\r\nimport styles from './CustomizedDialog.styles';\r\nimport { Button, Translate } from 'components';\r\nimport { selectDmsWidgetExpanded } from 'stores';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Dialog, DialogTitle, DialogContent, Divider } from '@material-ui/core';\r\nimport { withStyles } from '@material-ui/core/styles';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nCustomizedDialog.propTypes = {\r\n  drawerOpen: PropTypes.bool.isRequired,\r\n  dialogOpen: PropTypes.bool.isRequired,\r\n  modalTitle: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleDialogClose: PropTypes.func.isRequired,\r\n  }),\r\n  isDrawerExpanded: PropTypes.bool.isRequired,\r\n  isAnyformDirty: PropTypes.bool.isRequired,\r\n};\r\n\r\nfunction CustomizedDialog({ parentRef, children, dialogOpen, modalTitle, handlers, isDirty, redirectUrl }) {\r\n  const classes = makeStyles(styles, { name: 'CustomizedDialog' })();\r\n  const history = useHistory();\r\n\r\n  const [openDialog, setOpenDialog] = useState(false);\r\n\r\n  const isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\r\n\r\n  useEffect(() => {\r\n    setOpenDialog(dialogOpen);\r\n  }, [dialogOpen]);\r\n\r\n  const handleClose = () => {\r\n    if (isDirty) {\r\n      handlers.handleDialogClose();\r\n    } else {\r\n      setOpenDialog(false);\r\n      history.push(redirectUrl || config.routes.claimsFNOL.root);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <Dialog\r\n      maxWidth=\"xl\"\r\n      className={isDmsWidgetExpanded ? classes.dialogExpanded : classes.dialog}\r\n      fullWidth\r\n      onClose={handleClose}\r\n      disableBackdropClick\r\n      aria-labelledby=\"customized-dialog-title\"\r\n      open={openDialog}\r\n      disablePortal\r\n      container={() => parentRef.current}\r\n    >\r\n      <Button icon={CloseIcon} variant=\"text\" onClick={handleClose} nestedClasses={{ btn: classes.close }} />\r\n\r\n      <DialogTitle disableTypography>\r\n        <Translate label={modalTitle} variant=\"h2\" className={classes.title} />\r\n      </DialogTitle>\r\n      <Divider />\r\n\r\n      <DialogContent className={classes.content}>\r\n        <div className={classes.container}>{children}</div>\r\n      </DialogContent>\r\n    </Dialog>\r\n  );\r\n}\r\n\r\nexport default withStyles(styles)(CustomizedDialog);\r\n"]},"metadata":{},"sourceType":"module"}