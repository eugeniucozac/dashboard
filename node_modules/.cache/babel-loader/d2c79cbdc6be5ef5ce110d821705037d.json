{"ast":null,"code":"import \"core-js/modules/es.array.map\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RiskMap\\\\LocationTooltipCard.js\",\n    _this = this;\n\nimport * as React from 'react';\nimport { Button, FormGrid } from 'components';\nimport { Box, Typography } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { renderValue } from 'modules/RiskData/RiskData';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var LocationTooltipCard = function LocationTooltipCard(_ref) {\n  var tooltip = _ref.tooltip,\n      locationDefinitions = _ref.locationDefinitions,\n      excludeColumns = _ref.excludeColumns,\n      handleClose = _ref.handleClose;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"location-tooltip-card\",\n    style: {\n      width: 300,\n      padding: 0\n    },\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      justifyContent: \"space-between\",\n      alignItems: \"center\",\n      style: {\n        padding: '10px 16px',\n        fontWeight: 'bold',\n        backgroundColor: '#334762',\n        color: 'white',\n        textAlign: 'left',\n        fontSize: 14,\n        maxWidth: '100%'\n      },\n      children: [tooltip.buildingTitle, /*#__PURE__*/_jsxDEV(Button, {\n        icon: CloseIcon,\n        onClick: handleClose,\n        variant: \"text\",\n        style: {\n          color: 'white'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 13,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n      style: {\n        margin: 16,\n        textAlign: 'left',\n        maxWidth: '100%'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormGrid, {\n        spacing: 1,\n        container: true,\n        children: locationDefinitions.arrayItemDef.filter(function (f) {\n          return Boolean(f.name);\n        }).filter(function (f) {\n          return !excludeColumns.find(function (exclude) {\n            return exclude.id === f.name;\n          });\n        }).map(function (arrayField) {\n          var isHidden = utils.risk.isHiddenField(arrayField);\n          var value = tooltip[arrayField === null || arrayField === void 0 ? void 0 : arrayField.name];\n          return !isHidden ? /*#__PURE__*/_jsxDEV(React.Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"span\",\n                children: arrayField.label\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                component: \"span\",\n                style: {\n                  fontWeight: 'bold'\n                },\n                children: renderValue(arrayField, value)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, _this)]\n          }, arrayField === null || arrayField === void 0 ? void 0 : arrayField.name, true, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 17\n          }, _this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 12,\n    columnNumber: 5\n  }, _this);\n};\nLocationTooltipCard.displayName = \"LocationTooltipCard\";\n_c = LocationTooltipCard;\nLocationTooltipCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LocationTooltipCard\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\RiskMap\\\\LocationTooltipCard.js\"] = {\n    name: \"LocationTooltipCard\",\n    docgenInfo: LocationTooltipCard.__docgenInfo,\n    path: \"src\\\\modules\\\\RiskMap\\\\LocationTooltipCard.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationTooltipCard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RiskMap/LocationTooltipCard.js"],"names":["React","Button","FormGrid","Box","Typography","CloseIcon","renderValue","utils","LocationTooltipCard","tooltip","locationDefinitions","excludeColumns","handleClose","width","padding","fontWeight","backgroundColor","color","textAlign","fontSize","maxWidth","buildingTitle","margin","arrayItemDef","filter","f","Boolean","name","find","exclude","id","map","arrayField","isHidden","risk","isHiddenField","value","label"],"mappings":"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","sourcesContent":["import * as React from 'react';\r\nimport { Button, FormGrid } from 'components';\r\n\r\nimport { Box, Typography } from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nimport { renderValue } from 'modules/RiskData/RiskData';\r\nimport * as utils from 'utils';\r\n\r\nexport const LocationTooltipCard = ({ tooltip, locationDefinitions, excludeColumns, handleClose }) => {\r\n  return (\r\n    <Box data-testid=\"location-tooltip-card\" style={{ width: 300, padding: 0 }}>\r\n      <Box\r\n        display=\"flex\"\r\n        justifyContent=\"space-between\"\r\n        alignItems=\"center\"\r\n        style={{\r\n          padding: '10px 16px',\r\n          fontWeight: 'bold',\r\n          backgroundColor: '#334762',\r\n          color: 'white',\r\n          textAlign: 'left',\r\n          fontSize: 14,\r\n          maxWidth: '100%',\r\n        }}\r\n      >\r\n        {tooltip.buildingTitle}\r\n        <Button icon={CloseIcon} onClick={handleClose} variant=\"text\" style={{ color: 'white' }} />\r\n      </Box>\r\n      <Box style={{ margin: 16, textAlign: 'left', maxWidth: '100%' }}>\r\n        <FormGrid spacing={1} container>\r\n          {locationDefinitions.arrayItemDef\r\n            .filter((f) => Boolean(f.name))\r\n            .filter((f) => !excludeColumns.find((exclude) => exclude.id === f.name))\r\n            .map((arrayField) => {\r\n              const isHidden = utils.risk.isHiddenField(arrayField);\r\n              const value = tooltip[arrayField?.name];\r\n\r\n              return !isHidden ? (\r\n                <React.Fragment key={arrayField?.name}>\r\n                  <FormGrid item xs={6}>\r\n                    <Typography variant=\"body2\" component=\"span\">\r\n                      {arrayField.label}\r\n                    </Typography>\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <Typography variant=\"body2\" component=\"span\" style={{ fontWeight: 'bold' }}>\r\n                      {renderValue(arrayField, value)}\r\n                    </Typography>\r\n                  </FormGrid>\r\n                </React.Fragment>\r\n              ) : null;\r\n            })}\r\n        </FormGrid>\r\n      </Box>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}