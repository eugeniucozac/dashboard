{"ast":null,"code":"import \"core-js/modules/es.array.find\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimRefDetail\\\\ClaimRefDetail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ClaimRefDetailView from './ClaimRefDetail.view'; // app\n\nimport * as utils from 'utils';\nimport { selectClaimsInformation, getLossInformation, claimsPolicyData, getClaimsPreviewInformation, getInterest, getBEAdjuster, getClaimsAssociateWithLoss, getLossQualifiers, getCatCodes, getPolicyInformation, selectLossQualifiers, selectLossId, selectCatCodes, selectClaimsPolicyInformation, selectClaimsInterest, selectClaimsProcessingSelected, selectClaimsPolicySections, getPolicySections } from 'stores';\nimport { CLAIM_SECTION_ENABLED_UG } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimRefDetail.propTypes = {\n  claimData: PropTypes.object.isRequired,\n  setCheckPage: PropTypes.func\n};\nexport default function ClaimRefDetail(_ref) {\n  _s();\n\n  var _useSelector, _lossQualifiers$find, _policySections$find;\n\n  var claimData = _ref.claimData,\n      setCheckPage = _ref.setCheckPage;\n  var dispatch = useDispatch();\n  var claimPreviewInfo = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var catCodes = useSelector(selectCatCodes);\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var interestObj = interests === null || interests === void 0 ? void 0 : interests.find(function (item) {\n    return item.policyInterestID === claimPreviewInfo.policyInterestID;\n  });\n  var interest = interestObj === null || interestObj === void 0 ? void 0 : interestObj.description;\n  var selectedLossQualifier = lossQualifiers === null || lossQualifiers === void 0 ? void 0 : (_lossQualifiers$find = lossQualifiers.find(function (list) {\n    var _list$id, _claimPreviewInfo$los;\n\n    return (list === null || list === void 0 ? void 0 : (_list$id = list.id) === null || _list$id === void 0 ? void 0 : _list$id.toString()) === (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : (_claimPreviewInfo$los = claimPreviewInfo.lossQualifierID) === null || _claimPreviewInfo$los === void 0 ? void 0 : _claimPreviewInfo$los.toString());\n  })) === null || _lossQualifiers$find === void 0 ? void 0 : _lossQualifiers$find.name;\n  var claimsProcessingSelected = useSelector(selectClaimsProcessingSelected);\n  var claimSelected = claimsProcessingSelected === null || claimsProcessingSelected === void 0 ? void 0 : claimsProcessingSelected[0];\n  var isSectionEnabled = CLAIM_SECTION_ENABLED_UG.includes(policyInformation.policyType);\n  var claimDetails = {\n    claimant: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.claimantName) || '',\n    status: claimPreviewInfo.claimStatus,\n    claimRef: claimPreviewInfo.claimReference,\n    lossQualifierName: selectedLossQualifier,\n    lossDateFrom: claimPreviewInfo.lossFromDate,\n    lossDateTo: claimPreviewInfo.lossToDate,\n    adjusterType: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster'),\n    adjusterName: (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.beAdjusterID) !== 0 ? claimPreviewInfo.adjusterName : claimPreviewInfo.nonBEAdjusterName,\n    ucr: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.ucr,\n    adjusterRef: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.adjusterReference,\n    priority: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.priorityDescription,\n    settlementCurrency: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.settlementCurrencyCode,\n    interest: interest,\n    complexity: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexity,\n    complexityBasis: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.complexityBasis,\n    referral: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralValue,\n    referralResponse: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.referralResponseDescription,\n    location: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.location,\n    fguNarrative: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.fgunarrative,\n    processNotes: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.processNotes,\n    isBordereau: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.isBordereau,\n    certificateNumber: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateNumber,\n    certificateInceptionDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateInceptionDate,\n    certificateExpiryDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.certificateExpiryDate,\n    orderPercentage: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.orderPercentage) || 0, \" %\"),\n    underWritingGroupData: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policyUnderWritingGroupDtoList,\n    claimReceivedDate: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.claimReceivedDate,\n    movementType: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.movementType,\n    basisOfOrder: \"\".concat((claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.basisOfOrder) || 0, \"%\"),\n    bordereauPeriod: claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.bordereauPeriod,\n    assignedTo: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.assignedTo,\n    workflowStatus: claimSelected === null || claimSelected === void 0 ? void 0 : claimSelected.processState,\n    policySectionDesc: !isSectionEnabled ? '' : !(claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : claimPreviewInfo.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _claimPreviewInfo$pol;\n\n      return sec.id.toString() === (claimPreviewInfo === null || claimPreviewInfo === void 0 ? void 0 : (_claimPreviewInfo$pol = claimPreviewInfo.policySectionID) === null || _claimPreviewInfo$pol === void 0 ? void 0 : _claimPreviewInfo$pol.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  useEffect(function () {\n    if (utils.generic.isValidObject(claimData)) {\n      dispatch(getLossInformation(claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID, claimData === null || claimData === void 0 ? void 0 : claimData.sourceId, claimData === null || claimData === void 0 ? void 0 : claimData.divisionID, claimData === null || claimData === void 0 ? void 0 : claimData.claimRef));\n      dispatch(claimsPolicyData({\n        xbInstanceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        xbPolicyID: claimData === null || claimData === void 0 ? void 0 : claimData.policyId\n      }));\n      dispatch(getPolicyInformation());\n      dispatch(getInterest());\n      dispatch(getBEAdjuster());\n      dispatch(getClaimsPreviewInformation(claimData === null || claimData === void 0 ? void 0 : claimData.claimID, claimData === null || claimData === void 0 ? void 0 : claimData.claimRef, claimData === null || claimData === void 0 ? void 0 : claimData.sourceId, claimData === null || claimData === void 0 ? void 0 : claimData.divisionID));\n\n      if (!lossQualifiers.length) {\n        dispatch(getLossQualifiers());\n      }\n\n      if (!catCodes.length) {\n        dispatch(getCatCodes());\n      }\n\n      dispatch(getClaimsAssociateWithLoss(claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID));\n      dispatch(getPolicySections());\n    }\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(ClaimRefDetailView, {\n    policyInformation: policyInformation,\n    lossInformation: lossInformation,\n    catCodes: catCodes,\n    lossQualifiers: lossQualifiers,\n    claimInformation: claimDetails,\n    columns: underWritingGroupColumns,\n    setCheckPage: setCheckPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 151,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimRefDetail, \"/IxanBNoL/BKsiMMHaLhG6oPxNk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimRefDetail;\nClaimRefDetail.displayName = \"ClaimRefDetail\";\nClaimRefDetail.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimRefDetail\",\n  \"props\": {\n    \"claimData\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"setCheckPage\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimRefDetail\\\\ClaimRefDetail.js\"] = {\n    name: \"ClaimRefDetail\",\n    docgenInfo: ClaimRefDetail.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimRefDetail\\\\ClaimRefDetail.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimRefDetail\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimRefDetail/ClaimRefDetail.js"],"names":["React","useEffect","useDispatch","useSelector","PropTypes","ClaimRefDetailView","utils","selectClaimsInformation","getLossInformation","claimsPolicyData","getClaimsPreviewInformation","getInterest","getBEAdjuster","getClaimsAssociateWithLoss","getLossQualifiers","getCatCodes","getPolicyInformation","selectLossQualifiers","selectLossId","selectCatCodes","selectClaimsPolicyInformation","selectClaimsInterest","selectClaimsProcessingSelected","selectClaimsPolicySections","getPolicySections","CLAIM_SECTION_ENABLED_UG","ClaimRefDetail","propTypes","claimData","object","isRequired","setCheckPage","func","dispatch","claimPreviewInfo","lossInformation","catCodes","lossQualifiers","policyInformation","interests","items","policySections","interestObj","find","item","policyInterestID","interest","description","selectedLossQualifier","list","id","toString","lossQualifierID","name","claimsProcessingSelected","claimSelected","isSectionEnabled","includes","policyType","claimDetails","claimant","claimantName","status","claimStatus","claimRef","claimReference","lossQualifierName","lossDateFrom","lossFromDate","lossDateTo","lossToDate","adjusterType","beAdjusterID","string","t","adjusterName","nonBEAdjusterName","ucr","adjusterRef","adjusterReference","priority","priorityDescription","settlementCurrency","settlementCurrencyCode","complexity","complexityBasis","referral","referralValue","referralResponse","referralResponseDescription","location","fguNarrative","fgunarrative","processNotes","isBordereau","certificateNumber","certificateInceptionDate","certificateExpiryDate","orderPercentage","underWritingGroupData","policyUnderWritingGroupDtoList","claimReceivedDate","movementType","basisOfOrder","bordereauPeriod","assignedTo","workflowStatus","processState","policySectionDesc","policySectionID","sec","underWritingGroupColumns","label","generic","isValidObject","lossDetailID","sourceId","divisionID","xbInstanceID","xbPolicyID","policyId","claimID","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport ClaimRefDetailView from './ClaimRefDetail.view';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\n\r\nimport {\r\n  selectClaimsInformation,\r\n  getLossInformation,\r\n  claimsPolicyData,\r\n  getClaimsPreviewInformation,\r\n  getInterest,\r\n  getBEAdjuster,\r\n  getClaimsAssociateWithLoss,\r\n  getLossQualifiers,\r\n  getCatCodes,\r\n  getPolicyInformation,\r\n  selectLossQualifiers,\r\n  selectLossId,\r\n  selectCatCodes,\r\n  selectClaimsPolicyInformation,\r\n  selectClaimsInterest,\r\n  selectClaimsProcessingSelected,\r\n  selectClaimsPolicySections,\r\n  getPolicySections,\r\n} from 'stores';\r\nimport { CLAIM_SECTION_ENABLED_UG } from 'consts';\r\n\r\nClaimRefDetail.propTypes = {\r\n  claimData: PropTypes.object.isRequired,\r\n  setCheckPage: PropTypes.func,\r\n};\r\n\r\nexport default function ClaimRefDetail({ claimData, setCheckPage }) {\r\n  const dispatch = useDispatch();\r\n  const claimPreviewInfo = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const interestObj = interests?.find((item) => item.policyInterestID === claimPreviewInfo.policyInterestID);\r\n  const interest = interestObj?.description;\r\n  const selectedLossQualifier = lossQualifiers?.find(\r\n    (list) => list?.id?.toString() === claimPreviewInfo?.lossQualifierID?.toString()\r\n  )?.name;\r\n  const claimsProcessingSelected = useSelector(selectClaimsProcessingSelected);\r\n  const claimSelected = claimsProcessingSelected?.[0];\r\n\r\n  const isSectionEnabled = CLAIM_SECTION_ENABLED_UG.includes(policyInformation.policyType);\r\n\r\n  const claimDetails = {\r\n    claimant: claimPreviewInfo?.claimantName || '',\r\n    status: claimPreviewInfo.claimStatus,\r\n    claimRef: claimPreviewInfo.claimReference,\r\n    lossQualifierName: selectedLossQualifier,\r\n    lossDateFrom: claimPreviewInfo.lossFromDate,\r\n    lossDateTo: claimPreviewInfo.lossToDate,\r\n    adjusterType:\r\n      claimPreviewInfo?.beAdjusterID === 0\r\n        ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n        : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    adjusterName: claimPreviewInfo?.beAdjusterID !== 0 ? claimPreviewInfo.adjusterName : claimPreviewInfo.nonBEAdjusterName,\r\n    ucr: claimPreviewInfo?.ucr,\r\n    adjusterRef: claimPreviewInfo?.adjusterReference,\r\n    priority: claimPreviewInfo?.priorityDescription,\r\n    settlementCurrency: claimPreviewInfo?.settlementCurrencyCode,\r\n    interest,\r\n    complexity: claimPreviewInfo?.complexity,\r\n    complexityBasis: claimPreviewInfo?.complexityBasis,\r\n    referral: claimPreviewInfo?.referralValue,\r\n    referralResponse: claimPreviewInfo?.referralResponseDescription,\r\n    location: claimPreviewInfo?.location,\r\n    fguNarrative: claimPreviewInfo?.fgunarrative,\r\n    processNotes: claimPreviewInfo?.processNotes,\r\n    isBordereau: claimPreviewInfo?.isBordereau,\r\n    certificateNumber: claimPreviewInfo?.certificateNumber,\r\n    certificateInceptionDate: claimPreviewInfo?.certificateInceptionDate,\r\n    certificateExpiryDate: claimPreviewInfo?.certificateExpiryDate,\r\n    orderPercentage: `${claimPreviewInfo?.orderPercentage || 0} %`,\r\n    underWritingGroupData: claimPreviewInfo?.policyUnderWritingGroupDtoList,\r\n    claimReceivedDate: claimPreviewInfo?.claimReceivedDate,\r\n    movementType: claimPreviewInfo?.movementType,\r\n    basisOfOrder: `${claimPreviewInfo?.basisOfOrder || 0}%`,\r\n    bordereauPeriod: claimPreviewInfo?.bordereauPeriod,\r\n    assignedTo: claimSelected?.assignedTo,\r\n    workflowStatus: claimSelected?.processState,\r\n    policySectionDesc: !isSectionEnabled\r\n      ? ''\r\n      : !claimPreviewInfo?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec.id.toString() === claimPreviewInfo?.policySectionID?.toString())?.name,\r\n  };\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n  useEffect(() => {\r\n    if (utils.generic.isValidObject(claimData)) {\r\n      dispatch(getLossInformation(claimData?.lossDetailID, claimData?.sourceId, claimData?.divisionID, claimData?.claimRef));\r\n      dispatch(claimsPolicyData({ xbInstanceID: claimData?.sourceId, xbPolicyID: claimData?.policyId }));\r\n      dispatch(getPolicyInformation());\r\n      dispatch(getInterest());\r\n      dispatch(getBEAdjuster());\r\n      dispatch(getClaimsPreviewInformation(claimData?.claimID, claimData?.claimRef, claimData?.sourceId, claimData?.divisionID));\r\n      if (!lossQualifiers.length) {\r\n        dispatch(getLossQualifiers());\r\n      }\r\n      if (!catCodes.length) {\r\n        dispatch(getCatCodes());\r\n      }\r\n      dispatch(getClaimsAssociateWithLoss(claimData?.lossDetailID));\r\n      dispatch(getPolicySections());\r\n    }\r\n  }, [claimData]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <ClaimRefDetailView\r\n      policyInformation={policyInformation}\r\n      lossInformation={lossInformation}\r\n      catCodes={catCodes}\r\n      lossQualifiers={lossQualifiers}\r\n      claimInformation={claimDetails}\r\n      columns={underWritingGroupColumns}\r\n      setCheckPage={setCheckPage}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}