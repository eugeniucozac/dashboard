{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\n//app\nimport { authLogout, addLoader, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nexport var getDmsEditMetadata = function getDmsEditMetadata(documentId, documentClassificationId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getDmsEditMetadata'\n    };\n    dispatch(getDmsEditMetadataRequest({\n      documentClassificationId: documentClassificationId\n    }));\n    dispatch(addLoader('getDmsEditMetadata'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"data/document/\".concat(documentId, \"/getMetadata\"),\n      params: {\n        documentClassificationId: documentClassificationId\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (response) {\n      return utils.api.handleNewData(response);\n    }).then(function (data) {\n      dispatch(enqueueNotification('dms.metadata.notifications.getMetadataSuccess', 'success'));\n      dispatch(getDmsEditMetadataSuccess((data === null || data === void 0 ? void 0 : data.data) || {}));\n      return data;\n    })[\"catch\"](function (err) {\n      dispatch(enqueueNotification('dms.metadata.notifications.getMetadataFailure', 'error'));\n      dispatch(getDmsEditMetadataFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getDmsEditMetadata'));\n    });\n  };\n};\nexport var getDmsEditMetadataRequest = function getDmsEditMetadataRequest(params) {\n  return {\n    type: 'GET_EDIT_DMS_META_DATA_PENDING',\n    payload: params\n  };\n};\nexport var getDmsEditMetadataSuccess = function getDmsEditMetadataSuccess(data) {\n  return {\n    type: 'GET_EDIT_DMS_META_DATA_SUCCESS',\n    payload: data\n  };\n};\nexport var getDmsEditMetadataFailure = function getDmsEditMetadataFailure(error) {\n  return {\n    type: 'GET_EDIT_DMS_META_DATA_REJECTED',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.getDmsEditMetadata.js"],"names":["authLogout","addLoader","removeLoader","enqueueNotification","utils","getDmsEditMetadata","documentId","documentClassificationId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getDmsEditMetadataRequest","api","get","token","accessToken","dmsService","path","params","then","response","handleResponse","handleNewData","data","getDmsEditMetadataSuccess","err","getDmsEditMetadataFailure","handleUnauthorized","type","payload","error"],"mappings":";AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,EAA8CC,mBAA9C,QAAyE,QAAzE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,UAAD,EAAaC,wBAAb;AAAA,SAA0C,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClG;AADkG,oBAEvCA,QAAQ,EAF+B;AAAA,QAElFC,IAFkF,aAE1FC,IAF0F,CAElFD,IAFkF;AAAA,QAExDE,QAFwD,aAE1EC,MAF0E,CAEhEC,IAFgE,CAExDF,QAFwD;;AAIlG,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,yBAAyB,CAAC;AAAEV,MAAAA,wBAAwB,EAAEA;AAA5B,KAAD,CAA1B,CAAR;AACAC,IAAAA,QAAQ,CAACP,SAAS,CAAC,oBAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,UAFhB;AAGHC,MAAAA,IAAI,0BAAmBjB,UAAnB,iBAHD;AAIHkB,MAAAA,MAAM,EAAE;AAAEjB,QAAAA,wBAAwB,EAAEA;AAA5B;AAJL,KADA,EAOJkB,IAPI,CAOC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACc,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACc,GAAN,CAAUU,aAAV,CAAwBF,QAAxB,CAAd;AAAA,KARD,EASJD,IATI,CASC,UAACI,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,+CAAD,EAAkD,SAAlD,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACsB,yBAAyB,CAAC,CAAAD,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEA,IAAN,KAAc,EAAf,CAA1B,CAAR;AACA,aAAOA,IAAP;AACD,KAbI,WAcE,UAACE,GAAD,EAAS;AACdvB,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,+CAAD,EAAkD,OAAlD,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACwB,yBAAyB,CAACD,GAAD,EAAMhB,YAAN,CAA1B,CAAR;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCvB,QAAlC,EAA4CR,UAA5C;AACA,aAAO+B,GAAP;AACD,KAnBI,aAoBI,YAAM;AACbvB,MAAAA,QAAQ,CAACN,YAAY,CAAC,oBAAD,CAAb,CAAR;AACD,KAtBI,CAAP;AAuBD,GAlCiC;AAAA,CAA3B;AAoCP,OAAO,IAAMe,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACO,MAAD,EAAY;AACnD,SAAO;AACLU,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACD,IAAD,EAAU;AACjD,SAAO;AACLK,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACI,KAAD,EAAW;AAClD,SAAO;AACLF,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["//app\r\nimport { authLogout, addLoader, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getDmsEditMetadata = (documentId, documentClassificationId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getDmsEditMetadata',\r\n  };\r\n\r\n  dispatch(getDmsEditMetadataRequest({ documentClassificationId: documentClassificationId }));\r\n  dispatch(addLoader('getDmsEditMetadata'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `data/document/${documentId}/getMetadata`,\r\n      params: { documentClassificationId: documentClassificationId },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((response) => utils.api.handleNewData(response))\r\n    .then((data) => {\r\n      dispatch(enqueueNotification('dms.metadata.notifications.getMetadataSuccess', 'success'));\r\n      dispatch(getDmsEditMetadataSuccess(data?.data || {}));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(enqueueNotification('dms.metadata.notifications.getMetadataFailure', 'error'));\r\n      dispatch(getDmsEditMetadataFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getDmsEditMetadata'));\r\n    });\r\n};\r\n\r\nexport const getDmsEditMetadataRequest = (params) => {\r\n  return {\r\n    type: 'GET_EDIT_DMS_META_DATA_PENDING',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getDmsEditMetadataSuccess = (data) => {\r\n  return {\r\n    type: 'GET_EDIT_DMS_META_DATA_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getDmsEditMetadataFailure = (error) => {\r\n  return {\r\n    type: 'GET_EDIT_DMS_META_DATA_REJECTED',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}