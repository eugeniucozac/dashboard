{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateRFI\\\\CreateRFI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport { CreateRFIView } from './CreateRFI.view';\nimport { RFI_ON_CLAIMS, WEEKOFF_DAYS, REMINDER_DEFAULT, REMINDER_VALUES, API_RESPONSE_OK, REMINDER_NOT_REQUIRED, CREATE_RFI_FORM, PRIORITIES_ID, DMS_TASK_CONTEXT_TYPE_RFI } from 'consts';\nimport { getPriorityLevels, selectPriorities, selectClaimsAssignedToUsers, showModal, hideModal, selectQueryCodes, postSaveRFI, getClaimRfis, getUsersByOrg, resetClaimsAssignedToUsers, selectUserEmail, setDmsTaskContextType, resetDmsTaskTypeContext } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateRFI.propTypes = {\n  claim: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  type: PropTypes.string\n};\n\nvar getTargetBusinessDays = function getTargetBusinessDays(date, days) {\n  var currentDate = new Date(date);\n  var newDate = moment(new Date(currentDate.setDate(currentDate.getDate() + days)));\n  return newDate.weekday() === WEEKOFF_DAYS.sun.weekday ? newDate.add(WEEKOFF_DAYS.sun.addDays, 'd') : newDate.weekday() === WEEKOFF_DAYS.sat.weekday ? newDate.add(WEEKOFF_DAYS.sat.addDays, 'd') : newDate;\n};\n\nvar getTargetBasedReminder = function getTargetBasedReminder(createdDate, targetDate) {\n  var dateDiff = targetDate.diff(createdDate, 'days');\n  return dateDiff;\n};\n\nexport default function CreateRFI(_ref) {\n  _s();\n\n  var _selectAssignees$item,\n      _this = this;\n\n  var claim = _ref.claim,\n      cancelHandler = _ref.cancelHandler,\n      _ref$type = _ref.type,\n      type = _ref$type === void 0 ? RFI_ON_CLAIMS : _ref$type;\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities);\n  var queryCodes = useSelector(selectQueryCodes);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var userEmail = useSelector(selectUserEmail);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isTaskSubmitted = _useState2[0],\n      setIsTaskSubmitted = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uploadDocumentsControl = _useState4[0],\n      setUploadDocumentsControl = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rfiDetails = _useState6[0],\n      setRfiDetails = _useState6[1];\n\n  var assignedToUsers = selectAssignees === null || selectAssignees === void 0 ? void 0 : (_selectAssignees$item = selectAssignees.items) === null || _selectAssignees$item === void 0 ? void 0 : _selectAssignees$item.filter(function (user) {\n    return user.email !== userEmail;\n  });\n  var claimRef = (claim === null || claim === void 0 ? void 0 : claim.claimRef) || (claim === null || claim === void 0 ? void 0 : claim.processRef) || '';\n  var isTaskLevel = type === RFI_ON_CLAIMS ? false : true;\n  var selectedTaskName = (claim === null || claim === void 0 ? void 0 : claim.taskType) || '';\n  var reminderList = [{\n    id: '1D',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr')\n  }, {\n    id: '2D',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr')\n  }, {\n    id: '3D',\n    name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr')\n  }, {\n    id: '4D',\n    name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr')\n  }, {\n    id: '1W',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr')\n  }, {\n    id: '2W',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr')\n  }, {\n    id: 'NA',\n    name: utils.string.t('claims.processing.taskReminderLabels.noReminder')\n  }];\n  var fields = [{\n    name: 'queryCode',\n    type: 'autocompletemui',\n    options: queryCodes || [],\n    optionKey: 'queryCodeDetails',\n    optionLabel: 'queryCodeDescription',\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: priorities || [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().required(utils.string.t('validation.required')),\n    defaultValue: priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref2) {\n      var id = _ref2.id;\n      return id === PRIORITIES_ID[1];\n    })\n  }, {\n    name: 'sendTo',\n    type: 'autocompletemui',\n    options: assignedToUsers || [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    name: 'reminder',\n    type: 'autocompletemui',\n    options: (reminderList === null || reminderList === void 0 ? void 0 : reminderList.length) ? reminderList : [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: reminderList === null || reminderList === void 0 ? void 0 : reminderList.find(function (item) {\n      return item.id === REMINDER_DEFAULT;\n    })\n  }, {\n    type: 'datepicker',\n    name: 'targetDueDate',\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().nullable().test('targetDueDate', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\n      var createdDate = new moment();\n      return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\n    }),\n    outputFormat: 'iso',\n    value: new moment()\n  }, {\n    name: 'description',\n    type: 'textarea',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 500\n      },\n      multiline: true,\n      rows: 3,\n      rowsMax: 5\n    },\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var qcWatcher = watch('queryCode');\n  var targetDateWatcher = watch('targetDueDate');\n  var queryObj = queryCodes.find(function (query) {\n    return (qcWatcher === null || qcWatcher === void 0 ? void 0 : qcWatcher.queryCodeDetails) === query.queryCodeDetails;\n  });\n  useEffect(function () {\n    if (qcWatcher) {\n      var slaTargetDate = getTargetBusinessDays(new Date(), queryObj === null || queryObj === void 0 ? void 0 : queryObj.sla);\n      setValue('targetDueDate', slaTargetDate);\n    }\n  }, [qcWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (targetDateWatcher) {\n      var reminderDays = getTargetBasedReminder(new moment(), new moment(targetDateWatcher));\n      var remObj = [];\n      REMINDER_VALUES.forEach(function (reminder) {\n        if (reminder.days <= reminderDays) {\n          remObj.push(reminderList.find(function (list) {\n            return reminder.id === list.id;\n          }));\n        }\n      });\n      remObj.push(reminderList.find(function (list) {\n        return list.id === REMINDER_NOT_REQUIRED;\n      }));\n    }\n  }, [targetDateWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\n  // On click of cancel button\n\n  var launchConfirmModal = function launchConfirmModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('navigation.alert'),\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"secondary\",\n            children: utils.string.t('navigation.cancelMessage')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 15\n          }, _this),\n          submitHandler: function submitHandler() {\n            cancelHandler();\n          },\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var handleCreateRFI = function handleCreateRFI(values) {\n    var _values$reminder, _values$priority, _values$queryCode2;\n\n    var sendToObj = assignedToUsers.find(function (user) {\n      var _values$sendTo;\n\n      return user.email === (values === null || values === void 0 ? void 0 : (_values$sendTo = values.sendTo) === null || _values$sendTo === void 0 ? void 0 : _values$sendTo.email);\n    });\n    var queryCodeSelected = queryCodes === null || queryCodes === void 0 ? void 0 : queryCodes.find(function (item) {\n      var _values$queryCode;\n\n      return (item === null || item === void 0 ? void 0 : item.queryCodeDetails) === (values === null || values === void 0 ? void 0 : (_values$queryCode = values.queryCode) === null || _values$queryCode === void 0 ? void 0 : _values$queryCode.queryCodeDetails);\n    });\n    var rfiDetails = {\n      assignedTo: sendToObj.email,\n      assignedToTeam: sendToObj.organisationName,\n      caseIncidentId: claim.caseIncidentID,\n      dueDate: moment(values.targetDueDate).format(config.ui.format.date.numeric),\n      followUpDate: (values === null || values === void 0 ? void 0 : (_values$reminder = values.reminder) === null || _values$reminder === void 0 ? void 0 : _values$reminder.id) || null,\n      parentProcessId: (isTaskLevel ? claim === null || claim === void 0 ? void 0 : claim.rootProcessId : claim === null || claim === void 0 ? void 0 : claim.processID) || null,\n      priority: (values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id) || null,\n      queryCode: values === null || values === void 0 ? void 0 : (_values$queryCode2 = values.queryCode) === null || _values$queryCode2 === void 0 ? void 0 : _values$queryCode2.queryCodeDetails,\n      queryDescription: values.description,\n      rfiId: null,\n      parentTaskId: (claim === null || claim === void 0 ? void 0 : claim.taskId) || null,\n      bpmTaskId: (claim === null || claim === void 0 ? void 0 : claim.taskId) || null,\n      queryCodeDescription: (queryCodeSelected === null || queryCodeSelected === void 0 ? void 0 : queryCodeSelected.queryCodeDescription) || ''\n    };\n    dispatch(postSaveRFI(rfiDetails)).then(function (response) {\n      var _response$data, _response$data2, _response$status;\n\n      setRfiDetails({\n        taskId: response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.id\n      });\n      setIsTaskSubmitted(true);\n      dispatch(setDmsTaskContextType({\n        type: DMS_TASK_CONTEXT_TYPE_RFI,\n        refId: response === null || response === void 0 ? void 0 : (_response$data2 = response.data) === null || _response$data2 === void 0 ? void 0 : _response$data2.id\n      }));\n\n      if ((response === null || response === void 0 ? void 0 : (_response$status = response.status) === null || _response$status === void 0 ? void 0 : _response$status.toLowerCase()) === API_RESPONSE_OK.toLowerCase() && (claim === null || claim === void 0 ? void 0 : claim.processID)) {\n        dispatch(getClaimRfis({\n          claimID: claim.claimID\n        }));\n      }\n    });\n  };\n\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      launchConfirmModal();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.send'),\n    handler: function handler(values) {\n      handleCreateRFI(values);\n    }\n  }];\n  var dmsActions = {\n    skipUpload: {\n      label: utils.string.t('app.no'),\n      handler: function handler() {\n        setUploadDocumentsControl(false);\n        dispatch(hideModal());\n      }\n    },\n    upload: {\n      label: utils.string.t('app.yes'),\n      handler: function handler() {\n        setUploadDocumentsControl(true);\n      }\n    }\n  };\n  useEffect(function () {\n    dispatch(setDmsTaskContextType({\n      type: DMS_TASK_CONTEXT_TYPE_RFI\n    }));\n    dispatch(getPriorityLevels());\n    dispatch(resetClaimsAssignedToUsers());\n    dispatch(getUsersByOrg('', [claim], CREATE_RFI_FORM, true));\n    return function () {\n      return dispatch(resetDmsTaskTypeContext());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // abort\n\n  if (!(assignedToUsers.length > 0 && reminderList.length > 0)) return null;\n  return /*#__PURE__*/_jsxDEV(CreateRFIView, {\n    actions: actions,\n    fields: fields,\n    claimRef: claimRef,\n    rfiDetails: rfiDetails,\n    isTaskLevel: isTaskLevel,\n    isTaskSubmitted: isTaskSubmitted,\n    uploadDocumentsControl: uploadDocumentsControl,\n    selectedTaskName: selectedTaskName,\n    dmsActions: dmsActions,\n    formProps: {\n      control: control,\n      reset: reset,\n      errors: errors,\n      handleSubmit: handleSubmit,\n      formState: formState\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 289,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRFI, \"5DOJcTjJvvM5YGeO7a3W+Sh4Fpk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = CreateRFI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRFI\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateRFI/CreateRFI.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","moment","useForm","yupResolver","CreateRFIView","RFI_ON_CLAIMS","WEEKOFF_DAYS","REMINDER_DEFAULT","REMINDER_VALUES","API_RESPONSE_OK","REMINDER_NOT_REQUIRED","CREATE_RFI_FORM","PRIORITIES_ID","DMS_TASK_CONTEXT_TYPE_RFI","getPriorityLevels","selectPriorities","selectClaimsAssignedToUsers","showModal","hideModal","selectQueryCodes","postSaveRFI","getClaimRfis","getUsersByOrg","resetClaimsAssignedToUsers","selectUserEmail","setDmsTaskContextType","resetDmsTaskTypeContext","utils","config","Typography","CreateRFI","propTypes","claim","object","cancelHandler","func","type","string","getTargetBusinessDays","date","days","currentDate","Date","newDate","setDate","getDate","weekday","sun","add","addDays","sat","getTargetBasedReminder","createdDate","targetDate","dateDiff","diff","dispatch","priorities","queryCodes","selectAssignees","userEmail","isTaskSubmitted","setIsTaskSubmitted","uploadDocumentsControl","setUploadDocumentsControl","rfiDetails","setRfiDetails","assignedToUsers","items","filter","user","email","claimRef","processRef","isTaskLevel","selectedTaskName","taskType","reminderList","id","name","t","fields","options","optionKey","optionLabel","validation","required","defaultValue","find","nullable","length","value","item","icon","muiComponentProps","fullWidth","test","isSameOrAfter","outputFormat","inputProps","maxLength","multiline","rows","rowsMax","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","watch","setValue","qcWatcher","targetDateWatcher","queryObj","query","queryCodeDetails","slaTargetDate","sla","reminderDays","remObj","forEach","reminder","push","list","launchConfirmModal","component","props","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","submitHandler","handleClose","handleCreateRFI","values","sendToObj","sendTo","queryCodeSelected","queryCode","assignedTo","assignedToTeam","organisationName","caseIncidentId","caseIncidentID","dueDate","targetDueDate","format","ui","numeric","followUpDate","parentProcessId","rootProcessId","processID","priority","queryDescription","description","rfiId","parentTaskId","taskId","bpmTaskId","queryCodeDescription","then","response","data","refId","status","toLowerCase","claimID","actions","label","handler","dmsActions","skipUpload","upload"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport { CreateRFIView } from './CreateRFI.view';\r\nimport {\r\n  RFI_ON_CLAIMS,\r\n  WEEKOFF_DAYS,\r\n  REMINDER_DEFAULT,\r\n  REMINDER_VALUES,\r\n  API_RESPONSE_OK,\r\n  REMINDER_NOT_REQUIRED,\r\n  CREATE_RFI_FORM,\r\n  PRIORITIES_ID,\r\n  DMS_TASK_CONTEXT_TYPE_RFI,\r\n} from 'consts';\r\nimport {\r\n  getPriorityLevels,\r\n  selectPriorities,\r\n  selectClaimsAssignedToUsers,\r\n  showModal,\r\n  hideModal,\r\n  selectQueryCodes,\r\n  postSaveRFI,\r\n  getClaimRfis,\r\n  getUsersByOrg,\r\n  resetClaimsAssignedToUsers,\r\n  selectUserEmail,\r\n  setDmsTaskContextType,\r\n  resetDmsTaskTypeContext,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Typography } from '@material-ui/core';\r\n\r\nCreateRFI.propTypes = {\r\n  claim: PropTypes.object,\r\n  cancelHandler: PropTypes.func,\r\n  type: PropTypes.string,\r\n};\r\n\r\nconst getTargetBusinessDays = (date, days) => {\r\n  const currentDate = new Date(date);\r\n  const newDate = moment(new Date(currentDate.setDate(currentDate.getDate() + days)));\r\n  return newDate.weekday() === WEEKOFF_DAYS.sun.weekday\r\n    ? newDate.add(WEEKOFF_DAYS.sun.addDays, 'd')\r\n    : newDate.weekday() === WEEKOFF_DAYS.sat.weekday\r\n    ? newDate.add(WEEKOFF_DAYS.sat.addDays, 'd')\r\n    : newDate;\r\n};\r\n\r\nconst getTargetBasedReminder = (createdDate, targetDate) => {\r\n  const dateDiff = targetDate.diff(createdDate, 'days');\r\n  return dateDiff;\r\n};\r\n\r\nexport default function CreateRFI({ claim, cancelHandler, type = RFI_ON_CLAIMS }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const priorities = useSelector(selectPriorities);\r\n  const queryCodes = useSelector(selectQueryCodes);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const userEmail = useSelector(selectUserEmail);\r\n\r\n  const [isTaskSubmitted, setIsTaskSubmitted] = useState(false);\r\n  const [uploadDocumentsControl, setUploadDocumentsControl] = useState(false);\r\n  const [rfiDetails, setRfiDetails] = useState({});\r\n\r\n  const assignedToUsers = selectAssignees?.items?.filter((user) => user.email !== userEmail);\r\n  const claimRef = claim?.claimRef || claim?.processRef || '';\r\n  const isTaskLevel = type === RFI_ON_CLAIMS ? false : true;\r\n  const selectedTaskName = claim?.taskType || '';\r\n\r\n  const reminderList = [\r\n    { id: '1D', name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr') },\r\n    { id: '2D', name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr') },\r\n    { id: '3D', name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr') },\r\n    { id: '4D', name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr') },\r\n    { id: '1W', name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr') },\r\n    { id: '2W', name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr') },\r\n    { id: 'NA', name: utils.string.t('claims.processing.taskReminderLabels.noReminder') },\r\n  ];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'queryCode',\r\n      type: 'autocompletemui',\r\n      options: queryCodes || [],\r\n      optionKey: 'queryCodeDetails',\r\n      optionLabel: 'queryCodeDescription',\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n      defaultValue: priorities?.find(({ id }) => id === PRIORITIES_ID[1]),\r\n    },\r\n    {\r\n      name: 'sendTo',\r\n      type: 'autocompletemui',\r\n      options: assignedToUsers || [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'reminder',\r\n      type: 'autocompletemui',\r\n      options: reminderList?.length ? reminderList : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: reminderList?.find((item) => item.id === REMINDER_DEFAULT),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'targetDueDate',\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .test('targetDueDate', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\r\n          const createdDate = new moment();\r\n          return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\r\n        }),\r\n      outputFormat: 'iso',\r\n      value: new moment(),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 500 },\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 5,\r\n      },\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState, watch, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const qcWatcher = watch('queryCode');\r\n  const targetDateWatcher = watch('targetDueDate');\r\n  const queryObj = queryCodes.find((query) => qcWatcher?.queryCodeDetails === query.queryCodeDetails);\r\n\r\n  useEffect(() => {\r\n    if (qcWatcher) {\r\n      const slaTargetDate = getTargetBusinessDays(new Date(), queryObj?.sla);\r\n      setValue('targetDueDate', slaTargetDate);\r\n    }\r\n  }, [qcWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (targetDateWatcher) {\r\n      const reminderDays = getTargetBasedReminder(new moment(), new moment(targetDateWatcher));\r\n      const remObj = [];\r\n      REMINDER_VALUES.forEach((reminder) => {\r\n        if (reminder.days <= reminderDays) {\r\n          remObj.push(reminderList.find((list) => reminder.id === list.id));\r\n        }\r\n      });\r\n\r\n      remObj.push(reminderList.find((list) => list.id === REMINDER_NOT_REQUIRED));\r\n    }\r\n  }, [targetDateWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // On click of cancel button\r\n  const launchConfirmModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('navigation.alert'),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: (\r\n              <Typography variant=\"h5\" color=\"secondary\">\r\n                {utils.string.t('navigation.cancelMessage')}\r\n              </Typography>\r\n            ),\r\n            submitHandler: () => {\r\n              cancelHandler();\r\n            },\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCreateRFI = (values) => {\r\n    const sendToObj = assignedToUsers.find((user) => user.email === values?.sendTo?.email);\r\n    const queryCodeSelected = queryCodes?.find((item) => item?.queryCodeDetails === values?.queryCode?.queryCodeDetails);\r\n    const rfiDetails = {\r\n      assignedTo: sendToObj.email,\r\n      assignedToTeam: sendToObj.organisationName,\r\n      caseIncidentId: claim.caseIncidentID,\r\n      dueDate: moment(values.targetDueDate).format(config.ui.format.date.numeric),\r\n      followUpDate: values?.reminder?.id || null,\r\n      parentProcessId: (isTaskLevel ? claim?.rootProcessId : claim?.processID) || null,\r\n      priority: values?.priority?.id || null,\r\n      queryCode: values?.queryCode?.queryCodeDetails,\r\n      queryDescription: values.description,\r\n      rfiId: null,\r\n      parentTaskId: claim?.taskId || null,\r\n      bpmTaskId: claim?.taskId || null,\r\n      queryCodeDescription: queryCodeSelected?.queryCodeDescription || '',\r\n    };\r\n\r\n    dispatch(postSaveRFI(rfiDetails)).then((response) => {\r\n      setRfiDetails({ taskId: response?.data?.id });\r\n      setIsTaskSubmitted(true);\r\n      dispatch(setDmsTaskContextType({ type: DMS_TASK_CONTEXT_TYPE_RFI, refId: response?.data?.id }));\r\n      if (response?.status?.toLowerCase() === API_RESPONSE_OK.toLowerCase() && claim?.processID) {\r\n        dispatch(getClaimRfis({ claimID: claim.claimID }));\r\n      }\r\n    });\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        launchConfirmModal();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.send'),\r\n      handler: (values) => {\r\n        handleCreateRFI(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const dmsActions = {\r\n    skipUpload: {\r\n      label: utils.string.t('app.no'),\r\n      handler: () => {\r\n        setUploadDocumentsControl(false);\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n    upload: {\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => {\r\n        setUploadDocumentsControl(true);\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsTaskContextType({ type: DMS_TASK_CONTEXT_TYPE_RFI }));\r\n    dispatch(getPriorityLevels());\r\n    dispatch(resetClaimsAssignedToUsers());\r\n    dispatch(getUsersByOrg('', [claim], CREATE_RFI_FORM, true));\r\n\r\n    return () => dispatch(resetDmsTaskTypeContext());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // abort\r\n  if (!(assignedToUsers.length > 0 && reminderList.length > 0)) return null;\r\n\r\n  return (\r\n    <CreateRFIView\r\n      actions={actions}\r\n      fields={fields}\r\n      claimRef={claimRef}\r\n      rfiDetails={rfiDetails}\r\n      isTaskLevel={isTaskLevel}\r\n      isTaskSubmitted={isTaskSubmitted}\r\n      uploadDocumentsControl={uploadDocumentsControl}\r\n      selectedTaskName={selectedTaskName}\r\n      dmsActions={dmsActions}\r\n      formProps={{\r\n        control,\r\n        reset,\r\n        errors,\r\n        handleSubmit,\r\n        formState,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}