{"ast":null,"code":"import * as utils from 'utils';\nimport { authLogout, addLoader, removeLoader } from 'stores';\nexport var getParentList = function getParentList() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(getParentListRequest());\n    dispatch(addLoader('getParentList'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint === null || endpoint === void 0 ? void 0 : endpoint.edge,\n      path: 'api/client/parent'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getParentListSuccess(data));\n      dispatch(removeLoader('getParentList'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = {\n        file: 'stores/parent.actions.getList',\n        message: 'API fetch error (parent.getList)'\n      };\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getParentListFailure(err));\n      dispatch(removeLoader('getParentList'));\n      return err;\n    });\n  };\n};\nexport var getParentListRequest = function getParentListRequest() {\n  return {\n    type: 'PARENT_LIST_GET_REQUEST'\n  };\n};\nexport var getParentListSuccess = function getParentListSuccess(responseData) {\n  return {\n    type: 'PARENT_LIST_GET_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getParentListFailure = function getParentListFailure(error) {\n  return {\n    type: 'PARENT_LIST_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/parent/parent.actions.getList.js"],"names":["utils","authLogout","addLoader","removeLoader","getParentList","dispatch","getState","auth","user","endpoint","config","vars","getParentListRequest","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getParentListSuccess","catch","err","errorParams","file","message","handleError","handleUnauthorized","getParentListFailure","type","responseData","payload","error"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzD;AADyD,oBAEAA,QAAQ,EAFR;AAAA,QAEzCC,IAFyC,aAEjDC,IAFiD,CAEzCD,IAFyC;AAAA,QAEfE,QAFe,aAEjCC,MAFiC,CAEvBC,IAFuB,CAEfF,QAFe;;AAIzDJ,IAAAA,QAAQ,CAACO,oBAAoB,EAArB,CAAR;AACAP,IAAAA,QAAQ,CAACH,SAAS,CAAC,eAAD,CAAV,CAAR;AAEA,WAAOF,KAAK,CAACa,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAER,IAAI,CAACS,WADT;AAEHP,MAAAA,QAAQ,EAAEA,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEQ,IAFjB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcpB,KAAK,CAACa,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUtB,KAAK,CAACa,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,oBAAoB,CAACD,IAAD,CAArB,CAAR;AACAnB,MAAAA,QAAQ,CAACF,YAAY,CAAC,eAAD,CAAb,CAAR;AACA,aAAOqB,IAAP;AACD,KAZI,EAaJE,KAbI,CAaE,UAACC,GAAD,EAAS;AACd,UAAMC,WAAW,GAAG;AAClBC,QAAAA,IAAI,EAAE,+BADY;AAElBC,QAAAA,OAAO,EAAE;AAFS,OAApB;AAKA9B,MAAAA,KAAK,CAACa,GAAN,CAAUkB,WAAV,CAAsBJ,GAAtB,EAA2BC,WAA3B;AACA5B,MAAAA,KAAK,CAACa,GAAN,CAAUmB,kBAAV,CAA6BL,GAA7B,EAAkCtB,QAAlC,EAA4CJ,UAA5C;AACAI,MAAAA,QAAQ,CAAC4B,oBAAoB,CAACN,GAAD,CAArB,CAAR;AACAtB,MAAAA,QAAQ,CAACF,YAAY,CAAC,eAAD,CAAb,CAAR;AACA,aAAOwB,GAAP;AACD,KAxBI,CAAP;AAyBD,GAhC4B;AAAA,CAAtB;AAkCP,OAAO,IAAMf,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACxC,SAAO;AACLsB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMT,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACU,YAAD,EAAkB;AACpD,SAAO;AACLD,IAAAA,IAAI,EAAE,yBADD;AAELE,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMF,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACI,KAAD,EAAW;AAC7C,SAAO;AACLH,IAAAA,IAAI,EAAE,yBADD;AAELE,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\n\r\nexport const getParentList = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  dispatch(getParentListRequest());\r\n  dispatch(addLoader('getParentList'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint?.edge,\r\n      path: 'api/client/parent',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getParentListSuccess(data));\r\n      dispatch(removeLoader('getParentList'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        file: 'stores/parent.actions.getList',\r\n        message: 'API fetch error (parent.getList)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getParentListFailure(err));\r\n      dispatch(removeLoader('getParentList'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getParentListRequest = () => {\r\n  return {\r\n    type: 'PARENT_LIST_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getParentListSuccess = (responseData) => {\r\n  return {\r\n    type: 'PARENT_LIST_GET_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const getParentListFailure = (error) => {\r\n  return {\r\n    type: 'PARENT_LIST_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}