{"ast":null,"code":"import get from 'lodash/get';\nimport moment from 'moment'; //app\n\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nimport { CLAIM_PROCESSING_REQ_TYPES } from 'consts';\nexport var getClaimsTasksProcessingList = function getClaimsTasksProcessingList() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimsTasksProcessingList'\n    };\n    var newRequestType = (params === null || params === void 0 ? void 0 : params.requestType) || CLAIM_PROCESSING_REQ_TYPES.search;\n    var prevDirection = get(claims, 'tasksTab.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevSortBy = get(claims, 'tasksTab.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var prevQuery = get(claims, 'tasksTab.query') || '';\n    var newQuery = params.hasOwnProperty('query') ? params.query : prevQuery;\n    var prevSearchBy = get(claims, 'tasksTab.searchBy') || '';\n    var newSearchBy = params.hasOwnProperty('searchType') ? params.searchType : prevSearchBy;\n    var incomingFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\n    var datesExceptionFields = ['createdOn', 'targetDueDate', 'inceptionDate'];\n    var constructFilter = Object.entries(incomingFilterQuery);\n    var newFilterQuery = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n      var column = filter[0];\n      var filterValue = column === 'priority' ? filter[1].map(function (_ref) {\n        var id = _ref.id,\n            name = _ref.name;\n        return {\n          id: id,\n          name: name\n        };\n      }) : datesExceptionFields.indexOf(column) > -1 && filter[1] ? [{\n        id: 1,\n        name: moment(new Date(filter[1])).format('DD-MM-YYYY')\n      }] : filter[1];\n      return utils.generic.isValidArray(filterValue, true) && {\n        column: column,\n        filterValue: filterValue\n      };\n    }).filter(function (item) {\n      return item;\n    }) : null;\n    var appliedParams = {\n      newRequestType: newRequestType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newSearchBy: newSearchBy,\n      newFilterQuery: newFilterQuery\n    };\n    dispatch(getClaimsTasksProcessingListRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/workflow/claims/task/claims/search/\".concat(params.taskType),\n      data: {\n        requestType: newRequestType,\n        direction: newDirection,\n        page: params && params.page || 0,\n        pageSize: params && params.size || claims.tasksTab.pageSize,\n        sortBy: newSortBy,\n        search: newQuery,\n        searchBy: newSearchBy,\n        filterSearch: newFilterQuery\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getClaimsTasksProcessingListSuccess(json, newRequestType, params.taskType, newSortBy, newDirection, newQuery, incomingFilterQuery, params.navigation));\n      return json;\n    }).catch(function (err) {\n      dispatch(getClaimsTasksProcessingListFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getClaimsTasksProcessingListRequest = function getClaimsTasksProcessingListRequest(params) {\n  return {\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getClaimsTasksProcessingListSuccess = function getClaimsTasksProcessingListSuccess(json, newRequestType, taskType, newSortBy, newDirection, newQuery, incomingFilterQuery, navigation) {\n  return {\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_SUCCESS',\n    payload: {\n      requestTypes: newRequestType,\n      taskType: taskType,\n      items: json.data,\n      pagination: json.pagination,\n      sortBy: newSortBy,\n      dir: newDirection,\n      query: newQuery,\n      appliedFilters: incomingFilterQuery,\n      navigation: navigation\n    }\n  };\n};\nexport var getClaimsTasksProcessingListFailure = function getClaimsTasksProcessingListFailure(error, defaultError, isNonFilterTypeCall) {\n  return {\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_FAILURE',\n    payload: {\n      error: error,\n      defaultError: defaultError,\n      isNonFilterTypeCall: isNonFilterTypeCall\n    }\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimsTasksProcessingList.js"],"names":["get","moment","authLogout","utils","CLAIM_PROCESSING_REQ_TYPES","getClaimsTasksProcessingList","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","newRequestType","requestType","search","prevDirection","newDirection","hasOwnProperty","direction","prevSortBy","newSortBy","sortBy","prevQuery","newQuery","query","prevSearchBy","newSearchBy","searchType","incomingFilterQuery","filterTerm","datesExceptionFields","constructFilter","Object","entries","newFilterQuery","generic","isValidArray","map","filter","column","filterValue","id","name","indexOf","Date","format","item","appliedParams","getClaimsTasksProcessingListRequest","api","post","token","accessToken","claimService","path","taskType","data","page","pageSize","size","tasksTab","searchBy","filterSearch","then","response","handleResponse","handleNewData","json","getClaimsTasksProcessingListSuccess","navigation","catch","err","getClaimsTasksProcessingListFailure","handleUnauthorized","type","payload","requestTypes","items","pagination","dir","appliedFilters","error","isNonFilterTypeCall"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport { authLogout} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { CLAIM_PROCESSING_REQ_TYPES } from 'consts';\r\n\r\nexport const getClaimsTasksProcessingList =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getClaimsTasksProcessingList',\r\n    };\r\n\r\n    const newRequestType = params?.requestType || CLAIM_PROCESSING_REQ_TYPES.search;\r\n\r\n    const prevDirection = get(claims, 'tasksTab.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const prevSortBy = get(claims, 'tasksTab.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n    const prevQuery = get(claims, 'tasksTab.query') || '';\r\n    const newQuery = params.hasOwnProperty('query') ? params.query : prevQuery;\r\n\r\n    const prevSearchBy = get(claims, 'tasksTab.searchBy') || '';\r\n    const newSearchBy = params.hasOwnProperty('searchType') ? params.searchType : prevSearchBy;\r\n\r\n    const incomingFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\r\n    const datesExceptionFields = ['createdOn', 'targetDueDate', 'inceptionDate'];\r\n    const constructFilter = Object.entries(incomingFilterQuery);\r\n    const newFilterQuery = utils.generic.isValidArray(constructFilter, true)\r\n      ? constructFilter\r\n          .map((filter) => {\r\n            const column = filter[0];\r\n            const filterValue =\r\n              column === 'priority'\r\n                ? filter[1].map(({ id, name }) => ({ id, name }))\r\n                : datesExceptionFields.indexOf(column) > -1 && filter[1]\r\n                ? [{ id: 1, name: moment(new Date(filter[1])).format('DD-MM-YYYY') }]\r\n                : filter[1];\r\n            return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n          })\r\n          .filter((item) => item)\r\n      : null;\r\n\r\n    const appliedParams = { newRequestType, newDirection, newQuery, newSortBy, newSearchBy, newFilterQuery };\r\n\r\n    dispatch(getClaimsTasksProcessingListRequest({ params, appliedParams }));\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: `api/workflow/claims/task/claims/search/${params.taskType}`,\r\n        data: {\r\n          requestType: newRequestType,\r\n          direction: newDirection,\r\n          page: (params && params.page) || 0,\r\n          pageSize: (params && params.size) || claims.tasksTab.pageSize,\r\n          sortBy: newSortBy,\r\n          search: newQuery,\r\n          searchBy: newSearchBy,\r\n          filterSearch: newFilterQuery,\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => utils.api.handleNewData(data))\r\n      .then((json) => {\r\n        dispatch(\r\n          getClaimsTasksProcessingListSuccess(\r\n            json,\r\n            newRequestType,\r\n            params.taskType,\r\n            newSortBy,\r\n            newDirection,\r\n            newQuery,\r\n            incomingFilterQuery,\r\n            params.navigation\r\n          )\r\n        );\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getClaimsTasksProcessingListFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n  };\r\n\r\nexport const getClaimsTasksProcessingListRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getClaimsTasksProcessingListSuccess = (\r\n  json,\r\n  newRequestType,\r\n  taskType,\r\n  newSortBy,\r\n  newDirection,\r\n  newQuery,\r\n  incomingFilterQuery,\r\n  navigation\r\n) => {\r\n  return {\r\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_SUCCESS',\r\n    payload: {\r\n      requestTypes: newRequestType,\r\n      taskType,\r\n      items: json.data,\r\n      pagination: json.pagination,\r\n      sortBy: newSortBy,\r\n      dir: newDirection,\r\n      query: newQuery,\r\n      appliedFilters: incomingFilterQuery,\r\n      navigation,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getClaimsTasksProcessingListFailure = (error, defaultError, isNonFilterTypeCall) => {\r\n  return {\r\n    type: 'CLAIMS_TASKS_PROCESSING_LIST_GET_FAILURE',\r\n    payload: { error, defaultError, isNonFilterTypeCall },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}