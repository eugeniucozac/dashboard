{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getCaseClientTable = function getCaseClientTable(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var caseIncidentID = params.caseIncidentID,\n        _params$policyId = params.policyId,\n        policyId = _params$policyId === void 0 ? '' : _params$policyId,\n        _params$sourceId = params.sourceId,\n        sourceId = _params$sourceId === void 0 ? '' : _params$sourceId;\n    var request = {\n      caseIncidentID: caseIncidentID,\n      issueDocsType: 'Clients',\n      policyID: policyId,\n      sourceID: sourceId\n    };\n    dispatch(getCaseClientTableRequest(request));\n    dispatch(addLoader('getCaseClientTable'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'issueDocs/getIssueDocsDetails',\n      params: request\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getCaseClientTableSuccess(data));\n      return data;\n    }).catch(function (err) {\n      dispatch(getCaseClientTableFailure(err));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getCaseClientTable'));\n    });\n  };\n};\nexport var getCaseClientTableRequest = function getCaseClientTableRequest(params) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getCaseClientTableSuccess = function getCaseClientTableSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_SUCCESS',\n    payload: {\n      items: data.data\n    }\n  };\n};\nexport var getCaseClientTableFailure = function getCaseClientTableFailure(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getCaseClientTable.js"],"names":["authLogout","addLoader","removeLoader","utils","getCaseClientTable","params","dispatch","getState","auth","user","endpoint","config","vars","caseIncidentID","policyId","sourceId","request","issueDocsType","policyID","sourceID","getCaseClientTableRequest","api","get","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","data","getCaseClientTableSuccess","catch","err","getCaseClientTableFailure","handleUnauthorized","finally","type","payload","items","error"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMhEA,QAAQ,EANwD;AAAA,QAE1DC,IAF0D,aAElEC,IAFkE,CAE1DD,IAF0D;AAAA,QAIxDE,QAJwD,aAGlEC,MAHkE,CAIhEC,IAJgE,CAIxDF,QAJwD;;AAAA,QAQ5DG,cAR4D,GAQXR,MARW,CAQ5DQ,cAR4D;AAAA,2BAQXR,MARW,CAQ5CS,QAR4C;AAAA,QAQ5CA,QAR4C,iCAQjC,EARiC;AAAA,2BAQXT,MARW,CAQ7BU,QAR6B;AAAA,QAQ7BA,QAR6B,iCAQlB,EARkB;AAUpE,QAAMC,OAAO,GAAG;AAAEH,MAAAA,cAAc,EAAdA,cAAF;AAAkBI,MAAAA,aAAa,EAAE,SAAjC;AAA4CC,MAAAA,QAAQ,EAAEJ,QAAtD;AAAgEK,MAAAA,QAAQ,EAAEJ;AAA1E,KAAhB;AAEAT,IAAAA,QAAQ,CAACc,yBAAyB,CAACJ,OAAD,CAA1B,CAAR;AACAV,IAAAA,QAAQ,CAACL,SAAS,CAAC,oBAAD,CAAV,CAAR;AACA,WAAOE,KAAK,CAACkB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEf,IAAI,CAACgB,WADT;AAEHd,MAAAA,QAAQ,EAAEA,QAAQ,CAACe,UAFhB;AAGHC,MAAAA,IAAI,EAAE,+BAHH;AAIHrB,MAAAA,MAAM,EAAEW;AAJL,KADA,EAOJW,IAPI,CAOC,UAACC,QAAD;AAAA,aAAczB,KAAK,CAACkB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU3B,KAAK,CAACkB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACK,IAAD,EAAU;AACd1B,MAAAA,QAAQ,CAAC2B,yBAAyB,CAACD,IAAD,CAA1B,CAAR;AACA,aAAOA,IAAP;AACD,KAZI,EAaJE,KAbI,CAaE,UAACC,GAAD,EAAS;AACd7B,MAAAA,QAAQ,CAAC8B,yBAAyB,CAACD,GAAD,CAA1B,CAAR;AACAhC,MAAAA,KAAK,CAACkB,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkC7B,QAAlC,EAA4CN,UAA5C;AACA,aAAOmC,GAAP;AACD,KAjBI,EAkBJG,OAlBI,CAkBI,YAAM;AACbhC,MAAAA,QAAQ,CAACJ,YAAY,CAAC,oBAAD,CAAb,CAAR;AACD,KApBI,CAAP;AAqBD,GAnCiC;AAAA,CAA3B;AAqCP,OAAO,IAAMkB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACf,MAAD,EAAY;AACnD,SAAO;AACLkC,IAAAA,IAAI,EAAE,iDADD;AAELC,IAAAA,OAAO,EAAEnC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAM4B,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACD,IAAD,EAAU;AACjD,SAAO;AACLO,IAAAA,IAAI,EAAE,iDADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,KAAK,EAAET,IAAI,CAACA;AADL;AAFJ,GAAP;AAMD,CAPM;AASP,OAAO,IAAMI,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACM,KAAD,EAAW;AAClD,SAAO;AACLH,IAAAA,IAAI,EAAE,iDADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getCaseClientTable = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const { caseIncidentID, policyId = '', sourceId = '' } = params;\r\n\r\n  const request = { caseIncidentID, issueDocsType: 'Clients', policyID: policyId, sourceID: sourceId };\r\n\r\n  dispatch(getCaseClientTableRequest(request));\r\n  dispatch(addLoader('getCaseClientTable'));\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'issueDocs/getIssueDocsDetails',\r\n      params: request,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getCaseClientTableSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getCaseClientTableFailure(err));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getCaseClientTable'));\r\n    });\r\n};\r\n\r\nexport const getCaseClientTableRequest = (params) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getCaseClientTableSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getCaseClientTableFailure = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}