{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Comments\\\\Comments.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport styles from './Comments.styles';\nimport { CommentsView } from './Comments.view';\nimport { selectComments, getComments, postComment } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nComments.propTypes = {\n  id: PropTypes.string,\n  divider: PropTypes.bool,\n  title: PropTypes.string,\n  truncate: PropTypes.number,\n  placeholder: PropTypes.string\n};\nComments.defaultProps = {\n  truncate: 280\n};\nexport default function Comments(_ref) {\n  _s();\n\n  var id = _ref.id,\n      divider = _ref.divider,\n      title = _ref.title,\n      truncate = _ref.truncate,\n      placeholder = _ref.placeholder,\n      updateHasComments = _ref.updateHasComments;\n  var classes = makeStyles(styles, {\n    name: 'Comments'\n  })();\n  var dispatch = useDispatch();\n  var comments = useSelector(selectComments(id));\n  var user = useSelector(function (state) {\n    return state.user;\n  });\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var field = {\n    name: 'comment',\n    type: 'text',\n    placeholder: placeholder || utils.string.t('app.writeComment'),\n    value: '',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      multiline: true,\n      maxRows: 5,\n      classes: {\n        root: classes.input\n      },\n      'data-testid': \"comments-form\"\n    }\n  };\n  useEffect(function () {\n    if (id) {\n      dispatch(getComments(id));\n    }\n  }, [id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleClickExpand = function handleClickExpand(id) {\n    return function (event) {\n      setExpanded([].concat(_toConsumableArray(expanded), [id]));\n    };\n  };\n\n  var handleSubmit = function handleSubmit(reset) {\n    return /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(postComment(id, values));\n\n              case 2:\n                if (utils.generic.isFunction(updateHasComments)) {\n                  updateHasComments();\n                }\n\n                if (utils.generic.isFunction(reset)) {\n                  reset();\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function (_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n  }; // abort\n\n\n  if (!id) return null;\n  return /*#__PURE__*/_jsxDEV(CommentsView, {\n    id: id,\n    title: title,\n    comments: comments,\n    truncate: truncate,\n    expanded: expanded,\n    divider: divider,\n    field: field,\n    user: user,\n    handleClickExpand: handleClickExpand,\n    handlePostComment: handleSubmit\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Comments, \"5gHsYd6eg6+MYm9m9HfKMdburuU=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = Comments;\nComments.displayName = \"Comments\";\nComments.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Comments\",\n  \"props\": {\n    \"truncate\": {\n      \"defaultValue\": {\n        \"value\": \"280\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"divider\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Comments\\\\Comments.js\"] = {\n    name: \"Comments\",\n    docgenInfo: Comments.__docgenInfo,\n    path: \"src\\\\components\\\\Comments\\\\Comments.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Comments\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Comments/Comments.js"],"names":["React","useState","useEffect","PropTypes","useSelector","useDispatch","Yup","styles","CommentsView","selectComments","getComments","postComment","utils","makeStyles","Comments","propTypes","id","string","divider","bool","title","truncate","number","placeholder","defaultProps","updateHasComments","classes","name","dispatch","comments","user","state","expanded","setExpanded","field","type","t","value","validation","required","muiComponentProps","multiline","maxRows","root","input","handleClickExpand","event","handleSubmit","reset","values","generic","isFunction"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport styles from './Comments.styles';\r\nimport { CommentsView } from './Comments.view';\r\nimport { selectComments, getComments, postComment } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nComments.propTypes = {\r\n  id: PropTypes.string,\r\n  divider: PropTypes.bool,\r\n  title: PropTypes.string,\r\n  truncate: PropTypes.number,\r\n  placeholder: PropTypes.string,\r\n};\r\n\r\nComments.defaultProps = {\r\n  truncate: 280,\r\n};\r\n\r\nexport default function Comments({ id, divider, title, truncate, placeholder, updateHasComments }) {\r\n  const classes = makeStyles(styles, { name: 'Comments' })();\r\n  const dispatch = useDispatch();\r\n  const comments = useSelector(selectComments(id));\r\n  const user = useSelector((state) => state.user);\r\n\r\n  const [expanded, setExpanded] = useState([]);\r\n\r\n  const field = {\r\n    name: 'comment',\r\n    type: 'text',\r\n    placeholder: placeholder || utils.string.t('app.writeComment'),\r\n    value: '',\r\n    validation: Yup.string().required(utils.string.t('validation.required')),\r\n    muiComponentProps: {\r\n      multiline: true,\r\n      maxRows: 5,\r\n      classes: {\r\n        root: classes.input,\r\n      },\r\n      'data-testid': `comments-form`,\r\n    },\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (id) {\r\n        dispatch(getComments(id));\r\n      }\r\n    },\r\n    [id] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleClickExpand = (id) => (event) => {\r\n    setExpanded([...expanded, id]);\r\n  };\r\n\r\n  const handleSubmit = (reset) => async (values) => {\r\n    await dispatch(postComment(id, values));\r\n    if (utils.generic.isFunction(updateHasComments)) {\r\n      updateHasComments();\r\n    }\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset();\r\n    }\r\n  };\r\n\r\n  // abort\r\n  if (!id) return null;\r\n\r\n  return (\r\n    <CommentsView\r\n      id={id}\r\n      title={title}\r\n      comments={comments}\r\n      truncate={truncate}\r\n      expanded={expanded}\r\n      divider={divider}\r\n      field={field}\r\n      user={user}\r\n      handleClickExpand={handleClickExpand}\r\n      handlePostComment={handleSubmit}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}