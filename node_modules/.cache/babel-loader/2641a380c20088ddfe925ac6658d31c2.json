{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseClientTable\\\\PremiumProcessingCaseClientTable.view.js\",\n    _s = $RefreshSig$();\n\n//react\nimport { React, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; //app\n\nimport styles from './PremiumProcessingCaseClientTable.styles';\nimport * as utils from 'utils';\nimport { EmailManagementService, TableHead, TableCell, Button, Warning, Tooltip } from 'components';\nimport { useFlexiColumns, useSort } from 'hooks';\nimport * as constants from 'consts'; //mui\n\nimport { Table, TableBody, TableRow, TableContainer, makeStyles, Box, Collapse, Hidden } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseClientTableView.propTypes = {\n  accountName: PropTypes.string.isRequired,\n  caseDetailsObject: PropTypes.object.isRequired,\n  caseIncidentID: PropTypes.string.isRequired,\n  columnsData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired\n  })).isRequired,\n  clientTable: PropTypes.array.isRequired,\n  openEms: PropTypes.bool.isRequired,\n  clientDetails: PropTypes.object.isRequired,\n  frontEndSendDocs: PropTypes.bool.isRequired,\n  isSendEmailAllowed: PropTypes.bool.isRequired,\n  isFecSendEmailAllowed: PropTypes.bool.isRequired,\n  hasViewOrEditAccess: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    sendEmail: PropTypes.func.isRequired\n  }).isRequired,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseClientTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var accountName = _ref.accountName,\n      caseDetailsObject = _ref.caseDetailsObject,\n      caseIncidentID = _ref.caseIncidentID,\n      columnsData = _ref.columnsData,\n      clientTable = _ref.clientTable,\n      isSendEmailAllowed = _ref.isSendEmailAllowed,\n      isFecSendEmailAllowed = _ref.isFecSendEmailAllowed,\n      openEms = _ref.openEms,\n      clientDetails = _ref.clientDetails,\n      frontEndSendDocs = _ref.frontEndSendDocs,\n      hasViewOrEditAccess = _ref.hasViewOrEditAccess,\n      handlers = _ref.handlers,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseClientTable'\n  })();\n\n  var _useState = useState(columnsData),\n      _useState2 = _slicedToArray(_useState, 1),\n      columns = _useState2[0];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps;\n\n  var _useSort = useSort(columnsArray, {}),\n      cols = _useSort.cols;\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: openEms && caseIncidentID ? /*#__PURE__*/_jsxDEV(EmailManagementService, {\n      accountName: accountName,\n      caseDetailsObject: caseDetailsObject,\n      objectId: caseIncidentID,\n      objectCode: constants.EMS_CONTEXT_CASE,\n      emailType: constants.EMS_EMAIL_TYPE_CLIENT,\n      accountLabel: utils.string.t('ems.clientName'),\n      accountDetails: clientDetails,\n      handlers: {\n        goBack: handlers.goBack\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [columnsArray && /*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 30\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          size: \"small\",\n          children: utils.generic.isValidArray(clientTable, true) ? clientTable.map(function (clientData) {\n            return /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(TableRow, {\n                className: classes.root,\n                children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('client')), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Hidden, {\n                    xsDown: true,\n                    children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                      disableFocusListener: !hasViewOrEditAccess || isNotMyTaskView,\n                      disableHoverListener: !hasViewOrEditAccess || isNotMyTaskView,\n                      disableTouchListener: !hasViewOrEditAccess || isNotMyTaskView,\n                      title: /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [utils.string.t('premiumProcessing.client.clientName'), clientData.accountName, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 94,\n                          columnNumber: 35\n                        }, _this), utils.string.t('premiumProcessing.client.address'), \" \", clientData.clientAddress]\n                      }, void 0, true),\n                      placement: \"top\",\n                      nestedClasses: {\n                        tooltip: classnames(classes.toolTip)\n                      },\n                      children: clientData.accountName.substr(0, 30)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 27\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('documentSent')), {}, {\n                  children: clientData.documentsSend\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 105,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n                    className: clientData.status ? classes.enabled : classes.disabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 107,\n                    columnNumber: 27\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 106,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('sentDate')), {}, {\n                  children: clientData.sendDate\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('emailDocument')), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: function onClick() {\n                      clientData.documentSentType = clientData.documentsSend;\n                      handlers.sendEmail(clientData);\n                    },\n                    size: \"xsmall\",\n                    tooltip: {\n                      title: clientData.sendEmailDocument ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail') : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail')\n                    },\n                    variant: \"outlined\",\n                    color: \"default\",\n                    text: clientData.sendEmailDocument ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail') : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail'),\n                    light: true,\n                    disabled: !isSendEmailAllowed || isNotMyTaskView\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 29\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: 6,\n                    className: classes.style,\n                    children: /*#__PURE__*/_jsxDEV(Collapse, {\n                      in: frontEndSendDocs,\n                      timeout: \"auto\",\n                      unmountOnExit: true\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 137,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, _this), frontEndSendDocs ? /*#__PURE__*/_jsxDEV(TableRow, {\n                children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread({}, columnProps('client')), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 27\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('documentSent')), {}, {\n                  children: clientData.documentsSend_FECtoClient\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 27\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n                  children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n                    className: clientData.status_FECtoClient ? classes.enabled : classes.disabled\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 29\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 27\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('sentDate')), {}, {\n                  children: clientData.sendDate_FECtoClient\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 27\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('emailDocument')), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Button, {\n                    onClick: function onClick() {\n                      clientData.documentSentType = clientData.documentsSend_FECtoClient;\n                      handlers.sendEmail(clientData);\n                    },\n                    disabled: !isFecSendEmailAllowed || isNotMyTaskView || clientData.isNotBackOfficeToFecMailSent,\n                    size: \"xsmall\",\n                    tooltip: {\n                      title: utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail')\n                    },\n                    variant: \"outlined\",\n                    color: \"default\",\n                    text: clientData.sendEmailDocument_FECtoClient ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail') : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail'),\n                    light: true\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 29\n                  }, _this)\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 27\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 25\n              }, _this) : null]\n            }, void 0, true);\n          }) : /*#__PURE__*/_jsxDEV(Box, {\n            children: /*#__PURE__*/_jsxDEV(Warning, {\n              text: utils.string.t('premiumProcessing.processingClientTable.warningText'),\n              type: \"info\",\n              align: \"left\",\n              size: \"small\",\n              icon: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 175,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n\n_s(PremiumProcessingCaseClientTableView, \"8qSNIK2rOVR6uzFR9IQe5KvSJiE=\", false, function () {\n  return [useFlexiColumns, useSort];\n});\n\n_c = PremiumProcessingCaseClientTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseClientTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseClientTable/PremiumProcessingCaseClientTable.view.js"],"names":["React","useState","PropTypes","classnames","styles","utils","EmailManagementService","TableHead","TableCell","Button","Warning","Tooltip","useFlexiColumns","useSort","constants","Table","TableBody","TableRow","TableContainer","makeStyles","Box","Collapse","Hidden","CheckCircleOutlineIcon","PremiumProcessingCaseClientTableView","propTypes","accountName","string","isRequired","caseDetailsObject","object","caseIncidentID","columnsData","arrayOf","shape","id","label","node","clientTable","array","openEms","bool","clientDetails","frontEndSendDocs","isSendEmailAllowed","isFecSendEmailAllowed","hasViewOrEditAccess","handlers","sendEmail","func","isNotMyTaskView","classes","name","columns","columnsArray","columnProps","cols","EMS_CONTEXT_CASE","EMS_EMAIL_TYPE_CLIENT","t","goBack","generic","isValidArray","map","clientData","root","clientAddress","tooltip","toolTip","substr","documentsSend","status","enabled","disabled","sendDate","documentSentType","title","sendEmailDocument","style","documentsSend_FECtoClient","status_FECtoClient","sendDate_FECtoClient","isNotBackOfficeToFecMailSent","sendEmailDocument_FECtoClient"],"mappings":"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","sourcesContent":["//react\r\nimport { React, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n//app\r\nimport styles from './PremiumProcessingCaseClientTable.styles';\r\nimport * as utils from 'utils';\r\nimport { EmailManagementService, TableHead, TableCell, Button, Warning, Tooltip } from 'components';\r\nimport { useFlexiColumns, useSort } from 'hooks';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { Table, TableBody, TableRow, TableContainer, makeStyles, Box, Collapse, Hidden } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\n\r\nPremiumProcessingCaseClientTableView.propTypes = {\r\n  accountName: PropTypes.string.isRequired,\r\n  caseDetailsObject: PropTypes.object.isRequired,\r\n  caseIncidentID: PropTypes.string.isRequired,\r\n  columnsData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.node.isRequired,\r\n    })\r\n  ).isRequired,\r\n  clientTable: PropTypes.array.isRequired,\r\n  openEms: PropTypes.bool.isRequired,\r\n  clientDetails: PropTypes.object.isRequired,\r\n  frontEndSendDocs: PropTypes.bool.isRequired,\r\n  isSendEmailAllowed: PropTypes.bool.isRequired,\r\n  isFecSendEmailAllowed: PropTypes.bool.isRequired,\r\n  hasViewOrEditAccess: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    sendEmail: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseClientTableView({\r\n  accountName,\r\n  caseDetailsObject,\r\n  caseIncidentID,\r\n  columnsData,\r\n  clientTable,\r\n  isSendEmailAllowed,\r\n  isFecSendEmailAllowed,\r\n  openEms,\r\n  clientDetails,\r\n  frontEndSendDocs,\r\n  hasViewOrEditAccess,\r\n  handlers,\r\n  isNotMyTaskView,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseClientTable' })();\r\n  const [columns] = useState(columnsData);\r\n  const { columns: columnsArray, columnProps } = useFlexiColumns(columns);\r\n  const { cols } = useSort(columnsArray, {});\r\n  return (\r\n    <>\r\n      {openEms && caseIncidentID ? (\r\n        <EmailManagementService\r\n          accountName={accountName}\r\n          caseDetailsObject={caseDetailsObject}\r\n          objectId={caseIncidentID}\r\n          objectCode={constants.EMS_CONTEXT_CASE}\r\n          emailType={constants.EMS_EMAIL_TYPE_CLIENT}\r\n          accountLabel={utils.string.t('ems.clientName')}\r\n          accountDetails={clientDetails}\r\n          handlers={{\r\n            goBack: handlers.goBack,\r\n          }}\r\n        />\r\n      ) : (\r\n        <TableContainer>\r\n          <Table>\r\n            {columnsArray && <TableHead columns={cols} />}\r\n            <TableBody size=\"small\">\r\n              {utils.generic.isValidArray(clientTable, true) ? (\r\n                clientTable.map((clientData) => {\r\n                  return (\r\n                    <>\r\n                      <TableRow className={classes.root}>\r\n                        <TableCell {...columnProps('client')}>\r\n                          <Hidden xsDown>\r\n                            <Tooltip\r\n                              disableFocusListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                              disableHoverListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                              disableTouchListener={!hasViewOrEditAccess || isNotMyTaskView}\r\n                              title={\r\n                                <>\r\n                                  {utils.string.t('premiumProcessing.client.clientName')}\r\n                                  {clientData.accountName}\r\n                                  <br />\r\n                                  {utils.string.t('premiumProcessing.client.address')} {clientData.clientAddress}\r\n                                </>\r\n                              }\r\n                              placement=\"top\"\r\n                              nestedClasses={{ tooltip: classnames(classes.toolTip) }}\r\n                            >\r\n                              {clientData.accountName.substr(0, 30)}\r\n                            </Tooltip>\r\n                          </Hidden>\r\n                        </TableCell>\r\n                        <TableCell {...columnProps('documentSent')}>{clientData.documentsSend}</TableCell>\r\n                        <TableCell {...columnProps('status')}>\r\n                          <CheckCircleOutlineIcon className={clientData.status ? classes.enabled : classes.disabled} />\r\n                        </TableCell>\r\n                        <TableCell {...columnProps('sentDate')}>{clientData.sendDate}</TableCell>\r\n                        <TableCell {...columnProps('emailDocument')}>\r\n                          {\r\n                            <Button\r\n                              onClick={() => {\r\n                                clientData.documentSentType = clientData.documentsSend;\r\n                                handlers.sendEmail(clientData);\r\n                              }}\r\n                              size=\"xsmall\"\r\n                              tooltip={{\r\n                                title: clientData.sendEmailDocument\r\n                                  ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail')\r\n                                  : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail'),\r\n                              }}\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              text={\r\n                                clientData.sendEmailDocument\r\n                                  ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail')\r\n                                  : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail')\r\n                              }\r\n                              light\r\n                              disabled={!isSendEmailAllowed || isNotMyTaskView}\r\n                            />\r\n                          }\r\n                        </TableCell>\r\n                        <TableRow>\r\n                          <TableCell colSpan={6} className={classes.style}>\r\n                            <Collapse in={frontEndSendDocs} timeout=\"auto\" unmountOnExit />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      </TableRow>\r\n                      {frontEndSendDocs ? (\r\n                        <TableRow>\r\n                          <TableCell {...columnProps('client')}></TableCell>\r\n                          <TableCell {...columnProps('documentSent')}>{clientData.documentsSend_FECtoClient}</TableCell>\r\n                          <TableCell {...columnProps('status')}>\r\n                            <CheckCircleOutlineIcon className={clientData.status_FECtoClient ? classes.enabled : classes.disabled} />\r\n                          </TableCell>\r\n                          <TableCell {...columnProps('sentDate')}>{clientData.sendDate_FECtoClient}</TableCell>\r\n                          <TableCell {...columnProps('emailDocument')}>\r\n                            <Button\r\n                              onClick={() => {\r\n                                clientData.documentSentType = clientData.documentsSend_FECtoClient;\r\n                                handlers.sendEmail(clientData);\r\n                              }}\r\n                              disabled={!isFecSendEmailAllowed || isNotMyTaskView || clientData.isNotBackOfficeToFecMailSent}\r\n                              size=\"xsmall\"\r\n                              tooltip={{ title: utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail') }}\r\n                              variant=\"outlined\"\r\n                              color=\"default\"\r\n                              text={\r\n                                clientData.sendEmailDocument_FECtoClient\r\n                                  ? utils.string.t('premiumProcessing.processingClientTable.tableColumns.viewEmail')\r\n                                  : utils.string.t('premiumProcessing.processingClientTable.tableColumns.sendEmail')\r\n                              }\r\n                              light\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      ) : null}\r\n                    </>\r\n                  );\r\n                })\r\n              ) : (\r\n                <Box>\r\n                  <Warning\r\n                    text={utils.string.t('premiumProcessing.processingClientTable.warningText')}\r\n                    type=\"info\"\r\n                    align=\"left\"\r\n                    size=\"small\"\r\n                    icon\r\n                  />\r\n                </Box>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}