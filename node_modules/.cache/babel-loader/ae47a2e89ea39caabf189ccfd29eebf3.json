{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ProcessingInstructionsSteps\\\\ProcessingInstructionsSteps.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams, useHistory } from 'react-router';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get'; //app\n\nimport { ProcessingInstructionsStepsView } from './ProcessingInstructionsSteps.view';\nimport { AccessControl } from 'components';\nimport { enqueueNotification, getUsersInRoles, getFacilityTypes, getDepartments, selectProcessingInstructionById, getProcessingInstruction, storeResetAllState, selectUser, selectPiProducingBrokers, selectPiAccountExecutives, selectPiFacilityTypes, selectPiDepartmentList, resetProcessingInstruction, updateReferenceDocumentCountLoading, getRiskReferenceDocumentsCount, getRiskReferencesDocumentsCountList } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar ProcessingInstructionsSteps = function ProcessingInstructionsSteps() {\n  _s();\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id,\n      step = _useParams.step,\n      tab = _useParams.tab;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      steps = _useState2[0],\n      setSteps = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      fetchInstruction = _useState6[0],\n      setFetchInstruction = _useState6[1];\n\n  var _useState7 = useState({}),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fetchDepartments = _useState8[0],\n      setFetchDepartments = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      fetchUsersInRoles = _useState10[0],\n      setFetchUsersInRoles = _useState10[1];\n\n  var _useState11 = useState({}),\n      _useState12 = _slicedToArray(_useState11, 2),\n      fetchFacilityTypes = _useState12[0],\n      setFetchFacilityTypes = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      checkListMandatoryDataStatus = _useState14[0],\n      setcheckListMandatoryDataStatus = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      processingInstructionMandatoryDataStatus = _useState16[0],\n      setprocessingInstructionMandatoryDataStatus = _useState16[1];\n\n  var user = useSelector(selectUser);\n  var producingBrokers = useSelector(selectPiProducingBrokers);\n  var accountExecutives = useSelector(selectPiAccountExecutives);\n  var facilityTypes = useSelector(selectPiFacilityTypes);\n  var departmentList = useSelector(selectPiDepartmentList);\n  var instruction = useSelector(selectProcessingInstructionById(id));\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {};\n  var riskReferencesDocumentsCountList = useSelector(getRiskReferencesDocumentsCountList);\n  var isClosing = utils.processingInstructions.isClosing(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFdo = utils.processingInstructions.isFdo(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var processTypeName = utils.processingInstructions.getProcessTypeName(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var userHasApproverAccess = utils.app.access.feature('processingInstructions.approverChecklist', ['create', 'update'], user);\n  var isEditAllowed = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\n  var isReadOnly = !isEditAllowed;\n  var isPageReady = fetchInstruction.done && fetchDepartments.done && fetchUsersInRoles.done && fetchFacilityTypes.done;\n  var faBorderProcessType = isBordereau || isFeeAndAmendment;\n  var stepsMap = {\n    closing: {\n      'add-risk-reference': 0,\n      checklist: 1,\n      'processing-instruction': 2,\n      authorisations: 3\n    },\n    endorsement: {\n      'add-risk-reference': 0,\n      'processing-instruction': 1\n    },\n    fdo: {\n      'add-risk-reference': 0,\n      checklist: 1,\n      'processing-instruction': 2,\n      authorisations: 3\n    },\n    bordereau: {\n      'add-risk-reference': 0,\n      'processing-instruction': 1\n    },\n    feeAmendment: {\n      'add-risk-reference': 0,\n      'processing-instruction': 1\n    }\n  };\n\n  var getRiskReferenceDocumentCount = function getRiskReferenceDocumentCount() {\n    if (utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n      var _documents$riskRefere;\n\n      dispatch(updateReferenceDocumentCountLoading(true));\n      var referenceList = documents === null || documents === void 0 ? void 0 : (_documents$riskRefere = documents.riskReferences) === null || _documents$riskRefere === void 0 ? void 0 : _documents$riskRefere.map(function (refData) {\n        return {\n          endorsementId: refData.endorsementId,\n          endorsementNumber: refData.endorsementNumber,\n          riskRefId: refData.riskRefId,\n          xbInstanceId: refData.xbInstanceId,\n          xbPolicyId: refData.xbPolicyId\n        };\n      });\n      var documentTypeValue = isEndorsement ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription : faBorderProcessType ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue));\n    }\n  };\n\n  useEffect(function () {\n    getRiskReferenceDocumentCount();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (activeStep === 2 || activeStep === 3) {\n      var checkListMandatoryData = true;\n\n      if (utils.generic.isValidObject(instruction === null || instruction === void 0 ? void 0 : instruction.details) && utils.generic.isValidArray(instruction === null || instruction === void 0 ? void 0 : instruction.checklist, true)) {\n        checkListMandatoryData = utils.processingInstructions.checkProcessingInstructionMandatoryData({\n          checklist: constants.CHECKLIST_DATA_LIST,\n          details: constants.DETAILS_DATA_LIST\n        }, {\n          checklist: instruction === null || instruction === void 0 ? void 0 : instruction.checklist,\n          details: instruction === null || instruction === void 0 ? void 0 : instruction.details\n        });\n      } else {\n        checkListMandatoryData = false;\n      }\n\n      if (checkListMandatoryData && utils.generic.isValidArray(riskReferencesDocumentsCountList, true) && utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n        checkListMandatoryData = utils.processingInstructions.checkProcessingInstructionMandatoryData({\n          riskReference: {\n            documentCount: true\n          }\n        }, {\n          riskReference: riskReferencesDocumentsCountList\n        });\n      }\n\n      setcheckListMandatoryDataStatus(!checkListMandatoryData);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [riskReferencesDocumentsCountList, instruction === null || instruction === void 0 ? void 0 : instruction.details, instruction === null || instruction === void 0 ? void 0 : instruction.checklist, activeStep]);\n  useEffect(function () {\n    if (activeStep === 3) {\n      var checkProcessingInstructionData = true;\n\n      if (utils.generic.isValidArray(instruction === null || instruction === void 0 ? void 0 : instruction.financialChecklist, true)) {\n        checkProcessingInstructionData = utils.processingInstructions.checkProcessingInstructionMandatoryData({\n          financialChecklist: constants.FINANCIAL_CHECKLIST_DATA_LIST\n        }, {\n          financialChecklist: instruction === null || instruction === void 0 ? void 0 : instruction.financialChecklist,\n          premiumTaxDocument: documents === null || documents === void 0 ? void 0 : documents.premiumTaxDocument,\n          signedLinesDocument: documents === null || documents === void 0 ? void 0 : documents.signedLinesDocument\n        });\n      } else {\n        checkProcessingInstructionData = false;\n      }\n\n      setprocessingInstructionMandatoryDataStatus(!checkProcessingInstructionData);\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [instruction === null || instruction === void 0 ? void 0 : instruction.financialChecklist, activeStep]);\n  useEffect(function () {\n    // fetch departments\n    if (utils.generic.isInvalidOrEmptyArray(departmentList) && !fetchDepartments.loading) {\n      setFetchDepartments({\n        done: false,\n        loading: true\n      });\n      dispatch(getDepartments()).then(function (res) {\n        if (utils.generic.isValidArray(res)) {\n          setFetchDepartments({\n            done: true,\n            loading: false\n          });\n        }\n      });\n    } else {\n      setFetchDepartments({\n        done: true,\n        loading: false\n      });\n    } // fetch users in roles\n\n\n    if ((utils.generic.isInvalidOrEmptyArray(producingBrokers) || utils.generic.isInvalidOrEmptyArray(accountExecutives)) && !fetchUsersInRoles.loading) {\n      setFetchUsersInRoles({\n        done: false,\n        loading: true\n      });\n      dispatch(getUsersInRoles([constants.PRODUCING_BROKER, constants.ACCOUNT_EXECUTIVE])).then(function (res) {\n        if (utils.generic.isValidArray(res)) {\n          setFetchUsersInRoles({\n            done: true,\n            loading: false\n          });\n        }\n      });\n    } else {\n      setFetchUsersInRoles({\n        done: true,\n        loading: false\n      });\n    } // cleanup\n\n\n    return function () {\n      dispatch(resetProcessingInstruction());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    // fetch processing instruction by ID if not loaded\n    if (!(instruction === null || instruction === void 0 ? void 0 : instruction.id) && !fetchInstruction.loading) {\n      setFetchInstruction({\n        done: false,\n        loading: true\n      });\n      dispatch(getProcessingInstruction(id)).then(function (res) {\n        setFetchInstruction({\n          done: true,\n          loading: false\n        });\n        var notificationParams = {\n          data: {\n            id: id\n          },\n          keepAfterUrlChange: true\n        };\n\n        if (!(res === null || res === void 0 ? void 0 : res.id)) {\n          var _res$json, _res$json2, _res$json3;\n\n          // if user is Assigned Signatory and status is not submitted authorised/processing\n          if ((res === null || res === void 0 ? void 0 : (_res$json = res.json) === null || _res$json === void 0 ? void 0 : _res$json.message) === 'pi.status.not.allowed') {\n            dispatch(enqueueNotification('processingInstructions.notifications.statusNotAllowed', 'warning', notificationParams)); // if user doesn't have access to the instances and/or departments\n          } else if ((res === null || res === void 0 ? void 0 : (_res$json2 = res.json) === null || _res$json2 === void 0 ? void 0 : _res$json2.message) === 'pi.instance.dept.unauthorised') {\n            dispatch(enqueueNotification('processingInstructions.notifications.instanceDeptUnauthorised', 'warning', notificationParams)); // status was meanwhile changed to rejected draft\n          } else if ((res === null || res === void 0 ? void 0 : (_res$json3 = res.json) === null || _res$json3 === void 0 ? void 0 : _res$json3.message) === 'pi.status.rejected.draft') {\n            dispatch(enqueueNotification('processingInstructions.notifications.statusChangedToRejected', 'warning', notificationParams)); // if PI not found\n          } else {\n            dispatch(enqueueNotification('processingInstructions.notifications.notFound', 'warning', notificationParams));\n          }\n\n          history.replace(config.routes.processingInstructions.root);\n        }\n      });\n    } // fetch facility types\n\n\n    if (isFdo && utils.generic.isInvalidOrEmptyArray(facilityTypes) && !fetchFacilityTypes.loading) {\n      setFetchFacilityTypes({\n        done: false,\n        loading: true\n      });\n      dispatch(getFacilityTypes()).then(function (res) {\n        if (utils.generic.isValidArray(res)) {\n          setFetchFacilityTypes({\n            done: true,\n            loading: false\n          });\n        }\n      });\n    } else {\n      setFetchFacilityTypes({\n        done: true,\n        loading: false\n      });\n    }\n  }, [instruction === null || instruction === void 0 ? void 0 : instruction.id]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    dispatch(storeResetAllState(isEditAllowed));\n  }, [isReadOnly, isSubmittedAuthorisedSignatory]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isPageReady) {\n      // set the available steps for different process types\n      var currentSteps = [];\n\n      if (isClosing || isFdo) {\n        currentSteps = [{\n          slug: 'add-risk-reference',\n          label: utils.string.t('processingInstructions.steps.addRiskRefs')\n        }, {\n          slug: 'checklist',\n          label: utils.string.t('processingInstructions.steps.checklist')\n        }, {\n          slug: 'processing-instruction',\n          label: utils.string.t('processingInstructions.steps.details')\n        }, {\n          slug: 'authorisations',\n          label: utils.string.t('processingInstructions.steps.authorisations')\n        }];\n      } else {\n        currentSteps = [{\n          slug: 'add-risk-reference',\n          label: utils.string.t('processingInstructions.steps.addRiskRefs')\n        }, {\n          slug: 'processing-instruction',\n          label: utils.string.t('processingInstructions.steps.details')\n        }];\n      }\n\n      setSteps(currentSteps); // redirection logic\n      // if step is defined in URL route params\n\n      if (step) {\n        // if URL step param is not a valid step slug\n        if (!currentSteps.map(function (item) {\n          return item.slug;\n        }).includes(step)) {\n          history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id, \"/\").concat(currentSteps[0].slug));\n        }\n      } else {\n        // if user is Assigned Signatory\n        // AND type is closing OR fdo\n        // AND status is submittedToAuthorisedSignatory OR submittedForProcessing\n        if (userHasApproverAccess && (isClosing || isFdo) && (isSubmittedAuthorisedSignatory || isSubmittedProcessing)) {\n          history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id, \"/checklist\")); // if type is closing OR fdo\n          // AND status is reopened\n        } else if (isReopened && (isClosing || isFdo)) {\n          history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id, \"/checklist\"));\n        } else if (isReopened && (isFeeAndAmendment || isBordereau || isEndorsement)) {\n          history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id, \"/processing-instruction\"));\n        } else {\n          history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id, \"/\").concat(currentSteps[0].slug));\n        }\n      } // set the active step based on URL params or fallback to override custom logic if any applies\n\n\n      if (processTypeName) {\n        var _stepsMap$processType;\n\n        setActiveStep(step ? (_stepsMap$processType = stepsMap[processTypeName]) === null || _stepsMap$processType === void 0 ? void 0 : _stepsMap$processType[step] : 0);\n      }\n    }\n  }, [isPageReady, processTypeName, step]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleNext = function handleNext(step) {\n    history.push(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id).concat(step ? \"/\".concat(step) : ''));\n  };\n\n  var handleBack = function handleBack(step) {\n    history.push(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id).concat(step ? \"/\".concat(step) : ''));\n  }; // abort\n\n\n  if (!isPageReady || !instruction || !id || !processTypeName) return null;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('processingInstructions.edit.title'), \" (\").concat(id, \") - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 330,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 329,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(AccessControl, {\n      feature: \"processingInstructions.processingInstructions\",\n      permissions: \"read\",\n      children: /*#__PURE__*/_jsxDEV(ProcessingInstructionsStepsView, {\n        instruction: instruction,\n        urlParams: {\n          id: parseInt(id),\n          step: step,\n          tab: tab\n        },\n        type: processTypeName,\n        steps: steps,\n        stepsMap: stepsMap,\n        activeStep: activeStep,\n        departmentList: departmentList,\n        checkListMandatoryDataStatus: checkListMandatoryDataStatus,\n        processingInstructionMandatoryDataStatus: processingInstructionMandatoryDataStatus,\n        handlers: {\n          back: handleBack,\n          next: handleNext\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 333,\n        columnNumber: 9\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 332,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true);\n};\n\n_s(ProcessingInstructionsSteps, \"K1xy+hsHmbokEK8dtHdvqLdLIWU=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsSteps;\nexport default ProcessingInstructionsSteps;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsSteps\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useParams","useHistory","Helmet","get","ProcessingInstructionsStepsView","AccessControl","enqueueNotification","getUsersInRoles","getFacilityTypes","getDepartments","selectProcessingInstructionById","getProcessingInstruction","storeResetAllState","selectUser","selectPiProducingBrokers","selectPiAccountExecutives","selectPiFacilityTypes","selectPiDepartmentList","resetProcessingInstruction","updateReferenceDocumentCountLoading","getRiskReferenceDocumentsCount","getRiskReferencesDocumentsCountList","constants","utils","config","ProcessingInstructionsSteps","dispatch","history","id","step","tab","steps","setSteps","activeStep","setActiveStep","fetchInstruction","setFetchInstruction","fetchDepartments","setFetchDepartments","fetchUsersInRoles","setFetchUsersInRoles","fetchFacilityTypes","setFetchFacilityTypes","checkListMandatoryDataStatus","setcheckListMandatoryDataStatus","processingInstructionMandatoryDataStatus","setprocessingInstructionMandatoryDataStatus","user","producingBrokers","accountExecutives","facilityTypes","departmentList","instruction","brand","state","ui","documents","riskReferencesDocumentsCountList","isClosing","processingInstructions","processTypeId","isFdo","isFeeAndAmendment","isBordereau","isEndorsement","isDraft","status","statusId","isRejectedDraft","isReopened","isSubmittedAuthorisedSignatory","isSubmittedProcessing","processTypeName","getProcessTypeName","userHasWritePermission","app","access","feature","userHasApproverAccess","isEditAllowed","isReadOnly","isPageReady","done","faBorderProcessType","stepsMap","closing","checklist","authorisations","endorsement","fdo","bordereau","feeAmendment","getRiskReferenceDocumentCount","generic","isValidArray","riskReferences","referenceList","map","refData","endorsementId","endorsementNumber","riskRefId","xbInstanceId","xbPolicyId","documentTypeValue","PI_ENDORSEMENT_TYPE_DOCUMENT","documentTypeDescription","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","checkListMandatoryData","isValidObject","details","checkProcessingInstructionMandatoryData","CHECKLIST_DATA_LIST","DETAILS_DATA_LIST","riskReference","documentCount","checkProcessingInstructionData","financialChecklist","FINANCIAL_CHECKLIST_DATA_LIST","premiumTaxDocument","signedLinesDocument","isInvalidOrEmptyArray","loading","then","res","PRODUCING_BROKER","ACCOUNT_EXECUTIVE","notificationParams","data","keepAfterUrlChange","json","message","replace","routes","root","currentSteps","slug","label","string","t","item","includes","handleNext","push","handleBack","getAppName","parseInt","back","next"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { Helmet } from 'react-helmet';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport { ProcessingInstructionsStepsView } from './ProcessingInstructionsSteps.view';\r\nimport { AccessControl } from 'components';\r\nimport {\r\n  enqueueNotification,\r\n  getUsersInRoles,\r\n  getFacilityTypes,\r\n  getDepartments,\r\n  selectProcessingInstructionById,\r\n  getProcessingInstruction,\r\n  storeResetAllState,\r\n  selectUser,\r\n  selectPiProducingBrokers,\r\n  selectPiAccountExecutives,\r\n  selectPiFacilityTypes,\r\n  selectPiDepartmentList,\r\n  resetProcessingInstruction,\r\n  updateReferenceDocumentCountLoading,\r\n  getRiskReferenceDocumentsCount,\r\n  getRiskReferencesDocumentsCountList,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nconst ProcessingInstructionsSteps = () => {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id, step, tab } = useParams();\r\n\r\n  const [steps, setSteps] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [fetchInstruction, setFetchInstruction] = useState({});\r\n  const [fetchDepartments, setFetchDepartments] = useState({});\r\n  const [fetchUsersInRoles, setFetchUsersInRoles] = useState({});\r\n  const [fetchFacilityTypes, setFetchFacilityTypes] = useState({});\r\n  const [checkListMandatoryDataStatus, setcheckListMandatoryDataStatus] = useState(false);\r\n  const [processingInstructionMandatoryDataStatus, setprocessingInstructionMandatoryDataStatus] = useState(false);\r\n\r\n  const user = useSelector(selectUser);\r\n  const producingBrokers = useSelector(selectPiProducingBrokers);\r\n  const accountExecutives = useSelector(selectPiAccountExecutives);\r\n  const facilityTypes = useSelector(selectPiFacilityTypes);\r\n  const departmentList = useSelector(selectPiDepartmentList);\r\n  const instruction = useSelector(selectProcessingInstructionById(id));\r\n  const brand = useSelector((state) => state.ui.brand);\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n  const riskReferencesDocumentsCountList = useSelector(getRiskReferencesDocumentsCountList);\r\n\r\n  const isClosing = utils.processingInstructions.isClosing(instruction?.processTypeId);\r\n  const isFdo = utils.processingInstructions.isFdo(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction?.statusId);\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction?.statusId);\r\n  const processTypeName = utils.processingInstructions.getProcessTypeName(instruction?.processTypeId);\r\n\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const userHasApproverAccess = utils.app.access.feature('processingInstructions.approverChecklist', ['create', 'update'], user);\r\n  const isEditAllowed = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\r\n  const isReadOnly = !isEditAllowed;\r\n  const isPageReady = fetchInstruction.done && fetchDepartments.done && fetchUsersInRoles.done && fetchFacilityTypes.done;\r\n  const faBorderProcessType = isBordereau || isFeeAndAmendment;\r\n\r\n  const stepsMap = {\r\n    closing: {\r\n      'add-risk-reference': 0,\r\n      checklist: 1,\r\n      'processing-instruction': 2,\r\n      authorisations: 3,\r\n    },\r\n    endorsement: {\r\n      'add-risk-reference': 0,\r\n      'processing-instruction': 1,\r\n    },\r\n    fdo: {\r\n      'add-risk-reference': 0,\r\n      checklist: 1,\r\n      'processing-instruction': 2,\r\n      authorisations: 3,\r\n    },\r\n    bordereau: {\r\n      'add-risk-reference': 0,\r\n      'processing-instruction': 1,\r\n    },\r\n    feeAmendment: {\r\n      'add-risk-reference': 0,\r\n      'processing-instruction': 1,\r\n    },\r\n  };\r\n\r\n  const getRiskReferenceDocumentCount = () => {\r\n    if (utils.generic.isValidArray(documents?.riskReferences, true)) {\r\n      dispatch(updateReferenceDocumentCountLoading(true));\r\n      const referenceList = documents?.riskReferences?.map((refData) => {\r\n        return {\r\n          endorsementId: refData.endorsementId,\r\n          endorsementNumber: refData.endorsementNumber,\r\n          riskRefId: refData.riskRefId,\r\n          xbInstanceId: refData.xbInstanceId,\r\n          xbPolicyId: refData.xbPolicyId,\r\n        };\r\n      });\r\n      const documentTypeValue = isEndorsement\r\n        ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription\r\n        : faBorderProcessType\r\n        ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription\r\n        : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\r\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRiskReferenceDocumentCount();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 2 || activeStep === 3) {\r\n      let checkListMandatoryData = true;\r\n      if (utils.generic.isValidObject(instruction?.details) && utils.generic.isValidArray(instruction?.checklist, true)) {\r\n        checkListMandatoryData = utils.processingInstructions.checkProcessingInstructionMandatoryData(\r\n          {\r\n            checklist: constants.CHECKLIST_DATA_LIST,\r\n            details: constants.DETAILS_DATA_LIST,\r\n          },\r\n          { checklist: instruction?.checklist, details: instruction?.details }\r\n        );\r\n      } else {\r\n        checkListMandatoryData = false;\r\n      }\r\n      if (\r\n        checkListMandatoryData &&\r\n        utils.generic.isValidArray(riskReferencesDocumentsCountList, true) &&\r\n        utils.generic.isValidArray(documents?.riskReferences, true)\r\n      ) {\r\n        checkListMandatoryData = utils.processingInstructions.checkProcessingInstructionMandatoryData(\r\n          { riskReference: { documentCount: true } },\r\n          { riskReference: riskReferencesDocumentsCountList }\r\n        );\r\n      }\r\n      setcheckListMandatoryDataStatus(!checkListMandatoryData);\r\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [riskReferencesDocumentsCountList, instruction?.details, instruction?.checklist, activeStep]);\r\n\r\n  useEffect(() => {\r\n    if (activeStep === 3) {\r\n      let checkProcessingInstructionData = true;\r\n      if (utils.generic.isValidArray(instruction?.financialChecklist, true)) {\r\n        checkProcessingInstructionData = utils.processingInstructions.checkProcessingInstructionMandatoryData(\r\n          {\r\n            financialChecklist: constants.FINANCIAL_CHECKLIST_DATA_LIST,\r\n          },\r\n          {\r\n            financialChecklist: instruction?.financialChecklist,\r\n            premiumTaxDocument: documents?.premiumTaxDocument,\r\n            signedLinesDocument: documents?.signedLinesDocument,\r\n          }\r\n        );\r\n      } else {\r\n        checkProcessingInstructionData = false;\r\n      }\r\n      setprocessingInstructionMandatoryDataStatus(!checkProcessingInstructionData);\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [instruction?.financialChecklist, activeStep]);\r\n\r\n  useEffect(() => {\r\n    // fetch departments\r\n    if (utils.generic.isInvalidOrEmptyArray(departmentList) && !fetchDepartments.loading) {\r\n      setFetchDepartments({ done: false, loading: true });\r\n\r\n      dispatch(getDepartments()).then((res) => {\r\n        if (utils.generic.isValidArray(res)) {\r\n          setFetchDepartments({ done: true, loading: false });\r\n        }\r\n      });\r\n    } else {\r\n      setFetchDepartments({ done: true, loading: false });\r\n    }\r\n\r\n    // fetch users in roles\r\n    if (\r\n      (utils.generic.isInvalidOrEmptyArray(producingBrokers) || utils.generic.isInvalidOrEmptyArray(accountExecutives)) &&\r\n      !fetchUsersInRoles.loading\r\n    ) {\r\n      setFetchUsersInRoles({ done: false, loading: true });\r\n\r\n      dispatch(getUsersInRoles([constants.PRODUCING_BROKER, constants.ACCOUNT_EXECUTIVE])).then((res) => {\r\n        if (utils.generic.isValidArray(res)) {\r\n          setFetchUsersInRoles({ done: true, loading: false });\r\n        }\r\n      });\r\n    } else {\r\n      setFetchUsersInRoles({ done: true, loading: false });\r\n    }\r\n\r\n    // cleanup\r\n    return () => {\r\n      dispatch(resetProcessingInstruction());\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    // fetch processing instruction by ID if not loaded\r\n    if (!instruction?.id && !fetchInstruction.loading) {\r\n      setFetchInstruction({ done: false, loading: true });\r\n\r\n      dispatch(getProcessingInstruction(id)).then((res) => {\r\n        setFetchInstruction({ done: true, loading: false });\r\n\r\n        const notificationParams = {\r\n          data: { id },\r\n          keepAfterUrlChange: true,\r\n        };\r\n\r\n        if (!res?.id) {\r\n          // if user is Assigned Signatory and status is not submitted authorised/processing\r\n          if (res?.json?.message === 'pi.status.not.allowed') {\r\n            dispatch(enqueueNotification('processingInstructions.notifications.statusNotAllowed', 'warning', notificationParams));\r\n            // if user doesn't have access to the instances and/or departments\r\n          } else if (res?.json?.message === 'pi.instance.dept.unauthorised') {\r\n            dispatch(enqueueNotification('processingInstructions.notifications.instanceDeptUnauthorised', 'warning', notificationParams));\r\n            // status was meanwhile changed to rejected draft\r\n          } else if (res?.json?.message === 'pi.status.rejected.draft') {\r\n            dispatch(enqueueNotification('processingInstructions.notifications.statusChangedToRejected', 'warning', notificationParams));\r\n            // if PI not found\r\n          } else {\r\n            dispatch(enqueueNotification('processingInstructions.notifications.notFound', 'warning', notificationParams));\r\n          }\r\n\r\n          history.replace(config.routes.processingInstructions.root);\r\n        }\r\n      });\r\n    }\r\n\r\n    // fetch facility types\r\n    if (isFdo && utils.generic.isInvalidOrEmptyArray(facilityTypes) && !fetchFacilityTypes.loading) {\r\n      setFetchFacilityTypes({ done: false, loading: true });\r\n\r\n      dispatch(getFacilityTypes()).then((res) => {\r\n        if (utils.generic.isValidArray(res)) {\r\n          setFetchFacilityTypes({ done: true, loading: false });\r\n        }\r\n      });\r\n    } else {\r\n      setFetchFacilityTypes({ done: true, loading: false });\r\n    }\r\n  }, [instruction?.id]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    dispatch(storeResetAllState(isEditAllowed));\r\n  }, [isReadOnly, isSubmittedAuthorisedSignatory]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isPageReady) {\r\n      // set the available steps for different process types\r\n      let currentSteps = [];\r\n      if (isClosing || isFdo) {\r\n        currentSteps = [\r\n          { slug: 'add-risk-reference', label: utils.string.t('processingInstructions.steps.addRiskRefs') },\r\n          { slug: 'checklist', label: utils.string.t('processingInstructions.steps.checklist') },\r\n          { slug: 'processing-instruction', label: utils.string.t('processingInstructions.steps.details') },\r\n          { slug: 'authorisations', label: utils.string.t('processingInstructions.steps.authorisations') },\r\n        ];\r\n      } else {\r\n        currentSteps = [\r\n          { slug: 'add-risk-reference', label: utils.string.t('processingInstructions.steps.addRiskRefs') },\r\n          { slug: 'processing-instruction', label: utils.string.t('processingInstructions.steps.details') },\r\n        ];\r\n      }\r\n      setSteps(currentSteps);\r\n\r\n      // redirection logic\r\n      // if step is defined in URL route params\r\n      if (step) {\r\n        // if URL step param is not a valid step slug\r\n        if (!currentSteps.map((item) => item.slug).includes(step)) {\r\n          history.replace(`${config.routes.processingInstructions.steps}/${id}/${currentSteps[0].slug}`);\r\n        }\r\n      } else {\r\n        // if user is Assigned Signatory\r\n        // AND type is closing OR fdo\r\n        // AND status is submittedToAuthorisedSignatory OR submittedForProcessing\r\n        if (userHasApproverAccess && (isClosing || isFdo) && (isSubmittedAuthorisedSignatory || isSubmittedProcessing)) {\r\n          history.replace(`${config.routes.processingInstructions.steps}/${id}/checklist`);\r\n\r\n          // if type is closing OR fdo\r\n          // AND status is reopened\r\n        } else if (isReopened && (isClosing || isFdo)) {\r\n          history.replace(`${config.routes.processingInstructions.steps}/${id}/checklist`);\r\n        } else if (isReopened && (isFeeAndAmendment || isBordereau || isEndorsement)) {\r\n          history.replace(`${config.routes.processingInstructions.steps}/${id}/processing-instruction`);\r\n        } else {\r\n          history.replace(`${config.routes.processingInstructions.steps}/${id}/${currentSteps[0].slug}`);\r\n        }\r\n      }\r\n\r\n      // set the active step based on URL params or fallback to override custom logic if any applies\r\n      if (processTypeName) {\r\n        setActiveStep(step ? stepsMap[processTypeName]?.[step] : 0);\r\n      }\r\n    }\r\n  }, [isPageReady, processTypeName, step]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleNext = (step) => {\r\n    history.push(`${config.routes.processingInstructions.steps}/${id}${step ? `/${step}` : ''}`);\r\n  };\r\n\r\n  const handleBack = (step) => {\r\n    history.push(`${config.routes.processingInstructions.steps}/${id}${step ? `/${step}` : ''}`);\r\n  };\r\n\r\n  // abort\r\n  if (!isPageReady || !instruction || !id || !processTypeName) return null;\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('processingInstructions.edit.title')} (${id}) - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <AccessControl feature=\"processingInstructions.processingInstructions\" permissions=\"read\">\r\n        <ProcessingInstructionsStepsView\r\n          instruction={instruction}\r\n          urlParams={{ id: parseInt(id), step, tab }}\r\n          type={processTypeName}\r\n          steps={steps}\r\n          stepsMap={stepsMap}\r\n          activeStep={activeStep}\r\n          departmentList={departmentList}\r\n          checkListMandatoryDataStatus={checkListMandatoryDataStatus}\r\n          processingInstructionMandatoryDataStatus={processingInstructionMandatoryDataStatus}\r\n          handlers={{\r\n            back: handleBack,\r\n            next: handleNext,\r\n          }}\r\n        />\r\n      </AccessControl>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default ProcessingInstructionsSteps;\r\n"]},"metadata":{},"sourceType":"module"}