{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PolicyDocumentsUpload\\\\PolicyDocumentsUpload.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm, useFieldArray } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport get from 'lodash/get'; // app\n\nimport styles from './PolicyDocumentsUpload.styles';\nimport { Button, FormActions, FormContainer, FormDate, FormFields, FormFileDrop, FormGrid, FormHidden, FormLabel, FormRadio, FormText, FormAutocompleteMui, TableCell, TableHead, Warning } from 'components';\nimport * as utils from 'utils';\nimport { useFormActions, useMedia } from 'hooks'; // mui\n\nimport { makeStyles, Box, Table, TableBody, TableRow } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPolicyDocumentsUploadView.propTypes = {\n  resetKey: PropTypes.string.isRequired,\n  searchFields: PropTypes.array.isRequired,\n  fields: PropTypes.array.isRequired,\n  documentTypeField: PropTypes.object.isRequired,\n  actions: PropTypes.array,\n  searchReferenceType: PropTypes.string.isRequired,\n  warnings: PropTypes.object.isRequired,\n  isPolicyDataLoaded: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    getFileKey: PropTypes.func.isRequired,\n    onRadioClick: PropTypes.func.isRequired,\n    onFetchPolicy: PropTypes.func.isRequired,\n    onFilesAdded: PropTypes.func.isRequired,\n    onFilesRemoved: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function PolicyDocumentsUploadView(_ref) {\n  _s();\n\n  var _warnings$tooManyFile,\n      _this = this;\n\n  var resetKey = _ref.resetKey,\n      searchFields = _ref.searchFields,\n      fields = _ref.fields,\n      documentTypeField = _ref.documentTypeField,\n      actions = _ref.actions,\n      searchReferenceType = _ref.searchReferenceType,\n      warnings = _ref.warnings,\n      isPolicyDataLoaded = _ref.isPolicyDataLoaded,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'PolicyDocumentsUpload'\n  })();\n  var media = useMedia();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var defaultValuesSearch = utils.form.getInitialValues(searchFields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useForm2 = useForm({\n    defaultValues: defaultValuesSearch\n  }),\n      controlSearch = _useForm2.control,\n      watchSearch = _useForm2.watch,\n      errorsSearch = _useForm2.errors;\n\n  var _useFieldArray = useFieldArray({\n    control: control,\n    name: 'files'\n  }),\n      fieldsArray = _useFieldArray.fields,\n      appendFieldArray = _useFieldArray.append,\n      removeFieldArray = _useFieldArray.remove;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var isRisk = searchReferenceType === 'risk';\n  var isClaim = searchReferenceType === 'claim';\n  var isFetchEnabled = isRisk && watchSearch('riskReference') || isClaim && watchSearch('claimReference');\n\n  var _utils$form$getFieldP = utils.form.getFieldProps(searchFields, 'riskReference', controlSearch, errorsSearch),\n      labelRisk = _utils$form$getFieldP.label,\n      riskProps = _objectWithoutProperties(_utils$form$getFieldP, [\"label\"]); // const { label: labelClaim, ...claimProps } = utils.form.getFieldProps(searchFields, 'claimReference', controlSearch, errorsSearch);\n\n\n  var cols = [{\n    id: 'filename',\n    label: utils.string.t('app.filename')\n  }, {\n    id: 'documentType',\n    style: {\n      width: media.mobile || media.tablet ? '50%' : 300\n    },\n    label: utils.string.t('app.documentType')\n  }, {\n    id: 'actions',\n    empty: true,\n    menu: true\n  }];\n  var hasTooManyFilesErrors = Boolean(warnings === null || warnings === void 0 ? void 0 : (_warnings$tooManyFile = warnings.tooManyFiles) === null || _warnings$tooManyFile === void 0 ? void 0 : _warnings$tooManyFile.message);\n  var hasWarnings = Boolean(Object.values(warnings).some(function (w) {\n    return w.message;\n  }));\n  useEffect(function () {\n    reset(defaultValues);\n  }, [resetKey] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"form-PolicyDocumentsUpload\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.search,\n          children: [/*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchContent,\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.searchContainer,\n              children: [/*#__PURE__*/_jsxDEV(FormRadio, {\n                name: \"radioRiskRef\",\n                muiFormGroupProps: {\n                  value: searchReferenceType,\n                  onChange: handlers.onRadioClick,\n                  nestedClasses: {\n                    root: classes.searchFieldRadioGroup\n                  }\n                },\n                options: [{\n                  name: 'risk',\n                  value: 'risk'\n                }]\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 124,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: labelRisk,\n                nestedClasses: {\n                  root: classes.searchFieldLabel\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.searchFieldAutocomplete,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, riskProps), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.searchButton,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('fileUpload.fetch'),\n              disabled: !isFetchEnabled,\n              onClick: function onClick() {\n                var referenceValue = searchReferenceType === 'risk' ? watchSearch('riskReference') : searchReferenceType === 'claim' ? watchSearch('claimReference') : null;\n                handlers.onFetchPolicy(referenceValue);\n              },\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this), isPolicyDataLoaded && /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'sectionType', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 176,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'inceptionDate', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 179,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 178,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'expiryDate', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 182,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 181,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'department', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 184,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'insuredName', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 188,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'policyRef', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'umr', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'xbInstance', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 4,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'sourceSystem', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 199,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 4,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'uploadDate', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'uploadBy', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 205,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormFileDrop, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'filesUpload', control, errors)), {}, {\n              onChange: function onChange(files, rejectedFiles) {\n                var hasDuplicates = false;\n                var uniqueFiles = files.reduce(function (acc, cur) {\n                  var isDuplicate = fieldsArray.find(function (f) {\n                    return handlers.getFileKey(f.file) === handlers.getFileKey(cur);\n                  });\n\n                  if (isDuplicate) {\n                    hasDuplicates = true;\n                  }\n\n                  return isDuplicate ? acc : [].concat(_toConsumableArray(acc), [cur]);\n                }, []).map(function (f) {\n                  return {\n                    file: f,\n                    name: f.name,\n                    type: null\n                  };\n                });\n                handlers.onFilesAdded([].concat(_toConsumableArray(fieldsArray), _toConsumableArray(uniqueFiles)), rejectedFiles, hasDuplicates);\n\n                if (utils.generic.isValidArray(uniqueFiles, true)) {\n                  appendFieldArray(uniqueFiles);\n                }\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 208,\n            columnNumber: 15\n          }, this)]\n        }, resetKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'policyID', control, errors)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 239,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'insuredID', control, errors)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [hasWarnings && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mb: -3,\n              display: \"flex\",\n              justifyContent: \"center\",\n              alignItems: \"center\",\n              flexDirection: \"column\",\n              children: Object.entries(warnings).filter(function (_ref2) {\n                var _ref3 = _slicedToArray(_ref2, 2),\n                    type = _ref3[0],\n                    obj = _ref3[1];\n\n                return Boolean(obj.message);\n              }).map(function (_ref4) {\n                var _ref5 = _slicedToArray(_ref4, 2),\n                    type = _ref5[0],\n                    obj = _ref5[1];\n\n                return /*#__PURE__*/_jsxDEV(Box, {\n                  mb: 1,\n                  children: /*#__PURE__*/_jsxDEV(Warning, {\n                    icon: true,\n                    border: true,\n                    type: obj.type,\n                    text: obj.message\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 251,\n                    columnNumber: 27\n                  }, _this)\n                }, type, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 250,\n                  columnNumber: 25\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: utils.generic.isValidArray(fieldsArray, true) && /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: cols\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 262,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: fieldsArray.map(function (_ref6, index) {\n                  var file = _ref6.file,\n                      name = _ref6.name,\n                      type = _ref6.type;\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      compact: true,\n                      children: [/*#__PURE__*/_jsxDEV(FormText, {\n                        control: control,\n                        type: \"text\",\n                        name: \"files.\".concat(index, \".name\"),\n                        defaultValue: name,\n                        muiComponentProps: {\n                          size: 'small',\n                          classes: {\n                            root: classes.filenameRoot\n                          },\n                          InputProps: {\n                            readOnly: true,\n                            disabled: true,\n                            classes: {\n                              root: classes.filenameBase,\n                              input: classes.filenameInput\n                            }\n                          }\n                        },\n                        errors: errors\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 268,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(FormHidden, {\n                        type: \"hidden\",\n                        control: control,\n                        name: \"files.\".concat(index, \".file\"),\n                        defaultValue: file\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 284,\n                        columnNumber: 29\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 267,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      compact: true,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, documentTypeField), {}, {\n                        control: control,\n                        name: \"files.\".concat(index, \".type\"),\n                        error: get(errors, \"files[\".concat(index, \"].type\"))\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 287,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 286,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      menu: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        icon: HighlightOffIcon,\n                        variant: \"text\",\n                        danger: true,\n                        size: \"small\",\n                        onClick: function onClick() {\n                          var updatedFilesArray = fieldsArray.filter(function (file, fileIndex) {\n                            return fileIndex !== index;\n                          });\n                          handlers.onFilesRemoved(updatedFilesArray);\n                          removeFieldArray(index);\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 295,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 294,\n                      columnNumber: 27\n                    }, _this)]\n                  }, handlers.getFileKey(file), true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 266,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 261,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 259,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 321,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: fieldsArray.length === 0 || formState.isSubmitting || !isPolicyDataLoaded || hasTooManyFilesErrors,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 323,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 320,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PolicyDocumentsUploadView, \"il/+PhWwh2DiHjspL+ewOpGFI3o=\", false, function () {\n  return [useMedia, useForm, useForm, useFieldArray, useFormActions];\n});\n\n_c = PolicyDocumentsUploadView;\nPolicyDocumentsUploadView.displayName = \"PolicyDocumentsUploadView\";\nPolicyDocumentsUploadView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PolicyDocumentsUploadView\",\n  \"props\": {\n    \"resetKey\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"searchFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"documentTypeField\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"searchReferenceType\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"warnings\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isPolicyDataLoaded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"getFileKey\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onRadioClick\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onFetchPolicy\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onFilesAdded\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onFilesRemoved\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PolicyDocumentsUpload\\\\PolicyDocumentsUpload.view.js\"] = {\n    name: \"PolicyDocumentsUploadView\",\n    docgenInfo: PolicyDocumentsUploadView.__docgenInfo,\n    path: \"src\\\\forms\\\\PolicyDocumentsUpload\\\\PolicyDocumentsUpload.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PolicyDocumentsUploadView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PolicyDocumentsUpload/PolicyDocumentsUpload.view.js"],"names":["React","useEffect","PropTypes","useForm","useFieldArray","yupResolver","get","styles","Button","FormActions","FormContainer","FormDate","FormFields","FormFileDrop","FormGrid","FormHidden","FormLabel","FormRadio","FormText","FormAutocompleteMui","TableCell","TableHead","Warning","utils","useFormActions","useMedia","makeStyles","Box","Table","TableBody","TableRow","HighlightOffIcon","PolicyDocumentsUploadView","propTypes","resetKey","string","isRequired","searchFields","array","fields","documentTypeField","object","actions","searchReferenceType","warnings","isPolicyDataLoaded","bool","handlers","shape","getFileKey","func","onRadioClick","onFetchPolicy","onFilesAdded","onFilesRemoved","classes","name","media","defaultValues","form","getInitialValues","defaultValuesSearch","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","controlSearch","watchSearch","watch","errorsSearch","fieldsArray","appendFieldArray","append","removeFieldArray","remove","cancel","submit","isRisk","isClaim","isFetchEnabled","getFieldProps","labelRisk","label","riskProps","cols","id","t","style","width","mobile","tablet","empty","menu","hasTooManyFilesErrors","Boolean","tooManyFiles","message","hasWarnings","Object","values","some","w","root","handler","search","searchContent","searchContainer","value","onChange","nestedClasses","searchFieldRadioGroup","searchFieldLabel","searchFieldAutocomplete","searchButton","referenceValue","files","rejectedFiles","hasDuplicates","uniqueFiles","reduce","acc","cur","isDuplicate","find","f","file","map","type","generic","isValidArray","entries","filter","obj","index","size","filenameRoot","InputProps","readOnly","disabled","filenameBase","input","filenameInput","updatedFilesArray","fileIndex","isSubmitting","length"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm, useFieldArray } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './PolicyDocumentsUpload.styles';\r\nimport {\r\n  Button,\r\n  FormActions,\r\n  FormContainer,\r\n  FormDate,\r\n  FormFields,\r\n  FormFileDrop,\r\n  FormGrid,\r\n  FormHidden,\r\n  FormLabel,\r\n  FormRadio,\r\n  FormText,\r\n  FormAutocompleteMui,\r\n  TableCell,\r\n  TableHead,\r\n  Warning,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport { useFormActions, useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { makeStyles, Box, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nPolicyDocumentsUploadView.propTypes = {\r\n  resetKey: PropTypes.string.isRequired,\r\n  searchFields: PropTypes.array.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  documentTypeField: PropTypes.object.isRequired,\r\n  actions: PropTypes.array,\r\n  searchReferenceType: PropTypes.string.isRequired,\r\n  warnings: PropTypes.object.isRequired,\r\n  isPolicyDataLoaded: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    getFileKey: PropTypes.func.isRequired,\r\n    onRadioClick: PropTypes.func.isRequired,\r\n    onFetchPolicy: PropTypes.func.isRequired,\r\n    onFilesAdded: PropTypes.func.isRequired,\r\n    onFilesRemoved: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function PolicyDocumentsUploadView({\r\n  resetKey,\r\n  searchFields,\r\n  fields,\r\n  documentTypeField,\r\n  actions,\r\n  searchReferenceType,\r\n  warnings,\r\n  isPolicyDataLoaded,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PolicyDocumentsUpload' })();\r\n  const media = useMedia();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const defaultValuesSearch = utils.form.getInitialValues(searchFields);\r\n\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const {\r\n    control: controlSearch,\r\n    watch: watchSearch,\r\n    errors: errorsSearch,\r\n  } = useForm({\r\n    defaultValues: defaultValuesSearch,\r\n  });\r\n\r\n  const {\r\n    fields: fieldsArray,\r\n    append: appendFieldArray,\r\n    remove: removeFieldArray,\r\n  } = useFieldArray({\r\n    control,\r\n    name: 'files',\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  const isRisk = searchReferenceType === 'risk';\r\n  const isClaim = searchReferenceType === 'claim';\r\n  const isFetchEnabled = (isRisk && watchSearch('riskReference')) || (isClaim && watchSearch('claimReference'));\r\n\r\n  const { label: labelRisk, ...riskProps } = utils.form.getFieldProps(searchFields, 'riskReference', controlSearch, errorsSearch);\r\n  // const { label: labelClaim, ...claimProps } = utils.form.getFieldProps(searchFields, 'claimReference', controlSearch, errorsSearch);\r\n\r\n  const cols = [\r\n    { id: 'filename', label: utils.string.t('app.filename') },\r\n    { id: 'documentType', style: { width: media.mobile || media.tablet ? '50%' : 300 }, label: utils.string.t('app.documentType') },\r\n    { id: 'actions', empty: true, menu: true },\r\n  ];\r\n\r\n  const hasTooManyFilesErrors = Boolean(warnings?.tooManyFiles?.message);\r\n  const hasWarnings = Boolean(Object.values(warnings).some((w) => w.message));\r\n\r\n  useEffect(\r\n    () => {\r\n      reset(defaultValues);\r\n    },\r\n    [resetKey] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"form-PolicyDocumentsUpload\">\r\n        <FormFields type=\"dialog\">\r\n          <div className={classes.search}>\r\n            <div className={classes.searchContent}>\r\n              <div className={classes.searchContainer}>\r\n                <FormRadio\r\n                  name=\"radioRiskRef\"\r\n                  muiFormGroupProps={{\r\n                    value: searchReferenceType,\r\n                    onChange: handlers.onRadioClick,\r\n                    nestedClasses: { root: classes.searchFieldRadioGroup },\r\n                  }}\r\n                  options={[{ name: 'risk', value: 'risk' }]}\r\n                />\r\n                <FormLabel label={labelRisk} nestedClasses={{ root: classes.searchFieldLabel }} />\r\n                <div className={classes.searchFieldAutocomplete}>\r\n                  <FormAutocompleteMui {...riskProps} />\r\n                </div>\r\n              </div>\r\n              {/* <div className={classes.searchContainer}>\r\n                <FormRadio\r\n                  name=\"radioClaimRef\"\r\n                  muiFormGroupProps={{\r\n                    value: searchReferenceType,\r\n                    onChange: handlers.onRadioClick,\r\n                    nestedClasses: { root: classes.searchFieldRadioGroup },\r\n                  }}\r\n                  options={[{ name: 'claim', value: 'claim' }]}\r\n                />\r\n                <FormLabel label={labelClaim} nestedClasses={{ root: classes.searchFieldLabel }} />\r\n                <div className={classes.searchFieldAutocomplete}>\r\n                  <FormAutocompleteMui {...riskProps} />\r\n                </div>\r\n              </div> */}\r\n            </div>\r\n            <div className={classes.searchButton}>\r\n              <Button\r\n                text={utils.string.t('fileUpload.fetch')}\r\n                disabled={!isFetchEnabled}\r\n                onClick={() => {\r\n                  const referenceValue =\r\n                    searchReferenceType === 'risk'\r\n                      ? watchSearch('riskReference')\r\n                      : searchReferenceType === 'claim'\r\n                      ? watchSearch('claimReference')\r\n                      : null;\r\n\r\n                  handlers.onFetchPolicy(referenceValue);\r\n                }}\r\n                color=\"secondary\"\r\n              />\r\n            </div>\r\n          </div>\r\n\r\n          {isPolicyDataLoaded && (\r\n            <FormGrid container key={resetKey}>\r\n              <FormGrid item xs={12} sm={6} md={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'sectionType', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={2}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'inceptionDate', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={2}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'expiryDate', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'department', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'insuredName', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={2}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'policyRef', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={2}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'umr', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'xbInstance', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={4}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'sourceSystem', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={4} lg={2}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'uploadDate', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6} md={6}>\r\n                <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'uploadBy', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item xs={12}>\r\n                <FormFileDrop\r\n                  {...utils.form.getFieldProps(fields, 'filesUpload', control, errors)}\r\n                  onChange={(files, rejectedFiles) => {\r\n                    let hasDuplicates = false;\r\n\r\n                    const uniqueFiles = files\r\n                      .reduce((acc, cur) => {\r\n                        const isDuplicate = fieldsArray.find((f) => {\r\n                          return handlers.getFileKey(f.file) === handlers.getFileKey(cur);\r\n                        });\r\n\r\n                        if (isDuplicate) {\r\n                          hasDuplicates = true;\r\n                        }\r\n\r\n                        return isDuplicate ? acc : [...acc, cur];\r\n                      }, [])\r\n                      .map((f) => ({ file: f, name: f.name, type: null }));\r\n\r\n                    handlers.onFilesAdded([...fieldsArray, ...uniqueFiles], rejectedFiles, hasDuplicates);\r\n\r\n                    if (utils.generic.isValidArray(uniqueFiles, true)) {\r\n                      appendFieldArray(uniqueFiles);\r\n                    }\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          )}\r\n\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'policyID', control, errors)} />\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'insuredID', control, errors)} />\r\n\r\n          <FormGrid container>\r\n            {hasWarnings && (\r\n              <FormGrid item xs={12}>\r\n                <Box mb={-3} display=\"flex\" justifyContent=\"center\" alignItems=\"center\" flexDirection=\"column\">\r\n                  {Object.entries(warnings)\r\n                    .filter(([type, obj]) => Boolean(obj.message))\r\n                    .map(([type, obj]) => {\r\n                      return (\r\n                        <Box key={type} mb={1}>\r\n                          <Warning icon border type={obj.type} text={obj.message} />\r\n                        </Box>\r\n                      );\r\n                    })}\r\n                </Box>\r\n              </FormGrid>\r\n            )}\r\n\r\n            <FormGrid item xs={12}>\r\n              {utils.generic.isValidArray(fieldsArray, true) && (\r\n                <Table>\r\n                  <TableHead columns={cols} />\r\n                  <TableBody>\r\n                    {fieldsArray.map(({ file, name, type }, index) => {\r\n                      return (\r\n                        <TableRow key={handlers.getFileKey(file)}>\r\n                          <TableCell compact>\r\n                            <FormText\r\n                              control={control}\r\n                              type=\"text\"\r\n                              name={`files.${index}.name`}\r\n                              defaultValue={name}\r\n                              muiComponentProps={{\r\n                                size: 'small',\r\n                                classes: { root: classes.filenameRoot },\r\n                                InputProps: {\r\n                                  readOnly: true,\r\n                                  disabled: true,\r\n                                  classes: { root: classes.filenameBase, input: classes.filenameInput },\r\n                                },\r\n                              }}\r\n                              errors={errors}\r\n                            />\r\n                            <FormHidden type=\"hidden\" control={control} name={`files.${index}.file`} defaultValue={file} />\r\n                          </TableCell>\r\n                          <TableCell compact>\r\n                            <FormAutocompleteMui\r\n                              {...documentTypeField}\r\n                              control={control}\r\n                              name={`files.${index}.type`}\r\n                              error={get(errors, `files[${index}].type`)}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell menu>\r\n                            <Button\r\n                              icon={HighlightOffIcon}\r\n                              variant=\"text\"\r\n                              danger\r\n                              size=\"small\"\r\n                              onClick={() => {\r\n                                const updatedFilesArray = fieldsArray.filter((file, fileIndex) => {\r\n                                  return fileIndex !== index;\r\n                                });\r\n\r\n                                handlers.onFilesRemoved(updatedFilesArray);\r\n                                removeFieldArray(index);\r\n                              }}\r\n                            />\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={fieldsArray.length === 0 || formState.isSubmitting || !isPolicyDataLoaded || hasTooManyFilesErrors}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}