{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossActions = function getLossActions(lossData, params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossActions'\n    };\n    var endpointParams = {\n      claimId: params && params.claimId || ''\n    };\n    dispatch(getLossActionsRequest());\n    dispatch(addLoader('getLossActions'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/loss/\".concat(lossData === null || lossData === void 0 ? void 0 : lossData.lossDetailId, \"/action\"),\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      console.log('claim', data);\n      dispatch(getLossActionsSuccess(data));\n      dispatch(removeLoader('getLossActions'));\n      return data;\n    }).catch(function (err) {\n      dispatch(getLossActionsFailure(err, defaultError));\n      dispatch(removeLoader('getLossActions'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getLossActionsRequest = function getLossActionsRequest(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getLossActionsSuccess = function getLossActionsSuccess(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossActionsFailure = function getLossActionsFailure(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossActions.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossActions","lossData","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","endpointParams","claimId","getLossActionsRequest","api","get","token","accessToken","claimService","path","lossDetailId","then","response","handleResponse","data","console","log","getLossActionsSuccess","catch","err","getLossActionsFailure","handleUnauthorized","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD,EAAWC,MAAX;AAAA,SAAsB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC1E;AAD0E,oBAEjBA,QAAQ,EAFS;AAAA,QAE1DC,IAF0D,aAElEC,IAFkE,CAE1DD,IAF0D;AAAA,QAEhCE,QAFgC,aAElDC,MAFkD,CAExCC,IAFwC,CAEhCF,QAFgC;;AAI1E,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,cAAc,GAAG;AACrBC,MAAAA,OAAO,EAAGX,MAAM,IAAIA,MAAM,CAACW,OAAlB,IAA8B;AADlB,KAAvB;AAIAV,IAAAA,QAAQ,CAACW,qBAAqB,EAAtB,CAAR;AACAX,IAAAA,QAAQ,CAACN,SAAS,CAAC,gBAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,YAFhB;AAGHC,MAAAA,IAAI,0BAAmBnB,QAAnB,aAAmBA,QAAnB,uBAAmBA,QAAQ,CAAEoB,YAA7B,YAHD;AAIHnB,MAAAA,MAAM,EAAEU;AAJL,KADA,EAOJU,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcxB,KAAK,CAACgB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACAtB,MAAAA,QAAQ,CAACyB,qBAAqB,CAACH,IAAD,CAAtB,CAAR;AACAtB,MAAAA,QAAQ,CAACL,YAAY,CAAC,gBAAD,CAAb,CAAR;AACA,aAAO2B,IAAP;AACD,KAbI,EAcJI,KAdI,CAcE,UAACC,GAAD,EAAS;AACd3B,MAAAA,QAAQ,CAAC4B,qBAAqB,CAACD,GAAD,EAAMpB,YAAN,CAAtB,CAAR;AACAP,MAAAA,QAAQ,CAACL,YAAY,CAAC,gBAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACgB,GAAN,CAAUiB,kBAAV,CAA6BF,GAA7B,EAAkC3B,QAAlC,EAA4CP,UAA5C;AACA,aAAOkC,GAAP;AACD,KAnBI,CAAP;AAoBD,GAnC6B;AAAA,CAAvB;AAqCP,OAAO,IAAMhB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACW,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossActions = (lossData, params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getLossActions',\r\n  };\r\n\r\n  const endpointParams = {\r\n    claimId: (params && params.claimId) || '',\r\n  };\r\n\r\n  dispatch(getLossActionsRequest());\r\n  dispatch(addLoader('getLossActions'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/loss/${lossData?.lossDetailId}/action`,\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      console.log('claim', data);\r\n      dispatch(getLossActionsSuccess(data));\r\n      dispatch(removeLoader('getLossActions'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getLossActionsFailure(err, defaultError));\r\n      dispatch(removeLoader('getLossActions'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getLossActionsRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}