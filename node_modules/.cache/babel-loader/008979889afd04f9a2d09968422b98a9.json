{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\PowerBiReport\\\\PowerBiReport.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Button } from 'components';\nimport styles from './PowerBiReport.styles';\nimport { useMedia } from 'hooks'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\nimport FormSelect from 'components/FormSelect/FormSelect';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPowerBiReportView.propTypes = {\n  reportExists: PropTypes.bool.isRequired,\n  reports: PropTypes.array.isRequired,\n  containerRef: PropTypes.shape({\n    current: PropTypes.instanceOf(Element)\n  }).isRequired,\n  setFullscreen: PropTypes.func.isRequired,\n  onSelectReport: PropTypes.func.isRequired,\n  selectedReport: PropTypes.object.isRequired\n};\nexport function PowerBiReportView(_ref) {\n  _s();\n\n  var reports = _ref.reports,\n      containerRef = _ref.containerRef,\n      setFullscreen = _ref.setFullscreen,\n      reportExists = _ref.reportExists,\n      onSelectReport = _ref.onSelectReport,\n      selectedReport = _ref.selectedReport;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'PowerBiReport'\n  })({\n    reportExists: reportExists,\n    media: media\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [reportExists && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.menu,\n      children: [reports.length > 1 && /*#__PURE__*/_jsxDEV(FormSelect, {\n        nestedClasses: {\n          root: classes.select\n        },\n        name: \"report\",\n        value: selectedReport.id,\n        options: reports,\n        margin: \"none\",\n        optionKey: \"id\",\n        size: \"sm\",\n        muiComponentProps: {\n          fullWidth: false\n        },\n        handleUpdate: onSelectReport,\n        testid: \"select-power-bi-report\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        onClick: setFullscreen,\n        icon: FullscreenIcon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.powerbi,\n      ref: containerRef\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PowerBiReportView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = PowerBiReportView;\nexport default PowerBiReportView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PowerBiReportView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/PowerBiReport/PowerBiReport.view.js"],"names":["React","PropTypes","Button","styles","useMedia","makeStyles","FullscreenIcon","FormSelect","PowerBiReportView","propTypes","reportExists","bool","isRequired","reports","array","containerRef","shape","current","instanceOf","Element","setFullscreen","func","onSelectReport","selectedReport","object","media","classes","name","root","menu","length","select","id","fullWidth","powerbi"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,OAAOC,MAAP,MAAmB,wBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;AACA,OAAOC,cAAP,MAA2B,+BAA3B;AACA,OAAOC,UAAP,MAAuB,kCAAvB;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;AAC5BC,EAAAA,YAAY,EAAET,SAAS,CAACU,IAAV,CAAeC,UADD;AAE5BC,EAAAA,OAAO,EAAEZ,SAAS,CAACa,KAAV,CAAgBF,UAFG;AAG5BG,EAAAA,YAAY,EAAEd,SAAS,CAACe,KAAV,CAAgB;AAAEC,IAAAA,OAAO,EAAEhB,SAAS,CAACiB,UAAV,CAAqBC,OAArB;AAAX,GAAhB,EAA4DP,UAH9C;AAI5BQ,EAAAA,aAAa,EAAEnB,SAAS,CAACoB,IAAV,CAAeT,UAJF;AAK5BU,EAAAA,cAAc,EAAErB,SAAS,CAACoB,IAAV,CAAeT,UALH;AAM5BW,EAAAA,cAAc,EAAEtB,SAAS,CAACuB,MAAV,CAAiBZ;AANL,CAA9B;AASA,OAAO,SAASJ,iBAAT,OAAmH;AAAA;;AAAA,MAAtFK,OAAsF,QAAtFA,OAAsF;AAAA,MAA7EE,YAA6E,QAA7EA,YAA6E;AAAA,MAA/DK,aAA+D,QAA/DA,aAA+D;AAAA,MAAhDV,YAAgD,QAAhDA,YAAgD;AAAA,MAAlCY,cAAkC,QAAlCA,cAAkC;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;AACxH,MAAME,KAAK,GAAGrB,QAAQ,EAAtB;AACA,MAAMsB,OAAO,GAAGrB,UAAU,CAACF,MAAD,EAAS;AAAEwB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAA8C;AAAEjB,IAAAA,YAAY,EAAZA,YAAF;AAAgBe,IAAAA,KAAK,EAALA;AAAhB,GAA9C,CAAhB;AAEA,sBACE;AAAK,IAAA,SAAS,EAAEC,OAAO,CAACE,IAAxB;AAAA,eACGlB,YAAY,iBACX;AAAK,MAAA,SAAS,EAAEgB,OAAO,CAACG,IAAxB;AAAA,iBACGhB,OAAO,CAACiB,MAAR,GAAiB,CAAjB,iBACC,QAAC,UAAD;AACE,QAAA,aAAa,EAAE;AAAEF,UAAAA,IAAI,EAAEF,OAAO,CAACK;AAAhB,SADjB;AAEE,QAAA,IAAI,EAAC,QAFP;AAGE,QAAA,KAAK,EAAER,cAAc,CAACS,EAHxB;AAIE,QAAA,OAAO,EAAEnB,OAJX;AAKE,QAAA,MAAM,EAAC,MALT;AAME,QAAA,SAAS,EAAC,IANZ;AAOE,QAAA,IAAI,EAAC,IAPP;AAQE,QAAA,iBAAiB,EAAE;AACjBoB,UAAAA,SAAS,EAAE;AADM,SARrB;AAWE,QAAA,YAAY,EAAEX,cAXhB;AAYE,QAAA,MAAM,EAAC;AAZT;AAAA;AAAA;AAAA;AAAA,cAFJ,eAiBE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAC,OAAb;AAAqB,QAAA,OAAO,EAAEF,aAA9B;AAA6C,QAAA,IAAI,EAAEd;AAAnD;AAAA;AAAA;AAAA;AAAA,cAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,YAFJ,eAsBE;AAAK,MAAA,SAAS,EAAEoB,OAAO,CAACQ,OAAxB;AAAiC,MAAA,GAAG,EAAEnB;AAAtC;AAAA;AAAA;AAAA;AAAA,YAtBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GA9BeP,iB;UACAJ,Q;;;KADAI,iB;AAgChB,eAAeA,iBAAf","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Button } from 'components';\r\nimport styles from './PowerBiReport.styles';\r\nimport { useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport FullscreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FormSelect from 'components/FormSelect/FormSelect';\r\n\r\nPowerBiReportView.propTypes = {\r\n  reportExists: PropTypes.bool.isRequired,\r\n  reports: PropTypes.array.isRequired,\r\n  containerRef: PropTypes.shape({ current: PropTypes.instanceOf(Element) }).isRequired,\r\n  setFullscreen: PropTypes.func.isRequired,\r\n  onSelectReport: PropTypes.func.isRequired,\r\n  selectedReport: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function PowerBiReportView({ reports, containerRef, setFullscreen, reportExists, onSelectReport, selectedReport }) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'PowerBiReport' })({ reportExists, media });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {reportExists && (\r\n        <div className={classes.menu}>\r\n          {reports.length > 1 && (\r\n            <FormSelect\r\n              nestedClasses={{ root: classes.select }}\r\n              name=\"report\"\r\n              value={selectedReport.id}\r\n              options={reports}\r\n              margin=\"none\"\r\n              optionKey=\"id\"\r\n              size=\"sm\"\r\n              muiComponentProps={{\r\n                fullWidth: false,\r\n              }}\r\n              handleUpdate={onSelectReport}\r\n              testid=\"select-power-bi-report\"\r\n            />\r\n          )}\r\n          <Button size=\"small\" onClick={setFullscreen} icon={FullscreenIcon} />\r\n        </div>\r\n      )}\r\n      <div className={classes.powerbi} ref={containerRef} />\r\n    </div>\r\n  );\r\n}\r\n\r\nexport default PowerBiReportView;\r\n"]},"metadata":{},"sourceType":"module"}