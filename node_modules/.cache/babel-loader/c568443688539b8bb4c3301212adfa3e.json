{"ast":null,"code":"import \"core-js/modules/es.array.map\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PremiumProcessingCheckSigning\\\\PremiumProcessingCheckSigning.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types'; // app\n\nimport { selectRefDataMarketTypes, selectRefDataXbInstances, premiumProcessingCheckSigningCase, getPremiumProcessingTasksDetails, selectCaseTaskTypeView } from 'stores';\nimport styles from './PremiumProcessingCheckSigning.styles';\nimport { PremiumProcessingCheckSigningView } from './PremiumProcessingCheckSigning.view';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCheckSigning.prototypes = {\n  handleClose: PropTypes.func.isRequired,\n  caseDetails: PropTypes.array\n};\nexport default function PremiumProcessingCheckSigning(_ref) {\n  _s();\n\n  var _xbName$;\n\n  var handleClose = _ref.handleClose,\n      caseDetails = _ref.caseDetails;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCheckSigning'\n  })();\n  var dispatch = useDispatch();\n  var selectedCase = caseDetails;\n  var caseDetail = caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.caseTeamData;\n  var BureauNameData = useSelector(selectRefDataMarketTypes);\n  var xbInstanceList = useSelector(selectRefDataXbInstances);\n  var caseTaskTypeView = useSelector(selectCaseTaskTypeView);\n  var xbInstanceName = null;\n  var optionsBureauList = utils.generic.isValidArray(BureauNameData, true) && BureauNameData.filter(function (item) {\n    return item.marketTypeID !== 4;\n  }).map(function (type) {\n    return {\n      id: type.marketTypeID,\n      name: type.marketTypeDescription\n    };\n  });\n  var xbName = utils.generic.isValidArray(xbInstanceList, true) && xbInstanceList.filter(function (a) {\n    return a.sourceID === (caseDetail === null || caseDetail === void 0 ? void 0 : caseDetail.xbInstanceId);\n  });\n  xbInstanceName = (xbName === null || xbName === void 0 ? void 0 : xbName.length) > 0 && ((_xbName$ = xbName[0]) === null || _xbName$ === void 0 ? void 0 : _xbName$.sourceName);\n\n  var handleSubmit = function handleSubmit(checkSignData) {\n    dispatch(premiumProcessingCheckSigningCase({\n      checkSignData: checkSignData,\n      selectedCase: selectedCase\n    }));\n    dispatch(getPremiumProcessingTasksDetails({\n      requestType: 'search',\n      taskType: caseTaskTypeView,\n      filterTerm: []\n    }));\n    dispatch(getPremiumProcessingTasksDetails({\n      requestType: 'filter',\n      taskType: caseTaskTypeView,\n      filterTerm: []\n    }));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var packageSubmitted = caseDetail.packageSubmittedOn;\n  var packageSubmittedOn = utils.string.t('format.date', {\n    value: {\n      date: packageSubmitted,\n      format: config.ui.format.date.iso\n    }\n  });\n  var fields = [{\n    name: 'workPackageReference',\n    label: utils.string.t('premiumProcessing.checkSigningCase.workPackageReference'),\n    value: '',\n    type: 'text',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 30\n      }\n    }\n  }, {\n    name: 'bureauList',\n    label: utils.string.t('premiumProcessing.checkSigningCase.bureauList'),\n    value: optionsBureauList || [],\n    type: 'autocomplete',\n    options: optionsBureauList,\n    optionKey: 'id',\n    optionLabel: 'name',\n    innerComponentProps: {\n      isMulti: true,\n      allowEmpty: true,\n      maxMenuHeight: 200\n    },\n    validation: Yup.array().required(utils.string.t('validation.required'))\n  }, {\n    name: 'riskReferenceId',\n    label: utils.string.t('premiumProcessing.checkSigningCase.riskReferenceId'),\n    value: selectedCase.policyRef || '',\n    type: 'text',\n    muiComponentProps: {\n      disabled: true\n    }\n  }, {\n    name: 'packageSubmittedOn',\n    label: utils.string.t('premiumProcessing.checkSigningCase.packageSubmittedOn'),\n    type: 'datepicker',\n    value: packageSubmittedOn,\n    outputFormat: '',\n    placeholder: utils.string.t('app.selectDate'),\n    icon: 'TodayIcon',\n    validation: Yup.string().nullable().required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    }\n  }, {\n    name: 'department',\n    label: utils.string.t('premiumProcessing.checkSigningCase.department'),\n    value: (caseDetail === null || caseDetail === void 0 ? void 0 : caseDetail.department) || '',\n    type: 'text',\n    muiComponentProps: {\n      disabled: true\n    }\n  }, {\n    name: 'gxbInstance',\n    label: utils.string.t('premiumProcessing.checkSigningCase.gxbInstance'),\n    value: xbInstanceName || '',\n    type: 'text',\n    muiComponentProps: {\n      disabled: true\n    }\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.create'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCheckSigningView, {\n    actions: actions,\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 147,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PremiumProcessingCheckSigning, \"DeKTaN/+sVihfrIBK938Az5Zv7Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PremiumProcessingCheckSigning;\nPremiumProcessingCheckSigning.displayName = \"PremiumProcessingCheckSigning\";\nPremiumProcessingCheckSigning.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCheckSigning\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PremiumProcessingCheckSigning\\\\PremiumProcessingCheckSigning.js\"] = {\n    name: \"PremiumProcessingCheckSigning\",\n    docgenInfo: PremiumProcessingCheckSigning.__docgenInfo,\n    path: \"src\\\\forms\\\\PremiumProcessingCheckSigning\\\\PremiumProcessingCheckSigning.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCheckSigning\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PremiumProcessingCheckSigning/PremiumProcessingCheckSigning.js"],"names":["React","useDispatch","useSelector","Yup","PropTypes","selectRefDataMarketTypes","selectRefDataXbInstances","premiumProcessingCheckSigningCase","getPremiumProcessingTasksDetails","selectCaseTaskTypeView","styles","PremiumProcessingCheckSigningView","utils","config","makeStyles","PremiumProcessingCheckSigning","prototypes","handleClose","func","isRequired","caseDetails","array","classes","name","dispatch","selectedCase","caseDetail","caseTeamData","BureauNameData","xbInstanceList","caseTaskTypeView","xbInstanceName","optionsBureauList","generic","isValidArray","filter","item","marketTypeID","map","type","id","marketTypeDescription","xbName","a","sourceID","xbInstanceId","length","sourceName","handleSubmit","checkSignData","requestType","taskType","filterTerm","handleCancel","isFunction","packageSubmitted","packageSubmittedOn","string","t","value","date","format","ui","iso","fields","label","validation","required","muiComponentProps","inputProps","maxLength","options","optionKey","optionLabel","innerComponentProps","isMulti","allowEmpty","maxMenuHeight","policyRef","disabled","outputFormat","placeholder","icon","nullable","fullWidth","root","datepicker","department","actions","handler"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport {\r\n  selectRefDataMarketTypes,\r\n  selectRefDataXbInstances,\r\n  premiumProcessingCheckSigningCase,\r\n  getPremiumProcessingTasksDetails,\r\n  selectCaseTaskTypeView,\r\n} from 'stores';\r\nimport styles from './PremiumProcessingCheckSigning.styles';\r\nimport { PremiumProcessingCheckSigningView } from './PremiumProcessingCheckSigning.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPremiumProcessingCheckSigning.prototypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  caseDetails: PropTypes.array,\r\n};\r\n\r\nexport default function PremiumProcessingCheckSigning({ handleClose, caseDetails }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCheckSigning' })();\r\n  const dispatch = useDispatch();\r\n  const selectedCase = caseDetails;\r\n  const caseDetail = caseDetails?.caseTeamData;\r\n  const BureauNameData = useSelector(selectRefDataMarketTypes);\r\n  const xbInstanceList = useSelector(selectRefDataXbInstances);\r\n  const caseTaskTypeView = useSelector(selectCaseTaskTypeView);\r\n  let xbInstanceName = null;\r\n  const optionsBureauList =\r\n    utils.generic.isValidArray(BureauNameData, true) &&\r\n    BureauNameData.filter((item) => item.marketTypeID !== 4).map((type) => ({\r\n      id: type.marketTypeID,\r\n      name: type.marketTypeDescription,\r\n    }));\r\n\r\n  const xbName = utils.generic.isValidArray(xbInstanceList, true) && xbInstanceList.filter((a) => a.sourceID === caseDetail?.xbInstanceId);\r\n  xbInstanceName = xbName?.length > 0 && xbName[0]?.sourceName;\r\n\r\n  const handleSubmit = (checkSignData) => {\r\n    dispatch(premiumProcessingCheckSigningCase({ checkSignData, selectedCase }));\r\n    dispatch(getPremiumProcessingTasksDetails({ requestType: 'search', taskType: caseTaskTypeView, filterTerm: [] }));\r\n    dispatch(getPremiumProcessingTasksDetails({ requestType: 'filter', taskType: caseTaskTypeView, filterTerm: [] }));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const packageSubmitted = caseDetail.packageSubmittedOn;\r\n  const packageSubmittedOn = utils.string.t('format.date', { value: { date: packageSubmitted, format: config.ui.format.date.iso } });\r\n\r\n  const fields = [\r\n    {\r\n      name: 'workPackageReference',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.workPackageReference'),\r\n      value: '',\r\n      type: 'text',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 30,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'bureauList',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.bureauList'),\r\n      value: optionsBureauList || [],\r\n      type: 'autocomplete',\r\n      options: optionsBureauList,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      innerComponentProps: {\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n      },\r\n      validation: Yup.array().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'riskReferenceId',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.riskReferenceId'),\r\n      value: selectedCase.policyRef || '',\r\n      type: 'text',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'packageSubmittedOn',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.packageSubmittedOn'),\r\n      type: 'datepicker',\r\n      value: packageSubmittedOn,\r\n      outputFormat: '',\r\n      placeholder: utils.string.t('app.selectDate'),\r\n      icon: 'TodayIcon',\r\n      validation: Yup.string().nullable().required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'department',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.department'),\r\n      value: caseDetail?.department || '',\r\n      type: 'text',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'gxbInstance',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.gxbInstance'),\r\n      value: xbInstanceName || '',\r\n      type: 'text',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.create'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <PremiumProcessingCheckSigningView actions={actions} fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}