{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\SelectPopover\\\\SelectPopover.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nimport { SelectPopoverView } from './SelectPopover.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSelectPopover.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  buttonText: PropTypes.string,\n  buttonDisabled: PropTypes.bool,\n  showButtonTextOnly: PropTypes.bool,\n  buttonVariant: PropTypes.string,\n  showSubmitButton: PropTypes.bool,\n  toolTip: PropTypes.string,\n  displaySelectedText: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  }),\n  handlers: PropTypes.shape({\n    onToggleOption: PropTypes.func.isRequired,\n    onTogglePopOver: PropTypes.func\n  }),\n  error: PropTypes.shape({\n    message: PropTypes.string\n  })\n};\nSelectPopover.defaultProps = {\n  showSubmitButton: true\n};\nexport default function SelectPopover(_ref) {\n  var id = _ref.id,\n      text = _ref.text,\n      buttonText = _ref.buttonText,\n      displaySelectedText = _ref.displaySelectedText,\n      buttonVariant = _ref.buttonVariant,\n      showButtonTextOnly = _ref.showButtonTextOnly,\n      buttonDisabled = _ref.buttonDisabled,\n      _ref$openPopover = _ref.openPopover,\n      initialOpenPopover = _ref$openPopover === void 0 ? false : _ref$openPopover,\n      toolTip = _ref.toolTip,\n      initialSetOpenPopover = _ref.setOpenPopover,\n      handlers = _ref.handlers,\n      error = _ref.error,\n      props = _objectWithoutProperties(_ref, [\"id\", \"text\", \"buttonText\", \"displaySelectedText\", \"buttonVariant\", \"showButtonTextOnly\", \"buttonDisabled\", \"openPopover\", \"toolTip\", \"setOpenPopover\", \"handlers\", \"error\"]);\n\n  /** Triggering the handler function  to pass selected value from the list to parent component */\n  var onToggleOption = function onToggleOption(item) {\n    if (utils.generic.isFunction(handlers.onToggleOption)) {\n      handlers.onToggleOption(item);\n    }\n  };\n  /**   */\n\n\n  var onTogglePopOver = function onTogglePopOver(item) {\n    if (utils.generic.isFunction(handlers.onTogglePopOver)) {\n      handlers.onTogglePopOver(item);\n    }\n  }; // abort\n\n\n  if (!buttonText) return null;\n  return /*#__PURE__*/_jsxDEV(SelectPopoverView, _objectSpread({\n    id: \"popover-\".concat(id),\n    displaySelectedText: displaySelectedText,\n    buttonText: buttonText,\n    buttonDisabled: buttonDisabled,\n    buttonVariant: buttonVariant,\n    toolTip: toolTip,\n    showButtonTextOnly: showButtonTextOnly,\n    text: text || '',\n    handlers: {\n      onToggleOption: onToggleOption,\n      onTogglePopOver: onTogglePopOver\n    },\n    error: error\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 63,\n    columnNumber: 5\n  }, this);\n}\n_c = SelectPopover;\nSelectPopover.displayName = \"SelectPopover\";\nSelectPopover.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SelectPopover\",\n  \"props\": {\n    \"openPopover\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"showSubmitButton\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"text\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buttonText\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buttonDisabled\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showButtonTextOnly\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buttonVariant\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"toolTip\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"displaySelectedText\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"id\": {\n            \"name\": \"union\",\n            \"value\": [{\n              \"name\": \"string\"\n            }, {\n              \"name\": \"number\"\n            }],\n            \"required\": false\n          },\n          \"name\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"onToggleOption\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onTogglePopOver\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"message\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\SelectPopover\\\\SelectPopover.js\"] = {\n    name: \"SelectPopover\",\n    docgenInfo: SelectPopover.__docgenInfo,\n    path: \"src\\\\components\\\\SelectPopover\\\\SelectPopover.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectPopover\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SelectPopover/SelectPopover.js"],"names":["React","PropTypes","utils","SelectPopoverView","SelectPopover","propTypes","id","string","isRequired","text","buttonText","buttonDisabled","bool","showButtonTextOnly","buttonVariant","showSubmitButton","toolTip","displaySelectedText","shape","oneOfType","number","name","handlers","onToggleOption","func","onTogglePopOver","error","message","defaultProps","openPopover","initialOpenPopover","initialSetOpenPopover","setOpenPopover","props","item","generic","isFunction"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { SelectPopoverView } from './SelectPopover.view';\r\n\r\nSelectPopover.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  text: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  buttonDisabled: PropTypes.bool,\r\n  showButtonTextOnly: PropTypes.bool,\r\n  buttonVariant: PropTypes.string,\r\n  showSubmitButton: PropTypes.bool,\r\n  toolTip: PropTypes.string,\r\n  displaySelectedText: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    name: PropTypes.string,\r\n  }),\r\n  handlers: PropTypes.shape({\r\n    onToggleOption: PropTypes.func.isRequired,\r\n    onTogglePopOver: PropTypes.func,\r\n  }),\r\n  error: PropTypes.shape({\r\n    message: PropTypes.string,\r\n  }),\r\n};\r\nSelectPopover.defaultProps = {\r\n  showSubmitButton: true,\r\n};\r\nexport default function SelectPopover({\r\n  id,\r\n  text,\r\n  buttonText,\r\n  displaySelectedText,\r\n  buttonVariant,\r\n  showButtonTextOnly,\r\n  buttonDisabled,\r\n  openPopover: initialOpenPopover = false,\r\n  toolTip,\r\n  setOpenPopover: initialSetOpenPopover,\r\n  handlers,\r\n  error,\r\n  ...props\r\n}) {\r\n  /** Triggering the handler function  to pass selected value from the list to parent component */\r\n  const onToggleOption = (item) => {\r\n    if (utils.generic.isFunction(handlers.onToggleOption)) {\r\n      handlers.onToggleOption(item);\r\n    }\r\n  };\r\n  /**   */\r\n  const onTogglePopOver = (item) => {\r\n    if (utils.generic.isFunction(handlers.onTogglePopOver)) {\r\n      handlers.onTogglePopOver(item);\r\n    }\r\n  };\r\n\r\n  // abort\r\n  if (!buttonText) return null;\r\n  return (\r\n    <SelectPopoverView\r\n      id={`popover-${id}`}\r\n      displaySelectedText={displaySelectedText}\r\n      buttonText={buttonText}\r\n      buttonDisabled={buttonDisabled}\r\n      buttonVariant={buttonVariant}\r\n      toolTip={toolTip}\r\n      showButtonTextOnly={showButtonTextOnly}\r\n      text={text || ''}\r\n      handlers={{\r\n        onToggleOption,\r\n        onTogglePopOver,\r\n      }}\r\n      error={error}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}