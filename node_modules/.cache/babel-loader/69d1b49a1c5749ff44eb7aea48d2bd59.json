{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, enqueueNotification } from 'stores';\nexport var postComment = function postComment(id, formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/comment.actions.post'\n    };\n    dispatch(postCommentRequest(id, formData));\n\n    if (!id) {\n      return _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Data missing'\n      });\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint === null || endpoint === void 0 ? void 0 : endpoint.edge,\n      path: \"api/comment/\".concat(id),\n      data: {\n        message: formData.comment\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postCommentSuccess(id, data));\n      dispatch(enqueueNotification('notification.comment.success', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (comment.post)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postCommentFailure(err));\n      dispatch(enqueueNotification('notification.comment.fail', 'error'));\n      return err;\n    });\n  };\n};\nexport var postCommentRequest = function postCommentRequest(id, formData) {\n  return {\n    type: 'COMMENTS_POST_REQUEST',\n    payload: {\n      id: id,\n      formData: formData\n    }\n  };\n};\nexport var postCommentSuccess = function postCommentSuccess(id, responseData) {\n  return {\n    type: 'COMMENTS_POST_SUCCESS',\n    payload: {\n      id: id,\n      comments: responseData\n    }\n  };\n};\nexport var postCommentFailure = function postCommentFailure(error) {\n  return {\n    type: 'COMMENTS_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/comment/comment.actions.post.js"],"names":["utils","authLogout","enqueueNotification","postComment","id","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","postCommentRequest","message","api","post","token","accessToken","edge","path","data","comment","then","response","handleResponse","json","handleData","postCommentSuccess","catch","err","errorParams","handleError","handleUnauthorized","postCommentFailure","type","payload","responseData","comments","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, enqueueNotification } from 'stores';\r\n\r\nexport const postComment = (id, formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/comment.actions.post',\r\n  };\r\n\r\n  dispatch(postCommentRequest(id, formData));\r\n\r\n  if (!id) {\r\n    return { ...defaultError, message: 'Data missing' };\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint?.edge,\r\n      path: `api/comment/${id}`,\r\n      data: {\r\n        message: formData.comment,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postCommentSuccess(id, data));\r\n      dispatch(enqueueNotification('notification.comment.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (comment.post)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postCommentFailure(err));\r\n      dispatch(enqueueNotification('notification.comment.fail', 'error'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postCommentRequest = (id, formData) => {\r\n  return {\r\n    type: 'COMMENTS_POST_REQUEST',\r\n    payload: { id, formData },\r\n  };\r\n};\r\n\r\nexport const postCommentSuccess = (id, responseData) => {\r\n  return {\r\n    type: 'COMMENTS_POST_SUCCESS',\r\n    payload: {\r\n      id,\r\n      comments: responseData,\r\n    },\r\n  };\r\n};\r\n\r\nexport const postCommentFailure = (error) => {\r\n  return {\r\n    type: 'COMMENTS_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}