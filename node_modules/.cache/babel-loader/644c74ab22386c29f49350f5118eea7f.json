{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityReferralValuesTable\\\\ClaimsComplexityReferralValuesTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; //app\n\nimport * as utils from 'utils';\nimport styles from './ClaimsComplexityReferralValuesTable.styles';\nimport { TableCell, Overflow, TableHead, Pagination, Empty } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks'; //mui\n\nimport { makeStyles, Grid, Table, TableRow, TableBody, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsComplexityReferralValuesTableView.prototypes = {\n  activeItem: PropTypes.object.isRequired,\n  colsArr: PropTypes.array.isRequired,\n  rows: PropTypes.object.isRequired,\n  sortObj: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleValueSelect: PropTypes.func.isRequired\n};\nexport function ClaimsComplexityReferralValuesTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeItem = _ref.activeItem,\n      colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? {} : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      handleSort = _ref.handleSort,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      handleValueSelect = _ref.handleValueSelect;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsComplexityReferralValuesTable'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          ml: 2,\n          className: classes.tableWrapper,\n          children: rows.items ? rows.items.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Overflow, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"data-testid\": \"complexity-table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: cols,\n                  sorting: sort,\n                  nestedClasses: {\n                    tableHead: classes.tableHead\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 23\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  \"data-testid\": \"complexity-list\",\n                  children: rows.items.map(function (complexityValue) {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      onClick: function onClick() {\n                        return handleValueSelect(complexityValue);\n                      },\n                      className: (activeItem === null || activeItem === void 0 ? void 0 : activeItem.complexityRulesID) === (complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.complexityRulesID) ? classes.tableRowActive : '',\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        \"data-testid\": \"row-col-\".concat(complexityValue.complexityRulesValue),\n                        className: classes.tableCell,\n                        children: complexityValue.complexityRulesValue\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 61,\n                        columnNumber: 31\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        \"data-testid\": \"row-col-\".concat(complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forCompany),\n                        children: [\" \", complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forCompany, \" \"]\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 64,\n                        columnNumber: 31\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        \"data-testid\": \"row-col-\".concat(complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forDivision),\n                        children: [' ', complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forDivision, ' ']\n                      }, void 0, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 65,\n                        columnNumber: 31\n                      }, _this)]\n                    }, complexityValue.complexityRulesID, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 55,\n                      columnNumber: 29\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 52,\n                  columnNumber: 23\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Pagination, {\n                  page: get(paginationObj, 'obj.page'),\n                  count: get(paginationObj, 'obj.rowsTotal'),\n                  rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n                  onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n                  onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 77,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Empty, {\n              title: utils.string.t('claims.noMatchFound'),\n              text: utils.string.t('claims.noMatchDetails'),\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 92,\n                columnNumber: 27\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(\"section\", {\n              className: classes.padding\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsComplexityReferralValuesTableView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = ClaimsComplexityReferralValuesTableView;\nClaimsComplexityReferralValuesTableView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexityReferralValuesTableView\",\n  \"props\": {\n    \"rows\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexityReferralValuesTable\\\\ClaimsComplexityReferralValuesTable.view.js\"] = {\n    name: \"ClaimsComplexityReferralValuesTableView\",\n    docgenInfo: ClaimsComplexityReferralValuesTableView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexityReferralValuesTable\\\\ClaimsComplexityReferralValuesTable.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityReferralValuesTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityReferralValuesTable/ClaimsComplexityReferralValuesTable.view.js"],"names":["React","PropTypes","get","utils","styles","TableCell","Overflow","TableHead","Pagination","Empty","usePagination","useSort","makeStyles","Grid","Table","TableRow","TableBody","Box","ClaimsComplexityReferralValuesTableView","prototypes","activeItem","object","isRequired","colsArr","array","rows","sortObj","pagination","handleSort","func","handleChangePage","handleChangeRowsPerPage","handleValueSelect","cols","sort","classes","name","paginationObj","tableWrapper","items","length","tableHead","map","complexityValue","complexityRulesID","tableRowActive","complexityRulesValue","tableCell","forCompany","forDivision","string","t","padding"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport styles from './ClaimsComplexityReferralValuesTable.styles';\r\nimport { TableCell, Overflow, TableHead, Pagination, Empty } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Table, TableRow, TableBody, Box } from '@material-ui/core';\r\n\r\nClaimsComplexityReferralValuesTableView.prototypes = {\r\n  activeItem: PropTypes.object.isRequired,\r\n  colsArr: PropTypes.array.isRequired,\r\n  rows: PropTypes.object.isRequired,\r\n  sortObj: PropTypes.object.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  handleValueSelect: PropTypes.func.isRequired,\r\n};\r\nexport function ClaimsComplexityReferralValuesTableView({\r\n  activeItem,\r\n  cols: colsArr,\r\n  rows = {},\r\n  sort: sortObj,\r\n  pagination,\r\n  handleSort,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleValueSelect,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsComplexityReferralValuesTable' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <Box ml={2} className={classes.tableWrapper}>\r\n            {rows.items ? (\r\n              rows.items.length ? (\r\n                <>\r\n                  <Overflow>\r\n                    <Table data-testid=\"complexity-table\">\r\n                      <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                      <TableBody data-testid=\"complexity-list\">\r\n                        {rows.items.map((complexityValue) => {\r\n                          return (\r\n                            <TableRow\r\n                              key={complexityValue.complexityRulesID}\r\n                              onClick={() => handleValueSelect(complexityValue)}\r\n                              className={activeItem?.complexityRulesID === complexityValue?.complexityRulesID ? classes.tableRowActive : ''}\r\n                              hover\r\n                            >\r\n                              <TableCell data-testid={`row-col-${complexityValue.complexityRulesValue}`} className={classes.tableCell}>\r\n                                {complexityValue.complexityRulesValue}\r\n                              </TableCell>\r\n                              <TableCell data-testid={`row-col-${complexityValue?.forCompany}`}> {complexityValue?.forCompany} </TableCell>\r\n                              <TableCell data-testid={`row-col-${complexityValue?.forDivision}`}>\r\n                                {' '}\r\n                                {complexityValue?.forDivision}{' '}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Overflow>\r\n                  <Grid container>\r\n                    <Grid item xs={12}>\r\n                      <Pagination\r\n                        page={get(paginationObj, 'obj.page')}\r\n                        count={get(paginationObj, 'obj.rowsTotal')}\r\n                        rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                        onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                        onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Empty\r\n                    title={utils.string.t('claims.noMatchFound')}\r\n                    text={utils.string.t('claims.noMatchDetails')}\r\n                    icon={<IconSearchFile />}\r\n                    padding\r\n                  />\r\n                </Grid>\r\n              )\r\n            ) : (\r\n              <Grid item xs={12}>\r\n                <section className={classes.padding}></section>\r\n              </Grid>\r\n            )}\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}