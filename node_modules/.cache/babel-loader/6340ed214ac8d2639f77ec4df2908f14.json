{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskNotes\\\\TaskNotes.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Button, Empty, Overflow, Pagination, TableActions, TableCell, TableFilters, TableHead, TableToolbar } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Box, Table, TableBody, TableRow } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskNotesView.propTypes = {\n  notes: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  filtersArray: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.object.isRequired\n  }).isRequired,\n  handlers: PropTypes.shape({\n    addNote: PropTypes.func.isRequired,\n    editNote: PropTypes.func.isRequired,\n    searchSubmit: PropTypes.func.isRequired,\n    resetSubmit: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function TaskNotesView(_ref) {\n  var _this = this;\n\n  var notes = _ref.notes,\n      cols = _ref.cols,\n      columnProps = _ref.columnProps,\n      filtersArray = _ref.filtersArray,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers;\n  var hasTaskNotes = utils.generic.isValidArray(notes, true);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: AddIcon,\n          color: \"primary\",\n          size: \"small\",\n          text: utils.string.t('claims.notes.addNote'),\n          onClick: function onClick() {\n            return handlers.addNote();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchMinChars: 4,\n        filtersArray: filtersArray,\n        handlers: {\n          onSearch: handlers.searchSubmit,\n          onResetFilter: handlers.resetSubmit,\n          onFilter: handlers.searchSubmit\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"data-testid\": \"claim-task-notes-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: hasTaskNotes && notes.map(function (note, index) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              \"data-testid\": \"claim-task-notes-table-row-\".concat(index),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n                nowrap: true,\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: note.createdDate,\n                    format: config.ui.format.date.textTime\n                  }\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdByName')), {}, {\n                children: note.createdByName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('notesDescription')), {}, {\n                children: note.notesDescription\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('updatedDate')), {}, {\n                nowrap: true,\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: note.updatedDate,\n                    format: config.ui.format.date.textTime\n                  }\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 74,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('updatedByName')), {}, {\n                children: note.updatedByName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('menu')), {}, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: EditIcon,\n                  onClick: function onClick() {\n                    handlers.editNote(note);\n                  },\n                  size: \"xsmall\",\n                  tooltip: {\n                    title: utils.string.t('app.edit')\n                  },\n                  variant: \"text\",\n                  color: \"default\",\n                  light: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, _this)]\n            }, index, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), !hasTaskNotes && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 84\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 25\n    }, this), (pagination === null || pagination === void 0 ? void 0 : pagination.obj) && (pagination === null || pagination === void 0 ? void 0 : pagination.handlers) && /*#__PURE__*/_jsxDEV(Pagination, {\n      page: pagination.obj.page,\n      count: pagination.obj.rowsTotal,\n      rowsPerPage: pagination.obj.rowsPerPage,\n      onChangePage: pagination.handlers.handleChangePage,\n      onChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n      testid: \"claim-task-notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskNotesView;\nTaskNotesView.displayName = \"TaskNotesView\";\nTaskNotesView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskNotesView\",\n  \"props\": {\n    \"notes\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"cols\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"columnProps\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"filtersArray\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"obj\": {\n            \"name\": \"object\",\n            \"required\": true\n          },\n          \"handlers\": {\n            \"name\": \"object\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"addNote\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"editNote\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"searchSubmit\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"resetSubmit\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskNotes\\\\TaskNotes.view.js\"] = {\n    name: \"TaskNotesView\",\n    docgenInfo: TaskNotesView.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskNotes\\\\TaskNotes.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskNotesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskNotes/TaskNotes.view.js"],"names":["React","PropTypes","Button","Empty","Overflow","Pagination","TableActions","TableCell","TableFilters","TableHead","TableToolbar","utils","config","Box","Table","TableBody","TableRow","AddIcon","EditIcon","TaskNotesView","propTypes","notes","array","isRequired","cols","columnProps","func","filtersArray","sort","object","pagination","shape","obj","handlers","addNote","editNote","searchSubmit","resetSubmit","hasTaskNotes","generic","isValidArray","string","t","onSearch","onResetFilter","onFilter","map","note","index","value","date","createdDate","format","ui","textTime","createdByName","notesDescription","updatedDate","updatedByName","title","page","rowsTotal","rowsPerPage","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Button, Empty, Overflow, Pagination, TableActions, TableCell, TableFilters, TableHead, TableToolbar } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nTaskNotesView.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  filtersArray: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    addNote: PropTypes.func.isRequired,\r\n    editNote: PropTypes.func.isRequired,\r\n    searchSubmit: PropTypes.func.isRequired,\r\n    resetSubmit: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function TaskNotesView({ notes, cols, columnProps, filtersArray, sort, pagination, handlers }) {\r\n  const hasTaskNotes = utils.generic.isValidArray(notes, true);\r\n\r\n  return (\r\n    <Box mt={3}>\r\n      <TableToolbar>\r\n        <TableActions>\r\n          <Button\r\n            icon={AddIcon}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            text={utils.string.t('claims.notes.addNote')}\r\n            onClick={() => handlers.addNote()}\r\n          />\r\n        </TableActions>\r\n        <TableFilters\r\n          search\r\n          searchMinChars={4}\r\n          filtersArray={filtersArray}\r\n          handlers={{\r\n            onSearch: handlers.searchSubmit,\r\n            onResetFilter: handlers.resetSubmit,\r\n            onFilter: handlers.searchSubmit,\r\n          }}\r\n        />\r\n      </TableToolbar>\r\n      <Overflow>\r\n        <Table data-testid=\"claim-task-notes-table\">\r\n          <TableHead columns={cols} sorting={sort}></TableHead>\r\n          <TableBody>\r\n            {hasTaskNotes &&\r\n              notes.map((note, index) => {\r\n                return (\r\n                  <TableRow key={index} data-testid={`claim-task-notes-table-row-${index}`}>\r\n                    <TableCell {...columnProps('createdDate')} nowrap>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: note.createdDate, format: config.ui.format.date.textTime },\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell {...columnProps('createdByName')}>{note.createdByName}</TableCell>\r\n                    <TableCell {...columnProps('notesDescription')}>{note.notesDescription}</TableCell>\r\n                    <TableCell {...columnProps('updatedDate')} nowrap>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: note.updatedDate, format: config.ui.format.date.textTime },\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell {...columnProps('updatedByName')}>{note.updatedByName}</TableCell>\r\n                    <TableCell {...columnProps('menu')}>\r\n                      <Button\r\n                        icon={EditIcon}\r\n                        onClick={() => {\r\n                          handlers.editNote(note);\r\n                        }}\r\n                        size=\"xsmall\"\r\n                        tooltip={{ title: utils.string.t('app.edit') }}\r\n                        variant=\"text\"\r\n                        color=\"default\"\r\n                        light\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {!hasTaskNotes && <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />}\r\n      {pagination?.obj && pagination?.handlers && (\r\n        <Pagination\r\n          page={pagination.obj.page}\r\n          count={pagination.obj.rowsTotal}\r\n          rowsPerPage={pagination.obj.rowsPerPage}\r\n          onChangePage={pagination.handlers.handleChangePage}\r\n          onChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n          testid=\"claim-task-notes\"\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}