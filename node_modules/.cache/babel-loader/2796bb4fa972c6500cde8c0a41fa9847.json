{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, storeProcessingInstruction } from 'stores';\nimport * as utils from 'utils';\nexport var submitProcessingInstruction = function submitProcessingInstruction(instruction) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.submit'\n    };\n    dispatch(addLoader('submitInstruction'));\n\n    if (!instruction || !(instruction === null || instruction === void 0 ? void 0 : instruction.id)) {\n      dispatch(submitInstructionFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing instruction or invalid instruction ID'\n      })));\n      dispatch(removeLoader('submitInstruction'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      data: instruction,\n      path: 'instruction/submit'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(submitInstructionSuccess(data.data));\n      dispatch(storeProcessingInstruction(data.data));\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (submitInstruction)'\n      }));\n      dispatch(submitInstructionFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('submitInstruction'));\n    });\n  };\n};\nexport var submitInstructionRequest = function submitInstructionRequest(values, instruction) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_REQUEST',\n    payload: {\n      values: values,\n      instruction: instruction\n    }\n  };\n};\nexport var submitInstructionSuccess = function submitInstructionSuccess(json) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_SUCCESS',\n    payload: json\n  };\n};\nexport var submitInstructionFailure = function submitInstructionFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.submit.js"],"names":["addLoader","removeLoader","storeProcessingInstruction","utils","submitProcessingInstruction","instruction","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","id","submitInstructionFailure","message","api","post","token","accessToken","ppService","data","path","then","response","handleResponse","json","handleNewData","submitInstructionSuccess","catch","err","handleError","finally","submitInstructionRequest","values","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, removeLoader, storeProcessingInstruction } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const submitProcessingInstruction = (instruction) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.submit',\r\n  };\r\n\r\n  dispatch(addLoader('submitInstruction'));\r\n\r\n  if (!instruction || !instruction?.id) {\r\n    dispatch(submitInstructionFailure({ ...defaultError, message: 'Missing instruction or invalid instruction ID' }));\r\n    dispatch(removeLoader('submitInstruction'));\r\n    return;\r\n  }\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      data: instruction,\r\n      path: 'instruction/submit',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(submitInstructionSuccess(data.data));\r\n      dispatch(storeProcessingInstruction(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (submitInstruction)' });\r\n      dispatch(submitInstructionFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('submitInstruction'));\r\n    });\r\n};\r\n\r\nexport const submitInstructionRequest = (values, instruction) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_REQUEST',\r\n    payload: { values, instruction },\r\n  };\r\n};\r\n\r\nexport const submitInstructionSuccess = (json) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_SUCCESS',\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const submitInstructionFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_SUBMIT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}