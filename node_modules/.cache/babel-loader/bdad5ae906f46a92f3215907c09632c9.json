{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossQualifiers = function getLossQualifiers(params) {\n  return function (dispatch, getState) {\n    var _params$viewLoader;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossQualifiers'\n    };\n    var viewLoader = (_params$viewLoader = params === null || params === void 0 ? void 0 : params.viewLoader) !== null && _params$viewLoader !== void 0 ? _params$viewLoader : true;\n    dispatch(getLossQualifiersRequest());\n    viewLoader && dispatch(addLoader('getLossQualifiers'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/gui/loss-qualifiers'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getLossQualifiersSuccess(data.data));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getLossQualifiersCodesFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      viewLoader && dispatch(removeLoader('getLossQualifiers'));\n    });\n  };\n};\nexport var getLossQualifiersRequest = function getLossQualifiersRequest(data) {\n  return {\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getLossQualifiersSuccess = function getLossQualifiersSuccess(data) {\n  return {\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossQualifiersCodesFailure = function getLossQualifiersCodesFailure(data) {\n  return {\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossQualifiers.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossQualifiers","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","viewLoader","getLossQualifiersRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","data","getLossQualifiersSuccess","err","getLossQualifiersCodesFailure","handleUnauthorized","type","payload"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA;;AACnE;AADmE,oBAEVA,QAAQ,EAFE;AAAA,QAEnDC,IAFmD,aAE3DC,IAF2D,CAEnDD,IAFmD;AAAA,QAEzBE,QAFyB,aAE3CC,MAF2C,CAEjCC,IAFiC,CAEzBF,QAFyB;;AAInE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,UAAU,yBAAGV,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEU,UAAX,mEAAyB,IAAzC;AAEAT,IAAAA,QAAQ,CAACU,wBAAwB,EAAzB,CAAR;AACAD,IAAAA,UAAU,IAAIT,QAAQ,CAACL,SAAS,CAAC,mBAAD,CAAV,CAAtB;AAEA,WAAOE,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,YAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACc,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdpB,MAAAA,QAAQ,CAACqB,wBAAwB,CAACD,IAAI,CAACA,IAAN,CAAzB,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAVI,WAWE,UAACE,GAAD,EAAS;AACdtB,MAAAA,QAAQ,CAACuB,6BAA6B,CAACD,GAAD,EAAMf,YAAN,CAA9B,CAAR;AACAV,MAAAA,KAAK,CAACc,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CN,UAA5C;AACA,aAAO4B,GAAP;AACD,KAfI,aAgBI,YAAM;AACbb,MAAAA,UAAU,IAAIT,QAAQ,CAACJ,YAAY,CAAC,mBAAD,CAAb,CAAtB;AACD,KAlBI,CAAP;AAmBD,GAhCgC;AAAA,CAA1B;AAkCP,OAAO,IAAMc,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACU,IAAD,EAAU;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACD,IAAD,EAAU;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACH,IAAD,EAAU;AACrD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossQualifiers = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getLossQualifiers',\r\n  };\r\n\r\n  const viewLoader = params?.viewLoader ?? true;\r\n\r\n  dispatch(getLossQualifiersRequest());\r\n  viewLoader && dispatch(addLoader('getLossQualifiers'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/gui/loss-qualifiers',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getLossQualifiersSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getLossQualifiersCodesFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      viewLoader && dispatch(removeLoader('getLossQualifiers'));\r\n    });\r\n};\r\n\r\nexport const getLossQualifiersRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossQualifiersSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossQualifiersCodesFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_QUALIFIERS_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}