{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react'; // app\n\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar ClaimsRegisterNewLoss = function ClaimsRegisterNewLoss() {\n  _s();\n\n  var steps = ['Create Loss', 'Link Policies', 'Create Claim', 'Manage Documents', 'Confirmation'];\n  var stepsForms = [{\n    form: 'Create Loss',\n    formEditedStatus: false\n  }, {\n    form: 'Link Policies',\n    formEditedStatus: false\n  }, {\n    form: 'Create Claim',\n    formEditedStatus: false\n  }, {\n    form: 'Manage Documents',\n    formEditedStatus: false\n  }, {\n    form: 'Confirmation',\n    formEditedStatus: false\n  }];\n\n  var _useState = useState(steps),\n      _useState2 = _slicedToArray(_useState, 1),\n      stepFields = _useState2[0];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState(stepsForms),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      saveStatus = _useState10[0],\n      setSaveStatus = _useState10[1];\n\n  var handleStep = function handleStep(step) {\n    if (!isFormsEdited[activeStep]['formEditedStatus']) {\n      setActiveStep(step);\n    } else {\n      alert('navi is blocked');\n    }\n  };\n\n  var handleNext = function handleNext(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index]['formEditedStatus'] = true;\n    setFormEditedStatus(formState);\n\n    if (index === 1) {\n      setSaveStatus(new Date().getTime());\n    } else {\n      setActiveStep(index + 1);\n    }\n  };\n\n  var handleBack = function handleBack(index) {\n    if (!isFormsEdited[activeStep]['formEditedStatus']) {\n      setActiveStep(index - 1);\n    } else {\n      alert('navi is blocked');\n    }\n  };\n\n  var handleSave = function handleSave(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index]['formEditedStatus'] = false;\n    setFormEditedStatus(formState);\n    if (index === 1) setSaveStatus(new Date().getTime());\n  };\n\n  var handleFormStatus = function handleFormStatus(index) {\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[index]['formEditedStatus'] = true;\n    setFormEditedStatus(formState);\n  };\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep, stepFields.length]);\n  return /*#__PURE__*/_jsxDEV(ClaimsRegisterNewLossView, {\n    activeStep: activeStep,\n    setActiveStep: setActiveStep,\n    steps: steps,\n    progress: progress,\n    handleStep: handleStep,\n    isFormsEdited: isFormsEdited,\n    isAllStepsCompleted: false,\n    handleFormStatus: handleFormStatus,\n    handleNext: handleNext,\n    handleBack: handleBack,\n    handleSave: handleSave,\n    setFormEditedStatus: setFormEditedStatus,\n    saveStatus: saveStatus,\n    setSaveStatus: setSaveStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(ClaimsRegisterNewLoss, \"RjMcTOAhbzVQFKyGGGaNPhiAHOU=\");\n\n_c = ClaimsRegisterNewLoss;\nexport default ClaimsRegisterNewLoss;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLoss\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.js"],"names":["React","useState","useEffect","ClaimsRegisterNewLossView","ClaimsRegisterNewLoss","steps","stepsForms","form","formEditedStatus","stepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","saveStatus","setSaveStatus","handleStep","step","alert","handleNext","index","formState","map","Date","getTime","handleBack","handleSave","handleFormStatus","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\n// app\r\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\r\n\r\nconst ClaimsRegisterNewLoss = () => {\r\n  const steps = ['Create Loss', 'Link Policies', 'Create Claim', 'Manage Documents', 'Confirmation'];\r\n  const stepsForms = [\r\n    { form: 'Create Loss', formEditedStatus: false },\r\n    { form: 'Link Policies', formEditedStatus: false },\r\n    { form: 'Create Claim', formEditedStatus: false },\r\n    { form: 'Manage Documents', formEditedStatus: false },\r\n    { form: 'Confirmation', formEditedStatus: false },\r\n  ];\r\n  const [stepFields] = useState(steps);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isFormsEdited, setFormEditedStatus] = useState(stepsForms);\r\n  const [saveStatus, setSaveStatus] = useState();\r\n\r\n  const handleStep = (step) => {\r\n    if (!isFormsEdited[activeStep]['formEditedStatus']) {\r\n      setActiveStep(step);\r\n    } else {\r\n      alert('navi is blocked');\r\n    }\r\n  };\r\n  const handleNext = (index) => {\r\n    const formState = isFormsEdited.map((form) => ({ ...form }));\r\n    formState[index]['formEditedStatus'] = true;\r\n    setFormEditedStatus(formState);\r\n    if(index === 1){\r\n        setSaveStatus(new Date().getTime());\r\n    }else{\r\n        setActiveStep(index + 1);\r\n    }\r\n  };\r\n  const handleBack = (index) => {\r\n    if (!isFormsEdited[activeStep]['formEditedStatus']) {\r\n      setActiveStep(index - 1);\r\n    } else {\r\n      alert('navi is blocked');\r\n    }\r\n  };\r\n  const handleSave = (index) => {\r\n    const formState = isFormsEdited.map((form) => ({ ...form }));\r\n    formState[index]['formEditedStatus'] = false;\r\n    setFormEditedStatus(formState);\r\n    if(index===1)\r\n        setSaveStatus(new Date().getTime());\r\n  };\r\n  const handleFormStatus = (index) => {\r\n    const formState = isFormsEdited.map((form) => ({ ...form }));\r\n    formState[index]['formEditedStatus'] = true;\r\n    setFormEditedStatus(formState);\r\n  };\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep, stepFields.length]);\r\n\r\n  return (\r\n    <ClaimsRegisterNewLossView\r\n      activeStep={activeStep}\r\n      setActiveStep={setActiveStep}\r\n      steps={steps}\r\n      progress={progress}\r\n      handleStep={handleStep}\r\n      isFormsEdited={isFormsEdited}\r\n      isAllStepsCompleted={false}\r\n      handleFormStatus={handleFormStatus}\r\n      handleNext={handleNext}\r\n      handleBack={handleBack}\r\n      handleSave={handleSave}\r\n      setFormEditedStatus={setFormEditedStatus}\r\n      saveStatus={saveStatus}\r\n      setSaveStatus={setSaveStatus}\r\n    />\r\n  );\r\n};\r\n\r\nexport default ClaimsRegisterNewLoss;\r\n"]},"metadata":{},"sourceType":"module"}