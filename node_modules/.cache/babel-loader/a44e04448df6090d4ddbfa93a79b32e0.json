{"ast":null,"code":"import { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getReferralResponse = function getReferralResponse() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getReferralResponse'\n    };\n    dispatch(getReferralResponseRequest());\n    dispatch(addLoader('getReferralResponse'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/gui/complex/referral-response\"\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getReferralResponseSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getReferralResponseFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getReferralResponse'));\n    });\n  };\n};\nexport var getReferralResponseRequest = function getReferralResponseRequest(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getReferralResponseSuccess = function getReferralResponseSuccess(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getReferralResponseFailure = function getReferralResponseFailure(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getReferralResponse.js"],"names":["addLoader","authLogout","removeLoader","utils","getReferralResponse","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getReferralResponseRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","data","getReferralResponseSuccess","catch","err","getReferralResponseFailure","handleUnauthorized","finally","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC/D;AAD+D,oBAENA,QAAQ,EAFF;AAAA,QAE/CC,IAF+C,aAEvDC,IAFuD,CAE/CD,IAF+C;AAAA,QAErBE,QAFqB,aAEvCC,MAFuC,CAE7BC,IAF6B,CAErBF,QAFqB;;AAI/D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,0BAA0B,EAA3B,CAAR;AACAT,IAAAA,QAAQ,CAACL,SAAS,CAAC,qBAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI;AAHD,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACY,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,0BAA0B,CAACD,IAAI,CAACA,IAAN,CAA3B,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAVI,EAWJE,KAXI,CAWE,UAACC,GAAD,EAAS;AACdtB,MAAAA,QAAQ,CAACuB,0BAA0B,CAACD,GAAD,EAAMf,YAAN,CAA3B,CAAR;AACAT,MAAAA,KAAK,CAACY,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CJ,UAA5C;AACA,aAAO0B,GAAP;AACD,KAfI,EAgBJG,OAhBI,CAgBI,YAAM;AACbzB,MAAAA,QAAQ,CAACH,YAAY,CAAC,qBAAD,CAAb,CAAR;AACD,KAlBI,CAAP;AAmBD,GA9BkC;AAAA,CAA5B;AAgCP,OAAO,IAAMY,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACU,IAAD,EAAU;AAClD,SAAO;AACLO,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACD,IAAD,EAAU;AAClD,SAAO;AACLO,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACJ,IAAD,EAAU;AAClD,SAAO;AACLO,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getReferralResponse = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getReferralResponse',\r\n  };\r\n\r\n  dispatch(getReferralResponseRequest());\r\n  dispatch(addLoader('getReferralResponse'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/gui/complex/referral-response`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getReferralResponseSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getReferralResponseFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReferralResponse'));\r\n    });\r\n};\r\n\r\nexport const getReferralResponseRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getReferralResponseSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getReferralResponseFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_RESPONSE_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}