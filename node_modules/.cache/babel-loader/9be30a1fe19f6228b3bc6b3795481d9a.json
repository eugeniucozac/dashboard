{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseRfiRespond\\\\PremiumProcessingCaseRfiRespond.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport uniqBy from 'lodash/uniqBy'; // app\n\nimport styles from './PremiumProcessingCaseRfiRespond.styles';\nimport PremiumProcessingCaseRfiRespondView from './PremiumProcessingCaseRfiRespond.view';\nimport { premiumProcessingRespondRFI, selectAssignedToUsers, getAssignedToUsersList, selectorDmsViewFiles, selectRefDataQueryCodes, getViewTableDocuments, getDmsFilesUploaded, selectUserRole, linkMultipleDmsDocuments } from 'stores';\nimport { useConfirmNavigation } from 'hooks';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseRfiRespond.propTypes = {\n  caseDetails: PropTypes.object.isRequired,\n  rfiDetails: PropTypes.object.isRequired,\n  isPageDirty: PropTypes.bool.isRequired,\n  isWorklist: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    setIsPageDirty: PropTypes.func.isRequired\n  })\n};\nexport default function PremiumProcessingCaseRfiRespond(_ref) {\n  _s();\n\n  var _rfiDetails$caseId, _caseDetails$caseTeam, _rfiDetails$queryId;\n\n  var caseDetails = _ref.caseDetails,\n      rfiDetails = _ref.rfiDetails,\n      isPageDirty = _ref.isPageDirty,\n      isWorklist = _ref.isWorklist,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseRfiRespond'\n  })();\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var selectAssignees = useSelector(selectAssignedToUsers);\n  var dmsViewFiles = useSelector(selectorDmsViewFiles);\n  var queryCodes = useSelector(selectRefDataQueryCodes);\n  var currentUser = useSelector(selectUserRole);\n  var uploadedFile = useSelector(getDmsFilesUploaded);\n  var queryCodesRfi = queryCodes.find(function (queryCode) {\n    return (queryCode === null || queryCode === void 0 ? void 0 : queryCode.queryCodeDetails) === (rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryCode);\n  });\n  var tabDetails = (caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.taskView) === constants.WORKBASKET || (caseDetails === null || caseDetails === void 0 ? void 0 : caseDetails.taskView) === constants.ALL_CASES;\n  var isFrontEndContact = utils.generic.isValidArray(currentUser, true) && currentUser.some(function (item) {\n    return [constants.FRONT_END_CONTACT.toLowerCase()].includes(item.name.toLowerCase());\n  });\n\n  var _useConfirmNavigation = useConfirmNavigation({\n    title: utils.string.t('navigation.form.titleClear'),\n    subtitle: utils.string.t('navigation.form.subtitle')\n  }),\n      confirmNavigation = _useConfirmNavigation.confirmNavigation;\n\n  var _useState = useState(constants.DMS_VIEW_TAB_VIEW),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedDmsTab = _useState2[0],\n      setSelectedDmsTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedDmsFiles = _useState4[0],\n      setSelectedDmsFiles = _useState4[1];\n\n  var dmsLinkedUploadedFilesList = uniqBy([].concat(_toConsumableArray(dmsViewFiles), _toConsumableArray(selectedDmsFiles)), 'documentId');\n  var isAssignedToUserList = utils.generic.isValidArray(selectAssignees, true);\n  /* this api is used to link the attachment uploaded in FEC because api team is not linking the record\r\n   internally so added this code to link the record after the upload is successfully */\n\n  useEffect(function () {\n    if (isFrontEndContact && (uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.length)) {\n      var uploadedFiles = uploadedFile === null || uploadedFile === void 0 ? void 0 : uploadedFile.map(function (d) {\n        return {\n          documentId: d.documentId,\n          referenceId: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId,\n          sectionType: constants.DMS_CONTEXT_RFI\n        };\n      });\n      dispatch(linkMultipleDmsDocuments(uploadedFiles));\n    }\n  }, [isFrontEndContact, uploadedFile, rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var fetchDmsDocuments = function fetchDmsDocuments(id) {\n    if (id) {\n      dispatch(getViewTableDocuments({\n        referenceId: id,\n        sectionType: constants.DMS_CONTEXT_RFI\n      }));\n    }\n  };\n\n  useEffect(function () {\n    if (!isAssignedToUserList) {\n      dispatch(getAssignedToUsersList());\n    } // fetch RFI documents\n\n\n    fetchDmsDocuments(rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    fetchDmsDocuments(rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId);\n  }, [rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var resetForm = function resetForm(resetFn) {\n    if (utils.generic.isFunction(resetFn)) {\n      resetFn(utils.form.getInitialValues(fields), {\n        keepDirty: false\n      });\n    }\n  };\n\n  var handleCancel = function handleCancel(resetFn) {\n    if (isPageDirty) {\n      confirmNavigation(function () {\n        return resetForm(resetFn);\n      });\n    } else {\n      resetForm(resetFn);\n    }\n  };\n\n  var selectDmsTab = function selectDmsTab(tabName) {\n    setSelectedDmsTab(tabName); // fetch latest linked RFI documents\n\n    if (tabName === constants.DMS_VIEW_TAB_VIEW) {\n      if (rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryId) {\n        dispatch(getViewTableDocuments({\n          referenceId: rfiDetails.queryId,\n          sectionType: constants.DMS_CONTEXT_RFI\n        }));\n      }\n    }\n  };\n\n  var onSelectDmsFile = function onSelectDmsFile(files) {\n    setSelectedDmsFiles(uniqBy([].concat(_toConsumableArray(selectedDmsFiles), _toConsumableArray(files)), 'documentId'));\n  };\n\n  var fields = [{\n    name: 'rfiResponse',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().min(5, utils.string.t('validation.string.min')).max(4000, utils.string.t('validation.string.max')).required(utils.string.t('validation.required')),\n    label: utils.string.t('premiumProcessing.rfi.rfiResponse'),\n    fullWidth: true,\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 4000,\n        classes: {\n          root: classes.typeYourResponseTextWidth\n        }\n      },\n      multiline: true,\n      rows: 5,\n      rowsMax: 10,\n      disabled: tabDetails\n    }\n  }].concat(_toConsumableArray(rfiDetails.rfiType === constants.BUREAU_RFITYPE ? [{\n    name: 'bureauQueryDescription',\n    type: 'textarea',\n    label: utils.string.t('premiumProcessing.rfi.bureauQuery'),\n    value: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.bureauQuery,\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 4000\n      },\n      multiline: true,\n      minRows: 5,\n      maxRows: 10,\n      readOnly: true,\n      disabled: true\n    },\n    validation: Yup.string().min(5, utils.string.t('validation.string.min')).max(4000, utils.string.t('validation.string.max'))\n  }] : []));\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler(reset) {\n      return handleCancel(reset);\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('premiumProcessing.rfi.respondRfi'),\n    handler: function handler(reset) {\n      return function (values) {\n        if (values) {\n          var _rfiDetails$createdBy;\n\n          var rfiSendData = {\n            assignedTo: rfiDetails === null || rfiDetails === void 0 ? void 0 : (_rfiDetails$createdBy = rfiDetails.createdByEmail) === null || _rfiDetails$createdBy === void 0 ? void 0 : _rfiDetails$createdBy.toLowerCase(),\n            bpmTaskID: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.taskId,\n            caseIncidentID: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.caseId,\n            notes: values === null || values === void 0 ? void 0 : values.rfiResponse,\n            team: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.team,\n            queryCodeDescription: rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.queryCode,\n            documentId: selectedDmsFiles === null || selectedDmsFiles === void 0 ? void 0 : selectedDmsFiles.map(function (doc) {\n              return doc.documentId;\n            })\n          };\n          handlers.setIsPageDirty(false);\n          dispatch(premiumProcessingRespondRFI(rfiSendData)).then(function (response) {\n            // success POST\n            if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n              reset();\n              history.push(\"\".concat(config.routes.premiumProcessing.root));\n            }\n          });\n        }\n      };\n    }\n  }];\n  var dmsObjTable = {\n    context: constants.DMS_CONTEXT_CASE,\n    referenceId: rfiDetails === null || rfiDetails === void 0 ? void 0 : (_rfiDetails$caseId = rfiDetails.caseId) === null || _rfiDetails$caseId === void 0 ? void 0 : _rfiDetails$caseId.toString(),\n    sourceId: caseDetails === null || caseDetails === void 0 ? void 0 : (_caseDetails$caseTeam = caseDetails.caseTeamData) === null || _caseDetails$caseTeam === void 0 ? void 0 : _caseDetails$caseTeam.xbInstanceId\n  };\n  var dmsObjSearch = {\n    context: constants.DMS_CONTEXT_RFI,\n    referenceId: rfiDetails === null || rfiDetails === void 0 ? void 0 : (_rfiDetails$queryId = rfiDetails.queryId) === null || _rfiDetails$queryId === void 0 ? void 0 : _rfiDetails$queryId.toString(),\n    source: ''\n  };\n  var tabs = [{\n    value: constants.DMS_VIEW_TAB_VIEW,\n    label: utils.string.t('dms.wrapper.tabs.viewDocuments')\n  }, {\n    value: constants.DMS_VIEW_TAB_SEARCH,\n    label: utils.string.t('dms.wrapper.tabs.search'),\n    disabled: !isWorklist\n  }]; // abort\n\n  if (!(rfiDetails === null || rfiDetails === void 0 ? void 0 : rfiDetails.taskId)) {\n    return null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseRfiRespondView, {\n    fields: fields,\n    actions: actions,\n    caseDetails: caseDetails,\n    rfiDetails: rfiDetails,\n    queryCodesRfi: queryCodesRfi,\n    dmsObjTable: dmsObjTable,\n    dmsObjSearch: dmsObjSearch,\n    dmsTabs: tabs,\n    documents: dmsLinkedUploadedFilesList,\n    selectedDmsTab: selectedDmsTab,\n    isPageDirty: isPageDirty,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      selectDmsTab: selectDmsTab,\n      onSelectDmsFile: onSelectDmsFile\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 241,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseRfiRespond, \"XeMLx7QCX4GZBMFlXlCOX6SH3uE=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useConfirmNavigation];\n});\n\n_c = PremiumProcessingCaseRfiRespond;\nPremiumProcessingCaseRfiRespond.displayName = \"PremiumProcessingCaseRfiRespond\";\nPremiumProcessingCaseRfiRespond.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseRfiRespond\",\n  \"props\": {\n    \"caseDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"rfiDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isPageDirty\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isWorklist\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"setIsPageDirty\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseRfiRespond\\\\PremiumProcessingCaseRfiRespond.js\"] = {\n    name: \"PremiumProcessingCaseRfiRespond\",\n    docgenInfo: PremiumProcessingCaseRfiRespond.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseRfiRespond\\\\PremiumProcessingCaseRfiRespond.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseRfiRespond\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseRfiRespond/PremiumProcessingCaseRfiRespond.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","PropTypes","Yup","uniqBy","styles","PremiumProcessingCaseRfiRespondView","premiumProcessingRespondRFI","selectAssignedToUsers","getAssignedToUsersList","selectorDmsViewFiles","selectRefDataQueryCodes","getViewTableDocuments","getDmsFilesUploaded","selectUserRole","linkMultipleDmsDocuments","useConfirmNavigation","constants","utils","config","makeStyles","PremiumProcessingCaseRfiRespond","propTypes","caseDetails","object","isRequired","rfiDetails","isPageDirty","bool","isWorklist","handlers","shape","setIsPageDirty","func","classes","name","dispatch","history","selectAssignees","dmsViewFiles","queryCodes","currentUser","uploadedFile","queryCodesRfi","find","queryCode","queryCodeDetails","tabDetails","taskView","WORKBASKET","ALL_CASES","isFrontEndContact","generic","isValidArray","some","item","FRONT_END_CONTACT","toLowerCase","includes","title","string","t","subtitle","confirmNavigation","DMS_VIEW_TAB_VIEW","selectedDmsTab","setSelectedDmsTab","selectedDmsFiles","setSelectedDmsFiles","dmsLinkedUploadedFilesList","isAssignedToUserList","length","uploadedFiles","map","d","documentId","referenceId","queryId","sectionType","DMS_CONTEXT_RFI","fetchDmsDocuments","id","resetForm","resetFn","isFunction","form","getInitialValues","fields","keepDirty","handleCancel","selectDmsTab","tabName","onSelectDmsFile","files","type","value","validation","min","max","required","label","fullWidth","muiComponentProps","inputProps","maxLength","root","typeYourResponseTextWidth","multiline","rows","rowsMax","disabled","rfiType","BUREAU_RFITYPE","bureauQuery","minRows","maxRows","readOnly","actions","handler","reset","values","rfiSendData","assignedTo","createdByEmail","bpmTaskID","taskId","caseIncidentID","caseId","notes","rfiResponse","team","queryCodeDescription","doc","then","response","status","API_RESPONSE_OK","push","routes","premiumProcessing","dmsObjTable","context","DMS_CONTEXT_CASE","toString","sourceId","caseTeamData","xbInstanceId","dmsObjSearch","source","tabs","DMS_VIEW_TAB_SEARCH"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,eAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,OAAOC,mCAAP,MAAgD,wCAAhD;AACA,SACEC,2BADF,EAEEC,qBAFF,EAGEC,sBAHF,EAIEC,oBAJF,EAKEC,uBALF,EAMEC,qBANF,EAOEC,mBAPF,EAQEC,cARF,EASEC,wBATF,QAUO,QAVP;AAWA,SAASC,oBAAT,QAAqC,OAArC;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEAC,+BAA+B,CAACC,SAAhC,GAA4C;AAC1CC,EAAAA,WAAW,EAAErB,SAAS,CAACsB,MAAV,CAAiBC,UADY;AAE1CC,EAAAA,UAAU,EAAExB,SAAS,CAACsB,MAAV,CAAiBC,UAFa;AAG1CE,EAAAA,WAAW,EAAEzB,SAAS,CAAC0B,IAAV,CAAeH,UAHc;AAI1CI,EAAAA,UAAU,EAAE3B,SAAS,CAAC0B,IAAV,CAAeH,UAJe;AAK1CK,EAAAA,QAAQ,EAAE5B,SAAS,CAAC6B,KAAV,CAAgB;AACxBC,IAAAA,cAAc,EAAE9B,SAAS,CAAC+B,IAAV,CAAeR;AADP,GAAhB;AALgC,CAA5C;AASA,eAAe,SAASJ,+BAAT,OAAyG;AAAA;;AAAA;;AAAA,MAA9DE,WAA8D,QAA9DA,WAA8D;AAAA,MAAjDG,UAAiD,QAAjDA,UAAiD;AAAA,MAArCC,WAAqC,QAArCA,WAAqC;AAAA,MAAxBE,UAAwB,QAAxBA,UAAwB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACtH,MAAMI,OAAO,GAAGd,UAAU,CAACf,MAAD,EAAS;AAAE8B,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAGrC,WAAW,EAA5B;AACA,MAAMsC,OAAO,GAAGpC,UAAU,EAA1B;AAEA,MAAMqC,eAAe,GAAGtC,WAAW,CAACQ,qBAAD,CAAnC;AACA,MAAM+B,YAAY,GAAGvC,WAAW,CAACU,oBAAD,CAAhC;AACA,MAAM8B,UAAU,GAAGxC,WAAW,CAACW,uBAAD,CAA9B;AACA,MAAM8B,WAAW,GAAGzC,WAAW,CAACc,cAAD,CAA/B;AACA,MAAM4B,YAAY,GAAG1C,WAAW,CAACa,mBAAD,CAAhC;AACA,MAAM8B,aAAa,GAAGH,UAAU,CAACI,IAAX,CAAgB,UAACC,SAAD;AAAA,WAAe,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,gBAAX,OAAgCpB,UAAhC,aAAgCA,UAAhC,uBAAgCA,UAAU,CAAEmB,SAA5C,CAAf;AAAA,GAAhB,CAAtB;AACA,MAAME,UAAU,GAAG,CAAAxB,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEyB,QAAb,MAA0B/B,SAAS,CAACgC,UAApC,IAAkD,CAAA1B,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEyB,QAAb,MAA0B/B,SAAS,CAACiC,SAAzG;AACA,MAAMC,iBAAiB,GACvBjC,KAAK,CAACkC,OAAN,CAAcC,YAAd,CAA2BZ,WAA3B,EAAwC,IAAxC,KACAA,WAAW,CAACa,IAAZ,CAAiB,UAACC,IAAD;AAAA,WAAU,CAACtC,SAAS,CAACuC,iBAAV,CAA4BC,WAA5B,EAAD,EAA4CC,QAA5C,CAAqDH,IAAI,CAACpB,IAAL,CAAUsB,WAAV,EAArD,CAAV;AAAA,GAAjB,CAFA;;AAZsH,8BAexFzC,oBAAoB,CAAC;AACjD2C,IAAAA,KAAK,EAAEzC,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,4BAAf,CAD0C;AAEjDC,IAAAA,QAAQ,EAAE5C,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,0BAAf;AAFuC,GAAD,CAfoE;AAAA,MAe9GE,iBAf8G,yBAe9GA,iBAf8G;;AAAA,kBAoB1EjE,QAAQ,CAACmB,SAAS,CAAC+C,iBAAX,CApBkE;AAAA;AAAA,MAoB/GC,cApB+G;AAAA,MAoB/FC,iBApB+F;;AAAA,mBAqBtEpE,QAAQ,CAAC,EAAD,CArB8D;AAAA;AAAA,MAqB/GqE,gBArB+G;AAAA,MAqB7FC,mBArB6F;;AAuBtH,MAAMC,0BAA0B,GAAGjE,MAAM,8BAAKmC,YAAL,sBAAsB4B,gBAAtB,IAAyC,YAAzC,CAAzC;AAEA,MAAMG,oBAAoB,GAAGpD,KAAK,CAACkC,OAAN,CAAcC,YAAd,CAA2Bf,eAA3B,EAA4C,IAA5C,CAA7B;AAGA;AACF;;AACEzC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAGsD,iBAAiB,KAAIT,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAE6B,MAAlB,CAApB,EAA6C;AAC3C,UAAMC,aAAa,GAAG9B,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAE+B,GAAd,CAAkB,UAACC,CAAD,EAAO;AAC7C,eAAO;AACLC,UAAAA,UAAU,EAAED,CAAC,CAACC,UADT;AAELC,UAAAA,WAAW,EAAElD,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEmD,OAFpB;AAGLC,UAAAA,WAAW,EAAE7D,SAAS,CAAC8D;AAHlB,SAAP;AAKD,OANqB,CAAtB;AAOA3C,MAAAA,QAAQ,CAACrB,wBAAwB,CAACyD,aAAD,CAAzB,CAAR;AACD;AACF,GAXQ,EAWP,CAACrB,iBAAD,EAAoBT,YAApB,EAAkChB,UAAlC,aAAkCA,UAAlC,uBAAkCA,UAAU,CAAEmD,OAA9C,CAXO,CAAT,CA9BsH,CAyCzD;;AAG7D,MAAMG,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,EAAD,EAAQ;AAChC,QAAIA,EAAJ,EAAQ;AACN7C,MAAAA,QAAQ,CAACxB,qBAAqB,CAAC;AAAEgE,QAAAA,WAAW,EAAEK,EAAf;AAAmBH,QAAAA,WAAW,EAAE7D,SAAS,CAAC8D;AAA1C,OAAD,CAAtB,CAAR;AACD;AACF,GAJD;;AAMAlF,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACyE,oBAAL,EAA2B;AACzBlC,MAAAA,QAAQ,CAAC3B,sBAAsB,EAAvB,CAAR;AACD,KAHa,CAKd;;;AACAuE,IAAAA,iBAAiB,CAACtD,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEmD,OAAb,CAAjB;AACD,GAPQ,EAON,EAPM,CAAT,CAlDsH,CAyD9G;;AAERhF,EAAAA,SAAS,CAAC,YAAM;AACdmF,IAAAA,iBAAiB,CAACtD,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEmD,OAAb,CAAjB;AACD,GAFQ,EAEN,CAACnD,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEmD,OAAb,CAFM,CAAT,CA3DsH,CA6D3F;;AAE3B,MAAMK,SAAS,GAAG,SAAZA,SAAY,CAACC,OAAD,EAAa;AAC7B,QAAIjE,KAAK,CAACkC,OAAN,CAAcgC,UAAd,CAAyBD,OAAzB,CAAJ,EAAuC;AACrCA,MAAAA,OAAO,CAACjE,KAAK,CAACmE,IAAN,CAAWC,gBAAX,CAA4BC,MAA5B,CAAD,EAAsC;AAAEC,QAAAA,SAAS,EAAE;AAAb,OAAtC,CAAP;AACD;AACF,GAJD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACN,OAAD,EAAa;AAChC,QAAIxD,WAAJ,EAAiB;AACfoC,MAAAA,iBAAiB,CAAC;AAAA,eAAMmB,SAAS,CAACC,OAAD,CAAf;AAAA,OAAD,CAAjB;AACD,KAFD,MAEO;AACLD,MAAAA,SAAS,CAACC,OAAD,CAAT;AACD;AACF,GAND;;AAQA,MAAMO,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChCzB,IAAAA,iBAAiB,CAACyB,OAAD,CAAjB,CADgC,CAGhC;;AACA,QAAIA,OAAO,KAAK1E,SAAS,CAAC+C,iBAA1B,EAA6C;AAC3C,UAAItC,UAAJ,aAAIA,UAAJ,uBAAIA,UAAU,CAAEmD,OAAhB,EAAyB;AACvBzC,QAAAA,QAAQ,CAACxB,qBAAqB,CAAC;AAAEgE,UAAAA,WAAW,EAAElD,UAAU,CAACmD,OAA1B;AAAmCC,UAAAA,WAAW,EAAE7D,SAAS,CAAC8D;AAA1D,SAAD,CAAtB,CAAR;AACD;AACF;AACF,GATD;;AAWA,MAAMa,eAAe,GAAG,SAAlBA,eAAkB,CAACC,KAAD,EAAW;AACjCzB,IAAAA,mBAAmB,CAAChE,MAAM,8BAAK+D,gBAAL,sBAA0B0B,KAA1B,IAAkC,YAAlC,CAAP,CAAnB;AACD,GAFD;;AAIA,MAAMN,MAAM,IACV;AACEpD,IAAAA,IAAI,EAAE,aADR;AAEE2D,IAAAA,IAAI,EAAE,UAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,UAAU,EAAE7F,GAAG,CAACyD,MAAJ,GACTqC,GADS,CACL,CADK,EACF/E,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,uBAAf,CADE,EAETqC,GAFS,CAEL,IAFK,EAEChF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAFD,EAGTsC,QAHS,CAGAjF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAHA,CAJd;AAQEuC,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,mCAAf,CART;AASEwC,IAAAA,SAAS,EAAE,IATb;AAUEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,UAAU,EAAE;AACVC,QAAAA,SAAS,EAAE,IADD;AAEVtE,QAAAA,OAAO,EAAE;AACPuE,UAAAA,IAAI,EAAEvE,OAAO,CAACwE;AADP;AAFC,OADK;AAOjBC,MAAAA,SAAS,EAAE,IAPM;AAQjBC,MAAAA,IAAI,EAAE,CARW;AASjBC,MAAAA,OAAO,EAAE,EATQ;AAUjBC,MAAAA,QAAQ,EAAE/D;AAVO;AAVrB,GADU,4BAwBNrB,UAAU,CAACqF,OAAX,KAAuB9F,SAAS,CAAC+F,cAAjC,GACA,CACE;AACE7E,IAAAA,IAAI,EAAE,wBADR;AAEE2D,IAAAA,IAAI,EAAE,UAFR;AAGEM,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,mCAAf,CAHT;AAIEkC,IAAAA,KAAK,EAAErE,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEuF,WAJrB;AAKEX,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADK;AAEjBG,MAAAA,SAAS,EAAE,IAFM;AAGjBO,MAAAA,OAAO,EAAE,CAHQ;AAIjBC,MAAAA,OAAO,EAAE,EAJQ;AAKjBC,MAAAA,QAAQ,EAAE,IALO;AAMjBN,MAAAA,QAAQ,EAAE;AANO,KALrB;AAaEd,IAAAA,UAAU,EAAE7F,GAAG,CAACyD,MAAJ,GAAaqC,GAAb,CAAiB,CAAjB,EAAoB/E,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAApB,EAA6DqC,GAA7D,CAAiE,IAAjE,EAAuEhF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAAvE;AAbd,GADF,CADA,GAkBA,EA1CM,EAAZ;AA6CA,MAAMwD,OAAO,GAAG,CACd;AACElF,IAAAA,IAAI,EAAE,QADR;AAEEiE,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEyD,IAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,aAAW9B,YAAY,CAAC8B,KAAD,CAAvB;AAAA;AAHX,GADc,EAMd;AACEpF,IAAAA,IAAI,EAAE,QADR;AAEEiE,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAFT;AAGEyD,IAAAA,OAAO,EAAE,iBAACC,KAAD;AAAA,aAAW,UAACC,MAAD,EAAY;AAC9B,YAAIA,MAAJ,EAAY;AAAA;;AACV,cAAMC,WAAW,GAAG;AAClBC,YAAAA,UAAU,EAAEhG,UAAF,aAAEA,UAAF,gDAAEA,UAAU,CAAEiG,cAAd,0DAAE,sBAA4BlE,WAA5B,EADM;AAElBmE,YAAAA,SAAS,EAAElG,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEmG,MAFL;AAGlBC,YAAAA,cAAc,EAAEpG,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEqG,MAHV;AAIlBC,YAAAA,KAAK,EAAER,MAAF,aAAEA,MAAF,uBAAEA,MAAM,CAAES,WAJG;AAKlBC,YAAAA,IAAI,EAAExG,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEwG,IALA;AAMlBC,YAAAA,oBAAoB,EAAEzG,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAEmB,SANhB;AAOlB8B,YAAAA,UAAU,EAAER,gBAAF,aAAEA,gBAAF,uBAAEA,gBAAgB,CAAEM,GAAlB,CAAsB,UAAC2D,GAAD;AAAA,qBAASA,GAAG,CAACzD,UAAb;AAAA,aAAtB;AAPM,WAApB;AAUA7C,UAAAA,QAAQ,CAACE,cAAT,CAAwB,KAAxB;AAEAI,UAAAA,QAAQ,CAAC7B,2BAA2B,CAACkH,WAAD,CAA5B,CAAR,CAAmDY,IAAnD,CAAwD,UAACC,QAAD,EAAc;AACpE;AACA,gBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqBtH,SAAS,CAACuH,eAAnC,EAAoD;AAClDjB,cAAAA,KAAK;AACLlF,cAAAA,OAAO,CAACoG,IAAR,WAAgBtH,MAAM,CAACuH,MAAP,CAAcC,iBAAd,CAAgClC,IAAhD;AACD;AACF,WAND;AAOD;AACF,OAtBQ;AAAA;AAHX,GANc,CAAhB;AAmCA,MAAMmC,WAAW,GAAG;AAClBC,IAAAA,OAAO,EAAE5H,SAAS,CAAC6H,gBADD;AAElBlE,IAAAA,WAAW,EAAElD,UAAF,aAAEA,UAAF,6CAAEA,UAAU,CAAEqG,MAAd,uDAAE,mBAAoBgB,QAApB,EAFK;AAGlBC,IAAAA,QAAQ,EAAEzH,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE0H,YAAf,0DAAE,sBAA2BC;AAHnB,GAApB;AAMA,MAAMC,YAAY,GAAG;AACnBN,IAAAA,OAAO,EAAE5H,SAAS,CAAC8D,eADA;AAEnBH,IAAAA,WAAW,EAAElD,UAAF,aAAEA,UAAF,8CAAEA,UAAU,CAAEmD,OAAd,wDAAE,oBAAqBkE,QAArB,EAFM;AAGnBK,IAAAA,MAAM,EAAE;AAHW,GAArB;AAMA,MAAMC,IAAI,GAAG,CACX;AACEtD,IAAAA,KAAK,EAAE9E,SAAS,CAAC+C,iBADnB;AAEEoC,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,gCAAf;AAFT,GADW,EAKX;AACEkC,IAAAA,KAAK,EAAE9E,SAAS,CAACqI,mBADnB;AAEElD,IAAAA,KAAK,EAAElF,KAAK,CAAC0C,MAAN,CAAaC,CAAb,CAAe,yBAAf,CAFT;AAGEiD,IAAAA,QAAQ,EAAE,CAACjF;AAHb,GALW,CAAb,CAxLsH,CAoMtH;;AACA,MAAI,EAACH,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAEmG,MAAb,CAAJ,EAAyB;AACvB,WAAO,IAAP;AACD;;AAED,sBACE,QAAC,mCAAD;AACE,IAAA,MAAM,EAAEtC,MADV;AAEE,IAAA,OAAO,EAAE8B,OAFX;AAGE,IAAA,WAAW,EAAE9F,WAHf;AAIE,IAAA,UAAU,EAAEG,UAJd;AAKE,IAAA,aAAa,EAAEiB,aALjB;AAME,IAAA,WAAW,EAAEiG,WANf;AAOE,IAAA,YAAY,EAAEO,YAPhB;AAQE,IAAA,OAAO,EAAEE,IARX;AASE,IAAA,SAAS,EAAEhF,0BATb;AAUE,IAAA,cAAc,EAAEJ,cAVlB;AAWE,IAAA,WAAW,EAAEtC,WAXf;AAYE,IAAA,QAAQ,kCAAOG,QAAP;AAAiB4D,MAAAA,YAAY,EAAZA,YAAjB;AAA+BE,MAAAA,eAAe,EAAfA;AAA/B;AAZV;AAAA;AAAA;AAAA;AAAA,UADF;AAgBD;;GAzNuBvE,+B;UAELtB,W,EACDE,U,EAEQD,W,EACHA,W,EACFA,W,EACCA,W,EACCA,W,EAMSgB,oB;;;KAfRK,+B;AAAAA,+B","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCaseRfiRespond.styles';\r\nimport PremiumProcessingCaseRfiRespondView from './PremiumProcessingCaseRfiRespond.view';\r\nimport {\r\n  premiumProcessingRespondRFI,\r\n  selectAssignedToUsers,\r\n  getAssignedToUsersList,\r\n  selectorDmsViewFiles,\r\n  selectRefDataQueryCodes,\r\n  getViewTableDocuments,\r\n  getDmsFilesUploaded,\r\n  selectUserRole,\r\n  linkMultipleDmsDocuments\r\n} from 'stores';\r\nimport { useConfirmNavigation } from 'hooks';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPremiumProcessingCaseRfiRespond.propTypes = {\r\n  caseDetails: PropTypes.object.isRequired,\r\n  rfiDetails: PropTypes.object.isRequired,\r\n  isPageDirty: PropTypes.bool.isRequired,\r\n  isWorklist: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    setIsPageDirty: PropTypes.func.isRequired,\r\n  }),\r\n};\r\nexport default function PremiumProcessingCaseRfiRespond({ caseDetails, rfiDetails, isPageDirty, isWorklist, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseRfiRespond' })();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const selectAssignees = useSelector(selectAssignedToUsers);\r\n  const dmsViewFiles = useSelector(selectorDmsViewFiles);\r\n  const queryCodes = useSelector(selectRefDataQueryCodes);\r\n  const currentUser = useSelector(selectUserRole);\r\n  const uploadedFile = useSelector(getDmsFilesUploaded);\r\n  const queryCodesRfi = queryCodes.find((queryCode) => queryCode?.queryCodeDetails === rfiDetails?.queryCode);\r\n  const tabDetails = caseDetails?.taskView === constants.WORKBASKET || caseDetails?.taskView === constants.ALL_CASES;\r\n  const isFrontEndContact =\r\n  utils.generic.isValidArray(currentUser, true) &&\r\n  currentUser.some((item) => [constants.FRONT_END_CONTACT.toLowerCase()].includes(item.name.toLowerCase()));\r\n  const { confirmNavigation } = useConfirmNavigation({\r\n    title: utils.string.t('navigation.form.titleClear'),\r\n    subtitle: utils.string.t('navigation.form.subtitle'),\r\n  });\r\n\r\n  const [selectedDmsTab, setSelectedDmsTab] = useState(constants.DMS_VIEW_TAB_VIEW);\r\n  const [selectedDmsFiles, setSelectedDmsFiles] = useState([]);\r\n\r\n  const dmsLinkedUploadedFilesList = uniqBy([...dmsViewFiles, ...selectedDmsFiles], 'documentId');\r\n\r\n  const isAssignedToUserList = utils.generic.isValidArray(selectAssignees, true);\r\n\r\n  \r\n  /* this api is used to link the attachment uploaded in FEC because api team is not linking the record\r\n   internally so added this code to link the record after the upload is successfully */   \r\n  useEffect(() => {\r\n    if(isFrontEndContact && uploadedFile?.length){\r\n      const uploadedFiles = uploadedFile?.map((d) => {\r\n        return {\r\n          documentId: d.documentId,\r\n          referenceId: rfiDetails?.queryId,\r\n          sectionType: constants.DMS_CONTEXT_RFI,\r\n        };\r\n      });\r\n      dispatch(linkMultipleDmsDocuments(uploadedFiles));\r\n    }\r\n  },[isFrontEndContact, uploadedFile, rfiDetails?.queryId]);   // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n  const fetchDmsDocuments = (id) => {\r\n    if (id) {\r\n      dispatch(getViewTableDocuments({ referenceId: id, sectionType: constants.DMS_CONTEXT_RFI }));\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!isAssignedToUserList) {\r\n      dispatch(getAssignedToUsersList());\r\n    }\r\n\r\n    // fetch RFI documents\r\n    fetchDmsDocuments(rfiDetails?.queryId);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    fetchDmsDocuments(rfiDetails?.queryId);\r\n  }, [rfiDetails?.queryId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const resetForm = (resetFn) => {\r\n    if (utils.generic.isFunction(resetFn)) {\r\n      resetFn(utils.form.getInitialValues(fields), { keepDirty: false });\r\n    }\r\n  };\r\n\r\n  const handleCancel = (resetFn) => {\r\n    if (isPageDirty) {\r\n      confirmNavigation(() => resetForm(resetFn));\r\n    } else {\r\n      resetForm(resetFn);\r\n    }\r\n  };\r\n\r\n  const selectDmsTab = (tabName) => {\r\n    setSelectedDmsTab(tabName);\r\n\r\n    // fetch latest linked RFI documents\r\n    if (tabName === constants.DMS_VIEW_TAB_VIEW) {\r\n      if (rfiDetails?.queryId) {\r\n        dispatch(getViewTableDocuments({ referenceId: rfiDetails.queryId, sectionType: constants.DMS_CONTEXT_RFI }));\r\n      }\r\n    }\r\n  };\r\n\r\n  const onSelectDmsFile = (files) => {\r\n    setSelectedDmsFiles(uniqBy([...selectedDmsFiles, ...files], 'documentId'));\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'rfiResponse',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string()\r\n        .min(5, utils.string.t('validation.string.min'))\r\n        .max(4000, utils.string.t('validation.string.max'))\r\n        .required(utils.string.t('validation.required')),\r\n      label: utils.string.t('premiumProcessing.rfi.rfiResponse'),\r\n      fullWidth: true,\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 4000,\r\n          classes: {\r\n            root: classes.typeYourResponseTextWidth,\r\n          },\r\n        },\r\n        multiline: true,\r\n        rows: 5,\r\n        rowsMax: 10,\r\n        disabled: tabDetails,\r\n      },\r\n    },\r\n    ...(rfiDetails.rfiType === constants.BUREAU_RFITYPE\r\n      ? [\r\n          {\r\n            name: 'bureauQueryDescription',\r\n            type: 'textarea',\r\n            label: utils.string.t('premiumProcessing.rfi.bureauQuery'),\r\n            value: rfiDetails?.bureauQuery,\r\n            muiComponentProps: {\r\n              inputProps: { maxLength: 4000 },\r\n              multiline: true,\r\n              minRows: 5,\r\n              maxRows: 10,\r\n              readOnly: true,\r\n              disabled: true,\r\n            },\r\n            validation: Yup.string().min(5, utils.string.t('validation.string.min')).max(4000, utils.string.t('validation.string.max')),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: (reset) => handleCancel(reset),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('premiumProcessing.rfi.respondRfi'),\r\n      handler: (reset) => (values) => {\r\n        if (values) {\r\n          const rfiSendData = {\r\n            assignedTo: rfiDetails?.createdByEmail?.toLowerCase(),\r\n            bpmTaskID: rfiDetails?.taskId,\r\n            caseIncidentID: rfiDetails?.caseId,\r\n            notes: values?.rfiResponse,\r\n            team: rfiDetails?.team,\r\n            queryCodeDescription: rfiDetails?.queryCode,\r\n            documentId: selectedDmsFiles?.map((doc) => doc.documentId),\r\n          };\r\n\r\n          handlers.setIsPageDirty(false);\r\n\r\n          dispatch(premiumProcessingRespondRFI(rfiSendData)).then((response) => {\r\n            // success POST\r\n            if (response?.status === constants.API_RESPONSE_OK) {\r\n              reset();\r\n              history.push(`${config.routes.premiumProcessing.root}`);\r\n            }\r\n          });\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  const dmsObjTable = {\r\n    context: constants.DMS_CONTEXT_CASE,\r\n    referenceId: rfiDetails?.caseId?.toString(),\r\n    sourceId: caseDetails?.caseTeamData?.xbInstanceId,\r\n  };\r\n\r\n  const dmsObjSearch = {\r\n    context: constants.DMS_CONTEXT_RFI,\r\n    referenceId: rfiDetails?.queryId?.toString(),\r\n    source: '',\r\n  };\r\n\r\n  const tabs = [\r\n    {\r\n      value: constants.DMS_VIEW_TAB_VIEW,\r\n      label: utils.string.t('dms.wrapper.tabs.viewDocuments'),\r\n    },\r\n    {\r\n      value: constants.DMS_VIEW_TAB_SEARCH,\r\n      label: utils.string.t('dms.wrapper.tabs.search'),\r\n      disabled: !isWorklist,\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!rfiDetails?.taskId) {\r\n    return null;\r\n  }\r\n\r\n  return (\r\n    <PremiumProcessingCaseRfiRespondView\r\n      fields={fields}\r\n      actions={actions}\r\n      caseDetails={caseDetails}\r\n      rfiDetails={rfiDetails}\r\n      queryCodesRfi={queryCodesRfi}\r\n      dmsObjTable={dmsObjTable}\r\n      dmsObjSearch={dmsObjSearch}\r\n      dmsTabs={tabs}\r\n      documents={dmsLinkedUploadedFilesList}\r\n      selectedDmsTab={selectedDmsTab}\r\n      isPageDirty={isPageDirty}\r\n      handlers={{ ...handlers, selectDmsTab, onSelectDmsFile }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}