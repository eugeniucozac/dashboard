{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport chroma from 'chroma-js';\nimport get from 'lodash/get';\n\nvar styles = function styles(theme) {\n  var colorMap = {\n    \"new\": get(theme, 'palette.new.main'),\n    info: get(theme, 'palette.info.main'),\n    success: get(theme, 'palette.success.main'),\n    alert: get(theme, 'palette.alert.main'),\n    error: get(theme, 'palette.error.main'),\n    light: get(theme, 'palette.grey[400]'),\n    unknown: get(theme, 'palette.grey[500]'),\n    pink: '#ff8699'\n  };\n  return {\n    root: function root(props) {\n      return _objectSpread(_objectSpread({}, props.type && ['new', 'info', 'success', 'alert', 'error', 'light', 'unknown', 'pink'].includes(props.type) && _objectSpread(_objectSpread({\n        color: 'white',\n        backgroundColor: colorMap[props.type]\n      }, props.clickable && {\n        '&:hover': {\n          backgroundColor: chroma(colorMap[props.type]).alpha(0.8) + '!important'\n        }\n      }), {}, {\n        '& > svg': {\n          color: 'rgba(255, 255, 255, 0.7)',\n          '&:hover': {\n            color: 'rgba(255, 255, 255, 1)'\n          }\n        }\n      }, props.variant === 'outlined' && _objectSpread(_objectSpread({\n        color: chroma(colorMap[props.type]).darken(0.75),\n        border: \"1px solid \".concat(colorMap[props.type]),\n        backgroundColor: 'transparent'\n      }, props.clickable && {\n        '&:hover': {\n          backgroundColor: chroma(colorMap[props.type]).alpha(0.1) + '!important'\n        }\n      }), {}, {\n        '& > svg': {\n          color: colorMap[props.type] + '!important',\n          opacity: 0.7,\n          '&:hover': {\n            opacity: 1\n          }\n        }\n      }))), props.color === 'secondary' && props.variant !== 'outlined' && {\n        color: 'white',\n        '& > svg': {\n          color: 'rgba(255, 255, 255, 0.7)',\n          '&:hover': {\n            color: 'rgba(255, 255, 255, 1)'\n          }\n        }\n      });\n    }\n  };\n};\n\nexport default styles;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Chip/Chip.styles.js"],"names":["chroma","get","styles","theme","colorMap","info","success","alert","error","light","unknown","pink","root","props","type","includes","color","backgroundColor","clickable","alpha","variant","darken","border","opacity"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,WAAnB;AACA,OAAOC,GAAP,MAAgB,YAAhB;;AAEA,IAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,KAAD,EAAW;AACxB,MAAMC,QAAQ,GAAG;AACf,WAAKH,GAAG,CAACE,KAAD,EAAQ,kBAAR,CADO;AAEfE,IAAAA,IAAI,EAAEJ,GAAG,CAACE,KAAD,EAAQ,mBAAR,CAFM;AAGfG,IAAAA,OAAO,EAAEL,GAAG,CAACE,KAAD,EAAQ,sBAAR,CAHG;AAIfI,IAAAA,KAAK,EAAEN,GAAG,CAACE,KAAD,EAAQ,oBAAR,CAJK;AAKfK,IAAAA,KAAK,EAAEP,GAAG,CAACE,KAAD,EAAQ,oBAAR,CALK;AAMfM,IAAAA,KAAK,EAAER,GAAG,CAACE,KAAD,EAAQ,mBAAR,CANK;AAOfO,IAAAA,OAAO,EAAET,GAAG,CAACE,KAAD,EAAQ,mBAAR,CAPG;AAQfQ,IAAAA,IAAI,EAAE;AARS,GAAjB;AAWA,SAAO;AACLC,IAAAA,IAAI,EAAE,cAACC,KAAD;AAAA,6CACAA,KAAK,CAACC,IAAN,IACF,CAAC,KAAD,EAAQ,MAAR,EAAgB,SAAhB,EAA2B,OAA3B,EAAoC,OAApC,EAA6C,OAA7C,EAAsD,SAAtD,EAAiE,MAAjE,EAAyEC,QAAzE,CAAkFF,KAAK,CAACC,IAAxF,CADE;AAEAE,QAAAA,KAAK,EAAE,OAFP;AAGAC,QAAAA,eAAe,EAAEb,QAAQ,CAACS,KAAK,CAACC,IAAP;AAHzB,SAKID,KAAK,CAACK,SAAN,IAAmB;AACrB,mBAAW;AACTD,UAAAA,eAAe,EAAEjB,MAAM,CAACI,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAT,CAAN,CAA6BK,KAA7B,CAAmC,GAAnC,IAA0C;AADlD;AADU,OALvB;AAWA,mBAAW;AACTH,UAAAA,KAAK,EAAE,0BADE;AAGT,qBAAW;AACTA,YAAAA,KAAK,EAAE;AADE;AAHF;AAXX,SAmBIH,KAAK,CAACO,OAAN,KAAkB,UAAlB;AACFJ,QAAAA,KAAK,EAAEhB,MAAM,CAACI,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAT,CAAN,CAA6BO,MAA7B,CAAoC,IAApC,CADL;AAEFC,QAAAA,MAAM,sBAAelB,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAvB,CAFJ;AAGFG,QAAAA,eAAe,EAAE;AAHf,SAKEJ,KAAK,CAACK,SAAN,IAAmB;AACrB,mBAAW;AACTD,UAAAA,eAAe,EAAEjB,MAAM,CAACI,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAT,CAAN,CAA6BK,KAA7B,CAAmC,GAAnC,IAA0C;AADlD;AADU,OALrB;AAWF,mBAAW;AACTH,UAAAA,KAAK,EAAEZ,QAAQ,CAACS,KAAK,CAACC,IAAP,CAAR,GAAuB,YADrB;AAETS,UAAAA,OAAO,EAAE,GAFA;AAIT,qBAAW;AACTA,YAAAA,OAAO,EAAE;AADA;AAJF;AAXT,QAnBJ,CADA,GA0CAV,KAAK,CAACG,KAAN,KAAgB,WAAhB,IACFH,KAAK,CAACO,OAAN,KAAkB,UADhB,IAC8B;AAC9BJ,QAAAA,KAAK,EAAE,OADuB;AAG9B,mBAAW;AACTA,UAAAA,KAAK,EAAE,0BADE;AAGT,qBAAW;AACTA,YAAAA,KAAK,EAAE;AADE;AAHF;AAHmB,OA3C9B;AAAA;AADD,GAAP;AAyDD,CArED;;AAuEA,eAAed,MAAf","sourcesContent":["import chroma from 'chroma-js';\r\nimport get from 'lodash/get';\r\n\r\nconst styles = (theme) => {\r\n  const colorMap = {\r\n    new: get(theme, 'palette.new.main'),\r\n    info: get(theme, 'palette.info.main'),\r\n    success: get(theme, 'palette.success.main'),\r\n    alert: get(theme, 'palette.alert.main'),\r\n    error: get(theme, 'palette.error.main'),\r\n    light: get(theme, 'palette.grey[400]'),\r\n    unknown: get(theme, 'palette.grey[500]'),\r\n    pink: '#ff8699',\r\n  };\r\n\r\n  return {\r\n    root: (props) => ({\r\n      ...(props.type &&\r\n        ['new', 'info', 'success', 'alert', 'error', 'light', 'unknown', 'pink'].includes(props.type) && {\r\n          color: 'white',\r\n          backgroundColor: colorMap[props.type],\r\n\r\n          ...(props.clickable && {\r\n            '&:hover': {\r\n              backgroundColor: chroma(colorMap[props.type]).alpha(0.8) + '!important',\r\n            },\r\n          }),\r\n\r\n          '& > svg': {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n\r\n            '&:hover': {\r\n              color: 'rgba(255, 255, 255, 1)',\r\n            },\r\n          },\r\n\r\n          ...(props.variant === 'outlined' && {\r\n            color: chroma(colorMap[props.type]).darken(0.75),\r\n            border: `1px solid ${colorMap[props.type]}`,\r\n            backgroundColor: 'transparent',\r\n\r\n            ...(props.clickable && {\r\n              '&:hover': {\r\n                backgroundColor: chroma(colorMap[props.type]).alpha(0.1) + '!important',\r\n              },\r\n            }),\r\n\r\n            '& > svg': {\r\n              color: colorMap[props.type] + '!important',\r\n              opacity: 0.7,\r\n\r\n              '&:hover': {\r\n                opacity: 1,\r\n              },\r\n            },\r\n          }),\r\n        }),\r\n\r\n      ...(props.color === 'secondary' &&\r\n        props.variant !== 'outlined' && {\r\n          color: 'white',\r\n\r\n          '& > svg': {\r\n            color: 'rgba(255, 255, 255, 0.7)',\r\n\r\n            '&:hover': {\r\n              color: 'rgba(255, 255, 255, 1)',\r\n            },\r\n          },\r\n        }),\r\n    }),\r\n  };\r\n};\r\n\r\nexport default styles;\r\n"]},"metadata":{},"sourceType":"module"}