{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimsNewLoss\\\\ClaimsNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport moment from 'moment'; // app\n\nimport styles from './ClaimsNewLoss.styles';\nimport { HorizontalLinearStepper, Layout, SectionHeader, Translate, PreventNavigation } from 'components';\nimport { postLossInformation, selectLossId, postClaimDetailsInformation, selectClaimIdUnderProgress, addNewClaimUnderCurrentLoss, postEditClaimDetailsInformation, resetClaimData, postEditLossInformation, selectClaimIdFromGrid, getClaimantNames, getClaimBordereauPeriods, getSettlementCurrency, selectSettlementCurrency, selectBEAdjusterList, selectClaimsInformation, selectSelectedBEAdjusterList, selectReferralValues, selectReferralResponse, selectSectionEnabledUG, updateClaimantNamesSuccess, setBEAdjusterValue, selectClaimBordereauPeriods, selectClaimData } from 'stores';\nimport { ClaimsAcknowledgement, ClaimsEnterLossInformation, ClaimsPolicySearch, ClaimsPreviewInformation, EnterClaimInformation } from 'modules';\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport * as Yup from 'yup'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsNewLossView.propTypes = {\n  steps: PropTypes.array,\n  currentStep: PropTypes.number.isRequired,\n  claim: PropTypes.object.isRequired,\n  isNavigationAllowed: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinishNewLoss: PropTypes.func.isRequired,\n  handleSaveNewLoss: PropTypes.func.isRequired,\n  handleSaveNewClaim: PropTypes.func.isRequired\n};\nexport function ClaimsNewLossView(_ref) {\n  _s();\n\n  var _stepperLabel$find,\n      _interest$items,\n      _this = this;\n\n  var steps = _ref.steps,\n      currentStep = _ref.currentStep,\n      claim = _ref.claim,\n      isNavigationAllowed = _ref.isNavigationAllowed,\n      handleCancel = _ref.handleCancel,\n      handleSaveNewLoss = _ref.handleSaveNewLoss,\n      handleSaveNewClaim = _ref.handleSaveNewClaim,\n      handleFinishNewLoss = _ref.handleFinishNewLoss,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      allClaimDetails = _ref.allClaimDetails,\n      complexityValues = _ref.complexityValues,\n      lossQualifiers = _ref.lossQualifiers,\n      policySections = _ref.policySections,\n      policyInformation = _ref.policyInformation,\n      underWritingGroups = _ref.underWritingGroups,\n      claimPolicyInsures = _ref.claimPolicyInsures,\n      claimantNames = _ref.claimantNames,\n      interest = _ref.interest,\n      priorities = _ref.priorities,\n      claimPolicyClients = _ref.claimPolicyClients;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsNewLoss'\n  })();\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var claimData = useSelector(selectClaimIdUnderProgress);\n  var selectClaimID = get(claimData, 'claimID') || '';\n  var claimsInformation = useSelector(selectClaimIdFromGrid);\n  var editClaimId = get(claimsInformation, 'claimID') || '';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var _useState3 = useState(currentStep),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var isAllStepsCompleted = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length);\n  var lastStep = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length) - 1;\n  var stepperLabel = [{\n    id: 0,\n    label: utils.string.t('claims.stepperLabel.registerLoss')\n  }, {\n    id: 1,\n    label: utils.string.t('claims.stepperLabel.searchPolicy')\n  }, {\n    id: 2,\n    label: utils.string.t('claims.stepperLabel.enterClaimInformation')\n  }, {\n    id: 3,\n    label: utils.string.t('claims.stepperLabel.previewInfo')\n  }, {\n    id: 4,\n    label: utils.string.t('claims.stepperLabel.acknowledgement')\n  }];\n\n  var _useState5 = useState((_stepperLabel$find = stepperLabel.find(function (label) {\n    return label.id === 0;\n  })) === null || _stepperLabel$find === void 0 ? void 0 : _stepperLabel$find.label),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeStepperLabel = _useState6[0],\n      setActiveStepperLabel = _useState6[1];\n\n  var currencies = useSelector(selectSettlementCurrency);\n  currencies = currencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      name: \"\".concat(currency.id, \" - \").concat(currency.name)\n    });\n  });\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var allBEAdjusters = useSelector(selectBEAdjusterList);\n  var selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\n  var existingClaimInfo = useSelector(selectClaimsInformation);\n  var savedClaimInfo = useSelector(selectClaimIdUnderProgress);\n  var referralValues = useSelector(selectReferralValues);\n  var referralResponse = useSelector(selectReferralResponse);\n  var claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      resetKey = _useState8[0],\n      setResetKey = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uwResetKey = _useState10[0],\n      setUWResetKey = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isBordereauChecked = _useState12[0],\n      setBordereauChecked = _useState12[1];\n\n  var checkBordereauValue = function checkBordereauValue(claimBordereauPeriods) {\n    return claimBordereauPeriods.find(function (bp) {\n      return bp.name === (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod);\n    }) || null;\n  };\n\n  useEffect(function () {\n    var _stepperLabel$find2;\n\n    setActiveStepperLabel((_stepperLabel$find2 = stepperLabel.find(function (stepperLbl) {\n      return stepperLbl.id === activeStep;\n    })) === null || _stepperLabel$find2 === void 0 ? void 0 : _stepperLabel$find2.label);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    dispatch(getSettlementCurrency());\n    dispatch(getClaimBordereauPeriods());\n    setResetKey(new Date().getTime());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod) {\n      setBordereauChecked(true);\n    }\n\n    if ((policyData === null || policyData === void 0 ? void 0 : policyData.length) > 0) setUWResetKey(new Date().getTime());\n  }, [isSectionEnabled, existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isComplexFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isComplex) !== 0;\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  var existingClaimOrPolicyCurrency = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.settlementCurrencyCode) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.settlementCurrencyCode) || (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.originalCurrency);\n  var selectedCurrency = currencies.find(function (c) {\n    return c.id === existingClaimOrPolicyCurrency;\n  });\n  var lossQualifierValue = (lossQualifiers || []).find(function (l) {\n    var _l$id, _existingClaimInfo$lo, _savedClaimInfo$lossQ;\n\n    return ((_l$id = l.id) === null || _l$id === void 0 ? void 0 : _l$id.toString()) === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$lo = existingClaimInfo.lossQualifierID) === null || _existingClaimInfo$lo === void 0 ? void 0 : _existingClaimInfo$lo.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$lossQ = savedClaimInfo.lossQualifierID) === null || _savedClaimInfo$lossQ === void 0 ? void 0 : _savedClaimInfo$lossQ.toString()));\n  });\n  var complexityDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.complexityBasis) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.complexityBasis;\n  }));\n  var complexityValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.complexityValueID) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.complexityValueID;\n  }));\n  var referralDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralValue) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.referralValue;\n  }));\n  var referralValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralValueID) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.referralValueID;\n  }));\n  var referralDefaultResponse = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralResponseDescription) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    return item.description === existingClaimInfo.referralResponseDescription;\n  }));\n  var referralResponseData = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralResponseID) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    var _savedClaimInfo$refer;\n\n    return item.id === ((_savedClaimInfo$refer = savedClaimInfo.referralResponseID) === null || _savedClaimInfo$refer === void 0 ? void 0 : _savedClaimInfo$refer.toString());\n  }));\n  var sectionAllOption = (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType) === constants.CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: constants.CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyData = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n  var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n    return constants.CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n      return itr === item.name;\n    });\n  }).map(function (item) {\n    return item.id;\n  });\n  var hasClaimRef = Boolean(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReference) || Boolean(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReference);\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              utils.app.scrollTo(0, '#layout-main');\n\n              if (!(activeStep === 0)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return dispatch(!(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDetailID) ? postLossInformation(values) : postEditLossInformation(values));\n\n            case 4:\n              if (!(activeStep === 2 && !selectClaimID)) {\n                _context.next = 12;\n                break;\n              }\n\n              if (!editClaimId) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 8:\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return dispatch(postClaimDetailsInformation(values));\n\n            case 12:\n              if (!(activeStep === 2 && selectClaimID)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 15;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 15:\n              setActiveStep(function (prevActiveStep) {\n                return prevActiveStep + 1;\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNext(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    utils.app.scrollTo(0, '#layout-main');\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleFinish = function handleFinish() {\n    handleFinishNewLoss();\n  };\n\n  var handleAddNewClaimInLoss = function handleAddNewClaimInLoss() {\n    dispatch(addNewClaimUnderCurrentLoss());\n    setActiveStep(1);\n  };\n\n  var fields = [{\n    name: 'claimantName',\n    type: 'autocompletemui',\n    options: claimantNames || [],\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimantName) || (claimantNames === null || claimantNames === void 0 ? void 0 : claimantNames.length) === 1 ? claimantNames[0] : (claimantNames === null || claimantNames === void 0 ? void 0 : claimantNames.length) > 1 ? claimantNames[claimantNames.length - 1] : null,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 50\n      },\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params);\n\n        if (params.inputValue) {\n          filtered = [].concat(_toConsumableArray(filtered), [{\n            id: filtered.length + 1,\n            name: \"\".concat(utils.string.t('app.create'), \" - \").concat(params.inputValue)\n          }]);\n        }\n\n        return filtered;\n      }\n    },\n    callback: function callback(event, data) {\n      var hasCreateString = \"\".concat(utils.string.t('app.create'), \" - \");\n      var name = data === null || data === void 0 ? void 0 : data.name.replace(hasCreateString, '');\n      var alreadyExists = claimantNames.find(function (claim) {\n        return claim.name === name;\n      });\n\n      if ((data === null || data === void 0 ? void 0 : data.name.includes(hasCreateString)) && !alreadyExists) {\n        var newClaimantName = {\n          id: Object.keys(claimantNames).length,\n          name: name\n        };\n        dispatch(updateClaimantNamesSuccess(newClaimantName));\n      }\n    },\n    validation: Yup.object().nullable()\n  }, {\n    type: 'datepicker',\n    name: 'claimReceivedDate',\n    icon: 'TodayIcon',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReceivedDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReceivedDate) || utils.date.today(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'claimReceivedTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReceivedDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReceivedDate) || new Date(),\n        format: 'HH:mm'\n      }\n    })\n  }, {\n    name: 'settlementCurrencyCode',\n    type: 'autocompletemui',\n    options: currencies || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: selectedCurrency || null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.lossFromDate) || (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossFromDate) || null,\n    icon: 'TodayIcon',\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().required(utils.string.t('validation.required')).max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.lossToDate) || (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossToDate) || null,\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'lossQualifierID',\n    type: 'autocompletemui',\n    value: lossQualifierValue || null,\n    options: lossQualifiers || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'location',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.location) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.location) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.location) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.location) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(200).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'adjusterReference',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.adjusterReference) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.adjusterReference) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.adjusterReference) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.adjusterReference) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference'))\n  }, {\n    name: 'interest',\n    type: 'text',\n    defaultValue: interest.selectedInterest,\n    value: interest.selectedInterest,\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      },\n      disabled: true\n    },\n    validation: (interest === null || interest === void 0 ? void 0 : (_interest$items = interest.items) === null || _interest$items === void 0 ? void 0 : _interest$items.length) > 0 ? Yup.string().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }) : Yup.string()\n  }, {\n    name: 'complexity',\n    type: 'autocompletemui',\n    options: complexityValues || [],\n    value: complexityDefaultValue || complexityValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    muiComponentProps: {\n      disabled: isComplexFlag\n    },\n    validation: isComplexFlag ? Yup.object().nullable() : Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'referral',\n    type: 'autocompletemui',\n    options: referralValues || [],\n    value: referralDefaultValue || referralValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    validation: Yup.object().when('complexity', {\n      is: function is(val) {\n        var _complexityValues$fin;\n\n        return ((_complexityValues$fin = complexityValues.find(function (item) {\n          return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n        })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'rfiResponse',\n    type: 'autocompletemui',\n    options: referralResponse || [],\n    value: referralDefaultResponse || referralResponseData || null,\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().when('referral', {\n      is: function is(val) {\n        if (val !== null) {\n          var _referralValues$find;\n\n          var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n          var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n            return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n          })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n          var refResponseState = refValuesList.includes(getReferralValue);\n          return !refResponseState;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'fgunarrative',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.fgunarrative) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.fgunarrative) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.fgunarrative) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.fgunarrative) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(50).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'movementType',\n    type: 'toggle',\n    label: '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.movementType) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.movementType) || 'Advice',\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.advice'),\n      value: 'Advice'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.settlement'),\n      value: 'Settlement'\n    }]\n  }, {\n    name: 'order',\n    type: 'radio',\n    defaultValue: '100',\n    // defaultValue: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\n    // value: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n      value: '100'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.ourShare'),\n      value: '0'\n    }]\n  }, {\n    name: 'orderPercentage',\n    type: 'number',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.orderPercentage) || underWritingGroups.percentageOfSelected || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.orderPercentage) || '0',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.orderPercentage) || underWritingGroups.percentageOfSelected || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.orderPercentage) || '0',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      },\n      disabled: true\n    },\n    validation: Yup.number().min(0, utils.string.t('claims.typeOfSettlement.errorMin')).max(100, utils.string.t('claims.typeOfSettlement.error'))\n  }, {\n    name: 'adjuster',\n    type: 'radio',\n    defaultValue: !(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || !(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) ? 'beAdjuster' : 'nonBeAdjuster',\n    value: !(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || !(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) ? 'beAdjuster' : 'nonBeAdjuster',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiFormGroupProps: {\n      row: true,\n      nestedClasses: {\n        root: classes.adjusterRadioGroup\n      },\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\n      value: 'beAdjuster'\n    }, {\n      label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\n      value: 'nonBeAdjuster'\n    }]\n  }, {\n    name: 'beAdjuster',\n    type: 'autocompletemui',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.beAdjusterID) !== 0 ? allBEAdjusters.items.find(function (item) {\n      var _existingClaimInfo$be, _savedClaimInfo$beAdj;\n\n      return item.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$be = existingClaimInfo.beAdjusterID) === null || _existingClaimInfo$be === void 0 ? void 0 : _existingClaimInfo$be.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$beAdj = savedClaimInfo.beAdjusterID) === null || _savedClaimInfo$beAdj === void 0 ? void 0 : _savedClaimInfo$beAdj.toString()));\n    }) : selectedBeAdjuster || [],\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.beAdjusterID) !== 0 ? allBEAdjusters.items.find(function (item) {\n      var _existingClaimInfo$be2, _savedClaimInfo$beAdj2;\n\n      return item.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$be2 = existingClaimInfo.beAdjusterID) === null || _existingClaimInfo$be2 === void 0 ? void 0 : _existingClaimInfo$be2.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$beAdj2 = savedClaimInfo.beAdjusterID) === null || _savedClaimInfo$beAdj2 === void 0 ? void 0 : _savedClaimInfo$beAdj2.toString()));\n    }) : selectedBeAdjuster || [],\n    options: beAdjusterList || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    callback: function callback(event, data) {\n      dispatch(setBEAdjusterValue(data));\n    }\n  }, {\n    name: 'nonBeAdjuster',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster'))\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: (priorities === null || priorities === void 0 ? void 0 : priorities.length) ? priorities : [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.priorityDescription) && priorities.length > 0 ? priorities.find(function (p) {\n      return p.description === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.priorityDescription) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.priorityDescription));\n    }) : (priorities === null || priorities === void 0 ? void 0 : priorities.length) > 0 ? priorities.find(function (p) {\n      return p.description === 'Medium';\n    }) || null : null\n  }, {\n    name: 'insured',\n    type: 'autocompletemui',\n    options: claimPolicyInsures || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.insuredID) ? claimPolicyInsures.find(function (cp) {\n      var _existingClaimInfo$in, _savedClaimInfo$insur;\n\n      return cp.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$in = existingClaimInfo.insuredID) === null || _existingClaimInfo$in === void 0 ? void 0 : _existingClaimInfo$in.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$insur = savedClaimInfo.insuredID) === null || _savedClaimInfo$insur === void 0 ? void 0 : _savedClaimInfo$insur.toString()));\n    }) : (claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.length) === 1 ? claimPolicyInsures[0] : null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'client',\n    type: 'autocompletemui',\n    options: claimPolicyClients || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.clientID) ? claimPolicyClients.find(function (pc) {\n      var _existingClaimInfo$cl, _savedClaimInfo$clien;\n\n      return pc.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$cl = existingClaimInfo.clientID) === null || _existingClaimInfo$cl === void 0 ? void 0 : _existingClaimInfo$cl.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$clien = savedClaimInfo.clientID) === null || _savedClaimInfo$clien === void 0 ? void 0 : _savedClaimInfo$clien.toString()));\n    }) : (claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.length) === 1 ? claimPolicyClients[0] : null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }].concat(_toConsumableArray(isBordereauFlag ? [{\n    name: 'certificateNumber',\n    type: 'text',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateNumber) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateNumber) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateNumber) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().required(utils.string.t('validation.required')).max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    type: 'datepicker',\n    name: 'certificateInceptionDate',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateInceptionDate) || (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateInceptionDate) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateInceptionDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\n      return value && this.options.parent.certificateExpiryDate ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'certificateExpiryDate',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateExpiryDate) || (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateExpiryDate) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateExpiryDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\n      return value && this.options.parent.certificateInceptionDate ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'bordereauClaim',\n    type: 'checkbox',\n    defaultValue: Boolean(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod) || Boolean(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.bordereauPeriod),\n    muiComponentProps: {\n      onChange: function onChange(name, value) {\n        return setBordereauChecked(value);\n      }\n    }\n  }] : []), _toConsumableArray(isBordereauChecked ? [{\n    name: 'bordereauPeriod',\n    type: 'autocompletemui',\n    options: claimBordereauPeriods,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: checkBordereauValue(claimBordereauPeriods),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }] : []), _toConsumableArray(isSectionEnabled ? [{\n    name: 'ugSections',\n    type: 'autocompletemui',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.policySectionID) !== null ? policyData.find(function (policy) {\n      var _existingClaimInfo$po, _savedClaimInfo$polic;\n\n      return policy.id.toString() === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$po = existingClaimInfo.policySectionID) === null || _existingClaimInfo$po === void 0 ? void 0 : _existingClaimInfo$po.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$polic = savedClaimInfo.policySectionID) === null || _savedClaimInfo$polic === void 0 ? void 0 : _savedClaimInfo$polic.toString()));\n    }) : policyData[0],\n    options: policyData,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }] : []));\n\n  var stepContent = function stepContent(index) {\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_LOSS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 761,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ClaimsPolicySearch, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 776,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EnterClaimInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewClaim,\n          validation: validation,\n          setValidation: setValidation,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_CLAIM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 790,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(ClaimsPreviewInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 808,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {\n          claim: claim,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleFinish: handleFinish,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true,\n          handleClaim: handleAddNewClaimInLoss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 823,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 835,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"claims-register-new-loss\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: /*#__PURE__*/_jsxDEV(Translate, {\n            label: activeStepperLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 855,\n            columnNumber: 20\n          }, this),\n          icon: NoteAddIcon,\n          testid: \"claims-register-new-loss-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 854,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalLinearStepper, {\n          steps: steps,\n          stepContent: stepContent,\n          activeStep: activeStep,\n          setActiveStep: setActiveStep,\n          showStepConnector: true,\n          handleCancel: handleCancel,\n          handleSave: handleSaveNewLoss,\n          nestedClasses: {\n            stepper: classes.stepper\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 859,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 853,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 852,\n      columnNumber: 7\n    }, this), isNavigationAllowed && /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: true,\n      allowedUrls: isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss],\n      title: 'status.alert',\n      subtitle: '',\n      hint: 'navigation.title',\n      confirmLabel: 'form.options.yesNoNa.yes',\n      cancelLabel: 'form.options.yesNoNa.no',\n      maxWidth: 'xs',\n      onSubmitCallBack: function onSubmitCallBack() {\n        dispatch(resetClaimData());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 872,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClaimsNewLossView, \"10VvFuim/1mav9bU3zFMEGN3Uk4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimsNewLoss/ClaimsNewLoss.view.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","get","moment","styles","HorizontalLinearStepper","Layout","SectionHeader","Translate","PreventNavigation","postLossInformation","selectLossId","postClaimDetailsInformation","selectClaimIdUnderProgress","addNewClaimUnderCurrentLoss","postEditClaimDetailsInformation","resetClaimData","postEditLossInformation","selectClaimIdFromGrid","getClaimantNames","getClaimBordereauPeriods","getSettlementCurrency","selectSettlementCurrency","selectBEAdjusterList","selectClaimsInformation","selectSelectedBEAdjusterList","selectReferralValues","selectReferralResponse","selectSectionEnabledUG","updateClaimantNamesSuccess","setBEAdjusterValue","selectClaimBordereauPeriods","selectClaimData","ClaimsAcknowledgement","ClaimsEnterLossInformation","ClaimsPolicySearch","ClaimsPreviewInformation","EnterClaimInformation","config","utils","constants","Yup","makeStyles","NoteAddIcon","createFilterOptions","ClaimsNewLossView","propTypes","steps","array","currentStep","number","isRequired","claim","object","isNavigationAllowed","bool","handleCancel","func","handleFinishNewLoss","handleSaveNewLoss","handleSaveNewClaim","validation","setValidation","allClaimDetails","complexityValues","lossQualifiers","policySections","policyInformation","underWritingGroups","claimPolicyInsures","claimantNames","interest","priorities","claimPolicyClients","classes","name","dispatch","lossInformation","claimData","selectClaimID","claimsInformation","editClaimId","policyRef","setPolicyRef","activeStep","setActiveStep","isAllStepsCompleted","length","lastStep","stepperLabel","id","label","string","t","find","activeStepperLabel","setActiveStepperLabel","currencies","map","currency","isSectionEnabled","allBEAdjusters","selectedBeAdjuster","existingClaimInfo","savedClaimInfo","referralValues","referralResponse","claimBordereauPeriods","resetKey","setResetKey","uwResetKey","setUWResetKey","isBordereauChecked","setBordereauChecked","checkBordereauValue","bp","bordereauPeriod","stepperLbl","Date","getTime","policyData","isComplexFlag","isComplex","isBordereauFlag","isBordereau","existingClaimOrPolicyCurrency","settlementCurrencyCode","originalCurrency","selectedCurrency","c","lossQualifierValue","l","toString","lossQualifierID","complexityDefaultValue","complexityBasis","item","complexityRulesValue","complexityValue","complexityValueID","complexityRulesID","referralDefaultValue","referralValue","referralValueID","referralDefaultResponse","referralResponseDescription","description","referralResponseData","referralResponseID","sectionAllOption","policyType","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","generic","isValidArray","dateDisabledLossQualifiers","filter","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","itr","hasClaimRef","Boolean","claimReference","handleNext","values","app","scrollTo","lossDetailID","prevActiveStep","handleBack","handleFinish","handleAddNewClaimInLoss","fields","type","options","value","claimantName","optionsCreatable","optionKey","optionLabel","muiComponentProps","inputProps","maxLength","filterOptions","params","filtered","inputValue","callback","event","data","hasCreateString","replace","alreadyExists","includes","newClaimantName","Object","keys","nullable","icon","claimReceivedDate","date","today","fullWidth","max","outputFormat","format","required","lossFromDate","fromDate","muiPickerProps","minDate","maxDate","toDate","disableToolbar","clearable","variant","test","parent","isSameOrBefore","when","schema","is","val","then","transform","curr","orig","otherwise","lossToDate","isSameOrAfter","defaultValue","location","root","formInput","adjusterReference","selectedInterest","disabled","items","refValuesList","getReferralValue","refResponseState","fgunarrative","movementType","muiFormGroupProps","row","radioLabel","orderPercentage","percentageOfSelected","min","nonBEAdjusterName","nestedClasses","adjusterRadioGroup","beAdjusterID","beAdjusterList","priorityDescription","p","insuredID","cp","clientID","pc","certificateNumber","certificateInceptionDate","datepicker","certificateExpiryDate","onChange","policySectionID","policy","stepContent","index","DMS_CONTEXT_LOSS","DMS_CONTEXT_CLAIM","stepper","routes","claimsFNOL","newLoss"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './ClaimsNewLoss.styles';\r\nimport { HorizontalLinearStepper, Layout, SectionHeader, Translate, PreventNavigation } from 'components';\r\nimport {\r\n  postLossInformation,\r\n  selectLossId,\r\n  postClaimDetailsInformation,\r\n  selectClaimIdUnderProgress,\r\n  addNewClaimUnderCurrentLoss,\r\n  postEditClaimDetailsInformation,\r\n  resetClaimData,\r\n  postEditLossInformation,\r\n  selectClaimIdFromGrid,\r\n\r\n  getClaimantNames,\r\n  getClaimBordereauPeriods,\r\n  getSettlementCurrency,\r\n  selectSettlementCurrency,\r\n  selectBEAdjusterList,\r\n  selectClaimsInformation,\r\n  selectSelectedBEAdjusterList,\r\n  selectReferralValues,\r\n  selectReferralResponse,\r\n  selectSectionEnabledUG,\r\n  updateClaimantNamesSuccess,\r\n  setBEAdjusterValue,\r\n  selectClaimBordereauPeriods,\r\n  selectClaimData,\r\n} from 'stores';\r\nimport {\r\n  ClaimsAcknowledgement,\r\n  ClaimsEnterLossInformation,\r\n  ClaimsPolicySearch,\r\n  ClaimsPreviewInformation,\r\n  EnterClaimInformation,\r\n} from 'modules';\r\nimport config from 'config';\r\n\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nimport * as Yup from 'yup';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\n\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nClaimsNewLossView.propTypes = {\r\n  steps: PropTypes.array,\r\n  currentStep: PropTypes.number.isRequired,\r\n  claim: PropTypes.object.isRequired,\r\n  isNavigationAllowed: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinishNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsNewLossView({\r\n  steps,\r\n  currentStep,\r\n  claim,\r\n  isNavigationAllowed,\r\n  handleCancel,\r\n  handleSaveNewLoss,\r\n  handleSaveNewClaim,\r\n  handleFinishNewLoss,\r\n  validation,\r\n  setValidation,\r\n\r\n  allClaimDetails,\r\n  complexityValues,\r\n  lossQualifiers,\r\n  policySections,\r\n  policyInformation,\r\n  underWritingGroups,\r\n  claimPolicyInsures,\r\n  claimantNames,\r\n  interest,\r\n  priorities,\r\n  claimPolicyClients\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsNewLoss' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const claimData = useSelector(selectClaimIdUnderProgress);\r\n  const selectClaimID = get(claimData, 'claimID') || '';\r\n  const claimsInformation = useSelector(selectClaimIdFromGrid);\r\n  const editClaimId = get(claimsInformation, 'claimID') || '';\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(currentStep);\r\n  const isAllStepsCompleted = activeStep === steps?.length;\r\n  const lastStep = activeStep === steps?.length - 1;\r\n  const stepperLabel = [{ id: 0, label: utils.string.t('claims.stepperLabel.registerLoss') }, { id: 1, label: utils.string.t('claims.stepperLabel.searchPolicy') }, { id: 2, label: utils.string.t('claims.stepperLabel.enterClaimInformation') }, { id: 3, label: utils.string.t('claims.stepperLabel.previewInfo') }, { id: 4, label: utils.string.t('claims.stepperLabel.acknowledgement') }];\r\n  const [activeStepperLabel, setActiveStepperLabel] = useState(stepperLabel.find((label) => label.id === 0)?.label);\r\n\r\n  let currencies = useSelector(selectSettlementCurrency);\r\n  currencies = currencies.map((currency) => ({ ...currency, name: `${currency.id} - ${currency.name}` }));\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const allBEAdjusters = useSelector(selectBEAdjusterList);\r\n  const selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\r\n  const existingClaimInfo = useSelector(selectClaimsInformation);\r\n  const savedClaimInfo = useSelector(selectClaimIdUnderProgress);\r\n  const referralValues = useSelector(selectReferralValues);\r\n  const referralResponse = useSelector(selectReferralResponse);\r\n  const claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\r\n  const [resetKey, setResetKey] = useState();\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const [isBordereauChecked, setBordereauChecked] = useState(false);\r\n  const checkBordereauValue = (claimBordereauPeriods) =>\r\n  claimBordereauPeriods.find((bp) => bp.name === existingClaimInfo?.bordereauPeriod) || null;\r\n\r\n  useEffect(() => {\r\n    setActiveStepperLabel(stepperLabel.find((stepperLbl) => stepperLbl.id === activeStep)?.label)\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getSettlementCurrency());\r\n    dispatch(getClaimBordereauPeriods());\r\n    setResetKey(new Date().getTime());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    \r\n    if (existingClaimInfo?.bordereauPeriod) {\r\n      setBordereauChecked(true);\r\n    }\r\n    if (policyData?.length > 0) setUWResetKey(new Date().getTime());\r\n  }, [isSectionEnabled, existingClaimInfo?.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isComplexFlag = allClaimDetails?.isComplex !== 0;\r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n  const existingClaimOrPolicyCurrency =\r\n    existingClaimInfo?.settlementCurrencyCode || savedClaimInfo?.settlementCurrencyCode || policyInformation?.originalCurrency;\r\n  const selectedCurrency = currencies.find((c) => c.id === existingClaimOrPolicyCurrency);\r\n  const lossQualifierValue = (lossQualifiers || []).find(\r\n    (l) => l.id?.toString() === (existingClaimInfo?.lossQualifierID?.toString() || savedClaimInfo?.lossQualifierID?.toString())\r\n  );\r\n  const complexityDefaultValue =\r\n    existingClaimInfo?.complexityBasis && complexityValues?.find((item) => item.complexityRulesValue === existingClaimInfo.complexityBasis);\r\n\r\n  const complexityValue =\r\n    savedClaimInfo?.complexityValueID && complexityValues?.find((item) => item.complexityRulesID === savedClaimInfo.complexityValueID);\r\n\r\n  const referralDefaultValue =\r\n    existingClaimInfo?.referralValue && referralValues?.find((item) => item.complexityRulesValue === existingClaimInfo.referralValue);\r\n\r\n  const referralValue =\r\n    savedClaimInfo?.referralValueID && referralValues?.find((item) => item.complexityRulesID === savedClaimInfo.referralValueID);\r\n\r\n  const referralDefaultResponse =\r\n    existingClaimInfo?.referralResponseDescription &&\r\n    referralResponse?.find((item) => item.description === existingClaimInfo.referralResponseDescription);\r\n\r\n  const referralResponseData =\r\n    savedClaimInfo?.referralResponseID && referralResponse?.find((item) => item.id === savedClaimInfo.referralResponseID?.toString());\r\n\r\n  const sectionAllOption =\r\n    policyInformation?.policyType === constants.CLAIM_SECTION_ENABLED_UG[0]\r\n      ? []\r\n      : [{ id: constants.CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyData = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const dateDisabledLossQualifiers = lossQualifiers\r\n    .filter((item) => {\r\n      return constants.CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name);\r\n    })\r\n    .map((item) => item.id);\r\n\r\n  const hasClaimRef = Boolean(savedClaimInfo?.claimReference) || Boolean(existingClaimInfo?.claimReference);\r\n\r\n\r\n\r\n  const handleNext = async (values) => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    if (activeStep === 0) {\r\n      await dispatch(!lossInformation?.lossDetailID ? postLossInformation(values) : postEditLossInformation(values));\r\n    }\r\n    if (activeStep === 2 && !selectClaimID) {\r\n      if (editClaimId) {\r\n        await dispatch(postEditClaimDetailsInformation(values));\r\n      } else {\r\n        await dispatch(postClaimDetailsInformation(values));\r\n      }\r\n    }\r\n\r\n    if (activeStep === 2 && selectClaimID) {\r\n      await dispatch(postEditClaimDetailsInformation(values));\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    handleFinishNewLoss();\r\n  };\r\n\r\n  const handleAddNewClaimInLoss = () => {\r\n    dispatch(addNewClaimUnderCurrentLoss());\r\n    setActiveStep(1);\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'claimantName',\r\n      type: 'autocompletemui',\r\n      options: claimantNames || [],\r\n      value:\r\n        existingClaimInfo?.claimantName || claimantNames?.length === 1\r\n          ? claimantNames[0]\r\n          : claimantNames?.length > 1\r\n          ? claimantNames[claimantNames.length - 1]\r\n          : null,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 50,\r\n        },\r\n        filterOptions: (options, params) => {\r\n          let filtered = createFilterOptions()(options, params);\r\n          if (params.inputValue) {\r\n            filtered = [\r\n              ...filtered,\r\n              {\r\n                id: filtered.length + 1,\r\n                name: `${utils.string.t('app.create')} - ${params.inputValue}`,\r\n              },\r\n            ];\r\n          }\r\n          return filtered;\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        const hasCreateString = `${utils.string.t('app.create')} - `;\r\n        const name = data?.name.replace(hasCreateString, '');\r\n        const alreadyExists = claimantNames.find((claim) => claim.name === name);\r\n\r\n        if (data?.name.includes(hasCreateString) && !alreadyExists) {\r\n          const newClaimantName = { id: Object.keys(claimantNames).length, name };\r\n          dispatch(updateClaimantNamesSuccess(newClaimantName));\r\n        }\r\n      },\r\n      validation: Yup.object().nullable(),\r\n    },\r\n\r\n    {\r\n      type: 'datepicker',\r\n      name: 'claimReceivedDate',\r\n      icon: 'TodayIcon',\r\n      value: existingClaimInfo?.claimReceivedDate || savedClaimInfo?.claimReceivedDate || utils.date.today(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'claimReceivedTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', {\r\n        value: { date: existingClaimInfo?.claimReceivedDate || savedClaimInfo?.claimReceivedDate || new Date(), format: 'HH:mm' },\r\n      }),\r\n    },\r\n    {\r\n      name: 'settlementCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: currencies || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: selectedCurrency || null,\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      value: existingClaimInfo?.lossFromDate || lossInformation?.fromDate || savedClaimInfo?.lossFromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n          return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n        })\r\n        .when('$validation', (validation, schema) =>\r\n          validation\r\n            ? schema.when('lossQualifierID', {\r\n                is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n                then: Yup.date()\r\n                  .required(utils.string.t('validation.required'))\r\n                  .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n                  .nullable()\r\n                  .transform((curr, orig) => (orig === '' ? null : curr)),\r\n                otherwise: Yup.date().nullable(),\r\n              })\r\n            : Yup.date().nullable()\r\n        ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      value: existingClaimInfo?.lossToDate || lossInformation?.toDate || savedClaimInfo?.lossToDate || null,\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n          return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n        })\r\n        .when('$validation', (validation, schema) =>\r\n          validation\r\n            ? schema.when('lossQualifierID', {\r\n                is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n                then: Yup.date()\r\n                  .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n                  .nullable()\r\n                  .transform((curr, orig) => (orig === '' ? null : curr)),\r\n                otherwise: Yup.date().nullable(),\r\n              })\r\n            : Yup.date().nullable()\r\n        ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossQualifierID',\r\n      type: 'autocompletemui',\r\n      value: lossQualifierValue || null,\r\n      options: lossQualifiers || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'location',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.location || savedClaimInfo?.location || '',\r\n      value: existingClaimInfo?.location || savedClaimInfo?.location || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(200)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'adjusterReference',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.adjusterReference || savedClaimInfo?.adjusterReference || '',\r\n      value: existingClaimInfo?.adjusterReference || savedClaimInfo?.adjusterReference || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference')),\r\n    },\r\n    {\r\n      name: 'interest',\r\n      type: 'text',\r\n      defaultValue: interest.selectedInterest,\r\n      value: interest.selectedInterest,\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n        disabled: true,\r\n      },\r\n      validation:\r\n        interest?.items?.length > 0\r\n          ? Yup.string()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string()))\r\n          : Yup.string(),\r\n    },\r\n    {\r\n      name: 'complexity',\r\n      type: 'autocompletemui',\r\n      options: complexityValues || [],\r\n      value: complexityDefaultValue || complexityValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      muiComponentProps: {\r\n        disabled: isComplexFlag,\r\n      },\r\n      validation: isComplexFlag\r\n        ? Yup.object().nullable()\r\n        : Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'referral',\r\n      type: 'autocompletemui',\r\n      options: referralValues || [],\r\n      value: referralDefaultValue || referralValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      validation: Yup.object().when('complexity', {\r\n        is: (val) =>\r\n          complexityValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue === 'Referral Required',\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'rfiResponse',\r\n      type: 'autocompletemui',\r\n      options: referralResponse || [],\r\n      value: referralDefaultResponse || referralResponseData || null,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().when('referral', {\r\n        is: (val) => {\r\n          if (val !== null) {\r\n            const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n            const getReferralValue = referralValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue;\r\n            const refResponseState = refValuesList.includes(getReferralValue);\r\n            return !refResponseState;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'fgunarrative',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.fgunarrative || savedClaimInfo?.fgunarrative || '',\r\n      value: existingClaimInfo?.fgunarrative || savedClaimInfo?.fgunarrative || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(50)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'movementType',\r\n      type: 'toggle',\r\n      label: '',\r\n      value: existingClaimInfo?.movementType || savedClaimInfo?.movementType || 'Advice',\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.advice'),\r\n          value: 'Advice',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.settlement'),\r\n          value: 'Settlement',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'order',\r\n      type: 'radio',\r\n      defaultValue: '100',\r\n      // defaultValue: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\r\n      // value: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n          value: '100',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.ourShare'),\r\n          value: '0',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'orderPercentage',\r\n      type: 'number',\r\n      defaultValue: existingClaimInfo?.orderPercentage || underWritingGroups.percentageOfSelected || savedClaimInfo?.orderPercentage || '0',\r\n      value: existingClaimInfo?.orderPercentage || underWritingGroups.percentageOfSelected || savedClaimInfo?.orderPercentage || '0',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n        disabled: true,\r\n      },\r\n      validation: Yup.number()\r\n        .min(0, utils.string.t('claims.typeOfSettlement.errorMin'))\r\n        .max(100, utils.string.t('claims.typeOfSettlement.error')),\r\n    },\r\n    {\r\n      name: 'adjuster',\r\n      type: 'radio',\r\n      defaultValue: !existingClaimInfo?.nonBEAdjusterName || !savedClaimInfo?.nonBEAdjusterName ? 'beAdjuster' : 'nonBeAdjuster',\r\n      value: !existingClaimInfo?.nonBEAdjusterName || !savedClaimInfo?.nonBEAdjusterName ? 'beAdjuster' : 'nonBeAdjuster',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        nestedClasses: { root: classes.adjusterRadioGroup },\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n          value: 'beAdjuster',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\r\n          value: 'nonBeAdjuster',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'beAdjuster',\r\n      type: 'autocompletemui',\r\n      defaultValue:\r\n        existingClaimInfo?.beAdjusterID !== 0\r\n          ? allBEAdjusters.items.find(\r\n              (item) => item.id === (existingClaimInfo?.beAdjusterID?.toString() || savedClaimInfo?.beAdjusterID?.toString())\r\n            )\r\n          : selectedBeAdjuster || [],\r\n      value:\r\n        existingClaimInfo?.beAdjusterID !== 0\r\n          ? allBEAdjusters.items.find(\r\n              (item) => item.id === (existingClaimInfo?.beAdjusterID?.toString() || savedClaimInfo?.beAdjusterID?.toString())\r\n            )\r\n          : selectedBeAdjuster || [],\r\n      options: beAdjusterList || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      callback: (event, data) => {\r\n        dispatch(setBEAdjusterValue(data));\r\n      },\r\n    },\r\n    {\r\n      name: 'nonBeAdjuster',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.nonBEAdjusterName || savedClaimInfo?.nonBEAdjusterName || '',\r\n      value: existingClaimInfo?.nonBEAdjusterName || savedClaimInfo?.nonBEAdjusterName || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster')),\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities?.length ? priorities : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value:\r\n        existingClaimInfo?.priorityDescription && priorities.length > 0\r\n          ? priorities.find((p) => p.description === (existingClaimInfo?.priorityDescription || savedClaimInfo?.priorityDescription))\r\n          : priorities?.length > 0\r\n          ? priorities.find((p) => p.description === 'Medium') || null\r\n          : null,\r\n    },\r\n    {\r\n      name: 'insured',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyInsures || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: existingClaimInfo?.insuredID\r\n        ? claimPolicyInsures.find((cp) => cp.id === (existingClaimInfo?.insuredID?.toString() || savedClaimInfo?.insuredID?.toString()))\r\n        : claimPolicyInsures?.length === 1\r\n        ? claimPolicyInsures[0]\r\n        : null,\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'client',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyClients || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: existingClaimInfo?.clientID\r\n        ? claimPolicyClients.find((pc) => pc.id === (existingClaimInfo?.clientID?.toString() || savedClaimInfo?.clientID?.toString()))\r\n        : claimPolicyClients?.length === 1\r\n        ? claimPolicyClients[0]\r\n        : null,\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    ...(isBordereauFlag\r\n      ? [\r\n          {\r\n            name: 'certificateNumber',\r\n            type: 'text',\r\n            value: existingClaimInfo?.certificateNumber || savedClaimInfo?.certificateNumber || allClaimDetails?.certificateNumber || '',\r\n            muiComponentProps: {\r\n              classes: {\r\n                root: classes.formInput,\r\n              },\r\n            },\r\n            validation: Yup.string()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateInceptionDate',\r\n            value:\r\n              savedClaimInfo?.certificateInceptionDate ||\r\n              existingClaimInfo?.certificateInceptionDate ||\r\n              allClaimDetails?.certificateInceptionDate ||\r\n              null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\r\n                return value && this.options.parent.certificateExpiryDate\r\n                  ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateExpiryDate',\r\n            value:\r\n              savedClaimInfo?.certificateExpiryDate ||\r\n              existingClaimInfo?.certificateExpiryDate ||\r\n              allClaimDetails?.certificateExpiryDate ||\r\n              null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\r\n                return value && this.options.parent.certificateInceptionDate\r\n                  ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            name: 'bordereauClaim',\r\n            type: 'checkbox',\r\n            defaultValue: Boolean(existingClaimInfo?.bordereauPeriod) || Boolean(savedClaimInfo?.bordereauPeriod),\r\n            muiComponentProps: {\r\n              onChange: (name, value) => setBordereauChecked(value),\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isBordereauChecked\r\n      ? [\r\n          {\r\n            name: 'bordereauPeriod',\r\n            type: 'autocompletemui',\r\n            options: claimBordereauPeriods,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            value: checkBordereauValue(claimBordereauPeriods),\r\n            validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isSectionEnabled\r\n      ? [\r\n          {\r\n            name: 'ugSections',\r\n            type: 'autocompletemui',\r\n            value: savedClaimInfo?.policySectionID !== null\r\n                ? policyData.find(\r\n                    (policy) =>\r\n                      policy.id.toString() ===\r\n                      (existingClaimInfo?.policySectionID?.toString() || savedClaimInfo?.policySectionID?.toString())\r\n                  )\r\n                : policyData[0], \r\n            options: policyData,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            validation: Yup.object()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_LOSS}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <ClaimsPolicySearch\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <EnterClaimInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewClaim}\r\n            validation={validation}\r\n            setValidation={setValidation}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_CLAIM}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ClaimsPreviewInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <ClaimsAcknowledgement\r\n            claim={claim}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleFinish={handleFinish}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n            handleClaim={handleAddNewClaimInLoss}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout testid=\"claims-register-new-loss\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={<Translate label={activeStepperLabel} />}\r\n            icon={NoteAddIcon}\r\n            testid=\"claims-register-new-loss-header\"\r\n          />\r\n          <HorizontalLinearStepper\r\n            steps={steps}\r\n            stepContent={stepContent}\r\n            activeStep={activeStep}\r\n            setActiveStep={setActiveStep}\r\n            showStepConnector\r\n            handleCancel={handleCancel}\r\n            handleSave={handleSaveNewLoss}\r\n            nestedClasses={{ stepper: classes.stepper }}\r\n          />\r\n        </Layout>\r\n      </Layout>\r\n      {isNavigationAllowed && (\r\n        <PreventNavigation\r\n          dirty={true}\r\n          allowedUrls={isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss]}\r\n          title={'status.alert'}\r\n          subtitle={''}\r\n          hint={'navigation.title'}\r\n          confirmLabel={'form.options.yesNoNa.yes'}\r\n          cancelLabel={'form.options.yesNoNa.no'}\r\n          maxWidth={'xs'}\r\n          onSubmitCallBack={() => {\r\n            dispatch(resetClaimData());\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}