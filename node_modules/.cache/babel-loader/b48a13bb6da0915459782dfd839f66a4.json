{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TasksTab\\\\TasksTab.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './TasksTab.style';\nimport * as utils from 'utils';\nimport { TableActions, TableFilters, TableToolbar, FormLabel, FormRadio, FormAutocompleteMui } from 'components';\nimport { ClaimsTasksTabProcessing } from 'modules';\nimport { useMedia } from 'hooks'; //mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function TasksTabView(_ref) {\n  _s();\n\n  var isTaskTeam = _ref.isTaskTeam,\n      hasTasks = _ref.hasTasks,\n      fields = _ref.fields,\n      control = _ref.control,\n      taskTypeValue = _ref.taskTypeValue,\n      tasks = _ref.tasks,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      notificationRefId = _ref.notificationRefId,\n      resetKey = _ref.resetKey,\n      handlers = _ref.handlers,\n      isCheckSigningValue = _ref.isCheckSigningValue;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'TasksTab'\n  })({\n    isMobile: media.mobile\n  });\n  useEffect(function () {\n    if (taskTypeValue) {\n      handlers.setTaskType(taskTypeValue);\n    }\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"tasks-management\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: \"\".concat(utils.string.t('app.view'), \": \"),\n              align: \"left\",\n              nestedClasses: {\n                root: classes.viewLabel\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'taskType')), {}, {\n              control: control\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 49,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchBy: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.filterBox,\n          children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'searchType')), {}, {\n            control: control,\n            nestedClasses: {\n              root: classes.selectAutocomplete\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 15\n        }, this),\n        searchPlaceholder: utils.string.t('claims.TasksTabsearch'),\n        searchMinChars: 4,\n        nestedClasses: {\n          searchMaxWidth: classes.searchMaxWidth,\n          searchLeft: classes.searchLeft\n        },\n        columns: true,\n        filters: true,\n        isFetchingFilters: isFetchingFilters,\n        filtersArray: tableFilterFields,\n        clearFilterKey: resetKey,\n        handlers: {\n          onSearch: handlers.handleSearch,\n          onResetFilter: handlers.resetFilter,\n          onResetSearch: handlers.resetSearch,\n          onFilter: function onFilter(values) {\n            return handlers.handleSearchFilter(values);\n          },\n          onToggleColumn: handlers.toggleColumn\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(ClaimsTasksTabProcessing, {\n      isTaskTeam: isTaskTeam,\n      tasks: tasks,\n      cols: columnsArray,\n      columnProps: columnProps,\n      handleUpdateTaskPriority: handlers.handleUpdateTaskPriority,\n      sort: sort,\n      handleSort: handlers.handleSort,\n      handleChangePage: handlers.handleChangePage,\n      handleChangeRowsPerPage: handlers.handleChangeRowsPerPage,\n      refreshTasksGrid: handlers.refreshTasksGrid,\n      premiumProcessingSaveAssignee: handlers.premiumProcessingSaveAssignee\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 41,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TasksTabView, \"rTKsHdUmCB64sTLJxtpZgYCrA/w=\", false, function () {\n  return [useMedia];\n});\n\n_c = TasksTabView;\nTasksTabView.displayName = \"TasksTabView\";\nTasksTabView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TasksTabView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TasksTab\\\\TasksTab.view.js\"] = {\n    name: \"TasksTabView\",\n    docgenInfo: TasksTabView.__docgenInfo,\n    path: \"src\\\\modules\\\\TasksTab\\\\TasksTab.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TasksTab/TasksTab.view.js"],"names":["React","useEffect","PropTypes","styles","utils","TableActions","TableFilters","TableToolbar","FormLabel","FormRadio","FormAutocompleteMui","ClaimsTasksTabProcessing","useMedia","makeStyles","Box","Grid","TasksTabView","isTaskTeam","hasTasks","fields","control","taskTypeValue","tasks","sort","columnsArray","columnProps","tableFilterFields","isFetchingFilters","notificationRefId","resetKey","handlers","isCheckSigningValue","media","classes","name","isMobile","mobile","setTaskType","string","t","root","viewLabel","form","getFieldProps","filterBox","selectAutocomplete","searchMaxWidth","searchLeft","onSearch","handleSearch","onResetFilter","resetFilter","onResetSearch","resetSearch","onFilter","values","handleSearchFilter","onToggleColumn","toggleColumn","handleUpdateTaskPriority","handleSort","handleChangePage","handleChangeRowsPerPage","refreshTasksGrid","premiumProcessingSaveAssignee"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,kBAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,YAAvB,EAAqCC,YAArC,EAAmDC,SAAnD,EAA8DC,SAA9D,EAAyEC,mBAAzE,QAAqG,YAArG;AACA,SAASC,wBAAT,QAAyC,SAAzC;AACA,SAASC,QAAT,QAAyB,OAAzB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,mBAAtC;;AAEA,eAAe,SAASC,YAAT,OAgBZ;AAAA;;AAAA,MAfDC,UAeC,QAfDA,UAeC;AAAA,MAdDC,QAcC,QAdDA,QAcC;AAAA,MAbDC,MAaC,QAbDA,MAaC;AAAA,MAZDC,OAYC,QAZDA,OAYC;AAAA,MAXDC,aAWC,QAXDA,aAWC;AAAA,MAVDC,KAUC,QAVDA,KAUC;AAAA,MATDC,IASC,QATDA,IASC;AAAA,MARDC,YAQC,QARDA,YAQC;AAAA,MAPDC,WAOC,QAPDA,WAOC;AAAA,MANDC,iBAMC,QANDA,iBAMC;AAAA,MALDC,iBAKC,QALDA,iBAKC;AAAA,MAJDC,iBAIC,QAJDA,iBAIC;AAAA,MAHDC,QAGC,QAHDA,QAGC;AAAA,MAFDC,QAEC,QAFDA,QAEC;AAAA,MADDC,mBACC,QADDA,mBACC;AACD,MAAMC,KAAK,GAAGpB,QAAQ,EAAtB;AACA,MAAMqB,OAAO,GAAGpB,UAAU,CAACV,MAAD,EAAS;AAAE+B,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAAyC;AAAEC,IAAAA,QAAQ,EAAEH,KAAK,CAACI;AAAlB,GAAzC,CAAhB;AAEAnC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIoB,aAAJ,EAAmB;AACjBS,MAAAA,QAAQ,CAACO,WAAT,CAAqBhB,aAArB;AACD;AACF,GAJQ,EAIN,CAACA,aAAD,CAJM,CAAT,CAJC,CAQoB;;AAErB,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,mBAAY,kBAAxB;AAAA,4BACI,QAAC,YAAD;AAAA,8BACE,QAAC,YAAD;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,kCACE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,KAAK,YAAKjB,KAAK,CAACkC,MAAN,CAAaC,CAAb,CAAe,UAAf,CAAL,OAAhB;AAAqD,cAAA,KAAK,EAAC,MAA3D;AAAkE,cAAA,aAAa,EAAE;AAAEC,gBAAAA,IAAI,EAAEP,OAAO,CAACQ;AAAhB;AAAjF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBADF,eAIE,QAAC,IAAD;AAAM,YAAA,IAAI,MAAV;AAAA,mCACE,QAAC,SAAD,kCAAerC,KAAK,CAACsC,IAAN,CAAWC,aAAX,CAAyBxB,MAAzB,EAAiC,UAAjC,CAAf;AAA6D,cAAA,OAAO,EAAEC;AAAtE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAWE,QAAC,YAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,QAAQ,eACN,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEa,OAAO,CAACW,SAAxB;AAAA,iCACE,QAAC,mBAAD,kCACMxC,KAAK,CAACsC,IAAN,CAAWC,aAAX,CAAyBxB,MAAzB,EAAiC,YAAjC,CADN;AAEE,YAAA,OAAO,EAAEC,OAFX;AAGE,YAAA,aAAa,EAAE;AAAEoB,cAAAA,IAAI,EAAEP,OAAO,CAACY;AAAhB;AAHjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAHJ;AAWE,QAAA,iBAAiB,EAAEzC,KAAK,CAACkC,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAXrB;AAYE,QAAA,cAAc,EAAE,CAZlB;AAaE,QAAA,aAAa,EAAE;AAAEO,UAAAA,cAAc,EAAEb,OAAO,CAACa,cAA1B;AAA0CC,UAAAA,UAAU,EAAEd,OAAO,CAACc;AAA9D,SAbjB;AAcE,QAAA,OAAO,MAdT;AAeE,QAAA,OAAO,MAfT;AAgBE,QAAA,iBAAiB,EAAEpB,iBAhBrB;AAiBE,QAAA,YAAY,EAAED,iBAjBhB;AAkBE,QAAA,cAAc,EAAEG,QAlBlB;AAoBE,QAAA,QAAQ,EAAE;AACRmB,UAAAA,QAAQ,EAAElB,QAAQ,CAACmB,YADX;AAERC,UAAAA,aAAa,EAAEpB,QAAQ,CAACqB,WAFhB;AAGRC,UAAAA,aAAa,EAAEtB,QAAQ,CAACuB,WAHhB;AAIRC,UAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,mBAAYzB,QAAQ,CAAC0B,kBAAT,CAA4BD,MAA5B,CAAZ;AAAA,WAJF;AAKRE,UAAAA,cAAc,EAAE3B,QAAQ,CAAC4B;AALjB;AApBZ;AAAA;AAAA;AAAA;AAAA,cAXF;AAAA;AAAA;AAAA;AAAA;AAAA,YADJ,eAyCE,QAAC,wBAAD;AACE,MAAA,UAAU,EAAEzC,UADd;AAEE,MAAA,KAAK,EAAEK,KAFT;AAGE,MAAA,IAAI,EAAEE,YAHR;AAIE,MAAA,WAAW,EAAEC,WAJf;AAKE,MAAA,wBAAwB,EAAEK,QAAQ,CAAC6B,wBALrC;AAME,MAAA,IAAI,EAAEpC,IANR;AAOE,MAAA,UAAU,EAAEO,QAAQ,CAAC8B,UAPvB;AAQE,MAAA,gBAAgB,EAAE9B,QAAQ,CAAC+B,gBAR7B;AASE,MAAA,uBAAuB,EAAE/B,QAAQ,CAACgC,uBATpC;AAUE,MAAA,gBAAgB,EAAEhC,QAAQ,CAACiC,gBAV7B;AAWE,MAAA,6BAA6B,EAAEjC,QAAQ,CAACkC;AAX1C;AAAA;AAAA;AAAA;AAAA,YAzCF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAyDD;;GAnFuBhD,Y;UAiBRJ,Q;;;KAjBQI,Y;AAAAA,Y","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './TasksTab.style';\r\nimport * as utils from 'utils';\r\nimport { TableActions, TableFilters, TableToolbar, FormLabel, FormRadio, FormAutocompleteMui, } from 'components';\r\nimport { ClaimsTasksTabProcessing } from 'modules';\r\nimport { useMedia } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\n\r\nexport default function TasksTabView({\r\n  isTaskTeam,\r\n  hasTasks,\r\n  fields,\r\n  control,\r\n  taskTypeValue,\r\n  tasks,\r\n  sort,\r\n  columnsArray,\r\n  columnProps,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  notificationRefId,\r\n  resetKey,\r\n  handlers,\r\n  isCheckSigningValue,\r\n}) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'TasksTab' })({ isMobile: media.mobile });\r\n\r\n  useEffect(() => {\r\n    if (taskTypeValue) {\r\n      handlers.setTaskType(taskTypeValue);\r\n    }\r\n  }, [taskTypeValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n \r\n  return (\r\n    <Box mt={3} data-testid=\"tasks-management\">\r\n        <TableToolbar>\r\n          <TableActions>\r\n            <Grid container>\r\n              <Grid item>\r\n                <FormLabel label={`${utils.string.t('app.view')}: `} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormRadio {...utils.form.getFieldProps(fields, 'taskType')} control={control} />\r\n              </Grid>\r\n            </Grid>\r\n          </TableActions>\r\n          <TableFilters\r\n            search\r\n            searchBy={\r\n              <Box className={classes.filterBox}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'searchType')}\r\n                  control={control}\r\n                  nestedClasses={{ root: classes.selectAutocomplete }}\r\n                />\r\n              </Box>\r\n            }\r\n            searchPlaceholder={utils.string.t('claims.TasksTabsearch')}\r\n            searchMinChars={4}\r\n            nestedClasses={{ searchMaxWidth: classes.searchMaxWidth, searchLeft: classes.searchLeft }}\r\n            columns\r\n            filters\r\n            isFetchingFilters={isFetchingFilters}\r\n            filtersArray={tableFilterFields}\r\n            clearFilterKey={resetKey}\r\n\r\n            handlers={{\r\n              onSearch: handlers.handleSearch,\r\n              onResetFilter: handlers.resetFilter,\r\n              onResetSearch: handlers.resetSearch,\r\n              onFilter: (values) => handlers.handleSearchFilter(values),\r\n              onToggleColumn: handlers.toggleColumn,\r\n            }}\r\n          />\r\n        </TableToolbar>\r\n      <ClaimsTasksTabProcessing\r\n        isTaskTeam={isTaskTeam}\r\n        tasks={tasks}\r\n        cols={columnsArray}\r\n        columnProps={columnProps}\r\n        handleUpdateTaskPriority={handlers.handleUpdateTaskPriority}\r\n        sort={sort}\r\n        handleSort={handlers.handleSort}\r\n        handleChangePage={handlers.handleChangePage}\r\n        handleChangeRowsPerPage={handlers.handleChangeRowsPerPage}\r\n        refreshTasksGrid={handlers.refreshTasksGrid}\r\n        premiumProcessingSaveAssignee={handlers.premiumProcessingSaveAssignee}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}