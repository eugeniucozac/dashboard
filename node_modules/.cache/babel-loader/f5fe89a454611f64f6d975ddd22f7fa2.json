{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nimport types from './types';\nvar initialState = {\n  brand: '',\n  nav: {\n    expanded: false\n  },\n  sidebar: {\n    expanded: false\n  },\n  modal: [],\n  loader: {\n    queue: []\n  },\n  notification: {\n    queue: []\n  },\n  fullScreen: false,\n  serviceWorkerUpdated: false,\n  serviceWorkerRegistration: {},\n  files: [],\n  dmsContext: ''\n};\n\nvar uiReducers = function uiReducers() {\n  var _state$files, _state$files2;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NAV_EXPAND':\n      localStorage.setItem('edge-nav-expanded', 'true');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nav: _objectSpread(_objectSpread({}, state.nav), {}, {\n          expanded: true\n        })\n      });\n\n    case 'NAV_COLLAPSE':\n      localStorage.setItem('edge-nav-expanded', 'false');\n      return _objectSpread(_objectSpread({}, state), {}, {\n        nav: _objectSpread(_objectSpread({}, state.nav), {}, {\n          expanded: false\n        })\n      });\n\n    case 'SIDEBAR_EXPAND':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sidebar: _objectSpread(_objectSpread({}, state.sidebar), {}, {\n          expanded: true\n        })\n      });\n\n    case 'SIDEBAR_COLLAPSE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        sidebar: _objectSpread(_objectSpread({}, state.sidebar), {}, {\n          expanded: false\n        })\n      });\n\n    case 'LOADER_ADD':\n      var obj = typeof action.payload === 'string' || typeof action.payload === 'number' ? {\n        key: action.payload,\n        message: utils.string.t('app.loading')\n      } : action.payload;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loader: {\n          queue: [].concat(_toConsumableArray(get(state, 'loader.queue', [])), [obj])\n        }\n      });\n\n    case 'LOADER_REMOVE':\n      var indexToRemove = get(state, 'loader.queue', []).findIndex(function (item) {\n        return item.key === action.payload;\n      });\n      var loaderQueueRemove = get(state, 'loader.queue', []).filter(function (_, index) {\n        return index !== indexToRemove;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loader: {\n          queue: loaderQueueRemove\n        }\n      });\n\n    case types.MODAL_SHOW:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        modal: get(state, 'modal', []).concat([{\n          visible: true,\n          type: action.payload.component,\n          props: action.payload.props,\n          actions: action.payload.actions\n        }])\n      });\n\n    case types.MODAL_HIDE:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        modal: action.payload ? get(state, 'modal', []).filter(function (m) {\n          return m.type !== action.payload;\n        }) : []\n      });\n\n    case 'MODAL_FULLSCREEN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        fullScreen: !state.fullScreen\n      });\n\n    case 'NOTIFICATION_ADD':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notification: {\n          queue: [].concat(_toConsumableArray(get(state, 'notification.queue', [])), [action.payload])\n        }\n      });\n\n    case 'NOTIFICATION_HIDE':\n      var queueHide = get(state, 'notification.queue', []).map(function (item) {\n        if (item.key === action.payload) {\n          item.visible = false;\n        }\n\n        return item;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notification: {\n          queue: queueHide\n        }\n      });\n\n    case 'NOTIFICATION_REMOVE':\n      var queueRemove = get(state, 'notification.queue', []).filter(function (item) {\n        return item.key !== action.payload;\n      });\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notification: {\n          queue: queueRemove\n        }\n      });\n\n    case 'SW_UPDATE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        serviceWorkerUpdated: !state.serviceWorkerUpdated,\n        serviceWorkerRegistration: action.payload\n      });\n\n    case 'BRAND_SET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        brand: action.payload\n      });\n\n    case types.DMS_FILE_UPLOAD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        files: [].concat(_toConsumableArray(state.files), _toConsumableArray(action.payload))\n      });\n\n    case types.REMOVE_DMS_FILE_UPLOAD:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        files: _toConsumableArray((_state$files = state.files) === null || _state$files === void 0 ? void 0 : _state$files.filter(function (f) {\n          return f.name !== action.payload;\n        }))\n      });\n\n    case types.DMS_FILE_UPLOAD_RESET:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        files: []\n      });\n\n    case types.SET_DMS_CONTEXT:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dmsContext: action.payload\n      });\n\n    case 'RESET_DMS_FILES_UPLOADED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        files: [],\n        dmsContext: initialState.dmsContext\n      });\n\n    case types.UPDATE_FILE_NAME:\n      return _objectSpread(_objectSpread({}, state), {}, {\n        files: _toConsumableArray((_state$files2 = state.files) === null || _state$files2 === void 0 ? void 0 : _state$files2.map(function (f, i) {\n          return _objectSpread(_objectSpread({}, f), i === action.payload.fileIndex && _objectSpread(_objectSpread({}, f.file), {}, {\n            name: action.payload.fileName\n          }));\n        }))\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default uiReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/ui/ui.reducers.js"],"names":["utils","get","types","initialState","brand","nav","expanded","sidebar","modal","loader","queue","notification","fullScreen","serviceWorkerUpdated","serviceWorkerRegistration","files","dmsContext","uiReducers","state","action","type","localStorage","setItem","obj","payload","key","message","string","t","indexToRemove","findIndex","item","loaderQueueRemove","filter","_","index","MODAL_SHOW","concat","visible","component","props","actions","MODAL_HIDE","m","queueHide","map","queueRemove","DMS_FILE_UPLOAD","REMOVE_DMS_FILE_UPLOAD","f","name","DMS_FILE_UPLOAD_RESET","SET_DMS_CONTEXT","UPDATE_FILE_NAME","i","fileIndex","file","fileName"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport get from 'lodash/get';\r\nimport types from './types';\r\n\r\nconst initialState = {\r\n  brand: '',\r\n  nav: {\r\n    expanded: false,\r\n  },\r\n  sidebar: {\r\n    expanded: false,\r\n  },\r\n  modal: [],\r\n  loader: {\r\n    queue: [],\r\n  },\r\n  notification: {\r\n    queue: [],\r\n  },\r\n  fullScreen: false,\r\n  serviceWorkerUpdated: false,\r\n  serviceWorkerRegistration: {},\r\n  files: [],\r\n  dmsContext: '',\r\n};\r\n\r\nconst uiReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'NAV_EXPAND':\r\n      localStorage.setItem('edge-nav-expanded', 'true');\r\n\r\n      return {\r\n        ...state,\r\n        nav: {\r\n          ...state.nav,\r\n          expanded: true,\r\n        },\r\n      };\r\n\r\n    case 'NAV_COLLAPSE':\r\n      localStorage.setItem('edge-nav-expanded', 'false');\r\n\r\n      return {\r\n        ...state,\r\n        nav: {\r\n          ...state.nav,\r\n          expanded: false,\r\n        },\r\n      };\r\n\r\n    case 'SIDEBAR_EXPAND':\r\n      return {\r\n        ...state,\r\n        sidebar: {\r\n          ...state.sidebar,\r\n          expanded: true,\r\n        },\r\n      };\r\n\r\n    case 'SIDEBAR_COLLAPSE':\r\n      return {\r\n        ...state,\r\n        sidebar: {\r\n          ...state.sidebar,\r\n          expanded: false,\r\n        },\r\n      };\r\n\r\n    case 'LOADER_ADD':\r\n      const obj =\r\n        typeof action.payload === 'string' || typeof action.payload === 'number'\r\n          ? { key: action.payload, message: utils.string.t('app.loading') }\r\n          : action.payload;\r\n      return {\r\n        ...state,\r\n        loader: {\r\n          queue: [...get(state, 'loader.queue', []), obj],\r\n        },\r\n      };\r\n\r\n    case 'LOADER_REMOVE':\r\n      const indexToRemove = get(state, 'loader.queue', []).findIndex((item) => {\r\n        return item.key === action.payload;\r\n      });\r\n\r\n      const loaderQueueRemove = get(state, 'loader.queue', []).filter((_, index) => {\r\n        return index !== indexToRemove;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        loader: {\r\n          queue: loaderQueueRemove,\r\n        },\r\n      };\r\n\r\n    case types.MODAL_SHOW:\r\n      return {\r\n        ...state,\r\n        modal: get(state, 'modal', []).concat([\r\n          {\r\n            visible: true,\r\n            type: action.payload.component,\r\n            props: action.payload.props,\r\n            actions: action.payload.actions,\r\n          },\r\n        ]),\r\n      };\r\n\r\n    case types.MODAL_HIDE:\r\n      return {\r\n        ...state,\r\n        modal: action.payload ? get(state, 'modal', []).filter((m) => m.type !== action.payload) : [],\r\n      };\r\n    case 'MODAL_FULLSCREEN':\r\n      return {\r\n        ...state,\r\n        fullScreen: !state.fullScreen,\r\n      };\r\n    case 'NOTIFICATION_ADD':\r\n      return {\r\n        ...state,\r\n        notification: {\r\n          queue: [...get(state, 'notification.queue', []), action.payload],\r\n        },\r\n      };\r\n\r\n    case 'NOTIFICATION_HIDE':\r\n      const queueHide = get(state, 'notification.queue', []).map((item) => {\r\n        if (item.key === action.payload) {\r\n          item.visible = false;\r\n        }\r\n\r\n        return item;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        notification: {\r\n          queue: queueHide,\r\n        },\r\n      };\r\n\r\n    case 'NOTIFICATION_REMOVE':\r\n      const queueRemove = get(state, 'notification.queue', []).filter((item) => {\r\n        return item.key !== action.payload;\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        notification: {\r\n          queue: queueRemove,\r\n        },\r\n      };\r\n    case 'SW_UPDATE':\r\n      return {\r\n        ...state,\r\n        serviceWorkerUpdated: !state.serviceWorkerUpdated,\r\n        serviceWorkerRegistration: action.payload,\r\n      };\r\n    case 'BRAND_SET':\r\n      return {\r\n        ...state,\r\n        brand: action.payload,\r\n      };\r\n\r\n    case types.DMS_FILE_UPLOAD:\r\n      return {\r\n        ...state,\r\n        files: [...state.files, ...action.payload],\r\n      };\r\n\r\n    case types.REMOVE_DMS_FILE_UPLOAD:\r\n      return {\r\n        ...state,\r\n        files: [...state.files?.filter((f) => f.name !== action.payload)],\r\n      };\r\n\r\n    case types.DMS_FILE_UPLOAD_RESET:\r\n      return {\r\n        ...state,\r\n        files: [],\r\n      };\r\n\r\n    case types.SET_DMS_CONTEXT:\r\n      return {\r\n        ...state,\r\n        dmsContext: action.payload,\r\n      };\r\n\r\n    case 'RESET_DMS_FILES_UPLOADED':\r\n      return {\r\n        ...state,\r\n        files: [],\r\n        dmsContext: initialState.dmsContext,\r\n      };\r\n\r\n    case types.UPDATE_FILE_NAME:\r\n      return {\r\n        ...state,\r\n        files: [\r\n          ...state.files?.map((f, i) => ({ ...f, ...(i === action.payload.fileIndex && { ...f.file, name: action.payload.fileName }) })),\r\n        ],\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default uiReducers;\r\n"]},"metadata":{},"sourceType":"module"}