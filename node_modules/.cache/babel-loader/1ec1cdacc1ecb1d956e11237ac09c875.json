{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { addLoader, authLogout, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var deletePlacementLocations = function deletePlacementLocations() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.locations'\n    };\n    var placementId = get(getState(), 'placement.selected.id');\n    dispatch(deletePlacementLocationsRequest(placementId));\n    dispatch(addLoader('deletePlacementLocations'));\n\n    if (!placementId) {\n      dispatch(deletePlacementLocationsSuccess(defaultError));\n      dispatch(enqueueNotification('notification.deleteLocations.fail', 'error'));\n      dispatch(removeLoader('deletePlacementLocations'));\n      return;\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.location,\n      path: \"api/locations/\".concat(placementId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(deletePlacementLocationsSuccess(data));\n      dispatch(resetPlacementLocations());\n      dispatch(enqueueNotification('notification.deleteLocations.success', 'success'));\n      dispatch(removeLoader('deletePlacementLocations'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API delete error (placement.locations)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(deletePlacementLocationsFailure(err));\n      dispatch(enqueueNotification('notification.deleteLocations.fail', 'error'));\n      dispatch(removeLoader('deletePlacementLocations'));\n      return err;\n    });\n  };\n};\nexport var deletePlacementLocationsRequest = function deletePlacementLocationsRequest(placementId) {\n  return {\n    type: 'PLACEMENT_LOCATIONS_DELETE_REQUEST',\n    payload: placementId\n  };\n};\nexport var deletePlacementLocationsSuccess = function deletePlacementLocationsSuccess(data) {\n  return {\n    type: 'PLACEMENT_LOCATIONS_DELETE_SUCCESS',\n    payload: data\n  };\n};\nexport var deletePlacementLocationsFailure = function deletePlacementLocationsFailure(error) {\n  return {\n    type: 'PLACEMENT_LOCATIONS_DELETE_FAILURE',\n    payload: error\n  };\n};\nexport var resetPlacementLocations = function resetPlacementLocations() {\n  return {\n    type: 'PLACEMENT_LOCATIONS_RESET'\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.locations.js"],"names":["get","addLoader","authLogout","enqueueNotification","removeLoader","utils","deletePlacementLocations","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","placementId","deletePlacementLocationsRequest","deletePlacementLocationsSuccess","api","token","accessToken","location","path","then","response","handleResponse","json","handleData","data","resetPlacementLocations","err","errorParams","message","handleError","handleUnauthorized","deletePlacementLocationsFailure","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deletePlacementLocations = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.locations',\r\n  };\r\n\r\n  const placementId = get(getState(), 'placement.selected.id');\r\n\r\n  dispatch(deletePlacementLocationsRequest(placementId));\r\n  dispatch(addLoader('deletePlacementLocations'));\r\n\r\n  if (!placementId) {\r\n    dispatch(deletePlacementLocationsSuccess(defaultError));\r\n    dispatch(enqueueNotification('notification.deleteLocations.fail', 'error'));\r\n    dispatch(removeLoader('deletePlacementLocations'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.location,\r\n      path: `api/locations/${placementId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(deletePlacementLocationsSuccess(data));\r\n      dispatch(resetPlacementLocations());\r\n      dispatch(enqueueNotification('notification.deleteLocations.success', 'success'));\r\n      dispatch(removeLoader('deletePlacementLocations'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API delete error (placement.locations)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(deletePlacementLocationsFailure(err));\r\n      dispatch(enqueueNotification('notification.deleteLocations.fail', 'error'));\r\n      dispatch(removeLoader('deletePlacementLocations'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const deletePlacementLocationsRequest = (placementId) => {\r\n  return {\r\n    type: 'PLACEMENT_LOCATIONS_DELETE_REQUEST',\r\n    payload: placementId,\r\n  };\r\n};\r\n\r\nexport const deletePlacementLocationsSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_LOCATIONS_DELETE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const deletePlacementLocationsFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_LOCATIONS_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const resetPlacementLocations = () => {\r\n  return {\r\n    type: 'PLACEMENT_LOCATIONS_RESET',\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}