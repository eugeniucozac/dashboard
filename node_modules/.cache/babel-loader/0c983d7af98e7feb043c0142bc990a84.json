{"ast":null,"code":"// app\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nimport { getFacilitiesFailure } from 'stores';\nexport var getAllFacilities = function getAllFacilities() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getFacilities'\n    };\n    dispatch(getAllFacilitiesRequest());\n    var path = \"api/v1/facilities/all\";\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getAllFacilitiesSuccess(data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getFacilitiesFailure(err));\n      return err;\n    });\n  };\n};\nexport var getAllFacilitiesRequest = function getAllFacilitiesRequest() {\n  return {\n    type: 'RISK_ALL_FACILITIES_GET_REQUEST'\n  };\n};\nexport var getAllFacilitiesSuccess = function getAllFacilitiesSuccess(payload) {\n  return {\n    type: 'RISK_ALL_FACILITIES_GET_SUCCESS',\n    payload: {\n      content: payload\n    }\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getAllFacilities.js"],"names":["authLogout","utils","getFacilitiesFailure","getAllFacilities","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getAllFacilitiesRequest","path","api","get","token","accessToken","then","response","handleResponse","data","getAllFacilitiesSuccess","err","handleError","handleUnauthorized","type","payload","content"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,oBAAT,QAAqC,QAArC;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5D;AAD4D,oBAEDA,QAAQ,EAFP;AAAA,QAE5CC,IAF4C,aAEpDC,IAFoD,CAE5CD,IAF4C;AAAA,QAElBE,QAFkB,aAEpCC,MAFoC,CAE1BC,IAF0B,CAElBF,QAFkB;;AAI5D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,uBAAuB,EAAxB,CAAR;AAEA,QAAMC,IAAI,0BAAV;AAEA,WAAOb,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHQ,MAAAA,IAAI,EAAJA;AAHG,KADA,EAMJK,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACc,GAAN,CAAUM,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdlB,MAAAA,QAAQ,CAACmB,uBAAuB,CAACD,IAAD,CAAxB,CAAR;AACD,KATI,WAUE,UAACE,GAAD,EAAS;AACdvB,MAAAA,KAAK,CAACc,GAAN,CAAUU,WAAV,CAAsBD,GAAtB,EAA2Bb,YAA3B;AACAV,MAAAA,KAAK,CAACc,GAAN,CAAUW,kBAAV,CAA6BF,GAA7B,EAAkCpB,QAAlC,EAA4CJ,UAA5C;AACAI,MAAAA,QAAQ,CAACF,oBAAoB,CAACsB,GAAD,CAArB,CAAR;AACA,aAAOA,GAAP;AACD,KAfI,CAAP;AAgBD,GA5B+B;AAAA,CAAzB;AA8BP,OAAO,IAAMX,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3C,SAAO;AACLc,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMJ,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACK,OAAD,EAAa;AAClD,SAAO;AACLD,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAED;AADF;AAFJ,GAAP;AAMD,CAPM","sourcesContent":["// app\r\nimport { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { getFacilitiesFailure } from 'stores';\r\n\r\nexport const getAllFacilities = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getFacilities',\r\n  };\r\n\r\n  dispatch(getAllFacilitiesRequest());\r\n\r\n  const path = `api/v1/facilities/all`;\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getAllFacilitiesSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getFacilitiesFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getAllFacilitiesRequest = () => {\r\n  return {\r\n    type: 'RISK_ALL_FACILITIES_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getAllFacilitiesSuccess = (payload) => {\r\n  return {\r\n    type: 'RISK_ALL_FACILITIES_GET_SUCCESS',\r\n    payload: {\r\n      content: payload,\r\n    },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}