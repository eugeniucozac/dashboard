{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\CreateAdhocTask\\\\CreateAdhocTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport CreateAdhocTaskView from './CreateAdhocTask.view';\nimport { hideModal, resetClaimsAssignedToUsers, getPriorityLevels, getUsersByOrg, showModal, resetAdhocTaskStatus } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nCreateAdhocTaskView.propTypes = {\n  claim: PropTypes.object.isRequired\n};\nexport default function CreateAdhocTask(_ref) {\n  _s();\n\n  var claim = _ref.claim;\n  var stepFields = [{\n    id: 0,\n    form: utils.string.t('claims.processing.adHocTask.adHocDetails'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }, {\n    id: 1,\n    form: utils.string.t('claims.processing.adHocTask.uploadDocuments'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }, {\n    id: 2,\n    form: utils.string.t('claims.processing.adHocTask.confirmTask'),\n    formEditedStatus: false,\n    isSubmitted: false\n  }];\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeStep = _useState2[0],\n      setActiveStep = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      progress = _useState4[0],\n      setProgress = _useState4[1];\n\n  var _useState5 = useState(stepFields),\n      _useState6 = _slicedToArray(_useState5, 2),\n      formsStatus = _useState6[0],\n      setFormEditedStatus = _useState6[1];\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getPriorityLevels());\n    dispatch(getUsersByOrg(claim === null || claim === void 0 ? void 0 : claim.team, [_objectSpread(_objectSpread({}, claim), {}, {\n      divisionID: claim === null || claim === void 0 ? void 0 : claim.divisionId\n    })], 'createRfiForm'));\n    return function () {\n      dispatch(resetClaimsAssignedToUsers());\n      dispatch(resetAdhocTaskStatus());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleStep = function handleStep(step) {\n    if (activeStep < step) {\n      var _formsStatus$activeSt, _formsStatus$activeSt2, _formsStatus, _formsStatus2;\n\n      if (!(formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus$activeSt = formsStatus[activeStep]) === null || _formsStatus$activeSt === void 0 ? void 0 : _formsStatus$activeSt['formEditedStatus']) && (formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus$activeSt2 = formsStatus[activeStep]) === null || _formsStatus$activeSt2 === void 0 ? void 0 : _formsStatus$activeSt2['isSubmitted']) && !(formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus = formsStatus[step - 1]) === null || _formsStatus === void 0 ? void 0 : _formsStatus['formEditedStatus']) && (formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus2 = formsStatus[step - 1]) === null || _formsStatus2 === void 0 ? void 0 : _formsStatus2['isSubmitted'])) {\n        setActiveStep(step);\n      }\n    } else if (activeStep > step) {\n      setActiveStep(step);\n    }\n  };\n\n  var handleNext = function handleNext() {\n    var formState = formsStatus.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState === null || formState === void 0 ? void 0 : formState.forEach(function (form) {\n      var _formState$activeStep;\n\n      if ((form === null || form === void 0 ? void 0 : form.id) > activeStep && (formState === null || formState === void 0 ? void 0 : (_formState$activeStep = formState[activeStep]) === null || _formState$activeStep === void 0 ? void 0 : _formState$activeStep['formEditedStatus'])) {\n        form['isSubmitted'] = false;\n      }\n    });\n    formState[activeStep]['formEditedStatus'] = false;\n    formState[activeStep]['isSubmitted'] = true;\n    setFormEditedStatus(formState);\n    setActiveStep(activeStep + 1);\n  };\n\n  var handleBack = function handleBack() {\n    setActiveStep(activeStep - 1);\n  };\n\n  var handleSave = function handleSave() {\n    var formState = formsStatus === null || formsStatus === void 0 ? void 0 : formsStatus.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep]['formEditedStatus'] = false;\n    formState[activeStep]['isSubmitted'] = false;\n    formState === null || formState === void 0 ? void 0 : formState.map(function (frm) {\n      return (frm === null || frm === void 0 ? void 0 : frm.id) >= activeStep ? frm['isSubmitted'] = false : frm['isSubmitted'] = true;\n    });\n    setFormEditedStatus(formState);\n  };\n\n  var handleFormStatus = function handleFormStatus() {\n    var formState = formsStatus === null || formsStatus === void 0 ? void 0 : formsStatus.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep]['formEditedStatus'] = true;\n    formState[activeStep]['isSubmitted'] = false;\n    setFormEditedStatus(formState);\n  };\n\n  var isNextSteppedAllowed = function isNextSteppedAllowed(step) {\n    if (activeStep < step) {\n      var _formsStatus$activeSt3, _formsStatus$activeSt4, _formsStatus3, _formsStatus4;\n\n      if (!(formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus$activeSt3 = formsStatus[activeStep]) === null || _formsStatus$activeSt3 === void 0 ? void 0 : _formsStatus$activeSt3['formEditedStatus']) && (formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus$activeSt4 = formsStatus[activeStep]) === null || _formsStatus$activeSt4 === void 0 ? void 0 : _formsStatus$activeSt4['isSubmitted']) && !(formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus3 = formsStatus[step - 1]) === null || _formsStatus3 === void 0 ? void 0 : _formsStatus3['formEditedStatus']) && (formsStatus === null || formsStatus === void 0 ? void 0 : (_formsStatus4 = formsStatus[step - 1]) === null || _formsStatus4 === void 0 ? void 0 : _formsStatus4['isSubmitted'])) {\n        return true;\n      }\n    } else if (activeStep > step) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  var handleSkipUpload = function handleSkipUpload() {\n    setActiveStep(2);\n  };\n\n  var isAnyformIsDirty = formsStatus.some(function (form) {\n    return (form === null || form === void 0 ? void 0 : form.formEditedStatus) === true;\n  });\n\n  var handleCancel = function handleCancel() {\n    if (isAnyformIsDirty) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\n          maxWidth: 'xs',\n          componentProps: {\n            confirmLabel: utils.string.t('app.yes'),\n            cancelLabel: utils.string.t('app.no'),\n            confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\n            buttonColors: {\n              confirm: 'secondary',\n              cancel: 'default'\n            },\n            submitHandler: function submitHandler() {\n              dispatch(hideModal());\n            }\n          }\n        }\n      }));\n    } else {\n      dispatch(hideModal());\n    }\n  };\n\n  var handleSubmit = function handleSubmit() {\n    dispatch(hideModal());\n  };\n\n  var reminderList = [{\n    id: '1D',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr')\n  }, {\n    id: '2D',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr')\n  }, {\n    id: '3D',\n    name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr')\n  }, {\n    id: '4D',\n    name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr')\n  }, {\n    id: '1W',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr')\n  }, {\n    id: '2W',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr')\n  }, {\n    id: 'NA',\n    name: utils.string.t('claims.processing.taskReminderLabels.noReminder')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(CreateAdhocTaskView, {\n      activeStep: activeStep,\n      steps: stepFields,\n      progress: progress,\n      handleStep: handleStep,\n      formsStatus: formsStatus,\n      isAllStepsCompleted: false,\n      handleBack: handleBack,\n      handleFormStatus: handleFormStatus,\n      handleSave: handleSave,\n      handleNext: handleNext,\n      isNextSteppedAllowed: isNextSteppedAllowed,\n      handleSkipUpload: handleSkipUpload,\n      handleCancel: handleCancel,\n      handleSubmit: handleSubmit,\n      claim: claim,\n      reminderList: reminderList\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(CreateAdhocTask, \"VSkPeI8Lus63dk1J2/tptXQc8lc=\", false, function () {\n  return [useDispatch];\n});\n\n_c = CreateAdhocTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdhocTask\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/CreateAdhocTask/CreateAdhocTask.js"],"names":["React","useState","useEffect","useDispatch","PropTypes","CreateAdhocTaskView","hideModal","resetClaimsAssignedToUsers","getPriorityLevels","getUsersByOrg","showModal","resetAdhocTaskStatus","utils","propTypes","claim","object","isRequired","CreateAdhocTask","stepFields","id","form","string","t","formEditedStatus","isSubmitted","activeStep","setActiveStep","progress","setProgress","formsStatus","setFormEditedStatus","dispatch","team","divisionID","divisionId","length","handleStep","step","handleNext","formState","map","forEach","handleBack","handleSave","frm","handleFormStatus","isNextSteppedAllowed","handleSkipUpload","isAnyformIsDirty","some","handleCancel","component","props","fullWidth","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","submitHandler","handleSubmit","reminderList","name"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport CreateAdhocTaskView from './CreateAdhocTask.view';\r\nimport { hideModal, resetClaimsAssignedToUsers, getPriorityLevels, getUsersByOrg, showModal, resetAdhocTaskStatus } from 'stores';\r\n\r\nimport * as utils from 'utils';\r\n\r\nCreateAdhocTaskView.propTypes = {\r\n  claim: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function CreateAdhocTask({ claim }) {\r\n  const stepFields = [\r\n    {\r\n      id: 0,\r\n      form: utils.string.t('claims.processing.adHocTask.adHocDetails'),\r\n      formEditedStatus: false,\r\n      isSubmitted: false,\r\n    },\r\n    {\r\n      id: 1,\r\n      form: utils.string.t('claims.processing.adHocTask.uploadDocuments'),\r\n      formEditedStatus: false,\r\n      isSubmitted: false,\r\n    },\r\n    {\r\n      id: 2,\r\n      form: utils.string.t('claims.processing.adHocTask.confirmTask'),\r\n      formEditedStatus: false,\r\n      isSubmitted: false,\r\n    },\r\n  ];\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [formsStatus, setFormEditedStatus] = useState(stepFields);\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(() => {\r\n    dispatch(getPriorityLevels());\r\n    dispatch(getUsersByOrg(claim?.team, [{ ...claim, divisionID: claim?.divisionId }], 'createRfiForm'));\r\n    return () => {\r\n      dispatch(resetClaimsAssignedToUsers());\r\n      dispatch(resetAdhocTaskStatus());\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleStep = (step) => {\r\n    if (activeStep < step) {\r\n      if (\r\n        !formsStatus?.[activeStep]?.['formEditedStatus'] &&\r\n        formsStatus?.[activeStep]?.['isSubmitted'] &&\r\n        !formsStatus?.[step - 1]?.['formEditedStatus'] &&\r\n        formsStatus?.[step - 1]?.['isSubmitted']\r\n      ) {\r\n        setActiveStep(step);\r\n      }\r\n    } else if (activeStep > step) {\r\n      setActiveStep(step);\r\n    }\r\n  };\r\n\r\n  const handleNext = () => {\r\n    const formState = formsStatus.map((form) => ({ ...form }));\r\n    formState?.forEach((form) => {\r\n      if (form?.id > activeStep && formState?.[activeStep]?.['formEditedStatus']) {\r\n        form['isSubmitted'] = false;\r\n      }\r\n    });\r\n    formState[activeStep]['formEditedStatus'] = false;\r\n    formState[activeStep]['isSubmitted'] = true;\r\n    setFormEditedStatus(formState);\r\n\r\n    setActiveStep(activeStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep(activeStep - 1);\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formState = formsStatus?.map((form) => ({ ...form }));\r\n    formState[activeStep]['formEditedStatus'] = false;\r\n    formState[activeStep]['isSubmitted'] = false;\r\n    formState?.map((frm) => (frm?.id >= activeStep ? (frm['isSubmitted'] = false) : (frm['isSubmitted'] = true)));\r\n    setFormEditedStatus(formState);\r\n  };\r\n\r\n  const handleFormStatus = () => {\r\n    const formState = formsStatus?.map((form) => ({ ...form }));\r\n    formState[activeStep]['formEditedStatus'] = true;\r\n    formState[activeStep]['isSubmitted'] = false;\r\n    setFormEditedStatus(formState);\r\n  };\r\n\r\n  const isNextSteppedAllowed = (step) => {\r\n    if (activeStep < step) {\r\n      if (\r\n        !formsStatus?.[activeStep]?.['formEditedStatus'] &&\r\n        formsStatus?.[activeStep]?.['isSubmitted'] &&\r\n        !formsStatus?.[step - 1]?.['formEditedStatus'] &&\r\n        formsStatus?.[step - 1]?.['isSubmitted']\r\n      ) {\r\n        return true;\r\n      }\r\n    } else if (activeStep > step) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n  const handleSkipUpload = () => {\r\n    setActiveStep(2);\r\n  };\r\n  const isAnyformIsDirty = formsStatus.some((form) => form?.formEditedStatus === true);\r\n\r\n  const handleCancel = () => {\r\n    if (isAnyformIsDirty) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            fullWidth: true,\r\n            title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\r\n              buttonColors: { confirm: 'secondary', cancel: 'default' },\r\n              submitHandler: () => {\r\n                dispatch(hideModal());\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(hideModal());\r\n    }\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const reminderList = [\r\n    { id: '1D', name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr') },\r\n    { id: '2D', name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr') },\r\n    { id: '3D', name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr') },\r\n    { id: '4D', name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr') },\r\n    { id: '1W', name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr') },\r\n    { id: '2W', name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr') },\r\n    { id: 'NA', name: utils.string.t('claims.processing.taskReminderLabels.noReminder') },\r\n  ];\r\n  return (\r\n    <>\r\n      <CreateAdhocTaskView\r\n        activeStep={activeStep}\r\n        steps={stepFields}\r\n        progress={progress}\r\n        handleStep={handleStep}\r\n        formsStatus={formsStatus}\r\n        isAllStepsCompleted={false}\r\n        handleBack={handleBack}\r\n        handleFormStatus={handleFormStatus}\r\n        handleSave={handleSave}\r\n        handleNext={handleNext}\r\n        isNextSteppedAllowed={isNextSteppedAllowed}\r\n        handleSkipUpload={handleSkipUpload}\r\n        handleCancel={handleCancel}\r\n        handleSubmit={handleSubmit}\r\n        claim={claim}\r\n        reminderList={reminderList}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}