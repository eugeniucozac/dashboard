{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './PolicyDocumentsSearch.styles';\nimport { Button, FormActions, FormContainer, FormDate, FormFields, FormGrid, FormAutocompleteMui, Link, Overflow, Pagination, TableCell, TableHead, Warning } from 'components';\nimport * as utils from 'utils';\nimport { useFormActions, useMedia } from 'hooks'; // mui\n\nimport { makeStyles, Collapse, Grid, Table, TableBody, TableRow, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPolicyDocumentsSearchView.propTypes = {\n  files: PropTypes.array.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number\n  }).isRequired,\n  maxResultsWarning: PropTypes.number.isRequired,\n  fetched: PropTypes.bool,\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array,\n  searchReferenceType: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    download: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function PolicyDocumentsSearchView(_ref) {\n  _s();\n\n  var _utils$form$getFieldP,\n      _this = this;\n\n  var files = _ref.files,\n      pagination = _ref.pagination,\n      maxResultsWarning = _ref.maxResultsWarning,\n      fetched = _ref.fetched,\n      fields = _ref.fields,\n      actions = _ref.actions,\n      searchReferenceType = _ref.searchReferenceType,\n      handlers = _ref.handlers;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'PolicyDocumentsSearch'\n  })({\n    isMobile: media.mobile,\n    isTablet: media.tablet\n  });\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      watch = _useForm.watch,\n      getValues = _useForm.getValues,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit; // todo will be used when \"claims\" is supported\n  // const isRisk = searchReferenceType === 'risk';\n  // const isClaim = searchReferenceType === 'claim';\n\n\n  var isFormFilled = Object.values(watch()).some(Boolean);\n  var cols = [{\n    id: 'filename',\n    label: utils.string.t('app.filename'),\n    style: {\n      width: '20%'\n    }\n  }, {\n    id: 'documentType',\n    label: utils.string.t('app.documentType')\n  }, {\n    id: 'documentVersion',\n    label: utils.string.t('fileUpload.fields.documentVersion.label')\n  }, {\n    id: 'riskRef',\n    label: utils.string.t('fileUpload.fields.riskRef.label')\n  }, {\n    id: 'insuredName',\n    label: utils.string.t('app.insured')\n  }, {\n    id: 'inceptionDate',\n    label: utils.string.t('app.inceptionDate')\n  }, {\n    id: 'department',\n    label: utils.string.t('app.department')\n  }, {\n    id: 'xbInstance',\n    label: utils.string.t('app.xbInstance')\n  }, {\n    id: 'uploadedBy',\n    label: utils.string.t('app.uploadedBy')\n  }, {\n    id: 'uploadedDate',\n    label: utils.string.t('app.uploadedDate')\n  }];\n  var xbInstance = getValues('xbInstance');\n  var departmentOptions = ((_utils$form$getFieldP = utils.form.getFieldProps(fields, 'department')) === null || _utils$form$getFieldP === void 0 ? void 0 : _utils$form$getFieldP.options) || [];\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"form-PolicyDocumentsSearch\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(Collapse, {\n          \"in\": !fetched,\n          timeout: 500,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mt: 0.5,\n                mb: 3.5,\n                children: /*#__PURE__*/_jsxDEV(Warning, {\n                  type: \"info\",\n                  text: utils.string.t('fileUpload.searchHint')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 97,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            lg: 7,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'riskReference', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 6,\n            lg: 5,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'insuredName', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'xbInstance', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 114,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 113,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 3,\n            lg: 5,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'department', control, errors)), \"\".concat(xbInstance === null || xbInstance === void 0 ? void 0 : xbInstance.id, \"_\").concat(departmentOptions.map(function (o) {\n              return o.id;\n            }).join('-')), false, {\n              fileName: _jsxFileName,\n              lineNumber: 117,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 116,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 7,\n            md: 3,\n            lg: 3,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'documentType', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 123,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 5,\n            md: 3,\n            lg: 2,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(fields, 'inceptionYear', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 126,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 125,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: [fetched && (files === null || files === void 0 ? void 0 : files.length) === 0 && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              mb: 1,\n              display: \"flex\",\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Warning, {\n                type: \"alert\",\n                border: true,\n                icon: true,\n                text: utils.string.t('fileUpload.noResults')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this), fetched && (files === null || files === void 0 ? void 0 : files.length) > 0 && (pagination === null || pagination === void 0 ? void 0 : pagination.rowsTotal) > maxResultsWarning && /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              mb: 2,\n              display: \"flex\",\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Warning, {\n                type: \"alert\",\n                border: true,\n                icon: true,\n                text: utils.string.t('fileUpload.tooManyResults', {\n                  max: maxResultsWarning\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 17\n            }, this), utils.generic.isValidArray(files, true) && /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Overflow, {\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  \"data-testid\": \"policyDocumentSearch-list\",\n                  children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                    columns: cols\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 146,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: files.map(function (file, index) {\n                      // todo\n                      // replace index with unique key\n                      return /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.linkWrapper,\n                            children: /*#__PURE__*/_jsxDEV(Link, {\n                              target: \"_blank\",\n                              rel: \"noopener\",\n                              color: \"secondary\",\n                              text: file.documentName,\n                              title: file.documentName,\n                              onClick: function onClick() {\n                                handlers.download(file);\n                              },\n                              nestedClasses: {\n                                link: classes.link\n                              }\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 160,\n                              columnNumber: 35\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 159,\n                            columnNumber: 33\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 153,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.documentTypeDescription\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 175,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.documentVersion\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.policyRef\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 191,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.insuredName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 199,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nowrap: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: utils.string.t('format.date', {\n                            value: {\n                              date: file.inceptionDate\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 207,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.departmentName\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 216,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.xbinstance\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 224,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: file.uploadedby\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 232,\n                          columnNumber: 31\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          nowrap: true,\n                          nestedClasses: {\n                            root: classes.cell\n                          },\n                          children: utils.string.t('format.date', {\n                            value: {\n                              date: file.uploadeddate\n                            }\n                          })\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 240,\n                          columnNumber: 31\n                        }, _this)]\n                      }, \"\".concat(file.documentId, \"-\").concat(file.spdocumentID, \"-\").concat(index), true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 152,\n                        columnNumber: 29\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 147,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 4\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 256,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  sm: 8,\n                  children: /*#__PURE__*/_jsxDEV(Pagination, {\n                    page: pagination.page,\n                    count: pagination.rowsTotal,\n                    rowsPerPage: pagination.rowsPerPage,\n                    onChangePage: handlers.changePage,\n                    onChangeRowsPerPage: handlers.changeRowsPerPage\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 258,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 257,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 274,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !isFormFilled,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 273,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 93,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PolicyDocumentsSearchView, \"GvoYnpFIzfbQiKGWBY3F8aF1fyo=\", false, function () {\n  return [useMedia, useForm, useFormActions];\n});\n\n_c = PolicyDocumentsSearchView;\nPolicyDocumentsSearchView.displayName = \"PolicyDocumentsSearchView\";\nPolicyDocumentsSearchView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PolicyDocumentsSearchView\",\n  \"props\": {\n    \"files\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"page\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsPerPage\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsTotal\": {\n            \"name\": \"number\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"maxResultsWarning\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"fetched\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"searchReferenceType\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"download\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.view.js\"] = {\n    name: \"PolicyDocumentsSearchView\",\n    docgenInfo: PolicyDocumentsSearchView.__docgenInfo,\n    path: \"src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PolicyDocumentsSearchView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PolicyDocumentsSearch/PolicyDocumentsSearch.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormActions","FormContainer","FormDate","FormFields","FormGrid","FormAutocompleteMui","Link","Overflow","Pagination","TableCell","TableHead","Warning","utils","useFormActions","useMedia","makeStyles","Collapse","Grid","Table","TableBody","TableRow","Box","PolicyDocumentsSearchView","propTypes","files","array","isRequired","pagination","shape","page","number","rowsPerPage","rowsTotal","maxResultsWarning","fetched","bool","fields","actions","searchReferenceType","string","handlers","changePage","func","changeRowsPerPage","download","media","classes","name","isMobile","mobile","isTablet","tablet","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","getValues","reset","errors","handleSubmit","formState","cancel","submit","isFormFilled","Object","values","some","Boolean","cols","id","label","t","style","width","xbInstance","departmentOptions","getFieldProps","options","root","handler","map","o","join","length","max","generic","isValidArray","file","index","cell","linkWrapper","documentName","link","documentTypeDescription","documentVersion","policyRef","insuredName","value","date","inceptionDate","departmentName","xbinstance","uploadedby","uploadeddate","documentId","spdocumentID","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './PolicyDocumentsSearch.styles';\r\nimport {\r\n  Button,\r\n  FormActions,\r\n  FormContainer,\r\n  FormDate,\r\n  FormFields,\r\n  FormGrid,\r\n  FormAutocompleteMui,\r\n  Link,\r\n  Overflow,\r\n  Pagination,\r\n  TableCell,\r\n  TableHead,\r\n  Warning,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport { useFormActions, useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { makeStyles, Collapse, Grid, Table, TableBody, TableRow, Box } from '@material-ui/core';\r\n\r\nPolicyDocumentsSearchView.propTypes = {\r\n  files: PropTypes.array.isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number,\r\n  }).isRequired,\r\n  maxResultsWarning: PropTypes.number.isRequired,\r\n  fetched: PropTypes.bool,\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array,\r\n  searchReferenceType: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    download: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function PolicyDocumentsSearchView({\r\n  files,\r\n  pagination,\r\n  maxResultsWarning,\r\n  fetched,\r\n  fields,\r\n  actions,\r\n  searchReferenceType,\r\n  handlers,\r\n}) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'PolicyDocumentsSearch' })({ isMobile: media.mobile, isTablet: media.tablet });\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, watch, getValues, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  // todo will be used when \"claims\" is supported\r\n  // const isRisk = searchReferenceType === 'risk';\r\n  // const isClaim = searchReferenceType === 'claim';\r\n  const isFormFilled = Object.values(watch()).some(Boolean);\r\n\r\n  const cols = [\r\n    { id: 'filename', label: utils.string.t('app.filename'), style: { width: '20%' } },\r\n    { id: 'documentType', label: utils.string.t('app.documentType') },\r\n    { id: 'documentVersion', label: utils.string.t('fileUpload.fields.documentVersion.label') },\r\n    { id: 'riskRef', label: utils.string.t('fileUpload.fields.riskRef.label') },\r\n    { id: 'insuredName', label: utils.string.t('app.insured') },\r\n    { id: 'inceptionDate', label: utils.string.t('app.inceptionDate') },\r\n    { id: 'department', label: utils.string.t('app.department') },\r\n    { id: 'xbInstance', label: utils.string.t('app.xbInstance') },\r\n    { id: 'uploadedBy', label: utils.string.t('app.uploadedBy') },\r\n    { id: 'uploadedDate', label: utils.string.t('app.uploadedDate') },\r\n  ];\r\n\r\n  const xbInstance = getValues('xbInstance');\r\n  const departmentOptions = utils.form.getFieldProps(fields, 'department')?.options || [];\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"form-PolicyDocumentsSearch\">\r\n        <FormFields type=\"dialog\">\r\n          <Collapse in={!fetched} timeout={500}>\r\n            <FormGrid container>\r\n              <FormGrid item xs={12}>\r\n                <Box mt={0.5} mb={3.5}>\r\n                  <Warning type=\"info\" text={utils.string.t('fileUpload.searchHint')} />\r\n                </Box>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </Collapse>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6} md={6} lg={7}>\r\n              <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'riskReference', control, errors)} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6} md={6} lg={5}>\r\n              <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'insuredName', control, errors)} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6} md={3} lg={2}>\r\n              <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'xbInstance', control, errors)} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6} md={3} lg={5}>\r\n              <FormAutocompleteMui\r\n                key={`${xbInstance?.id}_${departmentOptions.map((o) => o.id).join('-')}`}\r\n                {...utils.form.getFieldProps(fields, 'department', control, errors)}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={7} md={3} lg={3}>\r\n              <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'documentType', control, errors)} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={5} md={3} lg={2}>\r\n              <FormDate {...utils.form.getFieldProps(fields, 'inceptionYear', control, errors)} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              {fetched && files?.length === 0 && (\r\n                <Box mt={2} mb={1} display=\"flex\" justifyContent=\"center\">\r\n                  <Warning type=\"alert\" border icon text={utils.string.t('fileUpload.noResults')} />\r\n                </Box>\r\n              )}\r\n              {fetched && files?.length > 0 && pagination?.rowsTotal > maxResultsWarning && (\r\n                <Box mt={2} mb={2} display=\"flex\" justifyContent=\"center\">\r\n                  <Warning type=\"alert\" border icon text={utils.string.t('fileUpload.tooManyResults', { max: maxResultsWarning })} />\r\n                </Box>\r\n              )}\r\n              {utils.generic.isValidArray(files, true) && (\r\n                <>\r\n                  <Overflow>\r\n                    <Table data-testid=\"policyDocumentSearch-list\">\r\n                      <TableHead columns={cols} />\r\n                      <TableBody>\r\n                        {files.map((file, index) => {\r\n                          // todo\r\n                          // replace index with unique key\r\n                          return (\r\n                            <TableRow key={`${file.documentId}-${file.spdocumentID}-${index}`}>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                <span className={classes.linkWrapper}>\r\n                                  <Link\r\n                                    target=\"_blank\"\r\n                                    rel=\"noopener\"\r\n                                    color=\"secondary\"\r\n                                    text={file.documentName}\r\n                                    title={file.documentName}\r\n                                    onClick={() => {\r\n                                      handlers.download(file);\r\n                                    }}\r\n                                    nestedClasses={{\r\n                                      link: classes.link,\r\n                                    }}\r\n                                  />\r\n                                </span>\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.documentTypeDescription}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.documentVersion}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.policyRef}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.insuredName}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nowrap\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {utils.string.t('format.date', { value: { date: file.inceptionDate } })}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.departmentName}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.xbinstance}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {file.uploadedby}\r\n                              </TableCell>\r\n                              <TableCell\r\n                                compact\r\n                                nowrap\r\n                                nestedClasses={{\r\n                                  root: classes.cell,\r\n                                }}\r\n                              >\r\n                                {utils.string.t('format.date', { value: { date: file.uploadeddate } })}\r\n                              </TableCell>\r\n                            </TableRow>\r\n                          );\r\n                        })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </Overflow>\r\n                  <Grid container>\r\n                    <Grid item xs={12} sm={4} />\r\n                    <Grid item xs={12} sm={8}>\r\n                      <Pagination\r\n                        page={pagination.page}\r\n                        count={pagination.rowsTotal}\r\n                        rowsPerPage={pagination.rowsPerPage}\r\n                        onChangePage={handlers.changePage}\r\n                        onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </>\r\n              )}\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !isFormFilled}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}