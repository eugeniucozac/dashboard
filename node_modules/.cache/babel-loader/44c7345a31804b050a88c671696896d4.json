{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ReportDetailsExtended\\\\ReportDetailsExtended.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useLocation, useHistory } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet'; // app\n\nimport { ReportDetailsExtendedView } from './ReportDetailsExtended.view';\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { selectSelectedReportGroupExtended, getReportDetailsExtended, selectReportDetailsExtended, selectReportDetailsExtendedLoading } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ReportDetailsExtended() {\n  _s();\n\n  var _location$state, _location$state2;\n\n  var _useParams = useParams(),\n      groupId = _useParams.groupId,\n      reportId = _useParams.reportId;\n\n  var location = useLocation();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var selectedReportGroup = useSelector(selectSelectedReportGroupExtended);\n  var reportDetails = useSelector(selectReportDetailsExtended);\n  var isReportDetailsLoading = useSelector(selectReportDetailsExtendedLoading);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      powerBiReportDetails = _useState2[0],\n      setPowerBiReportDetails = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      breadcrumbs = _useState4[0],\n      setBreadCrumbs = _useState4[1];\n\n  var groupTitle = (selectedReportGroup === null || selectedReportGroup === void 0 ? void 0 : selectedReportGroup.name) || (location === null || location === void 0 ? void 0 : (_location$state = location.state) === null || _location$state === void 0 ? void 0 : _location$state.reportGroupTitle);\n  var reportTitle = (reportDetails === null || reportDetails === void 0 ? void 0 : reportDetails.reportTitle) || (location === null || location === void 0 ? void 0 : (_location$state2 = location.state) === null || _location$state2 === void 0 ? void 0 : _location$state2.reportTitle);\n  useEffect(function () {\n    dispatch(getReportDetailsExtended(reportId));\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (reportDetails) {\n      setPowerBiReportDetails({\n        embedUrl: reportDetails === null || reportDetails === void 0 ? void 0 : reportDetails.embedUrl,\n        accessToken: reportDetails === null || reportDetails === void 0 ? void 0 : reportDetails.embedToken,\n        id: reportDetails === null || reportDetails === void 0 ? void 0 : reportDetails.reportId,\n        label: reportDetails === null || reportDetails === void 0 ? void 0 : reportDetails.reportTitle\n      });\n    }\n\n    setBreadCrumbs([{\n      name: 'report-group',\n      label: utils.string.t('reportingExtended.title'),\n      link: \"\".concat(config.routes.reportingExtended.root)\n    }, {\n      name: 'report',\n      label: groupTitle,\n      link: \"\".concat(config.routes.reportingExtended.root, \"/\").concat(groupId),\n      active: false\n    }, {\n      name: 'report-details',\n      label: reportTitle,\n      link: \"\".concat(config.routes.reportingExtended.root, \"/\").concat(groupId, \"/\").concat(reportId),\n      active: false\n    }]);\n  }, [reportDetails, groupTitle, reportTitle] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var setActiveBreadCrumbStep = function setActiveBreadCrumbStep(breadcrumbs) {\n    // abort\n    if (!utils.generic.isValidArray(breadcrumbs, true)) return [];\n    return breadcrumbs === null || breadcrumbs === void 0 ? void 0 : breadcrumbs.map(function (item) {\n      if (item.name === constants.REPORTING_EXTENDED_BREADCRUMB_REPORT_DETAILS && history.location.pathname.includes(\"reporting-extended/\".concat(groupId, \"/\").concat(reportId))) {\n        item.active = true;\n      } else {\n        item.active = history.location.pathname === item.link;\n      }\n\n      return item;\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(groupTitle, \" - \").concat(reportTitle, \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ReportDetailsExtendedView, {\n      reportDetails: powerBiReportDetails,\n      breadcrumbs: setActiveBreadCrumbStep(breadcrumbs),\n      reportTitle: reportTitle,\n      isReportDetailsLoading: isReportDetailsLoading\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ReportDetailsExtended, \"xTdVjEvgChHG1vHfuXLxXGeqcg8=\", false, function () {\n  return [useParams, useLocation, useHistory, useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ReportDetailsExtended;\nReportDetailsExtended.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ReportDetailsExtended\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\ReportDetailsExtended\\\\ReportDetailsExtended.js\"] = {\n    name: \"ReportDetailsExtended\",\n    docgenInfo: ReportDetailsExtended.__docgenInfo,\n    path: \"src\\\\pages\\\\ReportDetailsExtended\\\\ReportDetailsExtended.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportDetailsExtended\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ReportDetailsExtended/ReportDetailsExtended.js"],"names":["React","useState","useEffect","useParams","useLocation","useHistory","useSelector","useDispatch","Helmet","ReportDetailsExtendedView","config","utils","constants","selectSelectedReportGroupExtended","getReportDetailsExtended","selectReportDetailsExtended","selectReportDetailsExtendedLoading","ReportDetailsExtended","groupId","reportId","location","history","dispatch","brand","state","ui","selectedReportGroup","reportDetails","isReportDetailsLoading","powerBiReportDetails","setPowerBiReportDetails","breadcrumbs","setBreadCrumbs","groupTitle","name","reportGroupTitle","reportTitle","embedUrl","accessToken","embedToken","id","label","string","t","link","routes","reportingExtended","root","active","setActiveBreadCrumbStep","generic","isValidArray","map","item","REPORTING_EXTENDED_BREADCRUMB_REPORT_DETAILS","pathname","includes","app","getAppName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useLocation, useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// app\r\nimport { ReportDetailsExtendedView } from './ReportDetailsExtended.view';\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport {\r\n  selectSelectedReportGroupExtended,\r\n  getReportDetailsExtended,\r\n  selectReportDetailsExtended,\r\n  selectReportDetailsExtendedLoading,\r\n} from 'stores';\r\n\r\nexport default function ReportDetailsExtended() {\r\n  const { groupId, reportId } = useParams();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const brand = useSelector((state) => state.ui.brand);\r\n  const selectedReportGroup = useSelector(selectSelectedReportGroupExtended);\r\n  const reportDetails = useSelector(selectReportDetailsExtended);\r\n  const isReportDetailsLoading = useSelector(selectReportDetailsExtendedLoading);\r\n\r\n  const [powerBiReportDetails, setPowerBiReportDetails] = useState({});\r\n  const [breadcrumbs, setBreadCrumbs] = useState([]);\r\n\r\n  const groupTitle = selectedReportGroup?.name || location?.state?.reportGroupTitle;\r\n  const reportTitle = reportDetails?.reportTitle || location?.state?.reportTitle;\r\n\r\n  useEffect(() => {\r\n    dispatch(getReportDetailsExtended(reportId));\r\n  }, [dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(\r\n    () => {\r\n      if (reportDetails) {\r\n        setPowerBiReportDetails({\r\n          embedUrl: reportDetails?.embedUrl,\r\n          accessToken: reportDetails?.embedToken,\r\n          id: reportDetails?.reportId,\r\n          label: reportDetails?.reportTitle,\r\n        });\r\n      }\r\n\r\n      setBreadCrumbs([\r\n        {\r\n          name: 'report-group',\r\n          label: utils.string.t('reportingExtended.title'),\r\n          link: `${config.routes.reportingExtended.root}`,\r\n        },\r\n        {\r\n          name: 'report',\r\n          label: groupTitle,\r\n          link: `${config.routes.reportingExtended.root}/${groupId}`,\r\n          active: false,\r\n        },\r\n        {\r\n          name: 'report-details',\r\n          label: reportTitle,\r\n          link: `${config.routes.reportingExtended.root}/${groupId}/${reportId}`,\r\n          active: false,\r\n        },\r\n      ]);\r\n    },\r\n    [reportDetails, groupTitle, reportTitle] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const setActiveBreadCrumbStep = (breadcrumbs) => {\r\n    // abort\r\n    if (!utils.generic.isValidArray(breadcrumbs, true)) return [];\r\n\r\n    return breadcrumbs?.map((item) => {\r\n      if (\r\n        item.name === constants.REPORTING_EXTENDED_BREADCRUMB_REPORT_DETAILS &&\r\n        history.location.pathname.includes(`reporting-extended/${groupId}/${reportId}`)\r\n      ) {\r\n        item.active = true;\r\n      } else {\r\n        item.active = history.location.pathname === item.link;\r\n      }\r\n      return item;\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${groupTitle} - ${reportTitle} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <ReportDetailsExtendedView\r\n        reportDetails={powerBiReportDetails}\r\n        breadcrumbs={setActiveBreadCrumbStep(breadcrumbs)}\r\n        reportTitle={reportTitle}\r\n        isReportDetailsLoading={isReportDetailsLoading}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}