{"ast":null,"code":"import * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var getEndorsementValues = function getEndorsementValues(xbPolicyId, xbInstanceId) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var endpointParams = {\n      policyIds: xbPolicyId,\n      instanceId: xbInstanceId\n    };\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: 'risk/reference/endorsements',\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getEndorsementSuccess(json.data));\n      return json.data;\n    }).catch(function (error) {\n      dispatch(getEndorsementError(error, {\n        file: 'stores/processingInstructions.actions.getEndorsementValues'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    });\n  };\n};\nexport var getEndorsementSuccess = function getEndorsementSuccess(endorsementValues) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_SUCCESS',\n    payload: endorsementValues\n  };\n};\nexport var getEndorsementError = function getEndorsementError(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.getEndorsementValues.js"],"names":["utils","authLogout","getEndorsementValues","xbPolicyId","xbInstanceId","dispatch","getState","auth","user","endpoint","config","vars","endpointParams","policyIds","instanceId","api","get","token","accessToken","ppService","path","params","then","response","handleResponse","data","handleNewData","json","getEndorsementSuccess","catch","error","getEndorsementError","file","handleUnauthorized","endorsementValues","type","payload"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AACA,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACC,UAAD,EAAaC,YAAb;AAAA,SAA8B,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMpFA,QAAQ,EAN4E;AAAA,QAE9EC,IAF8E,aAEtFC,IAFsF,CAE9ED,IAF8E;AAAA,QAI5EE,QAJ4E,aAGtFC,MAHsF,CAIpFC,IAJoF,CAI5EF,QAJ4E;;AAQxF,QAAMG,cAAc,GAAG;AACrBC,MAAAA,SAAS,EAAEV,UADU;AAErBW,MAAAA,UAAU,EAAEV;AAFS,KAAvB;AAKA,WAAOJ,KAAK,CAACe,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,SAFhB;AAGHC,MAAAA,IAAI,EAAE,6BAHH;AAIHC,MAAAA,MAAM,EAAET;AAJL,KADA,EAOJU,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACe,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACe,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACK,IAAD,EAAU;AACdtB,MAAAA,QAAQ,CAACuB,qBAAqB,CAACD,IAAI,CAACF,IAAN,CAAtB,CAAR;AACA,aAAOE,IAAI,CAACF,IAAZ;AACD,KAZI,EAaJI,KAbI,CAaE,UAACC,KAAD,EAAW;AAChBzB,MAAAA,QAAQ,CACN0B,mBAAmB,CAACD,KAAD,EAAQ;AACzBE,QAAAA,IAAI,EAAE;AADmB,OAAR,CADb,CAAR;AAKAhC,MAAAA,KAAK,CAACe,GAAN,CAAUkB,kBAAV,CAA6BH,KAA7B,EAAoCzB,QAApC,EAA8CJ,UAA9C;AACA,aAAO6B,KAAP;AACD,KArBI,CAAP;AAsBD,GAnCmC;AAAA,CAA7B;AAqCP,OAAO,IAAMF,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACM,iBAAD,EAAuB;AAC1D,SAAO;AACLC,IAAAA,IAAI,EAAE,sDADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMH,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,KAAD,EAAW;AAC5C,SAAO;AACLK,IAAAA,IAAI,EAAE,oDADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\nexport const getEndorsementValues = (xbPolicyId, xbInstanceId) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const endpointParams = {\r\n    policyIds: xbPolicyId,\r\n    instanceId: xbInstanceId,\r\n  };\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: 'risk/reference/endorsements',\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => utils.api.handleNewData(data))\r\n    .then((json) => {\r\n      dispatch(getEndorsementSuccess(json.data));\r\n      return json.data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        getEndorsementError(error, {\r\n          file: 'stores/processingInstructions.actions.getEndorsementValues',\r\n        })\r\n      );\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const getEndorsementSuccess = (endorsementValues) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_SUCCESS',\r\n    payload: endorsementValues,\r\n  };\r\n};\r\n\r\nexport const getEndorsementError = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_REF_DATA_ENDORSEMENT_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}