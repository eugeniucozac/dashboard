{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateRFI\\\\CreateRFI.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport { CreateRFIView } from './CreateRFI.view';\nimport { WEEKOFF_DAYS, REMINDER_DEFAULT, REMINDER_VALUES, REMINDER_NOT_REQUIRED, PRIORITIES_ID, RFI, ORGANIZATIONS } from 'consts';\nimport { selectPriorities, selectClaimsAssignedToUsers, selectRefDataQueryCodes, postSaveRFI, selectUserEmail, selectUserOrg, selectUser, selectRefDataNewProcessType, selectCreateRfiInfo } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateRFI.propTypes = {\n  claim: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  type: PropTypes.string\n};\n\nvar getTargetBusinessDays = function getTargetBusinessDays(date, days) {\n  var currentDate = new Date(date);\n  var newDate = moment(new Date(currentDate.setDate(currentDate.getDate() + days)));\n  return newDate.weekday() === WEEKOFF_DAYS.sun.weekday ? newDate.add(WEEKOFF_DAYS.sun.addDays, 'd') : newDate.weekday() === WEEKOFF_DAYS.sat.weekday ? newDate.add(WEEKOFF_DAYS.sat.addDays, 'd') : newDate;\n};\n\nvar getTargetBasedReminder = function getTargetBasedReminder(createdDate, targetDate) {\n  var dateDiff = targetDate.diff(createdDate, 'days');\n  return dateDiff;\n};\n\nexport default function CreateRFI(props) {\n  _s();\n\n  var _useSelector, _selectAssignees$item, _rfiProcessTypes$find;\n\n  var dispatch = useDispatch();\n  var claim = props.claim,\n      rfiType = props.rfiType,\n      handleFormStatus = props.handleFormStatus;\n  var priorities = useSelector(selectPriorities);\n  var queryCodes = useSelector(selectRefDataQueryCodes);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var createRfiInfo = useSelector(selectCreateRfiInfo);\n  var userEmail = useSelector(selectUserEmail);\n  var userOrg = useSelector(selectUserOrg);\n  var userId = (_useSelector = useSelector(selectUser)) === null || _useSelector === void 0 ? void 0 : _useSelector.id;\n  var assignedToUsers = selectAssignees === null || selectAssignees === void 0 ? void 0 : (_selectAssignees$item = selectAssignees.items) === null || _selectAssignees$item === void 0 ? void 0 : _selectAssignees$item.filter(function (user) {\n    return user.email !== userEmail;\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      sendToUsers = _useState2[0],\n      setSendToUSers = _useState2[1];\n\n  var claimId = (claim === null || claim === void 0 ? void 0 : claim.businessProcessID) || (claim === null || claim === void 0 ? void 0 : claim.claimId) || null;\n  var claimReference = (claim === null || claim === void 0 ? void 0 : claim.claimReference) || (claim === null || claim === void 0 ? void 0 : claim.claimRef) || null;\n  var rfiProcessTypes = useSelector(selectRefDataNewProcessType);\n  var rfiProcessId = rfiProcessTypes === null || rfiProcessTypes === void 0 ? void 0 : (_rfiProcessTypes$find = rfiProcessTypes.find(function (type) {\n    return (type === null || type === void 0 ? void 0 : type.processTypeDetails) === RFI;\n  })) === null || _rfiProcessTypes$find === void 0 ? void 0 : _rfiProcessTypes$find.processTypeID;\n  var claimRef = (claim === null || claim === void 0 ? void 0 : claim.claimReference) || (claim === null || claim === void 0 ? void 0 : claim.taskRef) || (claim === null || claim === void 0 ? void 0 : claim.lossRef) || '';\n  var teamList = [ORGANIZATIONS.mphasis, ORGANIZATIONS.ardonagh];\n  var fields = [{\n    name: 'queryCode',\n    type: 'autocompletemui',\n    options: queryCodes || [],\n    label: utils.string.t('claims.columns.createRFIColumns.queryCode'),\n    optionKey: 'queryCodeDetails',\n    optionLabel: 'queryCodeDescription',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')),\n    value: queryCodes === null || queryCodes === void 0 ? void 0 : queryCodes.find(function (code) {\n      return code.queryCodeDetails === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.queryCode);\n    })\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: priorities || [],\n    label: utils.string.t('claims.columns.createRFIColumns.priority'),\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref) {\n      var id = _ref.id;\n      return id.toString() === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.priority);\n    }),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')),\n    defaultValue: priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref2) {\n      var id = _ref2.id;\n      return id === PRIORITIES_ID[1];\n    })\n  }, {\n    name: 'teams',\n    type: 'autocompletemui',\n    options: teamList || [],\n    label: utils.string.t('claims.columns.createRFIColumns.team'),\n    optionKey: 'id',\n    optionLabel: 'label',\n    value: teamList.find(function (_ref3) {\n      var label = _ref3.label;\n      return label === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.sendToTeam);\n    }),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    name: 'sendTo',\n    type: 'autocompletemui',\n    options: sendToUsers || [],\n    label: utils.string.t('claims.columns.createRFIColumns.sendTo'),\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    value: assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (_ref4) {\n      var email = _ref4.email;\n      return email === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.sendToUser);\n    }),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    name: 'reminder',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\n    options: REMINDER_VALUES || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (REMINDER_VALUES === null || REMINDER_VALUES === void 0 ? void 0 : REMINDER_VALUES.find(function (item) {\n      return item.id === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.reminderDate);\n    })) || (REMINDER_VALUES === null || REMINDER_VALUES === void 0 ? void 0 : REMINDER_VALUES.find(function (item) {\n      return item.id === REMINDER_DEFAULT;\n    }))\n  }, {\n    type: 'datepicker',\n    name: 'targetDueDate',\n    icon: 'TodayIcon',\n    label: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().nullable().test('targetDueDate', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\n      var createdDate = new moment();\n      return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\n    }),\n    outputFormat: 'iso',\n    value: new moment(createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.targetDueDate) || new moment()\n  }, {\n    name: 'description',\n    type: 'textarea',\n    label: utils.string.t('claims.processing.taskDetailsLabels.description'),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 500\n      },\n      multiline: true,\n      rows: 3,\n      rowsMax: 5\n    },\n    value: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.description,\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue,\n      isDirty = _useForm.formState.isDirty;\n\n  var qcWatcher = watch('queryCode');\n  var targetDateWatcher = watch('targetDueDate');\n  var queryObj = queryCodes.find(function (query) {\n    return (qcWatcher === null || qcWatcher === void 0 ? void 0 : qcWatcher.queryCodeDetails) === query.queryCodeDetails;\n  });\n  var selectedTeam = watch('teams');\n  useEffect(function () {\n    if (qcWatcher) {\n      var slaTargetDate = getTargetBusinessDays(new Date(), queryObj === null || queryObj === void 0 ? void 0 : queryObj.sla);\n      setValue('targetDueDate', slaTargetDate);\n    }\n\n    if (selectedTeam) {\n      var userList = assignedToUsers.filter(function (user) {\n        return user.organisationName === (selectedTeam === null || selectedTeam === void 0 ? void 0 : selectedTeam.label);\n      });\n      setSendToUSers(userList);\n    }\n  }, [qcWatcher, selectedTeam]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isDirty) {\n      handleFormStatus();\n    }\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (targetDateWatcher) {\n      var reminderDays = getTargetBasedReminder(new moment(), new moment(targetDateWatcher));\n      var remObj = [];\n      REMINDER_VALUES.forEach(function (reminder) {\n        if (reminder.days <= reminderDays) {\n          remObj.push(REMINDER_VALUES.find(function (list) {\n            return reminder.id === list.id;\n          }));\n        }\n      });\n      remObj.push(REMINDER_VALUES.find(function (list) {\n        return list.id === REMINDER_NOT_REQUIRED;\n      }));\n    }\n  }, [targetDateWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleCreateRFI = function handleCreateRFI(values, nextHandler) {\n    var _claim$lossDetailID, _claim$lossDetailId, _values$priority, _claim$processId, _values$queryCode, _values$queryCode2, _values$reminder, _values$teams;\n\n    var sendToObj = assignedToUsers.find(function (user) {\n      var _values$sendTo;\n\n      return user.email === (values === null || values === void 0 ? void 0 : (_values$sendTo = values.sendTo) === null || _values$sendTo === void 0 ? void 0 : _values$sendTo.email);\n    });\n    var rfiDetails = {\n      caseIncidentRefType: rfiType,\n      caseInstanceId: claim === null || claim === void 0 ? void 0 : claim.caseIncidentID,\n      claimId: (claimId === null || claimId === void 0 ? void 0 : claimId.toString()) || null,\n      claimRef: claimReference,\n      description: values.description,\n      lossId: (claim === null || claim === void 0 ? void 0 : (_claim$lossDetailID = claim.lossDetailID) === null || _claim$lossDetailID === void 0 ? void 0 : _claim$lossDetailID.toString()) || (claim === null || claim === void 0 ? void 0 : (_claim$lossDetailId = claim.lossDetailId) === null || _claim$lossDetailId === void 0 ? void 0 : _claim$lossDetailId.toString()) || null,\n      lossRef: (claim === null || claim === void 0 ? void 0 : claim.lossRef) || null,\n      priority: (values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id) || null,\n      processInstanceId: claim === null || claim === void 0 ? void 0 : (_claim$processId = claim.processId) === null || _claim$processId === void 0 ? void 0 : _claim$processId.toString(),\n      processTypeId: rfiProcessId,\n      queryCode: values === null || values === void 0 ? void 0 : (_values$queryCode = values.queryCode) === null || _values$queryCode === void 0 ? void 0 : _values$queryCode.queryCodeDetails,\n      queryCodeDescription: values === null || values === void 0 ? void 0 : (_values$queryCode2 = values.queryCode) === null || _values$queryCode2 === void 0 ? void 0 : _values$queryCode2.queryCodeDescription,\n      reminderDate: (values === null || values === void 0 ? void 0 : (_values$reminder = values.reminder) === null || _values$reminder === void 0 ? void 0 : _values$reminder.id) || null,\n      requestedByTeam: userOrg,\n      requestedByUser: userEmail,\n      sendToTeam: values === null || values === void 0 ? void 0 : (_values$teams = values.teams) === null || _values$teams === void 0 ? void 0 : _values$teams.label,\n      sendToUser: sendToObj.email,\n      targetDueDate: values.targetDueDate,\n      taskId: (claim === null || claim === void 0 ? void 0 : claim.taskId) || null,\n      taskRef: (claim === null || claim === void 0 ? void 0 : claim.taskRef) || null,\n      userId: userId\n    };\n    dispatch(postSaveRFI(rfiDetails)).then(function (response) {\n      if (response) {\n        nextHandler();\n      }\n    });\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    handleCreateRFI(values, props.handleNextSubmit);\n  };\n\n  var handleSkipSubmit = function handleSkipSubmit(values) {\n    handleCreateRFI(values, function () {\n      return props.handleSkip(2);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(CreateRFIView, _objectSpread(_objectSpread({}, props), {}, {\n    claimRef: claimRef,\n    fields: fields,\n    formProps: {\n      control: control,\n      errors: errors,\n      handleSubmit: handleSubmit,\n      isDirty: isDirty\n    },\n    handlers: {\n      handleSubmitForm: handleSubmitForm,\n      handleSkipSubmit: handleSkipSubmit\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 242,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateRFI, \"t0KZSzUKU99t36+VthrGXq8Nj9c=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = CreateRFI;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateRFI\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateRFI/CreateRFI.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","moment","useForm","yupResolver","CreateRFIView","WEEKOFF_DAYS","REMINDER_DEFAULT","REMINDER_VALUES","REMINDER_NOT_REQUIRED","PRIORITIES_ID","RFI","ORGANIZATIONS","selectPriorities","selectClaimsAssignedToUsers","selectRefDataQueryCodes","postSaveRFI","selectUserEmail","selectUserOrg","selectUser","selectRefDataNewProcessType","selectCreateRfiInfo","utils","CreateRFI","propTypes","claim","object","cancelHandler","func","type","string","getTargetBusinessDays","date","days","currentDate","Date","newDate","setDate","getDate","weekday","sun","add","addDays","sat","getTargetBasedReminder","createdDate","targetDate","dateDiff","diff","props","dispatch","rfiType","handleFormStatus","priorities","queryCodes","selectAssignees","createRfiInfo","userEmail","userOrg","userId","id","assignedToUsers","items","filter","user","email","sendToUsers","setSendToUSers","claimId","businessProcessID","claimReference","claimRef","rfiProcessTypes","rfiProcessId","find","processTypeDetails","processTypeID","taskRef","lossRef","teamList","mphasis","ardonagh","fields","name","options","label","t","optionKey","optionLabel","validation","nullable","required","value","code","queryCodeDetails","queryCode","toString","priority","defaultValue","sendToTeam","sendToUser","item","reminderDate","icon","muiComponentProps","fullWidth","test","isSameOrAfter","outputFormat","targetDueDate","inputProps","maxLength","multiline","rows","rowsMax","description","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","handleSubmit","watch","setValue","isDirty","formState","qcWatcher","targetDateWatcher","queryObj","query","selectedTeam","slaTargetDate","sla","userList","organisationName","reminderDays","remObj","forEach","reminder","push","list","handleCreateRFI","values","nextHandler","sendToObj","sendTo","rfiDetails","caseIncidentRefType","caseInstanceId","caseIncidentID","lossId","lossDetailID","lossDetailId","processInstanceId","processId","processTypeId","queryCodeDescription","requestedByTeam","requestedByUser","teams","taskId","then","response","handleSubmitForm","handleNextSubmit","handleSkipSubmit","handleSkip"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport { CreateRFIView } from './CreateRFI.view';\r\nimport {\r\n  WEEKOFF_DAYS,\r\n  REMINDER_DEFAULT,\r\n  REMINDER_VALUES,\r\n  REMINDER_NOT_REQUIRED,\r\n  PRIORITIES_ID,\r\n  RFI,\r\n  ORGANIZATIONS,\r\n} from 'consts';\r\nimport {\r\n  selectPriorities,\r\n  selectClaimsAssignedToUsers,\r\n  selectRefDataQueryCodes,\r\n  postSaveRFI,\r\n  selectUserEmail,\r\n  selectUserOrg,\r\n  selectUser,\r\n  selectRefDataNewProcessType,\r\n  selectCreateRfiInfo,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\n\r\nCreateRFI.propTypes = {\r\n  claim: PropTypes.object,\r\n  cancelHandler: PropTypes.func,\r\n  type: PropTypes.string,\r\n};\r\n\r\nconst getTargetBusinessDays = (date, days) => {\r\n  const currentDate = new Date(date);\r\n  const newDate = moment(new Date(currentDate.setDate(currentDate.getDate() + days)));\r\n  return newDate.weekday() === WEEKOFF_DAYS.sun.weekday\r\n    ? newDate.add(WEEKOFF_DAYS.sun.addDays, 'd')\r\n    : newDate.weekday() === WEEKOFF_DAYS.sat.weekday\r\n      ? newDate.add(WEEKOFF_DAYS.sat.addDays, 'd')\r\n      : newDate;\r\n};\r\n\r\nconst getTargetBasedReminder = (createdDate, targetDate) => {\r\n  const dateDiff = targetDate.diff(createdDate, 'days');\r\n  return dateDiff;\r\n};\r\n\r\nexport default function CreateRFI(props) {\r\n  const dispatch = useDispatch();\r\n  const { claim, rfiType, handleFormStatus } = props;\r\n  const priorities = useSelector(selectPriorities);\r\n  const queryCodes = useSelector(selectRefDataQueryCodes);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const createRfiInfo = useSelector(selectCreateRfiInfo);\r\n  const userEmail = useSelector(selectUserEmail);\r\n  const userOrg = useSelector(selectUserOrg);\r\n  const userId = useSelector(selectUser)?.id;\r\n  const assignedToUsers = selectAssignees?.items?.filter((user) => user.email !== userEmail);\r\n  const [sendToUsers, setSendToUSers] = useState();\r\n  const claimId = claim?.businessProcessID || claim?.claimId || null;\r\n  const claimReference = claim?.claimReference || claim?.claimRef || null;\r\n  const rfiProcessTypes = useSelector(selectRefDataNewProcessType);\r\n  const rfiProcessId = rfiProcessTypes?.find((type) => type?.processTypeDetails === RFI)?.processTypeID;\r\n  const claimRef = claim?.claimReference || claim?.taskRef || claim?.lossRef || '';\r\n  const teamList = [ORGANIZATIONS.mphasis, ORGANIZATIONS.ardonagh];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'queryCode',\r\n      type: 'autocompletemui',\r\n      options: queryCodes || [],\r\n      label: utils.string.t('claims.columns.createRFIColumns.queryCode'),\r\n      optionKey: 'queryCodeDetails',\r\n      optionLabel: 'queryCodeDescription',\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n      value: queryCodes?.find((code) => code.queryCodeDetails === createRfiInfo?.queryCode)\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities || [],\r\n      label: utils.string.t('claims.columns.createRFIColumns.priority'),\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value: priorities?.find(({ id }) => id.toString() === createRfiInfo?.priority),\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n      defaultValue: priorities?.find(({ id }) => id === PRIORITIES_ID[1]),\r\n    },\r\n    {\r\n      name: 'teams',\r\n      type: 'autocompletemui',\r\n      options: teamList || [],\r\n      label: utils.string.t('claims.columns.createRFIColumns.team'),\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      value: teamList.find(({ label }) => label === createRfiInfo?.sendToTeam),\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'sendTo',\r\n      type: 'autocompletemui',\r\n      options: sendToUsers || [],\r\n      label: utils.string.t('claims.columns.createRFIColumns.sendTo'),\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      value: assignedToUsers?.find(({ email }) => email === createRfiInfo?.sendToUser),\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'reminder',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\r\n      options: REMINDER_VALUES || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: REMINDER_VALUES?.find((item) => item.id === createRfiInfo?.reminderDate) || REMINDER_VALUES?.find((item) => item.id === REMINDER_DEFAULT),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'targetDueDate',\r\n      icon: 'TodayIcon',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .test('targetDueDate', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\r\n          const createdDate = new moment();\r\n          return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\r\n        }),\r\n      outputFormat: 'iso',\r\n      value: new moment(createRfiInfo?.targetDueDate) || new moment(),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.description'),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 500 },\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 5,\r\n      },\r\n      value: createRfiInfo?.description,\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, handleSubmit, watch, setValue, formState: { isDirty }, } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const qcWatcher = watch('queryCode');\r\n  const targetDateWatcher = watch('targetDueDate');\r\n  const queryObj = queryCodes.find((query) => qcWatcher?.queryCodeDetails === query.queryCodeDetails);\r\n  const selectedTeam = watch('teams');\r\n  useEffect(() => {\r\n    if (qcWatcher) {\r\n      const slaTargetDate = getTargetBusinessDays(new Date(), queryObj?.sla);\r\n      setValue('targetDueDate', slaTargetDate);\r\n    }\r\n    if (selectedTeam) {\r\n      const userList = assignedToUsers.filter((user) => user.organisationName === selectedTeam?.label);\r\n      setSendToUSers(userList);\r\n    }\r\n  }, [qcWatcher, selectedTeam]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isDirty) {\r\n      handleFormStatus();\r\n    }\r\n  }, [isDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (targetDateWatcher) {\r\n      const reminderDays = getTargetBasedReminder(new moment(), new moment(targetDateWatcher));\r\n      const remObj = [];\r\n      REMINDER_VALUES.forEach((reminder) => {\r\n        if (reminder.days <= reminderDays) {\r\n          remObj.push(REMINDER_VALUES.find((list) => reminder.id === list.id));\r\n        }\r\n      });\r\n\r\n      remObj.push(REMINDER_VALUES.find((list) => list.id === REMINDER_NOT_REQUIRED));\r\n    }\r\n  }, [targetDateWatcher]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleCreateRFI = (values, nextHandler) => {\r\n    const sendToObj = assignedToUsers.find((user) => user.email === values?.sendTo?.email);\r\n    const rfiDetails = {\r\n      caseIncidentRefType: rfiType,\r\n      caseInstanceId: claim?.caseIncidentID,\r\n      claimId: claimId?.toString() || null,\r\n      claimRef: claimReference,\r\n      description: values.description,\r\n      lossId: claim?.lossDetailID?.toString() || claim?.lossDetailId?.toString() || null,\r\n      lossRef: claim?.lossRef || null,\r\n      priority: values?.priority?.id || null,\r\n      processInstanceId: claim?.processId?.toString(),\r\n      processTypeId: rfiProcessId,\r\n      queryCode: values?.queryCode?.queryCodeDetails,\r\n      queryCodeDescription: values?.queryCode?.queryCodeDescription,\r\n      reminderDate: values?.reminder?.id || null,\r\n      requestedByTeam: userOrg,\r\n      requestedByUser: userEmail,\r\n      sendToTeam: values?.teams?.label,\r\n      sendToUser: sendToObj.email,\r\n      targetDueDate: values.targetDueDate,\r\n      taskId: claim?.taskId || null,\r\n      taskRef: claim?.taskRef || null,\r\n      userId,\r\n    };\r\n\r\n    dispatch(postSaveRFI(rfiDetails)).then((response) => {\r\n      if (response) {\r\n        nextHandler();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    handleCreateRFI(values, props.handleNextSubmit)\r\n  };\r\n  const handleSkipSubmit = (values) => {\r\n    handleCreateRFI(values, () => props.handleSkip(2))\r\n  }\r\n\r\n  return (\r\n    <CreateRFIView\r\n      {...props}\r\n      claimRef={claimRef}\r\n      fields={fields}\r\n      formProps={{\r\n        control,\r\n        errors,\r\n        handleSubmit,\r\n        isDirty,\r\n      }}\r\n      handlers={{\r\n        handleSubmitForm,\r\n        handleSkipSubmit,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}