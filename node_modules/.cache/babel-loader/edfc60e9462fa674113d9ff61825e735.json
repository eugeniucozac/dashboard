{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TaskDetails.view.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport isEmpty from 'lodash/isEmpty'; //app\n\nimport * as utils from 'utils';\nimport { Layout, FormGrid, FormRadio, Button, FormLabel, TableToolbar } from 'components';\nimport styles from './TaskDetails.styles';\nimport { RowDetails, TaskCheckList } from 'modules';\nimport config from 'config';\nimport { ADVICE_AND_SETTLEMENT } from 'consts';\nimport { selectSancCheckAssociatedTask } from 'stores';\nimport { SANCTIONS_CHECK_KEY } from 'consts';\nimport { TaskDetailsCard } from './TaskDetailsCard'; //mui\n\nimport { makeStyles, Typography, Box, Grid, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskDetailsView.prototype = {\n  taskObj: PropTypes.object.isRequired,\n  fields: PropTypes.array.isRequired,\n  currencyPurchasedValue: PropTypes.string.isRequired,\n  sanctionsCheckState: PropTypes.string,\n  control: PropTypes.object,\n  currencyValue: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    setCurrencyValue: PropTypes.func.isRequired,\n    handleClose: PropTypes.func,\n    setStatusType: PropTypes.func\n  })\n};\nexport function TaskDetailsView(_ref) {\n  _s();\n\n  var taskObj = _ref.taskObj,\n      fields = _ref.fields,\n      currencyPurchasedValue = _ref.currencyPurchasedValue,\n      sanctionsCheckState = _ref.sanctionsCheckState,\n      control = _ref.control,\n      currencyValue = _ref.currencyValue,\n      handlers = _ref.handlers;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPurchasedCurrencyRequired = _useState2[0],\n      setIsPurchasedCurrencyRequired = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCurrencyChanged = _useState4[0],\n      setIsCurrencyChanged = _useState4[1];\n\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n  var associatedTask = useSelector(selectSancCheckAssociatedTask);\n  var detailsHeader = (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === SANCTIONS_CHECK_KEY ? utils.string.t('claims.processing.taskDetailsAssociated') : utils.string.t('claims.processing.taskDetails');\n  var isTaskSanctionsCheck = (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === SANCTIONS_CHECK_KEY;\n  useEffect(function () {\n    if (currencyPurchasedValue !== currencyValue) {\n      if ((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT) {\n        setIsCurrencyChanged(true);\n      }\n\n      handlers.setCurrencyValue(currencyPurchasedValue);\n    }\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setIsPurchasedCurrencyRequired((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT ? true : false);\n  }, [taskObj]);\n  useEffect(function () {\n    if (sanctionsCheckState) {\n      handlers.setApprovalStatus(sanctionsCheckState);\n    }\n  }, [sanctionsCheckState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (isTaskSanctionsCheck && isEmpty(associatedTask)) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      padding: true,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.taskSnapshot,\n          children: [/*#__PURE__*/_jsxDEV(CardHeader, {\n            className: classes.cardHeader,\n            title: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              justify: \"space-between\",\n              alignItems: \"center\",\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(Grid, {\n                  container: true,\n                  direction: \"row\",\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      className: classes.title,\n                      children: utils.string.t('claims.lossInformation.title')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(CardContent, {\n            variant: \"body2\",\n            className: classes.cardContent,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.details,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(RowDetails, {\n                    title: utils.string.t('claims.processing.taskDetailsLabels.claimRef'),\n                    details: taskObj === null || taskObj === void 0 ? void 0 : taskObj.processRef,\n                    textAlign: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 93,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RowDetails, {\n                    title: utils.string.t('claims.processing.taskDetailsLabels.policyRef'),\n                    details: taskObj === null || taskObj === void 0 ? void 0 : taskObj.policyRef,\n                    textAlign: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 98,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: [/*#__PURE__*/_jsxDEV(RowDetails, {\n                    title: utils.string.t('claims.processing.taskDetailsLabels.lossDate'),\n                    details: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.lossFromDate) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.lossFromDate).format(config.ui.format.date.text),\n                    textAlign: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 21\n                  }, this), /*#__PURE__*/_jsxDEV(RowDetails, {\n                    title: utils.string.t('claims.processing.taskDetailsLabels.insured'),\n                    details: taskObj === null || taskObj === void 0 ? void 0 : taskObj.insured,\n                    textAlign: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 21\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(Box, {\n                  children: /*#__PURE__*/_jsxDEV(RowDetails, {\n                    title: utils.string.t('claims.processing.taskDetailsLabels.lossDetails'),\n                    details: taskObj === null || taskObj === void 0 ? void 0 : taskObj.lossDetails,\n                    textAlign: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 117,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 89,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, this), isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TaskDetailsCard, {\n          taskObj: associatedTask,\n          detailsHeader: detailsHeader\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 36\n        }, this), /*#__PURE__*/_jsxDEV(TaskDetailsCard, {\n          taskObj: taskObj,\n          detailsHeader: utils.string.t('claims.processing.taskDetails')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, this), isPurchasedCurrencyRequired && /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased'), ' ', '? :', '   ', '*'),\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 133,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 132,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'), \": \"),\n            align: \"left\",\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'sanctionsCheckState')), {}, {\n            control: control\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 11\n      }, this), !isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TaskCheckList, {\n        task: taskObj,\n        currencyPurchasedValue: currencyPurchasedValue,\n        isCurrencyChanged: isCurrencyChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 158,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && (taskObj === null || taskObj === void 0 ? void 0 : taskObj.status) !== utils.string.t('claims.claimRefTasks.status.completed') && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.gridContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.nextActionBtn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Close\",\n            type: \"submit\",\n            onClick: handlers.handleClose,\n            disabled: !sanctionsCheckState,\n            nestedClasses: {\n              btn: classnames(classes.cancel)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 70,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 69,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskDetailsView, \"GE1Qq6kgnGhAUQdXoJpBbHpcvlY=\", false, function () {\n  return [useSelector];\n});\n\n_c = TaskDetailsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetailsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TaskDetails.view.js"],"names":["React","useState","useEffect","useSelector","PropTypes","moment","classnames","isEmpty","utils","Layout","FormGrid","FormRadio","Button","FormLabel","TableToolbar","styles","RowDetails","TaskCheckList","config","ADVICE_AND_SETTLEMENT","selectSancCheckAssociatedTask","SANCTIONS_CHECK_KEY","TaskDetailsCard","makeStyles","Typography","Box","Grid","Card","CardHeader","CardContent","TaskDetailsView","prototype","taskObj","object","isRequired","fields","array","currencyPurchasedValue","string","sanctionsCheckState","control","currencyValue","handlers","shape","setCurrencyValue","func","handleClose","setStatusType","isPurchasedCurrencyRequired","setIsPurchasedCurrencyRequired","isCurrencyChanged","setIsCurrencyChanged","classes","name","associatedTask","detailsHeader","taskDefKey","t","isTaskSanctionsCheck","setApprovalStatus","wrapper","root","taskSnapshot","cardHeader","title","cardContent","details","processRef","policyRef","lossFromDate","format","ui","date","text","insured","lossDetails","tableToolbar","viewLabel","form","getFieldProps","status","gridContainer","nextActionBtn","btn","cancel"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Layout, FormGrid, FormRadio, Button, FormLabel, TableToolbar } from 'components';\r\nimport styles from './TaskDetails.styles';\r\nimport { RowDetails, TaskCheckList } from 'modules';\r\nimport config from 'config';\r\nimport { ADVICE_AND_SETTLEMENT } from 'consts';\r\nimport { selectSancCheckAssociatedTask } from 'stores';\r\nimport { SANCTIONS_CHECK_KEY } from 'consts';\r\nimport { TaskDetailsCard } from './TaskDetailsCard';\r\n\r\n//mui\r\nimport { makeStyles, Typography, Box, Grid, Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nTaskDetailsView.prototype = {\r\n  taskObj: PropTypes.object.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  currencyPurchasedValue: PropTypes.string.isRequired,\r\n  sanctionsCheckState: PropTypes.string,\r\n  control: PropTypes.object,\r\n  currencyValue: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    setCurrencyValue: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func,\r\n    setStatusType: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function TaskDetailsView({ taskObj, fields, currencyPurchasedValue, sanctionsCheckState, control, currencyValue, handlers }) {\r\n  const [isPurchasedCurrencyRequired, setIsPurchasedCurrencyRequired] = useState(false);\r\n  const [isCurrencyChanged, setIsCurrencyChanged] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n  const associatedTask = useSelector(selectSancCheckAssociatedTask);\r\n  const detailsHeader =\r\n    taskObj?.taskDefKey === SANCTIONS_CHECK_KEY\r\n      ? utils.string.t('claims.processing.taskDetailsAssociated')\r\n      : utils.string.t('claims.processing.taskDetails');\r\n  const isTaskSanctionsCheck = taskObj?.taskDefKey === SANCTIONS_CHECK_KEY;\r\n\r\n  useEffect(() => {\r\n    if (currencyPurchasedValue !== currencyValue) {\r\n      if (taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT) {\r\n        setIsCurrencyChanged(true);\r\n      }\r\n      handlers.setCurrencyValue(currencyPurchasedValue);\r\n    }\r\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsPurchasedCurrencyRequired(taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT ? true : false);\r\n  }, [taskObj]);\r\n\r\n  useEffect(() => {\r\n    if (sanctionsCheckState) {\r\n      handlers.setApprovalStatus(sanctionsCheckState);\r\n    }\r\n  }, [sanctionsCheckState]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (isTaskSanctionsCheck && isEmpty(associatedTask)) return null;\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Layout main padding>\r\n        <Card className={classes.root}>\r\n          <div className={classes.taskSnapshot}>\r\n            <CardHeader\r\n              className={classes.cardHeader}\r\n              title={\r\n                <Grid container justify=\"space-between\" alignItems=\"center\">\r\n                  <Grid item>\r\n                    <Grid container direction=\"row\">\r\n                      <Grid item>\r\n                        <Typography variant=\"body2\" className={classes.title}>\r\n                          {utils.string.t('claims.lossInformation.title')}\r\n                        </Typography>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Grid>\r\n              }\r\n            />\r\n            <CardContent variant=\"body2\" className={classes.cardContent}>\r\n              <Box>\r\n                <div className={classes.details}>\r\n                  <Box>\r\n                    <RowDetails\r\n                      title={utils.string.t('claims.processing.taskDetailsLabels.claimRef')}\r\n                      details={taskObj?.processRef}\r\n                      textAlign=\"right\"\r\n                    />\r\n                    <RowDetails\r\n                      title={utils.string.t('claims.processing.taskDetailsLabels.policyRef')}\r\n                      details={taskObj?.policyRef}\r\n                      textAlign=\"right\"\r\n                    />\r\n                  </Box>\r\n                  <Box>\r\n                    <RowDetails\r\n                      title={utils.string.t('claims.processing.taskDetailsLabels.lossDate')}\r\n                      details={taskObj?.lossFromDate && moment(taskObj?.lossFromDate).format(config.ui.format.date.text)}\r\n                      textAlign=\"right\"\r\n                    />\r\n                    <RowDetails\r\n                      title={utils.string.t('claims.processing.taskDetailsLabels.insured')}\r\n                      details={taskObj?.insured}\r\n                      textAlign=\"right\"\r\n                    />\r\n                  </Box>\r\n                  <Box>\r\n                    <RowDetails\r\n                      title={utils.string.t('claims.processing.taskDetailsLabels.lossDetails')}\r\n                      details={taskObj?.lossDetails}\r\n                      textAlign=\"right\"\r\n                    />\r\n                  </Box>\r\n                </div>\r\n              </Box>\r\n            </CardContent>\r\n          </div>\r\n          {isTaskSanctionsCheck && <TaskDetailsCard taskObj={associatedTask} detailsHeader={detailsHeader} />}\r\n          <TaskDetailsCard taskObj={taskObj} detailsHeader={utils.string.t('claims.processing.taskDetails')} />\r\n        </Card>\r\n        {isPurchasedCurrencyRequired && (\r\n          <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased')}${' '}${'? :'}${'   '}${'*'}`}\r\n                nestedClasses={{ root: classes.viewLabel }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)} />\r\n            </FormGrid>\r\n          </TableToolbar>\r\n        )}\r\n        {isTaskSanctionsCheck && (\r\n          <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus')}: `}\r\n                align=\"left\"\r\n                nestedClasses={{ root: classes.viewLabel }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'sanctionsCheckState')} control={control} />\r\n            </FormGrid>\r\n          </TableToolbar>\r\n        )}\r\n        {!isTaskSanctionsCheck && (\r\n          <TaskCheckList task={taskObj} currencyPurchasedValue={currencyPurchasedValue} isCurrencyChanged={isCurrencyChanged} />\r\n        )}\r\n        {isTaskSanctionsCheck && taskObj?.status !== utils.string.t('claims.claimRefTasks.status.completed') && (\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item className={classes.nextActionBtn}>\r\n              <Button\r\n                text=\"Close\"\r\n                type=\"submit\"\r\n                onClick={handlers.handleClose}\r\n                disabled={!sanctionsCheckState}\r\n                nestedClasses={{ btn: classnames(classes.cancel) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}