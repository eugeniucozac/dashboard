{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport * as utils from 'utils';\nexport var resetMarket = function resetMarket() {\n  return function (dispatch) {\n    dispatch({\n      type: 'MARKET_RESET'\n    });\n  };\n}; // policies\n\nexport var selectPolicyMarket = function selectPolicyMarket(marketId) {\n  return function (dispatch, getState) {\n    var policies = get(getState(), 'placement.selected.policies', []) || [];\n    var market = utils.policies.getMarketById(policies, marketId);\n    dispatch({\n      type: 'MARKET_POLICY_SELECT',\n      payload: _objectSpread({}, market)\n    });\n  };\n};\nexport var updateSelectedPolicyMarket = function updateSelectedPolicyMarket() {\n  return function (dispatch, getState) {\n    var policies = get(getState(), 'placement.selected.policies', []) || [];\n    var marketId = get(getState(), 'market.selected.id');\n    var market = utils.policies.getMarketById(policies, marketId);\n    dispatch({\n      type: 'MARKET_POLICY_SELECT',\n      payload: market\n    });\n  };\n}; // layers\n\nexport var selectLayerMarket = function selectLayerMarket(marketId) {\n  return function (dispatch, getState) {\n    var layers = get(getState(), 'placement.selected.layers', []) || [];\n    var market = utils.layers.getMarketById(layers, marketId);\n    dispatch({\n      type: 'MARKET_LAYER_SELECT',\n      payload: _objectSpread({}, market)\n    });\n  };\n};\nexport var updateSelectedLayerMarket = function updateSelectedLayerMarket() {\n  return function (dispatch, getState) {\n    var layers = get(getState(), 'placement.selected.layers', []) || [];\n    var marketId = get(getState(), 'market.selected.id');\n    var market = utils.layers.getMarketById(layers, marketId);\n    dispatch({\n      type: 'MARKET_LAYER_SELECT',\n      payload: market\n    });\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/market/market.actions.js"],"names":["get","utils","resetMarket","dispatch","type","selectPolicyMarket","marketId","getState","policies","market","getMarketById","payload","updateSelectedPolicyMarket","selectLayerMarket","layers","updateSelectedLayerMarket"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,YAAhB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAc;AAC7CA,IAAAA,QAAQ,CAAC;AAAEC,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAR;AACD,GAF0B;AAAA,CAApB,C,CAIP;;AACA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,QAAD;AAAA,SAAc,UAACH,QAAD,EAAWI,QAAX,EAAwB;AACtE,QAAMC,QAAQ,GAAGR,GAAG,CAACO,QAAQ,EAAT,EAAa,6BAAb,EAA4C,EAA5C,CAAH,IAAsD,EAAvE;AACA,QAAME,MAAM,GAAGR,KAAK,CAACO,QAAN,CAAeE,aAAf,CAA6BF,QAA7B,EAAuCF,QAAvC,CAAf;AAEAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,sBADC;AAEPO,MAAAA,OAAO,oBACFF,MADE;AAFA,KAAD,CAAR;AAMD,GAViC;AAAA,CAA3B;AAYP,OAAO,IAAMG,0BAA0B,GAAG,SAA7BA,0BAA6B;AAAA,SAAM,UAACT,QAAD,EAAWI,QAAX,EAAwB;AACtE,QAAMC,QAAQ,GAAGR,GAAG,CAACO,QAAQ,EAAT,EAAa,6BAAb,EAA4C,EAA5C,CAAH,IAAsD,EAAvE;AACA,QAAMD,QAAQ,GAAGN,GAAG,CAACO,QAAQ,EAAT,EAAa,oBAAb,CAApB;AACA,QAAME,MAAM,GAAGR,KAAK,CAACO,QAAN,CAAeE,aAAf,CAA6BF,QAA7B,EAAuCF,QAAvC,CAAf;AAEAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,sBADC;AAEPO,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATyC;AAAA,CAAnC,C,CAWP;;AACA,OAAO,IAAMI,iBAAiB,GAAG,SAApBA,iBAAoB,CAACP,QAAD;AAAA,SAAc,UAACH,QAAD,EAAWI,QAAX,EAAwB;AACrE,QAAMO,MAAM,GAAGd,GAAG,CAACO,QAAQ,EAAT,EAAa,2BAAb,EAA0C,EAA1C,CAAH,IAAoD,EAAnE;AACA,QAAME,MAAM,GAAGR,KAAK,CAACa,MAAN,CAAaJ,aAAb,CAA2BI,MAA3B,EAAmCR,QAAnC,CAAf;AAEAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,qBADC;AAEPO,MAAAA,OAAO,oBACFF,MADE;AAFA,KAAD,CAAR;AAMD,GAVgC;AAAA,CAA1B;AAYP,OAAO,IAAMM,yBAAyB,GAAG,SAA5BA,yBAA4B;AAAA,SAAM,UAACZ,QAAD,EAAWI,QAAX,EAAwB;AACrE,QAAMO,MAAM,GAAGd,GAAG,CAACO,QAAQ,EAAT,EAAa,2BAAb,EAA0C,EAA1C,CAAH,IAAoD,EAAnE;AACA,QAAMD,QAAQ,GAAGN,GAAG,CAACO,QAAQ,EAAT,EAAa,oBAAb,CAApB;AACA,QAAME,MAAM,GAAGR,KAAK,CAACa,MAAN,CAAaJ,aAAb,CAA2BI,MAA3B,EAAmCR,QAAnC,CAAf;AAEAH,IAAAA,QAAQ,CAAC;AACPC,MAAAA,IAAI,EAAE,qBADC;AAEPO,MAAAA,OAAO,EAAEF;AAFF,KAAD,CAAR;AAID,GATwC;AAAA,CAAlC","sourcesContent":["import get from 'lodash/get';\r\nimport * as utils from 'utils';\r\n\r\nexport const resetMarket = () => (dispatch) => {\r\n  dispatch({ type: 'MARKET_RESET' });\r\n};\r\n\r\n// policies\r\nexport const selectPolicyMarket = (marketId) => (dispatch, getState) => {\r\n  const policies = get(getState(), 'placement.selected.policies', []) || [];\r\n  const market = utils.policies.getMarketById(policies, marketId);\r\n\r\n  dispatch({\r\n    type: 'MARKET_POLICY_SELECT',\r\n    payload: {\r\n      ...market,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateSelectedPolicyMarket = () => (dispatch, getState) => {\r\n  const policies = get(getState(), 'placement.selected.policies', []) || [];\r\n  const marketId = get(getState(), 'market.selected.id');\r\n  const market = utils.policies.getMarketById(policies, marketId);\r\n\r\n  dispatch({\r\n    type: 'MARKET_POLICY_SELECT',\r\n    payload: market,\r\n  });\r\n};\r\n\r\n// layers\r\nexport const selectLayerMarket = (marketId) => (dispatch, getState) => {\r\n  const layers = get(getState(), 'placement.selected.layers', []) || [];\r\n  const market = utils.layers.getMarketById(layers, marketId);\r\n\r\n  dispatch({\r\n    type: 'MARKET_LAYER_SELECT',\r\n    payload: {\r\n      ...market,\r\n    },\r\n  });\r\n};\r\n\r\nexport const updateSelectedLayerMarket = () => (dispatch, getState) => {\r\n  const layers = get(getState(), 'placement.selected.layers', []) || [];\r\n  const marketId = get(getState(), 'market.selected.id');\r\n  const market = utils.layers.getMarketById(layers, marketId);\r\n\r\n  dispatch({\r\n    type: 'MARKET_LAYER_SELECT',\r\n    payload: market,\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}