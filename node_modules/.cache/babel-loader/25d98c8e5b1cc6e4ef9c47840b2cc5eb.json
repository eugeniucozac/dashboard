{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, enqueueNotification, storeProcessingInstruction } from 'stores';\nexport var initiateCase = function initiateCase(instruction) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var id = instruction.id;\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.initiateCase'\n    };\n    dispatch(initiateCaseRequest(id));\n\n    if (!id) {\n      dispatch(initiateCaseFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing instruction id'\n      })));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: \"instruction/initiateCase/\".concat(id),\n      data: instruction\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var instruction = data.data;\n      dispatch(initiateCaseSuccess(instruction));\n      dispatch(storeProcessingInstruction(instruction));\n      dispatch(enqueueNotification('processingInstructions.authorisations.caseInitiation', 'success'));\n      return instruction;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (processingInstructions.initiateCase)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(initiateCaseFailure(err));\n      return err;\n    });\n  };\n};\nexport var initiateCaseRequest = function initiateCaseRequest(payload) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_REQUEST',\n    payload: payload\n  };\n};\nexport var initiateCaseSuccess = function initiateCaseSuccess(responseData) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_SUCCESS',\n    payload: responseData\n  };\n};\nexport var initiateCaseFailure = function initiateCaseFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.initiateCase.js"],"names":["utils","authLogout","enqueueNotification","storeProcessingInstruction","initiateCase","instruction","dispatch","getState","auth","user","endpoint","config","vars","id","defaultError","file","initiateCaseRequest","initiateCaseFailure","message","api","post","token","accessToken","ppService","path","data","then","response","handleResponse","json","handleNewData","initiateCaseSuccess","catch","err","handleError","handleUnauthorized","payload","type","responseData","error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,0BAA1C,QAA4E,QAA5E;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,WAAD;AAAA,SAAiB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACnE;AADmE,oBAEVA,QAAQ,EAFE;AAAA,QAEnDC,IAFmD,aAE3DC,IAF2D,CAEnDD,IAFmD;AAAA,QAEzBE,QAFyB,aAE3CC,MAF2C,CAEjCC,IAFiC,CAEzBF,QAFyB;;AAAA,QAG3DG,EAH2D,GAGpDR,WAHoD,CAG3DQ,EAH2D;AAInE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAT,IAAAA,QAAQ,CAACU,mBAAmB,CAACH,EAAD,CAApB,CAAR;;AAEA,QAAI,CAACA,EAAL,EAAS;AACPP,MAAAA,QAAQ,CAACW,mBAAmB,iCAAMH,YAAN;AAAoBI,QAAAA,OAAO,EAAE;AAA7B,SAApB,CAAR;AACA;AACD;;AACD,WAAOlB,KAAK,CAACmB,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEb,IAAI,CAACc,WADR;AAEJZ,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,SAFf;AAGJC,MAAAA,IAAI,qCAA8BX,EAA9B,CAHA;AAIJY,MAAAA,IAAI,EAAEpB;AAJF,KADD,EAOJqB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAc3B,KAAK,CAACmB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU7B,KAAK,CAACmB,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACd,UAAMpB,WAAW,GAAGoB,IAAI,CAACA,IAAzB;AACAnB,MAAAA,QAAQ,CAACyB,mBAAmB,CAAC1B,WAAD,CAApB,CAAR;AACAC,MAAAA,QAAQ,CAACH,0BAA0B,CAACE,WAAD,CAA3B,CAAR;AACAC,MAAAA,QAAQ,CAACJ,mBAAmB,CAAC,sDAAD,EAAyD,SAAzD,CAApB,CAAR;AACA,aAAOG,WAAP;AACD,KAfI,EAgBJ2B,KAhBI,CAgBE,UAACC,GAAD,EAAS;AACdjC,MAAAA,KAAK,CAACmB,GAAN,CAAUe,WAAV,CAAsBD,GAAtB,kCAAgCnB,YAAhC;AAA8CI,QAAAA,OAAO,EAAE;AAAvD;AACAlB,MAAAA,KAAK,CAACmB,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkC3B,QAAlC,EAA4CL,UAA5C;AACAK,MAAAA,QAAQ,CAACW,mBAAmB,CAACgB,GAAD,CAApB,CAAR;AACA,aAAOA,GAAP;AACD,KArBI,CAAP;AAsBD,GApC2B;AAAA,CAArB;AAsCP,OAAO,IAAMjB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACoB,OAAD,EAAa;AAC9C,SAAO;AACLC,IAAAA,IAAI,EAAE,+CADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAML,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACO,YAAD,EAAkB;AACnD,SAAO;AACLD,IAAAA,IAAI,EAAE,+CADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMrB,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACsB,KAAD,EAAW;AAC5C,SAAO;AACLF,IAAAA,IAAI,EAAE,+CADD;AAELD,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, enqueueNotification, storeProcessingInstruction } from 'stores';\r\n\r\nexport const initiateCase = (instruction) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n  const { id } = instruction;\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.initiateCase',\r\n  };\r\n\r\n  dispatch(initiateCaseRequest(id));\r\n\r\n  if (!id) {\r\n    dispatch(initiateCaseFailure({ ...defaultError, message: 'Missing instruction id' }));\r\n    return;\r\n  }\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: `instruction/initiateCase/${id}`,\r\n      data: instruction,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      const instruction = data.data;\r\n      dispatch(initiateCaseSuccess(instruction));\r\n      dispatch(storeProcessingInstruction(instruction));\r\n      dispatch(enqueueNotification('processingInstructions.authorisations.caseInitiation', 'success'));\r\n      return instruction;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (processingInstructions.initiateCase)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(initiateCaseFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const initiateCaseRequest = (payload) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const initiateCaseSuccess = (responseData) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const initiateCaseFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_INITIATE_CASE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}