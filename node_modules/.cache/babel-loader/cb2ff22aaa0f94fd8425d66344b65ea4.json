{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTab.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ClaimsTab.styles';\nimport * as utils from 'utils';\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\nimport { ClaimsTabTable } from './ClaimsTabTable'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { useMedia } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsTabView.propTypes = {\n  claims: PropTypes.array.isRequired,\n  sort: PropTypes.func.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  viewFields: PropTypes.array.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  resetKey: PropTypes.number,\n  claimsType: PropTypes.string.isRequired,\n  control: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchFilter: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    toggleColumn: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    onSelectSearchBy: PropTypes.func.isRequired\n  }).isRequired,\n  searchTerm: PropTypes.string,\n  searchText: PropTypes.string\n};\nexport default function ClaimsTabView(_ref) {\n  _s();\n\n  var claims = _ref.claims,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      viewFields = _ref.viewFields,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      claimsType = _ref.claimsType,\n      resetKey = _ref.resetKey,\n      control = _ref.control,\n      handlers = _ref.handlers,\n      searchTerm = _ref.searchTerm,\n      searchText = _ref.searchText;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTab'\n  })({\n    isMobile: media.mobile\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      \"data-testid\": \"claims-tab\",\n      children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(TableActions, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('app.view'), \": \"),\n                align: \"left\",\n                nestedClasses: {\n                  root: classes.viewLabel\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 23\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'views')), {}, {\n                control: control\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 23\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 19\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n          search: true,\n          searchBy: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.filterBox,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'searchBy')), {}, {\n              control: control,\n              nestedClasses: {\n                root: classes.selectAutocomplete\n              },\n              callback: function callback(event, obj) {\n                handlers.onSelectSearchBy(obj === null || obj === void 0 ? void 0 : obj.value, obj === null || obj === void 0 ? void 0 : obj.label);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 23\n          }, this),\n          searchPlaceholder: utils.string.t('claims.processing.searchPlaceHolder'),\n          text: \"Test\",\n          searchMinChars: 4,\n          nestedClasses: {\n            searchMaxWidth: classes.searchMaxWidth\n          },\n          filtersArray: tableFilterFields,\n          isFetchingFilters: isFetchingFilters,\n          columns: true,\n          clearFilterKey: resetKey,\n          handlers: {\n            onSearch: handlers.search,\n            onResetFilter: handlers.resetFilter,\n            onFilter: handlers.searchFilter,\n            onToggleColumn: handlers.toggleColumn,\n            onResetSearch: handlers.resetSearch\n          },\n          searchTerm: searchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 13\n      }, this), /*#__PURE__*/_jsxDEV(ClaimsTabTable, {\n        claims: claims,\n        cols: columnsArray,\n        columnProps: columnProps,\n        sort: sort,\n        handlers: {\n          changePage: handlers.changePage,\n          changeRowsPerPage: handlers.changeRowsPerPage,\n          sort: handlers.sort\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 15\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 13\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsTabView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = ClaimsTabView;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTab.view.js"],"names":["React","PropTypes","styles","utils","TableActions","TableFilters","TableToolbar","FormRadio","FormLabel","FormAutocompleteMui","ClaimsTabTable","makeStyles","Box","Grid","useMedia","ClaimsTabView","propTypes","claims","array","isRequired","sort","func","columnsArray","columnProps","viewFields","tableFilterFields","isFetchingFilters","bool","resetKey","number","claimsType","string","control","object","handlers","shape","search","searchFilter","resetFilter","changePage","changeRowsPerPage","toggleColumn","resetSearch","onSelectSearchBy","searchTerm","searchText","media","classes","name","isMobile","mobile","t","root","viewLabel","form","getFieldProps","filterBox","selectAutocomplete","event","obj","value","label","searchMaxWidth","onSearch","onResetFilter","onFilter","onToggleColumn","onResetSearch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ClaimsTab.styles';\r\nimport * as utils from 'utils';\r\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\r\nimport { ClaimsTabTable } from './ClaimsTabTable';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nimport { useMedia } from 'hooks';\r\n\r\nClaimsTabView.propTypes = {\r\n  claims: PropTypes.array.isRequired,\r\n  sort: PropTypes.func.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  viewFields: PropTypes.array.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  resetKey: PropTypes.number,\r\n  claimsType: PropTypes.string.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    searchFilter: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    onSelectSearchBy: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  searchTerm: PropTypes.string,\r\n  searchText: PropTypes.string\r\n}\r\n\r\nexport default function ClaimsTabView({\r\n    claims,\r\n    sort,\r\n    columnsArray,\r\n    columnProps,\r\n    viewFields,\r\n    tableFilterFields,\r\n    isFetchingFilters,\r\n    claimsType,\r\n    resetKey,\r\n    control,\r\n    handlers,\r\n    searchTerm,\r\n    searchText\r\n}){\r\n    const media = useMedia();\r\n    const classes = makeStyles(styles, { name: 'ClaimsTab' })({ isMobile: media.mobile });\r\n    \r\n    return (\r\n        <>\r\n            <Box mt={3} data-testid=\"claims-tab\">\r\n            <TableToolbar>\r\n              <TableActions>\r\n                  <Grid container>\r\n                      <Grid item>\r\n                      <FormLabel label={`${utils.string.t('app.view')}: `} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n                      </Grid>\r\n                      <Grid item>\r\n                      <FormRadio {...utils.form.getFieldProps(viewFields, 'views')} control={control} />\r\n                      </Grid>\r\n                  </Grid>\r\n              </TableActions>\r\n              <TableFilters\r\n                  search\r\n                  searchBy={\r\n                      <Box className={classes.filterBox}>\r\n                        <FormAutocompleteMui\r\n                            {...utils.form.getFieldProps(viewFields, 'searchBy')}\r\n                            control={control}\r\n                            nestedClasses={{ root: classes.selectAutocomplete }}\r\n                            callback={(event, obj) => {\r\n                            handlers.onSelectSearchBy(obj?.value, obj?.label);\r\n                            }}\r\n                        />\r\n                      </Box>\r\n                  }\r\n                  searchPlaceholder={utils.string.t('claims.processing.searchPlaceHolder')}\r\n                  text='Test'\r\n                  searchMinChars={4}\r\n                  nestedClasses={{ searchMaxWidth: classes.searchMaxWidth }}\r\n                  filtersArray={tableFilterFields}\r\n                  isFetchingFilters={isFetchingFilters}\r\n                  columns\r\n                  clearFilterKey={resetKey}\r\n                  handlers={{\r\n                    onSearch: handlers.search,\r\n                    onResetFilter: handlers.resetFilter,\r\n                    onFilter:  handlers.searchFilter,\r\n                    onToggleColumn: handlers.toggleColumn,\r\n                    onResetSearch: handlers.resetSearch,\r\n                  }}\r\n                  searchTerm={searchTerm}\r\n                />\r\n              </TableToolbar>\r\n              <ClaimsTabTable\r\n                    claims={claims}\r\n                    cols={columnsArray}\r\n                    columnProps={columnProps}\r\n                    sort={sort}\r\n                    handlers={{\r\n                    changePage: handlers.changePage,\r\n                    changeRowsPerPage: handlers.changeRowsPerPage,\r\n                    sort: handlers.sort,\r\n                    }}\r\n              />\r\n            </Box>\r\n        </>\r\n    );\r\n};"]},"metadata":{},"sourceType":"module"}