{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\UpdateStatus\\\\UpdateStatus.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { getStatuses, hideModal, selectClaimsStatuses, editStatus, showModal, selectClaimStatusObj } from 'stores';\nimport { UpdateStatusView } from './UpdateStatus.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function UpdateStatus(props) {\n  _s();\n\n  var _props$claimStatusID, _props$claimStatusID2, _props$claimStatusID3;\n\n  var dispatch = useDispatch();\n  var statuses = useSelector(selectClaimsStatuses);\n  var claimsStatusObj = useSelector(selectClaimStatusObj);\n  useEffect(function () {\n    dispatch(getStatuses());\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  if (((_props$claimStatusID = props.claimStatusID) === null || _props$claimStatusID === void 0 ? void 0 : _props$claimStatusID.toString()) === claimsStatusObj.Failed) {\n    statuses = statuses.filter(function (status) {\n      var _status$id, _status$id2;\n\n      return ((_status$id = status.id) === null || _status$id === void 0 ? void 0 : _status$id.toString()) === claimsStatusObj.Cancel || ((_status$id2 = status.id) === null || _status$id2 === void 0 ? void 0 : _status$id2.toString()) === claimsStatusObj.DRAFT;\n    });\n  } else if (((_props$claimStatusID2 = props.claimStatusID) === null || _props$claimStatusID2 === void 0 ? void 0 : _props$claimStatusID2.toString()) === claimsStatusObj.DRAFT) {\n    statuses = statuses.filter(function (status) {\n      var _status$id3;\n\n      return ((_status$id3 = status.id) === null || _status$id3 === void 0 ? void 0 : _status$id3.toString()) === claimsStatusObj.Cancel;\n    });\n  } else if (((_props$claimStatusID3 = props.claimStatusID) === null || _props$claimStatusID3 === void 0 ? void 0 : _props$claimStatusID3.toString()) === claimsStatusObj.Cancel) {\n    statuses = statuses.filter(function (status) {\n      var _status$id4;\n\n      return ((_status$id4 = status.id) === null || _status$id4 === void 0 ? void 0 : _status$id4.toString()) === claimsStatusObj.DRAFT;\n    });\n  }\n\n  var fields = [{\n    name: 'claimStatusId',\n    value: props.claimStatusID,\n    type: 'select',\n    optionKey: 'id',\n    optionLabel: 'name',\n    options: statuses,\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'statusRemarks',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().max(255, utils.string.t('claims.updateStatus.validation.remarksMaxLength')).required(utils.string.t('claims.updateStatus.validation.remarks')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 255\n      },\n      multiline: true,\n      rows: 4,\n      rowsMax: 4,\n      'data-testid': 'statusRemarks'\n    }\n  }];\n\n  var confirmCancelHandler = function confirmCancelHandler() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('claims.modals.confirm.title'),\n        subtitle: utils.string.t('claims.modals.confirm.subtitle'),\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          cancelLabel: utils.string.t('app.no'),\n          confirmLabel: utils.string.t('app.yes'),\n          submitHandler: function submitHandler() {\n            dispatch(hideModal());\n          },\n          cancelHandler: function cancelHandler() {}\n        }\n      }\n    }));\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.update'),\n    handler: function handler(values) {\n      return dispatch(editStatus(values, props.claimID));\n    }\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      return dispatch(hideModal());\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(UpdateStatusView, {\n    actions: actions,\n    fields: fields,\n    confirmCancelHandler: confirmCancelHandler\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 94,\n    columnNumber: 10\n  }, this);\n}\n\n_s(UpdateStatus, \"bMacOXjtlUfSQD2tY2CF4c+jECM=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = UpdateStatus;\n\nvar _c;\n\n$RefreshReg$(_c, \"UpdateStatus\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/UpdateStatus/UpdateStatus.js"],"names":["React","useEffect","useDispatch","useSelector","Yup","getStatuses","hideModal","selectClaimsStatuses","editStatus","showModal","selectClaimStatusObj","UpdateStatusView","utils","UpdateStatus","props","dispatch","statuses","claimsStatusObj","claimStatusID","toString","Failed","filter","status","id","Cancel","DRAFT","fields","name","value","type","optionKey","optionLabel","options","validation","string","required","t","max","muiComponentProps","inputProps","maxLength","multiline","rows","rowsMax","confirmCancelHandler","component","title","subtitle","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","submitHandler","cancelHandler","actions","label","handler","values","claimID"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { getStatuses, hideModal, selectClaimsStatuses, editStatus, showModal, selectClaimStatusObj } from 'stores';\r\nimport { UpdateStatusView } from './UpdateStatus.view';\r\nimport * as utils from 'utils';\r\n\r\nexport default function UpdateStatus(props) {\r\n  const dispatch = useDispatch();\r\n  let statuses = useSelector(selectClaimsStatuses);\r\n  const claimsStatusObj = useSelector(selectClaimStatusObj);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getStatuses());\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  if (props.claimStatusID?.toString() === claimsStatusObj.Failed) {\r\n    statuses = statuses.filter(\r\n      (status) => status.id?.toString() === claimsStatusObj.Cancel || status.id?.toString() === claimsStatusObj.DRAFT\r\n    );\r\n  } else if (props.claimStatusID?.toString() === claimsStatusObj.DRAFT) {\r\n    statuses = statuses.filter((status) => status.id?.toString() === claimsStatusObj.Cancel);\r\n  } else if (props.claimStatusID?.toString() === claimsStatusObj.Cancel) {\r\n    statuses = statuses.filter((status) => status.id?.toString() === claimsStatusObj.DRAFT);\r\n  }\r\n\r\n  const fields = [\r\n    {\r\n      name: 'claimStatusId',\r\n      value: props.claimStatusID,\r\n      type: 'select',\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      options: statuses,\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'statusRemarks',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string()\r\n        .max(255, utils.string.t('claims.updateStatus.validation.remarksMaxLength'))\r\n        .required(utils.string.t('claims.updateStatus.validation.remarks')),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 255 },\r\n        multiline: true,\r\n        rows: 4,\r\n        rowsMax: 4,\r\n        'data-testid': 'statusRemarks',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const confirmCancelHandler = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('claims.modals.confirm.title'),\r\n          subtitle: utils.string.t('claims.modals.confirm.subtitle'),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            submitHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n            cancelHandler: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.update'),\r\n      handler: (values) => dispatch(editStatus(values, props.claimID)),\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => dispatch(hideModal()),\r\n    },\r\n  ];\r\n\r\n  return <UpdateStatusView actions={actions} fields={fields} confirmCancelHandler={confirmCancelHandler} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}