{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsDetails\\\\ProcessingInstructionsDetails.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport isEqual from 'lodash/isEqual';\nimport config from 'config';\nimport moment from 'moment'; // app\n\nimport ProcessingInstructionsDetailsView from './ProcessingInstructionsDetails.view';\nimport { selectUser, showModal, updateProcessingInstruction, removePremiumTaxSignedLinesDocument, addLoader, storeProcessingInstructionDocuments, viewDocumentsDownload, setRiskRefsUploadWizardExcelExtract, setRiskRefsUploadWizardHeaderMap, submitExcelUploadedRiskRefs, updatePiFinancialCheckList, savePIRetainedBrokerageAmountData } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsDetails.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired,\n    next: PropTypes.func.isRequired\n  }).isRequired,\n  childRef: PropTypes.object.isRequired\n};\nexport default function ProcessingInstructionsDetails(_ref) {\n  _s();\n\n  var _instruction$riskRefe, _instruction$details, _instruction$details2, _instruction$details3, _instruction$details4, _instruction$details5, _instruction$details6, _instruction$details7, _instruction$details8;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      childRef = _ref.childRef;\n  var dispatch = useDispatch();\n  var user = useSelector(selectUser);\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {};\n  var getFinancialCheckListTableDetails = useSelector(function (state) {\n    return get(state, 'processingInstructions.financialCheckList');\n  }) || [];\n  var getRetainedBrokerageAmountList = useSelector(function (state) {\n    return get(state, 'processingInstructions.retainedBrokerageAmountList');\n  }) || [];\n  var excelRiskRefs = useSelector(function (state) {\n    return get(state, 'processingInstructions.excelRiskRefs');\n  }) || [];\n  var refDataCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  }) || [];\n  var referenceData = useSelector(function (state) {\n    return state.referenceData;\n  });\n  var headerMap = useSelector(function (state) {\n    return get(state, 'processingInstructions.headerMap');\n  }) || [];\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var userHasApproverAccess = utils.app.access.feature('processingInstructions.approverChecklist', ['create', 'update'], user);\n  var retainedBrokerageAmountData = utils.form.getSelectOptions('premiumCurrency', _objectSpread(_objectSpread({}, referenceData), {}, {\n    premiumCurrency: utils.processingInstructions.getRetainedBrokerageCurrencies()\n  }));\n\n  var _useState = useState(getFinancialCheckListTableDetails),\n      _useState2 = _slicedToArray(_useState, 2),\n      financialCheckListTable = _useState2[0],\n      setFinancialCheckListTable = _useState2[1];\n\n  var _useState3 = useState(getRetainedBrokerageAmountList),\n      _useState4 = _slicedToArray(_useState3, 2),\n      retainedBrokerageAmountList = _useState4[0],\n      setRetainedBrokerageAmountList = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      defaultValues = _useState6[0],\n      setDefaultValues = _useState6[1];\n\n  var fcDefaultTableData = (instruction === null || instruction === void 0 ? void 0 : instruction.financialChecklistDetails) || [];\n  var isCheckboxesEditable = userHasApproverAccess && isSubmittedAuthorisedSignatory;\n  var isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\n  var isReadOnly = !isEditable;\n  var leadRiskRef = instruction === null || instruction === void 0 ? void 0 : (_instruction$riskRefe = instruction.riskReferences) === null || _instruction$riskRefe === void 0 ? void 0 : _instruction$riskRefe.find(function (r) {\n    return r.leadPolicy;\n  });\n  var toggleOptions = [{\n    label: utils.string.t('app.yes'),\n    value: 1\n  }, {\n    label: utils.string.t('app.no'),\n    value: 0\n  }, {\n    label: utils.string.t('app.na'),\n    value: -1\n  }];\n  var fields = [{\n    name: 'highPriority',\n    type: 'checkbox',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.highPriority,\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'frontEndSendDocs',\n    type: 'checkbox',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details2 = instruction.details) === null || _instruction$details2 === void 0 ? void 0 : _instruction$details2.frontEndSendDocs,\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'premiumTaxCalculationSheetAttachedNumber',\n    type: 'toggle',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details3 = instruction.details) === null || _instruction$details3 === void 0 ? void 0 : _instruction$details3.premiumTaxCalculationSheetAttached,\n    options: toggleOptions,\n    buttonGroupProps: {\n      exclusive: true,\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'premiumTaxCalculationSheetAttachedCheckbox',\n    type: 'checkbox',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details4 = instruction.details) === null || _instruction$details4 === void 0 ? void 0 : _instruction$details4.premiumTaxAuthorisedSignatory,\n    disabled: !isCheckboxesEditable\n  }, {\n    name: 'signedLinesCalculationSheetAttachedNumber',\n    type: 'toggle',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details5 = instruction.details) === null || _instruction$details5 === void 0 ? void 0 : _instruction$details5.signedLinesCalculationSheetAttached,\n    options: toggleOptions,\n    buttonGroupProps: {\n      exclusive: true,\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'signedLinesCalculationSheetAttachedCheckbox',\n    type: 'checkbox',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details6 = instruction.details) === null || _instruction$details6 === void 0 ? void 0 : _instruction$details6.signedLinesAuthorisedSignatory,\n    disabled: !isCheckboxesEditable\n  }, {\n    name: 'financialGridCheckbox',\n    type: 'checkbox',\n    value: instruction === null || instruction === void 0 ? void 0 : (_instruction$details7 = instruction.details) === null || _instruction$details7 === void 0 ? void 0 : _instruction$details7.riskReferencesAuthorisedSignatory,\n    disabled: !isCheckboxesEditable\n  }, {\n    name: 'notes',\n    label: utils.string.t('processingInstructions.details.notes'),\n    type: 'textarea',\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details8 = instruction.details) === null || _instruction$details8 === void 0 ? void 0 : _instruction$details8.notes) || '',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 4000\n      },\n      multiline: true,\n      minRows: 4,\n      maxRows: 8,\n      disabled: isReadOnly\n    }\n  }];\n  var financialCheckListTableFields = {\n    arrayItemDef: [{\n      id: 'id',\n      name: 'id',\n      visible: false,\n      type: 'label',\n      value: '',\n      width: 10,\n      label: '',\n      visable: false\n    }, {\n      id: 'riskReference',\n      name: 'riskReference',\n      visible: true,\n      type: 'text',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.facilityReference'),\n      disabled: true\n    }, {\n      id: 'grossPremiumAmount',\n      name: 'grossPremiumAmount',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.grossPremium')\n    }, {\n      id: 'slipOrder',\n      name: 'slipOrder',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.slipOrder')\n    }, {\n      id: 'totalBrokerage',\n      name: 'totalBrokerage',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 100,\n      label: utils.string.t('processingInstructions.details.totalBrokerage')\n    }, {\n      id: 'clientDiscount',\n      name: 'clientDiscount',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.clientDiscount')\n    }, {\n      id: 'thirdPartyCommissionSharing',\n      visible: true,\n      name: 'thirdPartyCommissionSharing',\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.thirdPartyCommissionSharing')\n    }, {\n      id: 'thirdPartyName',\n      name: 'thirdPartyName',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'text',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.thirdParty')\n    }, {\n      id: 'pfInternalCommissionSharing',\n      name: 'pfInternalCommissionSharing',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.pfInternalCommissionSharing')\n    }, {\n      id: 'pfInternalDepartment',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'text',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.pfInternalDepartment')\n    }, {\n      id: 'retainedBrokerage',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.retainedBrokerage')\n    }, {\n      id: 'retainedBrokerageCurrencyCode',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'select',\n      displayName: 'retainedBrokerageCurrencyCodeName',\n      options: retainedBrokerageAmountList,\n      optionKey: 'id',\n      optionLabel: 'label',\n      value: constants.CURRENCY_USD,\n      width: 120,\n      label: utils.string.t('processingInstructions.details.retainedBrokerageAmount')\n    }, {\n      id: 'retainedBrokerageValue',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'retainedBrokeragelabel',\n      value: '',\n      width: 180,\n      label: ''\n    }, {\n      id: 'total',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'label',\n      value: '',\n      width: 80,\n      label: utils.string.t('processingInstructions.details.total')\n    }, {\n      id: 'fees',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 80,\n      label: utils.string.t('processingInstructions.details.fees')\n    }, {\n      id: 'otherDeductions',\n      name: 'otherDeductions',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'numericText',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.otherDeductions')\n    }, {\n      id: 'settlementCurrency',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'select',\n      displayName: 'settlementCurrencyName',\n      options: refDataCurrencies,\n      optionKey: 'currencyCodeID',\n      optionLabel: 'currencyCd',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.settlementCurrency')\n    }, {\n      id: 'paymentBasis',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'select',\n      displayName: 'paymentBasisName',\n      options: constants.PAYMENT_BASIS_OPTIONS,\n      optionKey: 'code',\n      optionLabel: 'name',\n      value: '',\n      width: 180,\n      label: utils.string.t('processingInstructions.details.paymentBasis')\n    }, {\n      id: 'ppwOrPpc',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'select',\n      displayName: 'ppwOrPpcName',\n      options: constants.PPW_PPC_OPTIONS,\n      optionKey: 'code',\n      optionLabel: 'name',\n      value: '',\n      width: 120,\n      label: utils.string.t('processingInstructions.details.ppwOrPPC')\n    }, {\n      id: 'ppwOrPpcDate',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'datepicker',\n      value: '',\n      width: 180,\n      format: config.ui.format.date.text,\n      label: utils.string.t('processingInstructions.details.ppwOrPPCDate')\n    }].concat(_toConsumableArray(!isReadOnly ? [{\n      id: 'copyAction',\n      visible: true,\n      ellipsis: true,\n      nowrap: false,\n      type: 'copyIcon',\n      value: '',\n      width: 80,\n      label: ''\n    }] : [])),\n    fieldData: []\n  }; // Remove the unnecessary properties from both default and updated fc arrays before comparing\n\n  var isTableGridEdited = !isEqual(fcDefaultTableData === null || fcDefaultTableData === void 0 ? void 0 : fcDefaultTableData.map(function (_ref2) {\n    var total = _ref2.total,\n        fcData = _objectWithoutProperties(_ref2, [\"total\"]);\n\n    return fcData;\n  }), financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.map(function (_ref3) {\n    var convertedBrokerage = _ref3.convertedBrokerage,\n        id = _ref3.id,\n        ppwOrPpcName = _ref3.ppwOrPpcName,\n        retainedBrokerageAmount = _ref3.retainedBrokerageAmount,\n        retainedBrokerageCurrencyCodeName = _ref3.retainedBrokerageCurrencyCodeName,\n        settlementCurrencyName = _ref3.settlementCurrencyName,\n        paymentBasisName = _ref3.paymentBasisName,\n        total = _ref3.total,\n        isRowSelected = _ref3.isRowSelected,\n        fcData = _objectWithoutProperties(_ref3, [\"convertedBrokerage\", \"id\", \"ppwOrPpcName\", \"retainedBrokerageAmount\", \"retainedBrokerageCurrencyCodeName\", \"settlementCurrencyName\", \"paymentBasisName\", \"total\", \"isRowSelected\"]);\n\n    return fcData;\n  }));\n\n  var handleSave = function handleSave() {\n    var _childRef$current, _childRef$current$pro;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current = childRef.current) === null || _childRef$current === void 0 ? void 0 : (_childRef$current$pro = _childRef$current.props) === null || _childRef$current$pro === void 0 ? void 0 : _childRef$current$pro.values) || {};\n\n    var updatedInstruction = _objectSpread(_objectSpread({}, instruction), {}, {\n      details: _objectSpread(_objectSpread({}, instruction.details), {}, {\n        highPriority: formValues.highPriority,\n        frontEndSendDocs: formValues.frontEndSendDocs,\n        notes: formValues.notes,\n        premiumTaxCalculationSheetAttached: formValues.premiumTaxCalculationSheetAttachedNumber,\n        premiumTaxAuthorisedSignatory: formValues.premiumTaxCalculationSheetAttachedCheckbox,\n        signedLinesCalculationSheetAttached: formValues.signedLinesCalculationSheetAttachedNumber,\n        signedLinesAuthorisedSignatory: formValues.signedLinesCalculationSheetAttachedCheckbox,\n        riskReferencesAuthorisedSignatory: formValues.financialGridCheckbox\n      }),\n      financialChecklistDetails: financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.map(function (riskRef) {\n        var isValidDate = moment(riskRef.ppwOrPpcDate).isValid();\n        var ppwOrPpcDate = isValidDate ? moment(riskRef.ppwOrPpcDate).format('YYYY-MM-DD') : '';\n        return {\n          instructionBrokerageDetailsId: riskRef.instructionBrokerageDetailsId,\n          riskReference: riskRef.riskReference,\n          grossPremiumAmount: riskRef.grossPremiumAmount,\n          slipOrder: riskRef.slipOrder,\n          totalBrokerage: riskRef.totalBrokerage,\n          clientDiscount: riskRef.clientDiscount,\n          thirdPartyCommissionSharing: riskRef.thirdPartyCommissionSharing,\n          thirdPartyName: riskRef.thirdPartyName,\n          pfInternalCommissionSharing: riskRef.pfInternalCommissionSharing,\n          pfInternalDepartment: riskRef.pfInternalDepartment,\n          retainedBrokerage: riskRef.retainedBrokerage,\n          retainedBrokerageCurrencyCode: riskRef.retainedBrokerageCurrencyCode,\n          fees: riskRef.fees,\n          otherDeductions: riskRef.otherDeductions,\n          settlementCurrency: riskRef.settlementCurrency,\n          paymentBasis: riskRef.paymentBasis,\n          ppwOrPpc: riskRef.ppwOrPpc,\n          ppwOrPpcDate: ppwOrPpcDate\n        };\n      })\n    });\n\n    setFinancialCheckListTable(function (prevState) {\n      return prevState.map(function (dd) {\n        return _objectSpread(_objectSpread({}, dd), {}, {\n          isRowSelected: false\n        });\n      });\n    });\n    dispatch(updateProcessingInstruction(updatedInstruction, formValues));\n  };\n\n  var handleCancel = function handleCancel() {\n    var _childRef$current2, _childRef$current2$pr, _instruction$financia;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current2 = childRef.current) === null || _childRef$current2 === void 0 ? void 0 : (_childRef$current2$pr = _childRef$current2.props) === null || _childRef$current2$pr === void 0 ? void 0 : _childRef$current2$pr.resetFunc;\n\n    if (utils.generic.isFunction(reset)) {\n      reset(defaultValues, {\n        keepDirty: false\n      });\n    }\n\n    var financialCheckListDBList = instruction === null || instruction === void 0 ? void 0 : (_instruction$financia = instruction.financialChecklistDetails) === null || _instruction$financia === void 0 ? void 0 : _instruction$financia.map(function (element, index) {\n      return _objectSpread(_objectSpread({}, element), {}, {\n        id: index\n      });\n    });\n    dispatch(updatePiFinancialCheckList(financialCheckListDBList));\n    setFinancialCheckListTable(financialCheckListDBList);\n  };\n\n  var handleUploadedDocument = function handleUploadedDocument(data, documentTypeKey) {\n    var _data$data;\n\n    var newFiles = data === null || data === void 0 ? void 0 : (_data$data = data.data) === null || _data$data === void 0 ? void 0 : _data$data.documentDto;\n    if (!utils.generic.isValidArray(newFiles)) return;\n    var newGxbDocs = newFiles.map(function (file) {\n      return _objectSpread(_objectSpread({}, file), {}, {\n        folderUuid: file === null || file === void 0 ? void 0 : file.folderUid,\n        name: file === null || file === void 0 ? void 0 : file.documentName,\n        path: file === null || file === void 0 ? void 0 : file.documentPath,\n        source: file === null || file === void 0 ? void 0 : file.documentSource,\n        typeId: file === null || file === void 0 ? void 0 : file.documentTypeId,\n        uuid: file === null || file === void 0 ? void 0 : file.documentUid\n      });\n    });\n\n    var updatedDocuments = _objectSpread(_objectSpread(_objectSpread({}, documents), documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piPremiumCalculation && {\n      premiumTaxDocument: newGxbDocs[0]\n    }), documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piMarketSigned && {\n      signedLinesDocument: newGxbDocs[0]\n    });\n\n    dispatch(storeProcessingInstructionDocuments(updatedDocuments));\n  };\n\n  var uploadPremiumTaxSignedLinesModal = function uploadPremiumTaxSignedLinesModal(documentTypeKey) {\n    return function (files) {\n      dispatch(addLoader('DmsUploadFiles'));\n      dispatch(showModal({\n        component: 'DMS_UPLOAD_FILES',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('dms.upload.modalItems.uploadDocuments'),\n          maxWidth: 'xl',\n          componentProps: {\n            files: files,\n            context: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\n            referenceId: Number(instruction === null || instruction === void 0 ? void 0 : instruction.id),\n            sourceId: Number(leadRiskRef === null || leadRiskRef === void 0 ? void 0 : leadRiskRef.xbInstanceId),\n            documentTypeKey: documentTypeKey,\n            postDmsDocumentsSuccess: function postDmsDocumentsSuccess(data) {\n              return handleUploadedDocument(data, documentTypeKey);\n            },\n            confirmLabel: utils.string.t('app.ok'),\n            cancelLabel: utils.string.t('app.goBack'),\n            confirmMessage: utils.string.t('processingInstructions.documentsWillNotBeSaved'),\n            buttonColors: {\n              confirm: 'secondary',\n              cancel: 'primary'\n            }\n          }\n        }\n      }));\n    };\n  };\n\n  var confirmRemoveDocumentModal = function confirmRemoveDocumentModal(file, removeDocumentType) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.checklist.warning.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: utils.string.t('processingInstructions.removeDocumentWarning'),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'primary'\n          },\n          submitHandler: function submitHandler() {\n            dispatch(removePremiumTaxSignedLinesDocument({\n              docIds: file === null || file === void 0 ? void 0 : file.documentId,\n              removeDocumentType: removeDocumentType,\n              documents: documents\n            }));\n          },\n          cancelHandler: function cancelHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var handleLinkDownload = function handleLinkDownload(file) {\n    dispatch(viewDocumentsDownload({\n      documentId: file === null || file === void 0 ? void 0 : file.documentId,\n      documentName: file === null || file === void 0 ? void 0 : file.name\n    }));\n  };\n\n  var uploadExcelData = function uploadExcelData() {\n    dispatch(showModal({\n      component: 'PASTE_FROM_EXCEL',\n      props: {\n        title: utils.string.t('processingInstructions.details.piDetailsExcelModal.title'),\n        fullWidth: true,\n        maxWidth: 'lg',\n        hideCompOnBlur: false,\n        componentProps: {\n          name: 'placement-overview',\n          headers: headerMap,\n          steps: 3,\n          isValidateHeadersMapping: true,\n          labels: {\n            step1: {\n              title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step1.title'),\n              hint: utils.string.t('processingInstructions.details.piDetailsExcelModal.step1.hint')\n            },\n            step2: {\n              title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step2.title'),\n              hint: utils.string.t('processingInstructions.details.piDetailsExcelModal.step2.hint')\n            },\n            step3: {\n              title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step3.title'),\n              hint: utils.string.t('')\n            }\n          },\n          handlers: {\n            extract: function extract(data) {\n              dispatch(setRiskRefsUploadWizardExcelExtract(data));\n            },\n            match: function match(data) {\n              dispatch(setRiskRefsUploadWizardHeaderMap(data));\n            },\n            submit: function submit() {\n              dispatch(submitExcelUploadedRiskRefs());\n            }\n          }\n        }\n      }\n    }));\n  };\n\n  var handleTableTextboxChange = function handleTableTextboxChange(e, column, row, name) {\n    var _e$target;\n\n    var value = column.type === 'text' ? (e === null || e === void 0 ? void 0 : (_e$target = e.target) === null || _e$target === void 0 ? void 0 : _e$target.value) || '' : (e === null || e === void 0 ? void 0 : e.floatValue) || '';\n\n    if (column.type === 'text') {\n      e.preventDefault();\n    }\n\n    if (column.id === 'thirdPartyCommissionSharing') {\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          var _objectSpread2;\n\n          return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, (_objectSpread2 = {}, _defineProperty(_objectSpread2, column === null || column === void 0 ? void 0 : column.id, value), _defineProperty(_objectSpread2, \"isThirdPartyCommissionDisabled\", value ? false : true), _objectSpread2)) : dd;\n        });\n      });\n    }\n\n    if (column.id === 'pfInternalCommissionSharing') {\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          var _objectSpread3;\n\n          return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, (_objectSpread3 = {}, _defineProperty(_objectSpread3, column === null || column === void 0 ? void 0 : column.id, value), _defineProperty(_objectSpread3, \"isPfInternalDepartmentDisabled\", value ? false : true), _objectSpread3)) : dd;\n        });\n      });\n    }\n\n    if (column.id !== 'pfInternalCommissionSharing' && column.id !== 'thirdPartyCommissionSharing') {\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, _defineProperty({}, column === null || column === void 0 ? void 0 : column.id, value)) : dd;\n        });\n      });\n    }\n\n    if (row.clientDiscount && row.thirdPartyCommissionSharing && row.pfInternalCommissionSharing && row.retainedBrokerage) {\n      var sumValuesArray = [row.clientDiscount, row.thirdPartyCommissionSharing, row.pfInternalCommissionSharing, row.retainedBrokerage];\n      var totalValue = utils.generic.getSumOfArray(sumValuesArray, config.ui.format.percent.decimal);\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, {\n            total: totalValue\n          }) : dd;\n        });\n      });\n    } else {\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, {\n            total: null\n          }) : dd;\n        });\n      });\n    }\n\n    dispatch(updatePiFinancialCheckList(financialCheckListTable));\n  };\n\n  var handleTableSelectChange = function handleTableSelectChange(e, selectedValue, column, row) {\n    e.preventDefault();\n    setFinancialCheckListTable(function (prevState) {\n      return prevState.map(function (dd) {\n        var _objectSpread5;\n\n        return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, (_objectSpread5 = {}, _defineProperty(_objectSpread5, column === null || column === void 0 ? void 0 : column.id, selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.value), _defineProperty(_objectSpread5, column === null || column === void 0 ? void 0 : column.displayName, selectedValue === null || selectedValue === void 0 ? void 0 : selectedValue.name), _objectSpread5)) : dd;\n      });\n    });\n  };\n\n  var handleTableRowClick = function handleTableRowClick(e, row) {\n    e.preventDefault();\n\n    if (!isReadOnly) {\n      if (!row.isRowSelected) {\n        setFinancialCheckListTable(function (prevState) {\n          return prevState.map(function (dd) {\n            return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, {\n              isRowSelected: true\n            }) : _objectSpread(_objectSpread({}, dd), {}, {\n              isRowSelected: false\n            });\n          });\n        });\n      }\n    }\n  };\n\n  var handleTableDatePickerChange = function handleTableDatePickerChange(columnName, value, row) {\n    setFinancialCheckListTable(function (prevState) {\n      return prevState.map(function (dd) {\n        return dd.id === row.id ? _objectSpread(_objectSpread({}, dd), {}, _defineProperty({}, columnName, value)) : dd;\n      });\n    });\n  };\n\n  var handleTableCopyRowData = function handleTableCopyRowData(index) {\n    if (!isReadOnly) {\n      var copyAboveRow = financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.find(function (a) {\n        return a.id === index - 1;\n      });\n      var currentRow = financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.find(function (a) {\n        return a.id === index;\n      });\n      setFinancialCheckListTable(function (prevState) {\n        return prevState.map(function (dd) {\n          return dd.id === index ? _objectSpread(_objectSpread({}, dd), {}, {\n            id: currentRow === null || currentRow === void 0 ? void 0 : currentRow.id,\n            grossPremiumAmount: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.grossPremiumAmount,\n            slipOrder: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.slipOrder,\n            totalBrokerage: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.totalBrokerage,\n            clientDiscount: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.clientDiscount,\n            thirdPartyCommissionSharing: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.thirdPartyCommissionSharing,\n            thirdPartyName: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.thirdPartyName,\n            isThirdPartyCommissionDisabled: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.isThirdPartyCommissionDisabled,\n            pfInternalCommissionSharing: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.pfInternalCommissionSharing,\n            pfInternalDepartment: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.pfInternalDepartment,\n            isPfInternalDepartmentDisabled: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.isPfInternalDepartmentDisabled,\n            retainedBrokerage: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.retainedBrokerage,\n            retainedBrokerageCurrencyCode: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.retainedBrokerageCurrencyCode,\n            retainedBrokerageValue: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.retainedBrokerageValue,\n            total: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.total,\n            fees: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.fees,\n            otherDeductions: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.otherDeductions,\n            settlementCurrency: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.settlementCurrency,\n            paymentBasis: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.paymentBasis,\n            ppwOrPpc: copyAboveRow === null || copyAboveRow === void 0 ? void 0 : copyAboveRow.ppwOrPpc\n          }) : dd;\n        });\n      });\n    }\n  };\n\n  useEffect(function () {\n    if (utils.generic.isValidArray(excelRiskRefs, true)) {\n      var updatedPiRiskRefsFromExcelRiskRefs = financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.map(function (piRiskRef) {\n        var matchedRiskRef = excelRiskRefs === null || excelRiskRefs === void 0 ? void 0 : excelRiskRefs.find(function (exRiskRef) {\n          return (exRiskRef === null || exRiskRef === void 0 ? void 0 : exRiskRef.riskReference) === (piRiskRef === null || piRiskRef === void 0 ? void 0 : piRiskRef.riskReference);\n        });\n\n        if (matchedRiskRef) {\n          return _objectSpread(_objectSpread({}, piRiskRef), matchedRiskRef);\n        }\n\n        return piRiskRef;\n      });\n      setFinancialCheckListTable(updatedPiRiskRefsFromExcelRiskRefs);\n    }\n  }, [excelRiskRefs]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setRetainedBrokerageAmountList(retainedBrokerageAmountData); // Calculate Retain Brokerage value & Total column for every row\n\n    var financialList = financialCheckListTable === null || financialCheckListTable === void 0 ? void 0 : financialCheckListTable.map(function (element) {\n      var _refDataCurrencies$fi, _constants$PAYMENT_BA, _constants$PPW_PPC_OP, _retainedBrokerageAmo;\n\n      var amount = utils.processingInstructions.getRetainedBrokerageValue(element.grossPremiumAmount, element.slipOrder, element.retainedBrokerage);\n      var brokerage = utils.processingInstructions.getRetainedBrokerageConvertedValue(element.retainedBrokerageCurrencyCode || constants.CURRENCY_USD, amount);\n      return element.retainedBrokerageAmount = amount, element.convertedBrokerage = brokerage, element.settlementCurrencyName = ((_refDataCurrencies$fi = refDataCurrencies.find(function (a) {\n        return a.currencyCodeID === parseInt(element.settlementCurrency);\n      })) === null || _refDataCurrencies$fi === void 0 ? void 0 : _refDataCurrencies$fi.currencyCd) || '', element.paymentBasisName = ((_constants$PAYMENT_BA = constants.PAYMENT_BASIS_OPTIONS.find(function (a) {\n        return a.code === element.paymentBasis;\n      })) === null || _constants$PAYMENT_BA === void 0 ? void 0 : _constants$PAYMENT_BA.name) || '', element.ppwOrPpcName = ((_constants$PPW_PPC_OP = constants.PPW_PPC_OPTIONS.find(function (a) {\n        return a.code === element.ppwOrPpc;\n      })) === null || _constants$PPW_PPC_OP === void 0 ? void 0 : _constants$PPW_PPC_OP.name) || '', element.retainedBrokerageCurrencyCodeName = ((_retainedBrokerageAmo = retainedBrokerageAmountData.find(function (a) {\n        return a.id === element.retainedBrokerageCurrencyCode;\n      })) === null || _retainedBrokerageAmo === void 0 ? void 0 : _retainedBrokerageAmo.label) || constants.CURRENCY_USD, element.clientDiscount && element.thirdPartyCommissionSharing && element.pfInternalCommissionSharing && element.retainedBrokerage ? element.total = utils.generic.getSumOfArray([element.clientDiscount, element.thirdPartyCommissionSharing, element.pfInternalCommissionSharing, element.retainedBrokerage], config.ui.format.percent.decimal) : element.total = null;\n    });\n    dispatch(updatePiFinancialCheckList(financialList));\n    dispatch(savePIRetainedBrokerageAmountData(retainedBrokerageAmountData));\n  }, [financialCheckListTable]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _childRef$current3, _childRef$current3$pr;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current3 = childRef.current) === null || _childRef$current3 === void 0 ? void 0 : (_childRef$current3$pr = _childRef$current3.props) === null || _childRef$current3$pr === void 0 ? void 0 : _childRef$current3$pr.resetFunc;\n\n    var updatedDefaultValues = _objectSpread({}, utils.form.getInitialValues(fields));\n\n    setDefaultValues(updatedDefaultValues);\n\n    if (utils.generic.isFunction(reset)) {\n      reset(updatedDefaultValues, {\n        keepDirty: false\n      });\n    }\n  }, [instruction] // eslint-disable-line react-hooks/exhaustive-deps\n  ); // abort if data is not ready/available\n\n  if (!defaultValues || !instruction) return null;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsDetailsView, {\n    instructionId: instruction === null || instruction === void 0 ? void 0 : instruction.id,\n    documents: documents,\n    fields: fields,\n    defaultValues: defaultValues,\n    isEditable: isEditable,\n    isReadOnly: isReadOnly,\n    tableRows: financialCheckListTable,\n    tableFields: financialCheckListTableFields,\n    isTableGridEdited: isTableGridEdited,\n    ref: childRef,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      cancel: handleCancel,\n      confirmRemoveDocumentModal: confirmRemoveDocumentModal,\n      download: handleLinkDownload,\n      save: handleSave,\n      uploadExcelData: uploadExcelData,\n      uploadPremiumTaxSignedLinesModal: uploadPremiumTaxSignedLinesModal,\n      handleTableTextboxChange: handleTableTextboxChange,\n      handleTableRowClick: handleTableRowClick,\n      handleTableSelectChange: handleTableSelectChange,\n      handleTableDatePickerChange: handleTableDatePickerChange,\n      handleTableCopyRowData: handleTableCopyRowData\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 752,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsDetails, \"pAyCfPWN+Q5sxDywMehB5zRQTwI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsDetails;\nProcessingInstructionsDetails.displayName = \"ProcessingInstructionsDetails\";\nProcessingInstructionsDetails.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProcessingInstructionsDetails\",\n  \"props\": {\n    \"instruction\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"back\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"next\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"childRef\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProcessingInstructionsDetails\\\\ProcessingInstructionsDetails.js\"] = {\n    name: \"ProcessingInstructionsDetails\",\n    docgenInfo: ProcessingInstructionsDetails.__docgenInfo,\n    path: \"src\\\\modules\\\\ProcessingInstructionsDetails\\\\ProcessingInstructionsDetails.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsDetails\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsDetails/ProcessingInstructionsDetails.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","get","isEqual","config","moment","ProcessingInstructionsDetailsView","selectUser","showModal","updateProcessingInstruction","removePremiumTaxSignedLinesDocument","addLoader","storeProcessingInstructionDocuments","viewDocumentsDownload","setRiskRefsUploadWizardExcelExtract","setRiskRefsUploadWizardHeaderMap","submitExcelUploadedRiskRefs","updatePiFinancialCheckList","savePIRetainedBrokerageAmountData","constants","utils","ProcessingInstructionsDetails","propTypes","instruction","object","isRequired","handlers","shape","back","func","next","childRef","dispatch","user","documents","state","getFinancialCheckListTableDetails","getRetainedBrokerageAmountList","excelRiskRefs","refDataCurrencies","referenceData","headerMap","isDraft","processingInstructions","status","statusId","isRejectedDraft","isSubmittedAuthorisedSignatory","isReopened","userHasWritePermission","app","access","feature","userHasApproverAccess","retainedBrokerageAmountData","form","getSelectOptions","premiumCurrency","getRetainedBrokerageCurrencies","financialCheckListTable","setFinancialCheckListTable","retainedBrokerageAmountList","setRetainedBrokerageAmountList","defaultValues","setDefaultValues","fcDefaultTableData","financialChecklistDetails","isCheckboxesEditable","isEditable","isReadOnly","leadRiskRef","riskReferences","find","r","leadPolicy","toggleOptions","label","string","t","value","fields","name","type","details","highPriority","muiComponentProps","disabled","frontEndSendDocs","premiumTaxCalculationSheetAttached","options","buttonGroupProps","exclusive","premiumTaxAuthorisedSignatory","signedLinesCalculationSheetAttached","signedLinesAuthorisedSignatory","riskReferencesAuthorisedSignatory","notes","inputProps","maxLength","multiline","minRows","maxRows","financialCheckListTableFields","arrayItemDef","id","visible","width","visable","ellipsis","nowrap","displayName","optionKey","optionLabel","CURRENCY_USD","PAYMENT_BASIS_OPTIONS","PPW_PPC_OPTIONS","format","ui","date","text","fieldData","isTableGridEdited","map","total","fcData","convertedBrokerage","ppwOrPpcName","retainedBrokerageAmount","retainedBrokerageCurrencyCodeName","settlementCurrencyName","paymentBasisName","isRowSelected","handleSave","formValues","current","props","values","updatedInstruction","premiumTaxCalculationSheetAttachedNumber","premiumTaxCalculationSheetAttachedCheckbox","signedLinesCalculationSheetAttachedNumber","signedLinesCalculationSheetAttachedCheckbox","financialGridCheckbox","riskRef","isValidDate","ppwOrPpcDate","isValid","instructionBrokerageDetailsId","riskReference","grossPremiumAmount","slipOrder","totalBrokerage","clientDiscount","thirdPartyCommissionSharing","thirdPartyName","pfInternalCommissionSharing","pfInternalDepartment","retainedBrokerage","retainedBrokerageCurrencyCode","fees","otherDeductions","settlementCurrency","paymentBasis","ppwOrPpc","prevState","dd","handleCancel","reset","resetFunc","generic","isFunction","keepDirty","financialCheckListDBList","element","index","handleUploadedDocument","data","documentTypeKey","newFiles","documentDto","isValidArray","newGxbDocs","file","folderUuid","folderUid","documentName","path","documentPath","source","documentSource","typeId","documentTypeId","uuid","documentUid","updatedDocuments","DMS_DOCUMENT_TYPE_SECTION_KEYS","piPremiumCalculation","premiumTaxDocument","piMarketSigned","signedLinesDocument","uploadPremiumTaxSignedLinesModal","files","component","fullWidth","title","maxWidth","componentProps","context","DMS_CONTEXT_PROCESSING_INSTRUCTION","referenceId","Number","sourceId","xbInstanceId","postDmsDocumentsSuccess","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","confirmRemoveDocumentModal","removeDocumentType","submitHandler","docIds","documentId","cancelHandler","handleClose","handleLinkDownload","uploadExcelData","hideCompOnBlur","headers","steps","isValidateHeadersMapping","labels","step1","html","hint","step2","step3","extract","match","submit","handleTableTextboxChange","e","column","row","target","floatValue","preventDefault","sumValuesArray","totalValue","getSumOfArray","percent","decimal","handleTableSelectChange","selectedValue","handleTableRowClick","handleTableDatePickerChange","columnName","handleTableCopyRowData","copyAboveRow","a","currentRow","isThirdPartyCommissionDisabled","isPfInternalDepartmentDisabled","retainedBrokerageValue","updatedPiRiskRefsFromExcelRiskRefs","piRiskRef","matchedRiskRef","exRiskRef","financialList","amount","getRetainedBrokerageValue","brokerage","getRetainedBrokerageConvertedValue","currencyCodeID","parseInt","currencyCd","code","updatedDefaultValues","getInitialValues","download","save"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,iCAAP,MAA8C,sCAA9C;AACA,SACEC,UADF,EAEEC,SAFF,EAGEC,2BAHF,EAIEC,mCAJF,EAKEC,SALF,EAMEC,mCANF,EAOEC,qBAPF,EAQEC,mCARF,EASEC,gCATF,EAUEC,2BAVF,EAWEC,0BAXF,EAYEC,iCAZF,QAaO,QAbP;AAcA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,6BAA6B,CAACC,SAA9B,GAA0C;AACxCC,EAAAA,WAAW,EAAExB,SAAS,CAACyB,MAAV,CAAiBC,UADU;AAExCC,EAAAA,QAAQ,EAAE3B,SAAS,CAAC4B,KAAV,CAAgB;AACxBC,IAAAA,IAAI,EAAE7B,SAAS,CAAC8B,IAAV,CAAeJ,UADG;AAExBK,IAAAA,IAAI,EAAE/B,SAAS,CAAC8B,IAAV,CAAeJ;AAFG,GAAhB,EAGPA,UALqC;AAMxCM,EAAAA,QAAQ,EAAEhC,SAAS,CAACyB,MAAV,CAAiBC;AANa,CAA1C;AASA,eAAe,SAASJ,6BAAT,OAA4E;AAAA;;AAAA;;AAAA,MAAnCE,WAAmC,QAAnCA,WAAmC;AAAA,MAAtBG,QAAsB,QAAtBA,QAAsB;AAAA,MAAZK,QAAY,QAAZA,QAAY;AACzF,MAAMC,QAAQ,GAAGhC,WAAW,EAA5B;AAEA,MAAMiC,IAAI,GAAGhC,WAAW,CAACM,UAAD,CAAxB;AACA,MAAM2B,SAAS,GAAGjC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,kCAAR,CAAd;AAAA,GAAD,CAAX,IAA0E,EAA5F;AACA,MAAMC,iCAAiC,GAAGnC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,2CAAR,CAAd;AAAA,GAAD,CAAX,IAAmF,EAA7H;AACA,MAAME,8BAA8B,GAAGpC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,oDAAR,CAAd;AAAA,GAAD,CAAX,IAA4F,EAAnI;AACA,MAAMG,aAAa,GAAGrC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,sCAAR,CAAd;AAAA,GAAD,CAAX,IAA8E,EAApG;AACA,MAAMI,iBAAiB,GAAGtC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,6BAAR,CAAd;AAAA,GAAD,CAAX,IAAqE,EAA/F;AACA,MAAMK,aAAa,GAAGvC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWA,KAAK,CAACK,aAAjB;AAAA,GAAD,CAAjC;AACA,MAAMC,SAAS,GAAGxC,WAAW,CAAC,UAACkC,KAAD;AAAA,WAAWjC,GAAG,CAACiC,KAAD,EAAQ,kCAAR,CAAd;AAAA,GAAD,CAAX,IAA0E,EAA5F;AAEA,MAAMO,OAAO,GAAGtB,KAAK,CAACuB,sBAAN,CAA6BC,MAA7B,CAAoCF,OAApC,CAA4CnB,WAA5C,aAA4CA,WAA5C,uBAA4CA,WAAW,CAAEsB,QAAzD,CAAhB;AACA,MAAMC,eAAe,GAAG1B,KAAK,CAACuB,sBAAN,CAA6BC,MAA7B,CAAoCE,eAApC,CAAoDvB,WAApD,aAAoDA,WAApD,uBAAoDA,WAAW,CAAEsB,QAAjE,CAAxB;AACA,MAAME,8BAA8B,GAAG3B,KAAK,CAACuB,sBAAN,CAA6BC,MAA7B,CAAoCG,8BAApC,CAAmExB,WAAnE,aAAmEA,WAAnE,uBAAmEA,WAAW,CAAEsB,QAAhF,CAAvC;AACA,MAAMG,UAAU,GAAG5B,KAAK,CAACuB,sBAAN,CAA6BC,MAA7B,CAAoCI,UAApC,CAA+CzB,WAA/C,aAA+CA,WAA/C,uBAA+CA,WAAW,CAAEsB,QAA5D,CAAnB;AACA,MAAMI,sBAAsB,GAAG7B,KAAK,CAAC8B,GAAN,CAAUC,MAAV,CAAiBC,OAAjB,CAAyB,+CAAzB,EAA0E,CAAC,QAAD,EAAW,QAAX,CAA1E,EAAgGnB,IAAhG,CAA/B;AACA,MAAMoB,qBAAqB,GAAGjC,KAAK,CAAC8B,GAAN,CAAUC,MAAV,CAAiBC,OAAjB,CAAyB,0CAAzB,EAAqE,CAAC,QAAD,EAAW,QAAX,CAArE,EAA2FnB,IAA3F,CAA9B;AACA,MAAMqB,2BAA2B,GAAGlC,KAAK,CAACmC,IAAN,CAAWC,gBAAX,CAA4B,iBAA5B,kCAC/BhB,aAD+B;AAElCiB,IAAAA,eAAe,EAAErC,KAAK,CAACuB,sBAAN,CAA6Be,8BAA7B;AAFiB,KAApC;;AAlByF,kBAuB3B7D,QAAQ,CAACuC,iCAAD,CAvBmB;AAAA;AAAA,MAuBlFuB,uBAvBkF;AAAA,MAuBzDC,0BAvByD;;AAAA,mBAwBnB/D,QAAQ,CAACwC,8BAAD,CAxBW;AAAA;AAAA,MAwBlFwB,2BAxBkF;AAAA,MAwBrDC,8BAxBqD;;AAAA,mBAyB/CjE,QAAQ,EAzBuC;AAAA;AAAA,MAyBlFkE,aAzBkF;AAAA,MAyBnEC,gBAzBmE;;AA2BzF,MAAMC,kBAAkB,GAAG,CAAA1C,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAE2C,yBAAb,KAA0C,EAArE;AACA,MAAMC,oBAAoB,GAAGd,qBAAqB,IAAIN,8BAAtD;AACA,MAAMqB,UAAU,GAAGnB,sBAAsB,KAAKP,OAAO,IAAII,eAAX,IAA8BE,UAAnC,CAAzC;AACA,MAAMqB,UAAU,GAAG,CAACD,UAApB;AACA,MAAME,WAAW,GAAG/C,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAEgD,cAAhB,0DAAG,sBAA6BC,IAA7B,CAAkC,UAACC,CAAD;AAAA,WAAOA,CAAC,CAACC,UAAT;AAAA,GAAlC,CAApB;AACA,MAAMC,aAAa,GAAG,CACpB;AAAEC,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,SAAf,CAAT;AAAoCC,IAAAA,KAAK,EAAE;AAA3C,GADoB,EAEpB;AAAEH,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,QAAf,CAAT;AAAmCC,IAAAA,KAAK,EAAE;AAA1C,GAFoB,EAGpB;AAAEH,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,QAAf,CAAT;AAAmCC,IAAAA,KAAK,EAAE,CAAC;AAA3C,GAHoB,CAAtB;AAKA,MAAMC,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,cADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,+CAAEA,WAAW,CAAE4D,OAAf,yDAAE,qBAAsBC,YAH/B;AAIER,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,iFAAf,CAJT;AAKEO,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAEjB;AADO;AALrB,GADa,EAUb;AACEY,IAAAA,IAAI,EAAE,kBADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBI,gBAH/B;AAIEX,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,0FAAf,CAJT;AAKEO,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAEjB;AADO;AALrB,GAVa,EAmBb;AACEY,IAAAA,IAAI,EAAE,0CADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBK,kCAH/B;AAIEC,IAAAA,OAAO,EAAEd,aAJX;AAKEe,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAE,IADK;AAEhBL,MAAAA,QAAQ,EAAEjB;AAFM;AALpB,GAnBa,EA6Bb;AACEY,IAAAA,IAAI,EAAE,4CADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBS,6BAH/B;AAIEN,IAAAA,QAAQ,EAAE,CAACnB;AAJb,GA7Ba,EAmCb;AACEc,IAAAA,IAAI,EAAE,2CADR;AAEEC,IAAAA,IAAI,EAAE,QAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBU,mCAH/B;AAIEJ,IAAAA,OAAO,EAAEd,aAJX;AAKEe,IAAAA,gBAAgB,EAAE;AAChBC,MAAAA,SAAS,EAAE,IADK;AAEhBL,MAAAA,QAAQ,EAAEjB;AAFM;AALpB,GAnCa,EA6Cb;AACEY,IAAAA,IAAI,EAAE,6CADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBW,8BAH/B;AAIER,IAAAA,QAAQ,EAAE,CAACnB;AAJb,GA7Ca,EAmDb;AACEc,IAAAA,IAAI,EAAE,uBADR;AAEEC,IAAAA,IAAI,EAAE,UAFR;AAGEH,IAAAA,KAAK,EAAExD,WAAF,aAAEA,WAAF,gDAAEA,WAAW,CAAE4D,OAAf,0DAAE,sBAAsBY,iCAH/B;AAIET,IAAAA,QAAQ,EAAE,CAACnB;AAJb,GAnDa,EAyDb;AACEc,IAAAA,IAAI,EAAE,OADR;AAEEL,IAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAFT;AAGEI,IAAAA,IAAI,EAAE,UAHR;AAIEH,IAAAA,KAAK,EAAE,CAAAxD,WAAW,SAAX,IAAAA,WAAW,WAAX,qCAAAA,WAAW,CAAE4D,OAAb,gFAAsBa,KAAtB,KAA+B,EAJxC;AAKEX,IAAAA,iBAAiB,EAAE;AACjBY,MAAAA,UAAU,EAAE;AAAEC,QAAAA,SAAS,EAAE;AAAb,OADK;AAEjBC,MAAAA,SAAS,EAAE,IAFM;AAGjBC,MAAAA,OAAO,EAAE,CAHQ;AAIjBC,MAAAA,OAAO,EAAE,CAJQ;AAKjBf,MAAAA,QAAQ,EAAEjB;AALO;AALrB,GAzDa,CAAf;AAuEA,MAAMiC,6BAA6B,GAAG;AACpCC,IAAAA,YAAY,GACV;AAAEC,MAAAA,EAAE,EAAE,IAAN;AAAYvB,MAAAA,IAAI,EAAE,IAAlB;AAAwBwB,MAAAA,OAAO,EAAE,KAAjC;AAAwCvB,MAAAA,IAAI,EAAE,OAA9C;AAAuDH,MAAAA,KAAK,EAAE,EAA9D;AAAkE2B,MAAAA,KAAK,EAAE,EAAzE;AAA6E9B,MAAAA,KAAK,EAAE,EAApF;AAAwF+B,MAAAA,OAAO,EAAE;AAAjG,KADU,EAEV;AACEH,MAAAA,EAAE,EAAE,eADN;AAEEvB,MAAAA,IAAI,EAAE,eAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEvB,MAAAA,IAAI,EAAE,MAJR;AAKEH,MAAAA,KAAK,EAAE,EALT;AAME2B,MAAAA,KAAK,EAAE,GANT;AAOE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,kDAAf,CAPT;AAQEQ,MAAAA,QAAQ,EAAE;AARZ,KAFU,EAYV;AACEkB,MAAAA,EAAE,EAAE,oBADN;AAEEvB,MAAAA,IAAI,EAAE,oBAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,6CAAf;AATT,KAZU,EAuBV;AACE0B,MAAAA,EAAE,EAAE,WADN;AAEEvB,MAAAA,IAAI,EAAE,WAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,0CAAf;AATT,KAvBU,EAkCV;AACE0B,MAAAA,EAAE,EAAE,gBADN;AAEEvB,MAAAA,IAAI,EAAE,gBAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,+CAAf;AATT,KAlCU,EA6CV;AACE0B,MAAAA,EAAE,EAAE,gBADN;AAEEvB,MAAAA,IAAI,EAAE,gBAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,+CAAf;AATT,KA7CU,EAwDV;AACE0B,MAAAA,EAAE,EAAE,6BADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGExB,MAAAA,IAAI,EAAE,6BAHR;AAIE2B,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,4DAAf;AATT,KAxDU,EAmEV;AACE0B,MAAAA,EAAE,EAAE,gBADN;AAEEvB,MAAAA,IAAI,EAAE,gBAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,MANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,2CAAf;AATT,KAnEU,EA8EV;AACE0B,MAAAA,EAAE,EAAE,6BADN;AAEEvB,MAAAA,IAAI,EAAE,6BAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,4DAAf;AATT,KA9EU,EAyFV;AACE0B,MAAAA,EAAE,EAAE,sBADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,MALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,GAPT;AAQE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,qDAAf;AART,KAzFU,EAmGV;AACE0B,MAAAA,EAAE,EAAE,mBADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,aALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,GAPT;AAQE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,kDAAf;AART,KAnGU,EA6GV;AACE0B,MAAAA,EAAE,EAAE,+BADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,QALR;AAME4B,MAAAA,WAAW,EAAE,mCANf;AAOErB,MAAAA,OAAO,EAAE5B,2BAPX;AAQEkD,MAAAA,SAAS,EAAE,IARb;AASEC,MAAAA,WAAW,EAAE,OATf;AAUEjC,MAAAA,KAAK,EAAE5D,SAAS,CAAC8F,YAVnB;AAWEP,MAAAA,KAAK,EAAE,GAXT;AAYE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,wDAAf;AAZT,KA7GU,EA2HV;AACE0B,MAAAA,EAAE,EAAE,wBADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,wBALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,GAPT;AAQE9B,MAAAA,KAAK,EAAE;AART,KA3HU,EAqIV;AACE4B,MAAAA,EAAE,EAAE,OADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,OALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,EAPT;AAQE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,sCAAf;AART,KArIU,EA+IV;AACE0B,MAAAA,EAAE,EAAE,MADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,aALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,EAPT;AAQE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,qCAAf;AART,KA/IU,EAyJV;AACE0B,MAAAA,EAAE,EAAE,iBADN;AAEEvB,MAAAA,IAAI,EAAE,iBAFR;AAGEwB,MAAAA,OAAO,EAAE,IAHX;AAIEG,MAAAA,QAAQ,EAAE,IAJZ;AAKEC,MAAAA,MAAM,EAAE,KALV;AAME3B,MAAAA,IAAI,EAAE,aANR;AAOEH,MAAAA,KAAK,EAAE,EAPT;AAQE2B,MAAAA,KAAK,EAAE,GART;AASE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,gDAAf;AATT,KAzJU,EAoKV;AACE0B,MAAAA,EAAE,EAAE,oBADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,QALR;AAME4B,MAAAA,WAAW,EAAE,wBANf;AAOErB,MAAAA,OAAO,EAAElD,iBAPX;AAQEwE,MAAAA,SAAS,EAAE,gBARb;AASEC,MAAAA,WAAW,EAAE,YATf;AAUEjC,MAAAA,KAAK,EAAE,EAVT;AAWE2B,MAAAA,KAAK,EAAE,GAXT;AAYE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,mDAAf;AAZT,KApKU,EAkLV;AACE0B,MAAAA,EAAE,EAAE,cADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,QALR;AAME4B,MAAAA,WAAW,EAAE,kBANf;AAOErB,MAAAA,OAAO,EAAEtE,SAAS,CAAC+F,qBAPrB;AAQEH,MAAAA,SAAS,EAAE,MARb;AASEC,MAAAA,WAAW,EAAE,MATf;AAUEjC,MAAAA,KAAK,EAAE,EAVT;AAWE2B,MAAAA,KAAK,EAAE,GAXT;AAYE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,6CAAf;AAZT,KAlLU,EAgMV;AACE0B,MAAAA,EAAE,EAAE,UADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,QALR;AAME4B,MAAAA,WAAW,EAAE,cANf;AAOErB,MAAAA,OAAO,EAAEtE,SAAS,CAACgG,eAPrB;AAQEJ,MAAAA,SAAS,EAAE,MARb;AASEC,MAAAA,WAAW,EAAE,MATf;AAUEjC,MAAAA,KAAK,EAAE,EAVT;AAWE2B,MAAAA,KAAK,EAAE,GAXT;AAYE9B,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,yCAAf;AAZT,KAhMU,EA8MV;AACE0B,MAAAA,EAAE,EAAE,cADN;AAEEC,MAAAA,OAAO,EAAE,IAFX;AAGEG,MAAAA,QAAQ,EAAE,IAHZ;AAIEC,MAAAA,MAAM,EAAE,KAJV;AAKE3B,MAAAA,IAAI,EAAE,YALR;AAMEH,MAAAA,KAAK,EAAE,EANT;AAOE2B,MAAAA,KAAK,EAAE,GAPT;AAQEU,MAAAA,MAAM,EAAEhH,MAAM,CAACiH,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBC,IARhC;AASE3C,MAAAA,KAAK,EAAExD,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,6CAAf;AATT,KA9MU,4BAyNN,CAACT,UAAD,GACA,CAAC;AAAEmC,MAAAA,EAAE,EAAE,YAAN;AAAoBC,MAAAA,OAAO,EAAE,IAA7B;AAAmCG,MAAAA,QAAQ,EAAE,IAA7C;AAAmDC,MAAAA,MAAM,EAAE,KAA3D;AAAkE3B,MAAAA,IAAI,EAAE,UAAxE;AAAoFH,MAAAA,KAAK,EAAE,EAA3F;AAA+F2B,MAAAA,KAAK,EAAE,EAAtG;AAA0G9B,MAAAA,KAAK,EAAE;AAAjH,KAAD,CADA,GAEA,EA3NM,EADwB;AA8NpC4C,IAAAA,SAAS,EAAE;AA9NyB,GAAtC,CA5GyF,CA6UzF;;AACA,MAAMC,iBAAiB,GAAG,CAACtH,OAAO,CAChC8D,kBADgC,aAChCA,kBADgC,uBAChCA,kBAAkB,CAAEyD,GAApB,CAAwB;AAAA,QAAGC,KAAH,SAAGA,KAAH;AAAA,QAAaC,MAAb;;AAAA,WAA0BA,MAA1B;AAAA,GAAxB,CADgC,EAEhCjE,uBAFgC,aAEhCA,uBAFgC,uBAEhCA,uBAAuB,CAAE+D,GAAzB,CACE;AAAA,QACEG,kBADF,SACEA,kBADF;AAAA,QAEErB,EAFF,SAEEA,EAFF;AAAA,QAGEsB,YAHF,SAGEA,YAHF;AAAA,QAIEC,uBAJF,SAIEA,uBAJF;AAAA,QAKEC,iCALF,SAKEA,iCALF;AAAA,QAMEC,sBANF,SAMEA,sBANF;AAAA,QAOEC,gBAPF,SAOEA,gBAPF;AAAA,QAQEP,KARF,SAQEA,KARF;AAAA,QASEQ,aATF,SASEA,aATF;AAAA,QAUKP,MAVL;;AAAA,WAWMA,MAXN;AAAA,GADF,CAFgC,CAAlC;;AAkBA,MAAMQ,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACvB,QAAMC,UAAU,GAAG,CAAAtG,QAAQ,SAAR,IAAAA,QAAQ,WAAR,iCAAAA,QAAQ,CAAEuG,OAAV,iGAAmBC,KAAnB,gFAA0BC,MAA1B,KAAoC,EAAvD;;AAEA,QAAMC,kBAAkB,mCACnBlH,WADmB;AAEtB4D,MAAAA,OAAO,kCACF5D,WAAW,CAAC4D,OADV;AAELC,QAAAA,YAAY,EAAEiD,UAAU,CAACjD,YAFpB;AAGLG,QAAAA,gBAAgB,EAAE8C,UAAU,CAAC9C,gBAHxB;AAILS,QAAAA,KAAK,EAAEqC,UAAU,CAACrC,KAJb;AAKLR,QAAAA,kCAAkC,EAAE6C,UAAU,CAACK,wCAL1C;AAML9C,QAAAA,6BAA6B,EAAEyC,UAAU,CAACM,0CANrC;AAOL9C,QAAAA,mCAAmC,EAAEwC,UAAU,CAACO,yCAP3C;AAQL9C,QAAAA,8BAA8B,EAAEuC,UAAU,CAACQ,2CARtC;AASL9C,QAAAA,iCAAiC,EAAEsC,UAAU,CAACS;AATzC,QAFe;AAatB5E,MAAAA,yBAAyB,EAAEP,uBAAF,aAAEA,uBAAF,uBAAEA,uBAAuB,CAAE+D,GAAzB,CAA6B,UAACqB,OAAD,EAAa;AACnE,YAAMC,WAAW,GAAG3I,MAAM,CAAC0I,OAAO,CAACE,YAAT,CAAN,CAA6BC,OAA7B,EAApB;AACA,YAAMD,YAAY,GAAGD,WAAW,GAAG3I,MAAM,CAAC0I,OAAO,CAACE,YAAT,CAAN,CAA6B7B,MAA7B,CAAoC,YAApC,CAAH,GAAuD,EAAvF;AACA,eAAO;AACL+B,UAAAA,6BAA6B,EAAEJ,OAAO,CAACI,6BADlC;AAELC,UAAAA,aAAa,EAAEL,OAAO,CAACK,aAFlB;AAGLC,UAAAA,kBAAkB,EAAEN,OAAO,CAACM,kBAHvB;AAILC,UAAAA,SAAS,EAAEP,OAAO,CAACO,SAJd;AAKLC,UAAAA,cAAc,EAAER,OAAO,CAACQ,cALnB;AAMLC,UAAAA,cAAc,EAAET,OAAO,CAACS,cANnB;AAOLC,UAAAA,2BAA2B,EAAEV,OAAO,CAACU,2BAPhC;AAQLC,UAAAA,cAAc,EAAEX,OAAO,CAACW,cARnB;AASLC,UAAAA,2BAA2B,EAAEZ,OAAO,CAACY,2BAThC;AAULC,UAAAA,oBAAoB,EAAEb,OAAO,CAACa,oBAVzB;AAWLC,UAAAA,iBAAiB,EAAEd,OAAO,CAACc,iBAXtB;AAYLC,UAAAA,6BAA6B,EAAEf,OAAO,CAACe,6BAZlC;AAaLC,UAAAA,IAAI,EAAEhB,OAAO,CAACgB,IAbT;AAcLC,UAAAA,eAAe,EAAEjB,OAAO,CAACiB,eAdpB;AAeLC,UAAAA,kBAAkB,EAAElB,OAAO,CAACkB,kBAfvB;AAgBLC,UAAAA,YAAY,EAAEnB,OAAO,CAACmB,YAhBjB;AAiBLC,UAAAA,QAAQ,EAAEpB,OAAO,CAACoB,QAjBb;AAkBLlB,UAAAA,YAAY,EAAEA;AAlBT,SAAP;AAoBD,OAvB0B;AAbL,MAAxB;;AAsCArF,IAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,aAAeA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,+CAAcA,EAAd;AAAkBlC,UAAAA,aAAa,EAAE;AAAjC;AAAA,OAAd,CAAf;AAAA,KAAD,CAA1B;AACAnG,IAAAA,QAAQ,CAACvB,2BAA2B,CAACgI,kBAAD,EAAqBJ,UAArB,CAA5B,CAAR;AACD,GA3CD;;AA6CA,MAAMiC,YAAY,GAAG,SAAfA,YAAe,GAAM;AAAA;;AACzB,QAAMC,KAAK,GAAGxI,QAAH,aAAGA,QAAH,6CAAGA,QAAQ,CAAEuG,OAAb,gFAAG,mBAAmBC,KAAtB,0DAAG,sBAA0BiC,SAAxC;;AAEA,QAAIpJ,KAAK,CAACqJ,OAAN,CAAcC,UAAd,CAAyBH,KAAzB,CAAJ,EAAqC;AACnCA,MAAAA,KAAK,CAACxG,aAAD,EAAgB;AAAE4G,QAAAA,SAAS,EAAE;AAAb,OAAhB,CAAL;AACD;;AACD,QAAMC,wBAAwB,GAAGrJ,WAAH,aAAGA,WAAH,gDAAGA,WAAW,CAAE2C,yBAAhB,0DAAG,sBAAwCwD,GAAxC,CAA4C,UAACmD,OAAD,EAAUC,KAAV;AAAA,6CAA0BD,OAA1B;AAAmCrE,QAAAA,EAAE,EAAEsE;AAAvC;AAAA,KAA5C,CAAjC;AACA9I,IAAAA,QAAQ,CAACf,0BAA0B,CAAC2J,wBAAD,CAA3B,CAAR;AACAhH,IAAAA,0BAA0B,CAACgH,wBAAD,CAA1B;AACD,GATD;;AAWA,MAAMG,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACC,IAAD,EAAOC,eAAP,EAA2B;AAAA;;AACxD,QAAMC,QAAQ,GAAGF,IAAH,aAAGA,IAAH,qCAAGA,IAAI,CAAEA,IAAT,+CAAG,WAAYG,WAA7B;AACA,QAAI,CAAC/J,KAAK,CAACqJ,OAAN,CAAcW,YAAd,CAA2BF,QAA3B,CAAL,EAA2C;AAC3C,QAAMG,UAAU,GAAGH,QAAQ,CAACxD,GAAT,CAAa,UAAC4D,IAAD,EAAU;AACxC,6CACKA,IADL;AAEEC,QAAAA,UAAU,EAAED,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEE,SAFpB;AAGEvG,QAAAA,IAAI,EAAEqG,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEG,YAHd;AAIEC,QAAAA,IAAI,EAAEJ,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEK,YAJd;AAKEC,QAAAA,MAAM,EAAEN,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEO,cALhB;AAMEC,QAAAA,MAAM,EAAER,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAES,cANhB;AAOEC,QAAAA,IAAI,EAAEV,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEW;AAPd;AASD,KAVkB,CAAnB;;AAYA,QAAMC,gBAAgB,iDACjBhK,SADiB,GAEhB+I,eAAe,KAAK9J,SAAS,CAACgL,8BAAV,CAAyCjH,IAAzC,CAA8CkH,oBAAlE,IAA0F;AAC5FC,MAAAA,kBAAkB,EAAEhB,UAAU,CAAC,CAAD;AAD8D,KAF1E,GAKhBJ,eAAe,KAAK9J,SAAS,CAACgL,8BAAV,CAAyCjH,IAAzC,CAA8CoH,cAAlE,IAAoF;AACtFC,MAAAA,mBAAmB,EAAElB,UAAU,CAAC,CAAD;AADuD,KALpE,CAAtB;;AASArJ,IAAAA,QAAQ,CAACpB,mCAAmC,CAACsL,gBAAD,CAApC,CAAR;AACD,GAzBD;;AA2BA,MAAMM,gCAAgC,GAAG,SAAnCA,gCAAmC,CAACvB,eAAD;AAAA,WAAqB,UAACwB,KAAD,EAAW;AACvEzK,MAAAA,QAAQ,CAACrB,SAAS,CAAC,gBAAD,CAAV,CAAR;AAEAqB,MAAAA,QAAQ,CACNxB,SAAS,CAAC;AACRkM,QAAAA,SAAS,EAAE,kBADH;AAERnE,QAAAA,KAAK,EAAE;AACLoE,UAAAA,SAAS,EAAE,IADN;AAELC,UAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,uCAAf,CAFF;AAGL+H,UAAAA,QAAQ,EAAE,IAHL;AAILC,UAAAA,cAAc,EAAE;AACdL,YAAAA,KAAK,EAALA,KADc;AAEdM,YAAAA,OAAO,EAAE5L,SAAS,CAAC6L,kCAFL;AAGdC,YAAAA,WAAW,EAAEC,MAAM,CAAC3L,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAEiF,EAAd,CAHL;AAId2G,YAAAA,QAAQ,EAAED,MAAM,CAAC5I,WAAD,aAACA,WAAD,uBAACA,WAAW,CAAE8I,YAAd,CAJF;AAKdnC,YAAAA,eAAe,EAAfA,eALc;AAMdoC,YAAAA,uBAAuB,EAAE,iCAACrC,IAAD;AAAA,qBAAUD,sBAAsB,CAACC,IAAD,EAAOC,eAAP,CAAhC;AAAA,aANX;AAOdqC,YAAAA,YAAY,EAAElM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,QAAf,CAPA;AAQdyI,YAAAA,WAAW,EAAEnM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,YAAf,CARC;AASd0I,YAAAA,cAAc,EAAEpM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,gDAAf,CATF;AAUd2I,YAAAA,YAAY,EAAE;AAAEC,cAAAA,OAAO,EAAE,WAAX;AAAwBC,cAAAA,MAAM,EAAE;AAAhC;AAVA;AAJX;AAFC,OAAD,CADH,CAAR;AAsBD,KAzBwC;AAAA,GAAzC;;AA2BA,MAAMC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACtC,IAAD,EAAOuC,kBAAP,EAA8B;AAC/D7L,IAAAA,QAAQ,CACNxB,SAAS,CAAC;AACRkM,MAAAA,SAAS,EAAE,SADH;AAERnE,MAAAA,KAAK,EAAE;AACLoE,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,gDAAf,CAFF;AAGL+H,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE;AACdQ,UAAAA,YAAY,EAAElM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,SAAf,CADA;AAEdyI,UAAAA,WAAW,EAAEnM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,QAAf,CAFC;AAGd0I,UAAAA,cAAc,EAAEpM,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,8CAAf,CAHF;AAId2I,UAAAA,YAAY,EAAE;AAAEC,YAAAA,OAAO,EAAE,WAAX;AAAwBC,YAAAA,MAAM,EAAE;AAAhC,WAJA;AAKdG,UAAAA,aAAa,EAAE,yBAAM;AACnB9L,YAAAA,QAAQ,CAACtB,mCAAmC,CAAC;AAAEqN,cAAAA,MAAM,EAAEzC,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE0C,UAAhB;AAA4BH,cAAAA,kBAAkB,EAAlBA,kBAA5B;AAAgD3L,cAAAA,SAAS,EAATA;AAAhD,aAAD,CAApC,CAAR;AACD,WAPa;AAQd+L,UAAAA,aAAa,EAAE,yBAAM,CAAE,CART;AASdC,UAAAA,WAAW,EAAE,uBAAM,CAAE;AATP;AAJX;AAFC,KAAD,CADH,CAAR;AAqBD,GAtBD;;AAwBA,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAAC7C,IAAD,EAAU;AACnCtJ,IAAAA,QAAQ,CAACnB,qBAAqB,CAAC;AAAEmN,MAAAA,UAAU,EAAE1C,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE0C,UAApB;AAAgCvC,MAAAA,YAAY,EAAEH,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAErG;AAApD,KAAD,CAAtB,CAAR;AACD,GAFD;;AAIA,MAAMmJ,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAC5BpM,IAAAA,QAAQ,CACNxB,SAAS,CAAC;AACRkM,MAAAA,SAAS,EAAE,kBADH;AAERnE,MAAAA,KAAK,EAAE;AACLqE,QAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,0DAAf,CADF;AAEL6H,QAAAA,SAAS,EAAE,IAFN;AAGLE,QAAAA,QAAQ,EAAE,IAHL;AAILwB,QAAAA,cAAc,EAAE,KAJX;AAKLvB,QAAAA,cAAc,EAAE;AACd7H,UAAAA,IAAI,EAAE,oBADQ;AAEdqJ,UAAAA,OAAO,EAAE7L,SAFK;AAGd8L,UAAAA,KAAK,EAAE,CAHO;AAIdC,UAAAA,wBAAwB,EAAE,IAJZ;AAKdC,UAAAA,MAAM,EAAE;AACNC,YAAAA,KAAK,EAAE;AACL9B,cAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAa8J,IAAb,CAAkB,gEAAlB,CADF;AAELC,cAAAA,IAAI,EAAExN,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,+DAAf;AAFD,aADD;AAKN+J,YAAAA,KAAK,EAAE;AACLjC,cAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAa8J,IAAb,CAAkB,gEAAlB,CADF;AAELC,cAAAA,IAAI,EAAExN,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,+DAAf;AAFD,aALD;AASNgK,YAAAA,KAAK,EAAE;AACLlC,cAAAA,KAAK,EAAExL,KAAK,CAACyD,MAAN,CAAa8J,IAAb,CAAkB,gEAAlB,CADF;AAELC,cAAAA,IAAI,EAAExN,KAAK,CAACyD,MAAN,CAAaC,CAAb,CAAe,EAAf;AAFD;AATD,WALM;AAmBdpD,UAAAA,QAAQ,EAAE;AACRqN,YAAAA,OAAO,EAAE,iBAAC/D,IAAD,EAAU;AACjBhJ,cAAAA,QAAQ,CAAClB,mCAAmC,CAACkK,IAAD,CAApC,CAAR;AACD,aAHO;AAIRgE,YAAAA,KAAK,EAAE,eAAChE,IAAD,EAAU;AACfhJ,cAAAA,QAAQ,CAACjB,gCAAgC,CAACiK,IAAD,CAAjC,CAAR;AACD,aANO;AAORiE,YAAAA,MAAM,EAAE,kBAAM;AACZjN,cAAAA,QAAQ,CAAChB,2BAA2B,EAA5B,CAAR;AACD;AATO;AAnBI;AALX;AAFC,KAAD,CADH,CAAR;AA0CD,GA3CD;;AA6CA,MAAMkO,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,CAAD,EAAIC,MAAJ,EAAYC,GAAZ,EAAiBpK,IAAjB,EAA0B;AAAA;;AACzD,QAAIF,KAAK,GAAGqK,MAAM,CAAClK,IAAP,KAAgB,MAAhB,GAAyB,CAAAiK,CAAC,SAAD,IAAAA,CAAC,WAAD,yBAAAA,CAAC,CAAEG,MAAH,wDAAWvK,KAAX,KAAoB,EAA7C,GAAkD,CAAAoK,CAAC,SAAD,IAAAA,CAAC,WAAD,YAAAA,CAAC,CAAEI,UAAH,KAAiB,EAA/E;;AACA,QAAIH,MAAM,CAAClK,IAAP,KAAgB,MAApB,EAA4B;AAC1BiK,MAAAA,CAAC,CAACK,cAAF;AACD;;AAED,QAAIJ,MAAM,CAAC5I,EAAP,KAAc,6BAAlB,EAAiD;AAC/C5C,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eACzBA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA;;AAAA,iBACZA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAES6D,EAFT,6DAGO+E,MAHP,aAGOA,MAHP,uBAGOA,MAAM,CAAE5I,EAHf,EAGoBzB,KAHpB,qEAIsCA,KAAK,GAAG,KAAH,GAAW,IAJtD,sBAMIsF,EAPQ;AAAA,SAAd,CADyB;AAAA,OAAD,CAA1B;AAWD;;AACD,QAAI+E,MAAM,CAAC5I,EAAP,KAAc,6BAAlB,EAAiD;AAC/C5C,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eACzBA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA;;AAAA,iBACZA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAES6D,EAFT,6DAGO+E,MAHP,aAGOA,MAHP,uBAGOA,MAAM,CAAE5I,EAHf,EAGoBzB,KAHpB,qEAIsCA,KAAK,GAAG,KAAH,GAAW,IAJtD,sBAMIsF,EAPQ;AAAA,SAAd,CADyB;AAAA,OAAD,CAA1B;AAWD;;AACD,QAAI+E,MAAM,CAAC5I,EAAP,KAAc,6BAAd,IAA+C4I,MAAM,CAAC5I,EAAP,KAAc,6BAAjE,EAAgG;AAC9F5C,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eAAeA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,iBAASA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAAwB6D,EAAxB,2BAA6B+E,MAA7B,aAA6BA,MAA7B,uBAA6BA,MAAM,CAAE5I,EAArC,EAA0CzB,KAA1C,KAAoDsF,EAA7D;AAAA,SAAd,CAAf;AAAA,OAAD,CAA1B;AACD;;AAED,QAAIgF,GAAG,CAAC7F,cAAJ,IAAsB6F,GAAG,CAAC5F,2BAA1B,IAAyD4F,GAAG,CAAC1F,2BAA7D,IAA4F0F,GAAG,CAACxF,iBAApG,EAAuH;AACrH,UAAM4F,cAAc,GAAG,CAACJ,GAAG,CAAC7F,cAAL,EAAqB6F,GAAG,CAAC5F,2BAAzB,EAAsD4F,GAAG,CAAC1F,2BAA1D,EAAuF0F,GAAG,CAACxF,iBAA3F,CAAvB;AACA,UAAM6F,UAAU,GAAGtO,KAAK,CAACqJ,OAAN,CAAckF,aAAd,CAA4BF,cAA5B,EAA4CrP,MAAM,CAACiH,EAAP,CAAUD,MAAV,CAAiBwI,OAAjB,CAAyBC,OAArE,CAAnB;AACAjM,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eAAeA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,iBAASA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAAwB6D,EAAxB;AAA4B1C,YAAAA,KAAK,EAAE+H;AAAnC,eAAkDrF,EAA3D;AAAA,SAAd,CAAf;AAAA,OAAD,CAA1B;AACD,KAJD,MAIO;AACLzG,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eAAeA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,iBAASA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAAwB6D,EAAxB;AAA4B1C,YAAAA,KAAK,EAAE;AAAnC,eAA4C0C,EAArD;AAAA,SAAd,CAAf;AAAA,OAAD,CAA1B;AACD;;AACDrI,IAAAA,QAAQ,CAACf,0BAA0B,CAAC0C,uBAAD,CAA3B,CAAR;AACD,GA5CD;;AA8CA,MAAMmM,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACX,CAAD,EAAIY,aAAJ,EAAmBX,MAAnB,EAA2BC,GAA3B,EAAmC;AACjEF,IAAAA,CAAC,CAACK,cAAF;AACA5L,IAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,aACzBA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA;;AAAA,eACZA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAES6D,EAFT,6DAGO+E,MAHP,aAGOA,MAHP,uBAGOA,MAAM,CAAE5I,EAHf,EAGoBuJ,aAHpB,aAGoBA,aAHpB,uBAGoBA,aAAa,CAAEhL,KAHnC,mCAIOqK,MAJP,aAIOA,MAJP,uBAIOA,MAAM,CAAEtI,WAJf,EAI6BiJ,aAJ7B,aAI6BA,aAJ7B,uBAI6BA,aAAa,CAAE9K,IAJ5C,sBAMIoF,EAPQ;AAAA,OAAd,CADyB;AAAA,KAAD,CAA1B;AAWD,GAbD;;AAeA,MAAM2F,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACb,CAAD,EAAIE,GAAJ,EAAY;AACtCF,IAAAA,CAAC,CAACK,cAAF;;AACA,QAAI,CAACnL,UAAL,EAAiB;AACf,UAAI,CAACgL,GAAG,CAAClH,aAAT,EAAwB;AACtBvE,QAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,iBACzBA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,mBAASA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAAwB6D,EAAxB;AAA4BlC,cAAAA,aAAa,EAAE;AAA3C,iDAAyDkC,EAAzD;AAA6DlC,cAAAA,aAAa,EAAE;AAA5E,cAAT;AAAA,WAAd,CADyB;AAAA,SAAD,CAA1B;AAGD;AACF;AACF,GATD;;AAWA,MAAM8H,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,UAAD,EAAanL,KAAb,EAAoBsK,GAApB,EAA4B;AAC9DzL,IAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,aAAeA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,eAASA,EAAE,CAAC7D,EAAH,KAAU6I,GAAG,CAAC7I,EAAd,mCAAwB6D,EAAxB,2BAA6B6F,UAA7B,EAA0CnL,KAA1C,KAAoDsF,EAA7D;AAAA,OAAd,CAAf;AAAA,KAAD,CAA1B;AACD,GAFD;;AAGA,MAAM8F,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACrF,KAAD,EAAW;AACxC,QAAI,CAACzG,UAAL,EAAiB;AACf,UAAM+L,YAAY,GAAGzM,uBAAH,aAAGA,uBAAH,uBAAGA,uBAAuB,CAAEa,IAAzB,CAA8B,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAAC7J,EAAF,KAASsE,KAAK,GAAG,CAAxB;AAAA,OAA9B,CAArB;AACA,UAAMwF,UAAU,GAAG3M,uBAAH,aAAGA,uBAAH,uBAAGA,uBAAuB,CAAEa,IAAzB,CAA8B,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAAC7J,EAAF,KAASsE,KAAhB;AAAA,OAA9B,CAAnB;AACAlH,MAAAA,0BAA0B,CAAC,UAACwG,SAAD;AAAA,eACzBA,SAAS,CAAC1C,GAAV,CAAc,UAAC2C,EAAD;AAAA,iBACZA,EAAE,CAAC7D,EAAH,KAAUsE,KAAV,mCAEST,EAFT;AAGM7D,YAAAA,EAAE,EAAE8J,UAAF,aAAEA,UAAF,uBAAEA,UAAU,CAAE9J,EAHtB;AAIM6C,YAAAA,kBAAkB,EAAE+G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE/G,kBAJxC;AAKMC,YAAAA,SAAS,EAAE8G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE9G,SAL/B;AAMMC,YAAAA,cAAc,EAAE6G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE7G,cANpC;AAOMC,YAAAA,cAAc,EAAE4G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE5G,cAPpC;AAQMC,YAAAA,2BAA2B,EAAE2G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE3G,2BARjD;AASMC,YAAAA,cAAc,EAAE0G,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE1G,cATpC;AAUM6G,YAAAA,8BAA8B,EAAEH,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEG,8BAVpD;AAWM5G,YAAAA,2BAA2B,EAAEyG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEzG,2BAXjD;AAYMC,YAAAA,oBAAoB,EAAEwG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAExG,oBAZ1C;AAaM4G,YAAAA,8BAA8B,EAAEJ,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEI,8BAbpD;AAcM3G,YAAAA,iBAAiB,EAAEuG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEvG,iBAdvC;AAeMC,YAAAA,6BAA6B,EAAEsG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEtG,6BAfnD;AAgBM2G,YAAAA,sBAAsB,EAAEL,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEK,sBAhB5C;AAiBM9I,YAAAA,KAAK,EAAEyI,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEzI,KAjB3B;AAkBMoC,YAAAA,IAAI,EAAEqG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAErG,IAlB1B;AAmBMC,YAAAA,eAAe,EAAEoG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEpG,eAnBrC;AAoBMC,YAAAA,kBAAkB,EAAEmG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEnG,kBApBxC;AAqBMC,YAAAA,YAAY,EAAEkG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAElG,YArBlC;AAsBMC,YAAAA,QAAQ,EAAEiG,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEjG;AAtB9B,eAwBIE,EAzBQ;AAAA,SAAd,CADyB;AAAA,OAAD,CAA1B;AA6BD;AACF,GAlCD;;AAoCAvK,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIsB,KAAK,CAACqJ,OAAN,CAAcW,YAAd,CAA2B9I,aAA3B,EAA0C,IAA1C,CAAJ,EAAqD;AACnD,UAAMoO,kCAAkC,GAAG/M,uBAAH,aAAGA,uBAAH,uBAAGA,uBAAuB,CAAE+D,GAAzB,CAA6B,UAACiJ,SAAD,EAAe;AACrF,YAAMC,cAAc,GAAGtO,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEkC,IAAf,CAAoB,UAACqM,SAAD;AAAA,iBAAe,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEzH,aAAX,OAA6BuH,SAA7B,aAA6BA,SAA7B,uBAA6BA,SAAS,CAAEvH,aAAxC,CAAf;AAAA,SAApB,CAAvB;;AACA,YAAIwH,cAAJ,EAAoB;AAClB,iDAAYD,SAAZ,GAA0BC,cAA1B;AACD;;AACD,eAAOD,SAAP;AACD,OAN0C,CAA3C;AAOA/M,MAAAA,0BAA0B,CAAC8M,kCAAD,CAA1B;AACD;AACF,GAXQ,EAWN,CAACpO,aAAD,CAXM,CAAT,CAtoByF,CAipBpE;;AAErBxC,EAAAA,SAAS,CAAC,YAAM;AACdgE,IAAAA,8BAA8B,CAACR,2BAAD,CAA9B,CADc,CAEd;;AACA,QAAMwN,aAAa,GAAGnN,uBAAH,aAAGA,uBAAH,uBAAGA,uBAAuB,CAAE+D,GAAzB,CAA6B,UAACmD,OAAD,EAAa;AAAA;;AAC9D,UAAMkG,MAAM,GAAG3P,KAAK,CAACuB,sBAAN,CAA6BqO,yBAA7B,CACbnG,OAAO,CAACxB,kBADK,EAEbwB,OAAO,CAACvB,SAFK,EAGbuB,OAAO,CAAChB,iBAHK,CAAf;AAKA,UAAMoH,SAAS,GAAG7P,KAAK,CAACuB,sBAAN,CAA6BuO,kCAA7B,CAChBrG,OAAO,CAACf,6BAAR,IAAyC3I,SAAS,CAAC8F,YADnC,EAEhB8J,MAFgB,CAAlB;AAIA,aACGlG,OAAO,CAAC9C,uBAAR,GAAkCgJ,MAAnC,EACClG,OAAO,CAAChD,kBAAR,GAA6BoJ,SAD9B,EAECpG,OAAO,CAAC5C,sBAAR,GACC,0BAAA1F,iBAAiB,CAACiC,IAAlB,CAAuB,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAACc,cAAF,KAAqBC,QAAQ,CAACvG,OAAO,CAACZ,kBAAT,CAApC;AAAA,OAAvB,iFAA0FoH,UAA1F,KAAwG,EAH1G,EAICxG,OAAO,CAAC3C,gBAAR,GAA2B,0BAAA/G,SAAS,CAAC+F,qBAAV,CAAgC1C,IAAhC,CAAqC,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAACiB,IAAF,KAAWzG,OAAO,CAACX,YAA1B;AAAA,OAArC,iFAA8EjF,IAA9E,KAAsF,EAJlH,EAKC4F,OAAO,CAAC/C,YAAR,GAAuB,0BAAA3G,SAAS,CAACgG,eAAV,CAA0B3C,IAA1B,CAA+B,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAACiB,IAAF,KAAWzG,OAAO,CAACV,QAA1B;AAAA,OAA/B,iFAAoElF,IAApE,KAA4E,EALpG,EAMC4F,OAAO,CAAC7C,iCAAR,GACC,0BAAA1E,2BAA2B,CAACkB,IAA5B,CAAiC,UAAC6L,CAAD;AAAA,eAAOA,CAAC,CAAC7J,EAAF,KAASqE,OAAO,CAACf,6BAAxB;AAAA,OAAjC,iFAAyFlF,KAAzF,KAAkGzD,SAAS,CAAC8F,YAP9G,EAQA4D,OAAO,CAACrB,cAAR,IAA0BqB,OAAO,CAACpB,2BAAlC,IAAiEoB,OAAO,CAAClB,2BAAzE,IAAwGkB,OAAO,CAAChB,iBAAhH,GACKgB,OAAO,CAAClD,KAAR,GAAgBvG,KAAK,CAACqJ,OAAN,CAAckF,aAAd,CACf,CAAC9E,OAAO,CAACrB,cAAT,EAAyBqB,OAAO,CAACpB,2BAAjC,EAA8DoB,OAAO,CAAClB,2BAAtE,EAAmGkB,OAAO,CAAChB,iBAA3G,CADe,EAEfzJ,MAAM,CAACiH,EAAP,CAAUD,MAAV,CAAiBwI,OAAjB,CAAyBC,OAFV,CADrB,GAKKhF,OAAO,CAAClD,KAAR,GAAgB,IAdvB;AAgBD,KA1BqB,CAAtB;AA2BA3F,IAAAA,QAAQ,CAACf,0BAA0B,CAAC6P,aAAD,CAA3B,CAAR;AACA9O,IAAAA,QAAQ,CAACd,iCAAiC,CAACoC,2BAAD,CAAlC,CAAR;AACD,GAhCQ,EAgCN,CAACK,uBAAD,CAhCM,CAAT,CAnpByF,CAmrB1D;;AAE/B7D,EAAAA,SAAS,CACP,YAAM;AAAA;;AACJ,QAAMyK,KAAK,GAAGxI,QAAH,aAAGA,QAAH,6CAAGA,QAAQ,CAAEuG,OAAb,gFAAG,mBAAmBC,KAAtB,0DAAG,sBAA0BiC,SAAxC;;AACA,QAAM+G,oBAAoB,qBACrBnQ,KAAK,CAACmC,IAAN,CAAWiO,gBAAX,CAA4BxM,MAA5B,CADqB,CAA1B;;AAIAhB,IAAAA,gBAAgB,CAACuN,oBAAD,CAAhB;;AAEA,QAAInQ,KAAK,CAACqJ,OAAN,CAAcC,UAAd,CAAyBH,KAAzB,CAAJ,EAAqC;AACnCA,MAAAA,KAAK,CAACgH,oBAAD,EAAuB;AAC1B5G,QAAAA,SAAS,EAAE;AADe,OAAvB,CAAL;AAGD;AACF,GAdM,EAeP,CAACpJ,WAAD,CAfO,CAeO;AAfP,GAAT,CArrByF,CAusBzF;;AACA,MAAI,CAACwC,aAAD,IAAkB,CAACxC,WAAvB,EAAoC,OAAO,IAAP;AAEpC,sBACE,QAAC,iCAAD;AACE,IAAA,aAAa,EAAEA,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEiF,EAD9B;AAEE,IAAA,SAAS,EAAEtE,SAFb;AAGE,IAAA,MAAM,EAAE8C,MAHV;AAIE,IAAA,aAAa,EAAEjB,aAJjB;AAKE,IAAA,UAAU,EAAEK,UALd;AAME,IAAA,UAAU,EAAEC,UANd;AAOE,IAAA,SAAS,EAAEV,uBAPb;AAQE,IAAA,WAAW,EAAE2C,6BARf;AASE,IAAA,iBAAiB,EAAEmB,iBATrB;AAUE,IAAA,GAAG,EAAE1F,QAVP;AAWE,IAAA,QAAQ,kCACHL,QADG;AAENiM,MAAAA,MAAM,EAAErD,YAFF;AAGNsD,MAAAA,0BAA0B,EAA1BA,0BAHM;AAIN6D,MAAAA,QAAQ,EAAEtD,kBAJJ;AAKNuD,MAAAA,IAAI,EAAEtJ,UALA;AAMNgG,MAAAA,eAAe,EAAfA,eANM;AAON5B,MAAAA,gCAAgC,EAAhCA,gCAPM;AAQN0C,MAAAA,wBAAwB,EAAEA,wBARpB;AASNc,MAAAA,mBAAmB,EAAEA,mBATf;AAUNF,MAAAA,uBAAuB,EAAEA,uBAVnB;AAWNG,MAAAA,2BAA2B,EAAEA,2BAXvB;AAYNE,MAAAA,sBAAsB,EAAEA;AAZlB;AAXV;AAAA;AAAA;AAAA;AAAA,UADF;AA4BD;;GAtuBuB9O,6B;UACLrB,W,EAEJC,W,EACKA,W,EACwBA,W,EACHA,W,EACjBA,W,EACIA,W,EACJA,W,EACJA,W;;;KAVIoB,6B;AAAAA,6B","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEqual from 'lodash/isEqual';\r\nimport config from 'config';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport ProcessingInstructionsDetailsView from './ProcessingInstructionsDetails.view';\r\nimport {\r\n  selectUser,\r\n  showModal,\r\n  updateProcessingInstruction,\r\n  removePremiumTaxSignedLinesDocument,\r\n  addLoader,\r\n  storeProcessingInstructionDocuments,\r\n  viewDocumentsDownload,\r\n  setRiskRefsUploadWizardExcelExtract,\r\n  setRiskRefsUploadWizardHeaderMap,\r\n  submitExcelUploadedRiskRefs,\r\n  updatePiFinancialCheckList,\r\n  savePIRetainedBrokerageAmountData,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nProcessingInstructionsDetails.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n    next: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  childRef: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsDetails({ instruction, handlers, childRef }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const user = useSelector(selectUser);\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n  const getFinancialCheckListTableDetails = useSelector((state) => get(state, 'processingInstructions.financialCheckList')) || [];\r\n  const getRetainedBrokerageAmountList = useSelector((state) => get(state, 'processingInstructions.retainedBrokerageAmountList')) || [];\r\n  const excelRiskRefs = useSelector((state) => get(state, 'processingInstructions.excelRiskRefs')) || [];\r\n  const refDataCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes')) || [];\r\n  const referenceData = useSelector((state) => state.referenceData);\r\n  const headerMap = useSelector((state) => get(state, 'processingInstructions.headerMap')) || [];\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const userHasApproverAccess = utils.app.access.feature('processingInstructions.approverChecklist', ['create', 'update'], user);\r\n  const retainedBrokerageAmountData = utils.form.getSelectOptions('premiumCurrency', {\r\n    ...referenceData,\r\n    premiumCurrency: utils.processingInstructions.getRetainedBrokerageCurrencies(),\r\n  });\r\n\r\n  const [financialCheckListTable, setFinancialCheckListTable] = useState(getFinancialCheckListTableDetails);\r\n  const [retainedBrokerageAmountList, setRetainedBrokerageAmountList] = useState(getRetainedBrokerageAmountList);\r\n  const [defaultValues, setDefaultValues] = useState();\r\n\r\n  const fcDefaultTableData = instruction?.financialChecklistDetails || [];\r\n  const isCheckboxesEditable = userHasApproverAccess && isSubmittedAuthorisedSignatory;\r\n  const isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\r\n  const isReadOnly = !isEditable;\r\n  const leadRiskRef = instruction?.riskReferences?.find((r) => r.leadPolicy);\r\n  const toggleOptions = [\r\n    { label: utils.string.t('app.yes'), value: 1 },\r\n    { label: utils.string.t('app.no'), value: 0 },\r\n    { label: utils.string.t('app.na'), value: -1 },\r\n  ];\r\n  const fields = [\r\n    {\r\n      name: 'highPriority',\r\n      type: 'checkbox',\r\n      value: instruction?.details?.highPriority,\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'frontEndSendDocs',\r\n      type: 'checkbox',\r\n      value: instruction?.details?.frontEndSendDocs,\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'premiumTaxCalculationSheetAttachedNumber',\r\n      type: 'toggle',\r\n      value: instruction?.details?.premiumTaxCalculationSheetAttached,\r\n      options: toggleOptions,\r\n      buttonGroupProps: {\r\n        exclusive: true,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'premiumTaxCalculationSheetAttachedCheckbox',\r\n      type: 'checkbox',\r\n      value: instruction?.details?.premiumTaxAuthorisedSignatory,\r\n      disabled: !isCheckboxesEditable,\r\n    },\r\n    {\r\n      name: 'signedLinesCalculationSheetAttachedNumber',\r\n      type: 'toggle',\r\n      value: instruction?.details?.signedLinesCalculationSheetAttached,\r\n      options: toggleOptions,\r\n      buttonGroupProps: {\r\n        exclusive: true,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'signedLinesCalculationSheetAttachedCheckbox',\r\n      type: 'checkbox',\r\n      value: instruction?.details?.signedLinesAuthorisedSignatory,\r\n      disabled: !isCheckboxesEditable,\r\n    },\r\n    {\r\n      name: 'financialGridCheckbox',\r\n      type: 'checkbox',\r\n      value: instruction?.details?.riskReferencesAuthorisedSignatory,\r\n      disabled: !isCheckboxesEditable,\r\n    },\r\n    {\r\n      name: 'notes',\r\n      label: utils.string.t('processingInstructions.details.notes'),\r\n      type: 'textarea',\r\n      value: instruction?.details?.notes || '',\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 4000 },\r\n        multiline: true,\r\n        minRows: 4,\r\n        maxRows: 8,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n  ];\r\n  const financialCheckListTableFields = {\r\n    arrayItemDef: [\r\n      { id: 'id', name: 'id', visible: false, type: 'label', value: '', width: 10, label: '', visable: false },\r\n      {\r\n        id: 'riskReference',\r\n        name: 'riskReference',\r\n        visible: true,\r\n        type: 'text',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.facilityReference'),\r\n        disabled: true,\r\n      },\r\n      {\r\n        id: 'grossPremiumAmount',\r\n        name: 'grossPremiumAmount',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.grossPremium'),\r\n      },\r\n      {\r\n        id: 'slipOrder',\r\n        name: 'slipOrder',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.slipOrder'),\r\n      },\r\n      {\r\n        id: 'totalBrokerage',\r\n        name: 'totalBrokerage',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 100,\r\n        label: utils.string.t('processingInstructions.details.totalBrokerage'),\r\n      },\r\n      {\r\n        id: 'clientDiscount',\r\n        name: 'clientDiscount',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.clientDiscount'),\r\n      },\r\n      {\r\n        id: 'thirdPartyCommissionSharing',\r\n        visible: true,\r\n        name: 'thirdPartyCommissionSharing',\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.thirdPartyCommissionSharing'),\r\n      },\r\n      {\r\n        id: 'thirdPartyName',\r\n        name: 'thirdPartyName',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'text',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.thirdParty'),\r\n      },\r\n      {\r\n        id: 'pfInternalCommissionSharing',\r\n        name: 'pfInternalCommissionSharing',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.pfInternalCommissionSharing'),\r\n      },\r\n      {\r\n        id: 'pfInternalDepartment',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'text',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.pfInternalDepartment'),\r\n      },\r\n      {\r\n        id: 'retainedBrokerage',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.retainedBrokerage'),\r\n      },\r\n      {\r\n        id: 'retainedBrokerageCurrencyCode',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'select',\r\n        displayName: 'retainedBrokerageCurrencyCodeName',\r\n        options: retainedBrokerageAmountList,\r\n        optionKey: 'id',\r\n        optionLabel: 'label',\r\n        value: constants.CURRENCY_USD,\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.retainedBrokerageAmount'),\r\n      },\r\n      {\r\n        id: 'retainedBrokerageValue',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'retainedBrokeragelabel',\r\n        value: '',\r\n        width: 180,\r\n        label: '',\r\n      },\r\n      {\r\n        id: 'total',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'label',\r\n        value: '',\r\n        width: 80,\r\n        label: utils.string.t('processingInstructions.details.total'),\r\n      },\r\n      {\r\n        id: 'fees',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 80,\r\n        label: utils.string.t('processingInstructions.details.fees'),\r\n      },\r\n      {\r\n        id: 'otherDeductions',\r\n        name: 'otherDeductions',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'numericText',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.otherDeductions'),\r\n      },\r\n      {\r\n        id: 'settlementCurrency',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'select',\r\n        displayName: 'settlementCurrencyName',\r\n        options: refDataCurrencies,\r\n        optionKey: 'currencyCodeID',\r\n        optionLabel: 'currencyCd',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.settlementCurrency'),\r\n      },\r\n      {\r\n        id: 'paymentBasis',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'select',\r\n        displayName: 'paymentBasisName',\r\n        options: constants.PAYMENT_BASIS_OPTIONS,\r\n        optionKey: 'code',\r\n        optionLabel: 'name',\r\n        value: '',\r\n        width: 180,\r\n        label: utils.string.t('processingInstructions.details.paymentBasis'),\r\n      },\r\n      {\r\n        id: 'ppwOrPpc',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'select',\r\n        displayName: 'ppwOrPpcName',\r\n        options: constants.PPW_PPC_OPTIONS,\r\n        optionKey: 'code',\r\n        optionLabel: 'name',\r\n        value: '',\r\n        width: 120,\r\n        label: utils.string.t('processingInstructions.details.ppwOrPPC'),\r\n      },\r\n      {\r\n        id: 'ppwOrPpcDate',\r\n        visible: true,\r\n        ellipsis: true,\r\n        nowrap: false,\r\n        type: 'datepicker',\r\n        value: '',\r\n        width: 180,\r\n        format: config.ui.format.date.text,\r\n        label: utils.string.t('processingInstructions.details.ppwOrPPCDate'),\r\n      },\r\n      ...(!isReadOnly\r\n        ? [{ id: 'copyAction', visible: true, ellipsis: true, nowrap: false, type: 'copyIcon', value: '', width: 80, label: '' }]\r\n        : []),\r\n    ],\r\n    fieldData: [],\r\n  };\r\n\r\n  // Remove the unnecessary properties from both default and updated fc arrays before comparing\r\n  const isTableGridEdited = !isEqual(\r\n    fcDefaultTableData?.map(({ total, ...fcData }) => fcData),\r\n    financialCheckListTable?.map(\r\n      ({\r\n        convertedBrokerage,\r\n        id,\r\n        ppwOrPpcName,\r\n        retainedBrokerageAmount,\r\n        retainedBrokerageCurrencyCodeName,\r\n        settlementCurrencyName,\r\n        paymentBasisName,\r\n        total,\r\n        isRowSelected,\r\n        ...fcData\r\n      }) => fcData\r\n    )\r\n  );\r\n\r\n  const handleSave = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n\r\n    const updatedInstruction = {\r\n      ...instruction,\r\n      details: {\r\n        ...instruction.details,\r\n        highPriority: formValues.highPriority,\r\n        frontEndSendDocs: formValues.frontEndSendDocs,\r\n        notes: formValues.notes,\r\n        premiumTaxCalculationSheetAttached: formValues.premiumTaxCalculationSheetAttachedNumber,\r\n        premiumTaxAuthorisedSignatory: formValues.premiumTaxCalculationSheetAttachedCheckbox,\r\n        signedLinesCalculationSheetAttached: formValues.signedLinesCalculationSheetAttachedNumber,\r\n        signedLinesAuthorisedSignatory: formValues.signedLinesCalculationSheetAttachedCheckbox,\r\n        riskReferencesAuthorisedSignatory: formValues.financialGridCheckbox,\r\n      },\r\n      financialChecklistDetails: financialCheckListTable?.map((riskRef) => {\r\n        const isValidDate = moment(riskRef.ppwOrPpcDate).isValid();\r\n        const ppwOrPpcDate = isValidDate ? moment(riskRef.ppwOrPpcDate).format('YYYY-MM-DD') : '';\r\n        return {\r\n          instructionBrokerageDetailsId: riskRef.instructionBrokerageDetailsId,\r\n          riskReference: riskRef.riskReference,\r\n          grossPremiumAmount: riskRef.grossPremiumAmount,\r\n          slipOrder: riskRef.slipOrder,\r\n          totalBrokerage: riskRef.totalBrokerage,\r\n          clientDiscount: riskRef.clientDiscount,\r\n          thirdPartyCommissionSharing: riskRef.thirdPartyCommissionSharing,\r\n          thirdPartyName: riskRef.thirdPartyName,\r\n          pfInternalCommissionSharing: riskRef.pfInternalCommissionSharing,\r\n          pfInternalDepartment: riskRef.pfInternalDepartment,\r\n          retainedBrokerage: riskRef.retainedBrokerage,\r\n          retainedBrokerageCurrencyCode: riskRef.retainedBrokerageCurrencyCode,\r\n          fees: riskRef.fees,\r\n          otherDeductions: riskRef.otherDeductions,\r\n          settlementCurrency: riskRef.settlementCurrency,\r\n          paymentBasis: riskRef.paymentBasis,\r\n          ppwOrPpc: riskRef.ppwOrPpc,\r\n          ppwOrPpcDate: ppwOrPpcDate,\r\n        };\r\n      }),\r\n    };\r\n    setFinancialCheckListTable((prevState) => prevState.map((dd) => ({ ...dd, isRowSelected: false })));\r\n    dispatch(updateProcessingInstruction(updatedInstruction, formValues));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const reset = childRef?.current?.props?.resetFunc;\r\n\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset(defaultValues, { keepDirty: false });\r\n    }\r\n    const financialCheckListDBList = instruction?.financialChecklistDetails?.map((element, index) => ({ ...element, id: index }));\r\n    dispatch(updatePiFinancialCheckList(financialCheckListDBList));\r\n    setFinancialCheckListTable(financialCheckListDBList);\r\n  };\r\n\r\n  const handleUploadedDocument = (data, documentTypeKey) => {\r\n    const newFiles = data?.data?.documentDto;\r\n    if (!utils.generic.isValidArray(newFiles)) return;\r\n    const newGxbDocs = newFiles.map((file) => {\r\n      return {\r\n        ...file,\r\n        folderUuid: file?.folderUid,\r\n        name: file?.documentName,\r\n        path: file?.documentPath,\r\n        source: file?.documentSource,\r\n        typeId: file?.documentTypeId,\r\n        uuid: file?.documentUid,\r\n      };\r\n    });\r\n\r\n    const updatedDocuments = {\r\n      ...documents,\r\n      ...(documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piPremiumCalculation && {\r\n        premiumTaxDocument: newGxbDocs[0],\r\n      }),\r\n      ...(documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piMarketSigned && {\r\n        signedLinesDocument: newGxbDocs[0],\r\n      }),\r\n    };\r\n    dispatch(storeProcessingInstructionDocuments(updatedDocuments));\r\n  };\r\n\r\n  const uploadPremiumTaxSignedLinesModal = (documentTypeKey) => (files) => {\r\n    dispatch(addLoader('DmsUploadFiles'));\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_UPLOAD_FILES',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.upload.modalItems.uploadDocuments'),\r\n          maxWidth: 'xl',\r\n          componentProps: {\r\n            files,\r\n            context: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n            referenceId: Number(instruction?.id),\r\n            sourceId: Number(leadRiskRef?.xbInstanceId),\r\n            documentTypeKey,\r\n            postDmsDocumentsSuccess: (data) => handleUploadedDocument(data, documentTypeKey),\r\n            confirmLabel: utils.string.t('app.ok'),\r\n            cancelLabel: utils.string.t('app.goBack'),\r\n            confirmMessage: utils.string.t('processingInstructions.documentsWillNotBeSaved'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const confirmRemoveDocumentModal = (file, removeDocumentType) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.checklist.warning.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: utils.string.t('processingInstructions.removeDocumentWarning'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n            submitHandler: () => {\r\n              dispatch(removePremiumTaxSignedLinesDocument({ docIds: file?.documentId, removeDocumentType, documents }));\r\n            },\r\n            cancelHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleLinkDownload = (file) => {\r\n    dispatch(viewDocumentsDownload({ documentId: file?.documentId, documentName: file?.name }));\r\n  };\r\n\r\n  const uploadExcelData = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'PASTE_FROM_EXCEL',\r\n        props: {\r\n          title: utils.string.t('processingInstructions.details.piDetailsExcelModal.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          hideCompOnBlur: false,\r\n          componentProps: {\r\n            name: 'placement-overview',\r\n            headers: headerMap,\r\n            steps: 3,\r\n            isValidateHeadersMapping: true,\r\n            labels: {\r\n              step1: {\r\n                title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step1.title'),\r\n                hint: utils.string.t('processingInstructions.details.piDetailsExcelModal.step1.hint'),\r\n              },\r\n              step2: {\r\n                title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step2.title'),\r\n                hint: utils.string.t('processingInstructions.details.piDetailsExcelModal.step2.hint'),\r\n              },\r\n              step3: {\r\n                title: utils.string.html('processingInstructions.details.piDetailsExcelModal.step3.title'),\r\n                hint: utils.string.t(''),\r\n              },\r\n            },\r\n            handlers: {\r\n              extract: (data) => {\r\n                dispatch(setRiskRefsUploadWizardExcelExtract(data));\r\n              },\r\n              match: (data) => {\r\n                dispatch(setRiskRefsUploadWizardHeaderMap(data));\r\n              },\r\n              submit: () => {\r\n                dispatch(submitExcelUploadedRiskRefs());\r\n              },\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleTableTextboxChange = (e, column, row, name) => {\r\n    let value = column.type === 'text' ? e?.target?.value || '' : e?.floatValue || '';\r\n    if (column.type === 'text') {\r\n      e.preventDefault();\r\n    }\r\n\r\n    if (column.id === 'thirdPartyCommissionSharing') {\r\n      setFinancialCheckListTable((prevState) =>\r\n        prevState.map((dd) =>\r\n          dd.id === row.id\r\n            ? {\r\n                ...dd,\r\n                [column?.id]: value,\r\n                isThirdPartyCommissionDisabled: value ? false : true,\r\n              }\r\n            : dd\r\n        )\r\n      );\r\n    }\r\n    if (column.id === 'pfInternalCommissionSharing') {\r\n      setFinancialCheckListTable((prevState) =>\r\n        prevState.map((dd) =>\r\n          dd.id === row.id\r\n            ? {\r\n                ...dd,\r\n                [column?.id]: value,\r\n                isPfInternalDepartmentDisabled: value ? false : true,\r\n              }\r\n            : dd\r\n        )\r\n      );\r\n    }\r\n    if (column.id !== 'pfInternalCommissionSharing' && column.id !== 'thirdPartyCommissionSharing') {\r\n      setFinancialCheckListTable((prevState) => prevState.map((dd) => (dd.id === row.id ? { ...dd, [column?.id]: value } : dd)));\r\n    }\r\n\r\n    if (row.clientDiscount && row.thirdPartyCommissionSharing && row.pfInternalCommissionSharing && row.retainedBrokerage) {\r\n      const sumValuesArray = [row.clientDiscount, row.thirdPartyCommissionSharing, row.pfInternalCommissionSharing, row.retainedBrokerage];\r\n      const totalValue = utils.generic.getSumOfArray(sumValuesArray, config.ui.format.percent.decimal);\r\n      setFinancialCheckListTable((prevState) => prevState.map((dd) => (dd.id === row.id ? { ...dd, total: totalValue } : dd)));\r\n    } else {\r\n      setFinancialCheckListTable((prevState) => prevState.map((dd) => (dd.id === row.id ? { ...dd, total: null } : dd)));\r\n    }\r\n    dispatch(updatePiFinancialCheckList(financialCheckListTable));\r\n  };\r\n\r\n  const handleTableSelectChange = (e, selectedValue, column, row) => {\r\n    e.preventDefault();\r\n    setFinancialCheckListTable((prevState) =>\r\n      prevState.map((dd) =>\r\n        dd.id === row.id\r\n          ? {\r\n              ...dd,\r\n              [column?.id]: selectedValue?.value,\r\n              [column?.displayName]: selectedValue?.name,\r\n            }\r\n          : dd\r\n      )\r\n    );\r\n  };\r\n\r\n  const handleTableRowClick = (e, row) => {\r\n    e.preventDefault();\r\n    if (!isReadOnly) {\r\n      if (!row.isRowSelected) {\r\n        setFinancialCheckListTable((prevState) =>\r\n          prevState.map((dd) => (dd.id === row.id ? { ...dd, isRowSelected: true } : { ...dd, isRowSelected: false }))\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleTableDatePickerChange = (columnName, value, row) => {\r\n    setFinancialCheckListTable((prevState) => prevState.map((dd) => (dd.id === row.id ? { ...dd, [columnName]: value } : dd)));\r\n  };\r\n  const handleTableCopyRowData = (index) => {\r\n    if (!isReadOnly) {\r\n      const copyAboveRow = financialCheckListTable?.find((a) => a.id === index - 1);\r\n      const currentRow = financialCheckListTable?.find((a) => a.id === index);\r\n      setFinancialCheckListTable((prevState) =>\r\n        prevState.map((dd) =>\r\n          dd.id === index\r\n            ? {\r\n                ...dd,\r\n                id: currentRow?.id,\r\n                grossPremiumAmount: copyAboveRow?.grossPremiumAmount,\r\n                slipOrder: copyAboveRow?.slipOrder,\r\n                totalBrokerage: copyAboveRow?.totalBrokerage,\r\n                clientDiscount: copyAboveRow?.clientDiscount,\r\n                thirdPartyCommissionSharing: copyAboveRow?.thirdPartyCommissionSharing,\r\n                thirdPartyName: copyAboveRow?.thirdPartyName,\r\n                isThirdPartyCommissionDisabled: copyAboveRow?.isThirdPartyCommissionDisabled,\r\n                pfInternalCommissionSharing: copyAboveRow?.pfInternalCommissionSharing,\r\n                pfInternalDepartment: copyAboveRow?.pfInternalDepartment,\r\n                isPfInternalDepartmentDisabled: copyAboveRow?.isPfInternalDepartmentDisabled,\r\n                retainedBrokerage: copyAboveRow?.retainedBrokerage,\r\n                retainedBrokerageCurrencyCode: copyAboveRow?.retainedBrokerageCurrencyCode,\r\n                retainedBrokerageValue: copyAboveRow?.retainedBrokerageValue,\r\n                total: copyAboveRow?.total,\r\n                fees: copyAboveRow?.fees,\r\n                otherDeductions: copyAboveRow?.otherDeductions,\r\n                settlementCurrency: copyAboveRow?.settlementCurrency,\r\n                paymentBasis: copyAboveRow?.paymentBasis,\r\n                ppwOrPpc: copyAboveRow?.ppwOrPpc,\r\n              }\r\n            : dd\r\n        )\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isValidArray(excelRiskRefs, true)) {\r\n      const updatedPiRiskRefsFromExcelRiskRefs = financialCheckListTable?.map((piRiskRef) => {\r\n        const matchedRiskRef = excelRiskRefs?.find((exRiskRef) => exRiskRef?.riskReference === piRiskRef?.riskReference);\r\n        if (matchedRiskRef) {\r\n          return { ...piRiskRef, ...matchedRiskRef };\r\n        }\r\n        return piRiskRef;\r\n      });\r\n      setFinancialCheckListTable(updatedPiRiskRefsFromExcelRiskRefs);\r\n    }\r\n  }, [excelRiskRefs]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setRetainedBrokerageAmountList(retainedBrokerageAmountData);\r\n    // Calculate Retain Brokerage value & Total column for every row\r\n    const financialList = financialCheckListTable?.map((element) => {\r\n      const amount = utils.processingInstructions.getRetainedBrokerageValue(\r\n        element.grossPremiumAmount,\r\n        element.slipOrder,\r\n        element.retainedBrokerage\r\n      );\r\n      const brokerage = utils.processingInstructions.getRetainedBrokerageConvertedValue(\r\n        element.retainedBrokerageCurrencyCode || constants.CURRENCY_USD,\r\n        amount\r\n      );\r\n      return (\r\n        (element.retainedBrokerageAmount = amount),\r\n        (element.convertedBrokerage = brokerage),\r\n        (element.settlementCurrencyName =\r\n          refDataCurrencies.find((a) => a.currencyCodeID === parseInt(element.settlementCurrency))?.currencyCd || ''),\r\n        (element.paymentBasisName = constants.PAYMENT_BASIS_OPTIONS.find((a) => a.code === element.paymentBasis)?.name || ''),\r\n        (element.ppwOrPpcName = constants.PPW_PPC_OPTIONS.find((a) => a.code === element.ppwOrPpc)?.name || ''),\r\n        (element.retainedBrokerageCurrencyCodeName =\r\n          retainedBrokerageAmountData.find((a) => a.id === element.retainedBrokerageCurrencyCode)?.label || constants.CURRENCY_USD),\r\n        element.clientDiscount && element.thirdPartyCommissionSharing && element.pfInternalCommissionSharing && element.retainedBrokerage\r\n          ? (element.total = utils.generic.getSumOfArray(\r\n              [element.clientDiscount, element.thirdPartyCommissionSharing, element.pfInternalCommissionSharing, element.retainedBrokerage],\r\n              config.ui.format.percent.decimal\r\n            ))\r\n          : (element.total = null)\r\n      );\r\n    });\r\n    dispatch(updatePiFinancialCheckList(financialList));\r\n    dispatch(savePIRetainedBrokerageAmountData(retainedBrokerageAmountData));\r\n  }, [financialCheckListTable]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(\r\n    () => {\r\n      const reset = childRef?.current?.props?.resetFunc;\r\n      const updatedDefaultValues = {\r\n        ...utils.form.getInitialValues(fields),\r\n      };\r\n\r\n      setDefaultValues(updatedDefaultValues);\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset(updatedDefaultValues, {\r\n          keepDirty: false,\r\n        });\r\n      }\r\n    },\r\n    [instruction] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  // abort if data is not ready/available\r\n  if (!defaultValues || !instruction) return null;\r\n\r\n  return (\r\n    <ProcessingInstructionsDetailsView\r\n      instructionId={instruction?.id}\r\n      documents={documents}\r\n      fields={fields}\r\n      defaultValues={defaultValues}\r\n      isEditable={isEditable}\r\n      isReadOnly={isReadOnly}\r\n      tableRows={financialCheckListTable}\r\n      tableFields={financialCheckListTableFields}\r\n      isTableGridEdited={isTableGridEdited}\r\n      ref={childRef}\r\n      handlers={{\r\n        ...handlers,\r\n        cancel: handleCancel,\r\n        confirmRemoveDocumentModal,\r\n        download: handleLinkDownload,\r\n        save: handleSave,\r\n        uploadExcelData,\r\n        uploadPremiumTaxSignedLinesModal,\r\n        handleTableTextboxChange: handleTableTextboxChange,\r\n        handleTableRowClick: handleTableRowClick,\r\n        handleTableSelectChange: handleTableSelectChange,\r\n        handleTableDatePickerChange: handleTableDatePickerChange,\r\n        handleTableCopyRowData: handleTableCopyRowData,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}