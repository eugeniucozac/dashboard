{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\NewEnquiry\\\\NewEnquiry.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport * as Yup from 'yup';\nimport sortBy from 'lodash/sortBy'; // app\n\nimport styles from './NewEnquiry.styles';\nimport { OptionDetail } from 'components';\nimport { NewEnquiryView } from './NewEnquiry.view';\nimport { selectUserDepartmentIds, selectRefDataDepartments, enqueueNotification, hideModal, postNewEnquiry, resetReferenceDataBusinessTypes, resetReferenceDataInsureds, getReferenceDataByType } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nNewEnquiry.propTypes = {\n  handleClose: PropTypes.func.isRequired\n};\nexport default function NewEnquiry(_ref) {\n  _s();\n\n  var _this = this;\n\n  var handleClose = _ref.handleClose;\n  var classes = makeStyles(styles, {\n    name: 'NewEnquiry'\n  })();\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      placement = _useState2[0],\n      setPlacement = _useState2[1];\n\n  var userDepartments = useSelector(selectUserDepartmentIds);\n  var refDataDepartments = useSelector(selectRefDataDepartments);\n  useEffect(function () {\n    dispatch(resetReferenceDataBusinessTypes());\n    dispatch(resetReferenceDataInsureds());\n\n    if (!refDataDepartments || !refDataDepartments.length > 0) {\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.generic.reload', 'error'));\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var renderClientOptions = function renderClientOptions(options) {\n    if (!utils.generic.isValidArray(options)) return []; // orders clients with offices at the top\n    // if client has office(s), show the parent logo and name\n    // if client has multiple offices, split each office into its own entry\n\n    var optionsSorted = sortBy(options, [function (o) {\n      return !utils.generic.isValidArray(o.offices, true);\n    }]).reduce(function (acc, option) {\n      // no offices\n      if (!option.offices || option.offices && option.offices.length === 0) {\n        return [].concat(_toConsumableArray(acc), [option]);\n      } // single office\n\n\n      if (option.offices && option.offices.length === 1) {\n        var officeName = utils.office.getName(option.offices[0]);\n        var parent = utils.office.getParent(option.offices[0]);\n        var parentName = utils.client.parent.getName(parent);\n        return [].concat(_toConsumableArray(acc), [_objectSpread(_objectSpread({}, option), {}, {\n          name: \"\".concat(parentName, \" \").concat(officeName)\n        })]);\n      }\n\n      if (option.offices && option.offices.length > 1) {\n        var newOptionsFromOffices = option.offices.reduce(function (newOptions, nestedOffice) {\n          var officeName = utils.office.getName(nestedOffice);\n          var parent = utils.office.getParent(nestedOffice);\n          var parentName = utils.client.parent.getName(parent);\n          return [].concat(_toConsumableArray(newOptions), [_objectSpread(_objectSpread({}, option), {}, {\n            name: \"\".concat(parentName, \" \").concat(officeName),\n            offices: [nestedOffice]\n          })]);\n        }, []);\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(newOptionsFromOffices));\n      }\n\n      return acc;\n    }, []);\n    return optionsSorted.map(function (option) {\n      var clientDetail = utils.client.getClientDetail(option);\n      var clientOffice = utils.office.getMainOffice(option.offices);\n      var parent = utils.office.getParent(clientOffice);\n      var parentName = utils.client.parent.getName(parent);\n      var parentLogo = utils.client.parent.getLogoFilePath(parent);\n      return _objectSpread(_objectSpread({}, option), {}, {\n        label: /*#__PURE__*/_jsxDEV(OptionDetail, {\n          label: option.name,\n          detail: clientDetail,\n          children: parentLogo && /*#__PURE__*/_jsxDEV(\"img\", {\n            src: parentLogo,\n            alt: \"logo \".concat(parentName),\n            className: classes.logo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 28\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 11\n        }, _this)\n      });\n    });\n  };\n\n  var redirectionCallback = function redirectionCallback(id) {\n    if (!id) return;\n    history.push(\"\".concat(config.routes.placement.overview, \"/\").concat(id));\n  };\n\n  var filteredDepts = refDataDepartments.filter(function (dept) {\n    return userDepartments.includes(dept.id);\n  });\n  var hasSingleDept = filteredDepts && filteredDepts.length === 1;\n  var fields = [{\n    name: 'department',\n    type: 'autocomplete',\n    label: utils.string.t('form.departments.label'),\n    value: hasSingleDept ? [filteredDepts[0]] : [],\n    options: filteredDepts,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('form.departments.required'))).required(utils.string.t('form.departments.required')),\n    muiComponentProps: {\n      'data-testid': 'department',\n      autoFocus: !hasSingleDept\n    },\n    innerComponentProps: {\n      isDisabled: hasSingleDept\n    }\n  }, {\n    name: 'description',\n    type: 'text',\n    label: utils.string.t('form.description.label'),\n    value: '',\n    validation: Yup.string().required(utils.string.t('form.description.required')),\n    muiComponentProps: {\n      multiline: true,\n      maxRows: 5,\n      autoFocus: hasSingleDept,\n      'data-testid': 'description'\n    }\n  }, {\n    name: 'clients',\n    type: 'autocomplete',\n    label: utils.string.t('form.clients.label'),\n    value: [],\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('form.clients.required'))).required(utils.string.t('form.clients.required')),\n    innerComponentProps: {\n      valueLabel: 'name',\n      isMulti: true,\n      allowEmpty: true,\n      displayUpArowIcon: false,\n      maxMenuHeight: 205,\n      async: {\n        handler: function () {\n          var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n            var options,\n                _args = arguments;\n            return _regeneratorRuntime.wrap(function _callee$(_context) {\n              while (1) {\n                switch (_context.prev = _context.next) {\n                  case 0:\n                    _context.next = 2;\n                    return dispatch(getReferenceDataByType.apply(void 0, _args));\n\n                  case 2:\n                    options = _context.sent;\n                    return _context.abrupt(\"return\", renderClientOptions(options));\n\n                  case 4:\n                  case \"end\":\n                    return _context.stop();\n                }\n              }\n            }, _callee);\n          }));\n\n          function handler() {\n            return _handler.apply(this, arguments);\n          }\n\n          return handler;\n        }(),\n        type: 'client'\n      }\n    },\n    muiComponentProps: {\n      'data-testid': 'clients'\n    }\n  }, {\n    name: 'insureds',\n    type: 'autocomplete',\n    label: utils.string.t('form.insureds.label'),\n    hint: utils.string.t('form.insureds.hint'),\n    value: [],\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('form.insureds.required'))).required(utils.string.t('form.insureds.required')),\n    innerComponentProps: {\n      isCreatable: true,\n      isMulti: true,\n      allowEmpty: true,\n      displayUpArowIcon: false,\n      maxMenuHeight: 200,\n      async: {\n        handler: function handler() {\n          return dispatch(getReferenceDataByType.apply(void 0, arguments));\n        },\n        type: 'insured'\n      }\n    },\n    muiComponentProps: {\n      'data-testid': 'insureds'\n    }\n  }, {\n    name: 'inceptionDate',\n    type: 'datepicker',\n    label: utils.string.t('form.inceptionDate.label'),\n    value: null,\n    validation: Yup.string().nullable().required(utils.string.t('form.inceptionDate.required')),\n    muiComponentProps: {\n      'data-testid': 'inceptionDate'\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'secondary',\n    type: 'submit',\n    label: utils.string.t('placement.sheet.addDocument'),\n    handler: function () {\n      var _handler2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(formData) {\n        var newSubmission;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch(postNewEnquiry({\n                  formData: formData,\n                  addDocuments: true\n                }));\n\n              case 2:\n                newSubmission = _context2.sent;\n                setPlacement(newSubmission);\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      function handler(_x) {\n        return _handler2.apply(this, arguments);\n      }\n\n      return handler;\n    }()\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.create'),\n    handler: function handler(formData) {\n      return dispatch(postNewEnquiry({\n        formData: formData,\n        redirectionCallback: redirectionCallback\n      }));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(NewEnquiryView, {\n    fields: fields,\n    actions: actions,\n    placement: placement,\n    handleRedirect: redirectionCallback\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 246,\n    columnNumber: 10\n  }, this);\n}\n\n_s(NewEnquiry, \"Y7Ea00/tIFH7329oFkv04h29xy8=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector];\n});\n\n_c = NewEnquiry;\nNewEnquiry.displayName = \"NewEnquiry\";\nNewEnquiry.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"NewEnquiry\",\n  \"props\": {\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\NewEnquiry\\\\NewEnquiry.js\"] = {\n    name: \"NewEnquiry\",\n    docgenInfo: NewEnquiry.__docgenInfo,\n    path: \"src\\\\forms\\\\NewEnquiry\\\\NewEnquiry.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"NewEnquiry\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/NewEnquiry/NewEnquiry.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","useHistory","Yup","sortBy","styles","OptionDetail","NewEnquiryView","selectUserDepartmentIds","selectRefDataDepartments","enqueueNotification","hideModal","postNewEnquiry","resetReferenceDataBusinessTypes","resetReferenceDataInsureds","getReferenceDataByType","utils","config","makeStyles","NewEnquiry","propTypes","handleClose","func","isRequired","classes","name","dispatch","history","placement","setPlacement","userDepartments","refDataDepartments","length","renderClientOptions","options","generic","isValidArray","optionsSorted","o","offices","reduce","acc","option","officeName","office","getName","parent","getParent","parentName","client","newOptionsFromOffices","newOptions","nestedOffice","map","clientDetail","getClientDetail","clientOffice","getMainOffice","parentLogo","getLogoFilePath","label","logo","redirectionCallback","id","push","routes","overview","filteredDepts","filter","dept","includes","hasSingleDept","fields","type","string","t","value","optionKey","optionLabel","validation","array","of","mixed","required","muiComponentProps","autoFocus","innerComponentProps","isDisabled","multiline","maxRows","valueLabel","isMulti","allowEmpty","displayUpArowIcon","maxMenuHeight","async","handler","hint","isCreatable","nullable","actions","formData","addDocuments","newSubmission"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport * as Yup from 'yup';\r\nimport sortBy from 'lodash/sortBy';\r\n\r\n// app\r\nimport styles from './NewEnquiry.styles';\r\nimport { OptionDetail } from 'components';\r\nimport { NewEnquiryView } from './NewEnquiry.view';\r\nimport {\r\n  selectUserDepartmentIds,\r\n  selectRefDataDepartments,\r\n  enqueueNotification,\r\n  hideModal,\r\n  postNewEnquiry,\r\n  resetReferenceDataBusinessTypes,\r\n  resetReferenceDataInsureds,\r\n  getReferenceDataByType,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nNewEnquiry.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function NewEnquiry({ handleClose }) {\r\n  const classes = makeStyles(styles, { name: 'NewEnquiry' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const [placement, setPlacement] = useState();\r\n  const userDepartments = useSelector(selectUserDepartmentIds);\r\n  const refDataDepartments = useSelector(selectRefDataDepartments);\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(resetReferenceDataBusinessTypes());\r\n      dispatch(resetReferenceDataInsureds());\r\n\r\n      if (!refDataDepartments || !refDataDepartments.length > 0) {\r\n        dispatch(hideModal());\r\n        dispatch(enqueueNotification('notification.generic.reload', 'error'));\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const renderClientOptions = (options) => {\r\n    if (!utils.generic.isValidArray(options)) return [];\r\n\r\n    // orders clients with offices at the top\r\n    // if client has office(s), show the parent logo and name\r\n    // if client has multiple offices, split each office into its own entry\r\n    const optionsSorted = sortBy(options, [\r\n      (o) => {\r\n        return !utils.generic.isValidArray(o.offices, true);\r\n      },\r\n    ]).reduce((acc, option) => {\r\n      // no offices\r\n      if (!option.offices || (option.offices && option.offices.length === 0)) {\r\n        return [...acc, option];\r\n      }\r\n\r\n      // single office\r\n      if (option.offices && option.offices.length === 1) {\r\n        const officeName = utils.office.getName(option.offices[0]);\r\n        const parent = utils.office.getParent(option.offices[0]);\r\n        const parentName = utils.client.parent.getName(parent);\r\n\r\n        return [...acc, { ...option, name: `${parentName} ${officeName}` }];\r\n      }\r\n\r\n      if (option.offices && option.offices.length > 1) {\r\n        const newOptionsFromOffices = option.offices.reduce((newOptions, nestedOffice) => {\r\n          const officeName = utils.office.getName(nestedOffice);\r\n          const parent = utils.office.getParent(nestedOffice);\r\n          const parentName = utils.client.parent.getName(parent);\r\n\r\n          return [...newOptions, { ...option, name: `${parentName} ${officeName}`, offices: [nestedOffice] }];\r\n        }, []);\r\n\r\n        return [...acc, ...newOptionsFromOffices];\r\n      }\r\n\r\n      return acc;\r\n    }, []);\r\n\r\n    return optionsSorted.map((option) => {\r\n      const clientDetail = utils.client.getClientDetail(option);\r\n      const clientOffice = utils.office.getMainOffice(option.offices);\r\n      const parent = utils.office.getParent(clientOffice);\r\n      const parentName = utils.client.parent.getName(parent);\r\n      const parentLogo = utils.client.parent.getLogoFilePath(parent);\r\n\r\n      return {\r\n        ...option,\r\n        label: (\r\n          <OptionDetail label={option.name} detail={clientDetail}>\r\n            {parentLogo && <img src={parentLogo} alt={`logo ${parentName}`} className={classes.logo} />}\r\n          </OptionDetail>\r\n        ),\r\n      };\r\n    });\r\n  };\r\n\r\n  const redirectionCallback = (id) => {\r\n    if (!id) return;\r\n    history.push(`${config.routes.placement.overview}/${id}`);\r\n  };\r\n\r\n  const filteredDepts = refDataDepartments.filter((dept) => {\r\n    return userDepartments.includes(dept.id);\r\n  });\r\n\r\n  const hasSingleDept = filteredDepts && filteredDepts.length === 1;\r\n\r\n  const fields = [\r\n    {\r\n      name: 'department',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('form.departments.label'),\r\n      value: hasSingleDept ? [filteredDepts[0]] : [],\r\n      options: filteredDepts,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('form.departments.required')))\r\n        .required(utils.string.t('form.departments.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'department',\r\n        autoFocus: !hasSingleDept,\r\n      },\r\n      innerComponentProps: {\r\n        isDisabled: hasSingleDept,\r\n      },\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'text',\r\n      label: utils.string.t('form.description.label'),\r\n      value: '',\r\n      validation: Yup.string().required(utils.string.t('form.description.required')),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        maxRows: 5,\r\n        autoFocus: hasSingleDept,\r\n        'data-testid': 'description',\r\n      },\r\n    },\r\n    {\r\n      name: 'clients',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('form.clients.label'),\r\n      value: [],\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('form.clients.required')))\r\n        .required(utils.string.t('form.clients.required')),\r\n      innerComponentProps: {\r\n        valueLabel: 'name',\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        displayUpArowIcon: false,\r\n        maxMenuHeight: 205,\r\n        async: {\r\n          handler: async (...args) => {\r\n            const options = await dispatch(getReferenceDataByType(...args));\r\n            return renderClientOptions(options);\r\n          },\r\n          type: 'client',\r\n        },\r\n      },\r\n      muiComponentProps: {\r\n        'data-testid': 'clients',\r\n      },\r\n    },\r\n    {\r\n      name: 'insureds',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('form.insureds.label'),\r\n      hint: utils.string.t('form.insureds.hint'),\r\n      value: [],\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('form.insureds.required')))\r\n        .required(utils.string.t('form.insureds.required')),\r\n      innerComponentProps: {\r\n        isCreatable: true,\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        displayUpArowIcon: false,\r\n        maxMenuHeight: 200,\r\n        async: {\r\n          handler: (...args) => dispatch(getReferenceDataByType(...args)),\r\n          type: 'insured',\r\n        },\r\n      },\r\n      muiComponentProps: {\r\n        'data-testid': 'insureds',\r\n      },\r\n    },\r\n    {\r\n      name: 'inceptionDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('form.inceptionDate.label'),\r\n      value: null,\r\n      validation: Yup.string().nullable().required(utils.string.t('form.inceptionDate.required')),\r\n      muiComponentProps: {\r\n        'data-testid': 'inceptionDate',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'secondary',\r\n      type: 'submit',\r\n      label: utils.string.t('placement.sheet.addDocument'),\r\n      handler: async (formData) => {\r\n        const newSubmission = await dispatch(postNewEnquiry({ formData, addDocuments: true }));\r\n        setPlacement(newSubmission);\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.create'),\r\n      handler: (formData) => dispatch(postNewEnquiry({ formData, redirectionCallback })),\r\n    },\r\n  ];\r\n\r\n  return <NewEnquiryView fields={fields} actions={actions} placement={placement} handleRedirect={redirectionCallback} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}