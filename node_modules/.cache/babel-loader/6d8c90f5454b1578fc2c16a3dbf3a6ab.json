{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimDetailsSidebar\\\\ClaimDetailsSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { ClaimDetailsSidebarView } from './ClaimDetailsSidebar.view';\nimport * as utils from 'utils';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { getClaimsPreviewInformation, selectClaimsInformation } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimDetailsSidebar.propTypes = {\n  claim: PropTypes.object\n};\nexport default function ClaimDetailsSidebar(_ref) {\n  _s();\n\n  var claim = _ref.claim;\n  var dispatch = useDispatch();\n  var claimPreviewInfo = useSelector(selectClaimsInformation);\n  useEffect(function () {\n    if (utils.generic.isValidObject(claim)) dispatch(getClaimsPreviewInformation(claim === null || claim === void 0 ? void 0 : claim.claimID, claim === null || claim === void 0 ? void 0 : claim.claimRef, claim === null || claim === void 0 ? void 0 : claim.sourceId, claim === null || claim === void 0 ? void 0 : claim.divisionID));\n  }, [claim, dispatch]);\n  if (!utils.generic.isValidObject(claim)) return null;\n  return /*#__PURE__*/_jsxDEV(ClaimDetailsSidebarView, {\n    claim: claim,\n    claimPreviewInfo: claimPreviewInfo\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ClaimDetailsSidebar, \"la6J/06Ocz6dhEL3R51F9eFA/u4=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClaimDetailsSidebar;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimDetailsSidebar\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimDetailsSidebar/ClaimDetailsSidebar.js"],"names":["React","useEffect","PropTypes","ClaimDetailsSidebarView","utils","useDispatch","useSelector","getClaimsPreviewInformation","selectClaimsInformation","ClaimDetailsSidebar","propTypes","claim","object","dispatch","claimPreviewInfo","generic","isValidObject","claimID","claimRef","sourceId","divisionID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,uBAAT,QAAwC,4BAAxC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,2BAAT,EAAsCC,uBAAtC,QAAqE,QAArE;;AAEAC,mBAAmB,CAACC,SAApB,GAAgC;AAC9BC,EAAAA,KAAK,EAAET,SAAS,CAACU;AADa,CAAhC;AAIA,eAAe,SAASH,mBAAT,OAAwC;AAAA;;AAAA,MAATE,KAAS,QAATA,KAAS;AACrD,MAAME,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,gBAAgB,GAAGR,WAAW,CAACE,uBAAD,CAApC;AAEAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIG,KAAK,CAACW,OAAN,CAAcC,aAAd,CAA4BL,KAA5B,CAAJ,EACEE,QAAQ,CAACN,2BAA2B,CAACI,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEM,OAAR,EAAiBN,KAAjB,aAAiBA,KAAjB,uBAAiBA,KAAK,CAAEO,QAAxB,EAAkCP,KAAlC,aAAkCA,KAAlC,uBAAkCA,KAAK,CAAEQ,QAAzC,EAAmDR,KAAnD,aAAmDA,KAAnD,uBAAmDA,KAAK,CAAES,UAA1D,CAA5B,CAAR;AACH,GAHQ,EAGN,CAACT,KAAD,EAAQE,QAAR,CAHM,CAAT;AAKA,MAAI,CAACT,KAAK,CAACW,OAAN,CAAcC,aAAd,CAA4BL,KAA5B,CAAL,EAAyC,OAAO,IAAP;AAEzC,sBAAO,QAAC,uBAAD;AAAyB,IAAA,KAAK,EAAEA,KAAhC;AAAuC,IAAA,gBAAgB,EAAEG;AAAzD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAZuBL,mB;UACLJ,W,EACQC,W;;;KAFHG,mB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { ClaimDetailsSidebarView } from './ClaimDetailsSidebar.view';\r\nimport * as utils from 'utils';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { getClaimsPreviewInformation, selectClaimsInformation } from 'stores';\r\n\r\nClaimDetailsSidebar.propTypes = {\r\n  claim: PropTypes.object,\r\n};\r\n\r\nexport default function ClaimDetailsSidebar({ claim }) {\r\n  const dispatch = useDispatch();\r\n  const claimPreviewInfo = useSelector(selectClaimsInformation);\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isValidObject(claim))\r\n      dispatch(getClaimsPreviewInformation(claim?.claimID, claim?.claimRef, claim?.sourceId, claim?.divisionID));\r\n  }, [claim, dispatch]);\r\n\r\n  if (!utils.generic.isValidObject(claim)) return null;\r\n\r\n  return <ClaimDetailsSidebarView claim={claim} claimPreviewInfo={claimPreviewInfo} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}