{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment'; //app\n\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\nimport styles from './LinkClaimPolicy.styles';\nimport { FormGrid } from 'components';\nimport { getInterest, getClaimDetails, getCountriesList, getPolicyInsures, getPolicyClients, getPolicySections, getSettlementCurrency, selectClaimsPolicySections, selectClaimsInterest, selectClaimPolicyInsures, selectSectionEnabledUG, selectClaimsUnderwritingGroups, selectClaimPolicyClients, selectSettlementCurrency, selectAllClaimDetails, selectCountriesList, postClaimDetailsInformation, postEditClaimDetailsInformation } from 'stores';\nimport * as utils from 'utils';\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts'; //mui\n\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedClaimPolicy(_ref) {\n  _s();\n\n  var _currencies,\n      _countriesList,\n      _isFormsEdited$index,\n      _isFormsEdited$index2,\n      _isFormsEdited$index3,\n      _isFormsEdited$index4,\n      _isFormsEdited$index5,\n      _interest$items,\n      _isFormsEdited$index6,\n      _this = this;\n\n  var policyData = _ref.policyData,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      setActiveStep = _ref.setActiveStep,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      policyInformation = _ref.policyInformation,\n      claimInfo = _ref.claimInfo;\n  var classes = makeStyles(styles, {\n    name: 'LinkClaimPolicy'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataReady = _useState2[0],\n      setIsDataReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uwResetKey = _useState4[0],\n      setUWResetKey = _useState4[1];\n\n  var dispatch = useDispatch();\n  var currencies = useSelector(selectSettlementCurrency);\n  currencies = utils.generic.isValidArray(currencies) ? (_currencies = currencies) === null || _currencies === void 0 ? void 0 : _currencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      name: \"\".concat(currency.id, \" - \").concat(currency.name)\n    });\n  }) : null;\n  var interest = useSelector(selectClaimsInterest);\n  var allClaimDetails = useSelector(selectAllClaimDetails);\n  var underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var claimPolicyInsures = useSelector(selectClaimPolicyInsures);\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var claimPolicyClients = useSelector(selectClaimPolicyClients);\n  var countriesList = useSelector(selectCountriesList);\n  countriesList = utils.generic.isValidArray(countriesList) ? (_countriesList = countriesList) === null || _countriesList === void 0 ? void 0 : _countriesList.map(function (country) {\n    return _objectSpread(_objectSpread({}, country), {}, {\n      name: \"\".concat(country.id, \" - \").concat(country.name)\n    });\n  }) : null;\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  useEffect(function () {\n    dispatch(getCountriesList());\n    dispatch(getInterest());\n    dispatch(getSettlementCurrency());\n    dispatch(getPolicyInsures()).then(function (response) {\n      if (utils.generic.isValidArray(response)) {\n        dispatch(getPolicyClients()).then(function (response) {\n          if (utils.generic.isValidArray(response)) {\n            dispatch(getPolicySections()).then(function (response) {\n              if (utils.generic.isValidArray(response)) {\n                setIsDataReady(true);\n                setUWResetKey(new Date().getTime());\n              }\n            });\n          }\n        });\n      }\n    });\n    dispatch(getClaimDetails());\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var sectionAllOption = (policyData === null || policyData === void 0 ? void 0 : policyData.policyType) === CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyInfo = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n\n  var postSaveHandler = function postSaveHandler(postData) {\n    if (!(claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID)) {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          setValidation(false);\n        }\n      });\n    } else {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          setValidation(false);\n        }\n      });\n    }\n  };\n\n  var postEditSaveHandler = function postEditSaveHandler(postData) {\n    if (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID) {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          var formEdited = isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formEdited[index][\"formEditedStatus\"] = false;\n          setFormEditedStatus(formEdited);\n          setActiveStep(index + 1);\n          setValidation(true);\n        }\n      });\n    } else {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          var formEdited = isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formEdited[index][\"formEditedStatus\"] = false;\n          setFormEditedStatus(formEdited);\n          setActiveStep(index + 1);\n          setValidation(true);\n        }\n      });\n    }\n  };\n\n  var fields = [{\n    name: 'insured',\n    type: 'autocompletemui',\n    options: claimPolicyInsures || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.length) === 1 ? claimPolicyInsures[0] : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'client',\n    type: 'autocompletemui',\n    options: claimPolicyClients || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.length) === 1 ? claimPolicyClients[0] : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'countryCode',\n    type: 'autocompletemui',\n    options: countriesList || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'originalCurrencyCode',\n    type: 'autocompletemui',\n    options: currencies || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'settlementCurrencyCode',\n    type: 'autocompletemui',\n    options: currencies || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'interest',\n    type: 'autocompletemui',\n    options: interest === null || interest === void 0 ? void 0 : interest.items,\n    value: (interest === null || interest === void 0 ? void 0 : (_interest$items = interest.items) === null || _interest$items === void 0 ? void 0 : _interest$items.length) === 1 ? interest.items[0] : null,\n    optionKey: 'code',\n    optionLabel: 'description' //validation: Yup.object().nullable(),\n\n  }, {\n    name: 'movementType',\n    type: 'toggle',\n    label: '',\n    value: 'Advice',\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.advice'),\n      value: 'Advice'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.settlement'),\n      value: 'Settlement'\n    }]\n  }, {\n    name: 'order',\n    type: 'radio',\n    defaultValue: '100',\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n      value: '100'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.ourShare'),\n      value: '0'\n    }]\n  }, {\n    name: 'orderPercentage',\n    type: 'number',\n    defaultValue: underWritingGroups.percentageOfSelected || '0',\n    value: underWritingGroups.percentageOfSelected || '0',\n    muiComponentProps: {\n      disabled: true\n    },\n    validation: Yup.number().min(0, utils.string.t('claims.typeOfSettlement.errorMin')).max(100, utils.string.t('claims.typeOfSettlement.error'))\n  }].concat(_toConsumableArray(isBordereauFlag ? [{\n    name: 'certificateNumber',\n    type: 'text',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateNumber) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus) ? Yup.string().nullable().required(utils.string.t('validation.required')).max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }) : false\n  }, {\n    type: 'datepicker',\n    name: 'certificateInceptionDate',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateInceptionDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\n      return value && this.options.parent.certificateExpiryDate ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'certificateExpiryDate',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateExpiryDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\n      return value && this.options.parent.certificateInceptionDate ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }] : []), _toConsumableArray(isSectionEnabled ? [{\n    name: 'ugSections',\n    type: 'autocompletemui',\n    value: null,\n    options: policyInfo,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }] : []));\n\n  if (!isDataReady) {\n    return /*#__PURE__*/_jsxDEV(FormGrid, {\n      container: true,\n      spacing: 4,\n      children: _toConsumableArray(new Array(3)).map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 30,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 340,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 345,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 346,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 344,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 349,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 350,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 348,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 353,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 354,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 352,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 343,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 342,\n            columnNumber: 13\n          }, _this)]\n        }, \"skeleton-\".concat(index), true, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 336,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(LinkClaimPolicyView, {\n    fields: fields,\n    policyData: policyData,\n    claimPolicyInsures: claimPolicyInsures,\n    interest: interest,\n    uwResetKey: uwResetKey,\n    hasClaimRef: false,\n    underWritingGroups: underWritingGroups,\n    claimPolicyClients: claimPolicyClients,\n    isBordereauFlag: isBordereauFlag,\n    validation: validation,\n    setValidation: setValidation,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    setFormEditedStatus: setFormEditedStatus,\n    postSaveHandler: postSaveHandler,\n    postEditSaveHandler: postEditSaveHandler,\n    saveStatus: saveStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 365,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SelectedClaimPolicy, \"QqDbqmTgnfkPypWYoZGJif2u00s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SelectedClaimPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedClaimPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.js"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","Yup","moment","LinkClaimPolicyView","styles","FormGrid","getInterest","getClaimDetails","getCountriesList","getPolicyInsures","getPolicyClients","getPolicySections","getSettlementCurrency","selectClaimsPolicySections","selectClaimsInterest","selectClaimPolicyInsures","selectSectionEnabledUG","selectClaimsUnderwritingGroups","selectClaimPolicyClients","selectSettlementCurrency","selectAllClaimDetails","selectCountriesList","postClaimDetailsInformation","postEditClaimDetailsInformation","utils","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","Skeleton","makeStyles","SelectedClaimPolicy","policyData","selectedPolicyRender","validation","setValidation","setActiveStep","index","isFormsEdited","setFormEditedStatus","saveStatus","policyInformation","claimInfo","classes","name","isDataReady","setIsDataReady","uwResetKey","setUWResetKey","dispatch","currencies","generic","isValidArray","map","currency","id","interest","allClaimDetails","underWritingGroups","policySections","claimPolicyInsures","isSectionEnabled","claimPolicyClients","countriesList","country","isBordereauFlag","isBordereau","then","response","Date","getTime","sectionAllOption","policyType","string","t","description","policyInfo","postSaveHandler","postData","claimID","postEditSaveHandler","formEdited","form","fields","type","options","optionKey","optionLabel","value","length","formEditedStatus","object","nullable","required","when","schema","items","label","defaultValue","muiFormGroupProps","row","root","radioLabel","percentageOfSelected","muiComponentProps","disabled","number","min","max","certificateNumber","formInput","certificateInceptionDate","clearable","variant","format","fullWidth","datepicker","date","test","parent","certificateExpiryDate","isSameOrBefore","outputFormat","isSameOrAfter","Array","item"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,QAA1B,EAAoCC,SAApC,QAAqD,OAArD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,SAASC,mBAAT,QAAoC,wBAApC;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACIC,WADJ,EAEIC,eAFJ,EAGIC,gBAHJ,EAIIC,gBAJJ,EAKIC,gBALJ,EAMIC,iBANJ,EAOIC,qBAPJ,EAQIC,0BARJ,EASIC,oBATJ,EAUIC,wBAVJ,EAWIC,sBAXJ,EAYIC,8BAZJ,EAaIC,wBAbJ,EAcIC,wBAdJ,EAeIC,qBAfJ,EAgBIC,mBAhBJ,EAiBIC,2BAjBJ,EAkBIC,+BAlBJ,QAmBO,QAnBP;AAoBA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,wBAAT,EAAmCC,4BAAnC,QAAuE,QAAvE,C,CAEA;;AACA,OAAOC,QAAP,MAAqB,2BAArB;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,eAAe,SAASC,mBAAT,OAYb;AAAA;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;;AAAA,MAXAC,UAWA,QAXAA,UAWA;AAAA,MAVAC,oBAUA,QAVAA,oBAUA;AAAA,MATAC,UASA,QATAA,UASA;AAAA,MARAC,aAQA,QARAA,aAQA;AAAA,MAPAC,aAOA,QAPAA,aAOA;AAAA,MANAC,KAMA,QANAA,KAMA;AAAA,MALAC,aAKA,QALAA,aAKA;AAAA,MAJAC,mBAIA,QAJAA,mBAIA;AAAA,MAHAC,UAGA,QAHAA,UAGA;AAAA,MAFAC,iBAEA,QAFAA,iBAEA;AAAA,MADAC,SACA,QADAA,SACA;AACA,MAAMC,OAAO,GAAGb,UAAU,CAACxB,MAAD,EAAS;AAAEsC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADA,kBAEsC7C,QAAQ,CAAC,KAAD,CAF9C;AAAA;AAAA,MAEO8C,WAFP;AAAA,MAEoBC,cAFpB;;AAAA,mBAGoC/C,QAAQ,EAH5C;AAAA;AAAA,MAGOgD,UAHP;AAAA,MAGmBC,aAHnB;;AAIA,MAAMC,QAAQ,GAAGhD,WAAW,EAA5B;AACA,MAAIiD,UAAU,GAAGhD,WAAW,CAACmB,wBAAD,CAA5B;AACA6B,EAAAA,UAAU,GAAGxB,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BF,UAA3B,mBAAyCA,UAAzC,gDAAyC,YAAYG,GAAZ,CAAgB,UAACC,QAAD;AAAA,2CAAoBA,QAApB;AAA8BV,MAAAA,IAAI,YAAKU,QAAQ,CAACC,EAAd,gBAAsBD,QAAQ,CAACV,IAA/B;AAAlC;AAAA,GAAhB,CAAzC,GAAuI,IAApJ;AACA,MAAMY,QAAQ,GAAGtD,WAAW,CAACc,oBAAD,CAA5B;AACA,MAAMyC,eAAe,GAAGvD,WAAW,CAACoB,qBAAD,CAAnC;AACA,MAAMoC,kBAAkB,GAAGxD,WAAW,CAACiB,8BAAD,CAAtC;AACA,MAAMwC,cAAc,GAAGzD,WAAW,CAACa,0BAAD,CAAlC;AACA,MAAM6C,kBAAkB,GAAG1D,WAAW,CAACe,wBAAD,CAAtC;AACA,MAAM4C,gBAAgB,GAAG3D,WAAW,CAACgB,sBAAD,CAApC;AACA,MAAM4C,kBAAkB,GAAG5D,WAAW,CAACkB,wBAAD,CAAtC;AACA,MAAI2C,aAAa,GAAG7D,WAAW,CAACqB,mBAAD,CAA/B;AACAwC,EAAAA,aAAa,GAAGrC,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BW,aAA3B,sBAA4CA,aAA5C,mDAA4C,eAAeV,GAAf,CAAmB,UAACW,OAAD;AAAA,2CAAgBA,OAAhB;AAAyBpB,MAAAA,IAAI,YAAKoB,OAAO,CAACT,EAAb,gBAAqBS,OAAO,CAACpB,IAA7B;AAA7B;AAAA,GAAnB,CAA5C,GAAqI,IAArJ;AAEA,MAAMqB,eAAe,GAAG,CAAAR,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAES,WAAjB,MAAiC,CAAzD;AAEAlE,EAAAA,SAAS,CAAC,YAAI;AACZiD,IAAAA,QAAQ,CAACvC,gBAAgB,EAAjB,CAAR;AACAuC,IAAAA,QAAQ,CAACzC,WAAW,EAAZ,CAAR;AACAyC,IAAAA,QAAQ,CAACnC,qBAAqB,EAAtB,CAAR;AACAmC,IAAAA,QAAQ,CAACtC,gBAAgB,EAAjB,CAAR,CAA6BwD,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC5C,UAAI1C,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BgB,QAA3B,CAAJ,EAA0C;AACxCnB,QAAAA,QAAQ,CAACrC,gBAAgB,EAAjB,CAAR,CAA6BuD,IAA7B,CAAkC,UAACC,QAAD,EAAc;AAC9C,cAAI1C,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BgB,QAA3B,CAAJ,EAA0C;AACxCnB,YAAAA,QAAQ,CAACpC,iBAAiB,EAAlB,CAAR,CAA8BsD,IAA9B,CAAmC,UAACC,QAAD,EAAY;AAC7C,kBAAI1C,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BgB,QAA3B,CAAJ,EAA0C;AACxCtB,gBAAAA,cAAc,CAAC,IAAD,CAAd;AACAE,gBAAAA,aAAa,CAAC,IAAIqB,IAAJ,GAAWC,OAAX,EAAD,CAAb;AACD;AACF,aALD;AAMD;AACF,SATD;AAUD;AACF,KAbH;AAcArB,IAAAA,QAAQ,CAACxC,eAAe,EAAhB,CAAR;AACD,GAnBQ,EAmBN,CAACwB,oBAAD,CAnBM,CAAT,CAnBA,CAsC4B;;AAE5B,MAAMsC,gBAAgB,GACtB,CAAAvC,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAEwC,UAAZ,MAA2B7C,wBAAwB,CAAC,CAAD,CAAnD,GACI,EADJ,GAEI,CAAC;AAAE4B,IAAAA,EAAE,EAAE3B,4BAAN;AAAoCgB,IAAAA,IAAI,EAAElB,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,SAAf,CAA1C;AAAqEC,IAAAA,WAAW,EAAE;AAAlF,GAAD,CAHJ;AAKA,MAAMC,UAAU,aAAOL,gBAAP,qBAA6B7C,KAAK,CAACyB,OAAN,CAAcC,YAAd,CAA2BO,cAA3B,EAA2C,IAA3C,IAAmDA,cAAnD,GAAoE,EAAjG,EAAhB;;AAEA,MAAMkB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD,EAAc;AACpC,QAAG,EAACpC,SAAD,aAACA,SAAD,uBAACA,SAAS,CAAEqC,OAAZ,CAAH,EAAuB;AACrB9B,MAAAA,QAAQ,CAACzB,2BAA2B,CAACsD,QAAD,CAA5B,CAAR,CAAgDX,IAAhD,CAAqD,UAACC,QAAD,EAAY;AAC/D,YAAGA,QAAH,EAAY;AACVjC,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,OAJD;AAKD,KAND,MAMK;AACHc,MAAAA,QAAQ,CAACxB,+BAA+B,CAACqD,QAAD,CAAhC,CAAR,CAAoDX,IAApD,CAAyD,UAACC,QAAD,EAAY;AACnE,YAAGA,QAAH,EAAY;AACVjC,UAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,OAJD;AAKD;AAEF,GAfD;;AAiBA,MAAM6C,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACF,QAAD,EAAc;AACxC,QAAGpC,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEqC,OAAd,EAAsB;AACpB9B,MAAAA,QAAQ,CAACxB,+BAA+B,CAACqD,QAAD,CAAhC,CAAR,CAAoDX,IAApD,CAAyD,UAACC,QAAD,EAAY;AACnE,YAAGA,QAAH,EAAY;AACV,cAAMa,UAAU,GAAG3C,aAAa,CAACe,GAAd,CAAkB,UAAC6B,IAAD;AAAA,qCAAgBA,IAAhB;AAAA,WAAlB,CAAnB;AACAD,UAAAA,UAAU,CAAC5C,KAAD,CAAV,CAAkB,kBAAlB,IAAwC,KAAxC;AACAE,UAAAA,mBAAmB,CAAC0C,UAAD,CAAnB;AACA7C,UAAAA,aAAa,CAACC,KAAK,GAAG,CAAT,CAAb;AACAF,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,OARD;AASD,KAVD,MAUK;AACHc,MAAAA,QAAQ,CAACzB,2BAA2B,CAACsD,QAAD,CAA5B,CAAR,CAAgDX,IAAhD,CAAqD,UAACC,QAAD,EAAY;AAC/D,YAAGA,QAAH,EAAY;AACV,cAAMa,UAAU,GAAG3C,aAAa,CAACe,GAAd,CAAkB,UAAC6B,IAAD;AAAA,qCAAgBA,IAAhB;AAAA,WAAlB,CAAnB;AACAD,UAAAA,UAAU,CAAC5C,KAAD,CAAV,CAAkB,kBAAlB,IAAwC,KAAxC;AACAE,UAAAA,mBAAmB,CAAC0C,UAAD,CAAnB;AACA7C,UAAAA,aAAa,CAACC,KAAK,GAAG,CAAT,CAAb;AACAF,UAAAA,aAAa,CAAC,IAAD,CAAb;AACD;AACF,OARD;AASD;AACF,GAtBD;;AAwBA,MAAMgD,MAAM,IACV;AACEvC,IAAAA,IAAI,EAAE,SADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAEzB,kBAAkB,IAAI,EAHjC;AAIE0B,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,WAAW,EAAE,MALf;AAMEC,IAAAA,KAAK,EAAE,CAAA5B,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAE6B,MAApB,MAA+B,CAA/B,GAAmC7B,kBAAkB,CAAC,CAAD,CAArD,GAA2D,IANpE;AAOE1B,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,oCAAAA,aAAa,CAAGD,KAAH,CAAb,8EAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACwF,MAAJ,GACpDC,QADoD,GAEpDC,QAFoD,CAE3CnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAF2C,EAGpDoB,IAHoD,CAG/C,aAH+C,EAGhC,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACwF,MAAJ,GAAaC,QAAb,EAA/C;AAAA,KAHgC,CAA3C,GAGsF;AAVpG,GADU,EAaV;AACEhD,IAAAA,IAAI,EAAE,QADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAEvB,kBAAkB,IAAI,EAHjC;AAIEwB,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,WAAW,EAAE,MALf;AAMEC,IAAAA,KAAK,EAAE,CAAA1B,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAE2B,MAApB,MAA+B,CAA/B,GAAmC3B,kBAAkB,CAAC,CAAD,CAArD,GAA2D,IANpE;AAOE5B,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAGD,KAAH,CAAb,gFAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACwF,MAAJ,GACpDC,QADoD,GAEpDC,QAFoD,CAE3CnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAF2C,EAGpDoB,IAHoD,CAG/C,aAH+C,EAGhC,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACwF,MAAJ,GAAaC,QAAb,EAA/C;AAAA,KAHgC,CAA3C,GAGsF;AAVpG,GAbU,EAyBV;AACEhD,IAAAA,IAAI,EAAE,aADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAEtB,aAAa,IAAI,EAH5B;AAIEuB,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,WAAW,EAAE,MALf;AAMEC,IAAAA,KAAK,EAAE,IANT;AAOEtD,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAGD,KAAH,CAAb,gFAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACwF,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC,CAA3C,GAAqH;AAPnI,GAzBU,EAkCV;AACE9B,IAAAA,IAAI,EAAE,sBADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAEnC,UAAU,IAAI,EAHzB;AAIEoC,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,WAAW,EAAE,MALf;AAMEC,IAAAA,KAAK,EAAE,IANT;AAOEtD,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAGD,KAAH,CAAb,gFAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACwF,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC,CAA3C,GAAqH;AAPnI,GAlCU,EA2CV;AACE9B,IAAAA,IAAI,EAAE,wBADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAEnC,UAAU,IAAI,EAHzB;AAIEoC,IAAAA,SAAS,EAAE,IAJb;AAKEC,IAAAA,WAAW,EAAE,MALf;AAMEC,IAAAA,KAAK,EAAE,IANT;AAOEtD,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAGD,KAAH,CAAb,gFAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACwF,MAAJ,GAAaC,QAAb,GAAwBC,QAAxB,CAAiCnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAjC,CAA3C,GAAqH;AAPnI,GA3CU,EAoDV;AACE9B,IAAAA,IAAI,EAAE,UADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEC,IAAAA,OAAO,EAAE7B,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAEwC,KAHrB;AAIER,IAAAA,KAAK,EAAE,CAAAhC,QAAQ,SAAR,IAAAA,QAAQ,WAAR,+BAAAA,QAAQ,CAAEwC,KAAV,oEAAiBP,MAAjB,MAA4B,CAA5B,GAAgCjC,QAAQ,CAACwC,KAAT,CAAe,CAAf,CAAhC,GAAoD,IAJ7D;AAKEV,IAAAA,SAAS,EAAE,MALb;AAMEC,IAAAA,WAAW,EAAE,aANf,CAOE;;AAPF,GApDU,EA6DV;AACE3C,IAAAA,IAAI,EAAE,cADR;AAEEwC,IAAAA,IAAI,EAAE,QAFR;AAGEa,IAAAA,KAAK,EAAE,EAHT;AAIET,IAAAA,KAAK,EAAE,QAJT;AAKEH,IAAAA,OAAO,EAAE,CACP;AACEY,MAAAA,KAAK,EAAEvE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,gCAAf,CADT;AAEEc,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACES,MAAAA,KAAK,EAAEvE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,oCAAf,CADT;AAEEc,MAAAA,KAAK,EAAE;AAFT,KALO;AALX,GA7DU,EA6EV;AACE5C,IAAAA,IAAI,EAAE,OADR;AAEEwC,IAAAA,IAAI,EAAE,OAFR;AAGEc,IAAAA,YAAY,EAAE,KAHhB;AAIEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,GAAG,EAAE,IADY;AAEjBzD,MAAAA,OAAO,EAAE;AACP0D,QAAAA,IAAI,EAAE1D,OAAO,CAAC2D;AADP;AAFQ,KAJrB;AAUEjB,IAAAA,OAAO,EAAE,CACP;AACEY,MAAAA,KAAK,EAAEvE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,2CAAf,CADT;AAEEc,MAAAA,KAAK,EAAE;AAFT,KADO,EAKP;AACES,MAAAA,KAAK,EAAEvE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,kCAAf,CADT;AAEEc,MAAAA,KAAK,EAAE;AAFT,KALO;AAVX,GA7EU,EAkGV;AACE5C,IAAAA,IAAI,EAAE,iBADR;AAEEwC,IAAAA,IAAI,EAAE,QAFR;AAGEc,IAAAA,YAAY,EAAExC,kBAAkB,CAAC6C,oBAAnB,IAA2C,GAH3D;AAIEf,IAAAA,KAAK,EAAE9B,kBAAkB,CAAC6C,oBAAnB,IAA2C,GAJpD;AAKEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,QAAQ,EAAE;AADO,KALrB;AAQEvE,IAAAA,UAAU,EAAE/B,GAAG,CAACuG,MAAJ,GACTC,GADS,CACL,CADK,EACFjF,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,kCAAf,CADE,EAETkC,GAFS,CAEL,GAFK,EAEAlF,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAFA;AARd,GAlGU,4BA8GNT,eAAe,GACf,CACE;AACErB,IAAAA,IAAI,EAAE,mBADR;AAEEwC,IAAAA,IAAI,EAAE,MAFR;AAGEI,IAAAA,KAAK,EAAE,CAAA/B,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEoD,iBAAjB,KAAsC,EAH/C;AAIEL,IAAAA,iBAAiB,EAAE;AACjB7D,MAAAA,OAAO,EAAE;AACP0D,QAAAA,IAAI,EAAE1D,OAAO,CAACmE;AADP;AADQ,KAJrB;AASE5E,IAAAA,UAAU,EAAE,CAAAI,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAGD,KAAH,CAAb,gFAAwBqD,gBAAxB,IAA2CvF,GAAG,CAACsE,MAAJ,GACpDmB,QADoD,GAEpDC,QAFoD,CAE3CnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAF2C,EAGpDkC,GAHoD,CAGhD,EAHgD,EAG5ClF,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,uDAAf,CAH4C,EAIpDoB,IAJoD,CAI/C,aAJ+C,EAIhC,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACsE,MAAJ,EAA/C;AAAA,KAJgC,CAA3C,GAI2E;AAbzF,GADF,EAgBE;AACEW,IAAAA,IAAI,EAAE,YADR;AAEExC,IAAAA,IAAI,EAAE,0BAFR;AAGE4C,IAAAA,KAAK,EAAE,CAAA/B,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEsD,wBAAjB,KAA6C,IAHtD;AAIEP,IAAAA,iBAAiB,EAAE;AACjBQ,MAAAA,SAAS,EAAE,KADM;AAEjBC,MAAAA,OAAO,EAAE,QAFQ;AAGjBC,MAAAA,MAAM,EAAE,YAHS;AAIjBC,MAAAA,SAAS,EAAE,IAJM;AAKjBxE,MAAAA,OAAO,EAAE;AACP0D,QAAAA,IAAI,EAAE1D,OAAO,CAACyE;AADP;AALQ,KAJrB;AAaElF,IAAAA,UAAU,EAAE/B,GAAG,CAACkH,IAAJ,GACTzB,QADS,GAETC,QAFS,CAEAnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAFA,EAGT4C,IAHS,CAGJ,MAHI,EAGI5F,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,uDAAf,CAHJ,EAG6E,UAAUc,KAAV,EAAiB;AACtG,aAAOA,KAAK,IAAI,KAAKH,OAAL,CAAakC,MAAb,CAAoBC,qBAA7B,GACHpH,MAAM,CAACoF,KAAD,CAAN,CAAciC,cAAd,CAA6B,KAAKpC,OAAL,CAAakC,MAAb,CAAoBC,qBAAjD,CADG,GAEH,IAFJ;AAGD,KAPS,EAQT1B,IARS,CAQJ,aARI,EAQW,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACkH,IAAJ,GAAWzB,QAAX,EAA/C;AAAA,KARX,CAbd;AAsBE8B,IAAAA,YAAY,EAAE;AAtBhB,GAhBF,EAwCE;AACEtC,IAAAA,IAAI,EAAE,YADR;AAEExC,IAAAA,IAAI,EAAE,uBAFR;AAGE4C,IAAAA,KAAK,EAAE,CAAA/B,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE+D,qBAAjB,KAA0C,IAHnD;AAIEhB,IAAAA,iBAAiB,EAAE;AACjBQ,MAAAA,SAAS,EAAE,KADM;AAEjBC,MAAAA,OAAO,EAAE,QAFQ;AAGjBC,MAAAA,MAAM,EAAE,YAHS;AAIjBC,MAAAA,SAAS,EAAE,IAJM;AAKjBxE,MAAAA,OAAO,EAAE;AACP0D,QAAAA,IAAI,EAAE1D,OAAO,CAACyE;AADP;AALQ,KAJrB;AAaElF,IAAAA,UAAU,EAAE/B,GAAG,CAACkH,IAAJ,GACTzB,QADS,GAETC,QAFS,CAEAnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAFA,EAGT4C,IAHS,CAGJ,MAHI,EAGI5F,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,sDAAf,CAHJ,EAG4E,UAAUc,KAAV,EAAiB;AACrG,aAAOA,KAAK,IAAI,KAAKH,OAAL,CAAakC,MAAb,CAAoBR,wBAA7B,GACH3G,MAAM,CAACoF,KAAD,CAAN,CAAcmC,aAAd,CAA4B,KAAKtC,OAAL,CAAakC,MAAb,CAAoBR,wBAAhD,CADG,GAEH,IAFJ;AAGD,KAPS,EAQTjB,IARS,CAQJ,aARI,EAQW,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACkH,IAAJ,GAAWzB,QAAX,EAA/C;AAAA,KARX,CAbd;AAsBE8B,IAAAA,YAAY,EAAE;AAtBhB,GAxCF,CADe,GAkEf,EAhLM,sBAiLN7D,gBAAgB,GAChB,CACE;AACEjB,IAAAA,IAAI,EAAE,YADR;AAEEwC,IAAAA,IAAI,EAAE,iBAFR;AAGEI,IAAAA,KAAK,EAAE,IAHT;AAIEH,IAAAA,OAAO,EAAET,UAJX;AAKEU,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,MANf;AAOErD,IAAAA,UAAU,EAAE/B,GAAG,CAACwF,MAAJ,GACTC,QADS,GAETC,QAFS,CAEAnE,KAAK,CAAC+C,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAFA,EAGToB,IAHS,CAGJ,aAHI,EAGW,UAAC5D,UAAD,EAAa6D,MAAb;AAAA,aAAyB7D,UAAU,GAAG6D,MAAH,GAAY5F,GAAG,CAACwF,MAAJ,GAAaC,QAAb,EAA/C;AAAA,KAHX;AAPd,GADF,CADgB,GAehB,EAhMM,EAAZ;;AAqME,MAAI,CAAC/C,WAAL,EAAkB;AAChB,wBACA,QAAC,QAAD;AAAU,MAAA,SAAS,MAAnB;AAAoB,MAAA,OAAO,EAAE,CAA7B;AAAA,gBACK,mBAAI,IAAI+E,KAAJ,CAAU,CAAV,CAAJ,EAAkBvE,GAAlB,CAAsB,UAACwE,IAAD,EAAOxF,KAAP;AAAA,4BACvB,QAAC,QAAD;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,IAAI,MAAd;AAAe,YAAA,EAAE,EAAE,EAAnB;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,MAAM,EAAE,EAAlB;AAAsB,cAAA,KAAK,EAAE;AAA7B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,QAAC,QAAD;AAAU,YAAA,IAAI,MAAd;AAAe,YAAA,EAAE,EAAE,EAAnB;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAoB,cAAA,OAAO,EAAE,CAA7B;AAAA,sCACI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAuB,gBAAA,EAAE,EAAE,CAA3B;AAAA,wCACA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,yBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,uBADJ,eAKI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAuB,gBAAA,EAAE,EAAE,CAA3B;AAAA,wCACA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,yBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,uBALJ,eASI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAuB,gBAAA,EAAE,EAAE,CAA3B;AAAA,wCACA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,yBADA,eAEA,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,OAAO,EAAC;AAA9B;AAAA;AAAA;AAAA;AAAA,yBAFA;AAAA;AAAA;AAAA;AAAA;AAAA,uBATJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA,8BAA2BA,KAA3B;AAAA;AAAA;AAAA;AAAA,iBADuB;AAAA,OAAtB;AADL;AAAA;AAAA;AAAA;AAAA,YADA;AA2BD;;AAED,sBACE,QAAC,mBAAD;AACE,IAAA,MAAM,EAAE8C,MADV;AAEE,IAAA,UAAU,EAAEnD,UAFd;AAGE,IAAA,kBAAkB,EAAE4B,kBAHtB;AAIE,IAAA,QAAQ,EAAEJ,QAJZ;AAKE,IAAA,UAAU,EAAET,UALd;AAME,IAAA,WAAW,EAAE,KANf;AAOE,IAAA,kBAAkB,EAAEW,kBAPtB;AAQE,IAAA,kBAAkB,EAAEI,kBARtB;AASE,IAAA,eAAe,EAAEG,eATnB;AAUE,IAAA,UAAU,EAAE/B,UAVd;AAWE,IAAA,aAAa,EAAEC,aAXjB;AAYE,IAAA,KAAK,EAAEE,KAZT;AAaE,IAAA,aAAa,EAAEC,aAbjB;AAcE,IAAA,mBAAmB,EAAEC,mBAdvB;AAeE,IAAA,eAAe,EAAEsC,eAfnB;AAgBE,IAAA,mBAAmB,EAAEG,mBAhBvB;AAiBE,IAAA,UAAU,EAAExC;AAjBd;AAAA;AAAA;AAAA;AAAA,UADF;AAqBH;;GA5VuBT,mB;UAgBL9B,W,EACAC,W,EAEAA,W,EACOA,W,EACGA,W,EACJA,W,EACIA,W,EACFA,W,EACEA,W,EACPA,W;;;KA1BE6B,mB","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\r\nimport styles from './LinkClaimPolicy.styles';\r\nimport { FormGrid } from 'components';\r\nimport { \r\n    getInterest,\r\n    getClaimDetails,\r\n    getCountriesList,\r\n    getPolicyInsures,\r\n    getPolicyClients,\r\n    getPolicySections,\r\n    getSettlementCurrency,\r\n    selectClaimsPolicySections,\r\n    selectClaimsInterest,\r\n    selectClaimPolicyInsures,\r\n    selectSectionEnabledUG,\r\n    selectClaimsUnderwritingGroups,\r\n    selectClaimPolicyClients,\r\n    selectSettlementCurrency,\r\n    selectAllClaimDetails,\r\n    selectCountriesList,\r\n    postClaimDetailsInformation,\r\n    postEditClaimDetailsInformation,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts';\r\n\r\n//mui\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function SelectedClaimPolicy({\r\n  policyData, \r\n  selectedPolicyRender, \r\n  validation, \r\n  setValidation,\r\n  setActiveStep,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  policyInformation,\r\n  claimInfo,\r\n}){\r\n  const classes = makeStyles(styles, { name: 'LinkClaimPolicy' })();\r\n  const [isDataReady, setIsDataReady] = useState(false);\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const dispatch = useDispatch();\r\n  let currencies = useSelector(selectSettlementCurrency);\r\n  currencies = utils.generic.isValidArray(currencies) ? currencies?.map((currency) => ({ ...currency, name: `${currency.id} - ${currency.name}` })) : null;\r\n  const interest = useSelector(selectClaimsInterest);\r\n  const allClaimDetails = useSelector(selectAllClaimDetails);\r\n  const underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const claimPolicyInsures = useSelector(selectClaimPolicyInsures);\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const claimPolicyClients = useSelector(selectClaimPolicyClients);\r\n  let countriesList = useSelector(selectCountriesList);\r\n  countriesList = utils.generic.isValidArray(countriesList) ? countriesList?.map((country)=>({...country, name: `${country.id} - ${country.name}`})) : null;\r\n  \r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n\r\n  useEffect(()=>{\r\n    dispatch(getCountriesList());\r\n    dispatch(getInterest());\r\n    dispatch(getSettlementCurrency());\r\n    dispatch(getPolicyInsures()).then((response) => {\r\n        if (utils.generic.isValidArray(response)) {\r\n          dispatch(getPolicyClients()).then((response) => {\r\n            if (utils.generic.isValidArray(response)) {\r\n              dispatch(getPolicySections()).then((response)=>{\r\n                if (utils.generic.isValidArray(response)) {\r\n                  setIsDataReady(true);\r\n                  setUWResetKey(new Date().getTime());\r\n                }\r\n              })\r\n            }\r\n          });\r\n        }\r\n      });\r\n    dispatch(getClaimDetails());\r\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sectionAllOption =\r\n  policyData?.policyType === CLAIM_SECTION_ENABLED_UG[0]\r\n    ? []\r\n    : [{ id: CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyInfo = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const postSaveHandler = (postData) => {\r\n    if(!claimInfo?.claimID){\r\n      dispatch(postClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          setValidation(false);\r\n        }\r\n      });\r\n    }else{\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          setValidation(false);\r\n        }\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const postEditSaveHandler = (postData) => {  \r\n    if(claimInfo?.claimID){\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          const formEdited = isFormsEdited.map((form) => ({ ...form }));\r\n          formEdited[index][\"formEditedStatus\"] = false;\r\n          setFormEditedStatus(formEdited);\r\n          setActiveStep(index + 1);\r\n          setValidation(true);\r\n        }\r\n      });\r\n    }else{\r\n      dispatch(postClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          const formEdited = isFormsEdited.map((form) => ({ ...form }));\r\n          formEdited[index][\"formEditedStatus\"] = false;\r\n          setFormEditedStatus(formEdited);\r\n          setActiveStep(index + 1);\r\n          setValidation(true);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'insured',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyInsures || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: claimPolicyInsures?.length === 1 ? claimPolicyInsures[0] : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())) : false,\r\n    },\r\n    {\r\n      name: 'client',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyClients || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: claimPolicyClients?.length === 1 ? claimPolicyClients[0] : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())) : false,\r\n    },\r\n    {\r\n      name: 'countryCode',\r\n      type: 'autocompletemui',\r\n      options: countriesList || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'originalCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: currencies || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'settlementCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: currencies || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'interest',\r\n      type: 'autocompletemui',\r\n      options: interest?.items,\r\n      value: interest?.items?.length === 1 ? interest.items[0] : null,\r\n      optionKey: 'code',\r\n      optionLabel: 'description',\r\n      //validation: Yup.object().nullable(),\r\n    },\r\n    {\r\n      name: 'movementType',\r\n      type: 'toggle',\r\n      label: '',\r\n      value: 'Advice',\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.advice'),\r\n          value: 'Advice',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.settlement'),\r\n          value: 'Settlement',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'order',\r\n      type: 'radio',\r\n      defaultValue: '100',\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n          value: '100',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.ourShare'),\r\n          value: '0',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'orderPercentage',\r\n      type: 'number',\r\n      defaultValue: underWritingGroups.percentageOfSelected || '0',\r\n      value: underWritingGroups.percentageOfSelected || '0',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n      validation: Yup.number()\r\n        .min(0, utils.string.t('claims.typeOfSettlement.errorMin'))\r\n        .max(100, utils.string.t('claims.typeOfSettlement.error')),\r\n    },\r\n    ...(isBordereauFlag\r\n      ? [\r\n          {\r\n            name: 'certificateNumber',\r\n            type: 'text',\r\n            value: allClaimDetails?.certificateNumber || '',\r\n            muiComponentProps: {\r\n              classes: {\r\n                root: classes.formInput,\r\n              },\r\n            },\r\n            validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.string()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string())) : false,\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateInceptionDate',\r\n            value: allClaimDetails?.certificateInceptionDate || null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\r\n                return value && this.options.parent.certificateExpiryDate\r\n                  ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateExpiryDate',\r\n            value: allClaimDetails?.certificateExpiryDate || null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\r\n                return value && this.options.parent.certificateInceptionDate\r\n                  ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isSectionEnabled\r\n      ? [\r\n          {\r\n            name: 'ugSections',\r\n            type: 'autocompletemui',\r\n            value: null,\r\n            options: policyInfo,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            validation: Yup.object()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n    \r\n\r\n    if (!isDataReady) {\r\n      return (\r\n      <FormGrid container spacing={4}>\r\n          {[...new Array(3)].map((item, index) => (\r\n          <Fragment key={`skeleton-${index}`}>\r\n            <FormGrid item xs={12}>\r\n              <Skeleton height={30} width={100} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container spacing={4}>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </Fragment>\r\n          ))}\r\n      </FormGrid>\r\n      );\r\n    }\r\n\r\n    return(\r\n      <LinkClaimPolicyView\r\n        fields={fields}\r\n        policyData={policyData}\r\n        claimPolicyInsures={claimPolicyInsures}\r\n        interest={interest}\r\n        uwResetKey={uwResetKey}\r\n        hasClaimRef={false}\r\n        underWritingGroups={underWritingGroups}\r\n        claimPolicyClients={claimPolicyClients}\r\n        isBordereauFlag={isBordereauFlag}\r\n        validation={validation}\r\n        setValidation={setValidation}\r\n        index={index}\r\n        isFormsEdited={isFormsEdited}\r\n        setFormEditedStatus={setFormEditedStatus}\r\n        postSaveHandler={postSaveHandler}\r\n        postEditSaveHandler={postEditSaveHandler}\r\n        saveStatus={saveStatus}\r\n      />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}