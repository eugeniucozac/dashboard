{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEnterLossCardInformation\\\\ClaimsEnterLossCardInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport * as utils from 'utils';\nimport { ClaimsEnterLossCardInformationView } from './ClaimsEnterLossCardInformation.view';\nimport { showModal, hideModal, selectClaimAssociateWithLoss } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEnterLossCardInformation.propTypes = {\n  lossInformation: PropTypes.object,\n  catCodes: PropTypes.array,\n  claimRefDetailsStatus: PropTypes.bool,\n  claimId: PropTypes.string,\n  setCheckPage: PropTypes.func,\n  setCurrentContextActive: PropTypes.func\n};\nClaimsEnterLossCardInformation.defaultProps = {\n  setCurrentContextActive: function setCurrentContextActive() {}\n};\nexport default function ClaimsEnterLossCardInformation(_ref) {\n  _s();\n\n  var lossInformation = _ref.lossInformation,\n      catCodes = _ref.catCodes,\n      claimRefDetailsStatus = _ref.claimRefDetailsStatus,\n      claimId = _ref.claimId,\n      setCheckPage = _ref.setCheckPage,\n      setCurrentContextActive = _ref.setCurrentContextActive;\n  var dispatch = useDispatch();\n  var claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\n  var catCode = catCodes.find(function (item) {\n    return Number(item.id) === lossInformation.catCodesID;\n  });\n\n  var handleEditLossClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              setCurrentContextActive(false);\n              _context.next = 3;\n              return dispatch(showModal({\n                component: 'EDIT_LOSS_INFORMATION',\n                props: {\n                  title: utils.string.t('claims.lossInformation.title'),\n                  hideCompOnBlur: false,\n                  fullWidth: true,\n                  maxWidth: 'xl',\n                  disableAutoFocus: true,\n                  componentProps: {\n                    clickOutSideHandler: function clickOutSideHandler() {\n                      return _clickOutSideHandler();\n                    },\n                    submitHandler: function submitHandler() {\n                      setCurrentContextActive(true);\n                    }\n                  }\n                }\n              }));\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleEditLossClick() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var _clickOutSideHandler = function _clickOutSideHandler() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('status.alert'),\n        hint: utils.string.t('navigation.title'),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          cancelLabel: utils.string.t('app.no'),\n          confirmLabel: utils.string.t('app.yes'),\n          submitHandler: function submitHandler() {\n            setCurrentContextActive(true);\n            dispatch(hideModal());\n          },\n          cancelHandler: function cancelHandler() {}\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsEnterLossCardInformationView, {\n    handleEditLossClick: handleEditLossClick,\n    data: lossInformation,\n    catCode: catCode,\n    claimId: claimId,\n    claimRefDetailsStatus: claimRefDetailsStatus,\n    claimsAssociateWithLoss: claimsAssociateWithLoss,\n    setCheckPage: setCheckPage\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 81,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsEnterLossCardInformation, \"4uhVnLHvM7zFNWUTCsID09G/gRc=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClaimsEnterLossCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEnterLossCardInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEnterLossCardInformation/ClaimsEnterLossCardInformation.js"],"names":["React","PropTypes","useDispatch","useSelector","utils","ClaimsEnterLossCardInformationView","showModal","hideModal","selectClaimAssociateWithLoss","ClaimsEnterLossCardInformation","propTypes","lossInformation","object","catCodes","array","claimRefDetailsStatus","bool","claimId","string","setCheckPage","func","setCurrentContextActive","defaultProps","dispatch","claimsAssociateWithLoss","catCode","find","item","Number","id","catCodesID","handleEditLossClick","component","props","title","t","hideCompOnBlur","fullWidth","maxWidth","disableAutoFocus","componentProps","clickOutSideHandler","submitHandler","hint","cancelLabel","confirmLabel","cancelHandler"],"mappings":";;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kCAAT,QAAmD,uCAAnD;AACA,SAASC,SAAT,EAAoBC,SAApB,EAA+BC,4BAA/B,QAAmE,QAAnE;;AAEAC,8BAA8B,CAACC,SAA/B,GAA2C;AACzCC,EAAAA,eAAe,EAAEV,SAAS,CAACW,MADc;AAEzCC,EAAAA,QAAQ,EAAEZ,SAAS,CAACa,KAFqB;AAGzCC,EAAAA,qBAAqB,EAAEd,SAAS,CAACe,IAHQ;AAIzCC,EAAAA,OAAO,EAAEhB,SAAS,CAACiB,MAJsB;AAKzCC,EAAAA,YAAY,EAAElB,SAAS,CAACmB,IALiB;AAMzCC,EAAAA,uBAAuB,EAAEpB,SAAS,CAACmB;AANM,CAA3C;AASAX,8BAA8B,CAACa,YAA/B,GAA8C;AAC5CD,EAAAA,uBAAuB,EAAE,mCAAM,CAAE;AADW,CAA9C;AAIA,eAAe,SAASZ,8BAAT,OAOZ;AAAA;;AAAA,MANDE,eAMC,QANDA,eAMC;AAAA,MALDE,QAKC,QALDA,QAKC;AAAA,MAJDE,qBAIC,QAJDA,qBAIC;AAAA,MAHDE,OAGC,QAHDA,OAGC;AAAA,MAFDE,YAEC,QAFDA,YAEC;AAAA,MADDE,uBACC,QADDA,uBACC;AACD,MAAME,QAAQ,GAAGrB,WAAW,EAA5B;AACA,MAAMsB,uBAAuB,GAAGrB,WAAW,CAACK,4BAAD,CAA3C;AACA,MAAMiB,OAAO,GAAGZ,QAAQ,CAACa,IAAT,CAAc,UAACC,IAAD;AAAA,WAAUC,MAAM,CAACD,IAAI,CAACE,EAAN,CAAN,KAAoBlB,eAAe,CAACmB,UAA9C;AAAA,GAAd,CAAhB;;AAEA,MAAMC,mBAAmB;AAAA,yEAAG;AAAA;AAAA;AAAA;AAAA;AAC1BV,cAAAA,uBAAuB,CAAC,KAAD,CAAvB;AAD0B;AAAA,qBAEpBE,QAAQ,CACZjB,SAAS,CAAC;AACR0B,gBAAAA,SAAS,EAAE,uBADH;AAERC,gBAAAA,KAAK,EAAE;AACLC,kBAAAA,KAAK,EAAE9B,KAAK,CAACc,MAAN,CAAaiB,CAAb,CAAe,8BAAf,CADF;AAELC,kBAAAA,cAAc,EAAE,KAFX;AAGLC,kBAAAA,SAAS,EAAE,IAHN;AAILC,kBAAAA,QAAQ,EAAE,IAJL;AAKLC,kBAAAA,gBAAgB,EAAE,IALb;AAMLC,kBAAAA,cAAc,EAAE;AACdC,oBAAAA,mBAAmB,EAAE;AAAA,6BAAMA,oBAAmB,EAAzB;AAAA,qBADP;AAEdC,oBAAAA,aAAa,EAAE,yBAAM;AACnBrB,sBAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACD;AAJa;AANX;AAFC,eAAD,CADG,CAFY;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAnBU,mBAAmB;AAAA;AAAA;AAAA,KAAzB;;AAsBA,MAAMU,oBAAmB,GAAG,SAAtBA,oBAAsB,GAAM;AAChClB,IAAAA,QAAQ,CACNjB,SAAS,CAAC;AACR0B,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE9B,KAAK,CAACc,MAAN,CAAaiB,CAAb,CAAe,cAAf,CADF;AAELQ,QAAAA,IAAI,EAAEvC,KAAK,CAACc,MAAN,CAAaiB,CAAb,CAAe,kBAAf,CAFD;AAGLE,QAAAA,SAAS,EAAE,IAHN;AAILC,QAAAA,QAAQ,EAAE,IAJL;AAKLE,QAAAA,cAAc,EAAE;AACdI,UAAAA,WAAW,EAAExC,KAAK,CAACc,MAAN,CAAaiB,CAAb,CAAe,QAAf,CADC;AAEdU,UAAAA,YAAY,EAAEzC,KAAK,CAACc,MAAN,CAAaiB,CAAb,CAAe,SAAf,CAFA;AAGdO,UAAAA,aAAa,EAAE,yBAAM;AACnBrB,YAAAA,uBAAuB,CAAC,IAAD,CAAvB;AACAE,YAAAA,QAAQ,CAAChB,SAAS,EAAV,CAAR;AACD,WANa;AAOduC,UAAAA,aAAa,EAAE,yBAAM,CAAE;AAPT;AALX;AAFC,KAAD,CADH,CAAR;AAoBD,GArBD;;AAuBA,sBACE,QAAC,kCAAD;AACE,IAAA,mBAAmB,EAAEf,mBADvB;AAEE,IAAA,IAAI,EAAEpB,eAFR;AAGE,IAAA,OAAO,EAAEc,OAHX;AAIE,IAAA,OAAO,EAAER,OAJX;AAKE,IAAA,qBAAqB,EAAEF,qBALzB;AAME,IAAA,uBAAuB,EAAES,uBAN3B;AAOE,IAAA,YAAY,EAAEL;AAPhB;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GApEuBV,8B;UAQLP,W,EACeC,W;;;KATVM,8B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { ClaimsEnterLossCardInformationView } from './ClaimsEnterLossCardInformation.view';\r\nimport { showModal, hideModal, selectClaimAssociateWithLoss } from 'stores';\r\n\r\nClaimsEnterLossCardInformation.propTypes = {\r\n  lossInformation: PropTypes.object,\r\n  catCodes: PropTypes.array,\r\n  claimRefDetailsStatus: PropTypes.bool,\r\n  claimId: PropTypes.string,\r\n  setCheckPage: PropTypes.func,\r\n  setCurrentContextActive: PropTypes.func,\r\n};\r\n\r\nClaimsEnterLossCardInformation.defaultProps = {\r\n  setCurrentContextActive: () => {},\r\n};\r\n\r\nexport default function ClaimsEnterLossCardInformation({\r\n  lossInformation,\r\n  catCodes,\r\n  claimRefDetailsStatus,\r\n  claimId,\r\n  setCheckPage,\r\n  setCurrentContextActive,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\r\n  const catCode = catCodes.find((item) => Number(item.id) === lossInformation.catCodesID);\r\n\r\n  const handleEditLossClick = async () => {\r\n    setCurrentContextActive(false);\r\n    await dispatch(\r\n      showModal({\r\n        component: 'EDIT_LOSS_INFORMATION',\r\n        props: {\r\n          title: utils.string.t('claims.lossInformation.title'),\r\n          hideCompOnBlur: false,\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            clickOutSideHandler: () => clickOutSideHandler(),\r\n            submitHandler: () => {\r\n              setCurrentContextActive(true);\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const clickOutSideHandler = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('status.alert'),\r\n          hint: utils.string.t('navigation.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            submitHandler: () => {\r\n              setCurrentContextActive(true);\r\n              dispatch(hideModal());\r\n            },\r\n            cancelHandler: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <ClaimsEnterLossCardInformationView\r\n      handleEditLossClick={handleEditLossClick}\r\n      data={lossInformation}\r\n      catCode={catCode}\r\n      claimId={claimId}\r\n      claimRefDetailsStatus={claimRefDetailsStatus}\r\n      claimsAssociateWithLoss={claimsAssociateWithLoss}\r\n      setCheckPage={setCheckPage}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}