{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TasksAdditionInfo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport { DetailCard } from 'modules';\nimport { Accordion, TableHead, TableCell, Overflow, Skeleton } from 'components';\nimport styles from './TaskDetails.styles';\nimport { Typography, makeStyles, Grid, Table, TableBody, TableRow, Divider } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTasksAdditionInfo.propTypes = {\n  handleStep: PropTypes.func.isRequired,\n  lossInfo: PropTypes.array.isRequired,\n  policyInfo: PropTypes.array.isRequired,\n  claimInfo: PropTypes.array.isRequired,\n  underWritingInfo: PropTypes.object.isRequired,\n  underWritingGroupColumns: PropTypes.array.isRequired\n};\nexport function TasksAdditionInfo(_ref) {\n  _s();\n\n  var _useState3,\n      _this = this;\n\n  var _ref$handleStep = _ref.handleStep,\n      handleStep = _ref$handleStep === void 0 ? function () {} : _ref$handleStep,\n      lossInfo = _ref.lossInfo,\n      policyInfo = _ref.policyInfo,\n      claimInfo = _ref.claimInfo,\n      underWritingInfo = _ref.underWritingInfo,\n      underWritingGroupColumns = _ref.underWritingGroupColumns,\n      taskInfo = _ref.taskInfo,\n      isTaskDetailsLoading = _ref.isTaskDetailsLoading,\n      _ref$taskObj = _ref.taskObj,\n      taskObj = _ref$taskObj === void 0 ? {} : _ref$taskObj;\n\n  var _useState = useState((_useState3 = {}, _defineProperty(_useState3, utils.string.t('claims.lossInformation.title'), false), _defineProperty(_useState3, utils.string.t('claims.claimInformation.title'), false), _defineProperty(_useState3, utils.string.t('claims.claimInformation.policyTitle'), false), _defineProperty(_useState3, utils.string.t('claims.underWritingGroups.title'), false), _useState3)),\n      _useState2 = _slicedToArray(_useState, 2),\n      accordionsExpandStatus = _useState2[0],\n      setAccordiansStatus = _useState2[1];\n\n  var setAccordiansIsExpanded = function setAccordiansIsExpanded(cardName, isExpand) {\n    var accordionsStatus = _objectSpread({}, accordionsExpandStatus);\n\n    accordionsStatus[cardName] = isExpand;\n    setAccordiansStatus(accordionsStatus);\n  };\n\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n\n  var accordionTitle = function accordionTitle(title) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"body2\",\n      children: [' ', title]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 13\n    }, _this);\n  };\n\n  var actions = function actions(_ref2) {\n    var index = _ref2.index;\n    return [{\n      id: '1',\n      icon: Edit,\n      color: 'primary',\n      onClick: function onClick() {\n        handleStep(index);\n      }\n    }];\n  };\n\n  var infoCard = function infoCard() {\n    var title = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    var details = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var isLoading = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    return /*#__PURE__*/_jsxDEV(DetailCard, {\n      title: title,\n      details: details,\n      isLoading: isLoading,\n      width: '30%'\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 16\n    }, _this);\n  };\n\n  var renderInfoCard = function renderInfoCard(items) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.infoCardContainer,\n      children: items === null || items === void 0 ? void 0 : items.map(function (info) {\n        return infoCard(info === null || info === void 0 ? void 0 : info.title, info === null || info === void 0 ? void 0 : info.value, info === null || info === void 0 ? void 0 : info.isLoading);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 16\n    }, _this);\n  };\n\n  var underWritingInfoCard = function underWritingInfoCard(underWriting) {\n    var _underWriting$items;\n\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.underWritingContainer,\n        children: [/*#__PURE__*/_jsxDEV(DetailCard, {\n          title: utils.string.t('claims.underWritingGroups.section'),\n          details: underWriting === null || underWriting === void 0 ? void 0 : underWriting.policySectionInfo,\n          isLoading: underWriting === null || underWriting === void 0 ? void 0 : underWriting.isPolicySectionLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: underWritingGroupColumns\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: (underWriting === null || underWriting === void 0 ? void 0 : underWriting.isLoading) ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: underWritingGroupColumns === null || underWritingGroupColumns === void 0 ? void 0 : underWritingGroupColumns.length,\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      height: 40,\n                      animation: \"wave\",\n                      displayNumber: 3\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 80,\n                      columnNumber: 49\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 79,\n                    columnNumber: 45\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 41\n                }, _this) : underWriting === null || underWriting === void 0 ? void 0 : (_underWriting$items = underWriting.items) === null || _underWriting$items === void 0 ? void 0 : _underWriting$items.map(function (ugRows, index) {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.groupRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 86,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.percentage\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 87,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.facility\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 88,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.facilityRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.slipLeader\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 90,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.ucr\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 91,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: ugRows === null || ugRows === void 0 ? void 0 : ugRows.narrative\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 92,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (ugRows === null || ugRows === void 0 ? void 0 : ugRows.dateValidFrom) && moment(ugRows.dateValidFrom).format(config.ui.format.date.slashNumeric)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 93,\n                      columnNumber: 49\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (ugRows === null || ugRows === void 0 ? void 0 : ugRows.dateValidTo) && moment(ugRows.dateValidTo).format(config.ui.format.date.slashNumeric)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 96,\n                      columnNumber: 49\n                    }, _this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 85,\n                    columnNumber: 45\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 29\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 21\n        }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.underWritingCardContainer,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.infoCardContainer,\n            children: [/*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.infoCard,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardTitle,\n                variant: \"h5\",\n                color: \"secondary\",\n                children: utils.string.t('claims.movementInformation.heading')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardValue,\n                variant: \"h6\",\n                children: (underWriting === null || underWriting === void 0 ? void 0 : underWriting.isLoading) ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 40,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 64\n                }, _this) : underWriting === null || underWriting === void 0 ? void 0 : underWriting.movementType\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.infoCard,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardTitle,\n                variant: \"h5\",\n                color: \"secondary\",\n                children: utils.string.t('claims.typeOfSettlement.orderBasis')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardValue,\n                variant: \"h6\",\n                children: (underWriting === null || underWriting === void 0 ? void 0 : underWriting.isLoading) ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 40,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 64\n                }, _this) : underWriting === null || underWriting === void 0 ? void 0 : underWriting.basisOfOrder\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 116,\n              columnNumber: 29\n            }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.infoCard,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardTitle,\n                variant: \"h5\",\n                color: \"secondary\",\n                children: utils.string.t('claims.typeOfSettlement.order')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 125,\n                columnNumber: 33\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.infoCardValue,\n                variant: \"h6\",\n                children: (underWriting === null || underWriting === void 0 ? void 0 : underWriting.isLoading) ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 40,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 64\n                }, _this) : underWriting === null || underWriting === void 0 ? void 0 : underWriting.orderPercentage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 124,\n              columnNumber: 29\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 25\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 21\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 17\n      }, _this)\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Accordion, {\n        title: accordionTitle(utils.string.t('claims.processing.taskDetailsLabels.additionalDetails')),\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.infoCardContainerWrapper,\n          children: [/*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\n            title: accordionTitle(utils.string.t('claims.lossInformation.title')),\n            actions: handleStep && actions({\n              index: 0\n            }),\n            onChange: function onChange(event, isExpanded) {\n              return setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\n            },\n            children: renderInfoCard(lossInfo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\n            title: accordionTitle(utils.string.t('claims.claimInformation.title')),\n            onChange: function onChange(event, isExpanded) {\n              return setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\n            },\n            actions: handleStep && actions({\n              index: 2\n            }),\n            children: renderInfoCard(claimInfo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\n            title: accordionTitle(utils.string.t('claims.claimInformation.policyTitle')),\n            onChange: function onChange(event, isExpanded) {\n              return setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\n            },\n            actions: handleStep && actions({\n              index: 1\n            }),\n            children: renderInfoCard(policyInfo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 25\n          }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.title')],\n            title: accordionTitle(utils.string.t('claims.underWritingGroups.title')),\n            onChange: function onChange(event, isExpanded) {\n              return setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.title'), isExpanded);\n            },\n            actions: handleStep && actions({\n              index: 1\n            }),\n            children: underWritingInfoCard(underWritingInfo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 21\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.taskDetailsInfo,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          children: accordionTitle(utils.string.t('claims.processing.taskFunctionalityTabs.taskDetails'))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.taskDetailsInfoCards,\n          children: [renderInfoCard(taskInfo), /*#__PURE__*/_jsxDEV(DetailCard, {\n            title: utils.string.t('claims.processing.taskDetailsLabels.description'),\n            details: taskObj === null || taskObj === void 0 ? void 0 : taskObj.description,\n            isLoading: isTaskDetailsLoading,\n            width: \"100%\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 195,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 189,\n        columnNumber: 17\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 17\n      }, this)]\n    }, void 0, true)\n  }, void 0, false);\n}\n\n_s(TasksAdditionInfo, \"Pyns3Jqg2xrh94OTqpB9tQuF+hc=\");\n\n_c = TasksAdditionInfo;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksAdditionInfo\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TasksAdditionInfo.js"],"names":["React","useState","PropTypes","moment","utils","DetailCard","Accordion","TableHead","TableCell","Overflow","Skeleton","styles","Typography","makeStyles","Grid","Table","TableBody","TableRow","Divider","Edit","config","TasksAdditionInfo","propTypes","handleStep","func","isRequired","lossInfo","array","policyInfo","claimInfo","underWritingInfo","object","underWritingGroupColumns","taskInfo","isTaskDetailsLoading","taskObj","string","t","accordionsExpandStatus","setAccordiansStatus","setAccordiansIsExpanded","cardName","isExpand","accordionsStatus","classes","name","accordionTitle","title","actions","index","id","icon","color","onClick","infoCard","details","isLoading","renderInfoCard","items","infoCardContainer","map","info","value","underWritingInfoCard","underWriting","underWritingContainer","policySectionInfo","isPolicySectionLoading","length","ugRows","groupRef","percentage","facility","facilityRef","slipLeader","ucr","narrative","dateValidFrom","format","ui","date","slashNumeric","dateValidTo","underWritingCardContainer","infoCardTitle","infoCardValue","movementType","basisOfOrder","orderPercentage","infoCardContainerWrapper","event","isExpanded","taskDetailsInfo","taskDetailsInfoCards","description"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from 'utils';\r\nimport { DetailCard } from 'modules';\r\nimport { Accordion, TableHead, TableCell, Overflow, Skeleton } from 'components';\r\nimport styles from './TaskDetails.styles';\r\nimport { Typography, makeStyles, Grid, Table, TableBody, TableRow, Divider } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\nimport config from 'config';\r\n\r\n\r\nTasksAdditionInfo.propTypes = {\r\n    handleStep: PropTypes.func.isRequired,\r\n    lossInfo: PropTypes.array.isRequired,\r\n    policyInfo: PropTypes.array.isRequired,\r\n    claimInfo: PropTypes.array.isRequired,\r\n    underWritingInfo: PropTypes.object.isRequired,\r\n    underWritingGroupColumns: PropTypes.array.isRequired,\r\n};\r\nexport function TasksAdditionInfo({ handleStep = () => { }, lossInfo, policyInfo, claimInfo, underWritingInfo, underWritingGroupColumns, taskInfo, isTaskDetailsLoading, taskObj = {} }) {\r\n    const [accordionsExpandStatus, setAccordiansStatus] = useState({\r\n        [utils.string.t('claims.lossInformation.title')]: false,\r\n        [utils.string.t('claims.claimInformation.title')]: false,\r\n        [utils.string.t('claims.claimInformation.policyTitle')]: false,\r\n        [utils.string.t('claims.underWritingGroups.title')]: false,\r\n    });\r\n    const setAccordiansIsExpanded = (cardName, isExpand) => {\r\n        const accordionsStatus = { ...accordionsExpandStatus };\r\n        accordionsStatus[cardName] = isExpand;\r\n        setAccordiansStatus(accordionsStatus);\r\n    };\r\n    const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n\r\n    const accordionTitle = (title) => {\r\n        return (\r\n            <Typography className={classes.title} variant=\"body2\">\r\n                {' '}\r\n                {title}\r\n            </Typography>\r\n        );\r\n    };\r\n    const actions = ({ index }) => {\r\n        return [\r\n            {\r\n                id: '1',\r\n                icon: Edit,\r\n                color: 'primary',\r\n                onClick: () => {\r\n                    handleStep(index);\r\n                },\r\n            },\r\n        ];\r\n    };\r\n    const infoCard = (title = '', details = '', isLoading = false) => {\r\n        return <DetailCard title={title} details={details} isLoading={isLoading} width={'30%'} />;\r\n    };\r\n    const renderInfoCard = (items) => {\r\n        return <div className={classes.infoCardContainer}>{items?.map((info) => infoCard(info?.title, info?.value, info?.isLoading))}</div>;\r\n    };\r\n    const underWritingInfoCard = (underWriting) => {\r\n        return (\r\n            <>\r\n                <div className={classes.underWritingContainer}>\r\n                    <DetailCard\r\n                        title={utils.string.t('claims.underWritingGroups.section')}\r\n                        details={underWriting?.policySectionInfo}\r\n                        isLoading={underWriting?.isPolicySectionLoading}\r\n                    />\r\n\r\n                    <Grid container direction=\"column\">\r\n                        <Overflow>\r\n                            <Table>\r\n                                <TableHead columns={underWritingGroupColumns} />\r\n                                <TableBody>\r\n                                    {underWriting?.isLoading ? (\r\n                                        <TableRow>\r\n                                            <TableCell colSpan={underWritingGroupColumns?.length}>\r\n                                                <Skeleton height={40} animation=\"wave\" displayNumber={3} />\r\n                                            </TableCell>\r\n                                        </TableRow>\r\n                                    ) : (\r\n                                        underWriting?.items?.map((ugRows, index) => (\r\n                                            <TableRow key={index}>\r\n                                                <TableCell>{ugRows?.groupRef}</TableCell>\r\n                                                <TableCell>{ugRows?.percentage}</TableCell>\r\n                                                <TableCell>{ugRows?.facility}</TableCell>\r\n                                                <TableCell>{ugRows?.facilityRef}</TableCell>\r\n                                                <TableCell>{ugRows?.slipLeader}</TableCell>\r\n                                                <TableCell>{ugRows?.ucr}</TableCell>\r\n                                                <TableCell>{ugRows?.narrative}</TableCell>\r\n                                                <TableCell>\r\n                                                    {ugRows?.dateValidFrom && moment(ugRows.dateValidFrom).format(config.ui.format.date.slashNumeric)}\r\n                                                </TableCell>\r\n                                                <TableCell>\r\n                                                    {ugRows?.dateValidTo && moment(ugRows.dateValidTo).format(config.ui.format.date.slashNumeric)}\r\n                                                </TableCell>\r\n                                            </TableRow>\r\n                                        ))\r\n                                    )}\r\n                                </TableBody>\r\n                            </Table>\r\n                        </Overflow>\r\n                    </Grid>\r\n                    <div className={classes.underWritingCardContainer}>\r\n                        <div className={classes.infoCardContainer}>\r\n                            <div className={classes.infoCard}>\r\n                                <Typography className={classes.infoCardTitle} variant=\"h5\" color=\"secondary\">\r\n                                    {utils.string.t('claims.movementInformation.heading')}\r\n                                </Typography>\r\n                                <Typography className={classes.infoCardValue} variant=\"h6\">\r\n                                    {underWriting?.isLoading ? <Skeleton height={40} animation=\"wave\" displayNumber={1} /> : underWriting?.movementType}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={classes.infoCard}>\r\n                                <Typography className={classes.infoCardTitle} variant=\"h5\" color=\"secondary\">\r\n                                    {utils.string.t('claims.typeOfSettlement.orderBasis')}\r\n                                </Typography>\r\n                                <Typography className={classes.infoCardValue} variant=\"h6\">\r\n                                    {underWriting?.isLoading ? <Skeleton height={40} animation=\"wave\" displayNumber={1} /> : underWriting?.basisOfOrder}\r\n                                </Typography>\r\n                            </div>\r\n                            <div className={classes.infoCard}>\r\n                                <Typography className={classes.infoCardTitle} variant=\"h5\" color=\"secondary\">\r\n                                    {utils.string.t('claims.typeOfSettlement.order')}\r\n                                </Typography>\r\n                                <Typography className={classes.infoCardValue} variant=\"h6\">\r\n                                    {underWriting?.isLoading ? <Skeleton height={40} animation=\"wave\" displayNumber={1} /> : underWriting?.orderPercentage}\r\n                                </Typography>\r\n                            </div>\r\n                        </div>\r\n                    </div>\r\n                </div>\r\n            </>\r\n        );\r\n    };\r\n\r\n    return (\r\n        <>\r\n            <>\r\n                <Accordion\r\n                    title={accordionTitle(utils.string.t('claims.processing.taskDetailsLabels.additionalDetails'))}\r\n                >\r\n                    <div className={classes.infoCardContainerWrapper}>\r\n                        <Accordion\r\n                            expanded={accordionsExpandStatus[utils.string.t('claims.lossInformation.title')]}\r\n                            title={accordionTitle(utils.string.t('claims.lossInformation.title'))}\r\n                            actions={handleStep && actions({ index: 0 })}\r\n                            onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded)}\r\n                        >\r\n                            {renderInfoCard(lossInfo)}\r\n                        </Accordion>\r\n                        <Divider />\r\n\r\n                        <Accordion\r\n                            expanded={accordionsExpandStatus[utils.string.t('claims.claimInformation.title')]}\r\n                            title={accordionTitle(utils.string.t('claims.claimInformation.title'))}\r\n                            onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded)}\r\n                            actions={handleStep && actions({ index: 2 })}\r\n                        >\r\n                            {renderInfoCard(claimInfo)}\r\n                        </Accordion>\r\n                        <Divider />\r\n\r\n                        <Accordion\r\n                            expanded={accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')]}\r\n                            title={accordionTitle(utils.string.t('claims.claimInformation.policyTitle'))}\r\n                            onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded)}\r\n                            actions={handleStep && actions({ index: 1 })}\r\n                        >\r\n                            {renderInfoCard(policyInfo)}\r\n                        </Accordion>\r\n                        <Divider />\r\n\r\n                        <Accordion\r\n                            expanded={accordionsExpandStatus[utils.string.t('claims.underWritingGroups.title')]}\r\n                            title={accordionTitle(utils.string.t('claims.underWritingGroups.title'))}\r\n                            onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.title'), isExpanded)}\r\n                            actions={handleStep && actions({ index: 1 })}\r\n                        >\r\n                            {underWritingInfoCard(underWritingInfo)}\r\n                        </Accordion>\r\n\r\n                    </div>\r\n                </Accordion>\r\n                <Divider />\r\n\r\n                <div className={classes.taskDetailsInfo}>\r\n                    <div>\r\n                        {accordionTitle(utils.string.t('claims.processing.taskFunctionalityTabs.taskDetails'))}\r\n                    </div>\r\n                    <div className={classes.taskDetailsInfoCards}>\r\n                        {renderInfoCard(taskInfo)}\r\n                        <DetailCard title={utils.string.t('claims.processing.taskDetailsLabels.description')} details={taskObj?.description} isLoading={isTaskDetailsLoading} width={\"100%\"} />\r\n                    </div>\r\n                </div>\r\n                <Divider />\r\n\r\n            </>\r\n\r\n        </>\r\n\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}