{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\RemoveClaimsComplexityRuleValue\\\\RemoveClaimsComplexityRuleValue.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form'; // app\n\nimport styles from './RemoveClaimsComplexityRuleValue.styles';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { Button, FormActions } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRemoveClaimsComplexityRuleValueView.propTypes = {\n  actions: PropTypes.array.isRequired,\n  complexityRuleData: PropTypes.object.isRequired\n};\nexport function RemoveClaimsComplexityRuleValueView(_ref) {\n  _s();\n\n  var actions = _ref.actions,\n      complexityRuleData = _ref.complexityRuleData;\n  var classes = makeStyles(styles, {\n    name: 'RemoveClaimsComplexityRuleValue'\n  })();\n\n  var _useForm = useForm(),\n      reset = _useForm.reset;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      color: \"primary\",\n      className: classes.promptText,\n      children: utils.string.t('claims.modals.removeComplexityRuleValue.content', {\n        value: complexityRuleData.complexityRulesValue\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        text: utils.string.t('app.no'),\n        variant: \"outlined\",\n        size: \"medium\",\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 29,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        text: utils.string.t('app.yes'),\n        size: \"medium\",\n        color: \"primary\",\n        onClick: submit.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RemoveClaimsComplexityRuleValueView, \"+Ro2P5l9nn6zzyPmMHcu8vX04VA=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = RemoveClaimsComplexityRuleValueView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RemoveClaimsComplexityRuleValueView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/RemoveClaimsComplexityRuleValue/RemoveClaimsComplexityRuleValue.view.js"],"names":["React","PropTypes","useForm","styles","useFormActions","utils","makeStyles","Typography","Button","FormActions","RemoveClaimsComplexityRuleValueView","propTypes","actions","array","isRequired","complexityRuleData","object","classes","name","reset","cancel","submit","root","promptText","string","t","value","complexityRulesValue","handler"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0CAAnB;AACA,SAASC,cAAT,QAA+B,OAA/B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,UAArB,QAAuC,mBAAvC;AACA,SAASC,MAAT,EAAiBC,WAAjB,QAAoC,YAApC;;AAEAC,mCAAmC,CAACC,SAApC,GAAgD;AAC9CC,EAAAA,OAAO,EAAEX,SAAS,CAACY,KAAV,CAAgBC,UADqB;AAE9CC,EAAAA,kBAAkB,EAAEd,SAAS,CAACe,MAAV,CAAiBF;AAFS,CAAhD;AAIA,OAAO,SAASJ,mCAAT,OAA8E;AAAA;;AAAA,MAA/BE,OAA+B,QAA/BA,OAA+B;AAAA,MAAtBG,kBAAsB,QAAtBA,kBAAsB;AACnF,MAAME,OAAO,GAAGX,UAAU,CAACH,MAAD,EAAS;AAAEe,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADmF,iBAEjEhB,OAAO,EAF0D;AAAA,MAE3EiB,KAF2E,YAE3EA,KAF2E;;AAAA,wBAGxDf,cAAc,CAACQ,OAAD,EAAUO,KAAV,CAH0C;AAAA,MAG3EC,MAH2E,mBAG3EA,MAH2E;AAAA,MAGnEC,MAHmE,mBAGnEA,MAHmE;;AAKnF,sBACE;AAAK,IAAA,SAAS,EAAEJ,OAAO,CAACK,IAAxB;AAAA,4BACE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,MAAA,SAAS,EAAEL,OAAO,CAACM,UAA/C;AAAA,gBACGlB,KAAK,CAACmB,MAAN,CAAaC,CAAb,CAAe,iDAAf,EAAkE;AAAEC,QAAAA,KAAK,EAAEX,kBAAkB,CAACY;AAA5B,OAAlE;AADH;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,WAAD;AAAa,MAAA,IAAI,EAAC,QAAlB;AAAA,8BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEtB,KAAK,CAACmB,MAAN,CAAaC,CAAb,CAAe,QAAf,CAAd;AAAwC,QAAA,OAAO,EAAC,UAAhD;AAA2D,QAAA,IAAI,EAAC,QAAhE;AAAyE,QAAA,OAAO,EAAEL,MAAM,CAACQ;AAAzF;AAAA;AAAA;AAAA;AAAA,cADF,eAEE,QAAC,MAAD;AAAQ,QAAA,IAAI,EAAEvB,KAAK,CAACmB,MAAN,CAAaC,CAAb,CAAe,SAAf,CAAd;AAAyC,QAAA,IAAI,EAAC,QAA9C;AAAuD,QAAA,KAAK,EAAC,SAA7D;AAAuE,QAAA,OAAO,EAAEJ,MAAM,CAACO;AAAvF;AAAA;AAAA;AAAA;AAAA,cAFF;AAAA;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAhBelB,mC;UAEIR,O,EACSE,c;;;KAHbM,mC","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n// app\r\nimport styles from './RemoveClaimsComplexityRuleValue.styles';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport { Button, FormActions } from 'components';\r\n\r\nRemoveClaimsComplexityRuleValueView.propTypes = {\r\n  actions: PropTypes.array.isRequired,\r\n  complexityRuleData: PropTypes.object.isRequired,\r\n};\r\nexport function RemoveClaimsComplexityRuleValueView({ actions, complexityRuleData }) {\r\n  const classes = makeStyles(styles, { name: 'RemoveClaimsComplexityRuleValue' })();\r\n  const { reset } = useForm();\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Typography color=\"primary\" className={classes.promptText}>\r\n        {utils.string.t('claims.modals.removeComplexityRuleValue.content', { value: complexityRuleData.complexityRulesValue })}\r\n      </Typography>\r\n      <FormActions type=\"dialog\">\r\n        <Button text={utils.string.t('app.no')} variant=\"outlined\" size=\"medium\" onClick={cancel.handler} />\r\n        <Button text={utils.string.t('app.yes')} size=\"medium\" color=\"primary\" onClick={submit.handler} />\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}