{"ast":null,"code":"import get from 'lodash/get';\nimport { addLoader, removeLoader, enqueueNotification, getComplexityBasisValue, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var removeComplexityBasisRuleValue = function removeComplexityBasisRuleValue(updatedMatrixData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.removeComplexityBasisRuleValue'\n    };\n    var complexRuleValueId = get(claims, 'complexityManagement.complexityBasisValueId').complexityRulesID;\n    dispatch(removeComplexityBasisRuleValueRequest(updatedMatrixData));\n    dispatch(addLoader('removeComplexityBasisRuleValue'));\n    return utils.api.delete({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims-triage/complex/complex-values/\".concat(complexRuleValueId, \"/remove\"),\n      data: updatedMatrixData\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(removeComplexityBasisRuleValueSuccess());\n      dispatch(enqueueNotification('notification.removeComplexityValue.success', 'success'));\n      dispatch(getComplexityBasisValue());\n      return data;\n    }).catch(function (err) {\n      dispatch(removeComplexityBasisRuleValueFailure(err, defaultError));\n      dispatch(enqueueNotification('notification.removeComplexityValue.fail', 'error'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('removeComplexityBasisRuleValue'));\n    });\n  };\n};\nexport var removeComplexityBasisRuleValueRequest = function removeComplexityBasisRuleValueRequest(updatedMatrixData) {\n  return {\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_REQUEST',\n    payload: updatedMatrixData\n  };\n};\nexport var removeComplexityBasisRuleValueSuccess = function removeComplexityBasisRuleValueSuccess() {\n  return {\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_SUCCESS'\n  };\n};\nexport var removeComplexityBasisRuleValueFailure = function removeComplexityBasisRuleValueFailure(err) {\n  return {\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.removeComplexityBasisRuleValue.js"],"names":["get","addLoader","removeLoader","enqueueNotification","getComplexityBasisValue","authLogout","utils","removeComplexityBasisRuleValue","updatedMatrixData","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","complexRuleValueId","complexityRulesID","removeComplexityBasisRuleValueRequest","api","delete","token","accessToken","claimService","path","data","then","response","handleResponse","json","handleNewData","removeComplexityBasisRuleValueSuccess","catch","err","removeComplexityBasisRuleValueFailure","handleUnauthorized","finally","type","payload"],"mappings":"AAAA,OAAOA,GAAP,MAAgB,YAAhB;AAEA,SAASC,SAAT,EAAoBC,YAApB,EAAkCC,mBAAlC,EAAuDC,uBAAvD,EAAgFC,UAAhF,QAAkG,QAAlG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,iBAAD;AAAA,SAAuB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC3F;AAD2F,oBAExBA,QAAQ,EAFgB;AAAA,QAE3EC,IAF2E,aAEnFC,IAFmF,CAE3ED,IAF2E;AAAA,QAEjDE,QAFiD,aAEnEC,MAFmE,CAEzDC,IAFyD,CAEjDF,QAFiD;AAAA,QAEnCG,MAFmC,aAEnCA,MAFmC;;AAI3F,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,kBAAkB,GAAGnB,GAAG,CAACgB,MAAD,EAAS,6CAAT,CAAH,CAA2DI,iBAAtF;AAEAX,IAAAA,QAAQ,CAACY,qCAAqC,CAACb,iBAAD,CAAtC,CAAR;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAAC,gCAAD,CAAV,CAAR;AAEA,WAAOK,KAAK,CAACgB,GAAN,CACJC,MADI,CACG;AACNC,MAAAA,KAAK,EAAEb,IAAI,CAACc,WADN;AAENZ,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,YAFb;AAGNC,MAAAA,IAAI,0DAAmDR,kBAAnD,YAHE;AAINS,MAAAA,IAAI,EAAEpB;AAJA,KADH,EAOJqB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcxB,KAAK,CAACgB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU1B,KAAK,CAACgB,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACyB,qCAAqC,EAAtC,CAAR;AACAzB,MAAAA,QAAQ,CAACN,mBAAmB,CAAC,4CAAD,EAA+C,SAA/C,CAApB,CAAR;AACAM,MAAAA,QAAQ,CAACL,uBAAuB,EAAxB,CAAR;AACA,aAAOwB,IAAP;AACD,KAdI,EAeJO,KAfI,CAeE,UAACC,GAAD,EAAS;AACd3B,MAAAA,QAAQ,CAAC4B,qCAAqC,CAACD,GAAD,EAAMnB,YAAN,CAAtC,CAAR;AACAR,MAAAA,QAAQ,CAACN,mBAAmB,CAAC,yCAAD,EAA4C,OAA5C,CAApB,CAAR;AACAG,MAAAA,KAAK,CAACgB,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkC3B,QAAlC,EAA4CJ,UAA5C;AACA,aAAO+B,GAAP;AACD,KApBI,EAqBJG,OArBI,CAqBI,YAAM;AACb9B,MAAAA,QAAQ,CAACP,YAAY,CAAC,gCAAD,CAAb,CAAR;AACD,KAvBI,CAAP;AAwBD,GArC6C;AAAA,CAAvC;AAuCP,OAAO,IAAMmB,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACb,iBAAD,EAAuB;AAC1E,SAAO;AACLgC,IAAAA,IAAI,EAAE,yCADD;AAELC,IAAAA,OAAO,EAAEjC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAM0B,qCAAqC,GAAG,SAAxCA,qCAAwC,GAAM;AACzD,SAAO;AACLM,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMH,qCAAqC,GAAG,SAAxCA,qCAAwC,CAACD,GAAD,EAAS;AAC5D,SAAO;AACLI,IAAAA,IAAI,EAAE,yCADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import get from 'lodash/get';\r\n\r\nimport { addLoader, removeLoader, enqueueNotification, getComplexityBasisValue, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const removeComplexityBasisRuleValue = (updatedMatrixData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.removeComplexityBasisRuleValue',\r\n  };\r\n\r\n  const complexRuleValueId = get(claims, 'complexityManagement.complexityBasisValueId').complexityRulesID;\r\n\r\n  dispatch(removeComplexityBasisRuleValueRequest(updatedMatrixData));\r\n  dispatch(addLoader('removeComplexityBasisRuleValue'));\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims-triage/complex/complex-values/${complexRuleValueId}/remove`,\r\n      data: updatedMatrixData,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(removeComplexityBasisRuleValueSuccess());\r\n      dispatch(enqueueNotification('notification.removeComplexityValue.success', 'success'));\r\n      dispatch(getComplexityBasisValue());\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(removeComplexityBasisRuleValueFailure(err, defaultError));\r\n      dispatch(enqueueNotification('notification.removeComplexityValue.fail', 'error'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('removeComplexityBasisRuleValue'));\r\n    });\r\n};\r\n\r\nexport const removeComplexityBasisRuleValueRequest = (updatedMatrixData) => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_REQUEST',\r\n    payload: updatedMatrixData,\r\n  };\r\n};\r\n\r\nexport const removeComplexityBasisRuleValueSuccess = () => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_SUCCESS',\r\n  };\r\n};\r\n\r\nexport const removeComplexityBasisRuleValueFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_REMOVE_COMPLEXITY_VALUES_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}