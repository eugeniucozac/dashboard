{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getComplexityDivisionMatrixByReferralId = function getComplexityDivisionMatrixByReferralId(referralRuleValueId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getComplexityDivisionMatrixByReferralId'\n    };\n    dispatch(getComplexityDivisionMatrixByReferralIdRequest(referralRuleValueId));\n    dispatch(addLoader('getComplexityDivisionMatrixByReferralId'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims-triage/complex/referral-values/\".concat(referralRuleValueId, \"/division-matrix\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getComplexityDivisionMatrixByReferralIdSuccess(data.data));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getComplexityDivisionMatrixByReferralIdFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getComplexityDivisionMatrixByReferralId'));\n    });\n  };\n};\nexport var getComplexityDivisionMatrixByReferralIdRequest = function getComplexityDivisionMatrixByReferralIdRequest(referralRuleValueId) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_REQUEST',\n    payload: referralRuleValueId\n  };\n};\nexport var getComplexityDivisionMatrixByReferralIdSuccess = function getComplexityDivisionMatrixByReferralIdSuccess(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getComplexityDivisionMatrixByReferralIdFailure = function getComplexityDivisionMatrixByReferralIdFailure(err) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getComplexityDivisionMatrixByReferralId.js"],"names":["authLogout","addLoader","removeLoader","utils","getComplexityDivisionMatrixByReferralId","referralRuleValueId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getComplexityDivisionMatrixByReferralIdRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","data","getComplexityDivisionMatrixByReferralIdSuccess","err","getComplexityDivisionMatrixByReferralIdFailure","handleUnauthorized","type","payload"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,uCAAuC,GAAG,SAA1CA,uCAA0C,CAACC,mBAAD;AAAA,SAAyB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACtG;AADsG,oBAE3CA,QAAQ,EAFmC;AAAA,QAEtFC,IAFsF,aAE9FC,IAF8F,CAEtFD,IAFsF;AAAA,QAE5DE,QAF4D,aAE9EC,MAF8E,CAEpEC,IAFoE,CAE5DF,QAF4D;;AAItG,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,8CAA8C,CAACV,mBAAD,CAA/C,CAAR;AACAC,IAAAA,QAAQ,CAACL,SAAS,CAAC,yCAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACa,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,2DAAoDhB,mBAApD;AAHD,KADA,EAMJiB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcpB,KAAK,CAACa,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUtB,KAAK,CAACa,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,8CAA8C,CAACD,IAAI,CAACA,IAAN,CAA/C,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACdvB,MAAAA,QAAQ,CAACwB,8CAA8C,CAACD,GAAD,EAAMhB,YAAN,CAA/C,CAAR;AACAV,MAAAA,KAAK,CAACa,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCvB,QAAlC,EAA4CN,UAA5C;AACA,aAAO6B,GAAP;AACD,KAhBI,aAiBI,YAAM;AACbvB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,yCAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GA/BsD;AAAA,CAAhD;AAiCP,OAAO,IAAMa,8CAA8C,GAAG,SAAjDA,8CAAiD,CAACV,mBAAD,EAAyB;AACrF,SAAO;AACL2B,IAAAA,IAAI,EAAE,uDADD;AAELC,IAAAA,OAAO,EAAE5B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMuB,8CAA8C,GAAG,SAAjDA,8CAAiD,CAACD,IAAD,EAAU;AACtE,SAAO;AACLK,IAAAA,IAAI,EAAE,uDADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,8CAA8C,GAAG,SAAjDA,8CAAiD,CAACD,GAAD,EAAS;AACrE,SAAO;AACLG,IAAAA,IAAI,EAAE,uDADD;AAELC,IAAAA,OAAO,EAAEJ;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getComplexityDivisionMatrixByReferralId = (referralRuleValueId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getComplexityDivisionMatrixByReferralId',\r\n  };\r\n\r\n  dispatch(getComplexityDivisionMatrixByReferralIdRequest(referralRuleValueId));\r\n  dispatch(addLoader('getComplexityDivisionMatrixByReferralId'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims-triage/complex/referral-values/${referralRuleValueId}/division-matrix`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getComplexityDivisionMatrixByReferralIdSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getComplexityDivisionMatrixByReferralIdFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getComplexityDivisionMatrixByReferralId'));\r\n    });\r\n};\r\n\r\nexport const getComplexityDivisionMatrixByReferralIdRequest = (referralRuleValueId) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_REQUEST',\r\n    payload: referralRuleValueId,\r\n  };\r\n};\r\n\r\nexport const getComplexityDivisionMatrixByReferralIdSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getComplexityDivisionMatrixByReferralIdFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_DIVISION_BY_REFERRAL_ID_GET_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}