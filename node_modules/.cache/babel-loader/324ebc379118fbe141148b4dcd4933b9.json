{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\QuoteBind\\\\QuoteBind.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './QuoteBind.styles';\nimport { Button, Layout, Overflow, Pagination, Restricted, SearchResult, SectionHeader, Status, Skeleton, TableCell, TableHead, Translate, AddQuoteBind, Tabs, FilterBar } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport config from 'config';\nimport QuoteBindDraftRisk from './QuoteBindDraftRisk'; // mui\n\nimport { Box, Grid, Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\nimport BallotIcon from '@material-ui/icons/Ballot';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport GetAppIcon from '@material-ui/icons/GetApp';\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nQuoteBindView.propTypes = {\n  list: PropTypes.object.isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  }).isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  }).isRequired,\n  isAdmin: PropTypes.bool.isRequired,\n  riskProducts: PropTypes.array.isRequired,\n  riskListLoading: PropTypes.bool.isRequired,\n  statuses: PropTypes.array,\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  popoverActions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  })),\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchReset: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    clickLaunchBdx: PropTypes.func.isRequired,\n    clickAddRisk: PropTypes.func.isRequired,\n    handleSelectTab: PropTypes.func\n  })\n};\nexport function QuoteBindView(_ref) {\n  var _this = this;\n\n  var list = _ref.list,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      riskListLoading = _ref.riskListLoading,\n      riskProducts = _ref.riskProducts,\n      isAdmin = _ref.isAdmin,\n      loading = _ref.loading,\n      handlers = _ref.handlers,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab;\n  var classes = makeStyles(styles, {\n    name: 'Products'\n  })();\n  var cols = [{\n    id: 'insureds',\n    label: utils.string.t('app.insured_plural')\n  }, {\n    id: 'type',\n    label: utils.string.t('app.type'),\n    nowrap: true\n  }, {\n    id: 'product',\n    label: utils.string.t('app.product')\n  }, {\n    id: 'clients',\n    label: utils.string.t('app.client_plural')\n  }, {\n    id: 'inceptionDate',\n    label: utils.string.t('app.inceptionDate'),\n    nowrap: true\n  }, {\n    id: 'expiryDate',\n    label: utils.string.t('app.expiryDate'),\n    nowrap: true\n  }, {\n    id: 'status',\n    label: utils.string.t('app.status')\n  }];\n  var searchActions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {\n      var query = values.query;\n      handlers.search(query);\n    }\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: handlers.searchReset\n  }];\n  var searchFields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: utils.string.t('risks.search') || '',\n    defaultValue: '',\n    gridSize: {\n      xs: 12\n    },\n    muiComponentProps: {\n      autoComplete: 'off',\n      'data-testid': 'search-field'\n    }\n  }];\n  var risks = list && utils.generic.isValidArray(list.items, true) ? list.items : [];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.pageContainer,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      isCentered: true,\n      testid: \"products\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: utils.string.t('products.title'),\n          icon: BallotIcon,\n          nestedClasses: {\n            root: classes.sectionHeader\n          },\n          testid: \"products\",\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.headerContent,\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              to: config.routes.quoteBind.aggregate,\n              nestedClasses: {\n                btn: classes.button\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              icon: MultilineChartIcon,\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"products.aggregate\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 135,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              onClick: handlers.clickLaunchBdx,\n              nestedClasses: {\n                btn: classes.button\n              },\n              color: \"primary\",\n              variant: \"outlined\",\n              icon: GetAppIcon,\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"products.reports\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 15\n            }, this), isAdmin ? /*#__PURE__*/_jsxDEV(Restricted, {\n              include: [constants.ROLE_BROKER],\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                to: config.routes.quoteBind.admin,\n                nestedClasses: {\n                  btn: classes.button\n                },\n                color: \"primary\",\n                variant: \"outlined\",\n                icon: SettingsIcon,\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"products.admin.btn\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 27\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 17\n            }, this) : null]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          className: classnames(classes.searchBox, selectedTab === 'risks' && classes.searchBoxContainer),\n          children: [/*#__PURE__*/_jsxDEV(Restricted, {\n            include: [constants.ROLE_BROKER],\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 5,\n              lg: 6,\n              xl: 7,\n              children: /*#__PURE__*/_jsxDEV(AddQuoteBind, {\n                products: riskProducts\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 163,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 162,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 161,\n            columnNumber: 13\n          }, this), selectedTab === 'risks' ? /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            md: 7,\n            lg: 6,\n            xl: 5,\n            children: /*#__PURE__*/_jsxDEV(FilterBar, {\n              id: \"userFilter\",\n              fields: searchFields,\n              actions: searchActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this) : null]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 160,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(SearchResult, {\n          count: list.itemsTotal,\n          query: list.query,\n          handleSearchReset: handlers.searchReset\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n          include: [constants.ROLE_BROKER],\n          children: /*#__PURE__*/_jsxDEV(Tabs, {\n            tabs: tabs,\n            value: selectedTab,\n            onChange: function onChange(tabName) {\n              return handlers.handleSelectTab(tabName);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 175,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 174,\n          columnNumber: 11\n        }, this), selectedTab === 'risks' ? /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: cols,\n                sorting: sort\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 19\n              }, this), riskListLoading ? /*#__PURE__*/_jsxDEV(TableBody, {\n                \"data-testid\": \"risk-skeleton\",\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: cols.length,\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      height: 40,\n                      animation: \"wave\",\n                      displayNumber: 10\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 186,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 184,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 183,\n                columnNumber: 21\n              }, this) : /*#__PURE__*/_jsxDEV(TableBody, {\n                \"data-testid\": \"risk-list\",\n                children: risks.map(function (risk) {\n                  var _classesRow;\n\n                  var isNew = risk.__new__;\n                  var status = risk.riskStatus && risk.riskStatus.toLowerCase();\n                  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowNew, isNew), _classesRow);\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    className: classnames(classesRow),\n                    onDoubleClick: handlers.clickRow(risk),\n                    \"data-testid\": \"risk-row-\".concat(risk.id),\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"risk-cell-insureds-\".concat(risk.id),\n                      children: get(risk, 'insured.name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 209,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"risk-cell-renewal-\".concat(risk.id),\n                      children: risk.type === 'NEW' ? utils.string.t('app.new') : utils.string.t('app.renewal')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 211,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"risk-cell-product-\".concat(risk.id),\n                      children: utils.risk.getRiskName(risk.riskType, riskProducts)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 215,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"risk-cell-clients-\".concat(risk.id),\n                      children: get(risk, 'client.name')\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 219,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      nowrap: true,\n                      \"data-testid\": \"risk-cell-inceptionDate-\".concat(risk.id),\n                      children: /*#__PURE__*/_jsxDEV(Translate, {\n                        label: \"format.date\",\n                        options: {\n                          value: {\n                            date: risk.inceptionDate,\n                            format: config.ui.format.date.text,\n                            \"default\": '-'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 222,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 221,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      nowrap: true,\n                      \"data-testid\": \"risk-cell-expiryDate-\".concat(risk.id),\n                      children: /*#__PURE__*/_jsxDEV(Translate, {\n                        label: \"format.date\",\n                        options: {\n                          value: {\n                            date: risk.expiryDate,\n                            format: config.ui.format.date.text,\n                            \"default\": '-'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 229,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 228,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"risk-cell-status-\".concat(risk.id),\n                      children: status && /*#__PURE__*/_jsxDEV(Status, {\n                        size: \"xs\",\n                        text: /*#__PURE__*/_jsxDEV(Translate, {\n                          label: \"status.\".concat(status)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 239,\n                          columnNumber: 41\n                        }, _this),\n                        status: status,\n                        statusOverrides: {\n                          quoted: 'info'\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 237,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 235,\n                      columnNumber: 29\n                    }, _this)]\n                  }, risk.id, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 27\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 191,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 180,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 179,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              sm: 12,\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                page: pagination.page,\n                count: pagination.rowsTotal,\n                rowsPerPage: pagination.rowsPerPage,\n                onChangePage: handlers.changePage,\n                onChangeRowsPerPage: handlers.changeRowsPerPage\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 256,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 255,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 254,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true) : null, selectedTab === 'draftRisks' ? /*#__PURE__*/_jsxDEV(Restricted, {\n          include: [constants.ROLE_BROKER],\n          children: /*#__PURE__*/_jsxDEV(QuoteBindDraftRisk, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 270,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 269,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 119,\n    columnNumber: 5\n  }, this);\n}\n_c = QuoteBindView;\nQuoteBindView.displayName = \"QuoteBindView\";\nQuoteBindView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"QuoteBindView\",\n  \"props\": {\n    \"list\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"by\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"type\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"direction\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"page\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsTotal\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsPerPage\": {\n            \"name\": \"number\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isAdmin\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"riskProducts\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"riskListLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"statuses\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tabs\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"popoverActions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"callback\": {\n              \"name\": \"func\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"search\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"searchReset\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"clickLaunchBdx\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"clickAddRisk\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleSelectTab\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\QuoteBind\\\\QuoteBind.view.js\"] = {\n    name: \"QuoteBindView\",\n    docgenInfo: QuoteBindView.__docgenInfo,\n    path: \"src\\\\pages\\\\QuoteBind\\\\QuoteBind.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteBindView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/QuoteBind/QuoteBind.view.js"],"names":["React","PropTypes","classnames","get","styles","Button","Layout","Overflow","Pagination","Restricted","SearchResult","SectionHeader","Status","Skeleton","TableCell","TableHead","Translate","AddQuoteBind","Tabs","FilterBar","utils","constants","config","QuoteBindDraftRisk","Box","Grid","Table","TableRow","TableBody","makeStyles","BallotIcon","SettingsIcon","GetAppIcon","MultilineChartIcon","QuoteBindView","propTypes","list","object","isRequired","sort","shape","by","string","type","direction","pagination","page","number","rowsTotal","rowsPerPage","isAdmin","bool","riskProducts","array","riskListLoading","statuses","tabs","selectedTab","popoverActions","arrayOf","id","label","callback","func","handlers","search","searchReset","changePage","changeRowsPerPage","clickLaunchBdx","clickAddRisk","handleSelectTab","loading","classes","name","cols","t","nowrap","searchActions","handler","values","query","searchFields","placeholder","defaultValue","gridSize","xs","muiComponentProps","autoComplete","risks","generic","isValidArray","items","pageContainer","root","sectionHeader","headerContent","routes","quoteBind","aggregate","btn","button","ROLE_BROKER","admin","searchBox","searchBoxContainer","itemsTotal","tabName","length","map","risk","isNew","__new__","status","riskStatus","toLowerCase","classesRow","row","rowNew","clickRow","getRiskName","riskType","value","date","inceptionDate","format","ui","text","expiryDate","quoted"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './QuoteBind.styles';\r\nimport {\r\n  Button,\r\n  Layout,\r\n  Overflow,\r\n  Pagination,\r\n  Restricted,\r\n  SearchResult,\r\n  SectionHeader,\r\n  Status,\r\n  Skeleton,\r\n  TableCell,\r\n  TableHead,\r\n  Translate,\r\n  AddQuoteBind,\r\n  Tabs,\r\n  FilterBar,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport config from 'config';\r\nimport QuoteBindDraftRisk from './QuoteBindDraftRisk';\r\n\r\n// mui\r\nimport { Box, Grid, Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\r\nimport BallotIcon from '@material-ui/icons/Ballot';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\nimport GetAppIcon from '@material-ui/icons/GetApp';\r\nimport MultilineChartIcon from '@material-ui/icons/MultilineChart';\r\n\r\nQuoteBindView.propTypes = {\r\n  list: PropTypes.object.isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  isAdmin: PropTypes.bool.isRequired,\r\n  riskProducts: PropTypes.array.isRequired,\r\n  riskListLoading: PropTypes.bool.isRequired,\r\n  statuses: PropTypes.array,\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  popoverActions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      callback: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    searchReset: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    clickLaunchBdx: PropTypes.func.isRequired,\r\n    clickAddRisk: PropTypes.func.isRequired,\r\n    handleSelectTab: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function QuoteBindView({ list, sort, pagination, riskListLoading, riskProducts, isAdmin, loading, handlers, tabs, selectedTab }) {\r\n  const classes = makeStyles(styles, { name: 'Products' })();\r\n\r\n  const cols = [\r\n    { id: 'insureds', label: utils.string.t('app.insured_plural') },\r\n    { id: 'type', label: utils.string.t('app.type'), nowrap: true },\r\n    { id: 'product', label: utils.string.t('app.product') },\r\n    { id: 'clients', label: utils.string.t('app.client_plural') },\r\n    { id: 'inceptionDate', label: utils.string.t('app.inceptionDate'), nowrap: true },\r\n    { id: 'expiryDate', label: utils.string.t('app.expiryDate'), nowrap: true },\r\n    { id: 'status', label: utils.string.t('app.status') },\r\n  ];\r\n\r\n  const searchActions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.searchLabel'),\r\n      handler: (values) => {\r\n        const { query } = values;\r\n        handlers.search(query);\r\n      },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: handlers.searchReset,\r\n    },\r\n  ];\r\n\r\n  const searchFields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: utils.string.t('risks.search') || '',\r\n      defaultValue: '',\r\n      gridSize: { xs: 12 },\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        'data-testid': 'search-field',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const risks = list && utils.generic.isValidArray(list.items, true) ? list.items : [];\r\n\r\n  return (\r\n    <Box className={classes.pageContainer}>\r\n      <Layout isCentered testid=\"products\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={utils.string.t('products.title')}\r\n            icon={BallotIcon}\r\n            nestedClasses={{ root: classes.sectionHeader }}\r\n            testid=\"products\"\r\n          >\r\n            <div className={classes.headerContent}>\r\n              <Button\r\n                to={config.routes.quoteBind.aggregate}\r\n                nestedClasses={{ btn: classes.button }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                icon={MultilineChartIcon}\r\n                text={<Translate label=\"products.aggregate\" />}\r\n              />\r\n              <Button\r\n                onClick={handlers.clickLaunchBdx}\r\n                nestedClasses={{ btn: classes.button }}\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                icon={GetAppIcon}\r\n                text={<Translate label=\"products.reports\" />}\r\n              />\r\n              {isAdmin ? (\r\n                <Restricted include={[constants.ROLE_BROKER]}>\r\n                  <Button\r\n                    to={config.routes.quoteBind.admin}\r\n                    nestedClasses={{ btn: classes.button }}\r\n                    color=\"primary\"\r\n                    variant=\"outlined\"\r\n                    icon={SettingsIcon}\r\n                    text={<Translate label=\"products.admin.btn\" />}\r\n                  />\r\n                </Restricted>\r\n              ) : null}\r\n            </div>\r\n          </SectionHeader>\r\n\r\n          <Grid container className={classnames(classes.searchBox, selectedTab === 'risks' && classes.searchBoxContainer)}>\r\n            <Restricted include={[constants.ROLE_BROKER]}>\r\n              <Grid item xs={12} sm={6} md={5} lg={6} xl={7}>\r\n                <AddQuoteBind products={riskProducts} />\r\n              </Grid>\r\n            </Restricted>\r\n            {selectedTab === 'risks' ? (\r\n              <Grid item xs={12} sm={6} md={7} lg={6} xl={5}>\r\n                <FilterBar id=\"userFilter\" fields={searchFields} actions={searchActions} />\r\n              </Grid>\r\n            ) : null}\r\n          </Grid>\r\n\r\n          <SearchResult count={list.itemsTotal} query={list.query} handleSearchReset={handlers.searchReset} />\r\n          <Restricted include={[constants.ROLE_BROKER]}>\r\n            <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handlers.handleSelectTab(tabName)} />\r\n          </Restricted>\r\n          {selectedTab === 'risks' ? (\r\n            <>\r\n              <Overflow>\r\n                <Table>\r\n                  <TableHead columns={cols} sorting={sort} />\r\n                  {riskListLoading ? (\r\n                    <TableBody data-testid=\"risk-skeleton\">\r\n                      <TableRow>\r\n                        <TableCell colSpan={cols.length}>\r\n                          <Skeleton height={40} animation=\"wave\" displayNumber={10} />\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    </TableBody>\r\n                  ) : (\r\n                    <TableBody data-testid=\"risk-list\">\r\n                      {risks.map((risk) => {\r\n                        const isNew = risk.__new__;\r\n                        const status = risk.riskStatus && risk.riskStatus.toLowerCase();\r\n\r\n                        const classesRow = {\r\n                          [classes.row]: true,\r\n                          [classes.rowNew]: isNew,\r\n                        };\r\n\r\n                        return (\r\n                          <TableRow\r\n                            key={risk.id}\r\n                            hover\r\n                            className={classnames(classesRow)}\r\n                            onDoubleClick={handlers.clickRow(risk)}\r\n                            data-testid={`risk-row-${risk.id}`}\r\n                          >\r\n                            <TableCell data-testid={`risk-cell-insureds-${risk.id}`}>{get(risk, 'insured.name')}</TableCell>\r\n\r\n                            <TableCell data-testid={`risk-cell-renewal-${risk.id}`}>\r\n                              {risk.type === 'NEW' ? utils.string.t('app.new') : utils.string.t('app.renewal')}\r\n                            </TableCell>\r\n\r\n                            <TableCell data-testid={`risk-cell-product-${risk.id}`}>\r\n                              {utils.risk.getRiskName(risk.riskType, riskProducts)}\r\n                            </TableCell>\r\n\r\n                            <TableCell data-testid={`risk-cell-clients-${risk.id}`}>{get(risk, 'client.name')}</TableCell>\r\n\r\n                            <TableCell nowrap data-testid={`risk-cell-inceptionDate-${risk.id}`}>\r\n                              <Translate\r\n                                label=\"format.date\"\r\n                                options={{ value: { date: risk.inceptionDate, format: config.ui.format.date.text, default: '-' } }}\r\n                              />\r\n                            </TableCell>\r\n\r\n                            <TableCell nowrap data-testid={`risk-cell-expiryDate-${risk.id}`}>\r\n                              <Translate\r\n                                label=\"format.date\"\r\n                                options={{ value: { date: risk.expiryDate, format: config.ui.format.date.text, default: '-' } }}\r\n                              />\r\n                            </TableCell>\r\n\r\n                            <TableCell data-testid={`risk-cell-status-${risk.id}`}>\r\n                              {status && (\r\n                                <Status\r\n                                  size=\"xs\"\r\n                                  text={<Translate label={`status.${status}`} />}\r\n                                  status={status}\r\n                                  statusOverrides={{\r\n                                    quoted: 'info',\r\n                                  }}\r\n                                />\r\n                              )}\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  )}\r\n                </Table>\r\n              </Overflow>\r\n              <Grid container>\r\n                <Grid item xs={12} sm={12}>\r\n                  <Pagination\r\n                    page={pagination.page}\r\n                    count={pagination.rowsTotal}\r\n                    rowsPerPage={pagination.rowsPerPage}\r\n                    onChangePage={handlers.changePage}\r\n                    onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          ) : null}\r\n\r\n          {selectedTab === 'draftRisks' ? (\r\n            <Restricted include={[constants.ROLE_BROKER]}>\r\n              <QuoteBindDraftRisk />\r\n            </Restricted>\r\n          ) : null}\r\n        </Layout>\r\n      </Layout>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}