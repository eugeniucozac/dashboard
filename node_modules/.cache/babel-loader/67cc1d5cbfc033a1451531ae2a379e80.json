{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getCaseIncidentDetails = function getCaseIncidentDetails(_ref) {\n  var processTypeId = _ref.processTypeId,\n      referenceId = _ref.referenceId,\n      _ref$viewLoader = _ref.viewLoader,\n      viewLoader = _ref$viewLoader === void 0 ? true : _ref$viewLoader;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getCaseIncidentDetails'\n    };\n    dispatch(getCaseIncidentDetailsRequest());\n    viewLoader && dispatch(addLoader('getCaseIncidentDetails'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"/workflow/process/\".concat(processTypeId, \"/reference/\").concat(referenceId, \"/caseIncidentDetails\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getCaseIncidentDetailsSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getCaseIncidentDetailsFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      viewLoader && dispatch(removeLoader('getCaseIncidentDetails'));\n    });\n  };\n};\nexport var getCaseIncidentDetailsRequest = function getCaseIncidentDetailsRequest(data) {\n  return {\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getCaseIncidentDetailsSuccess = function getCaseIncidentDetailsSuccess(data) {\n  return {\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getCaseIncidentDetailsFailure = function getCaseIncidentDetailsFailure(err) {\n  return {\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getCaseIncidentDetails.js"],"names":["authLogout","addLoader","removeLoader","utils","getCaseIncidentDetails","processTypeId","referenceId","viewLoader","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getCaseIncidentDetailsRequest","api","get","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","data","getCaseIncidentDetailsSuccess","catch","err","getCaseIncidentDetailsFailure","handleUnauthorized","finally","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,sBAAsB,GACjC,SADWA,sBACX;AAAA,MAAGC,aAAH,QAAGA,aAAH;AAAA,MAAkBC,WAAlB,QAAkBA,WAAlB;AAAA,6BAA+BC,UAA/B;AAAA,MAA+BA,UAA/B,gCAA4C,IAA5C;AAAA,SACA,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACtB;AADsB,oBAEmCA,QAAQ,EAF3C;AAAA,QAENC,IAFM,aAEdC,IAFc,CAEND,IAFM;AAAA,QAEoBE,QAFpB,aAEEC,MAFF,CAEYC,IAFZ,CAEoBF,QAFpB;;AAItB,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,6BAA6B,EAA9B,CAAR;AACAV,IAAAA,UAAU,IAAIC,QAAQ,CAACP,SAAS,CAAC,wBAAD,CAAV,CAAtB;AAEA,WAAOE,KAAK,CAACe,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,UAFhB;AAGHC,MAAAA,IAAI,8BAAuBlB,aAAvB,wBAAkDC,WAAlD;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACe,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUxB,KAAK,CAACe,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,6BAA6B,CAACD,IAAI,CAACA,IAAN,CAA9B,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACdxB,MAAAA,QAAQ,CAACyB,6BAA6B,CAACD,GAAD,EAAMjB,YAAN,CAA9B,CAAR;AACAZ,MAAAA,KAAK,CAACe,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CR,UAA5C;AACA,aAAOgC,GAAP;AACD,KAhBI,EAiBJG,OAjBI,CAiBI,YAAM;AACb5B,MAAAA,UAAU,IAAIC,QAAQ,CAACN,YAAY,CAAC,wBAAD,CAAb,CAAtB;AACD,KAnBI,CAAP;AAoBD,GAhCD;AAAA,CADK;AAmCP,OAAO,IAAMe,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACY,IAAD,EAAU;AACrD,SAAO;AACLO,IAAAA,IAAI,EAAE,0CADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACD,IAAD,EAAU;AACrD,SAAO;AACLO,IAAAA,IAAI,EAAE,0CADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACD,GAAD,EAAS;AACpD,SAAO;AACLI,IAAAA,IAAI,EAAE,0CADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getCaseIncidentDetails =\r\n  ({ processTypeId, referenceId, viewLoader = true }) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getCaseIncidentDetails',\r\n    };\r\n\r\n    dispatch(getCaseIncidentDetailsRequest());\r\n    viewLoader && dispatch(addLoader('getCaseIncidentDetails'));\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.bpmService,\r\n        path: `/workflow/process/${processTypeId}/reference/${referenceId}/caseIncidentDetails`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleNewData(json))\r\n      .then((data) => {\r\n        dispatch(getCaseIncidentDetailsSuccess(data.data));\r\n        return data.data;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getCaseIncidentDetailsFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        viewLoader && dispatch(removeLoader('getCaseIncidentDetails'));\r\n      });\r\n  };\r\n\r\nexport const getCaseIncidentDetailsRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getCaseIncidentDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getCaseIncidentDetailsFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_CASE_INCIDENT_DETAILS_GET_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}