{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router'; // app\n\nimport { ClaimsTabTableView } from './ClaimsTabTable.view';\nimport { selectClaimsTabPagination, selectClaimsTabItem, selectClaimsTabCheckboxItem, selectClaimsTabData } from 'stores';\nimport { useSort, usePagination } from 'hooks';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTable.prototypes = {\n  claims: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.object.isRequired,\n  sort: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    changePage: PropTypes.object.isRequired,\n    changeRowsPerPage: PropTypes.object.isRequired,\n    sort: PropTypes.object.isRequired\n  }).isRequired,\n  viewFields: PropTypes.array.isRequired,\n  control: PropTypes.object.isRequired\n};\nexport function ClaimsTabTable(_ref) {\n  _s();\n\n  var _claimsTabData$tableD;\n\n  var claims = _ref.claims,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      _ref$handlers = _ref.handlers,\n      handlers = _ref$handlers === void 0 ? {} : _ref$handlers,\n      viewFields = _ref.viewFields,\n      control = _ref.control;\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var claimsTabData = useSelector(selectClaimsTabData);\n  var claimsTabRowSelected = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD = claimsTabData.tableDetails) === null || _claimsTabData$tableD === void 0 ? void 0 : _claimsTabData$tableD.checkboxSelected;\n  var claimsTabPagination = useSelector(selectClaimsTabPagination);\n\n  var _useSort = useSort(colsArr, sortObj, handlers === null || handlers === void 0 ? void 0 : handlers.sort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var pagination = usePagination(claims || [], claimsTabPagination, handlers.changePage, handlers.changeRowsPerPage);\n\n  var selectClaim = function selectClaim(claimObj) {\n    return function () {\n      if (claimObj === null || claimObj === void 0 ? void 0 : claimObj.processID) {\n        dispatch(selectClaimsTabCheckboxItem(claimObj));\n      }\n    };\n  };\n\n  var clickClaim = function clickClaim(claimObj) {\n    return function (event) {\n      event.stopPropagation();\n\n      if (claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference) {\n        dispatch(selectClaimsTabItem(claimObj, true));\n        history.push(\"\".concat(config.routes.claimsFNOL.claim, \"/\").concat(claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference));\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsTabTableView, {\n    claims: claims || [],\n    claimsSelected: claimsTabRowSelected,\n    cols: cols,\n    columnProps: columnProps,\n    sort: sort,\n    pagination: pagination,\n    viewFields: viewFields,\n    control: control,\n    handlers: {\n      clickClaim: clickClaim,\n      selectClaim: selectClaim,\n      sort: handlers.sort\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 58,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTabTable, \"wNJsQLFIg76w0Q8yobvnYbF93+U=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSort, usePagination];\n});\n\n_c = ClaimsTabTable;\nClaimsTabTable.displayName = \"ClaimsTabTable\";\nClaimsTabTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsTabTable\",\n  \"props\": {\n    \"handlers\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.js\"] = {\n    name: \"ClaimsTabTable\",\n    docgenInfo: ClaimsTabTable.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTable.js"],"names":["React","PropTypes","useDispatch","useSelector","useHistory","ClaimsTabTableView","selectClaimsTabPagination","selectClaimsTabItem","selectClaimsTabCheckboxItem","selectClaimsTabData","useSort","usePagination","config","ClaimsTabTable","prototypes","claims","array","isRequired","cols","columnProps","object","sort","handlers","shape","changePage","changeRowsPerPage","viewFields","control","colsArr","sortObj","dispatch","history","claimsTabData","claimsTabRowSelected","tableDetails","checkboxSelected","claimsTabPagination","pagination","selectClaim","claimObj","processID","clickClaim","event","stopPropagation","claimReference","push","routes","claimsFNOL","claim"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n// app\r\nimport { ClaimsTabTableView } from './ClaimsTabTable.view';\r\nimport {\r\n  selectClaimsTabPagination,\r\n  selectClaimsTabItem,\r\n  selectClaimsTabCheckboxItem,\r\n  selectClaimsTabData\r\n} from 'stores';\r\nimport { useSort, usePagination } from 'hooks';\r\nimport config from 'config';\r\n\r\nClaimsTabTable.prototypes = {\r\n  claims: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.object.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    changePage: PropTypes.object.isRequired,\r\n    changeRowsPerPage: PropTypes.object.isRequired,\r\n    sort: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n  viewFields: PropTypes.array.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function ClaimsTabTable({ claims, cols: colsArr, columnProps, sort: sortObj, handlers = {}, viewFields, control }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const claimsTabData = useSelector(selectClaimsTabData);\r\n  const claimsTabRowSelected = claimsTabData?.tableDetails?.checkboxSelected;\r\n  const claimsTabPagination = useSelector(selectClaimsTabPagination);\r\n\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers?.sort);\r\n  const pagination = usePagination(claims || [], claimsTabPagination, handlers.changePage, handlers.changeRowsPerPage);\r\n\r\n  const selectClaim = (claimObj) => () => {\r\n    if (claimObj?.processID) {\r\n      dispatch(selectClaimsTabCheckboxItem(claimObj));\r\n    }\r\n  };\r\n\r\n  const clickClaim = (claimObj) => (event) => {\r\n    event.stopPropagation();\r\n\r\n    if (claimObj?.claimReference) {\r\n      dispatch(selectClaimsTabItem(claimObj, true));\r\n      history.push(`${config.routes.claimsFNOL.claim}/${claimObj?.claimReference}`);\r\n    }\r\n  };\r\n   \r\n   return (\r\n    <ClaimsTabTableView\r\n      claims={claims || []}\r\n      claimsSelected={claimsTabRowSelected}\r\n      cols={cols}\r\n      columnProps={columnProps}\r\n      sort={sort}\r\n      pagination={pagination}\r\n      viewFields={viewFields}\r\n      control={control}\r\n      handlers={{\r\n        clickClaim,\r\n        selectClaim,\r\n        sort: handlers.sort\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}