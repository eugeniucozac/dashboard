{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DmsMetadata\\\\DmsMetadata.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useSelector, useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport DmsMetadataView from './DmsMetadata.view';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { getDocumentMetaData, getDmsContext, selectRefDataXbInstances, getViewTableDocuments, selectRefDataNewDocumentTypesByContextSource, selectRefDataNewDocumentTypeLookUpByContextSource, selectCaseDetails, getDmsEditMetadataSelector, getDmsEditMetadata, selectSettlementCurrency, postEditedMetadataDetails } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsMetadata.propTypes = {\n  docData: PropTypes.object.isRequired,\n  context: PropTypes.string.isRequired,\n  selectedSourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n  documentTypeKey: PropTypes.oneOf([constants.DMS_DOCUMENT_TYPE_SECTION_KEYS]),\n  searchParamsAfterUpload: PropTypes.shape({\n    referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    sectionType: PropTypes.string.isRequired\n  }),\n  cancelHandler: PropTypes.func.isRequired\n};\nDmsMetadata.defaultProps = {\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.policy\n};\nexport default function DmsMetadata(_ref) {\n  _s();\n\n  var _existedMetaData$meta, _existedMetaData$meta2, _existedMetaData$meta3, _existedMetaData$meta4, _existedMetaData$meta5, _existedMetaData$meta6, _existedMetaData$meta7, _existedMetaData$meta8;\n\n  var docData = _ref.docData,\n      context = _ref.context,\n      selectedSourceId = _ref.selectedSourceId,\n      referenceId = _ref.referenceId,\n      documentTypeKey = _ref.documentTypeKey,\n      searchParamsAfterUpload = _ref.searchParamsAfterUpload,\n      cancelHandler = _ref.cancelHandler;\n  var dispatch = useDispatch();\n\n  var _useSelector = useSelector(getDocumentMetaData),\n      documentMetaData = _useSelector.documentMetaData,\n      isDoc_Pending = _useSelector.isDoc_Pending;\n\n  var dmsContext = useSelector(getDmsContext);\n  var refDataXbInstances = useSelector(selectRefDataXbInstances);\n  var ppSelectCaseDetails = useSelector(selectCaseDetails);\n  var existedMetaData = useSelector(getDmsEditMetadataSelector);\n  var currenciesList = useSelector(selectSettlementCurrency);\n  var currencies = currenciesList === null || currenciesList === void 0 ? void 0 : currenciesList.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      name: \"\".concat(currency.id, \" - \").concat(currency.name)\n    });\n  });\n  var docInfo = utils.dmsFormatter.formatDocumentMetaData(documentMetaData, dmsContext, refDataXbInstances);\n  var xbInstanceId = selectedSourceId ? selectedSourceId : constants.DMS_CLAIM_SOURCE_ID;\n\n  var _utils$dmsFormatter$g = utils.dmsFormatter.getDocumentTypeFilterKeys(dmsContext, xbInstanceId, documentTypeKey),\n      dmsSectionKey = _utils$dmsFormatter$g.dmsSectionKey,\n      sourceId = _utils$dmsFormatter$g.sourceId;\n\n  var isDmsFromPi = utils.dmsFormatter.isDmsFromPi(documentTypeKey);\n\n  var _ref2 = isDmsFromPi && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey, sourceId),\n      documentTypeDescription = _ref2.documentTypeDescription,\n      sectionKey = _ref2.sectionKey,\n      dmsSourceID = _ref2.dmsSourceID;\n\n  var documentTypesBeforeFilter = useSelector(dmsSectionKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.policy ? selectRefDataNewDocumentTypeLookUpByContextSource(dmsSectionKey, sourceId) : selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId));\n  var documentTypesAfterFilter = (dmsContext === constants.DMS_CONTEXT_POLICY || dmsContext === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION) && isDmsFromPi ? documentTypesBeforeFilter === null || documentTypesBeforeFilter === void 0 ? void 0 : documentTypesBeforeFilter.filter(function (type) {\n    return type.documentTypeDescription === documentTypeDescription && type.sectionKey === sectionKey && type.sourceID === dmsSourceID;\n  }) : documentTypesBeforeFilter;\n  var documentId = docData.documentId,\n      docClassification = docData.docClassification;\n\n  var _useState = useState((existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.documentTypeDescription) === constants.DMS_EDIT_PAYMENT_TYPE),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPaymentAllowed = _useState2[0],\n      setIsPaymentAllowed = _useState2[1];\n\n  var isDmsFromPiInstruction = utils.dmsFormatter.isDmsFromPiInstruction(documentTypeKey);\n  var policyRef = ppSelectCaseDetails.policyRef,\n      instructionId = ppSelectCaseDetails.instructionId; //if api is added for this, please update this\n\n  var docClassificationTypes = [{\n    id: 1,\n    value: utils.string.t('dms.upload.modalItems.classificationType.low')\n  }, {\n    id: 2,\n    value: utils.string.t('dms.upload.modalItems.classificationType.guarded')\n  }, {\n    id: 3,\n    value: utils.string.t('dms.upload.modalItems.classificationType.high')\n  }, {\n    id: 4,\n    value: utils.string.t('dms.upload.modalItems.classificationType.severe')\n  }];\n  var fields = [{\n    name: 'documentName',\n    type: 'text',\n    value: (existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.documentName) || '',\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'documentType',\n    type: 'autocompletemui',\n    options: documentTypesAfterFilter || [],\n    optionKey: 'id',\n    optionLabel: 'documentTypeDescription',\n    value: (documentTypesAfterFilter === null || documentTypesAfterFilter === void 0 ? void 0 : documentTypesAfterFilter.find(function (item) {\n      return item.documentTypeDescription === (existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.documentTypeDescription);\n    })) || '',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    name: 'documentClassification',\n    type: 'autocompletemui',\n    options: docClassificationTypes || [],\n    optionKey: 'id',\n    optionLabel: 'value',\n    value: (docClassificationTypes === null || docClassificationTypes === void 0 ? void 0 : docClassificationTypes.find(function (item) {\n      return item.id === Number(docClassification);\n    })) || '',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    type: 'datepicker',\n    name: 'payment.paymentDate',\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true\n    },\n    outputFormat: 'iso',\n    value: (existedMetaData === null || existedMetaData === void 0 ? void 0 : (_existedMetaData$meta = existedMetaData.metadataFields) === null || _existedMetaData$meta === void 0 ? void 0 : (_existedMetaData$meta2 = _existedMetaData$meta.find(function (item) {\n      return item.prop === constants.DMS_EDIT_PAYMENT_DATE;\n    })) === null || _existedMetaData$meta2 === void 0 ? void 0 : _existedMetaData$meta2.value) || ''\n  }, {\n    name: 'payment.paymentReference',\n    type: 'text',\n    value: (existedMetaData === null || existedMetaData === void 0 ? void 0 : (_existedMetaData$meta3 = existedMetaData.metadataFields) === null || _existedMetaData$meta3 === void 0 ? void 0 : (_existedMetaData$meta4 = _existedMetaData$meta3.find(function (item) {\n      return item.prop === constants.DMS_EDIT_PAYMENT_REFERENCE;\n    })) === null || _existedMetaData$meta4 === void 0 ? void 0 : _existedMetaData$meta4.value) || ''\n  }, {\n    name: 'payment.lossPayee',\n    type: 'text',\n    value: (existedMetaData === null || existedMetaData === void 0 ? void 0 : (_existedMetaData$meta5 = existedMetaData.metadataFields) === null || _existedMetaData$meta5 === void 0 ? void 0 : (_existedMetaData$meta6 = _existedMetaData$meta5.find(function (item) {\n      return item.prop === constants.DMS_EDIT_PAYMENT_LOSS_PAYEE;\n    })) === null || _existedMetaData$meta6 === void 0 ? void 0 : _existedMetaData$meta6.value) || ''\n  }, {\n    name: 'payment.amount',\n    type: 'number',\n    value: (existedMetaData === null || existedMetaData === void 0 ? void 0 : (_existedMetaData$meta7 = existedMetaData.metadataFields) === null || _existedMetaData$meta7 === void 0 ? void 0 : (_existedMetaData$meta8 = _existedMetaData$meta7.find(function (item) {\n      return item.prop === constants.DMS_EDIT_PAYMENT_AMOUNT;\n    })) === null || _existedMetaData$meta8 === void 0 ? void 0 : _existedMetaData$meta8.value) || ''\n  }, {\n    name: 'payment.currency',\n    type: 'autocompletemui',\n    options: currencies || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (currencies === null || currencies === void 0 ? void 0 : currencies.find(function (item) {\n      var _existedMetaData$meta9, _existedMetaData$meta10;\n\n      return item.id === (existedMetaData === null || existedMetaData === void 0 ? void 0 : (_existedMetaData$meta9 = existedMetaData.metadataFields) === null || _existedMetaData$meta9 === void 0 ? void 0 : (_existedMetaData$meta10 = _existedMetaData$meta9.find(function (subItem) {\n        return subItem.prop === constants.DMS_EDIT_PAYMENT_CURRENCY;\n      })) === null || _existedMetaData$meta10 === void 0 ? void 0 : _existedMetaData$meta10.value);\n    })) || ''\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      cancelHandler();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: function handler(values) {\n      handleMetaDataSubmit(values);\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      watch = _useForm.watch;\n\n  var documentType = watch('documentType');\n  useEffect(function () {\n    !utils.generic.isValidObject(existedMetaData) && dispatch(getDmsEditMetadata(documentId, docClassification));\n  }, [documentId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setIsPaymentAllowed((documentType === null || documentType === void 0 ? void 0 : documentType.documentTypeDescription) === constants.DMS_EDIT_PAYMENT_TYPE);\n  }, [documentType]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleMetaDataSubmit = function handleMetaDataSubmit(values) {\n    var _Object$keys, _values$documentType, _values$documentType2, _values$documentClass;\n\n    var metadataField = isPaymentAllowed && ((_Object$keys = Object.keys(values === null || values === void 0 ? void 0 : values.payment)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.map(function (item) {\n      var _values$payment$item;\n\n      var propVal = item === 'currency' ? values === null || values === void 0 ? void 0 : (_values$payment$item = values.payment[item]) === null || _values$payment$item === void 0 ? void 0 : _values$payment$item.id : values === null || values === void 0 ? void 0 : values.payment[item];\n      return {\n        prop: constants.DMS_EDIT_PAYMENT_PAYLOAD[item],\n        value: (item === 'amount' ? parseInt(propVal) : propVal) || ''\n      };\n    }));\n    var editMetadata = {\n      documentExtType: (existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.documentExtType) || '',\n      documentId: parseInt(existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.documentId) || '',\n      documentTypeId: (values === null || values === void 0 ? void 0 : (_values$documentType = values.documentType) === null || _values$documentType === void 0 ? void 0 : _values$documentType.documentTypeID) || '',\n      documentTypeDescription: (values === null || values === void 0 ? void 0 : (_values$documentType2 = values.documentType) === null || _values$documentType2 === void 0 ? void 0 : _values$documentType2.documentTypeDescription) || '',\n      createdDate: (docData === null || docData === void 0 ? void 0 : docData.createdDate) || '',\n      createdBy: (existedMetaData === null || existedMetaData === void 0 ? void 0 : existedMetaData.createdBy) || '',\n      docClassificationId: (values === null || values === void 0 ? void 0 : (_values$documentClass = values.documentClassification) === null || _values$documentClass === void 0 ? void 0 : _values$documentClass.id) || '',\n      newFileName: values === null || values === void 0 ? void 0 : values.documentName,\n      metadataFields: metadataField || null\n    };\n    dispatch(postEditedMetadataDetails(editMetadata)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n        if (!isDmsFromPiInstruction) {\n          dispatch(getViewTableDocuments(_objectSpread({}, searchParamsAfterUpload ? searchParamsAfterUpload : _objectSpread({\n            referenceId: referenceId,\n            sectionType: context,\n            documentTypeKey: documentTypeKey\n          }, policyRef && instructionId && {\n            policyRef: policyRef,\n            instructionId: instructionId\n          }))));\n        }\n\n        cancelHandler();\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(DmsMetadataView, {\n    fields: fields,\n    control: control,\n    errors: errors,\n    actions: actions,\n    reset: reset,\n    handleSubmit: handleSubmit,\n    formState: formState,\n    dmsContext: dmsContext,\n    isDocPending: isDoc_Pending,\n    docInfo: docInfo,\n    documentData: docData,\n    existedMetaData: existedMetaData,\n    isPaymentAllowed: isPaymentAllowed\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 237,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsMetadata, \"SpGnSP4bd9J+zA4rjijAQ47T+9A=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = DmsMetadata;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsMetadata\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DmsMetadata/DmsMetadata.js"],"names":["React","useEffect","useState","PropTypes","useForm","useSelector","useDispatch","Yup","yupResolver","DmsMetadataView","utils","constants","getDocumentMetaData","getDmsContext","selectRefDataXbInstances","getViewTableDocuments","selectRefDataNewDocumentTypesByContextSource","selectRefDataNewDocumentTypeLookUpByContextSource","selectCaseDetails","getDmsEditMetadataSelector","getDmsEditMetadata","selectSettlementCurrency","postEditedMetadataDetails","DmsMetadata","propTypes","docData","object","isRequired","context","string","selectedSourceId","oneOfType","number","referenceId","documentTypeKey","oneOf","DMS_DOCUMENT_TYPE_SECTION_KEYS","searchParamsAfterUpload","shape","sectionType","cancelHandler","func","defaultProps","type","policy","dispatch","documentMetaData","isDoc_Pending","dmsContext","refDataXbInstances","ppSelectCaseDetails","existedMetaData","currenciesList","currencies","map","currency","name","id","docInfo","dmsFormatter","formatDocumentMetaData","xbInstanceId","DMS_CLAIM_SOURCE_ID","getDocumentTypeFilterKeys","dmsSectionKey","sourceId","isDmsFromPi","getDocumentTypeInfo","documentTypeDescription","sectionKey","dmsSourceID","documentTypesBeforeFilter","documentTypesAfterFilter","DMS_CONTEXT_POLICY","DMS_CONTEXT_PROCESSING_INSTRUCTION","filter","sourceID","documentId","docClassification","DMS_EDIT_PAYMENT_TYPE","isPaymentAllowed","setIsPaymentAllowed","isDmsFromPiInstruction","policyRef","instructionId","docClassificationTypes","value","t","fields","documentName","validation","required","options","optionKey","optionLabel","find","item","nullable","Number","icon","muiComponentProps","fullWidth","outputFormat","metadataFields","prop","DMS_EDIT_PAYMENT_DATE","DMS_EDIT_PAYMENT_REFERENCE","DMS_EDIT_PAYMENT_LOSS_PAYEE","DMS_EDIT_PAYMENT_AMOUNT","subItem","DMS_EDIT_PAYMENT_CURRENCY","actions","label","handler","values","handleMetaDataSubmit","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","watch","documentType","generic","isValidObject","metadataField","Object","keys","payment","propVal","DMS_EDIT_PAYMENT_PAYLOAD","parseInt","editMetadata","documentExtType","documentTypeId","documentTypeID","createdDate","createdBy","docClassificationId","documentClassification","newFileName","then","response","status","API_RESPONSE_OK"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport DmsMetadataView from './DmsMetadata.view';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport {\r\n  getDocumentMetaData,\r\n  getDmsContext,\r\n  selectRefDataXbInstances,\r\n  getViewTableDocuments,\r\n  selectRefDataNewDocumentTypesByContextSource,\r\n  selectRefDataNewDocumentTypeLookUpByContextSource,\r\n  selectCaseDetails,\r\n  getDmsEditMetadataSelector,\r\n  getDmsEditMetadata,\r\n  selectSettlementCurrency,\r\n  postEditedMetadataDetails,\r\n} from 'stores';\r\n\r\nDmsMetadata.propTypes = {\r\n  docData: PropTypes.object.isRequired,\r\n  context: PropTypes.string.isRequired,\r\n  selectedSourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n  documentTypeKey: PropTypes.oneOf([constants.DMS_DOCUMENT_TYPE_SECTION_KEYS]),\r\n  searchParamsAfterUpload: PropTypes.shape({\r\n    referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n    sectionType: PropTypes.string.isRequired,\r\n  }),\r\n  cancelHandler: PropTypes.func.isRequired,\r\n};\r\n\r\nDmsMetadata.defaultProps = {\r\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.policy,\r\n};\r\n\r\nexport default function DmsMetadata({\r\n  docData,\r\n  context,\r\n  selectedSourceId,\r\n  referenceId,\r\n  documentTypeKey,\r\n  searchParamsAfterUpload,\r\n  cancelHandler,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const { documentMetaData, isDoc_Pending } = useSelector(getDocumentMetaData);\r\n  const dmsContext = useSelector(getDmsContext);\r\n  const refDataXbInstances = useSelector(selectRefDataXbInstances);\r\n  const ppSelectCaseDetails = useSelector(selectCaseDetails);\r\n  const existedMetaData = useSelector(getDmsEditMetadataSelector);\r\n  const currenciesList = useSelector(selectSettlementCurrency);\r\n\r\n  const currencies = currenciesList?.map((currency) => ({ ...currency, name: `${currency.id} - ${currency.name}` }));\r\n  const docInfo = utils.dmsFormatter.formatDocumentMetaData(documentMetaData, dmsContext, refDataXbInstances);\r\n\r\n  const xbInstanceId = selectedSourceId ? selectedSourceId : constants.DMS_CLAIM_SOURCE_ID;\r\n\r\n  const { dmsSectionKey, sourceId } = utils.dmsFormatter.getDocumentTypeFilterKeys(dmsContext, xbInstanceId, documentTypeKey);\r\n  const isDmsFromPi = utils.dmsFormatter.isDmsFromPi(documentTypeKey);\r\n  const { documentTypeDescription, sectionKey, dmsSourceID } =\r\n    isDmsFromPi && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey, sourceId);\r\n  const documentTypesBeforeFilter = useSelector(\r\n    dmsSectionKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.policy\r\n      ? selectRefDataNewDocumentTypeLookUpByContextSource(dmsSectionKey, sourceId)\r\n      : selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId)\r\n  );\r\n  const documentTypesAfterFilter =\r\n    (dmsContext === constants.DMS_CONTEXT_POLICY || dmsContext === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION) && isDmsFromPi\r\n      ? documentTypesBeforeFilter?.filter(\r\n        (type) =>\r\n          type.documentTypeDescription === documentTypeDescription && type.sectionKey === sectionKey && type.sourceID === dmsSourceID\r\n      )\r\n      : documentTypesBeforeFilter;\r\n\r\n  const { documentId, docClassification } = docData;\r\n  const [isPaymentAllowed, setIsPaymentAllowed] = useState(existedMetaData?.documentTypeDescription === constants.DMS_EDIT_PAYMENT_TYPE);\r\n  const isDmsFromPiInstruction = utils.dmsFormatter.isDmsFromPiInstruction(documentTypeKey);\r\n  const { policyRef, instructionId } = ppSelectCaseDetails;\r\n\r\n  //if api is added for this, please update this\r\n  const docClassificationTypes = [\r\n    { id: 1, value: utils.string.t('dms.upload.modalItems.classificationType.low') },\r\n    { id: 2, value: utils.string.t('dms.upload.modalItems.classificationType.guarded') },\r\n    { id: 3, value: utils.string.t('dms.upload.modalItems.classificationType.high') },\r\n    { id: 4, value: utils.string.t('dms.upload.modalItems.classificationType.severe') },\r\n  ];\r\n\r\n  const fields = [\r\n    {\r\n      name: 'documentName',\r\n      type: 'text',\r\n      value: existedMetaData?.documentName || '',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'documentType',\r\n      type: 'autocompletemui',\r\n      options: documentTypesAfterFilter || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'documentTypeDescription',\r\n      value: documentTypesAfterFilter?.find((item) => item.documentTypeDescription === existedMetaData?.documentTypeDescription) || '',\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'documentClassification',\r\n      type: 'autocompletemui',\r\n      options: docClassificationTypes || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      value: docClassificationTypes?.find((item) => item.id === Number(docClassification)) || '',\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'payment.paymentDate',\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      outputFormat: 'iso',\r\n      value: existedMetaData?.metadataFields?.find((item) => item.prop === constants.DMS_EDIT_PAYMENT_DATE)?.value || '',\r\n    },\r\n    {\r\n      name: 'payment.paymentReference',\r\n      type: 'text',\r\n      value: existedMetaData?.metadataFields?.find((item) => item.prop === constants.DMS_EDIT_PAYMENT_REFERENCE)?.value || '',\r\n    },\r\n    {\r\n      name: 'payment.lossPayee',\r\n      type: 'text',\r\n      value: existedMetaData?.metadataFields?.find((item) => item.prop === constants.DMS_EDIT_PAYMENT_LOSS_PAYEE)?.value || '',\r\n    },\r\n    {\r\n      name: 'payment.amount',\r\n      type: 'number',\r\n      value: existedMetaData?.metadataFields?.find((item) => item.prop === constants.DMS_EDIT_PAYMENT_AMOUNT)?.value || '',\r\n    },\r\n    {\r\n      name: 'payment.currency',\r\n      type: 'autocompletemui',\r\n      options: currencies || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value:\r\n        currencies?.find((item) => {\r\n          return (\r\n            item.id === existedMetaData?.metadataFields?.find((subItem) => subItem.prop === constants.DMS_EDIT_PAYMENT_CURRENCY)?.value\r\n          );\r\n        }) || '',\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        cancelHandler();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: (values) => {\r\n        handleMetaDataSubmit(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, reset, errors, handleSubmit, formState, watch } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const documentType = watch('documentType');\r\n\r\n  useEffect(() => {\r\n    !utils.generic.isValidObject(existedMetaData) && dispatch(getDmsEditMetadata(documentId, docClassification));\r\n  }, [documentId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsPaymentAllowed(documentType?.documentTypeDescription === constants.DMS_EDIT_PAYMENT_TYPE);\r\n  }, [documentType]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleMetaDataSubmit = (values) => {\r\n    const metadataField =\r\n      isPaymentAllowed &&\r\n      Object.keys(values?.payment)?.map((item) => {\r\n        const propVal = item === 'currency' ? values?.payment[item]?.id : values?.payment[item];\r\n        return {\r\n          prop: constants.DMS_EDIT_PAYMENT_PAYLOAD[item],\r\n          value: (item === 'amount' ? parseInt(propVal) : propVal) || '',\r\n        };\r\n      });\r\n    const editMetadata = {\r\n      documentExtType: existedMetaData?.documentExtType || '',\r\n      documentId: parseInt(existedMetaData?.documentId) || '',\r\n      documentTypeId: values?.documentType?.documentTypeID || '',\r\n      documentTypeDescription: values?.documentType?.documentTypeDescription || '',\r\n      createdDate: docData?.createdDate || '',\r\n      createdBy: existedMetaData?.createdBy || '',\r\n      docClassificationId: values?.documentClassification?.id || '',\r\n      newFileName: values?.documentName,\r\n      metadataFields: metadataField || null,\r\n    };\r\n\r\n    dispatch(postEditedMetadataDetails(editMetadata)).then((response) => {\r\n      if (response?.status === constants.API_RESPONSE_OK) {\r\n        if (!isDmsFromPiInstruction) {\r\n          dispatch(\r\n            getViewTableDocuments({\r\n              ...(searchParamsAfterUpload\r\n                ? searchParamsAfterUpload\r\n                : {\r\n                  referenceId,\r\n                  sectionType: context,\r\n                  documentTypeKey,\r\n                  ...(policyRef && instructionId && { policyRef, instructionId }),\r\n                }),\r\n            })\r\n          );\r\n        }\r\n        cancelHandler();\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <DmsMetadataView\r\n      fields={fields}\r\n      control={control}\r\n      errors={errors}\r\n      actions={actions}\r\n      reset={reset}\r\n      handleSubmit={handleSubmit}\r\n      formState={formState}\r\n      dmsContext={dmsContext}\r\n      isDocPending={isDoc_Pending}\r\n      docInfo={docInfo}\r\n      documentData={docData}\r\n      existedMetaData={existedMetaData}\r\n      isPaymentAllowed={isPaymentAllowed}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}