{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nexport var postAddPlacementMarket = function postAddPlacementMarket(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.addPlacementMarket',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postAddPlacementMarketRequest(formData));\n    dispatch(addLoader('postAddPlacementMarket'));\n\n    if (!formData || !formData.placementId || !get(formData, 'markets.id')) {\n      dispatch(postAddPlacementMarketFailure(defaultError));\n      dispatch(enqueueNotification('notification.addPlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postAddPlacementMarket'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/placementMarket',\n      data: {\n        marketId: get(formData, 'markets.id'),\n        placementId: formData.placementId,\n        notes: formData.notes || null,\n        statusId: formData.statusId || null\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postAddPlacementMarketSuccess(data));\n      dispatch(enqueueNotification('notification.addPlacementMarket.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postAddPlacementMarket'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (placement.postAddPlacementMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postAddPlacementMarketFailure(err));\n      dispatch(enqueueNotification('notification.addPlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postAddPlacementMarket'));\n      return err;\n    });\n  };\n};\nexport var postAddPlacementMarketRequest = function postAddPlacementMarketRequest(data) {\n  return {\n    type: 'PLACEMENT_MARKET_ADD_POST_REQUEST',\n    payload: data\n  };\n};\nexport var postAddPlacementMarketSuccess = function postAddPlacementMarketSuccess(data) {\n  return {\n    type: 'PLACEMENT_MARKET_ADD_POST_SUCCESS',\n    payload: data\n  };\n};\nexport var postAddPlacementMarketFailure = function postAddPlacementMarketFailure(error) {\n  return {\n    type: 'PLACEMENT_MARKET_ADD_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.addPlacementMarket.js"],"names":["get","utils","authLogout","addLoader","enqueueNotification","hideModal","removeLoader","postAddPlacementMarket","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postAddPlacementMarketRequest","placementId","postAddPlacementMarketFailure","api","post","token","accessToken","edge","path","data","marketId","notes","statusId","then","response","handleResponse","json","handleData","postAddPlacementMarketSuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\n\r\nexport const postAddPlacementMarket = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.addPlacementMarket',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postAddPlacementMarketRequest(formData));\r\n  dispatch(addLoader('postAddPlacementMarket'));\r\n\r\n  if (!formData || !formData.placementId || !get(formData, 'markets.id')) {\r\n    dispatch(postAddPlacementMarketFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.addPlacementMarket.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('postAddPlacementMarket'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/placementMarket',\r\n      data: {\r\n        marketId: get(formData, 'markets.id'),\r\n        placementId: formData.placementId,\r\n        notes: formData.notes || null,\r\n        statusId: formData.statusId || null,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postAddPlacementMarketSuccess(data));\r\n      dispatch(enqueueNotification('notification.addPlacementMarket.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postAddPlacementMarket'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (placement.postAddPlacementMarket)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postAddPlacementMarketFailure(err));\r\n      dispatch(enqueueNotification('notification.addPlacementMarket.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postAddPlacementMarket'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postAddPlacementMarketRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_ADD_POST_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postAddPlacementMarketSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_ADD_POST_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postAddPlacementMarketFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_ADD_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}