{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MudmapAxis\\\\MudmapAxis.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './MudmapAxis.styles';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMudmapAxis.propTypes = {\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  axis: PropTypes.oneOf(['x', 'y']),\n  margin: PropTypes.object,\n  width: PropTypes.number,\n  height: PropTypes.number,\n  currency: PropTypes.string,\n  fullscreen: PropTypes.bool\n};\nexport default function MudmapAxis(_ref) {\n  var value = _ref.value,\n      axis = _ref.axis,\n      margin = _ref.margin,\n      width = _ref.width,\n      height = _ref.height,\n      currency = _ref.currency,\n      fullscreen = _ref.fullscreen;\n  var xAxis = axis === 'x';\n  var yAxis = axis === 'y';\n  var offset = value / (xAxis ? width : height) * 100;\n  var isAxisX100 = xAxis && value === 1;\n  var classes = makeStyles(styles, {\n    name: 'MudmapAxis'\n  })({\n    offset: offset,\n    margin: margin,\n    bold: isAxisX100,\n    fullscreen: fullscreen\n  });\n  var testid = \"axis-\".concat(axis, \"-\").concat(axis === 'x' ? Math.round(value * 10000) / 100 : value);\n  return /*#__PURE__*/_jsxDEV(Typography, {\n    className: classnames([classes.root, xAxis ? classes.xAxis : classes.yAxis]),\n    \"data-testid\": testid,\n    children: /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [xAxis && utils.string.t('format.percent', {\n        value: {\n          number: value * 100\n        }\n      }), yAxis && utils.string.t('format.currency', {\n        value: {\n          number: value,\n          format: {\n            average: true,\n            totalLength: 12,\n            lowPrecision: false,\n            trimMantissa: true\n          },\n          currency: currency\n        }\n      }).replace(' ', '')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = MudmapAxis;\nMudmapAxis.displayName = \"MudmapAxis\";\nMudmapAxis.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MudmapAxis\",\n  \"props\": {\n    \"value\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"axis\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'x'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'y'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"margin\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"currency\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fullscreen\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\MudmapAxis\\\\MudmapAxis.js\"] = {\n    name: \"MudmapAxis\",\n    docgenInfo: MudmapAxis.__docgenInfo,\n    path: \"src\\\\components\\\\MudmapAxis\\\\MudmapAxis.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MudmapAxis\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MudmapAxis/MudmapAxis.js"],"names":["React","PropTypes","classnames","styles","utils","makeStyles","Typography","MudmapAxis","propTypes","value","oneOfType","string","number","axis","oneOf","margin","object","width","height","currency","fullscreen","bool","xAxis","yAxis","offset","isAxisX100","classes","name","bold","testid","Math","round","root","t","format","average","totalLength","lowPrecision","trimMantissa","replace"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './MudmapAxis.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nMudmapAxis.propTypes = {\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  axis: PropTypes.oneOf(['x', 'y']),\r\n  margin: PropTypes.object,\r\n  width: PropTypes.number,\r\n  height: PropTypes.number,\r\n  currency: PropTypes.string,\r\n  fullscreen: PropTypes.bool,\r\n};\r\n\r\nexport default function MudmapAxis({ value, axis, margin, width, height, currency, fullscreen }) {\r\n  const xAxis = axis === 'x';\r\n  const yAxis = axis === 'y';\r\n  const offset = (value / (xAxis ? width : height)) * 100;\r\n  const isAxisX100 = xAxis && value === 1;\r\n  const classes = makeStyles(styles, { name: 'MudmapAxis' })({ offset, margin, bold: isAxisX100, fullscreen });\r\n  const testid = `axis-${axis}-${axis === 'x' ? Math.round(value * 10000) / 100 : value}`;\r\n\r\n  return (\r\n    <Typography className={classnames([classes.root, xAxis ? classes.xAxis : classes.yAxis])} data-testid={testid}>\r\n      <span>\r\n        {xAxis && utils.string.t('format.percent', { value: { number: value * 100 } })}\r\n        {yAxis &&\r\n          utils.string\r\n            .t('format.currency', {\r\n              value: { number: value, format: { average: true, totalLength: 12, lowPrecision: false, trimMantissa: true }, currency },\r\n            })\r\n            .replace(' ', '')}\r\n      </span>\r\n    </Typography>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}