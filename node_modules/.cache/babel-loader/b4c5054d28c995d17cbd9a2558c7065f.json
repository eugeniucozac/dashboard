{"ast":null,"code":"// app\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getRiskDefinitions = function getRiskDefinitions(type) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getDefinitions'\n    };\n    dispatch(getDefinitionsRequest(type));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: \"api/v1/products/\".concat(type)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      return dispatch(getDefinitionsSuccess(type, data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getDefinitionsFailure(err));\n      return err;\n    });\n  };\n};\nexport var getDefinitionsRequest = function getDefinitionsRequest(type) {\n  return {\n    type: 'RISK_DEFINITIONS_GET_REQUEST',\n    payload: type\n  };\n};\nexport var getDefinitionsSuccess = function getDefinitionsSuccess(type, data) {\n  return {\n    type: 'RISK_DEFINITIONS_GET_SUCCESS',\n    payload: {\n      type: type,\n      data: data\n    }\n  };\n};\nexport var getDefinitionsFailure = function getDefinitionsFailure(error) {\n  return {\n    type: 'RISK_DEFINITIONS_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getDefinitions.js"],"names":["authLogout","utils","getRiskDefinitions","type","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getDefinitionsRequest","api","get","token","accessToken","path","then","response","handleResponse","json","handleData","data","getDefinitionsSuccess","err","handleError","handleUnauthorized","getDefinitionsFailure","payload","error"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,IAAD;AAAA,SAAU,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClE;AADkE,oBAETA,QAAQ,EAFC;AAAA,QAElDC,IAFkD,aAE1DC,IAF0D,CAElDD,IAFkD;AAAA,QAExBE,QAFwB,aAE1CC,MAF0C,CAEhCC,IAFgC,CAExBF,QAFwB;;AAIlE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,qBAAqB,CAACV,IAAD,CAAtB,CAAR;AAEA,WAAOF,KAAK,CAACa,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHY,MAAAA,IAAI,4BAAqBf,IAArB;AAHD,KADA,EAMJgB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACa,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUrB,KAAK,CAACa,GAAN,CAAUS,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD;AAAA,aAAUpB,QAAQ,CAACqB,qBAAqB,CAACtB,IAAD,EAAOqB,IAAP,CAAtB,CAAlB;AAAA,KARD,WASE,UAACE,GAAD,EAAS;AACdzB,MAAAA,KAAK,CAACa,GAAN,CAAUa,WAAV,CAAsBD,GAAtB,EAA2Bf,YAA3B;AACAV,MAAAA,KAAK,CAACa,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CJ,UAA5C;AACAI,MAAAA,QAAQ,CAACyB,qBAAqB,CAACH,GAAD,CAAtB,CAAR;AACA,aAAOA,GAAP;AACD,KAdI,CAAP;AAeD,GAzBiC;AAAA,CAA3B;AA2BP,OAAO,IAAMb,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACV,IAAD,EAAU;AAC7C,SAAO;AACLA,IAAAA,IAAI,EAAE,8BADD;AAEL2B,IAAAA,OAAO,EAAE3B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMsB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACtB,IAAD,EAAOqB,IAAP,EAAgB;AACnD,SAAO;AACLrB,IAAAA,IAAI,EAAE,8BADD;AAEL2B,IAAAA,OAAO,EAAE;AACP3B,MAAAA,IAAI,EAAJA,IADO;AAEPqB,MAAAA,IAAI,EAAJA;AAFO;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,IAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACE,KAAD,EAAW;AAC9C,SAAO;AACL5B,IAAAA,IAAI,EAAE,8BADD;AAEL2B,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getRiskDefinitions = (type) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getDefinitions',\r\n  };\r\n\r\n  dispatch(getDefinitionsRequest(type));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: `api/v1/products/${type}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => dispatch(getDefinitionsSuccess(type, data)))\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getDefinitionsFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getDefinitionsRequest = (type) => {\r\n  return {\r\n    type: 'RISK_DEFINITIONS_GET_REQUEST',\r\n    payload: type,\r\n  };\r\n};\r\n\r\nexport const getDefinitionsSuccess = (type, data) => {\r\n  return {\r\n    type: 'RISK_DEFINITIONS_GET_SUCCESS',\r\n    payload: {\r\n      type,\r\n      data,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getDefinitionsFailure = (error) => {\r\n  return {\r\n    type: 'RISK_DEFINITIONS_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}