{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types'; //app\n\nimport * as utils from 'utils';\nimport { Accordion, FormAutocompleteMui, FormDate, FormLabel, FormGrid, FormText, Layout } from 'components';\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\nimport styles from './LinkClaimPolicy.styles';\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LinkClaimPolicyView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      policyData = _ref.policyData,\n      uwResetKey = _ref.uwResetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      underWritingGroups = _ref.underWritingGroups,\n      isBordereauFlag = _ref.isBordereauFlag,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      handleBack = _ref.handleBack,\n      handleSave = _ref.handleSave,\n      handleNext = _ref.handleNext,\n      save = _ref.save,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      handlerPolicySave = _ref.handlerPolicySave,\n      postSaveHandler = _ref.postSaveHandler,\n      postEditSaveHandler = _ref.postEditSaveHandler,\n      saveStatus = _ref.saveStatus,\n      setSaveStatus = _ref.setSaveStatus;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimInformation'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEdit = _useState2[0],\n      setIsEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initialLoad = _useState4[0],\n      setInitialLoad = _useState4[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  }));\n  var handleSubmit = claimForm.handleSubmit,\n      setValue = claimForm.setValue,\n      control = claimForm.control,\n      errors = claimForm.errors,\n      watch = claimForm.watch;\n  var insuredWatch = Boolean(watch('insured'));\n  var clientWatch = Boolean(watch('client'));\n  var countryCodeWatch = Boolean(watch('countryCode'));\n  var certificateNumberWatch = Boolean(watch('certificateNumber'));\n  var certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\n  var certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\n  var originalCurrencyCodeWatch = Boolean(watch('originalCurrencyCode'));\n  var settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\n  var interestWatch = Boolean(watch('interest'));\n  var underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\n\n  var formWatcher = function formWatcher() {\n    return insuredWatch || clientWatch || countryCodeWatch || certificateNumberWatch || certificateInceptionDateWatch || certificateExpiryDateWatch || originalCurrencyCodeWatch || settlementCurrencyCodeWatch || interestWatch || underWritingGroupsWatch;\n  };\n\n  var saveHandler = function saveHandler() {\n    var formEdited = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formEdited[index][\"formEditedStatus\"] = true;\n    setFormEditedStatus(formEdited);\n  };\n\n  if (formWatcher() !== isEdit) {\n    setIsEdit(true);\n  }\n\n  useEffect(function () {\n    if (isEdit && initialLoad) {\n      saveHandler();\n    } else {\n      setInitialLoad(true);\n    }\n  }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _isFormsEdited$index, _isFormsEdited$index2;\n\n    if (saveStatus && !((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) && initialLoad) {\n      handleSubmit(postSaveHandler)();\n    } else if (saveStatus && ((_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) && validation) {\n      handleSubmit(postEditSaveHandler)();\n    }\n\n    setValidation(true);\n  }, [saveStatus]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (underWritingGroups.percentageOfSelected) {\n      setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n      saveHandler();\n    } else {\n      setValue('order', '100');\n    }\n  }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      className: classes.typoTitle,\n      children: policyData === null || policyData === void 0 ? void 0 : policyData.policyNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        padding: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          m: 3,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.insured')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'insured', control)), {}, {\n                  error: errors.insured\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 117,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.client')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 123,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'client', control)), {}, {\n                  error: errors.client\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey || isEdit, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.country')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'countryCode', control)), {}, {\n                  error: errors.countryCode\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey || isEdit, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 25\n          }, this), isBordereauFlag && /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateNumber')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateNumber', control)), {}, {\n                  error: errors.certificateNumber\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateInceptionDate')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 160,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateInceptionDate', control)), {}, {\n                  error: errors.certificateInceptionDate\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 159,\n              columnNumber: 37\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.certificateExpiryDate')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 41\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateExpiryDate', control)), {}, {\n                  error: errors.certificateExpiryDate\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 45\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 41\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 37\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 33\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 3,\n            direction: \"row\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: 'Original Currency',\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 192,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'originalCurrencyCode', control)), {}, {\n                  error: errors.settlementCurrencyCode\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 197,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 191,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.settlementCurrency')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 205,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)), {}, {\n                  error: errors.settlementCurrencyCode\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 210,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 29\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                nestedClasses: {\n                  root: classes.formLabel\n                },\n                label: \"\".concat(utils.string.t('claims.claimInformation.interest')),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 33\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'interest', control)), {}, {\n                  error: errors.interest\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 37\n                }, this)\n              }, uwResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 33\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 29\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 190,\n            columnNumber: 25\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 21\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Accordion, {\n            expanded: true,\n            title: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.title,\n              variant: \"body2\",\n              children: [\" \", utils.string.t('claims.underWritingGroups.title')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 234,\n              columnNumber: 48\n            }, this),\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              direction: \"row\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroups, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  uwResetKey: uwResetKey,\n                  hasClaimRef: hasClaimRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 33\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 236,\n                columnNumber: 29\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(ClaimsMovementType, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  underWritingGroups: underWritingGroups,\n                  enforceValueSet: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 240,\n                  columnNumber: 29\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 239,\n                columnNumber: 29\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 235,\n              columnNumber: 25\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 234,\n            columnNumber: 21\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 233,\n          columnNumber: 21\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LinkClaimPolicyView, \"j/kCyEU6S9S/hD0n4dJbjZ3p56A=\", false, function () {\n  return [useForm];\n});\n\n_c = LinkClaimPolicyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkClaimPolicyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.view.js"],"names":["React","useEffect","useState","useForm","yupResolver","PropTypes","utils","Accordion","FormAutocompleteMui","FormDate","FormLabel","FormGrid","FormText","Layout","ClaimsUnderwritingGroups","ClaimsMovementType","styles","makeStyles","Grid","Box","Typography","LinkClaimPolicyView","fields","policyData","uwResetKey","hasClaimRef","underWritingGroups","isBordereauFlag","validation","setValidation","activeStep","isAllStepsCompleted","handleBack","handleSave","handleNext","save","index","isFormsEdited","setFormEditedStatus","handlerPolicySave","postSaveHandler","postEditSaveHandler","saveStatus","setSaveStatus","classes","name","isEdit","setIsEdit","initialLoad","setInitialLoad","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimForm","resolver","context","handleSubmit","setValue","control","errors","watch","insuredWatch","Boolean","clientWatch","countryCodeWatch","certificateNumberWatch","certificateInceptionDateWatch","certificateExpiryDateWatch","originalCurrencyCodeWatch","settlementCurrencyCodeWatch","interestWatch","underWritingGroupsWatch","formWatcher","saveHandler","formEdited","map","formEditedStatus","percentageOfSelected","typoTitle","policyNumber","wrapper","root","formLabel","string","t","getFieldProps","insured","client","countryCode","certificateNumber","certificateInceptionDate","certificateExpiryDate","settlementCurrencyCode","interest","title"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,SAAT,EAAoBC,mBAApB,EAAyCC,QAAzC,EAAmDC,SAAnD,EAA8DC,QAA9D,EAAwEC,QAAxE,EAAkFC,MAAlF,QAAgG,YAAhG;AACA,SAASC,wBAAT,EAAmCC,kBAAnC,QAA6D,SAA7D;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AAEA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,EAAgCC,UAAhC,QAAkD,mBAAlD;;;AAEA,OAAO,SAASC,mBAAT,OAuBL;AAAA;;AAAA,MAtBEC,MAsBF,QAtBEA,MAsBF;AAAA,MArBEC,UAqBF,QArBEA,UAqBF;AAAA,MApBEC,UAoBF,QApBEA,UAoBF;AAAA,MAnBEC,WAmBF,QAnBEA,WAmBF;AAAA,MAlBEC,kBAkBF,QAlBEA,kBAkBF;AAAA,MAjBEC,eAiBF,QAjBEA,eAiBF;AAAA,MAhBEC,UAgBF,QAhBEA,UAgBF;AAAA,MAfEC,aAeF,QAfEA,aAeF;AAAA,MAdEC,UAcF,QAdEA,UAcF;AAAA,MAbEC,mBAaF,QAbEA,mBAaF;AAAA,MAZEC,UAYF,QAZEA,UAYF;AAAA,MAXEC,UAWF,QAXEA,UAWF;AAAA,MAVEC,UAUF,QAVEA,UAUF;AAAA,MATEC,IASF,QATEA,IASF;AAAA,MAREC,KAQF,QAREA,KAQF;AAAA,MAPEC,aAOF,QAPEA,aAOF;AAAA,MANEC,mBAMF,QANEA,mBAMF;AAAA,MALEC,iBAKF,QALEA,iBAKF;AAAA,MAJEC,eAIF,QAJEA,eAIF;AAAA,MAHEC,mBAGF,QAHEA,mBAGF;AAAA,MAFEC,UAEF,QAFEA,UAEF;AAAA,MADEC,aACF,QADEA,aACF;AACE,MAAMC,OAAO,GAAG3B,UAAU,CAACD,MAAD,EAAS;AAAE6B,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADF,kBAE8B3C,QAAQ,CAAC,KAAD,CAFtC;AAAA;AAAA,MAES4C,MAFT;AAAA,MAEiBC,SAFjB;;AAAA,mBAGwC7C,QAAQ,CAAC,KAAD,CAHhD;AAAA;AAAA,MAGS8C,WAHT;AAAA,MAGsBC,cAHtB;;AAIE,MAAMC,aAAa,GAAG5C,KAAK,CAAC6C,IAAN,CAAWC,gBAAX,CAA4B9B,MAA5B,CAAtB;AACA,MAAM+B,gBAAgB,GAAG/C,KAAK,CAAC6C,IAAN,CAAWG,mBAAX,CAA+BhC,MAA/B,CAAzB;AAEA,MAAMiC,SAAS,GAAGpD,OAAO;AACrB+C,IAAAA,aAAa,EAAbA;AADqB,KAEjBG,gBAAgB,IAAI;AAAEG,IAAAA,QAAQ,EAAEpD,WAAW,CAACiD,gBAAD,CAAvB;AAA2CI,IAAAA,OAAO,EAAE;AAAE7B,MAAAA,UAAU,EAAVA;AAAF;AAApD,GAFH,EAAzB;AAPF,MAWU8B,YAXV,GAW6DH,SAX7D,CAWUG,YAXV;AAAA,MAWwBC,QAXxB,GAW6DJ,SAX7D,CAWwBI,QAXxB;AAAA,MAWkCC,OAXlC,GAW6DL,SAX7D,CAWkCK,OAXlC;AAAA,MAW2CC,MAX3C,GAW6DN,SAX7D,CAW2CM,MAX3C;AAAA,MAWmDC,KAXnD,GAW6DP,SAX7D,CAWmDO,KAXnD;AAaE,MAAMC,YAAY,GAAGC,OAAO,CAACF,KAAK,CAAC,SAAD,CAAN,CAA5B;AACA,MAAMG,WAAW,GAAGD,OAAO,CAACF,KAAK,CAAC,QAAD,CAAN,CAA3B;AACA,MAAMI,gBAAgB,GAAGF,OAAO,CAACF,KAAK,CAAC,aAAD,CAAN,CAAhC;AACA,MAAMK,sBAAsB,GAAGH,OAAO,CAACF,KAAK,CAAC,mBAAD,CAAN,CAAtC;AACA,MAAMM,6BAA6B,GAAGJ,OAAO,CAACF,KAAK,CAAC,0BAAD,CAAN,CAA7C;AACA,MAAMO,0BAA0B,GAAGL,OAAO,CAACF,KAAK,CAAC,uBAAD,CAAN,CAA1C;AACA,MAAMQ,yBAAyB,GAAGN,OAAO,CAACF,KAAK,CAAE,sBAAF,CAAN,CAAzC;AACA,MAAMS,2BAA2B,GAAGP,OAAO,CAACF,KAAK,CAAC,wBAAD,CAAN,CAA3C;AACA,MAAMU,aAAa,GAAGR,OAAO,CAACF,KAAK,CAAC,UAAD,CAAN,CAA7B;AACA,MAAMW,uBAAuB,GAAGT,OAAO,CAACF,KAAK,CAAC,oBAAD,CAAN,CAAvC;;AAEA,MAAMY,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,WAAOX,YAAY,IAAIE,WAAhB,IAA+BC,gBAA/B,IAAmDC,sBAAnD,IAA6EC,6BAA7E,IAA8GC,0BAA9G,IAA4IC,yBAA5I,IAAyKC,2BAAzK,IAAwMC,aAAxM,IAAyNC,uBAAhO;AACH,GAFD;;AAIA,MAAME,WAAW,GAAG,SAAdA,WAAc,GAAM;AACtB,QAAMC,UAAU,GAAGvC,aAAa,CAACwC,GAAd,CAAkB,UAAC1B,IAAD;AAAA,+BAAgBA,IAAhB;AAAA,KAAlB,CAAnB;AACAyB,IAAAA,UAAU,CAACxC,KAAD,CAAV,CAAkB,kBAAlB,IAAwC,IAAxC;AACAE,IAAAA,mBAAmB,CAACsC,UAAD,CAAnB;AACH,GAJD;;AAMA,MAAGF,WAAW,OAAO5B,MAArB,EAA4B;AACxBC,IAAAA,SAAS,CAAC,IAAD,CAAT;AACH;;AAED9C,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAG6C,MAAM,IAAIE,WAAb,EAAyB;AACrB2B,MAAAA,WAAW;AACd,KAFD,MAEM;AACF1B,MAAAA,cAAc,CAAC,IAAD,CAAd;AACH;AACJ,GANQ,EAMN,CAACH,MAAD,CANM,CAAT,CAtCF,CA4CgB;;AAEd7C,EAAAA,SAAS,CAAC,YAAI;AAAA;;AACV,QAAGyC,UAAU,IAAI,0BAACL,aAAa,CAACD,KAAD,CAAd,yDAAC,qBAAsB0C,gBAAvB,CAAd,IAAyD9B,WAA5D,EAAwE;AACpEU,MAAAA,YAAY,CAAClB,eAAD,CAAZ;AACH,KAFD,MAEM,IAAGE,UAAU,8BAAIL,aAAa,CAACD,KAAD,CAAjB,0DAAI,sBAAsB0C,gBAA1B,CAAV,IAAwDlD,UAA3D,EAAsE;AACxE8B,MAAAA,YAAY,CAACjB,mBAAD,CAAZ;AACH;;AACDZ,IAAAA,aAAa,CAAC,IAAD,CAAb;AACH,GAPQ,EAOP,CAACa,UAAD,CAPO,CAAT,CA9CF,CAqDkB;;AAEhBzC,EAAAA,SAAS,CAAC,YAAM;AACZ,QAAIyB,kBAAkB,CAACqD,oBAAvB,EAA6C;AAC3CpB,MAAAA,QAAQ,CAAC,iBAAD,EAAoBjC,kBAAkB,CAACqD,oBAAvC,CAAR;AACAJ,MAAAA,WAAW;AACZ,KAHD,MAGO;AACLhB,MAAAA,QAAQ,CAAC,OAAD,EAAU,KAAV,CAAR;AACD;AACJ,GAPQ,EAON,CAACjC,kBAAD,CAPM,CAAT,CAvDF,CA8D4B;;AAE1B,sBACI;AAAA,4BACI,QAAC,UAAD;AAAY,MAAA,OAAO,EAAC,OAApB;AAA4B,MAAA,SAAS,EAAEkB,OAAO,CAACoC,SAA/C;AAAA,gBACKzD,UADL,aACKA,UADL,uBACKA,UAAU,CAAE0D;AADjB;AAAA;AAAA;AAAA;AAAA,YADJ,eAII;AAAK,MAAA,SAAS,EAAErC,OAAO,CAACsC,OAAxB;AAAA,6BACI,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAA,gCACI,QAAC,GAAD;AAAK,UAAA,CAAC,EAAE,CAAR;AAAA,kCACI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAEC,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCAAyBhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,SAAjC,EAA4CsC,OAA5C,CAAzB;AAA+E,kBAAA,KAAK,EAAEC,MAAM,CAAC2B;AAA7F;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBhE,UAApB;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAE2D,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCAAyBhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,QAAjC,EAA2CsC,OAA3C,CAAzB;AAA8E,kBAAA,KAAK,EAAEC,MAAM,CAAC4B;AAA5F;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBjE,UAAU,IAAIsB,MAAlC;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eAuBI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAEqC,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCAAyBhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,aAAjC,EAAgDsC,OAAhD,CAAzB;AAAmF,kBAAA,KAAK,EAAEC,MAAM,CAAC6B;AAAjG;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBlE,UAAU,IAAIsB,MAAlC;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAvBJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADJ,EAqCQnB,eAAe,iBACX,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAEwD,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,2CAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,QAAD,kCAAchF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,mBAAjC,EAAsDsC,OAAtD,CAAd;AAA8E,kBAAA,KAAK,EAAEC,MAAM,CAAC8B;AAA5F;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAYI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAER,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,kDAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,QAAD,kCACQhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,0BAAjC,EAA6DsC,OAA7D,CADR;AAEI,kBAAA,KAAK,EAAEC,MAAM,CAAC+B;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAZJ,eA0BI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAET,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,+CAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,QAAD,kCACQhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,uBAAjC,EAA0DsC,OAA1D,CADR;AAEI,kBAAA,KAAK,EAAEC,MAAM,CAACgC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA1BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAtCZ,eAiFI,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAA4B,YAAA,SAAS,EAAC,KAAtC;AAAA,oCACI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAEV,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,EAAE,mBAFX;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCACQ9E,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,sBAAjC,EAAyDsC,OAAzD,CADR;AAEI,kBAAA,KAAK,EAAEC,MAAM,CAACiC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBtE,UAApB;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBADJ,eAcI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAE2D,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,4CAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCACQhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,wBAAjC,EAA2DsC,OAA3D,CADR;AAEI,kBAAA,KAAK,EAAEC,MAAM,CAACiC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBtE,UAApB;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBAdJ,eA2BI,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAA,sCACI,QAAC,SAAD;AACI,gBAAA,aAAa,EAAE;AAAE2D,kBAAAA,IAAI,EAAEvC,OAAO,CAACwC;AAAhB,iBADnB;AAEI,gBAAA,KAAK,YAAK9E,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAL,CAFT;AAGI,gBAAA,KAAK,EAAC;AAHV;AAAA;AAAA;AAAA;AAAA,sBADJ,eAMI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAA,uCACI,QAAC,mBAAD,kCACQhF,KAAK,CAAC6C,IAAN,CAAWoC,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6CsC,OAA7C,CADR;AAEI,kBAAA,KAAK,EAAEC,MAAM,CAACkC;AAFlB;AAAA;AAAA;AAAA;AAAA;AADJ,iBAAoBvE,UAApB;AAAA;AAAA;AAAA;AAAA,sBANJ;AAAA;AAAA;AAAA;AAAA;AAAA,oBA3BJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBAjFJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBADJ,eA6HI,QAAC,GAAD;AAAA,iCACA,QAAC,SAAD;AAAW,YAAA,QAAQ,MAAnB;AAAoB,YAAA,KAAK,eAAE,QAAC,UAAD;AAAY,cAAA,SAAS,EAAEoB,OAAO,CAACoD,KAA/B;AAAsC,cAAA,OAAO,EAAC,OAA9C;AAAA,8BAAwD1F,KAAK,CAAC+E,MAAN,CAAaC,CAAb,CAAe,iCAAf,CAAxD;AAAA;AAAA;AAAA;AAAA;AAAA,oBAA3B;AAAA,mCACI,QAAC,IAAD;AAAM,cAAA,SAAS,MAAf;AAAgB,cAAA,SAAS,EAAC,KAA1B;AAAA,sCACI,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACI,QAAC,wBAAD;AAA0B,kBAAA,MAAM,EAAEhE,MAAlC;AAA0C,kBAAA,SAAS,EAAEiC,SAArD;AAAgE,kBAAA,UAAU,EAAE/B,UAA5E;AAAwF,kBAAA,WAAW,EAAEC;AAArG;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,sBADJ,eAII,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACA,QAAC,kBAAD;AACI,kBAAA,MAAM,EAAEH,MADZ;AAEI,kBAAA,SAAS,EAAEiC,SAFf;AAGI,kBAAA,kBAAkB,EAAE7B,kBAHxB;AAII,kBAAA,eAAe,EAAE;AAJrB;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,sBAJJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA;AADA;AAAA;AAAA;AAAA;AAAA,gBA7HJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAJJ;AAAA,kBADJ;AAyJH;;GAhPeL,mB;UA8BMlB,O;;;KA9BNkB,mB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\n\r\nimport { Accordion, FormAutocompleteMui, FormDate, FormLabel, FormGrid, FormText, Layout } from 'components';\r\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\r\nimport styles from './LinkClaimPolicy.styles';\r\n\r\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\r\n\r\nexport function LinkClaimPolicyView({\r\n    fields, \r\n    policyData, \r\n    uwResetKey, \r\n    hasClaimRef, \r\n    underWritingGroups, \r\n    isBordereauFlag,\r\n    validation, \r\n    setValidation,\r\n    activeStep,\r\n    isAllStepsCompleted,\r\n    handleBack,\r\n    handleSave,\r\n    handleNext,\r\n    save,\r\n    index,\r\n    isFormsEdited,\r\n    setFormEditedStatus,\r\n    handlerPolicySave,\r\n    postSaveHandler,\r\n    postEditSaveHandler,\r\n    saveStatus,\r\n    setSaveStatus,\r\n}){\r\n    const classes = makeStyles(styles, { name: 'EnterClaimInformation' })();\r\n    const [isEdit, setIsEdit] = useState(false);\r\n    const [initialLoad, setInitialLoad] = useState(false);\r\n    const defaultValues = utils.form.getInitialValues(fields);\r\n    const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n    const claimForm = useForm({\r\n        defaultValues,\r\n        ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n    });\r\n    const { handleSubmit, setValue, control, errors, watch } = claimForm;\r\n\r\n    const insuredWatch = Boolean(watch('insured'));\r\n    const clientWatch = Boolean(watch('client'));\r\n    const countryCodeWatch = Boolean(watch('countryCode'));\r\n    const certificateNumberWatch = Boolean(watch('certificateNumber'));\r\n    const certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\r\n    const certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\r\n    const originalCurrencyCodeWatch = Boolean(watch ('originalCurrencyCode'));\r\n    const settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\r\n    const interestWatch = Boolean(watch('interest'));\r\n    const underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\r\n\r\n    const formWatcher = () => {\r\n        return insuredWatch || clientWatch || countryCodeWatch || certificateNumberWatch || certificateInceptionDateWatch || certificateExpiryDateWatch || originalCurrencyCodeWatch || settlementCurrencyCodeWatch || interestWatch || underWritingGroupsWatch;\r\n    }\r\n\r\n    const saveHandler = () => {\r\n        const formEdited = isFormsEdited.map((form) => ({ ...form }));\r\n        formEdited[index][\"formEditedStatus\"] = true;\r\n        setFormEditedStatus(formEdited);\r\n    };\r\n\r\n    if(formWatcher() !== isEdit){\r\n        setIsEdit(true);\r\n    }\r\n    \r\n    useEffect(() => {\r\n        if(isEdit && initialLoad){\r\n            saveHandler();\r\n        } else{\r\n            setInitialLoad(true);\r\n        }   \r\n    }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(()=>{\r\n        if(saveStatus && !isFormsEdited[index]?.formEditedStatus && initialLoad){\r\n            handleSubmit(postSaveHandler)();\r\n        }else if(saveStatus && isFormsEdited[index]?.formEditedStatus && validation){\r\n            handleSubmit(postEditSaveHandler)();\r\n        }\r\n        setValidation(true);\r\n    },[saveStatus]) // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    useEffect(() => {\r\n        if (underWritingGroups.percentageOfSelected) {\r\n          setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n          saveHandler();\r\n        } else {\r\n          setValue('order', '100');\r\n        }\r\n    }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\r\n    \r\n    return(\r\n        <>\r\n            <Typography variant=\"body2\" className={classes.typoTitle}>\r\n                {policyData?.policyNumber}\r\n            </Typography>\r\n            <div className={classes.wrapper}>\r\n                <Layout main padding>\r\n                    <Box m={3}>\r\n                        <Grid container spacing={3} direction=\"row\">\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={`${utils.string.t('claims.claimInformation.insured')}`}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey}>\r\n                                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'insured', control)} error={errors.insured} />\r\n                                </FormGrid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={`${utils.string.t('claims.claimInformation.client')}`}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey || isEdit}>\r\n                                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'client', control)} error={errors.client} />\r\n                                </FormGrid>\r\n                            </Grid>\r\n\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={`${utils.string.t('claims.claimInformation.country')}`}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey || isEdit}>\r\n                                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'countryCode', control)} error={errors.countryCode} />\r\n                                </FormGrid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                        {\r\n                            isBordereauFlag && (\r\n                                <Grid container spacing={3} direction=\"row\">\r\n                                    <Grid item xs={4}>\r\n                                        <FormLabel\r\n                                            nestedClasses={{ root: classes.formLabel }}\r\n                                            label={`${utils.string.t('claims.claimInformation.certificateNumber')}`}\r\n                                            align=\"right\"\r\n                                        />\r\n                                        <FormGrid item>\r\n                                            <FormText {...utils.form.getFieldProps(fields, 'certificateNumber', control)} error={errors.certificateNumber} />\r\n                                        </FormGrid>\r\n                                    </Grid>\r\n                                    \r\n                                    <Grid item xs={4}>\r\n                                        <FormLabel\r\n                                            nestedClasses={{ root: classes.formLabel }}\r\n                                            label={`${utils.string.t('claims.claimInformation.certificateInceptionDate')}`}\r\n                                            align=\"right\"\r\n                                        />\r\n                                        <FormGrid item>\r\n                                            <FormDate\r\n                                                {...utils.form.getFieldProps(fields, 'certificateInceptionDate', control)}\r\n                                                error={errors.certificateInceptionDate}\r\n                                            />\r\n                                        </FormGrid>\r\n                                    </Grid>\r\n\r\n                                    <Grid item xs={4}>\r\n                                        <FormLabel\r\n                                            nestedClasses={{ root: classes.formLabel }}\r\n                                            label={`${utils.string.t('claims.claimInformation.certificateExpiryDate')}`}\r\n                                            align=\"right\"\r\n                                        />\r\n                                        <FormGrid item>\r\n                                            <FormDate\r\n                                                {...utils.form.getFieldProps(fields, 'certificateExpiryDate', control)}\r\n                                                error={errors.certificateExpiryDate}\r\n                                            />\r\n                                        </FormGrid>\r\n                                    </Grid>\r\n                                </Grid>\r\n                            )\r\n                        }\r\n\r\n                        <Grid container spacing={3} direction=\"row\">\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={'Original Currency'}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey}>\r\n                                    <FormAutocompleteMui\r\n                                        {...utils.form.getFieldProps(fields, 'originalCurrencyCode', control)}\r\n                                        error={errors.settlementCurrencyCode}\r\n                                    />\r\n                                </FormGrid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={`${utils.string.t('claims.claimInformation.settlementCurrency')}`}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey}>\r\n                                    <FormAutocompleteMui\r\n                                        {...utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)}\r\n                                        error={errors.settlementCurrencyCode}\r\n                                    />\r\n                                </FormGrid>\r\n                            </Grid>\r\n                            <Grid item xs={4}>\r\n                                <FormLabel\r\n                                    nestedClasses={{ root: classes.formLabel }}\r\n                                    label={`${utils.string.t('claims.claimInformation.interest')}`}\r\n                                    align=\"right\"\r\n                                />\r\n                                <FormGrid item key={uwResetKey}>\r\n                                    <FormAutocompleteMui\r\n                                        {...utils.form.getFieldProps(fields, 'interest', control)}\r\n                                        error={errors.interest}\r\n                                    />\r\n                                </FormGrid>\r\n                            </Grid>\r\n                        </Grid>\r\n\r\n                    </Box>\r\n                    <Box>\r\n                    <Accordion expanded title={<Typography className={classes.title} variant=\"body2\"> {utils.string.t('claims.underWritingGroups.title')}</Typography>}>\r\n                        <Grid container direction=\"row\">\r\n                            <Grid item xs={12}>\r\n                                <ClaimsUnderwritingGroups fields={fields} claimForm={claimForm} uwResetKey={uwResetKey} hasClaimRef={hasClaimRef} />\r\n                            </Grid>\r\n                            <Grid item xs={12}>\r\n                            <ClaimsMovementType\r\n                                fields={fields}\r\n                                claimForm={claimForm}\r\n                                underWritingGroups={underWritingGroups}\r\n                                enforceValueSet={true}\r\n                            />\r\n                            </Grid>\r\n                        </Grid>\r\n                    </Accordion>\r\n                    </Box>\r\n                </Layout>\r\n            </div>\r\n            \r\n        </>\r\n    );\r\n}\r\n\r\n\r\n"]},"metadata":{},"sourceType":"module"}