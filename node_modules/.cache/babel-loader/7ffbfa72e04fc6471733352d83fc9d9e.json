{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateAdHocTask\\\\CreateAdHocTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport styles from './CreateAdHocTask.styles';\nimport { CreateAdHocTaskView } from './CreateAdHocTask.view';\nimport { showModal, hideModal, getPriorityLevels, selectPriorities, getUsersByOrg, selectClaimsAssignedToUsers, postSaveAdHocTask, postEditAdHocTask, resetClaimsAssignedToUsers, setDmsTaskContextType, resetDmsTaskTypeContext, getClaimRefTasks } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateAdHocTask.propTypes = {\n  claim: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  submitHandler: PropTypes.func\n};\nexport default function CreateAdHocTask(_ref) {\n  _s();\n\n  var claim = _ref.claim,\n      cancelHandler = _ref.cancelHandler,\n      submitHandler = _ref.submitHandler;\n  var classes = makeStyles(styles, {\n    name: 'CreateAdHocTask'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      additionalResetKey = _useState4[0],\n      setAdditionalResetKey = _useState4[1]; // Redux\n\n\n  var priorities = useSelector(selectPriorities);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var assignedToUsers = selectAssignees === null || selectAssignees === void 0 ? void 0 : selectAssignees.items;\n  var taskDetails = (claim === null || claim === void 0 ? void 0 : claim.taskRef) ? _objectSpread({}, claim) : null;\n  var isEditFlag = utils.generic.isValidObject(taskDetails);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isTaskSubmitted = _useState6[0],\n      setIsTaskSubmitted = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isUploadDocuments = _useState8[0],\n      setIsUploadDocuments = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      adHocTaskData = _useState10[0],\n      setAdHocTaskData = _useState10[1]; // State\n\n\n  var _useState11 = useState(assignedToUsers),\n      _useState12 = _slicedToArray(_useState11, 2),\n      additionalAssigneeList = _useState12[0],\n      setAdditionalAssigneeList = _useState12[1];\n\n  var reminderList = [{\n    id: '1D',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr')\n  }, {\n    id: '2D',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr')\n  }, {\n    id: '3D',\n    name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr')\n  }, {\n    id: '4D',\n    name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr')\n  }, {\n    id: '1W',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr')\n  }, {\n    id: '2W',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr')\n  }, {\n    id: 'NA',\n    name: utils.string.t('claims.processing.taskReminderLabels.noReminder')\n  }];\n  var claimRef = (claim === null || claim === void 0 ? void 0 : claim.claimRef) || (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.processRef);\n\n  var _useState13 = useState(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.status),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskStatus = _useState14[0],\n      setTaskStatus = _useState14[1];\n\n  var taskStatusOptions = constants.TASK_STATUS;\n\n  var getAssigneeFromList = function getAssigneeFromList(searchedEmail) {\n    if (searchedEmail && assignedToUsers) {\n      var userData = assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (user) {\n        return searchedEmail.toLowerCase() === user.email.toLowerCase();\n      });\n      return userData || null;\n    }\n\n    return '';\n  };\n\n  var fields = [{\n    name: 'taskName',\n    type: 'text',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    value: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskType) || '',\n    muiComponentProps: {\n      disabled: taskDetails !== null\n    }\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: utils.generic.isValidArray(priorities, true) ? priorities : [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().required(utils.string.t('validation.required')).nullable(),\n    defaultValue: priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref2) {\n      var description = _ref2.description,\n          id = _ref2.id;\n      return description === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.priority) || id === constants.PRIORITIES_ID[1];\n    })\n  }, {\n    name: 'status',\n    type: 'autocompletemui',\n    options: taskStatusOptions,\n    optionKey: 'id',\n    optionLabel: 'status',\n    muiComponentProps: {\n      disabled: constants.TASK_TYPES_NATIVE === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskCategory) || taskDetails === null\n    },\n    defaultValue: taskStatusOptions === null || taskStatusOptions === void 0 ? void 0 : taskStatusOptions.find(function (_ref3) {\n      var status = _ref3.status;\n      return status === taskStatus;\n    })\n  }, {\n    name: 'assignedTo',\n    type: 'autocompletemui',\n    options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    validation: !taskDetails && Yup.object().required(utils.string.t('validation.required')).nullable(),\n    defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.assignee) : null,\n    muiComponentProps: {\n      disabled: taskDetails !== null\n    }\n  }, {\n    name: 'addtlAssignee',\n    type: 'autocompletemui',\n    options: [{\n      id: -1,\n      fullName: '',\n      email: ''\n    }].concat(_toConsumableArray(utils.generic.isValidArray(additionalAssigneeList) ? additionalAssigneeList : [])),\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.additionalAssignee) : null,\n    muiComponentProps: {\n      disabled: taskDetails !== null\n    }\n  }, {\n    name: 'reminder',\n    type: 'autocompletemui',\n    options: (reminderList === null || reminderList === void 0 ? void 0 : reminderList.length) ? reminderList : [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    defaultValue: utils.generic.isValidObject(taskDetails) && (reminderList === null || reminderList === void 0 ? void 0 : reminderList.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.id) === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.reminder);\n    }))\n  }, {\n    type: 'datepicker',\n    name: 'targetDueDate',\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().test('from', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\n      var createdDate = new moment();\n      return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\n    }),\n    outputFormat: 'iso',\n    value: moment(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.targetDueDate) || ''\n  }, {\n    name: 'description',\n    type: 'textarea',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 350\n      },\n      multiline: true,\n      rows: 5,\n      rowsMax: 5,\n      'data-testid': 'details'\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    value: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.description) || ''\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var assignedToField = watch('assignedTo');\n  var taskStatusChanged = watch('status');\n\n  var createEligibleList = function createEligibleList(allList, existingAssignees) {\n    if (utils.generic.isValidArray(existingAssignees, true)) {\n      return allList.filter(function (_ref4) {\n        var email = _ref4.email;\n        return existingAssignees.indexOf(email.toLowerCase()) === -1;\n      });\n    } else {\n      return allList;\n    }\n  };\n\n  useEffect(function () {\n    if (assignedToField) {\n      var _assignedToField$emai;\n\n      var existingAssignees = taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.assignee.toLowerCase();\n      setAdditionalAssigneeList(createEligibleList(assignedToUsers, [].concat(_toConsumableArray(existingAssignees ? existingAssignees : []), [assignedToField === null || assignedToField === void 0 ? void 0 : (_assignedToField$emai = assignedToField.email) === null || _assignedToField$emai === void 0 ? void 0 : _assignedToField$emai.toLowerCase()])));\n      setAdditionalResetKey(new Date().getTime());\n    }\n\n    isEditFlag && setResetKey(new Date().getTime());\n  }, [assignedToUsers, assignedToField]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (taskStatusChanged) {\n      setTaskStatus(taskStatusChanged.status);\n    }\n  }, [taskStatusChanged]);\n\n  var handleCreateAdhocCancel = function handleCreateAdhocCancel() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'default'\n          },\n          submitHandler: function submitHandler() {\n            cancelHandler();\n          },\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var handleAdHocTaskSubmit = function handleAdHocTaskSubmit(values) {\n    var _values$addtlAssignee, _values$assignedTo, _values$priority, _values$reminder;\n\n    var adHocData = {\n      additionalAssignee: values === null || values === void 0 ? void 0 : (_values$addtlAssignee = values.addtlAssignee) === null || _values$addtlAssignee === void 0 ? void 0 : _values$addtlAssignee.email,\n      assignedTo: values === null || values === void 0 ? void 0 : (_values$assignedTo = values.assignedTo) === null || _values$assignedTo === void 0 ? void 0 : _values$assignedTo.email,\n      bpmProcessId: claim.processID,\n      claimRef: values.claimRef,\n      description: values.description,\n      followUpdate: null,\n      priority: values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id,\n      reminder: (_values$reminder = values.reminder) === null || _values$reminder === void 0 ? void 0 : _values$reminder.id,\n      requestedBy: null,\n      targetDueDate: values.targetDueDate,\n      taskName: values.taskName\n    };\n\n    if (taskDetails !== null) {\n      var _values$priority2, _values$reminder2;\n\n      var editAdHocData = {\n        taskId: taskDetails.taskId,\n        bpmProcessId: claim.rootProcessId,\n        priority: values === null || values === void 0 ? void 0 : (_values$priority2 = values.priority) === null || _values$priority2 === void 0 ? void 0 : _values$priority2.id,\n        reminder: (_values$reminder2 = values.reminder) === null || _values$reminder2 === void 0 ? void 0 : _values$reminder2.id,\n        targetDueDate: values.targetDueDate,\n        description: values.description,\n        status: taskStatus,\n        followUpDate: null\n      };\n      dispatch(postEditAdHocTask(editAdHocData, taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskId)).then(function () {\n        return utils.generic.isFunction(submitHandler) && submitHandler();\n      });\n    } else {\n      dispatch(postSaveAdHocTask(adHocData)).then(function (createdAdHocTaskData) {\n        var _createdAdHocTaskData, _createdAdHocTaskData2;\n\n        setIsTaskSubmitted(true);\n        setAdHocTaskData({\n          taskId: createdAdHocTaskData === null || createdAdHocTaskData === void 0 ? void 0 : (_createdAdHocTaskData = createdAdHocTaskData.data) === null || _createdAdHocTaskData === void 0 ? void 0 : _createdAdHocTaskData.id\n        });\n        dispatch(setDmsTaskContextType({\n          type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC,\n          refId: createdAdHocTaskData === null || createdAdHocTaskData === void 0 ? void 0 : (_createdAdHocTaskData2 = createdAdHocTaskData.data) === null || _createdAdHocTaskData2 === void 0 ? void 0 : _createdAdHocTaskData2.id\n        }));\n      });\n    }\n  };\n\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      handleCreateAdhocCancel();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: function handler(values) {\n      handleAdHocTaskSubmit(values);\n    }\n  }];\n  var docsPromptActions = {\n    no: {\n      label: utils.string.t('app.no'),\n      handler: function handler() {\n        setIsUploadDocuments(false);\n        dispatch(hideModal());\n      }\n    },\n    yes: {\n      label: utils.string.t('app.yes'),\n      handler: function handler() {\n        setIsUploadDocuments(true);\n      }\n    }\n  };\n  useEffect(function () {\n    dispatch(setDmsTaskContextType({\n      type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC\n    }));\n    dispatch(getPriorityLevels());\n    dispatch(resetClaimsAssignedToUsers());\n    dispatch(getUsersByOrg(claim === null || claim === void 0 ? void 0 : claim.team, [claim], 'createAdHocTask'));\n    setResetKey(new Date().getTime());\n    return function () {\n      dispatch(resetDmsTaskTypeContext());\n      dispatch(getClaimRefTasks({\n        requestType: constants.CLAIM_PROCESSING_REQ_TYPES.search\n      }));\n      dispatch(getClaimRefTasks({\n        requestType: constants.CLAIM_PROCESSING_REQ_TYPES.filter\n      }));\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (utils.generic.isInvalidOrEmptyArray(priorities)) return null;\n  return /*#__PURE__*/_jsxDEV(CreateAdHocTaskView, {\n    claimRef: claimRef,\n    taskDetails: taskDetails,\n    actions: actions,\n    fields: fields,\n    control: control,\n    errors: errors,\n    setValue: setValue,\n    handleSubmit: handleSubmit,\n    formState: formState,\n    reset: reset,\n    resetKey: resetKey,\n    additionalResetKey: additionalResetKey,\n    isEditFlag: isEditFlag,\n    adHocTaskData: adHocTaskData,\n    isTaskSubmitted: isTaskSubmitted,\n    docsPromptActions: docsPromptActions,\n    isUploadDocuments: isUploadDocuments\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 316,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAdHocTask, \"jRkB4z3RH7HvjVn4jNp7lRGAjgQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = CreateAdHocTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdHocTask\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateAdHocTask/CreateAdHocTask.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","moment","useForm","yupResolver","styles","CreateAdHocTaskView","showModal","hideModal","getPriorityLevels","selectPriorities","getUsersByOrg","selectClaimsAssignedToUsers","postSaveAdHocTask","postEditAdHocTask","resetClaimsAssignedToUsers","setDmsTaskContextType","resetDmsTaskTypeContext","getClaimRefTasks","utils","constants","makeStyles","CreateAdHocTask","propTypes","claim","object","cancelHandler","func","submitHandler","classes","name","dispatch","resetKey","setResetKey","additionalResetKey","setAdditionalResetKey","priorities","selectAssignees","assignedToUsers","items","taskDetails","taskRef","isEditFlag","generic","isValidObject","isTaskSubmitted","setIsTaskSubmitted","isUploadDocuments","setIsUploadDocuments","adHocTaskData","setAdHocTaskData","additionalAssigneeList","setAdditionalAssigneeList","reminderList","id","string","t","claimRef","processRef","status","taskStatus","setTaskStatus","taskStatusOptions","TASK_STATUS","getAssigneeFromList","searchedEmail","userData","find","user","toLowerCase","email","fields","type","validation","required","value","taskType","muiComponentProps","disabled","options","isValidArray","optionKey","optionLabel","nullable","defaultValue","description","priority","PRIORITIES_ID","TASK_TYPES_NATIVE","taskCategory","assignee","fullName","additionalAssignee","length","item","reminder","icon","fullWidth","root","datepicker","date","test","createdDate","isSameOrAfter","outputFormat","targetDueDate","inputProps","maxLength","multiline","rows","rowsMax","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","watch","setValue","assignedToField","taskStatusChanged","createEligibleList","allList","existingAssignees","filter","indexOf","Date","getTime","handleCreateAdhocCancel","component","props","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","handleClose","handleAdHocTaskSubmit","values","adHocData","addtlAssignee","assignedTo","bpmProcessId","processID","followUpdate","requestedBy","taskName","editAdHocData","taskId","rootProcessId","followUpDate","then","isFunction","createdAdHocTaskData","data","DMS_TASK_CONTEXT_TYPE_ADHOC","refId","actions","label","handler","docsPromptActions","no","yes","team","requestType","CLAIM_PROCESSING_REQ_TYPES","search","isInvalidOrEmptyArray"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport styles from './CreateAdHocTask.styles';\r\nimport { CreateAdHocTaskView } from './CreateAdHocTask.view';\r\nimport {\r\n  showModal,\r\n  hideModal,\r\n  getPriorityLevels,\r\n  selectPriorities,\r\n  getUsersByOrg,\r\n  selectClaimsAssignedToUsers,\r\n  postSaveAdHocTask,\r\n  postEditAdHocTask,\r\n  resetClaimsAssignedToUsers,\r\n  setDmsTaskContextType,\r\n  resetDmsTaskTypeContext,\r\n  getClaimRefTasks,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nCreateAdHocTask.propTypes = {\r\n  claim: PropTypes.object,\r\n  cancelHandler: PropTypes.func,\r\n  submitHandler: PropTypes.func,\r\n};\r\n\r\nexport default function CreateAdHocTask({ claim, cancelHandler, submitHandler }) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdHocTask' })();\r\n  const dispatch = useDispatch();\r\n  const [resetKey, setResetKey] = useState();\r\n  const [additionalResetKey, setAdditionalResetKey] = useState();\r\n\r\n  // Redux\r\n  const priorities = useSelector(selectPriorities);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const assignedToUsers = selectAssignees?.items;\r\n  const taskDetails = claim?.taskRef ? { ...claim } : null;\r\n  const isEditFlag = utils.generic.isValidObject(taskDetails);\r\n  const [isTaskSubmitted, setIsTaskSubmitted] = useState(false);\r\n  const [isUploadDocuments, setIsUploadDocuments] = useState(false);\r\n  const [adHocTaskData, setAdHocTaskData] = useState({});\r\n\r\n  // State\r\n  const [additionalAssigneeList, setAdditionalAssigneeList] = useState(assignedToUsers);\r\n  const reminderList = [\r\n    { id: '1D', name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr') },\r\n    { id: '2D', name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr') },\r\n    { id: '3D', name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr') },\r\n    { id: '4D', name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr') },\r\n    { id: '1W', name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr') },\r\n    { id: '2W', name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr') },\r\n    { id: 'NA', name: utils.string.t('claims.processing.taskReminderLabels.noReminder') },\r\n  ];\r\n  const claimRef = claim?.claimRef || taskDetails?.processRef;\r\n  const [taskStatus, setTaskStatus] = useState(taskDetails?.status);\r\n  const taskStatusOptions = constants.TASK_STATUS;\r\n\r\n  const getAssigneeFromList = (searchedEmail) => {\r\n    if (searchedEmail && assignedToUsers) {\r\n      let userData = assignedToUsers?.find((user) => searchedEmail.toLowerCase() === user.email.toLowerCase());\r\n      return userData || null;\r\n    }\r\n    return '';\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'taskName',\r\n      type: 'text',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      value: taskDetails?.taskType || '',\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n      },\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: utils.generic.isValidArray(priorities, true) ? priorities : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().required(utils.string.t('validation.required')).nullable(),\r\n      defaultValue: priorities?.find(({ description, id }) => description === taskDetails?.priority || id === constants.PRIORITIES_ID[1]),\r\n    },\r\n    {\r\n      name: 'status',\r\n      type: 'autocompletemui',\r\n      options: taskStatusOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'status',\r\n      muiComponentProps: {\r\n        disabled: constants.TASK_TYPES_NATIVE === taskDetails?.taskCategory || taskDetails === null ,\r\n      },\r\n      defaultValue: taskStatusOptions?.find(({ status }) => status === taskStatus ),\r\n    },\r\n    {\r\n      name: 'assignedTo',\r\n      type: 'autocompletemui',\r\n      options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      validation: !taskDetails && Yup.object().required(utils.string.t('validation.required')).nullable(),\r\n      defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.assignee) : null,\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n      },\r\n    },\r\n    {\r\n      name: 'addtlAssignee',\r\n      type: 'autocompletemui',\r\n      options: [{ id: -1, fullName: '', email: '' }, ...(utils.generic.isValidArray(additionalAssigneeList) ? additionalAssigneeList : [])],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.additionalAssignee) : null,\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n      },\r\n    },\r\n    {\r\n      name: 'reminder',\r\n      type: 'autocompletemui',\r\n      options: reminderList?.length ? reminderList : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      defaultValue: utils.generic.isValidObject(taskDetails) && reminderList?.find((item) => item?.id === taskDetails?.reminder),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'targetDueDate',\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .test('from', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\r\n          const createdDate = new moment();\r\n          return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\r\n        }),\r\n      outputFormat: 'iso',\r\n      value: moment(taskDetails?.targetDueDate) || '',\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 350 },\r\n        multiline: true,\r\n        rows: 5,\r\n        rowsMax: 5,\r\n        'data-testid': 'details',\r\n      },\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      value: taskDetails?.description || '',\r\n    },\r\n  ];\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, reset, errors, handleSubmit, formState, watch, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const assignedToField = watch('assignedTo');\r\n  const taskStatusChanged = watch('status');\r\n  \r\n\r\n  const createEligibleList = (allList, existingAssignees) => {\r\n    if (utils.generic.isValidArray(existingAssignees, true)) {\r\n      return allList.filter(({ email }) => existingAssignees.indexOf(email.toLowerCase()) === -1);\r\n    } else {\r\n      return allList;\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (assignedToField) {\r\n      const existingAssignees = taskDetails?.assignee.toLowerCase();\r\n      setAdditionalAssigneeList(\r\n        createEligibleList(assignedToUsers, [...(existingAssignees ? existingAssignees : []), assignedToField?.email?.toLowerCase()])\r\n      );\r\n      setAdditionalResetKey(new Date().getTime());\r\n    }\r\n    isEditFlag && setResetKey(new Date().getTime());\r\n  }, [assignedToUsers, assignedToField]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(()=>{\r\n    if(taskStatusChanged){\r\n      setTaskStatus(taskStatusChanged.status);\r\n    }\r\n  },[taskStatusChanged])\r\n  \r\n  const handleCreateAdhocCancel = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'default' },\r\n            submitHandler: () => {\r\n              cancelHandler();\r\n            },\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAdHocTaskSubmit = (values) => {\r\n    const adHocData = {\r\n      additionalAssignee: values?.addtlAssignee?.email,\r\n      assignedTo: values?.assignedTo?.email,\r\n      bpmProcessId: claim.processID,\r\n      claimRef: values.claimRef,\r\n      description: values.description,\r\n      followUpdate: null,\r\n      priority: values?.priority?.id,\r\n      reminder: values.reminder?.id,\r\n      requestedBy: null,\r\n      targetDueDate: values.targetDueDate,\r\n      taskName: values.taskName,\r\n    };\r\n    if (taskDetails !== null) {\r\n      const editAdHocData = {\r\n        taskId: taskDetails.taskId,\r\n        bpmProcessId: claim.rootProcessId,\r\n        priority: values?.priority?.id,\r\n        reminder: values.reminder?.id,\r\n        targetDueDate: values.targetDueDate,\r\n        description: values.description,\r\n        status: taskStatus,\r\n        followUpDate: null,\r\n      };\r\n      dispatch(postEditAdHocTask(editAdHocData, taskDetails?.taskId)).then(\r\n        () => utils.generic.isFunction(submitHandler) && submitHandler()\r\n      );\r\n    } else {\r\n      dispatch(postSaveAdHocTask(adHocData)).then((createdAdHocTaskData) => {\r\n        setIsTaskSubmitted(true);\r\n        setAdHocTaskData({ taskId: createdAdHocTaskData?.data?.id });\r\n        dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC, refId: createdAdHocTaskData?.data?.id }));\r\n      });\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        handleCreateAdhocCancel();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: (values) => {\r\n        handleAdHocTaskSubmit(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const docsPromptActions = {\r\n    no: {\r\n      label: utils.string.t('app.no'),\r\n      handler: () => {\r\n        setIsUploadDocuments(false);\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n    yes: {\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => {\r\n        setIsUploadDocuments(true);\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC }));\r\n    dispatch(getPriorityLevels());\r\n    dispatch(resetClaimsAssignedToUsers());\r\n    dispatch(getUsersByOrg(claim?.team, [claim], 'createAdHocTask'));\r\n    setResetKey(new Date().getTime());\r\n\r\n    return () => {\r\n      dispatch(resetDmsTaskTypeContext());\r\n      dispatch(getClaimRefTasks({ requestType: constants.CLAIM_PROCESSING_REQ_TYPES.search }));\r\n      dispatch(getClaimRefTasks({ requestType: constants.CLAIM_PROCESSING_REQ_TYPES.filter }));\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (utils.generic.isInvalidOrEmptyArray(priorities)) return null;\r\n\r\n  return (\r\n    <CreateAdHocTaskView\r\n      claimRef={claimRef}\r\n      taskDetails={taskDetails}\r\n      actions={actions}\r\n      fields={fields}\r\n      control={control}\r\n      errors={errors}\r\n      setValue={setValue}\r\n      handleSubmit={handleSubmit}\r\n      formState={formState}\r\n      reset={reset}\r\n      resetKey={resetKey}\r\n      additionalResetKey={additionalResetKey}\r\n      isEditFlag={isEditFlag}\r\n      adHocTaskData={adHocTaskData}\r\n      isTaskSubmitted={isTaskSubmitted}\r\n      docsPromptActions={docsPromptActions}\r\n      isUploadDocuments={isUploadDocuments}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}