{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClientSelection\\\\ClientSelection.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport kebabCase from 'lodash/kebabCase';\nimport get from 'lodash/get'; // app\n\nimport { ClientSelectionView } from './ClientSelection.view';\nimport { getParentList } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClientSelection.propTypes = {\n  nestedClasses: PropTypes.object\n};\nClientSelection.defaultProps = {\n  size: 'md'\n};\nexport default function ClientSelection(_ref) {\n  _s();\n\n  var size = _ref.size,\n      nestedClasses = _ref.nestedClasses;\n\n  var _useState = useState(new Date().getTime()),\n      _useState2 = _slicedToArray(_useState, 2),\n      uuid = _useState2[0],\n      setUuid = _useState2[1];\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var parentList = useSelector(function (state) {\n    return get(state, 'parent.list');\n  }) || [];\n  useEffect(function () {\n    if (!parentList || !parentList.length > 0) {\n      dispatch(getParentList());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var fields = [{\n    name: 'client',\n    type: 'autocomplete',\n    value: [],\n    defaultValue: [],\n    placeholder: utils.string.t('app.client'),\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      'data-testid': 'client-dropdown'\n    },\n    options: parentList || [],\n    innerComponentProps: {\n      isClearable: false,\n      blurInputOnSelect: true,\n      customStyles: {\n        size: size\n      },\n      noOptionsFoundMessage: utils.string.t('client.clientNotFound')\n    },\n    callback: function callback(values) {\n      var value = values && get(values, '[0]');\n      var officeId = value && value.id;\n      var officeSlug = value && value.name ? \"/\".concat(kebabCase(value.name)) : '';\n\n      if (officeId) {\n        setUuid(new Date().getTime());\n        history.push(\"\".concat(config.routes.client.item, \"/\").concat(officeId).concat(officeSlug));\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(ClientSelectionView, {\n    fields: fields,\n    nestedClasses: nestedClasses\n  }, uuid, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ClientSelection, \"w+07YkhV84NtvFxTj5lWVUuevUQ=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = ClientSelection;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClientSelection\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClientSelection/ClientSelection.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","useHistory","kebabCase","get","ClientSelectionView","getParentList","utils","config","ClientSelection","propTypes","nestedClasses","object","defaultProps","size","Date","getTime","uuid","setUuid","dispatch","history","parentList","state","length","fields","name","type","value","defaultValue","placeholder","string","t","optionKey","optionLabel","muiComponentProps","options","innerComponentProps","isClearable","blurInputOnSelect","customStyles","noOptionsFoundMessage","callback","values","officeId","id","officeSlug","push","routes","client","item"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { ClientSelectionView } from './ClientSelection.view';\r\nimport { getParentList } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nClientSelection.propTypes = {\r\n  nestedClasses: PropTypes.object,\r\n};\r\n\r\nClientSelection.defaultProps = {\r\n  size: 'md',\r\n};\r\n\r\nexport default function ClientSelection({ size, nestedClasses }) {\r\n  const [uuid, setUuid] = useState(new Date().getTime());\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const parentList = useSelector((state) => get(state, 'parent.list')) || [];\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!parentList || !parentList.length > 0) {\r\n        dispatch(getParentList());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const fields = [\r\n    {\r\n      name: 'client',\r\n      type: 'autocomplete',\r\n      value: [],\r\n      defaultValue: [],\r\n      placeholder: utils.string.t('app.client'),\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        'data-testid': 'client-dropdown',\r\n      },\r\n      options: parentList || [],\r\n      innerComponentProps: {\r\n        isClearable: false,\r\n        blurInputOnSelect: true,\r\n        customStyles: {\r\n          size,\r\n        },\r\n        noOptionsFoundMessage: utils.string.t('client.clientNotFound'),\r\n      },\r\n      callback: (values) => {\r\n        const value = values && get(values, '[0]');\r\n        const officeId = value && value.id;\r\n        const officeSlug = value && value.name ? `/${kebabCase(value.name)}` : '';\r\n\r\n        if (officeId) {\r\n          setUuid(new Date().getTime());\r\n          history.push(`${config.routes.client.item}/${officeId}${officeSlug}`);\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <ClientSelectionView key={uuid} fields={fields} nestedClasses={nestedClasses} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}