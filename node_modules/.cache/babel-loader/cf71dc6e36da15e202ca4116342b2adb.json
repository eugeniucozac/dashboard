{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormSwitch\\\\FormSwitch.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { FormSwitch } from 'components';\nimport { withKnobs, boolean as _boolean, text, select } from '@storybook/addon-knobs';\nimport * as utils from 'utils';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Form',\n  decorators: [withKnobs]\n};\nexport var Switch = function Switch() {\n  _s();\n\n  var type = select('Type', ['single', 'multiple'], 'single');\n  var isSingle = type === 'single';\n  var isMultiple = type === 'multiple'; // prettier-ignore\n\n  var field = {\n    name: 'fieldSwitch',\n    type: 'switch',\n    options: [{\n      label: 'yes',\n      value: 'yes'\n    }, {\n      label: 'no',\n      value: 'no'\n    }, {\n      label: 'maybe (disabled)',\n      value: 'maybe',\n      disabled: true\n    }, {\n      label: 'sometimes',\n      value: 'sometimes'\n    }, {\n      label: 'always',\n      value: 'always'\n    }, {\n      label: 'never',\n      value: 'never'\n    }],\n    muiComponentProps: {\n      onChange: function onChange(name, value) {\n        console.log('[Single Value]', name, value);\n      }\n    }\n  };\n  var defaultValues = utils.form.getInitialValues([field]);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset;\n\n  var onChangeTrigger = function onChangeTrigger(e, name, value) {};\n\n  useEffect(function () {\n    reset(defaultValues);\n  }, [type] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var color = select('Color', ['primary', 'secondary'], 'primary');\n  var label = text('Label', 'Switch Field');\n  var hint = text('Hint', 'Toggle a few options...');\n  var error = _boolean('Error', false) ? {\n    message: 'Dummy error',\n    type: 'required'\n  } : undefined;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: [isSingle && /*#__PURE__*/_jsxDEV(FormSwitch, {\n      control: control,\n      register: register,\n      watch: watch,\n      name: field.name,\n      type: field.type,\n      title: label,\n      hint: hint,\n      error: error,\n      color: color,\n      value: false,\n      label: \"yes\",\n      muiComponentProps: {\n        onChange: function onChange(name, value) {\n          console.log('[SWITCH value]', name, value);\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 9\n    }, _this), isMultiple && /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread(_objectSpread({\n      control: control,\n      register: register,\n      watch: watch\n    }, field), {}, {\n      title: label,\n      hint: hint,\n      error: error,\n      color: color\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Switch, \"7QQ7F1AP+Ypt6h4ojFg70sz2yAw=\", false, function () {\n  return [useForm];\n});\n\nSwitch.displayName = \"Switch\";\n_c = Switch;\nSwitch.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Switch\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormSwitch\\\\FormSwitch.stories.js\"] = {\n    name: \"Switch\",\n    docgenInfo: Switch.__docgenInfo,\n    path: \"src\\\\components\\\\FormSwitch\\\\FormSwitch.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Switch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormSwitch/FormSwitch.stories.js"],"names":["React","useEffect","FormSwitch","withKnobs","boolean","text","select","utils","useForm","Box","title","decorators","Switch","type","isSingle","isMultiple","field","name","options","label","value","disabled","muiComponentProps","onChange","console","log","defaultValues","form","getInitialValues","control","register","watch","reset","onChangeTrigger","e","color","hint","error","message","undefined"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { FormSwitch } from 'components';\r\nimport { withKnobs, boolean, text, select } from '@storybook/addon-knobs';\r\nimport * as utils from 'utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'Form',\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Switch = () => {\r\n  const type = select('Type', ['single', 'multiple'], 'single');\r\n  const isSingle = type === 'single';\r\n  const isMultiple = type === 'multiple';\r\n\r\n  // prettier-ignore\r\n  const field = {\r\n    name: 'fieldSwitch',\r\n    type: 'switch',\r\n    options: [\r\n      { label: 'yes', value: 'yes' },\r\n      { label: 'no', value: 'no' },\r\n      { label: 'maybe (disabled)', value: 'maybe', disabled: true },\r\n      { label: 'sometimes', value: 'sometimes' },\r\n      { label: 'always', value: 'always' },\r\n      { label: 'never', value: 'never' },\r\n    ],\r\n    muiComponentProps: {\r\n      onChange: (name, value) => {\r\n        console.log('[Single Value]', name, value);\r\n      },\r\n    },\r\n  };\r\n\r\n  const defaultValues = utils.form.getInitialValues([field]);\r\n  const { control, register, watch, reset } = useForm({ defaultValues });\r\n  const onChangeTrigger = (e, name, value) => {};\r\n  useEffect(\r\n    () => {\r\n      reset(defaultValues);\r\n    },\r\n    [type] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const color = select('Color', ['primary', 'secondary'], 'primary');\r\n  const label = text('Label', 'Switch Field');\r\n  const hint = text('Hint', 'Toggle a few options...');\r\n  const error = boolean('Error', false) ? { message: 'Dummy error', type: 'required' } : undefined;\r\n\r\n  return (\r\n    <Box width={1}>\r\n      {isSingle && (\r\n        <FormSwitch\r\n          control={control}\r\n          register={register}\r\n          watch={watch}\r\n          name={field.name}\r\n          type={field.type}\r\n          title={label}\r\n          hint={hint}\r\n          error={error}\r\n          color={color}\r\n          value={false}\r\n          label=\"yes\"\r\n          muiComponentProps={{\r\n            onChange: (name, value) => {\r\n              console.log('[SWITCH value]', name, value);\r\n            },\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {isMultiple && (\r\n        <FormSwitch control={control} register={register} watch={watch} {...field} title={label} hint={hint} error={error} color={color} />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}