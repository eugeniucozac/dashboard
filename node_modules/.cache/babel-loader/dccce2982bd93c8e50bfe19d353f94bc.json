{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceComposeMail.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport * as Yup from 'yup';\nimport isEmpty from 'lodash/isEmpty'; //app\n\nimport styles from './EmailManagementService.styles';\nimport EmailManagementServiceComposeMailView from './EmailManagementServiceComposeMail.view';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { MultiSelect } from 'components'; //mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEmailManagementServiceComposeMail.propTypes = {\n  emsExistingDocuments: PropTypes.array.isRequired,\n  forwardAttachments: PropTypes.array.isRequired,\n  forwardMessage: PropTypes.string.isRequired,\n  forwardSubject: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    sendEmail: PropTypes.func\n  }).isRequired,\n  caseDetailsObject: PropTypes.object,\n  accountDetails: PropTypes.object\n};\n\nfunction EmailManagementServiceComposeMail(_ref) {\n  _s();\n\n  var emsExistingDocuments = _ref.emsExistingDocuments,\n      forwardAttachments = _ref.forwardAttachments,\n      forwardSubject = _ref.forwardSubject,\n      forwardMessage = _ref.forwardMessage,\n      handlers = _ref.handlers,\n      caseDetailsObject = _ref.caseDetailsObject,\n      accountDetails = _ref.accountDetails;\n  var classes = makeStyles(styles, {\n    name: 'EmailManagementService'\n  })();\n  var docList = emsExistingDocuments === null || emsExistingDocuments === void 0 ? void 0 : emsExistingDocuments.map(function (doc) {\n    return {\n      id: doc === null || doc === void 0 ? void 0 : doc.documentId,\n      name: doc === null || doc === void 0 ? void 0 : doc.documentName\n    };\n  });\n\n  var _useState = useState(utils.generic.isValidArray(forwardAttachments, true) ? forwardAttachments === null || forwardAttachments === void 0 ? void 0 : forwardAttachments.map(function (doc) {\n    return {\n      id: doc === null || doc === void 0 ? void 0 : doc.documentId,\n      name: doc === null || doc === void 0 ? void 0 : doc.documentName\n    };\n  }) : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      attachedMailDocuments = _useState2[0],\n      setAttachedMailDocuments = _useState2[1];\n\n  var yupString = Yup.string();\n  var fields = [{\n    type: 'file',\n    name: 'filesUpload',\n    value: null,\n    showUploadPreview: false,\n    showMaxFilesError: true,\n    dragLabel: utils.string.t('form.dragDrop.dragFileHere'),\n    showButton: false,\n    componentProps: {\n      multiple: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOW_MULTIPLE,\n      maxFiles: constants.PROCESSING_INSTRUCTION_DETAILS_FILE_UPLOAD_MAX_FILES,\n      maxSize: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_MAX_FILE_SIZE,\n      accept: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOWED_FILE_EXT\n    }\n  }, {\n    name: 'emailTo',\n    type: 'text',\n    value: (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.frontEndSendDocs) && (accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.documentSentType) === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') && !(accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.sendDate) && (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.fecEmail) || '',\n    variant: 'standard',\n    validation: yupString.required(utils.string.t('validation.required')).test({\n      name: 'mailTo',\n      test: function test(value) {\n        var mandatoryEmail;\n\n        if ((caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.frontEndSendDocs) && (accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.documentSentType) === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') && !(accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.sendDate) && (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.fecEmail)) {\n          mandatoryEmail = value.split(';').map(function (email) {\n            return email.trim();\n          }).filter(function (v) {\n            return !isEmpty(v);\n          }).find(function (v) {\n            return v === (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.fecEmail);\n          });\n        }\n\n        var firstInvalidEmail = value.split(';').map(function (email) {\n          return email.trim();\n        }).filter(function (v) {\n          return !isEmpty(v);\n        }).find(function (v) {\n          return !yupString.email().isValidSync(v);\n        });\n        return firstInvalidEmail ? this.createError({\n          message: utils.string.t('validation.inValidEmail', {\n            firstInvalidEmail: firstInvalidEmail\n          })\n        }) : (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.frontEndSendDocs) && (accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.documentSentType) === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') && !(accountDetails === null || accountDetails === void 0 ? void 0 : accountDetails.sendDate) && (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.fecEmail) && !mandatoryEmail ? this.createError({\n          message: utils.string.t('validation.mandatoryEmail', {\n            mandatoryEmail: caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.fecEmail\n          })\n        }) : true;\n      }\n    }),\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.input\n      }\n    }\n  }, {\n    name: 'emailCc',\n    type: 'text',\n    value: '',\n    variant: 'standard',\n    validation: yupString.test({\n      name: 'mailCc',\n      test: function test(value) {\n        var firstInvalidEmail = value.split(';').map(function (email) {\n          return email.trim();\n        }).filter(function (v) {\n          return !isEmpty(v);\n        }).find(function (v) {\n          return !yupString.email().isValidSync(v);\n        });\n        return !firstInvalidEmail ? true : this.createError({\n          message: utils.string.t('validation.inValidEmail', {\n            firstInvalidEmail: firstInvalidEmail\n          })\n        });\n      }\n    }),\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.input\n      }\n    }\n  }, {\n    name: 'subject',\n    type: 'text',\n    value: forwardSubject || '',\n    variant: 'standard',\n    validation: yupString.required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.input\n      }\n    }\n  }, {\n    name: 'message',\n    type: 'textarea',\n    value: forwardMessage || '',\n    validation: yupString.required(utils.string.t('validation.required')),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 4000\n      },\n      multiline: true,\n      rows: 6,\n      rowsMax: 6,\n      fullWidth: true,\n      classes: {\n        root: classes.input\n      }\n    }\n  }];\n  var actions = [{\n    name: 'sendMail',\n    handler: function handler(formData) {\n      return handlers.sendEmail(_objectSpread(_objectSpread({}, formData), {}, {\n        attachments: attachedMailDocuments === null || attachedMailDocuments === void 0 ? void 0 : attachedMailDocuments.map(function (doc) {\n          return {\n            documentId: doc === null || doc === void 0 ? void 0 : doc.id,\n            documentName: doc === null || doc === void 0 ? void 0 : doc.name\n          };\n        })\n      }));\n    }\n  }];\n\n  var toggleOption = function toggleOption(controlId, selectedDoc) {\n    setAttachedMailDocuments(function (oldArray) {\n      var isFileAlreadyAdded = oldArray.some(function (o) {\n        return (o === null || o === void 0 ? void 0 : o.id) === (selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id);\n      });\n\n      if (isFileAlreadyAdded) {\n        return oldArray.filter(function (item) {\n          return item.id !== (selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.id);\n        });\n      }\n\n      return [].concat(_toConsumableArray(oldArray), [selectedDoc]);\n    });\n  };\n\n  var attachmentProps = {\n    id: 'attachments',\n    type: 'multiSelect',\n    label: utils.string.t('ems.useExistingFiles'),\n    value: attachedMailDocuments,\n    options: docList || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"attachments\",\n      search: true,\n      options: docList || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 206,\n      columnNumber: 14\n    }, this),\n    handlers: {\n      toggleOption: toggleOption\n    }\n  };\n\n  var removeAttachedDocument = function removeAttachedDocument(selectedDoc) {\n    setAttachedMailDocuments(function (oldArray) {\n      return oldArray.filter(function (item) {\n        return (item === null || item === void 0 ? void 0 : item.id) !== (selectedDoc === null || selectedDoc === void 0 ? void 0 : selectedDoc.value);\n      });\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(EmailManagementServiceComposeMailView, {\n    actions: actions,\n    attachedMailDocuments: attachedMailDocuments,\n    attachmentProps: attachmentProps,\n    fields: fields,\n    handlers: {\n      removeAttachedDocument: removeAttachedDocument\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 215,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EmailManagementServiceComposeMail, \"R8Y2iMsLMYhfcgnTOGek27JZwC0=\");\n\n_c = EmailManagementServiceComposeMail;\nEmailManagementServiceComposeMail.displayName = \"EmailManagementServiceComposeMail\";\nEmailManagementServiceComposeMail.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EmailManagementServiceComposeMail\",\n  \"props\": {\n    \"emsExistingDocuments\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"forwardAttachments\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"forwardMessage\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"forwardSubject\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"sendEmail\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"caseDetailsObject\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"accountDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default EmailManagementServiceComposeMail;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceComposeMail.js\"] = {\n    name: \"EmailManagementServiceComposeMail\",\n    docgenInfo: EmailManagementServiceComposeMail.__docgenInfo,\n    path: \"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceComposeMail.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailManagementServiceComposeMail\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/EmailManagementService/EmailManagementServiceComposeMail.js"],"names":["React","useState","PropTypes","Yup","isEmpty","styles","EmailManagementServiceComposeMailView","constants","utils","MultiSelect","makeStyles","EmailManagementServiceComposeMail","propTypes","emsExistingDocuments","array","isRequired","forwardAttachments","forwardMessage","string","forwardSubject","handlers","shape","sendEmail","func","caseDetailsObject","object","accountDetails","classes","name","docList","map","doc","id","documentId","documentName","generic","isValidArray","attachedMailDocuments","setAttachedMailDocuments","yupString","fields","type","value","showUploadPreview","showMaxFilesError","dragLabel","t","showButton","componentProps","multiple","PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOW_MULTIPLE","maxFiles","PROCESSING_INSTRUCTION_DETAILS_FILE_UPLOAD_MAX_FILES","maxSize","PROCESSING_INSTRUCTION_FILE_UPLOAD_MAX_FILE_SIZE","accept","PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOWED_FILE_EXT","frontEndSendDocs","documentSentType","sendDate","fecEmail","variant","validation","required","test","mandatoryEmail","split","email","trim","filter","v","find","firstInvalidEmail","isValidSync","createError","message","muiComponentProps","fullWidth","root","input","inputProps","maxLength","multiline","rows","rowsMax","actions","handler","formData","attachments","toggleOption","controlId","selectedDoc","oldArray","isFileAlreadyAdded","some","o","item","attachmentProps","label","options","content","removeAttachedDocument"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport * as Yup from 'yup';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n//app\r\nimport styles from './EmailManagementService.styles';\r\nimport EmailManagementServiceComposeMailView from './EmailManagementServiceComposeMail.view';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport { MultiSelect } from 'components';\r\n\r\n//mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nEmailManagementServiceComposeMail.propTypes = {\r\n  emsExistingDocuments: PropTypes.array.isRequired,\r\n  forwardAttachments: PropTypes.array.isRequired,\r\n  forwardMessage: PropTypes.string.isRequired,\r\n  forwardSubject: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    sendEmail: PropTypes.func,\r\n  }).isRequired,\r\n  caseDetailsObject: PropTypes.object,\r\n  accountDetails: PropTypes.object,\r\n};\r\n\r\nfunction EmailManagementServiceComposeMail({\r\n  emsExistingDocuments,\r\n  forwardAttachments,\r\n  forwardSubject,\r\n  forwardMessage,\r\n  handlers,\r\n  caseDetailsObject,\r\n  accountDetails,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EmailManagementService' })();\r\n\r\n  const docList = emsExistingDocuments?.map((doc) => ({ id: doc?.documentId, name: doc?.documentName }));\r\n\r\n  const [attachedMailDocuments, setAttachedMailDocuments] = useState(\r\n    utils.generic.isValidArray(forwardAttachments, true)\r\n      ? forwardAttachments?.map((doc) => ({ id: doc?.documentId, name: doc?.documentName }))\r\n      : []\r\n  );\r\n\r\n  const yupString = Yup.string();\r\n  const fields = [\r\n    {\r\n      type: 'file',\r\n      name: 'filesUpload',\r\n      value: null,\r\n      showUploadPreview: false,\r\n      showMaxFilesError: true,\r\n      dragLabel: utils.string.t('form.dragDrop.dragFileHere'),\r\n      showButton: false,\r\n      componentProps: {\r\n        multiple: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOW_MULTIPLE,\r\n        maxFiles: constants.PROCESSING_INSTRUCTION_DETAILS_FILE_UPLOAD_MAX_FILES,\r\n        maxSize: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_MAX_FILE_SIZE,\r\n        accept: constants.PROCESSING_INSTRUCTION_FILE_UPLOAD_ALLOWED_FILE_EXT,\r\n      },\r\n    },\r\n    {\r\n      name: 'emailTo',\r\n      type: 'text',\r\n      value:\r\n        (caseDetailsObject?.frontEndSendDocs &&\r\n          accountDetails?.documentSentType === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') &&\r\n          !accountDetails?.sendDate &&\r\n          caseDetailsObject?.fecEmail) ||\r\n        '',\r\n      variant: 'standard',\r\n      validation: yupString.required(utils.string.t('validation.required')).test({\r\n        name: 'mailTo',\r\n        test: function (value) {\r\n          let mandatoryEmail;\r\n          if (\r\n            caseDetailsObject?.frontEndSendDocs &&\r\n            accountDetails?.documentSentType === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') &&\r\n            !accountDetails?.sendDate &&\r\n            caseDetailsObject?.fecEmail\r\n          ) {\r\n            mandatoryEmail = value\r\n              .split(';')\r\n              .map((email) => email.trim())\r\n              .filter((v) => !isEmpty(v))\r\n              .find((v) => v === caseDetailsObject?.fecEmail);\r\n          }\r\n          const firstInvalidEmail = value\r\n            .split(';')\r\n            .map((email) => email.trim())\r\n            .filter((v) => !isEmpty(v))\r\n            .find((v) => !yupString.email().isValidSync(v));\r\n          return firstInvalidEmail\r\n            ? this.createError({\r\n                message: utils.string.t('validation.inValidEmail', { firstInvalidEmail }),\r\n              })\r\n            : caseDetailsObject?.frontEndSendDocs &&\r\n              accountDetails?.documentSentType === utils.string.t('premiumProcessing.processingClientTable.tableColumns.backOfficeToFEC') &&\r\n              !accountDetails?.sendDate &&\r\n              caseDetailsObject?.fecEmail &&\r\n              !mandatoryEmail\r\n            ? this.createError({\r\n                message: utils.string.t('validation.mandatoryEmail', {\r\n                  mandatoryEmail: caseDetailsObject?.fecEmail,\r\n                }),\r\n              })\r\n            : true;\r\n        },\r\n      }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.input,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'emailCc',\r\n      type: 'text',\r\n      value: '',\r\n      variant: 'standard',\r\n      validation: yupString.test({\r\n        name: 'mailCc',\r\n        test: function (value) {\r\n          const firstInvalidEmail = value\r\n            .split(';')\r\n            .map((email) => email.trim())\r\n            .filter((v) => !isEmpty(v))\r\n            .find((v) => !yupString.email().isValidSync(v));\r\n\r\n          return !firstInvalidEmail\r\n            ? true\r\n            : this.createError({\r\n                message: utils.string.t('validation.inValidEmail', { firstInvalidEmail }),\r\n              });\r\n        },\r\n      }),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.input,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'subject',\r\n      type: 'text',\r\n      value: forwardSubject || '',\r\n      variant: 'standard',\r\n      validation: yupString.required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.input,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'message',\r\n      type: 'textarea',\r\n      value: forwardMessage || '',\r\n      validation: yupString.required(utils.string.t('validation.required')),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 4000 },\r\n        multiline: true,\r\n        rows: 6,\r\n        rowsMax: 6,\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.input,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'sendMail',\r\n      handler: (formData) =>\r\n        handlers.sendEmail({\r\n          ...formData,\r\n          attachments: attachedMailDocuments?.map((doc) => ({ documentId: doc?.id, documentName: doc?.name })),\r\n        }),\r\n    },\r\n  ];\r\n\r\n  const toggleOption = (controlId, selectedDoc) => {\r\n    setAttachedMailDocuments((oldArray) => {\r\n      const isFileAlreadyAdded = oldArray.some((o) => o?.id === selectedDoc?.id);\r\n      if (isFileAlreadyAdded) {\r\n        return oldArray.filter((item) => item.id !== selectedDoc?.id);\r\n      }\r\n\r\n      return [...oldArray, selectedDoc];\r\n    });\r\n  };\r\n\r\n  const attachmentProps = {\r\n    id: 'attachments',\r\n    type: 'multiSelect',\r\n    label: utils.string.t('ems.useExistingFiles'),\r\n    value: attachedMailDocuments,\r\n    options: docList || [],\r\n    content: <MultiSelect id=\"attachments\" search options={docList || []} />,\r\n    handlers: { toggleOption },\r\n  };\r\n\r\n  const removeAttachedDocument = (selectedDoc) => {\r\n    setAttachedMailDocuments((oldArray) => oldArray.filter((item) => item?.id !== selectedDoc?.value));\r\n  };\r\n\r\n  return (\r\n    <EmailManagementServiceComposeMailView\r\n      actions={actions}\r\n      attachedMailDocuments={attachedMailDocuments}\r\n      attachmentProps={attachmentProps}\r\n      fields={fields}\r\n      handlers={{ removeAttachedDocument }}\r\n    />\r\n  );\r\n}\r\n\r\nexport default EmailManagementServiceComposeMail;\r\n"]},"metadata":{},"sourceType":"module"}