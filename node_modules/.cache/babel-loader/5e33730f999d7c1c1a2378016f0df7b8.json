{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TasksProcessingTableRow\\\\TasksProcessingTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './TasksProcessingTableRow.styles';\nimport { FormCheckbox, Link, TableCell, PopoverMenu, Status, Translate } from 'components';\nimport * as utils from 'utils';\nimport { TASK_TAB_COMPLETED_STATUS, TASK_TAB_INPROGRESS_STATUS } from 'consts';\nimport config from 'config';\nimport { TASK_TEAM_TYPE } from 'consts'; // mui\n\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTasksProcessingTableRowView.propTypes = {\n  isTaskTeam: PropTypes.bool,\n  caseTaskTypeView: PropTypes.string,\n  task: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  isPremiumProcessing: PropTypes.bool,\n  columnProps: PropTypes.func.isRequired,\n  taskActionItems: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    selectTask: PropTypes.func.isRequired,\n    clickTask: PropTypes.func.isRequired,\n    reAssignTask: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function TasksProcessingTableRowView(_ref) {\n  var _classesRow, _getStatus, _task$assigneeFullNam, _task$assigneeFullNam2, _task$additionalAssig, _task$requestedByFull;\n\n  var caseTaskTypeView = _ref.caseTaskTypeView,\n      isTaskTeam = _ref.isTaskTeam,\n      task = _ref.task,\n      isSelected = _ref.isSelected,\n      columnProps = _ref.columnProps,\n      taskActionItems = _ref.taskActionItems,\n      handlers = _ref.handlers,\n      isPremiumProcessing = _ref.isPremiumProcessing;\n  var classes = makeStyles(styles, {\n    name: 'TasksProcessingTableRow'\n  })();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n\n  var getStatus = function getStatus(task) {\n    var targetDate = new Date(task === null || task === void 0 ? void 0 : task.targetDueDate).getTime();\n    var createdDate = new Date(task === null || task === void 0 ? void 0 : task.createdOn).getTime();\n    var dateNow = new Date().getTime();\n    var targetDDMMYY = utils.string.t('format.date', {\n      value: {\n        date: task === null || task === void 0 ? void 0 : task.targetDueDate,\n        format: config.ui.format.date.slashNumeric\n      }\n    });\n    var dateNowDDMMYY = utils.string.t('format.date', {\n      value: {\n        date: new Date(),\n        format: config.ui.format.date.slashNumeric\n      }\n    });\n\n    if (isPremiumProcessing) {\n      return {\n        type: 'success'\n      };\n    } else {\n      var _task$status, _task$status2, _task$status3;\n\n      if (targetDate > createdDate && (task === null || task === void 0 ? void 0 : (_task$status = task.status) === null || _task$status === void 0 ? void 0 : _task$status.toLowerCase()) === TASK_TAB_COMPLETED_STATUS.toLowerCase()) return {\n        type: 'success'\n      };else if (targetDate >= createdDate && targetDate > dateNow && targetDate !== dateNow && targetDDMMYY !== dateNowDDMMYY && (task === null || task === void 0 ? void 0 : (_task$status2 = task.status) === null || _task$status2 === void 0 ? void 0 : _task$status2.toLowerCase()) === TASK_TAB_INPROGRESS_STATUS.toLowerCase()) return {\n        type: 'success'\n      };else if (targetDate === dateNow || targetDDMMYY === dateNowDDMMYY) {\n        return {\n          type: 'alert'\n        };\n      } else if (targetDate <= dateNow && (task === null || task === void 0 ? void 0 : (_task$status3 = task.status) === null || _task$status3 === void 0 ? void 0 : _task$status3.toLowerCase()) === TASK_TAB_INPROGRESS_STATUS.toLowerCase()) return {\n        type: 'error',\n        dateAlert: true\n      };\n    }\n  };\n\n  var status = getStatus(task);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: handlers.selectTask(task),\n    className: classnames(classesRow),\n    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('id')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(FormCheckbox, {\n          name: \"checkbox-\".concat((task === null || task === void 0 ? void 0 : task.taskId) || (task === null || task === void 0 ? void 0 : task.processId)),\n          type: \"checkbox\",\n          value: isSelected,\n          nestedClasses: {\n            root: classes.checkbox\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        text: task === null || task === void 0 ? void 0 : task.taskRef,\n        color: \"secondary\",\n        onClick: handlers.clickTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdOn')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: task.createdOn,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps(isPremiumProcessing ? 'taskName' : 'taskType')), {}, {\n      children: isPremiumProcessing ? task === null || task === void 0 ? void 0 : task.taskName : task === null || task === void 0 ? void 0 : task.taskType\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n      title: task === null || task === void 0 ? void 0 : task.description,\n      nestedClasses: {\n        root: classes.description\n      },\n      children: task === null || task === void 0 ? void 0 : task.description\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDueDate')), {}, {\n      className: ((_getStatus = getStatus(task)) === null || _getStatus === void 0 ? void 0 : _getStatus.dateAlert) ? classes.dateAlert : '',\n      children: utils.string.t('format.date', {\n        value: {\n          date: task.targetDueDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 102,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('processRef')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.processRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), !isPremiumProcessing && isTaskTeam && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$assigneeFullNam = task.assigneeFullName) === null || _task$assigneeFullNam === void 0 ? void 0 : _task$assigneeFullNam.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 46\n    }, this), isPremiumProcessing && caseTaskTypeView !== 'myTask' && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$assigneeFullNam2 = task.assigneeFullName) === null || _task$assigneeFullNam2 === void 0 ? void 0 : _task$assigneeFullNam2.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 9\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('additionalAssignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$additionalAssig = task.additionalAssigneeFullName) === null || _task$additionalAssig === void 0 ? void 0 : _task$additionalAssig.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n      children: (task === null || task === void 0 ? void 0 : task.status) && /*#__PURE__*/_jsxDEV(Status, {\n        size: \"sm\",\n        text: /*#__PURE__*/_jsxDEV(Translate, {\n          label: task === null || task === void 0 ? void 0 : task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 50\n        }, this),\n        status: status === null || status === void 0 ? void 0 : status.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 113,\n        columnNumber: 26\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('requestedBy')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$requestedByFull = task.requestedByFullName) === null || _task$requestedByFull === void 0 ? void 0 : _task$requestedByFull.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 32\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 116,\n      columnNumber: 32\n    }, this), isPremiumProcessing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('inceptionDate')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.inceptionDate\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 119,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assuredName')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.assuredName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('type')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.type\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('group')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.group\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('departmentName')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.departmentName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('processSubType')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.processSubType\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('xbInstanceId')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.xbInstanceName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isPremiumProcessing && caseTaskTypeView === TASK_TEAM_TYPE.myTeam && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        items: taskActionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 9\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        items: taskActionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 77,\n    columnNumber: 5\n  }, this);\n}\n_c = TasksProcessingTableRowView;\nTasksProcessingTableRowView.displayName = \"TasksProcessingTableRowView\";\nTasksProcessingTableRowView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TasksProcessingTableRowView\",\n  \"props\": {\n    \"isTaskTeam\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"caseTaskTypeView\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"task\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isPremiumProcessing\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"columnProps\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"taskActionItems\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"selectTask\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"clickTask\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"reAssignTask\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TasksProcessingTableRow\\\\TasksProcessingTableRow.view.js\"] = {\n    name: \"TasksProcessingTableRowView\",\n    docgenInfo: TasksProcessingTableRowView.__docgenInfo,\n    path: \"src\\\\modules\\\\TasksProcessingTableRow\\\\TasksProcessingTableRow.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksProcessingTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TasksProcessingTableRow/TasksProcessingTableRow.view.js"],"names":["React","PropTypes","classnames","styles","FormCheckbox","Link","TableCell","PopoverMenu","Status","Translate","utils","TASK_TAB_COMPLETED_STATUS","TASK_TAB_INPROGRESS_STATUS","config","TASK_TEAM_TYPE","makeStyles","Box","TableRow","TasksProcessingTableRowView","propTypes","isTaskTeam","bool","caseTaskTypeView","string","task","object","isRequired","isSelected","isPremiumProcessing","columnProps","func","taskActionItems","array","handlers","shape","selectTask","clickTask","reAssignTask","classes","name","classesRow","row","rowSelected","getStatus","targetDate","Date","targetDueDate","getTime","createdDate","createdOn","dateNow","targetDDMMYY","t","value","date","format","ui","slashNumeric","dateNowDDMMYY","type","status","toLowerCase","dateAlert","taskId","processId","root","checkbox","taskRef","text","taskName","taskType","description","processRef","assigneeFullName","trim","additionalAssigneeFullName","priority","requestedByFullName","team","inceptionDate","assuredName","group","departmentName","processSubType","xbInstanceName","myTeam","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './TasksProcessingTableRow.styles';\r\nimport { FormCheckbox, Link, TableCell, PopoverMenu, Status, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport { TASK_TAB_COMPLETED_STATUS, TASK_TAB_INPROGRESS_STATUS } from 'consts';\r\nimport config from 'config';\r\nimport { TASK_TEAM_TYPE } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\r\n\r\nTasksProcessingTableRowView.propTypes = {\r\n  isTaskTeam: PropTypes.bool,\r\n  caseTaskTypeView: PropTypes.string,\r\n  task: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  isPremiumProcessing: PropTypes.bool,\r\n  columnProps: PropTypes.func.isRequired,\r\n  taskActionItems: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    selectTask: PropTypes.func.isRequired,\r\n    clickTask: PropTypes.func.isRequired,\r\n    reAssignTask: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function TasksProcessingTableRowView({\r\n  caseTaskTypeView,\r\n  isTaskTeam,\r\n  task,\r\n  isSelected,\r\n  columnProps,\r\n  taskActionItems,\r\n  handlers,\r\n  isPremiumProcessing,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'TasksProcessingTableRow' })();\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  const getStatus = (task) => {\r\n    const targetDate = new Date(task?.targetDueDate).getTime();\r\n    const createdDate = new Date(task?.createdOn).getTime();\r\n    const dateNow = new Date().getTime();\r\n    const targetDDMMYY = utils.string.t('format.date', {\r\n      value: { date: task?.targetDueDate, format: config.ui.format.date.slashNumeric },\r\n    });\r\n    const dateNowDDMMYY = utils.string.t('format.date', { value: { date: new Date(), format: config.ui.format.date.slashNumeric } });\r\n    if (isPremiumProcessing) {\r\n      return { type: 'success' };\r\n    } else {\r\n      if (targetDate > createdDate && task?.status?.toLowerCase() === TASK_TAB_COMPLETED_STATUS.toLowerCase()) return { type: 'success' };\r\n      else if (\r\n        targetDate >= createdDate &&\r\n        targetDate > dateNow &&\r\n        targetDate !== dateNow &&\r\n        targetDDMMYY !== dateNowDDMMYY &&\r\n        task?.status?.toLowerCase() === TASK_TAB_INPROGRESS_STATUS.toLowerCase()\r\n      )\r\n        return { type: 'success' };\r\n      else if (targetDate === dateNow || targetDDMMYY === dateNowDDMMYY) {\r\n        return { type: 'alert' };\r\n      } else if (targetDate <= dateNow && task?.status?.toLowerCase() === TASK_TAB_INPROGRESS_STATUS.toLowerCase())\r\n        return { type: 'error', dateAlert: true };\r\n    }\r\n  };\r\n  const status = getStatus(task);\r\n\r\n  return (\r\n    <TableRow hover onClick={handlers.selectTask(task)} className={classnames(classesRow)}>\r\n        <TableCell {...columnProps('id')}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <FormCheckbox\r\n              name={`checkbox-${task?.taskId || task?.processId}`}\r\n              type=\"checkbox\"\r\n              value={isSelected}\r\n              nestedClasses={{ root: classes.checkbox }}\r\n            />\r\n          </Box>\r\n        </TableCell>\r\n      <TableCell {...columnProps('taskRef')}>\r\n        <Link text={task?.taskRef} color=\"secondary\" onClick={handlers.clickTask(task)} />\r\n      </TableCell>\r\n      <TableCell {...columnProps('createdOn')}>\r\n        {utils.string.t('format.date', { value: { date: task.createdOn, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps(isPremiumProcessing ? 'taskName' : 'taskType')}>\r\n        {isPremiumProcessing ? task?.taskName : task?.taskType}\r\n      </TableCell>\r\n\r\n      <TableCell {...columnProps('description')} title={task?.description} nestedClasses={{ root: classes.description }}>\r\n        {task?.description}\r\n      </TableCell>\r\n\r\n      <TableCell {...columnProps('targetDueDate')} className={getStatus(task)?.dateAlert ? classes.dateAlert : ''}>\r\n        {utils.string.t('format.date', { value: { date: task.targetDueDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('processRef')}>{task?.processRef}</TableCell>\r\n      {!isPremiumProcessing && isTaskTeam && <TableCell {...columnProps('assignee')}>{task?.assigneeFullName?.trim()}</TableCell>}\r\n      {isPremiumProcessing && caseTaskTypeView !== 'myTask' && (\r\n        <TableCell {...columnProps('assignee')}>{task?.assigneeFullName?.trim()}</TableCell>\r\n      )}\r\n      {!isPremiumProcessing && <TableCell {...columnProps('additionalAssignee')}>{task?.additionalAssigneeFullName?.trim()}</TableCell>}\r\n      <TableCell {...columnProps('priority')}>{task?.priority}</TableCell>\r\n      <TableCell {...columnProps('status')}>\r\n        {task?.status && <Status size=\"sm\" text={<Translate label={task?.status} />} status={status?.type} />}\r\n      </TableCell>\r\n      {!isPremiumProcessing && <TableCell {...columnProps('requestedBy')}>{task?.requestedByFullName?.trim()}</TableCell>}\r\n      {!isPremiumProcessing && <TableCell {...columnProps('team')}>{task?.team}</TableCell>}\r\n      {isPremiumProcessing && (\r\n        <>\r\n          <TableCell {...columnProps('inceptionDate')}>{task?.inceptionDate}</TableCell>\r\n          <TableCell {...columnProps('assuredName')}>{task?.assuredName}</TableCell>\r\n          <TableCell {...columnProps('type')}>{task?.type}</TableCell>\r\n          <TableCell {...columnProps('group')}>{task?.group}</TableCell>\r\n          <TableCell {...columnProps('departmentName')}>{task?.departmentName}</TableCell>\r\n          <TableCell {...columnProps('processSubType')}>{task?.processSubType}</TableCell>\r\n          <TableCell {...columnProps('xbInstanceId')}>{task?.xbInstanceName}</TableCell>\r\n        </>\r\n      )}\r\n      {isPremiumProcessing && caseTaskTypeView === TASK_TEAM_TYPE.myTeam && (\r\n        <TableCell {...columnProps('actions')}>\r\n          <PopoverMenu\r\n            id=\"search-menu-list\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={taskActionItems}\r\n          />\r\n        </TableCell>\r\n      )}\r\n      {!isPremiumProcessing && (\r\n        <TableCell {...columnProps('actions')}>\r\n          <PopoverMenu\r\n            id=\"search-menu-list\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={taskActionItems}\r\n          />\r\n        </TableCell>\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}