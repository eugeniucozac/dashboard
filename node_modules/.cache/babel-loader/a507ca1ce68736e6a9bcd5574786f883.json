{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\EnterClaimInformation\\\\EnterClaimInformationForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment'; //app\n\nimport styles from '../EnterClaimCardInformation/EnterClaimCardInformation.styles';\nimport { EnterClaimInformationView } from './EnterClaimInformation.view';\nimport { getClaimantNames, getClaimBordereauPeriods, getPolicySections, getSettlementCurrency, selectSettlementCurrency, selectBEAdjusterList, selectClaimsInformation, selectSelectedBEAdjusterList, selectReferralValues, selectReferralResponse, selectClaimsPolicySections, selectSectionEnabledUG, selectClaimIdUnderProgress, updateClaimantNamesSuccess, setBEAdjusterValue, selectClaimBordereauPeriods, selectClaimData } from 'stores';\nimport * as utils from 'utils';\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT, CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts'; //mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEnterClaimInformationForm.prototypes = {\n  policyRef: PropTypes.object.isRequired,\n  setPolicyRef: PropTypes.func.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  context: PropTypes.string.isRequired,\n  validation: PropTypes.bool.isRequired,\n  setValidation: PropTypes.func.isRequired,\n  policyInformation: PropTypes.object.isRequired,\n  catCodes: PropTypes.array.isRequired,\n  lossInformation: PropTypes.object.isRequired,\n  lossQualifiers: PropTypes.array.isRequired,\n  claimantNames: PropTypes.array.isRequired,\n  beAdjusterList: PropTypes.array.isRequired,\n  underWritingGroups: PropTypes.object.isRequired,\n  interest: PropTypes.object.isRequired,\n  allClaimDetails: PropTypes.object.isRequired,\n  priorities: PropTypes.array.isRequired,\n  complexityValues: PropTypes.array.isRequired,\n  claimPolicyInsures: PropTypes.array.isRequired,\n  claimPolicyClients: PropTypes.array.isRequired\n};\nexport default function EnterClaimInformationForm(_ref) {\n  _s();\n\n  var _interest$items;\n\n  var catCodes = _ref.catCodes,\n      lossInformation = _ref.lossInformation,\n      lossQualifiers = _ref.lossQualifiers,\n      policyInformation = _ref.policyInformation,\n      allClaimDetails = _ref.allClaimDetails,\n      claimantNames = _ref.claimantNames,\n      interest = _ref.interest,\n      underWritingGroups = _ref.underWritingGroups,\n      priorities = _ref.priorities,\n      beAdjusterList = _ref.beAdjusterList,\n      handleBack = _ref.handleBack,\n      complexityValues = _ref.complexityValues,\n      claimPolicyInsures = _ref.claimPolicyInsures,\n      claimPolicyClients = _ref.claimPolicyClients,\n      props = _objectWithoutProperties(_ref, [\"catCodes\", \"lossInformation\", \"lossQualifiers\", \"policyInformation\", \"allClaimDetails\", \"claimantNames\", \"interest\", \"underWritingGroups\", \"priorities\", \"beAdjusterList\", \"handleBack\", \"complexityValues\", \"claimPolicyInsures\", \"claimPolicyClients\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimInformationForm'\n  })();\n  var dispatch = useDispatch();\n  var currencies = useSelector(selectSettlementCurrency);\n  currencies = currencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      name: \"\".concat(currency.id, \" - \").concat(currency.name)\n    });\n  });\n  var policySections = useSelector(selectClaimsPolicySections);\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var allBEAdjusters = useSelector(selectBEAdjusterList);\n  var selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\n  var existingClaimInfo = useSelector(selectClaimsInformation);\n  var savedClaimInfo = useSelector(selectClaimIdUnderProgress);\n  var referralValues = useSelector(selectReferralValues);\n  var referralResponse = useSelector(selectReferralResponse);\n  var claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\n  var claimData = useSelector(selectClaimData);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uwResetKey = _useState4[0],\n      setUWResetKey = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isBordereauChecked = _useState6[0],\n      setBordereauChecked = _useState6[1];\n\n  var checkBordereauValue = function checkBordereauValue(claimBordereauPeriods) {\n    return claimBordereauPeriods.find(function (bp) {\n      return bp.name === (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod);\n    }) || null;\n  };\n\n  useEffect(function () {\n    dispatch(getSettlementCurrency());\n    dispatch(getClaimBordereauPeriods());\n    setResetKey(new Date().getTime());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isSectionEnabled) {\n      dispatch(getPolicySections());\n    }\n\n    if (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod) {\n      setBordereauChecked(true);\n    }\n\n    if ((policyData === null || policyData === void 0 ? void 0 : policyData.length) > 0) setUWResetKey(new Date().getTime());\n  }, [isSectionEnabled, existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isComplexFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isComplex) !== 0;\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  var existingClaimOrPolicyCurrency = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.settlementCurrencyCode) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.settlementCurrencyCode) || (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.originalCurrency);\n  var selectedCurrency = currencies.find(function (c) {\n    return c.id === existingClaimOrPolicyCurrency;\n  });\n  var lossQualifierValue = (lossQualifiers || []).find(function (l) {\n    var _l$id, _existingClaimInfo$lo, _savedClaimInfo$lossQ;\n\n    return ((_l$id = l.id) === null || _l$id === void 0 ? void 0 : _l$id.toString()) === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$lo = existingClaimInfo.lossQualifierID) === null || _existingClaimInfo$lo === void 0 ? void 0 : _existingClaimInfo$lo.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$lossQ = savedClaimInfo.lossQualifierID) === null || _savedClaimInfo$lossQ === void 0 ? void 0 : _savedClaimInfo$lossQ.toString()));\n  });\n  var complexityDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.complexityBasis) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.complexityBasis;\n  }));\n  var complexityValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.complexityValueID) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.complexityValueID;\n  }));\n  var referralDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralValue) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.referralValue;\n  }));\n  var referralValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralValueID) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.referralValueID;\n  }));\n  var referralDefaultResponse = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralResponseDescription) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    return item.description === existingClaimInfo.referralResponseDescription;\n  }));\n  var referralResponseData = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralResponseID) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    var _savedClaimInfo$refer;\n\n    return item.id === ((_savedClaimInfo$refer = savedClaimInfo.referralResponseID) === null || _savedClaimInfo$refer === void 0 ? void 0 : _savedClaimInfo$refer.toString());\n  }));\n  var sectionAllOption = (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType) === CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyData = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n  var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n    return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n      return itr === item.name;\n    });\n  }).map(function (item) {\n    return item.id;\n  });\n  var hasClaimRef = Boolean(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReference) || Boolean(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReference);\n  console.log(\"existingClaimInfo \", existingClaimInfo);\n  var fields = [{\n    name: 'claimantName',\n    type: 'autocompletemui',\n    options: claimantNames || [],\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimantName) || (claimantNames === null || claimantNames === void 0 ? void 0 : claimantNames.length) === 1 ? claimantNames[0] : (claimantNames === null || claimantNames === void 0 ? void 0 : claimantNames.length) > 1 ? claimantNames[claimantNames.length - 1] : null,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 50\n      },\n      filterOptions: function filterOptions(options, params) {\n        var filtered = createFilterOptions()(options, params);\n\n        if (params.inputValue) {\n          filtered = [].concat(_toConsumableArray(filtered), [{\n            id: filtered.length + 1,\n            name: \"\".concat(utils.string.t('app.create'), \" - \").concat(params.inputValue)\n          }]);\n        }\n\n        return filtered;\n      }\n    },\n    callback: function callback(event, data) {\n      var hasCreateString = \"\".concat(utils.string.t('app.create'), \" - \");\n      var name = data === null || data === void 0 ? void 0 : data.name.replace(hasCreateString, '');\n      var alreadyExists = claimantNames.find(function (claim) {\n        return claim.name === name;\n      });\n\n      if ((data === null || data === void 0 ? void 0 : data.name.includes(hasCreateString)) && !alreadyExists) {\n        var newClaimantName = {\n          id: Object.keys(claimantNames).length,\n          name: name\n        };\n        dispatch(updateClaimantNamesSuccess(newClaimantName));\n      }\n    },\n    validation: Yup.object().nullable()\n  }, {\n    type: 'datepicker',\n    name: 'claimReceivedDate',\n    icon: 'TodayIcon',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReceivedDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReceivedDate) || utils.date.today(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'claimReceivedTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReceivedDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReceivedDate) || new Date(),\n        format: 'HH:mm'\n      }\n    })\n  }, {\n    name: 'settlementCurrencyCode',\n    type: 'autocompletemui',\n    options: currencies || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: selectedCurrency || null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.lossFromDate) || (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossFromDate) || null,\n    icon: 'TodayIcon',\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\n      return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().required(utils.string.t('validation.required')).max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.lossToDate) || (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.lossToDate) || null,\n    muiPickerProps: {\n      minDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate,\n      maxDate: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate,\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    validation: Yup.date().test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\n      return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema.when('lossQualifierID', {\n        is: function is(val) {\n          return !dateDisabledLossQualifiers.includes(val === null || val === void 0 ? void 0 : val.id);\n        },\n        then: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')).nullable().transform(function (curr, orig) {\n          return orig === '' ? null : curr;\n        }),\n        otherwise: Yup.date().nullable()\n      }) : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'lossQualifierID',\n    type: 'autocompletemui',\n    value: lossQualifierValue || null,\n    options: lossQualifiers || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'location',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.location) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.location) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.location) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.location) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(200).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'adjusterReference',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.adjusterReference) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.adjusterReference) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.adjusterReference) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.adjusterReference) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference'))\n  }, {\n    name: 'interest',\n    type: 'text',\n    defaultValue: interest.selectedInterest,\n    value: interest.selectedInterest,\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      },\n      disabled: true\n    },\n    validation: (interest === null || interest === void 0 ? void 0 : (_interest$items = interest.items) === null || _interest$items === void 0 ? void 0 : _interest$items.length) > 0 ? Yup.string().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }) : Yup.string()\n  }, {\n    name: 'complexity',\n    type: 'autocompletemui',\n    options: complexityValues || [],\n    value: complexityDefaultValue || complexityValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    muiComponentProps: {\n      disabled: isComplexFlag\n    },\n    validation: isComplexFlag ? Yup.object().nullable() : Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'referral',\n    type: 'autocompletemui',\n    options: referralValues || [],\n    value: referralDefaultValue || referralValue || null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    validation: Yup.object().when('complexity', {\n      is: function is(val) {\n        var _complexityValues$fin;\n\n        return ((_complexityValues$fin = complexityValues.find(function (item) {\n          return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n        })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'rfiResponse',\n    type: 'autocompletemui',\n    options: referralResponse || [],\n    value: referralDefaultResponse || referralResponseData || null,\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().when('referral', {\n      is: function is(val) {\n        if (val !== null) {\n          var _referralValues$find;\n\n          var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n          var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n            return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n          })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n          var refResponseState = refValuesList.includes(getReferralValue);\n          return !refResponseState;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'fgunarrative',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.fgunarrative) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.fgunarrative) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.fgunarrative) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.fgunarrative) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(50).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'movementType',\n    type: 'toggle',\n    label: '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.movementType) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.movementType) || 'Advice',\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.advice'),\n      value: 'Advice'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.settlement'),\n      value: 'Settlement'\n    }]\n  }, {\n    name: 'order',\n    type: 'radio',\n    defaultValue: '100',\n    // defaultValue: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\n    // value: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n      value: '100'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.ourShare'),\n      value: '0'\n    }]\n  }, {\n    name: 'orderPercentage',\n    type: 'number',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.orderPercentage) || underWritingGroups.percentageOfSelected || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.orderPercentage) || '0',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.orderPercentage) || underWritingGroups.percentageOfSelected || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.orderPercentage) || '0',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      },\n      disabled: true\n    },\n    validation: Yup.number().min(0, utils.string.t('claims.typeOfSettlement.errorMin')).max(100, utils.string.t('claims.typeOfSettlement.error'))\n  }, {\n    name: 'adjuster',\n    type: 'radio',\n    defaultValue: !(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || !(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) ? 'beAdjuster' : 'nonBeAdjuster',\n    value: !(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || !(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) ? 'beAdjuster' : 'nonBeAdjuster',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiFormGroupProps: {\n      row: true,\n      nestedClasses: {\n        root: classes.adjusterRadioGroup\n      },\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\n      value: 'beAdjuster'\n    }, {\n      label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\n      value: 'nonBeAdjuster'\n    }]\n  }, {\n    name: 'beAdjuster',\n    type: 'autocompletemui',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.beAdjusterID) !== 0 ? allBEAdjusters.items.find(function (item) {\n      var _existingClaimInfo$be, _savedClaimInfo$beAdj;\n\n      return item.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$be = existingClaimInfo.beAdjusterID) === null || _existingClaimInfo$be === void 0 ? void 0 : _existingClaimInfo$be.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$beAdj = savedClaimInfo.beAdjusterID) === null || _savedClaimInfo$beAdj === void 0 ? void 0 : _savedClaimInfo$beAdj.toString()));\n    }) : selectedBeAdjuster || [],\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.beAdjusterID) !== 0 ? allBEAdjusters.items.find(function (item) {\n      var _existingClaimInfo$be2, _savedClaimInfo$beAdj2;\n\n      return item.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$be2 = existingClaimInfo.beAdjusterID) === null || _existingClaimInfo$be2 === void 0 ? void 0 : _existingClaimInfo$be2.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$beAdj2 = savedClaimInfo.beAdjusterID) === null || _savedClaimInfo$beAdj2 === void 0 ? void 0 : _savedClaimInfo$beAdj2.toString()));\n    }) : selectedBeAdjuster || [],\n    options: beAdjusterList || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    callback: function callback(event, data) {\n      dispatch(setBEAdjusterValue(data));\n    }\n  }, {\n    name: 'nonBeAdjuster',\n    type: 'text',\n    defaultValue: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) || '',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.nonBEAdjusterName) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.nonBEAdjusterName) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster'))\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: (priorities === null || priorities === void 0 ? void 0 : priorities.length) ? priorities : [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.priorityDescription) && priorities.length > 0 ? priorities.find(function (p) {\n      return p.description === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.priorityDescription) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.priorityDescription));\n    }) : (priorities === null || priorities === void 0 ? void 0 : priorities.length) > 0 ? priorities.find(function (p) {\n      return p.description === 'Medium';\n    }) || null : null\n  }, {\n    name: 'insured',\n    type: 'autocompletemui',\n    options: claimPolicyInsures || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.insuredID) ? claimPolicyInsures.find(function (cp) {\n      var _existingClaimInfo$in, _savedClaimInfo$insur;\n\n      return cp.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$in = existingClaimInfo.insuredID) === null || _existingClaimInfo$in === void 0 ? void 0 : _existingClaimInfo$in.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$insur = savedClaimInfo.insuredID) === null || _savedClaimInfo$insur === void 0 ? void 0 : _savedClaimInfo$insur.toString()));\n    }) : (claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.length) === 1 ? claimPolicyInsures[0] : null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'client',\n    type: 'autocompletemui',\n    options: claimPolicyClients || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.clientID) ? claimPolicyClients.find(function (pc) {\n      var _existingClaimInfo$cl, _savedClaimInfo$clien;\n\n      return pc.id === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$cl = existingClaimInfo.clientID) === null || _existingClaimInfo$cl === void 0 ? void 0 : _existingClaimInfo$cl.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$clien = savedClaimInfo.clientID) === null || _savedClaimInfo$clien === void 0 ? void 0 : _savedClaimInfo$clien.toString()));\n    }) : (claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.length) === 1 ? claimPolicyClients[0] : null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }].concat(_toConsumableArray(isBordereauFlag ? [{\n    name: 'certificateNumber',\n    type: 'text',\n    value: (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateNumber) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateNumber) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateNumber) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().required(utils.string.t('validation.required')).max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    type: 'datepicker',\n    name: 'certificateInceptionDate',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateInceptionDate) || (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateInceptionDate) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateInceptionDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\n      return value && this.options.parent.certificateExpiryDate ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'certificateExpiryDate',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.certificateExpiryDate) || (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.certificateExpiryDate) || (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateExpiryDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\n      return value && this.options.parent.certificateInceptionDate ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    name: 'bordereauClaim',\n    type: 'checkbox',\n    defaultValue: Boolean(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod) || Boolean(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.bordereauPeriod),\n    muiComponentProps: {\n      onChange: function onChange(name, value) {\n        return setBordereauChecked(value);\n      }\n    }\n  }] : []), _toConsumableArray(isBordereauChecked ? [{\n    name: 'bordereauPeriod',\n    type: 'autocompletemui',\n    options: claimBordereauPeriods,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: checkBordereauValue(claimBordereauPeriods),\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }] : []), _toConsumableArray(isSectionEnabled ? [{\n    name: 'ugSections',\n    type: 'autocompletemui',\n    value: (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.policySectionID) !== null ? policyData.find(function (policy) {\n      var _existingClaimInfo$po, _savedClaimInfo$polic;\n\n      return policy.id.toString() === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$po = existingClaimInfo.policySectionID) === null || _existingClaimInfo$po === void 0 ? void 0 : _existingClaimInfo$po.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$polic = savedClaimInfo.policySectionID) === null || _savedClaimInfo$polic === void 0 ? void 0 : _savedClaimInfo$polic.toString()));\n    }) : policyData[0],\n    options: policyData,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }] : []));\n\n  var handleAddClaim = function handleAddClaim() {\n    dispatch(getClaimantNames());\n  };\n\n  return /*#__PURE__*/_jsxDEV(EnterClaimInformationView, _objectSpread(_objectSpread({}, props), {}, {\n    resetKey: resetKey,\n    uwResetKey: uwResetKey,\n    policyInformation: policyInformation,\n    handleAddClaim: handleAddClaim,\n    lossInformation: lossInformation,\n    catCodes: catCodes,\n    lossQualifiers: lossQualifiers,\n    claimantNames: claimantNames,\n    claimPolicyInsures: claimPolicyInsures,\n    interest: interest,\n    underWritingGroups: underWritingGroups,\n    handleNext: props.handleNext,\n    fields: fields,\n    handleBack: handleBack,\n    complexityValues: complexityValues,\n    referralValues: referralValues,\n    isBordereauFlag: isBordereauFlag,\n    isComplexFlag: isComplexFlag,\n    existingClaimInfo: existingClaimInfo !== null && existingClaimInfo !== void 0 ? existingClaimInfo : {},\n    claimData: claimData,\n    hasClaimRef: hasClaimRef,\n    currencies: currencies,\n    isBordereauChecked: isBordereauChecked\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 705,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EnterClaimInformationForm, \"Gg3cRbv5G4dEw21HX/5+QO4+tJc=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EnterClaimInformationForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterClaimInformationForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/EnterClaimInformation/EnterClaimInformationForm.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","moment","styles","EnterClaimInformationView","getClaimantNames","getClaimBordereauPeriods","getPolicySections","getSettlementCurrency","selectSettlementCurrency","selectBEAdjusterList","selectClaimsInformation","selectSelectedBEAdjusterList","selectReferralValues","selectReferralResponse","selectClaimsPolicySections","selectSectionEnabledUG","selectClaimIdUnderProgress","updateClaimantNamesSuccess","setBEAdjusterValue","selectClaimBordereauPeriods","selectClaimData","utils","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","makeStyles","createFilterOptions","EnterClaimInformationForm","prototypes","policyRef","object","isRequired","setPolicyRef","func","isAllStepsCompleted","bool","activeStep","number","lastStep","handleCancel","handleFinish","handleNext","handleBack","handleSave","context","string","validation","setValidation","policyInformation","catCodes","array","lossInformation","lossQualifiers","claimantNames","beAdjusterList","underWritingGroups","interest","allClaimDetails","priorities","complexityValues","claimPolicyInsures","claimPolicyClients","props","classes","name","dispatch","currencies","map","currency","id","policySections","isSectionEnabled","allBEAdjusters","selectedBeAdjuster","existingClaimInfo","savedClaimInfo","referralValues","referralResponse","claimBordereauPeriods","claimData","resetKey","setResetKey","uwResetKey","setUWResetKey","isBordereauChecked","setBordereauChecked","checkBordereauValue","find","bp","bordereauPeriod","Date","getTime","policyData","length","isComplexFlag","isComplex","isBordereauFlag","isBordereau","existingClaimOrPolicyCurrency","settlementCurrencyCode","originalCurrency","selectedCurrency","c","lossQualifierValue","l","toString","lossQualifierID","complexityDefaultValue","complexityBasis","item","complexityRulesValue","complexityValue","complexityValueID","complexityRulesID","referralDefaultValue","referralValue","referralValueID","referralDefaultResponse","referralResponseDescription","description","referralResponseData","referralResponseID","sectionAllOption","policyType","t","generic","isValidArray","dateDisabledLossQualifiers","filter","itr","hasClaimRef","Boolean","claimReference","console","log","fields","type","options","value","claimantName","optionsCreatable","optionKey","optionLabel","muiComponentProps","inputProps","maxLength","filterOptions","params","filtered","inputValue","callback","event","data","hasCreateString","replace","alreadyExists","claim","includes","newClaimantName","Object","keys","nullable","icon","claimReceivedDate","date","today","fullWidth","max","outputFormat","format","required","lossFromDate","fromDate","muiPickerProps","minDate","maxDate","toDate","disableToolbar","clearable","variant","test","parent","isSameOrBefore","when","schema","is","val","then","transform","curr","orig","otherwise","lossToDate","isSameOrAfter","defaultValue","location","root","formInput","adjusterReference","selectedInterest","disabled","items","refValuesList","getReferralValue","refResponseState","fgunarrative","label","movementType","muiFormGroupProps","row","radioLabel","orderPercentage","percentageOfSelected","min","nonBEAdjusterName","nestedClasses","adjusterRadioGroup","beAdjusterID","priorityDescription","p","insuredID","cp","clientID","pc","certificateNumber","certificateInceptionDate","datepicker","certificateExpiryDate","onChange","policySectionID","policy","handleAddClaim"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport styles from '../EnterClaimCardInformation/EnterClaimCardInformation.styles';\r\nimport { EnterClaimInformationView } from './EnterClaimInformation.view';\r\nimport {\r\n  getClaimantNames,\r\n  getClaimBordereauPeriods,\r\n  getPolicySections,\r\n  getSettlementCurrency,\r\n  selectSettlementCurrency,\r\n  selectBEAdjusterList,\r\n  selectClaimsInformation,\r\n  selectSelectedBEAdjusterList,\r\n  selectReferralValues,\r\n  selectReferralResponse,\r\n  selectClaimsPolicySections,\r\n  selectSectionEnabledUG,\r\n  selectClaimIdUnderProgress,\r\n  updateClaimantNamesSuccess,\r\n  setBEAdjusterValue,\r\n  selectClaimBordereauPeriods,\r\n  selectClaimData,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT, CLAIM_LOSS_DATE_DISABLED_QUALIFIERS } from 'consts';\r\n\r\n//mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nEnterClaimInformationForm.prototypes = {\r\n  policyRef: PropTypes.object.isRequired,\r\n  setPolicyRef: PropTypes.func.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  context: PropTypes.string.isRequired,\r\n  validation: PropTypes.bool.isRequired,\r\n  setValidation: PropTypes.func.isRequired,\r\n  policyInformation: PropTypes.object.isRequired,\r\n  catCodes: PropTypes.array.isRequired,\r\n  lossInformation: PropTypes.object.isRequired,\r\n  lossQualifiers: PropTypes.array.isRequired,\r\n  claimantNames: PropTypes.array.isRequired,\r\n  beAdjusterList: PropTypes.array.isRequired,\r\n  underWritingGroups: PropTypes.object.isRequired,\r\n  interest: PropTypes.object.isRequired,\r\n  allClaimDetails: PropTypes.object.isRequired,\r\n  priorities: PropTypes.array.isRequired,\r\n  complexityValues: PropTypes.array.isRequired,\r\n  claimPolicyInsures: PropTypes.array.isRequired,\r\n  claimPolicyClients: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default function EnterClaimInformationForm({\r\n  catCodes,\r\n  lossInformation,\r\n  lossQualifiers,\r\n  policyInformation,\r\n  allClaimDetails,\r\n  claimantNames,\r\n  interest,\r\n  underWritingGroups,\r\n  priorities,\r\n  beAdjusterList,\r\n  handleBack,\r\n  complexityValues,\r\n  claimPolicyInsures,\r\n  claimPolicyClients,\r\n  ...props\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimInformationForm' })();\r\n  const dispatch = useDispatch();\r\n  let currencies = useSelector(selectSettlementCurrency);\r\n  currencies = currencies.map((currency) => ({ ...currency, name: `${currency.id} - ${currency.name}` }));\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const allBEAdjusters = useSelector(selectBEAdjusterList);\r\n  const selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\r\n  const existingClaimInfo = useSelector(selectClaimsInformation);\r\n  const savedClaimInfo = useSelector(selectClaimIdUnderProgress);\r\n  const referralValues = useSelector(selectReferralValues);\r\n  const referralResponse = useSelector(selectReferralResponse);\r\n  const claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\r\n  const claimData = useSelector(selectClaimData);\r\n  const [resetKey, setResetKey] = useState();\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const [isBordereauChecked, setBordereauChecked] = useState(false);\r\n\r\n  const checkBordereauValue = (claimBordereauPeriods) =>\r\n    claimBordereauPeriods.find((bp) => bp.name === existingClaimInfo?.bordereauPeriod) || null;\r\n\r\n  useEffect(() => {\r\n    dispatch(getSettlementCurrency());\r\n    dispatch(getClaimBordereauPeriods());\r\n    setResetKey(new Date().getTime());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    if (isSectionEnabled) {\r\n      dispatch(getPolicySections());\r\n    }\r\n    if (existingClaimInfo?.bordereauPeriod) {\r\n      setBordereauChecked(true);\r\n    }\r\n    if (policyData?.length > 0) setUWResetKey(new Date().getTime());\r\n  }, [isSectionEnabled, existingClaimInfo?.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isComplexFlag = allClaimDetails?.isComplex !== 0;\r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n  const existingClaimOrPolicyCurrency =\r\n    existingClaimInfo?.settlementCurrencyCode || savedClaimInfo?.settlementCurrencyCode || policyInformation?.originalCurrency;\r\n  const selectedCurrency = currencies.find((c) => c.id === existingClaimOrPolicyCurrency);\r\n  const lossQualifierValue = (lossQualifiers || []).find(\r\n    (l) => l.id?.toString() === (existingClaimInfo?.lossQualifierID?.toString() || savedClaimInfo?.lossQualifierID?.toString())\r\n  );\r\n  const complexityDefaultValue =\r\n    existingClaimInfo?.complexityBasis && complexityValues?.find((item) => item.complexityRulesValue === existingClaimInfo.complexityBasis);\r\n\r\n  const complexityValue =\r\n    savedClaimInfo?.complexityValueID && complexityValues?.find((item) => item.complexityRulesID === savedClaimInfo.complexityValueID);\r\n\r\n  const referralDefaultValue =\r\n    existingClaimInfo?.referralValue && referralValues?.find((item) => item.complexityRulesValue === existingClaimInfo.referralValue);\r\n\r\n  const referralValue =\r\n    savedClaimInfo?.referralValueID && referralValues?.find((item) => item.complexityRulesID === savedClaimInfo.referralValueID);\r\n\r\n  const referralDefaultResponse =\r\n    existingClaimInfo?.referralResponseDescription &&\r\n    referralResponse?.find((item) => item.description === existingClaimInfo.referralResponseDescription);\r\n\r\n  const referralResponseData =\r\n    savedClaimInfo?.referralResponseID && referralResponse?.find((item) => item.id === savedClaimInfo.referralResponseID?.toString());\r\n\r\n  const sectionAllOption =\r\n    policyInformation?.policyType === CLAIM_SECTION_ENABLED_UG[0]\r\n      ? []\r\n      : [{ id: CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyData = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const dateDisabledLossQualifiers = lossQualifiers\r\n    .filter((item) => {\r\n      return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name);\r\n    })\r\n    .map((item) => item.id);\r\n\r\n  const hasClaimRef = Boolean(savedClaimInfo?.claimReference) || Boolean(existingClaimInfo?.claimReference);\r\n\r\n  console.log(\"existingClaimInfo \", existingClaimInfo)\r\n\r\n  const fields = [\r\n    {\r\n      name: 'claimantName',\r\n      type: 'autocompletemui',\r\n      options: claimantNames || [],\r\n      value:\r\n        existingClaimInfo?.claimantName || claimantNames?.length === 1\r\n          ? claimantNames[0]\r\n          : claimantNames?.length > 1\r\n          ? claimantNames[claimantNames.length - 1]\r\n          : null,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 50,\r\n        },\r\n        filterOptions: (options, params) => {\r\n          let filtered = createFilterOptions()(options, params);\r\n          if (params.inputValue) {\r\n            filtered = [\r\n              ...filtered,\r\n              {\r\n                id: filtered.length + 1,\r\n                name: `${utils.string.t('app.create')} - ${params.inputValue}`,\r\n              },\r\n            ];\r\n          }\r\n          return filtered;\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        const hasCreateString = `${utils.string.t('app.create')} - `;\r\n        const name = data?.name.replace(hasCreateString, '');\r\n        const alreadyExists = claimantNames.find((claim) => claim.name === name);\r\n\r\n        if (data?.name.includes(hasCreateString) && !alreadyExists) {\r\n          const newClaimantName = { id: Object.keys(claimantNames).length, name };\r\n          dispatch(updateClaimantNamesSuccess(newClaimantName));\r\n        }\r\n      },\r\n      validation: Yup.object().nullable(),\r\n    },\r\n\r\n    {\r\n      type: 'datepicker',\r\n      name: 'claimReceivedDate',\r\n      icon: 'TodayIcon',\r\n      value: existingClaimInfo?.claimReceivedDate || savedClaimInfo?.claimReceivedDate || utils.date.today(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'claimReceivedTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', {\r\n        value: { date: existingClaimInfo?.claimReceivedDate || savedClaimInfo?.claimReceivedDate || new Date(), format: 'HH:mm' },\r\n      }),\r\n    },\r\n    {\r\n      name: 'settlementCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: currencies || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: selectedCurrency || null,\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      value: existingClaimInfo?.lossFromDate || lossInformation?.fromDate || savedClaimInfo?.lossFromDate || null,\r\n      icon: 'TodayIcon',\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.greaterThenDate'), function (value) {\r\n          return value && this.options.parent.toDate ? moment(value).isSameOrBefore(this.options.parent.toDate) : true;\r\n        })\r\n        .when('$validation', (validation, schema) =>\r\n          validation\r\n            ? schema.when('lossQualifierID', {\r\n                is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n                then: Yup.date()\r\n                  .required(utils.string.t('validation.required'))\r\n                  .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n                  .nullable()\r\n                  .transform((curr, orig) => (orig === '' ? null : curr)),\r\n                otherwise: Yup.date().nullable(),\r\n              })\r\n            : Yup.date().nullable()\r\n        ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      value: existingClaimInfo?.lossToDate || lossInformation?.toDate || savedClaimInfo?.lossToDate || null,\r\n      muiPickerProps: {\r\n        minDate: lossInformation?.fromDate,\r\n        maxDate: lossInformation?.toDate,\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      validation: Yup.date()\r\n        .test('from', utils.string.t('claims.lossInformation.validation.lesserThenDate'), function (value) {\r\n          return value && this.options.parent.fromDate ? moment(value).isSameOrAfter(this.options.parent.fromDate) : true;\r\n        })\r\n        .when('$validation', (validation, schema) =>\r\n          validation\r\n            ? schema.when('lossQualifierID', {\r\n                is: (val) => !dateDisabledLossQualifiers.includes(val?.id),\r\n                then: Yup.date()\r\n                  .max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate'))\r\n                  .nullable()\r\n                  .transform((curr, orig) => (orig === '' ? null : curr)),\r\n                otherwise: Yup.date().nullable(),\r\n              })\r\n            : Yup.date().nullable()\r\n        ),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossQualifierID',\r\n      type: 'autocompletemui',\r\n      value: lossQualifierValue || null,\r\n      options: lossQualifiers || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'location',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.location || savedClaimInfo?.location || '',\r\n      value: existingClaimInfo?.location || savedClaimInfo?.location || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(200)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'adjusterReference',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.adjusterReference || savedClaimInfo?.adjusterReference || '',\r\n      value: existingClaimInfo?.adjusterReference || savedClaimInfo?.adjusterReference || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference')),\r\n    },\r\n    {\r\n      name: 'interest',\r\n      type: 'text',\r\n      defaultValue: interest.selectedInterest,\r\n      value: interest.selectedInterest,\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n        disabled: true,\r\n      },\r\n      validation:\r\n        interest?.items?.length > 0\r\n          ? Yup.string()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string()))\r\n          : Yup.string(),\r\n    },\r\n    {\r\n      name: 'complexity',\r\n      type: 'autocompletemui',\r\n      options: complexityValues || [],\r\n      value: complexityDefaultValue || complexityValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      muiComponentProps: {\r\n        disabled: isComplexFlag,\r\n      },\r\n      validation: isComplexFlag\r\n        ? Yup.object().nullable()\r\n        : Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'referral',\r\n      type: 'autocompletemui',\r\n      options: referralValues || [],\r\n      value: referralDefaultValue || referralValue || null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      validation: Yup.object().when('complexity', {\r\n        is: (val) =>\r\n          complexityValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue === 'Referral Required',\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'rfiResponse',\r\n      type: 'autocompletemui',\r\n      options: referralResponse || [],\r\n      value: referralDefaultResponse || referralResponseData || null,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().when('referral', {\r\n        is: (val) => {\r\n          if (val !== null) {\r\n            const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n            const getReferralValue = referralValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue;\r\n            const refResponseState = refValuesList.includes(getReferralValue);\r\n            return !refResponseState;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'fgunarrative',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.fgunarrative || savedClaimInfo?.fgunarrative || '',\r\n      value: existingClaimInfo?.fgunarrative || savedClaimInfo?.fgunarrative || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(50)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'movementType',\r\n      type: 'toggle',\r\n      label: '',\r\n      value: existingClaimInfo?.movementType || savedClaimInfo?.movementType || 'Advice',\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.advice'),\r\n          value: 'Advice',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.settlement'),\r\n          value: 'Settlement',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'order',\r\n      type: 'radio',\r\n      defaultValue: '100',\r\n      // defaultValue: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\r\n      // value: existingClaimInfo?.orderPercentage < 100 ? '1' : '0',\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n          value: '100',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.ourShare'),\r\n          value: '0',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'orderPercentage',\r\n      type: 'number',\r\n      defaultValue: existingClaimInfo?.orderPercentage || underWritingGroups.percentageOfSelected || savedClaimInfo?.orderPercentage || '0',\r\n      value: existingClaimInfo?.orderPercentage || underWritingGroups.percentageOfSelected || savedClaimInfo?.orderPercentage || '0',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n        disabled: true,\r\n      },\r\n      validation: Yup.number()\r\n        .min(0, utils.string.t('claims.typeOfSettlement.errorMin'))\r\n        .max(100, utils.string.t('claims.typeOfSettlement.error')),\r\n    },\r\n    {\r\n      name: 'adjuster',\r\n      type: 'radio',\r\n      defaultValue: !existingClaimInfo?.nonBEAdjusterName || !savedClaimInfo?.nonBEAdjusterName ? 'beAdjuster' : 'nonBeAdjuster',\r\n      value: !existingClaimInfo?.nonBEAdjusterName || !savedClaimInfo?.nonBEAdjusterName ? 'beAdjuster' : 'nonBeAdjuster',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        nestedClasses: { root: classes.adjusterRadioGroup },\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n          value: 'beAdjuster',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\r\n          value: 'nonBeAdjuster',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'beAdjuster',\r\n      type: 'autocompletemui',\r\n      defaultValue:\r\n        existingClaimInfo?.beAdjusterID !== 0\r\n          ? allBEAdjusters.items.find(\r\n              (item) => item.id === (existingClaimInfo?.beAdjusterID?.toString() || savedClaimInfo?.beAdjusterID?.toString())\r\n            )\r\n          : selectedBeAdjuster || [],\r\n      value:\r\n        existingClaimInfo?.beAdjusterID !== 0\r\n          ? allBEAdjusters.items.find(\r\n              (item) => item.id === (existingClaimInfo?.beAdjusterID?.toString() || savedClaimInfo?.beAdjusterID?.toString())\r\n            )\r\n          : selectedBeAdjuster || [],\r\n      options: beAdjusterList || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      callback: (event, data) => {\r\n        dispatch(setBEAdjusterValue(data));\r\n      },\r\n    },\r\n    {\r\n      name: 'nonBeAdjuster',\r\n      type: 'text',\r\n      defaultValue: existingClaimInfo?.nonBEAdjusterName || savedClaimInfo?.nonBEAdjusterName || '',\r\n      value: existingClaimInfo?.nonBEAdjusterName || savedClaimInfo?.nonBEAdjusterName || '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster')),\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities?.length ? priorities : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value:\r\n        existingClaimInfo?.priorityDescription && priorities.length > 0\r\n          ? priorities.find((p) => p.description === (existingClaimInfo?.priorityDescription || savedClaimInfo?.priorityDescription))\r\n          : priorities?.length > 0\r\n          ? priorities.find((p) => p.description === 'Medium') || null\r\n          : null,\r\n    },\r\n    {\r\n      name: 'insured',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyInsures || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: existingClaimInfo?.insuredID\r\n        ? claimPolicyInsures.find((cp) => cp.id === (existingClaimInfo?.insuredID?.toString() || savedClaimInfo?.insuredID?.toString()))\r\n        : claimPolicyInsures?.length === 1\r\n        ? claimPolicyInsures[0]\r\n        : null,\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'client',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyClients || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: existingClaimInfo?.clientID\r\n        ? claimPolicyClients.find((pc) => pc.id === (existingClaimInfo?.clientID?.toString() || savedClaimInfo?.clientID?.toString()))\r\n        : claimPolicyClients?.length === 1\r\n        ? claimPolicyClients[0]\r\n        : null,\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    ...(isBordereauFlag\r\n      ? [\r\n          {\r\n            name: 'certificateNumber',\r\n            type: 'text',\r\n            value: existingClaimInfo?.certificateNumber || savedClaimInfo?.certificateNumber || allClaimDetails?.certificateNumber || '',\r\n            muiComponentProps: {\r\n              classes: {\r\n                root: classes.formInput,\r\n              },\r\n            },\r\n            validation: Yup.string()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateInceptionDate',\r\n            value:\r\n              savedClaimInfo?.certificateInceptionDate ||\r\n              existingClaimInfo?.certificateInceptionDate ||\r\n              allClaimDetails?.certificateInceptionDate ||\r\n              null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\r\n                return value && this.options.parent.certificateExpiryDate\r\n                  ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateExpiryDate',\r\n            value:\r\n              savedClaimInfo?.certificateExpiryDate ||\r\n              existingClaimInfo?.certificateExpiryDate ||\r\n              allClaimDetails?.certificateExpiryDate ||\r\n              null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\r\n                return value && this.options.parent.certificateInceptionDate\r\n                  ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            name: 'bordereauClaim',\r\n            type: 'checkbox',\r\n            defaultValue: Boolean(existingClaimInfo?.bordereauPeriod) || Boolean(savedClaimInfo?.bordereauPeriod),\r\n            muiComponentProps: {\r\n              onChange: (name, value) => setBordereauChecked(value),\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isBordereauChecked\r\n      ? [\r\n          {\r\n            name: 'bordereauPeriod',\r\n            type: 'autocompletemui',\r\n            options: claimBordereauPeriods,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            value: checkBordereauValue(claimBordereauPeriods),\r\n            validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isSectionEnabled\r\n      ? [\r\n          {\r\n            name: 'ugSections',\r\n            type: 'autocompletemui',\r\n            value:\r\n              savedClaimInfo?.policySectionID !== null\r\n                ? policyData.find(\r\n                    (policy) =>\r\n                      policy.id.toString() ===\r\n                      (existingClaimInfo?.policySectionID?.toString() || savedClaimInfo?.policySectionID?.toString())\r\n                  )\r\n                : policyData[0],\r\n            options: policyData,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            validation: Yup.object()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const handleAddClaim = () => {\r\n    dispatch(getClaimantNames());\r\n  };\r\n\r\n  return (\r\n    <EnterClaimInformationView\r\n      {...props}\r\n      resetKey={resetKey}\r\n      uwResetKey={uwResetKey}\r\n      policyInformation={policyInformation}\r\n      handleAddClaim={handleAddClaim}\r\n      lossInformation={lossInformation}\r\n      catCodes={catCodes}\r\n      lossQualifiers={lossQualifiers}\r\n      claimantNames={claimantNames}\r\n      claimPolicyInsures={claimPolicyInsures}\r\n      interest={interest}\r\n      underWritingGroups={underWritingGroups}\r\n      handleNext={props.handleNext}\r\n      fields={fields}\r\n      handleBack={handleBack}\r\n      complexityValues={complexityValues}\r\n      referralValues={referralValues}\r\n      isBordereauFlag={isBordereauFlag}\r\n      isComplexFlag={isComplexFlag}\r\n      existingClaimInfo={existingClaimInfo ?? {}}\r\n      claimData={claimData}\r\n      hasClaimRef={hasClaimRef}\r\n      currencies={currencies}\r\n      isBordereauChecked={isBordereauChecked}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}