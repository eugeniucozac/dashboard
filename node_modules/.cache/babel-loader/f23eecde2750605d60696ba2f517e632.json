{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\EditableTable\\\\EditableTable.view.js\";\nimport React, { Fragment } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport NumberFormat from 'react-number-format'; //app\n\nimport styles from './EditableTable.styles';\nimport { TableHead, TableCell, Button, Overflow, Translate } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles, Box, Typography, Table, TableBody, MenuItem, TableRow, Select, Checkbox, TextField, TableContainer } from '@material-ui/core';\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\nimport UndoIcon from '@material-ui/icons/Undo';\nimport { KeyboardDatePicker } from '@material-ui/pickers';\nimport TodayIcon from '@material-ui/icons/Today';\nimport EventIcon from '@material-ui/icons/Event';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nEditableTableView.propTypes = {\n  fields: PropTypes.shape({\n    arrayItemDef: PropTypes.array,\n    fieldData: PropTypes.array\n  }),\n  tableRows: PropTypes.array,\n  isTableEditable: PropTypes.bool,\n  handlers: PropTypes.shape({\n    handleTableTextboxChange: PropTypes.func,\n    handleTableRowClick: PropTypes.func,\n    handleTableDatePickerChange: PropTypes.func,\n    handleTableCopyRowData: PropTypes.func,\n    handleTableSelectChange: PropTypes.func,\n    handleTableUndoRowData: PropTypes.func\n  })\n};\nexport function EditableTableView(_ref) {\n  var _this = this,\n      _fields$arrayItemDef;\n\n  var fields = _ref.fields,\n      tableRows = _ref.tableRows,\n      isTableEditable = _ref.isTableEditable,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'EditableTable'\n  })();\n\n  var copyIcon = function copyIcon(index) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      icon: FileCopyIcon,\n      onClick: function onClick() {\n        return isTableEditable && handlers.handleTableCopyRowData(index);\n      },\n      size: \"xsmall\",\n      variant: \"text\",\n      color: \"default\",\n      tooltip: {\n        title: utils.string.t('app.copyButtonToolTip')\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var cancelIcon = function cancelIcon(row) {\n    return /*#__PURE__*/_jsxDEV(Button, {\n      icon: UndoIcon,\n      onClick: function onClick() {\n        return isTableEditable && handlers.handleTableUndoRowData(row);\n      },\n      size: \"xsmall\",\n      variant: \"text\",\n      color: \"default\",\n      tooltip: {\n        title: utils.string.t('app.undoButtonToolTip')\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 66,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var retainBrokerAmountDetails = function retainBrokerAmountDetails(row) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(Translate, {\n        label: \"format.currency\",\n        options: {\n          value: {\n            number: row === null || row === void 0 ? void 0 : row.retainedBrokerageAmount,\n            currency: row.retainedBrokerageCurrencyCodeName || constants.CURRENCY_USD\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 9\n      }, _this), (row === null || row === void 0 ? void 0 : row.convertedBrokerage) && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.currency\",\n          options: {\n            value: {\n              number: row === null || row === void 0 ? void 0 : row.convertedBrokerage.value,\n              currency: 'GBP'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 13\n        }, _this), \" @\", /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.number\",\n          options: {\n            value: {\n              number: row === null || row === void 0 ? void 0 : row.convertedBrokerage.rate,\n              format: {\n                trimMantissa: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true)]\n    }, void 0, true);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    display: \"inline-block\",\n    width: \"100%\",\n    children: /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(TableContainer, {\n        className: classes.tableContainer,\n        children: /*#__PURE__*/_jsxDEV(Table, {\n          className: classes.dataTable,\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            nestedClasses: {\n              tableHead: classes.tableHead\n            },\n            columns: fields === null || fields === void 0 ? void 0 : fields.arrayItemDef\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 108,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            className: classes.tableBody,\n            children: utils.generic.isValidArray(tableRows, true) ? tableRows === null || tableRows === void 0 ? void 0 : tableRows.map(function (row) {\n              var _classnames;\n\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                className: classnames((_classnames = {}, _defineProperty(_classnames, classes.tableRowNonClickable, !isTableEditable), _defineProperty(_classnames, classes.tableRow, isTableEditable), _defineProperty(_classnames, classes.selectedRow, row.isRowSelected), _classnames)),\n                children: fields.arrayItemDef.map(function (column, defIndex) {\n                  var _column$actions, _column$actions2, _row$column$id;\n\n                  var ppwOrPpcDateValue = column.type === 'datepicker' || column.type === 'customDatepicker' ? row.ppwOrPpcDate ? moment(row.ppwOrPpcDate).format(column.format) : '-' : '';\n                  return column.visible && (row.isRowSelected ? /*#__PURE__*/_createElement(TableCell, _objectSpread(_objectSpread({\n                    onClick: function onClick(e) {\n                      return isTableEditable && (column === null || column === void 0 ? void 0 : column.type) !== 'actions' && handlers.handleTableRowClick(e, row);\n                    }\n                  }, row[column]), {}, {\n                    key: defIndex,\n                    width: row[column === null || column === void 0 ? void 0 : column.width],\n                    __self: _this,\n                    __source: {\n                      fileName: _jsxFileName,\n                      lineNumber: 131,\n                      columnNumber: 29\n                    }\n                  }), column.type === 'numericText' && /*#__PURE__*/_jsxDEV(NumberFormat, {\n                    value: row[column === null || column === void 0 ? void 0 : column.id],\n                    customInput: TextField,\n                    variant: 'outlined',\n                    fullWidth: true,\n                    isNumericString: true,\n                    thousandSeparator: false,\n                    onValueChange: function onValueChange(v) {\n                      handlers.handleTableTextboxChange(v, column, row);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 33\n                  }, _this), column.type === 'text' && /*#__PURE__*/_jsxDEV(TextField, {\n                    width: row[column === null || column === void 0 ? void 0 : column.width],\n                    name: \"fieldText\",\n                    type: \"text\",\n                    fullWidth: true,\n                    error: row[column === null || column === void 0 ? void 0 : column.error],\n                    disabled: column === null || column === void 0 ? void 0 : column.disabled,\n                    size: \"small\",\n                    inputProps: {\n                      inputMode: 'text'\n                    },\n                    value: row[column === null || column === void 0 ? void 0 : column.id],\n                    variant: \"outlined\",\n                    onChange: function onChange(e) {\n                      return handlers.handleTableTextboxChange(e, column, row);\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 151,\n                    columnNumber: 33\n                  }, _this), column.type === 'customText' && /*#__PURE__*/_jsxDEV(_Fragment, {\n                    children: [column.id === 'thirdPartyName' && /*#__PURE__*/_jsxDEV(TextField, {\n                      width: row[column === null || column === void 0 ? void 0 : column.width],\n                      name: \"fieldText\",\n                      type: \"text\",\n                      fullWidth: true,\n                      error: row[column === null || column === void 0 ? void 0 : column.error],\n                      disabled: (column === null || column === void 0 ? void 0 : column.disabled) || !row.thirdPartyCommissionSharing,\n                      title: (column === null || column === void 0 ? void 0 : column.disabled) || !row.thirdPartyCommissionSharing && column.tooltip,\n                      size: \"small\",\n                      inputProps: {\n                        inputMode: 'text'\n                      },\n                      value: row[column === null || column === void 0 ? void 0 : column.id],\n                      variant: \"outlined\",\n                      onChange: function onChange(e) {\n                        return handlers.handleTableTextboxChange(e, column, row);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 168,\n                      columnNumber: 37\n                    }, _this), column.id === 'pfInternalDepartment' && /*#__PURE__*/_jsxDEV(TextField, {\n                      width: row[column === null || column === void 0 ? void 0 : column.width],\n                      name: \"fieldText\",\n                      type: \"numeric\",\n                      fullWidth: true,\n                      inputProps: {\n                        inputMode: 'numeric',\n                        pattern: '[0-9]*'\n                      },\n                      error: row[column === null || column === void 0 ? void 0 : column.error],\n                      disabled: (column === null || column === void 0 ? void 0 : column.disabled) || !row.pfInternalCommissionSharing,\n                      title: (column === null || column === void 0 ? void 0 : column.disabled) || !row.pfInternalCommissionSharing && column.tooltip,\n                      size: \"small\",\n                      value: row[column === null || column === void 0 ? void 0 : column.id],\n                      variant: \"outlined\",\n                      onChange: function onChange(e) {\n                        return handlers.handleTableTextboxChange(e, column, row);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 184,\n                      columnNumber: 37\n                    }, _this)]\n                  }, void 0, true), column.type === 'datepicker' && /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    value: row[column === null || column === void 0 ? void 0 : column.id],\n                    inputVariant: \"outlined\",\n                    disabled: column === null || column === void 0 ? void 0 : column.disabled,\n                    name: column === null || column === void 0 ? void 0 : column.id,\n                    format: column.format,\n                    renderInput: function renderInput(params) {\n                      return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({}, params), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 208,\n                        columnNumber: 60\n                      }, _this);\n                    },\n                    placeholder: utils.string.t('app.selectDate'),\n                    onChange: function onChange(newValue) {\n                      if (utils.generic.isFunction(handlers.handleTableDatePickerChange)) {\n                        handlers.handleTableDatePickerChange(column === null || column === void 0 ? void 0 : column.id, newValue === null || newValue === void 0 ? void 0 : newValue.format('YYYY-MM-DD'), row);\n                      }\n                    },\n                    keyboardIcon: false ? /*#__PURE__*/_jsxDEV(TodayIcon, {\n                      className: classes.dateIcon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 45\n                    }, _this) : /*#__PURE__*/_jsxDEV(EventIcon, {\n                      className: classes.dateIcon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 216,\n                      columnNumber: 90\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 33\n                  }, _this), column.type === 'customDatepicker' && /*#__PURE__*/_jsxDEV(KeyboardDatePicker, {\n                    value: row[column === null || column === void 0 ? void 0 : column.id],\n                    inputVariant: \"outlined\",\n                    disabled: !row.ppwOrPpcName || row.ppwOrPpcName === 'N/A',\n                    title: !row.ppwOrPpcName || row.ppwOrPpcName === 'N/A' ? column.tooltip : '',\n                    name: column === null || column === void 0 ? void 0 : column.id,\n                    format: column.format,\n                    renderInput: function renderInput(params) {\n                      return /*#__PURE__*/_jsxDEV(TextField, _objectSpread({}, params), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 228,\n                        columnNumber: 60\n                      }, _this);\n                    },\n                    placeholder: utils.string.t('app.selectDate'),\n                    onChange: function onChange(newValue) {\n                      if (utils.generic.isFunction(handlers.handleTableDatePickerChange)) {\n                        handlers.handleTableDatePickerChange(column === null || column === void 0 ? void 0 : column.id, newValue === null || newValue === void 0 ? void 0 : newValue.format('YYYY-MM-DD'), row);\n                      }\n                    },\n                    keyboardIcon: false ? /*#__PURE__*/_jsxDEV(TodayIcon, {\n                      className: classes.dateIcon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 45\n                    }, _this) : /*#__PURE__*/_jsxDEV(EventIcon, {\n                      className: classes.dateIcon\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 236,\n                      columnNumber: 90\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 221,\n                    columnNumber: 33\n                  }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'select' && /*#__PURE__*/_jsxDEV(Select, {\n                    fullWidth: true,\n                    variant: \"outlined\",\n                    onChange: function onChange(e, data) {\n                      handlers.handleTableSelectChange(e, {\n                        name: data === null || data === void 0 ? void 0 : data.props.name,\n                        value: data === null || data === void 0 ? void 0 : data.props.value\n                      }, column, row);\n                    },\n                    value: row[column === null || column === void 0 ? void 0 : column.id],\n                    children: utils.generic.isValidArray(column === null || column === void 0 ? void 0 : column.options, true) && column.options.map(function (option) {\n                      return /*#__PURE__*/_jsxDEV(MenuItem, {\n                        disabled: option.disabled,\n                        name: option[column === null || column === void 0 ? void 0 : column.optionLabel],\n                        value: option[column === null || column === void 0 ? void 0 : column.optionKey],\n                        children: option[column === null || column === void 0 ? void 0 : column.optionLabel]\n                      }, \"\".concat(option[column === null || column === void 0 ? void 0 : column.optionLabel], \"-\").concat(option[column === null || column === void 0 ? void 0 : column.optionKey]), false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 260,\n                        columnNumber: 41\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 241,\n                    columnNumber: 33\n                  }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'checkbox' && /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: row[column === null || column === void 0 ? void 0 : column.id],\n                    size: \"small\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 272,\n                    columnNumber: 63\n                  }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'label' && /*#__PURE__*/_jsxDEV(Box, {\n                    children: row[column === null || column === void 0 ? void 0 : column.id]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 273,\n                    columnNumber: 60\n                  }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'retainedBrokeragelabel' && /*#__PURE__*/_jsxDEV(Box, {\n                    pl: 1,\n                    className: classes.brokerageLabel,\n                    children: retainBrokerAmountDetails(row)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 275,\n                    columnNumber: 33\n                  }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'actions' && /*#__PURE__*/_jsxDEV(Box, {\n                    pl: 1,\n                    display: 'flex',\n                    children: [row.id > 0 && (column === null || column === void 0 ? void 0 : (_column$actions = column.actions) === null || _column$actions === void 0 ? void 0 : _column$actions.includes('copy')) && copyIcon(row.id), (column === null || column === void 0 ? void 0 : (_column$actions2 = column.actions) === null || _column$actions2 === void 0 ? void 0 : _column$actions2.includes('cancel')) && cancelIcon(row)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 280,\n                    columnNumber: 33\n                  }, _this)) : /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    title: isTableEditable && (column === null || column === void 0 ? void 0 : column.type) !== 'actions' && utils.string.t('app.editRowTooltip'),\n                    onClick: function onClick(e) {\n                      return isTableEditable && (column === null || column === void 0 ? void 0 : column.type) !== 'actions' && handlers.handleTableRowClick(e, row);\n                    }\n                  }, row[column]), {}, {\n                    width: row[column === null || column === void 0 ? void 0 : column.width],\n                    className: classes.tableCellLabel,\n                    children: [(column === null || column === void 0 ? void 0 : column.type) === 'checkbox' && /*#__PURE__*/_jsxDEV(Checkbox, {\n                      checked: row[column === null || column === void 0 ? void 0 : column.id],\n                      size: \"small\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 295,\n                      columnNumber: 63\n                    }, _this), (column === null || column === void 0 ? void 0 : column.type) !== 'checkbox' && (column === null || column === void 0 ? void 0 : column.type) !== 'actions' && (column === null || column === void 0 ? void 0 : column.type) !== 'datepicker' && (column === null || column === void 0 ? void 0 : column.type) !== 'customDatepicker' && (column === null || column === void 0 ? void 0 : column.type) !== 'select' && (column === null || column === void 0 ? void 0 : column.type) !== 'retainedBrokeragelabel' && (row[column === null || column === void 0 ? void 0 : column.id] || '-'), (column === null || column === void 0 ? void 0 : column.type) === 'retainedBrokeragelabel' && /*#__PURE__*/_jsxDEV(Box, {\n                      className: classes.brokerageLabel,\n                      children: retainBrokerAmountDetails(row)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 304,\n                      columnNumber: 33\n                    }, _this), (column === null || column === void 0 ? void 0 : column.type) === 'select' && (((_row$column$id = row[column === null || column === void 0 ? void 0 : column.id]) === null || _row$column$id === void 0 ? void 0 : _row$column$id.value) || row[column === null || column === void 0 ? void 0 : column.displayName] || '-'), (column === null || column === void 0 ? void 0 : column.type) === 'datepicker' && (row[column === null || column === void 0 ? void 0 : column.id] || '-'), (column === null || column === void 0 ? void 0 : column.type) === 'customDatepicker' && (column.id === 'ppwOrPpcDate' ? ppwOrPpcDateValue || '-' : row[column === null || column === void 0 ? void 0 : column.id] || '-'), (column === null || column === void 0 ? void 0 : column.type) === 'actions' && row.id > 0 && copyIcon(row.id)]\n                  }), defIndex, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 287,\n                    columnNumber: 29\n                  }, _this));\n                })\n              }, row.id, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 21\n              }, _this);\n            }) : /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: (fields === null || fields === void 0 ? void 0 : (_fields$arrayItemDef = fields.arrayItemDef) === null || _fields$arrayItemDef === void 0 ? void 0 : _fields$arrayItemDef.length) || 5,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  display: 'flex',\n                  justifyContent: 'center',\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.tableCellLabel,\n                    children: utils.string.t('app.editableTableNoData')\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 322,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 321,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 320,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 319,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 107,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 106,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 104,\n    columnNumber: 5\n  }, this);\n}\n_c = EditableTableView;\nEditableTableView.displayName = \"EditableTableView\";\nEditableTableView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditableTableView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"arrayItemDef\": {\n            \"name\": \"array\",\n            \"required\": false\n          },\n          \"fieldData\": {\n            \"name\": \"array\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tableRows\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isTableEditable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"handleTableTextboxChange\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleTableRowClick\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleTableDatePickerChange\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleTableCopyRowData\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleTableSelectChange\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"handleTableUndoRowData\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\EditableTable\\\\EditableTable.view.js\"] = {\n    name: \"EditableTableView\",\n    docgenInfo: EditableTableView.__docgenInfo,\n    path: \"src\\\\components\\\\EditableTable\\\\EditableTable.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditableTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/EditableTable/EditableTable.view.js"],"names":["React","Fragment","classnames","PropTypes","moment","NumberFormat","styles","TableHead","TableCell","Button","Overflow","Translate","utils","constants","makeStyles","Box","Typography","Table","TableBody","MenuItem","TableRow","Select","Checkbox","TextField","TableContainer","FileCopyIcon","UndoIcon","KeyboardDatePicker","TodayIcon","EventIcon","EditableTableView","propTypes","fields","shape","arrayItemDef","array","fieldData","tableRows","isTableEditable","bool","handlers","handleTableTextboxChange","func","handleTableRowClick","handleTableDatePickerChange","handleTableCopyRowData","handleTableSelectChange","handleTableUndoRowData","classes","name","copyIcon","index","title","string","t","cancelIcon","row","retainBrokerAmountDetails","value","number","retainedBrokerageAmount","currency","retainedBrokerageCurrencyCodeName","CURRENCY_USD","convertedBrokerage","rate","format","trimMantissa","tableContainer","dataTable","tableHead","tableBody","generic","isValidArray","map","tableRowNonClickable","tableRow","selectedRow","isRowSelected","column","defIndex","ppwOrPpcDateValue","type","ppwOrPpcDate","visible","e","width","id","v","error","disabled","inputMode","thirdPartyCommissionSharing","tooltip","pattern","pfInternalCommissionSharing","params","newValue","isFunction","dateIcon","ppwOrPpcName","data","props","options","option","optionLabel","optionKey","brokerageLabel","actions","includes","tableCellLabel","displayName","length"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport NumberFormat from 'react-number-format';\r\n\r\n//app\r\nimport styles from './EditableTable.styles';\r\nimport { TableHead, TableCell, Button, Overflow, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport {\r\n  makeStyles,\r\n  Box,\r\n  Typography,\r\n  Table,\r\n  TableBody,\r\n  MenuItem,\r\n  TableRow,\r\n  Select,\r\n  Checkbox,\r\n  TextField,\r\n  TableContainer,\r\n} from '@material-ui/core';\r\nimport FileCopyIcon from '@material-ui/icons/FileCopy';\r\nimport UndoIcon from '@material-ui/icons/Undo';\r\nimport { KeyboardDatePicker } from '@material-ui/pickers';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\nimport EventIcon from '@material-ui/icons/Event';\r\n\r\nEditableTableView.propTypes = {\r\n  fields: PropTypes.shape({\r\n    arrayItemDef: PropTypes.array,\r\n    fieldData: PropTypes.array,\r\n  }),\r\n  tableRows: PropTypes.array,\r\n  isTableEditable: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    handleTableTextboxChange: PropTypes.func,\r\n    handleTableRowClick: PropTypes.func,\r\n    handleTableDatePickerChange: PropTypes.func,\r\n    handleTableCopyRowData: PropTypes.func,\r\n    handleTableSelectChange: PropTypes.func,\r\n    handleTableUndoRowData: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function EditableTableView({ fields, tableRows, isTableEditable, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'EditableTable' })();\r\n  const copyIcon = (index) => {\r\n    return (\r\n      <Button\r\n        icon={FileCopyIcon}\r\n        onClick={() => isTableEditable && handlers.handleTableCopyRowData(index)}\r\n        size=\"xsmall\"\r\n        variant=\"text\"\r\n        color=\"default\"\r\n        tooltip={{ title: utils.string.t('app.copyButtonToolTip') }}\r\n      />\r\n    );\r\n  };\r\n  const cancelIcon = (row) => {\r\n    return (\r\n      <Button\r\n        icon={UndoIcon}\r\n        onClick={() => isTableEditable && handlers.handleTableUndoRowData(row)}\r\n        size=\"xsmall\"\r\n        variant=\"text\"\r\n        color=\"default\"\r\n        tooltip={{ title: utils.string.t('app.undoButtonToolTip') }}\r\n      />\r\n    );\r\n  };\r\n  const retainBrokerAmountDetails = (row) => {\r\n    return (\r\n      <>\r\n        <Translate\r\n          label=\"format.currency\"\r\n          options={{\r\n            value: {\r\n              number: row?.retainedBrokerageAmount,\r\n              currency: row.retainedBrokerageCurrencyCodeName || constants.CURRENCY_USD,\r\n            },\r\n          }}\r\n        />\r\n        {row?.convertedBrokerage && (\r\n          <>\r\n            <br />\r\n            <Translate label=\"format.currency\" options={{ value: { number: row?.convertedBrokerage.value, currency: 'GBP' } }} /> @\r\n            <Translate\r\n              label=\"format.number\"\r\n              options={{\r\n                value: { number: row?.convertedBrokerage.rate, format: { trimMantissa: false } },\r\n              }}\r\n            />\r\n          </>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <Box display=\"inline-block\" width=\"100%\">\r\n      <Overflow>\r\n        <TableContainer className={classes.tableContainer}>\r\n          <Table className={classes.dataTable} size=\"small\">\r\n            <TableHead nestedClasses={{ tableHead: classes.tableHead }} columns={fields?.arrayItemDef} />\r\n            <TableBody className={classes.tableBody}>\r\n              {utils.generic.isValidArray(tableRows, true) ? (\r\n                tableRows?.map((row) => {\r\n                  return (\r\n                    <TableRow\r\n                      key={row.id}\r\n                      className={classnames({\r\n                        [classes.tableRowNonClickable]: !isTableEditable,\r\n                        [classes.tableRow]: isTableEditable,\r\n                        [classes.selectedRow]: row.isRowSelected,\r\n                      })}\r\n                    >\r\n                      {fields.arrayItemDef.map((column, defIndex) => {\r\n                        const ppwOrPpcDateValue =\r\n                          column.type === 'datepicker' || column.type === 'customDatepicker'\r\n                            ? row.ppwOrPpcDate\r\n                              ? moment(row.ppwOrPpcDate).format(column.format)\r\n                              : '-'\r\n                            : '';\r\n                        return (\r\n                          column.visible &&\r\n                          (row.isRowSelected ? (\r\n                            <TableCell\r\n                              onClick={(e) => isTableEditable && column?.type !== 'actions' && handlers.handleTableRowClick(e, row)}\r\n                              {...row[column]}\r\n                              key={defIndex}\r\n                              width={row[column?.width]}\r\n                            >\r\n                              {column.type === 'numericText' && (\r\n                                <NumberFormat\r\n                                  value={row[column?.id]}\r\n                                  customInput={TextField}\r\n                                  variant={'outlined'}\r\n                                  fullWidth={true}\r\n                                  isNumericString\r\n                                  thousandSeparator={false}\r\n                                  onValueChange={(v) => {\r\n                                    handlers.handleTableTextboxChange(v, column, row);\r\n                                  }}\r\n                                />\r\n                              )}\r\n                              {column.type === 'text' && (\r\n                                <TextField\r\n                                  width={row[column?.width]}\r\n                                  name=\"fieldText\"\r\n                                  type=\"text\"\r\n                                  fullWidth\r\n                                  error={row[column?.error]}\r\n                                  disabled={column?.disabled}\r\n                                  size=\"small\"\r\n                                  inputProps={{ inputMode: 'text' }}\r\n                                  value={row[column?.id]}\r\n                                  variant=\"outlined\"\r\n                                  onChange={(e) => handlers.handleTableTextboxChange(e, column, row)}\r\n                                />\r\n                              )}\r\n                              {column.type === 'customText' && (\r\n                                <>\r\n                                  {column.id === 'thirdPartyName' && (\r\n                                    <TextField\r\n                                      width={row[column?.width]}\r\n                                      name=\"fieldText\"\r\n                                      type=\"text\"\r\n                                      fullWidth\r\n                                      error={row[column?.error]}\r\n                                      disabled={column?.disabled || !row.thirdPartyCommissionSharing}\r\n                                      title={column?.disabled || (!row.thirdPartyCommissionSharing && column.tooltip)}\r\n                                      size=\"small\"\r\n                                      inputProps={{ inputMode: 'text' }}\r\n                                      value={row[column?.id]}\r\n                                      variant=\"outlined\"\r\n                                      onChange={(e) => handlers.handleTableTextboxChange(e, column, row)}\r\n                                    />\r\n                                  )}\r\n                                  {column.id === 'pfInternalDepartment' && (\r\n                                    <TextField\r\n                                      width={row[column?.width]}\r\n                                      name=\"fieldText\"\r\n                                      type=\"numeric\"\r\n                                      fullWidth\r\n                                      inputProps={{ inputMode: 'numeric', pattern: '[0-9]*' }}\r\n                                      error={row[column?.error]}\r\n                                      disabled={column?.disabled || !row.pfInternalCommissionSharing}\r\n                                      title={column?.disabled || (!row.pfInternalCommissionSharing && column.tooltip)}\r\n                                      size=\"small\"\r\n                                      value={row[column?.id]}\r\n                                      variant=\"outlined\"\r\n                                      onChange={(e) => handlers.handleTableTextboxChange(e, column, row)}\r\n                                    />\r\n                                  )}\r\n                                </>\r\n                              )}\r\n                              {column.type === 'datepicker' && (\r\n                                <KeyboardDatePicker\r\n                                  value={row[column?.id]}\r\n                                  inputVariant=\"outlined\"\r\n                                  disabled={column?.disabled}\r\n                                  name={column?.id}\r\n                                  format={column.format}\r\n                                  renderInput={(params) => <TextField {...params} />}\r\n                                  placeholder={utils.string.t('app.selectDate')}\r\n                                  onChange={(newValue) => {\r\n                                    if (utils.generic.isFunction(handlers.handleTableDatePickerChange)) {\r\n                                      handlers.handleTableDatePickerChange(column?.id, newValue?.format('YYYY-MM-DD'), row);\r\n                                    }\r\n                                  }}\r\n                                  keyboardIcon={\r\n                                    false ? <TodayIcon className={classes.dateIcon} /> : <EventIcon className={classes.dateIcon} />\r\n                                  }\r\n                                />\r\n                              )}\r\n                              {column.type === 'customDatepicker' && (\r\n                                <KeyboardDatePicker\r\n                                  value={row[column?.id]}\r\n                                  inputVariant=\"outlined\"\r\n                                  disabled={!row.ppwOrPpcName || row.ppwOrPpcName === 'N/A'}\r\n                                  title={!row.ppwOrPpcName || row.ppwOrPpcName === 'N/A' ? column.tooltip : ''}\r\n                                  name={column?.id}\r\n                                  format={column.format}\r\n                                  renderInput={(params) => <TextField {...params} />}\r\n                                  placeholder={utils.string.t('app.selectDate')}\r\n                                  onChange={(newValue) => {\r\n                                    if (utils.generic.isFunction(handlers.handleTableDatePickerChange)) {\r\n                                      handlers.handleTableDatePickerChange(column?.id, newValue?.format('YYYY-MM-DD'), row);\r\n                                    }\r\n                                  }}\r\n                                  keyboardIcon={\r\n                                    false ? <TodayIcon className={classes.dateIcon} /> : <EventIcon className={classes.dateIcon} />\r\n                                  }\r\n                                />\r\n                              )}\r\n                              {column?.type === 'select' && (\r\n                                <Select\r\n                                  fullWidth\r\n                                  variant=\"outlined\"\r\n                                  onChange={(e, data) => {\r\n                                    handlers.handleTableSelectChange(\r\n                                      e,\r\n                                      {\r\n                                        name: data?.props.name,\r\n                                        value: data?.props.value,\r\n                                      },\r\n                                      column,\r\n                                      row\r\n                                    );\r\n                                  }}\r\n                                  value={row[column?.id]}\r\n                                >\r\n                                  {utils.generic.isValidArray(column?.options, true) &&\r\n                                    column.options.map((option) => {\r\n                                      return (\r\n                                        <MenuItem\r\n                                          key={`${option[column?.optionLabel]}-${option[column?.optionKey]}`}\r\n                                          disabled={option.disabled}\r\n                                          name={option[column?.optionLabel]}\r\n                                          value={option[column?.optionKey]}\r\n                                        >\r\n                                          {option[column?.optionLabel]}\r\n                                        </MenuItem>\r\n                                      );\r\n                                    })}\r\n                                </Select>\r\n                              )}\r\n                              {column?.type === 'checkbox' && <Checkbox checked={row[column?.id]} size=\"small\" />}\r\n                              {column?.type === 'label' && <Box>{row[column?.id]}</Box>}\r\n                              {column?.type === 'retainedBrokeragelabel' && (\r\n                                <Box pl={1} className={classes.brokerageLabel}>\r\n                                  {retainBrokerAmountDetails(row)}\r\n                                </Box>\r\n                              )}\r\n                              {column?.type === 'actions' && (\r\n                                <Box pl={1} display={'flex'}>\r\n                                  {row.id > 0 && column?.actions?.includes('copy') && copyIcon(row.id)}\r\n                                  {column?.actions?.includes('cancel') && cancelIcon(row)}\r\n                                </Box>\r\n                              )}\r\n                            </TableCell>\r\n                          ) : (\r\n                            <TableCell\r\n                              title={isTableEditable && column?.type !== 'actions' && utils.string.t('app.editRowTooltip')}\r\n                              onClick={(e) => isTableEditable && column?.type !== 'actions' && handlers.handleTableRowClick(e, row)}\r\n                              key={defIndex}\r\n                              {...row[column]}\r\n                              width={row[column?.width]}\r\n                              className={classes.tableCellLabel}\r\n                            >\r\n                              {column?.type === 'checkbox' && <Checkbox checked={row[column?.id]} size=\"small\" />}\r\n                              {column?.type !== 'checkbox' &&\r\n                                column?.type !== 'actions' &&\r\n                                column?.type !== 'datepicker' &&\r\n                                column?.type !== 'customDatepicker' &&\r\n                                column?.type !== 'select' &&\r\n                                column?.type !== 'retainedBrokeragelabel' &&\r\n                                (row[column?.id] || '-')}\r\n                              {column?.type === 'retainedBrokeragelabel' && (\r\n                                <Box className={classes.brokerageLabel}>{retainBrokerAmountDetails(row)}</Box>\r\n                              )}\r\n                              {column?.type === 'select' && (row[column?.id]?.value || row[column?.displayName] || '-')}\r\n                              {column?.type === 'datepicker' && (row[column?.id] || '-')}\r\n                              {column?.type === 'customDatepicker' &&\r\n                                (column.id === 'ppwOrPpcDate' ? ppwOrPpcDateValue || '-' : row[column?.id] || '-')}\r\n                              {column?.type === 'actions' && row.id > 0 && copyIcon(row.id)}\r\n                            </TableCell>\r\n                          ))\r\n                        );\r\n                      })}\r\n                    </TableRow>\r\n                  );\r\n                })\r\n              ) : (\r\n                <TableRow hover>\r\n                  <TableCell colSpan={fields?.arrayItemDef?.length || 5}>\r\n                    <Box display={'flex'} justifyContent={'center'}>\r\n                      <Typography className={classes.tableCellLabel}>{utils.string.t('app.editableTableNoData')}</Typography>\r\n                    </Box>\r\n                  </TableCell>\r\n                </TableRow>\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </TableContainer>\r\n      </Overflow>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}