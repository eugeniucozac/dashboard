{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LocationsTable\\\\LocationsTable.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport numbro from 'numbro';\nimport get from 'lodash/get';\nimport classnames from 'classnames'; // app\n\nimport styles from './LocationsTable.styles';\nimport { Overflow, Pagination, TableCell, TableHead, Translate } from 'components'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLocationsTableView.propTypes = {\n  items: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.shape({\n      handleChangePage: PropTypes.func.isRequired,\n      handleChangeRowsPerPage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  selected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  handleClickRow: PropTypes.func.isRequired\n};\nLocationsTableView.defaultProps = {\n  pagination: {\n    obj: {},\n    handlers: {}\n  }\n};\nexport function LocationsTableView(_ref) {\n  var _this = this;\n\n  var items = _ref.items,\n      cols = _ref.cols,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      selected = _ref.selected,\n      handleClickRow = _ref.handleClickRow;\n  var classes = makeStyles(styles, {\n    name: 'LocationsTable'\n  })();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: {\n            by: sort.by,\n            direction: sort.direction\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"locations-list\",\n          children: items.map(function (location) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              onClick: handleClickRow(location),\n              className: classnames(classes.row, _defineProperty({}, classes.rowSelected, location.id === selected)),\n              \"data-testid\": \"overview-table-\".concat(location.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"overview-table-location-\".concat(location.id),\n                children: location.streetAddress\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"overview-table-city-\".concat(location.id),\n                children: location.city\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"overview-table-state-\".concat(location.id),\n                children: location.state\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 59,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"overview-table-tiv-\".concat(location.id),\n                children: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"format.currency\",\n                  options: {\n                    value: {\n                      number: numbro.unformat(location.totalInsurableValues)\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 19\n              }, _this)]\n            }, location.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: get(pagination, 'obj.page'),\n      count: get(pagination, 'obj.rowsTotal'),\n      rowsPerPage: get(pagination, 'obj.rowsPerPage'),\n      onChangePage: get(pagination, 'handlers.handleChangePage'),\n      onChangeRowsPerPage: get(pagination, 'handlers.handleChangeRowsPerPage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = LocationsTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationsTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LocationsTable/LocationsTable.view.js"],"names":["React","PropTypes","numbro","get","classnames","styles","Overflow","Pagination","TableCell","TableHead","Translate","makeStyles","Table","TableRow","TableBody","LocationsTableView","propTypes","items","array","isRequired","cols","sort","object","pagination","shape","obj","handlers","handleChangePage","func","handleChangeRowsPerPage","selected","oneOfType","number","string","handleClickRow","defaultProps","classes","name","table","by","direction","map","location","row","rowSelected","id","streetAddress","city","state","value","unformat","totalInsurableValues"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport numbro from 'numbro';\r\nimport get from 'lodash/get';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './LocationsTable.styles';\r\nimport { Overflow, Pagination, TableCell, TableHead, Translate } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\r\n\r\nLocationsTableView.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.shape({\r\n      handleChangePage: PropTypes.func.isRequired,\r\n      handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  selected: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  handleClickRow: PropTypes.func.isRequired,\r\n};\r\n\r\nLocationsTableView.defaultProps = {\r\n  pagination: {\r\n    obj: {},\r\n    handlers: {},\r\n  },\r\n};\r\n\r\nexport function LocationsTableView({ items, cols, sort, pagination, selected, handleClickRow }) {\r\n  const classes = makeStyles(styles, { name: 'LocationsTable' })();\r\n\r\n  return (\r\n    <>\r\n      <Overflow>\r\n        <Table size=\"small\" className={classes.table}>\r\n          <TableHead columns={cols} sorting={{ by: sort.by, direction: sort.direction }} />\r\n\r\n          <TableBody data-testid=\"locations-list\">\r\n            {items.map((location) => {\r\n              return (\r\n                <TableRow\r\n                  key={location.id}\r\n                  hover\r\n                  onClick={handleClickRow(location)}\r\n                  className={classnames(classes.row, { [classes.rowSelected]: location.id === selected })}\r\n                  data-testid={`overview-table-${location.id}`}\r\n                >\r\n                  <TableCell data-testid={`overview-table-location-${location.id}`}>{location.streetAddress}</TableCell>\r\n\r\n                  <TableCell data-testid={`overview-table-city-${location.id}`}>{location.city}</TableCell>\r\n\r\n                  <TableCell data-testid={`overview-table-state-${location.id}`}>{location.state}</TableCell>\r\n\r\n                  <TableCell data-testid={`overview-table-tiv-${location.id}`}>\r\n                    <Translate label=\"format.currency\" options={{ value: { number: numbro.unformat(location.totalInsurableValues) } }} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      <Pagination\r\n        page={get(pagination, 'obj.page')}\r\n        count={get(pagination, 'obj.rowsTotal')}\r\n        rowsPerPage={get(pagination, 'obj.rowsPerPage')}\r\n        onChangePage={get(pagination, 'handlers.handleChangePage')}\r\n        onChangeRowsPerPage={get(pagination, 'handlers.handleChangeRowsPerPage')}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}