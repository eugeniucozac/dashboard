{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossDetail\\\\LossDetail.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux';\nimport moment from 'moment'; // app\n\nimport styles from './LossDetail.styles';\nimport { Info, Accordion, TableHead, TableCell, Overflow, Skeleton, Chip, Link } from 'components';\nimport { STATUS_CLAIMS_DRAFT, STATUS_NOT_APPLICABLE } from 'consts';\nimport { setClaimsTabSelectedItem } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, Typography, Grid, Table, TableBody, TableRow, Divider } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossDetailView.propTypes = {\n  columns: PropTypes.array.isRequired,\n  lossInfo: PropTypes.array.isRequired,\n  lossRef: PropTypes.string.isRequired,\n  claimsAssociateWithLoss: PropTypes.array.isRequired,\n  isClaimAssociateWithLossLoading: PropTypes.bool.isRequired\n};\nexport default function LossDetailView(_ref) {\n  _s();\n\n  var _useState3,\n      _this = this;\n\n  var columns = _ref.columns,\n      lossInfo = _ref.lossInfo,\n      lossRef = _ref.lossRef,\n      claimsAssociateWithLoss = _ref.claimsAssociateWithLoss,\n      isClaimAssociateWithLossLoading = _ref.isClaimAssociateWithLossLoading;\n  var classes = makeStyles(styles, {\n    name: 'LossDetail'\n  })();\n  var history = useHistory();\n  var dispatch = useDispatch();\n\n  var _useState = useState((_useState3 = {}, _defineProperty(_useState3, utils.string.t('claims.loss.lossInformation.title'), true), _defineProperty(_useState3, utils.string.t('claims.loss.relatedClaims.title'), true), _useState3)),\n      _useState2 = _slicedToArray(_useState, 2),\n      accordionsExpandStatus = _useState2[0],\n      setAccordiansStatus = _useState2[1];\n\n  var checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n    return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== (STATUS_CLAIMS_DRAFT === null || STATUS_CLAIMS_DRAFT === void 0 ? void 0 : STATUS_CLAIMS_DRAFT.toUpperCase());\n  })) : false;\n\n  var setAccordiansIsExpanded = function setAccordiansIsExpanded(cardName, isExpand) {\n    var accordionsStatus = _objectSpread({}, accordionsExpandStatus);\n\n    accordionsStatus[cardName] = isExpand;\n    setAccordiansStatus(accordionsStatus);\n  };\n\n  var lossRefHandler = function lossRefHandler(event, claimObj) {\n    if (event.detail === 2 && (claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference)) {\n      dispatch(setClaimsTabSelectedItem(claimObj, true));\n      history.push({\n        pathname: \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat(claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference),\n        state: {\n          isInflightClaim: claimObj === null || claimObj === void 0 ? void 0 : claimObj.isInflightClaim\n        }\n      });\n    }\n  };\n\n  var claimRefHandler = function claimRefHandler(claimObj) {\n    return function (event) {\n      event.stopPropagation();\n\n      if (claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference) {\n        dispatch(setClaimsTabSelectedItem(claimObj, true));\n        history.push(\"\".concat(config.routes.claimsFNOL.claim, \"/\").concat(claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference));\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: [/*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: accordionsExpandStatus[utils.string.t('claims.loss.lossInformation.title')],\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"body2\",\n        children: utils.string.t('claims.loss.lossInformation.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, this),\n      actions: [{\n        id: 'edit',\n        icon: Edit,\n        color: 'primary',\n        onClick: function onClick() {\n          history.push({\n            pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n            state: {\n              isNewLoss: true,\n              redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n              loss: {\n                isNextDiabled: true,\n                isClaimSubmitted: checkClaimStatus\n              }\n            }\n          });\n        }\n      }],\n      onChange: function onChange(event, isExpanded) {\n        return setAccordiansIsExpanded(utils.string.t('claims.loss.lossInformation.title'), isExpanded);\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        width: \"100%\",\n        flexDirection: \"column\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: 2,\n          children: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n            return /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 6,\n              sm: 4,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(Info, {\n                title: info === null || info === void 0 ? void 0 : info.title,\n                description: (info === null || info === void 0 ? void 0 : info.value) || '',\n                showSkeleton: info === null || info === void 0 ? void 0 : info.isLoading\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 17\n              }, _this)\n            }, info === null || info === void 0 ? void 0 : info.title, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 15\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: accordionsExpandStatus[utils.string.t('claims.loss.relatedClaims.title')],\n      title: /*#__PURE__*/_jsxDEV(Typography, {\n        className: classes.title,\n        variant: \"body2\",\n        children: utils.string.t('claims.loss.relatedClaims.title')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 111,\n        columnNumber: 11\n      }, this),\n      onChange: function onChange(event, isExpanded) {\n        return setAccordiansIsExpanded(utils.string.t('claims.loss.relatedClaims.title'), isExpanded);\n      },\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          direction: \"column\",\n          children: /*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: columns\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                children: isClaimAssociateWithLossLoading ? /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: /*#__PURE__*/_jsxDEV(TableCell, {\n                    colSpan: columns === null || columns === void 0 ? void 0 : columns.length,\n                    children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                      height: 40,\n                      animation: \"wave\",\n                      displayNumber: 3\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 126,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 125,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 124,\n                  columnNumber: 21\n                }, this) : utils.generic.isValidArray(claimsAssociateWithLoss, true) && (claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.map(function (claim, index) {\n                  var _claim$claimReference;\n\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    onClick: function onClick(e) {\n                      return lossRefHandler(e, claim);\n                    },\n                    className: classes.claimRow,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      children: /*#__PURE__*/_jsxDEV(Link, {\n                        text: (claim === null || claim === void 0 ? void 0 : (_claim$claimReference = claim.claimReference) === null || _claim$claimReference === void 0 ? void 0 : _claim$claimReference.toString()) || STATUS_NOT_APPLICABLE,\n                        color: \"secondary\",\n                        onClick: claimRefHandler(claim)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 27\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 133,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.claimant) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 140,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.policyRef) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 141,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: moment(claim === null || claim === void 0 ? void 0 : claim.claimReceivedDate).format(config.ui.format.date.text) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 142,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.division) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 145,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.insured) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 146,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.riskDetails) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 147,\n                      columnNumber: 25\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      children: (claim === null || claim === void 0 ? void 0 : claim.claimStatus) || STATUS_NOT_APPLICABLE\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 148,\n                      columnNumber: 25\n                    }, _this)]\n                  }, index, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 132,\n                    columnNumber: 23\n                  }, _this);\n                }))\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 120,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 118,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 117,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Chip, {\n        label: \"\",\n        type: 'new',\n        nestedClasses: {\n          root: classes.inFlightMarksText\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 159,\n        columnNumber: 9\n      }, this), ' ', utils.string.t('claims.loss.relatedClaims.inFlightMarksText')]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossDetailView, \"Z7/dZGcC7Tw/TqzFBmk5gCEEZ3g=\", false, function () {\n  return [useHistory, useDispatch];\n});\n\n_c = LossDetailView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDetailView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossDetail/LossDetail.view.js"],"names":["React","useState","PropTypes","useHistory","useDispatch","moment","styles","Info","Accordion","TableHead","TableCell","Overflow","Skeleton","Chip","Link","STATUS_CLAIMS_DRAFT","STATUS_NOT_APPLICABLE","setClaimsTabSelectedItem","utils","config","makeStyles","Box","Typography","Grid","Table","TableBody","TableRow","Divider","Edit","LossDetailView","propTypes","columns","array","isRequired","lossInfo","lossRef","string","claimsAssociateWithLoss","isClaimAssociateWithLossLoading","bool","classes","name","history","dispatch","t","accordionsExpandStatus","setAccordiansStatus","checkClaimStatus","generic","isValidArray","Boolean","find","claim","claimStatus","toUpperCase","setAccordiansIsExpanded","cardName","isExpand","accordionsStatus","lossRefHandler","event","claimObj","detail","claimReference","push","pathname","routes","claimsFNOL","state","isInflightClaim","claimRefHandler","stopPropagation","wrapper","title","id","icon","color","onClick","newLoss","isNewLoss","redirectUrl","loss","isNextDiabled","isClaimSubmitted","isExpanded","map","info","value","isLoading","length","index","e","claimRow","toString","claimant","policyRef","claimReceivedDate","format","ui","date","text","division","insured","riskDetails","root","inFlightMarksText"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './LossDetail.styles';\r\nimport { Info, Accordion, TableHead, TableCell, Overflow, Skeleton, Chip, Link } from 'components';\r\nimport { STATUS_CLAIMS_DRAFT, STATUS_NOT_APPLICABLE } from 'consts';\r\nimport { setClaimsTabSelectedItem } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, Typography, Grid, Table, TableBody, TableRow, Divider } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nLossDetailView.propTypes = {\r\n  columns: PropTypes.array.isRequired,\r\n  lossInfo: PropTypes.array.isRequired,\r\n  lossRef: PropTypes.string.isRequired,\r\n  claimsAssociateWithLoss: PropTypes.array.isRequired,\r\n  isClaimAssociateWithLossLoading: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function LossDetailView({ columns, lossInfo, lossRef, claimsAssociateWithLoss, isClaimAssociateWithLossLoading }) {\r\n  const classes = makeStyles(styles, { name: 'LossDetail' })();\r\n\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const [accordionsExpandStatus, setAccordiansStatus] = useState({\r\n    [utils.string.t('claims.loss.lossInformation.title')]: true,\r\n    [utils.string.t('claims.loss.relatedClaims.title')]: true,\r\n  });\r\n\r\n  const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true)\r\n    ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== STATUS_CLAIMS_DRAFT?.toUpperCase()))\r\n    : false;\r\n\r\n  const setAccordiansIsExpanded = (cardName, isExpand) => {\r\n    const accordionsStatus = { ...accordionsExpandStatus };\r\n    accordionsStatus[cardName] = isExpand;\r\n    setAccordiansStatus(accordionsStatus);\r\n  };\r\n\r\n  const lossRefHandler = (event, claimObj) => {\r\n    if (event.detail === 2 && claimObj?.claimReference) {\r\n      dispatch(setClaimsTabSelectedItem(claimObj, true));\r\n      history.push({\r\n        pathname: `${config.routes.claimsFNOL.claim}/${claimObj?.claimReference}`,\r\n        state: {\r\n          isInflightClaim: claimObj?.isInflightClaim,\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const claimRefHandler = (claimObj) => (event) => {\r\n    event.stopPropagation();\r\n\r\n    if (claimObj?.claimReference) {\r\n      dispatch(setClaimsTabSelectedItem(claimObj, true));\r\n      history.push(`${config.routes.claimsFNOL.claim}/${claimObj?.claimReference}`);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Accordion\r\n        expanded={accordionsExpandStatus[utils.string.t('claims.loss.lossInformation.title')]}\r\n        title={\r\n          <Typography className={classes.title} variant=\"body2\">\r\n            {utils.string.t('claims.loss.lossInformation.title')}\r\n          </Typography>\r\n        }\r\n        actions={[\r\n          {\r\n            id: 'edit',\r\n            icon: Edit,\r\n            color: 'primary',\r\n            onClick: () => {\r\n              history.push({\r\n                pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n                state: {\r\n                  isNewLoss: true,\r\n                  redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n                  loss: { isNextDiabled: true, isClaimSubmitted: checkClaimStatus },\r\n                },\r\n              });\r\n            },\r\n          },\r\n        ]}\r\n        onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.loss.lossInformation.title'), isExpanded)}\r\n      >\r\n        <Box display=\"flex\" width=\"100%\" flexDirection=\"column\">\r\n          <Grid container spacing={2}>\r\n            {lossInfo?.map((info) => (\r\n              <Grid item xs={6} sm={4} md={3} key={info?.title}>\r\n                <Info title={info?.title} description={info?.value || ''} showSkeleton={info?.isLoading} />\r\n              </Grid>\r\n            ))}\r\n          </Grid>\r\n        </Box>\r\n      </Accordion>\r\n      <Divider />\r\n      <Accordion\r\n        expanded={accordionsExpandStatus[utils.string.t('claims.loss.relatedClaims.title')]}\r\n        title={\r\n          <Typography className={classes.title} variant=\"body2\">\r\n            {utils.string.t('claims.loss.relatedClaims.title')}\r\n          </Typography>\r\n        }\r\n        onChange={(event, isExpanded) => setAccordiansIsExpanded(utils.string.t('claims.loss.relatedClaims.title'), isExpanded)}\r\n      >\r\n        <Grid item xs={12}>\r\n          <Grid container direction=\"column\">\r\n            <Overflow>\r\n              <Table>\r\n                <TableHead columns={columns} />\r\n                <TableBody>\r\n                  {isClaimAssociateWithLossLoading ? (\r\n                    <TableRow>\r\n                      <TableCell colSpan={columns?.length}>\r\n                        <Skeleton height={40} animation=\"wave\" displayNumber={3} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  ) : (\r\n                    utils.generic.isValidArray(claimsAssociateWithLoss, true) &&\r\n                    claimsAssociateWithLoss?.map((claim, index) => (\r\n                      <TableRow hover key={index} onClick={(e) => lossRefHandler(e, claim)} className={classes.claimRow}>\r\n                        <TableCell>\r\n                          <Link\r\n                            text={claim?.claimReference?.toString() || STATUS_NOT_APPLICABLE}\r\n                            color=\"secondary\"\r\n                            onClick={claimRefHandler(claim)}\r\n                          />\r\n                        </TableCell>\r\n                        <TableCell>{claim?.claimant || STATUS_NOT_APPLICABLE}</TableCell>\r\n                        <TableCell>{claim?.policyRef || STATUS_NOT_APPLICABLE}</TableCell>\r\n                        <TableCell>\r\n                          {moment(claim?.claimReceivedDate).format(config.ui.format.date.text) || STATUS_NOT_APPLICABLE}\r\n                        </TableCell>\r\n                        <TableCell>{claim?.division || STATUS_NOT_APPLICABLE}</TableCell>\r\n                        <TableCell>{claim?.insured || STATUS_NOT_APPLICABLE}</TableCell>\r\n                        <TableCell>{claim?.riskDetails || STATUS_NOT_APPLICABLE}</TableCell>\r\n                        <TableCell>{claim?.claimStatus || STATUS_NOT_APPLICABLE}</TableCell>\r\n                      </TableRow>\r\n                    ))\r\n                  )}\r\n                </TableBody>\r\n              </Table>\r\n            </Overflow>\r\n          </Grid>\r\n        </Grid>\r\n      </Accordion>\r\n      <div>\r\n        <Chip label=\"\" type={'new'} nestedClasses={{ root: classes.inFlightMarksText }} />{' '}\r\n        {utils.string.t('claims.loss.relatedClaims.inFlightMarksText')}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}