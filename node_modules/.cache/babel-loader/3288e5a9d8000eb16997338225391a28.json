{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PolicyTableRow\\\\PolicyTableRow.js\";\nimport React, { Fragment, PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport has from 'lodash/has'; // app\n\nimport styles from './PolicyTableRow.styles';\nimport { InlineEdit, PopoverMenu, Restricted, Status, TableCell, TableCheckbox, TrafficLights, Translate } from 'components';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { withStyles, TableRow, Typography } from '@material-ui/core'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    referenceDataStatusesPolicy: get(state, 'referenceData.statuses.policy', []),\n    referenceDataStatusesPolicyMarketQuote: get(state, 'referenceData.statuses.policyMarketQuote', [])\n  };\n};\n\nexport var PolicyTableRow = /*#__PURE__*/function (_PureComponent) {\n  _inherits(PolicyTableRow, _PureComponent);\n\n  var _super = _createSuper(PolicyTableRow);\n\n  function PolicyTableRow() {\n    _classCallCheck(this, PolicyTableRow);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(PolicyTableRow, [{\n    key: \"render\",\n    value: function render() {\n      var _classesRow, _classesNotes;\n\n      var _this$props = this.props,\n          policy = _this$props.policy,\n          markets = _this$props.markets,\n          isSelected = _this$props.isSelected,\n          isNextSelected = _this$props.isNextSelected,\n          isDisabled = _this$props.isDisabled,\n          isChecked = _this$props.isChecked,\n          isIndeterminate = _this$props.isIndeterminate,\n          isEditing = _this$props.isEditing,\n          showPremium = _this$props.showPremium,\n          showWritten = _this$props.showWritten,\n          showSigned = _this$props.showSigned,\n          showStatus = _this$props.showStatus,\n          toggleOptions = _this$props.toggleOptions,\n          popoverItems = _this$props.popoverItems,\n          inlineEditValues = _this$props.inlineEditValues,\n          inlineEditOnClick = _this$props.inlineEditOnClick,\n          inlineEditOnClickAway = _this$props.inlineEditOnClickAway,\n          handleToggle = _this$props.handleToggle,\n          handleSelect = _this$props.handleSelect,\n          referenceDataStatusesPolicy = _this$props.referenceDataStatusesPolicy,\n          referenceDataStatusesPolicyMarketQuote = _this$props.referenceDataStatusesPolicyMarketQuote,\n          children = _this$props.children,\n          classes = _this$props.classes,\n          printView = _this$props.printView,\n          showHeaderRow = _this$props.showHeaderRow;\n      var statusPendingId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_PENDING);\n      var statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\n      var statusDeclinedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_DECLINED);\n      var statusPolicyNtuId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicy, constants.STATUS_POLICY_NTU);\n      var statusPolicyNtuLabel = utils.referenceData.status.getLabelById(referenceDataStatusesPolicy, statusPolicyNtuId);\n      var marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusQuotedId]);\n      var currency = utils.policy.getCurrency(policy);\n      var layerPremiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\n      var hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\n      var hasPremium = layerPremiumByCurrency[currency];\n      var layerName = utils.policy.getName(policy);\n      var layerWritten = utils.markets.getLineSize(marketsQuoted);\n      var layerSigned = utils.markets.getLineSize(marketsQuoted, true);\n      var isEditingNotes = isEditing && Array.isArray(isEditing) && isEditing.includes('notes');\n      var isSelectable = utils.generic.isFunction(handleSelect);\n      var isToggable = utils.generic.isFunction(handleToggle);\n      var isEditable = inlineEditValues && utils.generic.isFunction(inlineEditOnClick) && utils.generic.isFunction(inlineEditOnClickAway);\n      var isEditableNotes = isEditable && has(inlineEditValues, 'notes');\n      var isNtu = statusPolicyNtuLabel && policy.statusId === statusPolicyNtuId;\n      var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _defineProperty(_classesRow, classes.rowNextSelected, isNextSelected), _classesRow);\n      var classesNotes = (_classesNotes = {}, _defineProperty(_classesNotes, classes.notes, true), _defineProperty(_classesNotes, classes.notesWithContent, Boolean(isEditableNotes ? inlineEditValues['notes'] : policy.notes)), _classesNotes); // not the best way to apply styles :(\n      // but this makes the table column width more optimized, with less wasted space\n      // as opposed to a generic (larger) min-width using CSS\n\n      var minWidth = 40 + // checkbox width\n      layerName.length * 7.5 + ( // 7.5 is average character width\n      Boolean(isEditableNotes ? inlineEditValues['notes'] : policy.notes) ? 60 : 0) + ( // 60 is minimum notes width incl. margin\n      isNtu ? 60 : 0) + // 60 is approx chip width\n      'px';\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [showHeaderRow && /*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          onClick: isToggable ? handleToggle(toggleOptions) : undefined,\n          className: classnames(classesRow),\n          \"data-testid\": \"policy-row\",\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            minimal: true,\n            nowrap: true,\n            bold: true,\n            nestedClasses: {\n              root: classes.name\n            },\n            style: {\n              minWidth: minWidth\n            },\n            \"data-testid\": \"policy-main-cell\",\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.details,\n              children: [!printView && isSelectable && /*#__PURE__*/_jsxDEV(Restricted, {\n                include: [constants.ROLE_BROKER],\n                children: /*#__PURE__*/_jsxDEV(TableCheckbox, {\n                  checked: isChecked,\n                  disabled: isDisabled,\n                  indeterminate: isIndeterminate,\n                  handleClick: handleSelect(policy.id),\n                  tooltip: isDisabled ? {\n                    title: utils.string.t('placement.sheet.layersNotAllowed')\n                  } : undefined,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  },\n                  \"data-testid\": \"policy-row-checkbox\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classes.layer,\n                title: policy.notes && policy.notes.trim() ? policy.notes : undefined,\n                children: layerName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 161,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(\"span\", {\n                className: classnames(classesNotes),\n                children: [isEditableNotes && /*#__PURE__*/_jsxDEV(Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Restricted, {\n                    include: [constants.ROLE_BROKER],\n                    children: /*#__PURE__*/_jsxDEV(InlineEdit, {\n                      name: \"notes\",\n                      value: inlineEditValues['notes'],\n                      editing: isEditingNotes,\n                      title: true,\n                      onClick: inlineEditOnClick('notes', policy.id),\n                      onClickAway: inlineEditOnClickAway('notes', policy)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 169,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n                    include: [constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER],\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      noWrap: true,\n                      className: classes.notes,\n                      title: policy.notes,\n                      children: policy.notes\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 180,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 179,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 167,\n                  columnNumber: 21\n                }, this), !isEditableNotes && policy.notes]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 17\n              }, this), isNtu && /*#__PURE__*/_jsxDEV(Status, {\n                size: \"sm\",\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"status.ntu\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 27\n                }, this),\n                status: statusPolicyNtuLabel,\n                \"data-testid\": \"policy-status-\".concat(policy.id),\n                nestedClasses: {\n                  root: classes.status\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 145,\n            columnNumber: 13\n          }, this), showPremium && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"policy-premium-cell\",\n            children: hasMultiplePremiums || !currency ? utils.string.t('app.various') : /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.currency\",\n              options: {\n                value: {\n                  number: layerPremiumByCurrency[currency] || 0,\n                  currency: hasPremium ? currency : ''\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 206,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 202,\n            columnNumber: 15\n          }, this), showWritten && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"policy-written-cell\",\n            children: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.percent\",\n              options: {\n                value: {\n                  number: layerWritten\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this), showSigned && /*#__PURE__*/_jsxDEV(TableCell, {\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"policy-signed-cell\",\n            children: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"format.percent\",\n              options: {\n                value: {\n                  number: layerSigned,\n                  default: '-'\n                }\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, this), showStatus && /*#__PURE__*/_jsxDEV(TableCell, {\n            compact: true,\n            narrow: true,\n            nowrap: true,\n            center: true,\n            bold: true,\n            \"data-testid\": \"policy-status-cell\",\n            children: markets && markets.length > 0 && /*#__PURE__*/_jsxDEV(TrafficLights, {\n              tooltip: true,\n              green: utils.markets.getByStatusIds(markets, [statusQuotedId]).length,\n              yellow: utils.markets.getByStatusIds(markets, [statusPendingId]).length,\n              red: utils.markets.getByStatusIds(markets, [statusDeclinedId]).length\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n            menu: true,\n            \"data-testid\": \"policy-menu-cell\",\n            children: !printView && popoverItems && popoverItems.length > 0 && /*#__PURE__*/_jsxDEV(Restricted, {\n              include: [constants.ROLE_BROKER],\n              children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                id: \"market-sheet-policy\",\n                data: {\n                  title: utils.policy.getName(policy),\n                  type: 'policy',\n                  policy: policy\n                },\n                items: popoverItems\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 139,\n          columnNumber: 11\n        }, this), children]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return PolicyTableRow;\n}(PureComponent);\nPolicyTableRow.propTypes = {\n  printView: PropTypes.bool,\n  policy: PropTypes.object.isRequired,\n  markets: PropTypes.array,\n  isSelected: PropTypes.bool,\n  isNextSelected: PropTypes.bool,\n  isDisabled: PropTypes.bool,\n  isChecked: PropTypes.bool,\n  isIndeterminate: PropTypes.bool,\n  isEditing: PropTypes.array,\n  showPremium: PropTypes.bool,\n  showWritten: PropTypes.bool,\n  showSigned: PropTypes.bool,\n  showStatus: PropTypes.bool,\n  toggleOptions: PropTypes.object.isRequired,\n  popoverItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  })),\n  inlineEditValues: PropTypes.object,\n  inlineEditOnClick: PropTypes.func,\n  inlineEditOnClickAway: PropTypes.func,\n  handleToggle: PropTypes.func,\n  handleSelect: PropTypes.func\n};\nPolicyTableRow.defaultProps = {\n  printView: false,\n  showHeaderRow: true\n};\nexport default compose(connect(mapStateToProps, null), withStyles(styles))(PolicyTableRow);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PolicyTableRow/PolicyTableRow.js"],"names":["React","Fragment","PureComponent","PropTypes","connect","compose","classnames","get","has","styles","InlineEdit","PopoverMenu","Restricted","Status","TableCell","TableCheckbox","TrafficLights","Translate","utils","constants","withStyles","TableRow","Typography","mapStateToProps","state","referenceDataStatusesPolicy","referenceDataStatusesPolicyMarketQuote","PolicyTableRow","props","policy","markets","isSelected","isNextSelected","isDisabled","isChecked","isIndeterminate","isEditing","showPremium","showWritten","showSigned","showStatus","toggleOptions","popoverItems","inlineEditValues","inlineEditOnClick","inlineEditOnClickAway","handleToggle","handleSelect","children","classes","printView","showHeaderRow","statusPendingId","referenceData","status","getIdByCode","STATUS_MARKET_PENDING","statusQuotedId","STATUS_MARKET_QUOTED","statusDeclinedId","STATUS_MARKET_DECLINED","statusPolicyNtuId","STATUS_POLICY_NTU","statusPolicyNtuLabel","getLabelById","marketsQuoted","getByStatusIds","getMarkets","currency","getCurrency","layerPremiumByCurrency","getPremiumByCurrency","hasMultiplePremiums","hasPremium","layerName","getName","layerWritten","getLineSize","layerSigned","isEditingNotes","Array","isArray","includes","isSelectable","generic","isFunction","isToggable","isEditable","isEditableNotes","isNtu","statusId","classesRow","row","rowSelected","rowNextSelected","classesNotes","notes","notesWithContent","Boolean","minWidth","length","undefined","root","name","details","ROLE_BROKER","id","title","string","t","checkbox","layer","trim","ROLE_COBROKER","ROLE_UNDERWRITER","value","number","default","type","propTypes","bool","object","isRequired","array","arrayOf","shape","label","callback","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { Fragment, PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\nimport has from 'lodash/has';\r\n\r\n// app\r\nimport styles from './PolicyTableRow.styles';\r\nimport { InlineEdit, PopoverMenu, Restricted, Status, TableCell, TableCheckbox, TrafficLights, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { withStyles, TableRow, Typography } from '@material-ui/core';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  referenceDataStatusesPolicy: get(state, 'referenceData.statuses.policy', []),\r\n  referenceDataStatusesPolicyMarketQuote: get(state, 'referenceData.statuses.policyMarketQuote', []),\r\n});\r\n\r\nexport class PolicyTableRow extends PureComponent {\r\n  static propTypes = {\r\n    printView: PropTypes.bool,\r\n    policy: PropTypes.object.isRequired,\r\n    markets: PropTypes.array,\r\n    isSelected: PropTypes.bool,\r\n    isNextSelected: PropTypes.bool,\r\n    isDisabled: PropTypes.bool,\r\n    isChecked: PropTypes.bool,\r\n    isIndeterminate: PropTypes.bool,\r\n    isEditing: PropTypes.array,\r\n    showPremium: PropTypes.bool,\r\n    showWritten: PropTypes.bool,\r\n    showSigned: PropTypes.bool,\r\n    showStatus: PropTypes.bool,\r\n    toggleOptions: PropTypes.object.isRequired,\r\n    popoverItems: PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.string.isRequired,\r\n        label: PropTypes.string.isRequired,\r\n        callback: PropTypes.func.isRequired,\r\n      })\r\n    ),\r\n    inlineEditValues: PropTypes.object,\r\n    inlineEditOnClick: PropTypes.func,\r\n    inlineEditOnClickAway: PropTypes.func,\r\n    handleToggle: PropTypes.func,\r\n    handleSelect: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    printView: false,\r\n    showHeaderRow: true,\r\n  };\r\n\r\n  render() {\r\n    const {\r\n      policy,\r\n      markets,\r\n      isSelected,\r\n      isNextSelected,\r\n      isDisabled,\r\n      isChecked,\r\n      isIndeterminate,\r\n      isEditing,\r\n      showPremium,\r\n      showWritten,\r\n      showSigned,\r\n      showStatus,\r\n      toggleOptions,\r\n      popoverItems,\r\n      inlineEditValues,\r\n      inlineEditOnClick,\r\n      inlineEditOnClickAway,\r\n      handleToggle,\r\n      handleSelect,\r\n      referenceDataStatusesPolicy,\r\n      referenceDataStatusesPolicyMarketQuote,\r\n      children,\r\n      classes,\r\n      printView,\r\n      showHeaderRow,\r\n    } = this.props;\r\n\r\n    const statusPendingId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_PENDING);\r\n    const statusQuotedId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicyMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n    const statusDeclinedId = utils.referenceData.status.getIdByCode(\r\n      referenceDataStatusesPolicyMarketQuote,\r\n      constants.STATUS_MARKET_DECLINED\r\n    );\r\n    const statusPolicyNtuId = utils.referenceData.status.getIdByCode(referenceDataStatusesPolicy, constants.STATUS_POLICY_NTU);\r\n    const statusPolicyNtuLabel = utils.referenceData.status.getLabelById(referenceDataStatusesPolicy, statusPolicyNtuId);\r\n    const marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusQuotedId]);\r\n\r\n    const currency = utils.policy.getCurrency(policy);\r\n    const layerPremiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\r\n\r\n    const hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\r\n    const hasPremium = layerPremiumByCurrency[currency];\r\n\r\n    const layerName = utils.policy.getName(policy);\r\n    const layerWritten = utils.markets.getLineSize(marketsQuoted);\r\n    const layerSigned = utils.markets.getLineSize(marketsQuoted, true);\r\n\r\n    const isEditingNotes = isEditing && Array.isArray(isEditing) && isEditing.includes('notes');\r\n    const isSelectable = utils.generic.isFunction(handleSelect);\r\n    const isToggable = utils.generic.isFunction(handleToggle);\r\n    const isEditable = inlineEditValues && utils.generic.isFunction(inlineEditOnClick) && utils.generic.isFunction(inlineEditOnClickAway);\r\n    const isEditableNotes = isEditable && has(inlineEditValues, 'notes');\r\n    const isNtu = statusPolicyNtuLabel && policy.statusId === statusPolicyNtuId;\r\n\r\n    const classesRow = {\r\n      [classes.row]: true,\r\n      [classes.rowSelected]: isSelected,\r\n      [classes.rowNextSelected]: isNextSelected,\r\n    };\r\n\r\n    const classesNotes = {\r\n      [classes.notes]: true,\r\n      [classes.notesWithContent]: Boolean(isEditableNotes ? inlineEditValues['notes'] : policy.notes),\r\n    };\r\n\r\n    // not the best way to apply styles :(\r\n    // but this makes the table column width more optimized, with less wasted space\r\n    // as opposed to a generic (larger) min-width using CSS\r\n    const minWidth =\r\n      40 + // checkbox width\r\n      layerName.length * 7.5 + // 7.5 is average character width\r\n      (Boolean(isEditableNotes ? inlineEditValues['notes'] : policy.notes) ? 60 : 0) + // 60 is minimum notes width incl. margin\r\n      (isNtu ? 60 : 0) + // 60 is approx chip width\r\n      'px';\r\n\r\n    return (\r\n      <Fragment>\r\n        {showHeaderRow && (\r\n          <TableRow\r\n            hover\r\n            onClick={isToggable ? handleToggle(toggleOptions) : undefined}\r\n            className={classnames(classesRow)}\r\n            data-testid=\"policy-row\"\r\n          >\r\n            <TableCell minimal nowrap bold nestedClasses={{ root: classes.name }} style={{ minWidth }} data-testid=\"policy-main-cell\">\r\n              <div className={classes.details}>\r\n                {!printView && isSelectable && (\r\n                  <Restricted include={[constants.ROLE_BROKER]}>\r\n                    <TableCheckbox\r\n                      checked={isChecked}\r\n                      disabled={isDisabled}\r\n                      indeterminate={isIndeterminate}\r\n                      handleClick={handleSelect(policy.id)}\r\n                      tooltip={isDisabled ? { title: utils.string.t('placement.sheet.layersNotAllowed') } : undefined}\r\n                      nestedClasses={{ root: classes.checkbox }}\r\n                      data-testid=\"policy-row-checkbox\"\r\n                    />\r\n                  </Restricted>\r\n                )}\r\n\r\n                <span className={classes.layer} title={policy.notes && policy.notes.trim() ? policy.notes : undefined}>\r\n                  {layerName}\r\n                </span>\r\n\r\n                <span className={classnames(classesNotes)}>\r\n                  {isEditableNotes && (\r\n                    <Fragment>\r\n                      <Restricted include={[constants.ROLE_BROKER]}>\r\n                        <InlineEdit\r\n                          name=\"notes\"\r\n                          value={inlineEditValues['notes']}\r\n                          editing={isEditingNotes}\r\n                          title\r\n                          onClick={inlineEditOnClick('notes', policy.id)}\r\n                          onClickAway={inlineEditOnClickAway('notes', policy)}\r\n                        />\r\n                      </Restricted>\r\n\r\n                      <Restricted include={[constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER]}>\r\n                        <Typography variant=\"body2\" noWrap className={classes.notes} title={policy.notes}>\r\n                          {policy.notes}\r\n                        </Typography>\r\n                      </Restricted>\r\n                    </Fragment>\r\n                  )}\r\n                  {!isEditableNotes && policy.notes}\r\n                </span>\r\n\r\n                {isNtu && (\r\n                  <Status\r\n                    size=\"sm\"\r\n                    text={<Translate label=\"status.ntu\" />}\r\n                    status={statusPolicyNtuLabel}\r\n                    data-testid={`policy-status-${policy.id}`}\r\n                    nestedClasses={{ root: classes.status }}\r\n                  />\r\n                )}\r\n              </div>\r\n            </TableCell>\r\n\r\n            {showPremium && (\r\n              <TableCell narrow nowrap center bold data-testid=\"policy-premium-cell\">\r\n                {hasMultiplePremiums || !currency ? (\r\n                  utils.string.t('app.various')\r\n                ) : (\r\n                  <Translate\r\n                    label=\"format.currency\"\r\n                    options={{ value: { number: layerPremiumByCurrency[currency] || 0, currency: hasPremium ? currency : '' } }}\r\n                  />\r\n                )}\r\n              </TableCell>\r\n            )}\r\n\r\n            {showWritten && (\r\n              <TableCell narrow nowrap center bold data-testid=\"policy-written-cell\">\r\n                <Translate label=\"format.percent\" options={{ value: { number: layerWritten } }} />\r\n              </TableCell>\r\n            )}\r\n\r\n            {showSigned && (\r\n              <TableCell narrow nowrap center bold data-testid=\"policy-signed-cell\">\r\n                <Translate label=\"format.percent\" options={{ value: { number: layerSigned, default: '-' } }} />\r\n              </TableCell>\r\n            )}\r\n\r\n            {showStatus && (\r\n              <TableCell compact narrow nowrap center bold data-testid=\"policy-status-cell\">\r\n                {markets && markets.length > 0 && (\r\n                  <TrafficLights\r\n                    tooltip\r\n                    green={utils.markets.getByStatusIds(markets, [statusQuotedId]).length}\r\n                    yellow={utils.markets.getByStatusIds(markets, [statusPendingId]).length}\r\n                    red={utils.markets.getByStatusIds(markets, [statusDeclinedId]).length}\r\n                  />\r\n                )}\r\n              </TableCell>\r\n            )}\r\n\r\n            <TableCell menu data-testid=\"policy-menu-cell\">\r\n              {!printView && popoverItems && popoverItems.length > 0 && (\r\n                <Restricted include={[constants.ROLE_BROKER]}>\r\n                  <PopoverMenu\r\n                    id=\"market-sheet-policy\"\r\n                    data={{\r\n                      title: utils.policy.getName(policy),\r\n                      type: 'policy',\r\n                      policy: policy,\r\n                    }}\r\n                    items={popoverItems}\r\n                  />\r\n                </Restricted>\r\n              )}\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n        {/* market rows - displayed if layer is selected */}\r\n        {children}\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, null), withStyles(styles))(PolicyTableRow);\r\n"]},"metadata":{},"sourceType":"module"}