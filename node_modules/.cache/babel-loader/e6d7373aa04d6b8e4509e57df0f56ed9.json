{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionLevelTwo.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { LossActionRow } from './LossActionRow';\nimport { LossActionLevelClaim } from './LossActionLevelClaim';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LossActionLevelTwo(_ref) {\n  _s();\n\n  var _this = this;\n\n  var data = _ref.data,\n      columnProps = _ref.columnProps,\n      onClick = _ref.onClick;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(LossActionRow, {\n      columnProps: columnProps,\n      data: data,\n      padding: 0,\n      color: \"violet\",\n      isOpen: isOpen,\n      onClick: function onClick() {\n        return setIsOpen(!isOpen);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 11,\n      columnNumber: 13\n    }, this), data.actionChildItemList.map(function (itemLevelTwo, index) {\n      return itemLevelTwo.isClaim ? /*#__PURE__*/_jsxDEV(LossActionLevelClaim, {\n        data: itemLevelTwo,\n        columnProps: columnProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 22,\n        columnNumber: 15\n      }, _this) : /*#__PURE__*/_jsxDEV(LossActionRow, {\n        columnProps: columnProps,\n        data: itemLevelTwo,\n        padding: 25,\n        color: \"yellow\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 15\n      }, _this);\n    })]\n  }, void 0, true);\n}\n\n_s(LossActionLevelTwo, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = LossActionLevelTwo;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionLevelTwo\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionLevelTwo.js"],"names":["React","useState","LossActionRow","LossActionLevelClaim","LossActionLevelTwo","data","columnProps","onClick","isOpen","setIsOpen","actionChildItemList","map","itemLevelTwo","index","isClaim"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,SAASC,aAAT,QAA8B,iBAA9B;AACA,SAASC,oBAAT,QAAsC,wBAAtC;;;AAGA,OAAO,SAASC,kBAAT,OAAyD;AAAA;;AAAA;;AAAA,MAA5BC,IAA4B,QAA5BA,IAA4B;AAAA,MAAtBC,WAAsB,QAAtBA,WAAsB;AAAA,MAATC,OAAS,QAATA,OAAS;;AAAA,kBAChCN,QAAQ,CAAC,KAAD,CADwB;AAAA;AAAA,MACrDO,MADqD;AAAA,MAC7CC,SAD6C;;AAG5D,sBACI;AAAA,4BACI,QAAC,aAAD;AACE,MAAA,WAAW,EAAEH,WADf;AAEE,MAAA,IAAI,EAAED,IAFR;AAGE,MAAA,OAAO,EAAE,CAHX;AAIE,MAAA,KAAK,EAAC,QAJR;AAKE,MAAA,MAAM,EAAEG,MALV;AAME,MAAA,OAAO,EAAE;AAAA,eAAMC,SAAS,CAAC,CAACD,MAAF,CAAf;AAAA;AANX;AAAA;AAAA;AAAA;AAAA,YADJ,EASKH,IAAI,CAACK,mBAAL,CAAyBC,GAAzB,CAA6B,UAACC,YAAD,EAAeC,KAAf,EAAyB;AACnD,aAAOD,YAAY,CAACE,OAAb,gBAET,QAAC,oBAAD;AACA,QAAA,IAAI,EAAEF,YADN;AAEA,QAAA,WAAW,EAAEN;AAFb;AAAA;AAAA;AAAA;AAAA,eAFS,gBAQT,QAAC,aAAD;AACE,QAAA,WAAW,EAAEA,WADf;AAEE,QAAA,IAAI,EAAEM,YAFR;AAGE,QAAA,OAAO,EAAE,EAHX;AAIE,QAAA,KAAK,EAAC;AAJR;AAAA;AAAA;AAAA;AAAA,eARE;AAeL,KAhBE,CATL;AAAA,kBADJ;AA4BF;;GA/BcR,kB;;KAAAA,kB","sourcesContent":["import React, {useState} from 'react';\r\nimport { LossActionRow } from './LossActionRow';\r\nimport { LossActionLevelClaim  } from './LossActionLevelClaim';\r\n\r\n\r\nexport function LossActionLevelTwo({data, columnProps, onClick}){\r\n    const [isOpen, setIsOpen] = useState(false);\r\n\r\n    return(\r\n        <>\r\n            <LossActionRow\r\n              columnProps={columnProps}\r\n              data={data}\r\n              padding={0}\r\n              color=\"violet\"\r\n              isOpen={isOpen}\r\n              onClick={() => setIsOpen(!isOpen)}\r\n            />\r\n            {data.actionChildItemList.map((itemLevelTwo, index) => {\r\n                return itemLevelTwo.isClaim \r\n              ?\r\n              <LossActionLevelClaim \r\n              data={itemLevelTwo}\r\n              columnProps={columnProps}\r\n              />\r\n\r\n              :\r\n              <LossActionRow\r\n                columnProps={columnProps}\r\n                data={itemLevelTwo}\r\n                padding={25}\r\n                color='yellow'\r\n              />\r\n              \r\n          })}\r\n        </>\r\n)}"]},"metadata":{},"sourceType":"module"}