{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpeningMemoSummary\\\\OpeningMemoSummary.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get'; // app\n\nimport { OpeningMemoSummaryView } from './OpeningMemoSummary.view';\nimport { selectRefDataDepartmentBrokers, patchOpeningMemo, updateOpeningMemo, selectOpeningMemo } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpeningMemoSummary() {\n  _s();\n\n  var dispatch = useDispatch();\n  var openingMemo = useSelector(selectOpeningMemo);\n  var openingMemoDirty = useSelector(function (state) {\n    return state.openingMemo.dirty;\n  });\n  var brokers = useSelector(selectRefDataDepartmentBrokers);\n  var disableAll = openingMemoDirty && !(get(openingMemo, 'isAccountHandlerApproved') && get(openingMemo, 'isAuthorisedSignatoryApproved'));\n  var disableHandler = !!get(openingMemo, 'accountHandler') && !get(openingMemo, 'isAccountHandlerApproved') && !get(openingMemo, 'authorisedSignatory');\n  var disableSignatory = !!get(openingMemo, 'authorisedSignatory') && !get(openingMemo, 'isAuthorisedSignatoryApproved') && !get(openingMemo, 'accountHandler');\n\n  var handleChange = function handleChange(changes) {\n    dispatch(updateOpeningMemo(changes, openingMemo.id));\n  };\n\n  var handleResetApprovals = function handleResetApprovals() {\n    dispatch(patchOpeningMemo({\n      isAccountHandlerApproved: false,\n      isAuthorisedSignatoryApproved: false\n    }, openingMemo.id));\n  };\n\n  return /*#__PURE__*/_jsxDEV(OpeningMemoSummaryView, {\n    disableAll: disableAll,\n    disableHandler: disableHandler,\n    disableSignatory: disableSignatory,\n    users: brokers,\n    openingMemo: openingMemo,\n    onChange: handleChange,\n    onReset: handleResetApprovals\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(OpeningMemoSummary, \"NCMTQn87iMZtYQN/VB1mdYEj/0Y=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = OpeningMemoSummary;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpeningMemoSummary\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpeningMemoSummary/OpeningMemoSummary.js"],"names":["React","useSelector","useDispatch","get","OpeningMemoSummaryView","selectRefDataDepartmentBrokers","patchOpeningMemo","updateOpeningMemo","selectOpeningMemo","OpeningMemoSummary","dispatch","openingMemo","openingMemoDirty","state","dirty","brokers","disableAll","disableHandler","disableSignatory","handleChange","changes","id","handleResetApprovals","isAccountHandlerApproved","isAuthorisedSignatoryApproved"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,8BAAT,EAAyCC,gBAAzC,EAA2DC,iBAA3D,EAA8EC,iBAA9E,QAAuG,QAAvG;;AAEA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAC3C,MAAMC,QAAQ,GAAGR,WAAW,EAA5B;AACA,MAAMS,WAAW,GAAGV,WAAW,CAACO,iBAAD,CAA/B;AACA,MAAMI,gBAAgB,GAAGX,WAAW,CAAC,UAACY,KAAD;AAAA,WAAWA,KAAK,CAACF,WAAN,CAAkBG,KAA7B;AAAA,GAAD,CAApC;AACA,MAAMC,OAAO,GAAGd,WAAW,CAACI,8BAAD,CAA3B;AACA,MAAMW,UAAU,GACdJ,gBAAgB,IAAI,EAAET,GAAG,CAACQ,WAAD,EAAc,0BAAd,CAAH,IAAgDR,GAAG,CAACQ,WAAD,EAAc,+BAAd,CAArD,CADtB;AAEA,MAAMM,cAAc,GAClB,CAAC,CAACd,GAAG,CAACQ,WAAD,EAAc,gBAAd,CAAL,IAAwC,CAACR,GAAG,CAACQ,WAAD,EAAc,0BAAd,CAA5C,IAAyF,CAACR,GAAG,CAACQ,WAAD,EAAc,qBAAd,CAD/F;AAEA,MAAMO,gBAAgB,GACpB,CAAC,CAACf,GAAG,CAACQ,WAAD,EAAc,qBAAd,CAAL,IAA6C,CAACR,GAAG,CAACQ,WAAD,EAAc,+BAAd,CAAjD,IAAmG,CAACR,GAAG,CAACQ,WAAD,EAAc,gBAAd,CADzG;;AAGA,MAAMQ,YAAY,GAAG,SAAfA,YAAe,CAACC,OAAD,EAAa;AAChCV,IAAAA,QAAQ,CAACH,iBAAiB,CAACa,OAAD,EAAUT,WAAW,CAACU,EAAtB,CAAlB,CAAR;AACD,GAFD;;AAIA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCZ,IAAAA,QAAQ,CACNJ,gBAAgB,CACd;AACEiB,MAAAA,wBAAwB,EAAE,KAD5B;AAEEC,MAAAA,6BAA6B,EAAE;AAFjC,KADc,EAKdb,WAAW,CAACU,EALE,CADV,CAAR;AASD,GAVD;;AAYA,sBACE,QAAC,sBAAD;AACE,IAAA,UAAU,EAAEL,UADd;AAEE,IAAA,cAAc,EAAEC,cAFlB;AAGE,IAAA,gBAAgB,EAAEC,gBAHpB;AAIE,IAAA,KAAK,EAAEH,OAJT;AAKE,IAAA,WAAW,EAAEJ,WALf;AAME,IAAA,QAAQ,EAAEQ,YANZ;AAOE,IAAA,OAAO,EAAEG;AAPX;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAvCuBb,kB;UACLP,W,EACGD,W,EACKA,W,EACTA,W;;;KAJMQ,kB","sourcesContent":["import React from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { OpeningMemoSummaryView } from './OpeningMemoSummary.view';\r\nimport { selectRefDataDepartmentBrokers, patchOpeningMemo, updateOpeningMemo, selectOpeningMemo } from 'stores';\r\n\r\nexport default function OpeningMemoSummary() {\r\n  const dispatch = useDispatch();\r\n  const openingMemo = useSelector(selectOpeningMemo);\r\n  const openingMemoDirty = useSelector((state) => state.openingMemo.dirty);\r\n  const brokers = useSelector(selectRefDataDepartmentBrokers);\r\n  const disableAll =\r\n    openingMemoDirty && !(get(openingMemo, 'isAccountHandlerApproved') && get(openingMemo, 'isAuthorisedSignatoryApproved'));\r\n  const disableHandler =\r\n    !!get(openingMemo, 'accountHandler') && !get(openingMemo, 'isAccountHandlerApproved') && !get(openingMemo, 'authorisedSignatory');\r\n  const disableSignatory =\r\n    !!get(openingMemo, 'authorisedSignatory') && !get(openingMemo, 'isAuthorisedSignatoryApproved') && !get(openingMemo, 'accountHandler');\r\n\r\n  const handleChange = (changes) => {\r\n    dispatch(updateOpeningMemo(changes, openingMemo.id));\r\n  };\r\n\r\n  const handleResetApprovals = () => {\r\n    dispatch(\r\n      patchOpeningMemo(\r\n        {\r\n          isAccountHandlerApproved: false,\r\n          isAuthorisedSignatoryApproved: false,\r\n        },\r\n        openingMemo.id\r\n      )\r\n    );\r\n  };\r\n\r\n  return (\r\n    <OpeningMemoSummaryView\r\n      disableAll={disableAll}\r\n      disableHandler={disableHandler}\r\n      disableSignatory={disableSignatory}\r\n      users={brokers}\r\n      openingMemo={openingMemo}\r\n      onChange={handleChange}\r\n      onReset={handleResetApprovals}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}