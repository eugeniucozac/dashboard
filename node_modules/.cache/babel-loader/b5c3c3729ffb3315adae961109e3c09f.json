{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nexport var editReportGroupExtended = function editReportGroupExtended(reportGroupObj) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var description = reportGroupObj.description,\n        id = reportGroupObj.id,\n        name = reportGroupObj.name;\n    var defaultError = {\n      file: 'stores/reportingExtended.actions.editReportGroupExtended',\n      message: 'Data missing for PATCH request'\n    };\n    dispatch(editReportGroupExtendedRequest(reportGroupObj));\n    dispatch(addLoader('editReportGroupExtended'));\n\n    if (!reportGroupObj || !description || !id || !name) {\n      dispatch(editReportGroupExtendedFailure(defaultError));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.failure', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportGroupExtended'));\n      return;\n    }\n\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.odsService,\n      path: \"reports/group/\".concat(id),\n      data: {\n        name: name,\n        description: description\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(editReportGroupExtendedSuccess(data));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.success', 'success'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (reportingExtended.editReportExtendedGroup)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(editReportGroupExtendedFailure(err));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.failure', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportGroupExtended'));\n    });\n  };\n};\nexport var editReportGroupExtendedRequest = function editReportGroupExtendedRequest(reportGroupObj) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_REQUEST',\n    payload: reportGroupObj\n  };\n};\nexport var editReportGroupExtendedSuccess = function editReportGroupExtendedSuccess(data) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_SUCCESS',\n    payload: data\n  };\n};\nexport var editReportGroupExtendedFailure = function editReportGroupExtendedFailure(err) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reportingExtended/reportingExtended.actions.editReportGroupExtended.js"],"names":["utils","authLogout","addLoader","enqueueNotification","hideModal","removeLoader","editReportGroupExtended","reportGroupObj","dispatch","getState","auth","user","endpoint","config","vars","description","id","name","defaultError","file","message","editReportGroupExtendedRequest","editReportGroupExtendedFailure","api","patch","token","accessToken","odsService","path","data","then","response","handleResponse","json","handleNewData","editReportGroupExtendedSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload"],"mappings":"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","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\n\r\nexport const editReportGroupExtended = (reportGroupObj) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const { description, id, name } = reportGroupObj;\r\n\r\n  const defaultError = {\r\n    file: 'stores/reportingExtended.actions.editReportGroupExtended',\r\n    message: 'Data missing for PATCH request',\r\n  };\r\n\r\n  dispatch(editReportGroupExtendedRequest(reportGroupObj));\r\n  dispatch(addLoader('editReportGroupExtended'));\r\n\r\n  if (!reportGroupObj || !description || !id || !name) {\r\n    dispatch(editReportGroupExtendedFailure(defaultError));\r\n    dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.failure', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('editReportGroupExtended'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.odsService,\r\n      path: `reports/group/${id}`,\r\n      data: {\r\n        name,\r\n        description,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(editReportGroupExtendedSuccess(data));\r\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.success', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API fetch error (reportingExtended.editReportExtendedGroup)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(editReportGroupExtendedFailure(err));\r\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.editReportGrp.failure', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editReportGroupExtended'));\r\n    });\r\n};\r\n\r\nexport const editReportGroupExtendedRequest = (reportGroupObj) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_REQUEST',\r\n    payload: reportGroupObj,\r\n  };\r\n};\r\n\r\nexport const editReportGroupExtendedSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editReportGroupExtendedFailure = (err) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_GROUP_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}