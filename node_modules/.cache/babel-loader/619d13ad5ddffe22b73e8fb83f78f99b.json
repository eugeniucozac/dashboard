{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Empty\\\\Empty.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Link } from 'react-router-dom';\nimport omit from 'lodash/omit'; // app\n\nimport styles from './Empty.styles';\nimport { Button } from 'components'; // mui\n\nimport { makeStyles, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEmptyView.propTypes = {\n  title: PropTypes.string,\n  text: PropTypes.string,\n  icon: PropTypes.node,\n  link: PropTypes.shape({\n    text: PropTypes.string,\n    url: PropTypes.string\n  }),\n  padding: PropTypes.bool,\n  bg: PropTypes.bool,\n  width: PropTypes.number,\n  button: PropTypes.object\n};\nEmptyView.defaultProps = {\n  bg: true\n};\nexport function EmptyView(_ref) {\n  var title = _ref.title,\n      text = _ref.text,\n      icon = _ref.icon,\n      link = _ref.link,\n      button = _ref.button,\n      padding = _ref.padding,\n      bg = _ref.bg,\n      width = _ref.width,\n      children = _ref.children;\n  var classes = makeStyles(styles, {\n    name: 'Empty'\n  })({\n    padding: padding,\n    bg: bg,\n    width: width\n  }); // abort\n\n  if (!title && !text && !icon && !children) return null;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    \"data-testid\": \"empty-placeholder\",\n    children: [icon && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.iconContainer,\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.icon,\n        children: icon\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 9\n    }, this), title && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"h2\",\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this), text && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      className: classes.text,\n      children: text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 9\n    }, this), link && link.url && link.text && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      component: Link,\n      to: link.url,\n      className: classes.link,\n      children: link.text\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 9\n    }, this), button && (button.text || button.icon) && button.action && /*#__PURE__*/_jsxDEV(Button, _objectSpread(_objectSpread({\n      size: \"small\",\n      color: \"primary\",\n      variant: \"outlined\"\n    }, omit(button, ['action'])), {}, {\n      nestedClasses: {\n        btn: classes.button\n      },\n      onClick: button.action\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 9\n    }, this), children && /*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: children\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n_c = EmptyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EmptyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Empty/Empty.view.js"],"names":["React","PropTypes","Link","omit","styles","Button","makeStyles","Box","Typography","EmptyView","propTypes","title","string","text","icon","node","link","shape","url","padding","bool","bg","width","number","button","object","defaultProps","children","classes","name","root","iconContainer","action","btn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Link } from 'react-router-dom';\r\nimport omit from 'lodash/omit';\r\n\r\n// app\r\nimport styles from './Empty.styles';\r\nimport { Button } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Box, Typography } from '@material-ui/core';\r\n\r\nEmptyView.propTypes = {\r\n  title: PropTypes.string,\r\n  text: PropTypes.string,\r\n  icon: PropTypes.node,\r\n  link: PropTypes.shape({\r\n    text: PropTypes.string,\r\n    url: PropTypes.string,\r\n  }),\r\n  padding: PropTypes.bool,\r\n  bg: PropTypes.bool,\r\n  width: PropTypes.number,\r\n  button: PropTypes.object,\r\n};\r\n\r\nEmptyView.defaultProps = {\r\n  bg: true,\r\n};\r\n\r\nexport function EmptyView({ title, text, icon, link, button, padding, bg, width, children }) {\r\n  const classes = makeStyles(styles, { name: 'Empty' })({ padding, bg, width });\r\n\r\n  // abort\r\n  if (!title && !text && !icon && !children) return null;\r\n\r\n  return (\r\n    <div className={classes.root} data-testid=\"empty-placeholder\">\r\n      {icon && (\r\n        <div className={classes.iconContainer}>\r\n          <div className={classes.icon}>{icon}</div>\r\n        </div>\r\n      )}\r\n\r\n      {title && (\r\n        <Typography variant=\"h2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      {text && (\r\n        <Typography variant=\"body2\" className={classes.text}>\r\n          {text}\r\n        </Typography>\r\n      )}\r\n\r\n      {link && link.url && link.text && (\r\n        <Typography variant=\"body2\" component={Link} to={link.url} className={classes.link}>\r\n          {link.text}\r\n        </Typography>\r\n      )}\r\n\r\n      {button && (button.text || button.icon) && button.action && (\r\n        <Button\r\n          size=\"small\"\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          {...omit(button, ['action'])}\r\n          nestedClasses={{ btn: classes.button }}\r\n          onClick={button.action}\r\n        />\r\n      )}\r\n\r\n      {children && <Box my={2}>{children}</Box>}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}