{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTasksReporting\\\\ClaimsTasksReporting.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { isEmpty } from 'lodash'; // app\n\nimport { ClaimsTasksReportingView } from './ClaimsTasksReporting.view';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { getClaimsTasksReporting, selectClaimsTasksReporting, selectClaimsTasksReportingLoader, selectUserRole } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsTasksReporting() {\n  _s();\n\n  var dispatch = useDispatch();\n  var data = useSelector(selectClaimsTasksReporting);\n  var isDataLoading = useSelector(selectClaimsTasksReportingLoader);\n  var userRole = useSelector(selectUserRole);\n\n  var _useState = useState(!isEmpty(data)),\n      _useState2 = _slicedToArray(_useState, 2),\n      expanded = _useState2[0],\n      setExpanded = _useState2[1];\n\n  var buildChartData = function buildChartData(value, label, colors) {\n    return {\n      labels: label,\n      datasets: [{\n        data: value,\n        backgroundColor: colors\n      }]\n    };\n  };\n\n  var toggle = function toggle() {\n    setExpanded(!expanded);\n  };\n\n  useEffect(function () {\n    dispatch(getClaimsTasksReporting(constants.BUSINESS_PROCESS_CLAIMS_NAME));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!isEmpty(data) && !isDataLoading) {\n      setExpanded(true);\n    }\n  }, [data, isDataLoading]); // eslint-disable-line react-hooks/exhaustive-deps\n  // hide component when user has no permission\n\n  if (utils.user.isTechnicianMphasis(userRole === null || userRole === void 0 ? void 0 : userRole[0]) || utils.user.isTechnicianArdonagh(userRole === null || userRole === void 0 ? void 0 : userRole[0])) return null;\n  return /*#__PURE__*/_jsxDEV(ClaimsTasksReportingView, {\n    data: data,\n    expanded: expanded,\n    isDataLoading: isDataLoading,\n    handlers: {\n      buildChartData: buildChartData,\n      toggle: toggle\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTasksReporting, \"SKvdd+dfz+ROCdKVwcxIqOeJIhY=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsTasksReporting;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTasksReporting\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTasksReporting/ClaimsTasksReporting.js"],"names":["React","useEffect","useState","useDispatch","useSelector","isEmpty","ClaimsTasksReportingView","constants","utils","getClaimsTasksReporting","selectClaimsTasksReporting","selectClaimsTasksReportingLoader","selectUserRole","ClaimsTasksReporting","dispatch","data","isDataLoading","userRole","expanded","setExpanded","buildChartData","value","label","colors","labels","datasets","backgroundColor","toggle","BUSINESS_PROCESS_CLAIMS_NAME","user","isTechnicianMphasis","isTechnicianArdonagh"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;;AACA,SAASC,wBAAT,QAAyC,6BAAzC;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,SAASC,uBAAT,EAAkCC,0BAAlC,EAA8DC,gCAA9D,EAAgGC,cAAhG,QAAsH,QAAtH;;AAEA,eAAe,SAASC,oBAAT,GAAgC;AAAA;;AAC7C,MAAMC,QAAQ,GAAGX,WAAW,EAA5B;AAEA,MAAMY,IAAI,GAAGX,WAAW,CAACM,0BAAD,CAAxB;AACA,MAAMM,aAAa,GAAGZ,WAAW,CAACO,gCAAD,CAAjC;AACA,MAAMM,QAAQ,GAAGb,WAAW,CAACQ,cAAD,CAA5B;;AAL6C,kBAObV,QAAQ,CAAC,CAACG,OAAO,CAACU,IAAD,CAAT,CAPK;AAAA;AAAA,MAOtCG,QAPsC;AAAA,MAO5BC,WAP4B;;AAS7C,MAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,KAAD,EAAQC,KAAR,EAAeC,MAAf,EAA0B;AAC/C,WAAO;AACLC,MAAAA,MAAM,EAAEF,KADH;AAELG,MAAAA,QAAQ,EAAE,CACR;AACEV,QAAAA,IAAI,EAAEM,KADR;AAEEK,QAAAA,eAAe,EAAEH;AAFnB,OADQ;AAFL,KAAP;AASD,GAVD;;AAYA,MAAMI,MAAM,GAAG,SAATA,MAAS,GAAM;AACnBR,IAAAA,WAAW,CAAC,CAACD,QAAF,CAAX;AACD,GAFD;;AAIAjB,EAAAA,SAAS,CAAC,YAAM;AACda,IAAAA,QAAQ,CAACL,uBAAuB,CAACF,SAAS,CAACqB,4BAAX,CAAxB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAzB6C,CA2BrC;;AAER3B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,OAAO,CAACU,IAAD,CAAR,IAAkB,CAACC,aAAvB,EAAsC;AACpCG,MAAAA,WAAW,CAAC,IAAD,CAAX;AACD;AACF,GAJQ,EAIN,CAACJ,IAAD,EAAOC,aAAP,CAJM,CAAT,CA7B6C,CAiClB;AAE3B;;AACA,MAAIR,KAAK,CAACqB,IAAN,CAAWC,mBAAX,CAA+Bb,QAA/B,aAA+BA,QAA/B,uBAA+BA,QAAQ,CAAG,CAAH,CAAvC,KAAiDT,KAAK,CAACqB,IAAN,CAAWE,oBAAX,CAAgCd,QAAhC,aAAgCA,QAAhC,uBAAgCA,QAAQ,CAAG,CAAH,CAAxC,CAArD,EAAqG,OAAO,IAAP;AAErG,sBACE,QAAC,wBAAD;AACE,IAAA,IAAI,EAAEF,IADR;AAEE,IAAA,QAAQ,EAAEG,QAFZ;AAGE,IAAA,aAAa,EAAEF,aAHjB;AAIE,IAAA,QAAQ,EAAE;AACRI,MAAAA,cAAc,EAAdA,cADQ;AAERO,MAAAA,MAAM,EAANA;AAFQ;AAJZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAjDuBd,oB;UACLV,W,EAEJC,W,EACSA,W,EACLA,W;;;KALKS,oB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { isEmpty } from 'lodash';\r\n\r\n// app\r\nimport { ClaimsTasksReportingView } from './ClaimsTasksReporting.view';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nimport { getClaimsTasksReporting, selectClaimsTasksReporting, selectClaimsTasksReportingLoader, selectUserRole } from 'stores';\r\n\r\nexport default function ClaimsTasksReporting() {\r\n  const dispatch = useDispatch();\r\n\r\n  const data = useSelector(selectClaimsTasksReporting);\r\n  const isDataLoading = useSelector(selectClaimsTasksReportingLoader);\r\n  const userRole = useSelector(selectUserRole);\r\n\r\n  const [expanded, setExpanded] = useState(!isEmpty(data));\r\n\r\n  const buildChartData = (value, label, colors) => {\r\n    return {\r\n      labels: label,\r\n      datasets: [\r\n        {\r\n          data: value,\r\n          backgroundColor: colors,\r\n        },\r\n      ],\r\n    };\r\n  };\r\n\r\n  const toggle = () => {\r\n    setExpanded(!expanded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getClaimsTasksReporting(constants.BUSINESS_PROCESS_CLAIMS_NAME));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!isEmpty(data) && !isDataLoading) {\r\n      setExpanded(true);\r\n    }\r\n  }, [data, isDataLoading]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // hide component when user has no permission\r\n  if (utils.user.isTechnicianMphasis(userRole?.[0]) || utils.user.isTechnicianArdonagh(userRole?.[0])) return null;\r\n\r\n  return (\r\n    <ClaimsTasksReportingView\r\n      data={data}\r\n      expanded={expanded}\r\n      isDataLoading={isDataLoading}\r\n      handlers={{\r\n        buildChartData,\r\n        toggle,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}