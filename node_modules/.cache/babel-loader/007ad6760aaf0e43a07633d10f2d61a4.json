{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar initialState = {\n  notificationList: [],\n  error: '',\n  isNotificationsLoading: false\n};\n\nvar notificationReducers = function notificationReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'NOTIFICATION_GET_NOTIFICATIONS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notificationList: action.payload,\n        error: ''\n      });\n\n    case 'NOTIFICATION_GET_NOTIFICATIONS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        notificationList: [],\n        error: action.payload\n      });\n\n    case 'NOTIFICATION_GET_NOTIFICATIONS_LOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isNotificationsLoading: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default notificationReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/notification/notification.reducers.js"],"names":["initialState","notificationList","error","isNotificationsLoading","notificationReducers","state","action","type","payload"],"mappings":";AAAA,IAAMA,YAAY,GAAG;AACnBC,EAAAA,gBAAgB,EAAE,EADC;AAEnBC,EAAAA,KAAK,EAAE,EAFY;AAGnBC,EAAAA,sBAAsB,EAAE;AAHL,CAArB;;AAMA,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBL,YAAyB;AAAA,MAAXM,MAAW;;AAC7D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,wCAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,gBAAgB,EAAEK,MAAM,CAACE,OAF3B;AAGEN,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAK,wCAAL;AACE,6CACKG,KADL;AAEEJ,QAAAA,gBAAgB,EAAE,EAFpB;AAGEC,QAAAA,KAAK,EAAEI,MAAM,CAACE;AAHhB;;AAKF,SAAK,wCAAL;AACE,6CACKH,KADL;AAEEF,QAAAA,sBAAsB,EAAEG,MAAM,CAACE;AAFjC;;AAIF;AACE,aAAOH,KAAP;AAnBJ;AAqBD,CAtBD;;AAwBA,eAAeD,oBAAf","sourcesContent":["const initialState = {\r\n  notificationList: [],\r\n  error: '',\r\n  isNotificationsLoading: false,\r\n};\r\n\r\nconst notificationReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'NOTIFICATION_GET_NOTIFICATIONS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        notificationList: action.payload,\r\n        error: '',\r\n      };\r\n    case 'NOTIFICATION_GET_NOTIFICATIONS_FAILURE':\r\n      return {\r\n        ...state,\r\n        notificationList: [],\r\n        error: action.payload,\r\n      };\r\n    case 'NOTIFICATION_GET_NOTIFICATIONS_LOADING':\r\n      return {\r\n        ...state,\r\n        isNotificationsLoading: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default notificationReducers;\r\n"]},"metadata":{},"sourceType":"module"}