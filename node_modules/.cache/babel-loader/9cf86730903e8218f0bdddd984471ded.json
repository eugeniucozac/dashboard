{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport types from './types';\nimport { enqueueNotification } from 'stores';\nimport * as constants from 'consts';\nexport var postDmsDocuments = function postDmsDocuments(params) {\n  return function (dispatch, getState) {\n    var _upload$documentMetaD, _upload$documentMetaD2, _upload$documentMetaD3, _upload$documentMetaD4, _upload$documentMetaD5, _upload$documentMetaD6, _upload$documentMetaD7, _upload$documentMetaD8, _upload$documentMetaD9, _upload$documentMetaD10, _upload$documentMetaD11, _upload$documentMetaD12, _upload$documentMetaD13, _upload$documentMetaD14, _upload$documentMetaD15, _upload$documentMetaD16;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        dmsContext = _getState.ui.dmsContext,\n        _getState$dms = _getState.dms,\n        upload = _getState$dms.upload,\n        type = _getState$dms.contextSubType.type,\n        selectedRiskRef = _getState.processingInstructions.selectedRiskRef; // prettier-ignore\n\n\n    var filesArray = params.fieldsArray,\n        _params$metaData = params.metaData,\n        catCodesID = _params$metaData.catCodesID,\n        year = _params$metaData.year,\n        lossName = _params$metaData.lossName,\n        sourceId = _params$metaData.sourceId,\n        claimId = _params$metaData.claimId,\n        formValues = params.formValues,\n        documentTypeKey = params.documentTypeKey; // eslint-disable-next-line\n\n    var referenceId = utils.dmsFormatter.getContextReferenceId(getState(), dmsContext, type);\n    var endorsementId = selectedRiskRef.endorsementId,\n        endorsementUid = selectedRiskRef.bulkEndorsementUid;\n\n    var _utils$dmsFormatter$g = utils.dmsFormatter.getUploadMetaDataParams(getState(), dmsContext, referenceId),\n        claimRef = _utils$dmsFormatter$g.claimRef,\n        lossRef = _utils$dmsFormatter$g.lossRef,\n        uniqueMarketRef = _utils$dmsFormatter$g.uniqueMarketRef,\n        ucr = _utils$dmsFormatter$g.ucr,\n        expiryDate = _utils$dmsFormatter$g.expiryDate;\n\n    var metadataFieldsKeys = ['Payment Reference', 'Loss Payee', 'Amount', 'Currency', 'Payment date'];\n    var formData = new FormData();\n    var docDto = [];\n    filesArray.forEach(function (fileObj, index) {\n      if (fileObj.file) {\n        var _formValues, _formValues2, _formValues3;\n\n        formData.append('uploadFiles', fileObj.file);\n        docDto.push({\n          tags: [],\n          documentName: formValues === null || formValues === void 0 ? void 0 : formValues['files' + index + 'name'],\n          documentTypeId: formValues === null || formValues === void 0 ? void 0 : (_formValues = formValues['files' + index]) === null || _formValues === void 0 ? void 0 : _formValues.documentTypeID,\n          documentTypeDescription: formValues === null || formValues === void 0 ? void 0 : (_formValues2 = formValues['files' + index]) === null || _formValues2 === void 0 ? void 0 : _formValues2.documentTypeDescription,\n          fileLastModifiedDate: fileObj.file.lastModifiedDate.toISOString(),\n          docClassification: (formValues === null || formValues === void 0 ? void 0 : formValues['filesClassification' + index]) === undefined ? '3' : formValues === null || formValues === void 0 ? void 0 : (_formValues3 = formValues['filesClassification' + index]) === null || _formValues3 === void 0 ? void 0 : _formValues3.id,\n          metadataFields: metadataFieldsKeys.map(function (key) {\n            var _formValues$Payment, _formValues$Payment$i, _formValues$Payment2, _formValues$Payment2$;\n\n            return {\n              prop: key,\n              value: (formValues === null || formValues === void 0 ? void 0 : (_formValues$Payment = formValues.Payment) === null || _formValues$Payment === void 0 ? void 0 : (_formValues$Payment$i = _formValues$Payment[index]) === null || _formValues$Payment$i === void 0 ? void 0 : _formValues$Payment$i[key]) === undefined ? key === 'Payment date' ? new Date().toISOString() : '' : formValues === null || formValues === void 0 ? void 0 : (_formValues$Payment2 = formValues.Payment) === null || _formValues$Payment2 === void 0 ? void 0 : (_formValues$Payment2$ = _formValues$Payment2[index]) === null || _formValues$Payment2$ === void 0 ? void 0 : _formValues$Payment2$[key]\n            };\n          })\n        });\n      }\n    });\n    formData.append('fileUploadRequestPayload', JSON.stringify(_objectSpread(_objectSpread({\n      catCodesID: catCodesID,\n      sectionType: dmsContext,\n      srcApplication: constants.DMS_SRC_APPLICATION_EDGE,\n      year: year,\n      lossName: lossName,\n      referenceId: referenceId\n    }, documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piEndorsement && endorsementId && endorsementUid && {\n      endorsementId: endorsementId,\n      endorsementUid: endorsementUid\n    }), {}, {\n      xbInstanceId: sourceId,\n      departmentId: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD = upload.documentMetaData) === null || _upload$documentMetaD === void 0 ? void 0 : (_upload$documentMetaD2 = _upload$documentMetaD.data) === null || _upload$documentMetaD2 === void 0 ? void 0 : _upload$documentMetaD2.departmentId,\n      departmentName: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD3 = upload.documentMetaData) === null || _upload$documentMetaD3 === void 0 ? void 0 : (_upload$documentMetaD4 = _upload$documentMetaD3.data) === null || _upload$documentMetaD4 === void 0 ? void 0 : _upload$documentMetaD4.departmentName,\n      insuredName: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD5 = upload.documentMetaData) === null || _upload$documentMetaD5 === void 0 ? void 0 : (_upload$documentMetaD6 = _upload$documentMetaD5.data) === null || _upload$documentMetaD6 === void 0 ? void 0 : _upload$documentMetaD6.insuredName,\n      policyId: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD7 = upload.documentMetaData) === null || _upload$documentMetaD7 === void 0 ? void 0 : (_upload$documentMetaD8 = _upload$documentMetaD7.data) === null || _upload$documentMetaD8 === void 0 ? void 0 : _upload$documentMetaD8.policyId,\n      policyRef: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD9 = upload.documentMetaData) === null || _upload$documentMetaD9 === void 0 ? void 0 : (_upload$documentMetaD10 = _upload$documentMetaD9.data) === null || _upload$documentMetaD10 === void 0 ? void 0 : _upload$documentMetaD10.policyRef,\n      lossId: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD11 = upload.documentMetaData) === null || _upload$documentMetaD11 === void 0 ? void 0 : (_upload$documentMetaD12 = _upload$documentMetaD11.data) === null || _upload$documentMetaD12 === void 0 ? void 0 : _upload$documentMetaD12.lossId,\n      lossCreatedDate: dmsContext === constants.DMS_CONTEXT_LOSS ? upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD13 = upload.documentMetaData) === null || _upload$documentMetaD13 === void 0 ? void 0 : (_upload$documentMetaD14 = _upload$documentMetaD13.data) === null || _upload$documentMetaD14 === void 0 ? void 0 : _upload$documentMetaD14.createdDate : null,\n      uniqueMarketRef: uniqueMarketRef,\n      ucr: ucr,\n      expiryDate: expiryDate,\n      claimId: claimId,\n      lossRef: lossRef,\n      claimRef: claimRef,\n      subDepartmentId: upload === null || upload === void 0 ? void 0 : (_upload$documentMetaD15 = upload.documentMetaData) === null || _upload$documentMetaD15 === void 0 ? void 0 : (_upload$documentMetaD16 = _upload$documentMetaD15.data) === null || _upload$documentMetaD16 === void 0 ? void 0 : _upload$documentMetaD16.subDepartmentId,\n      documentDto: [].concat(docDto)\n    })));\n    dispatch(postDmsDocumentsRequest(params));\n    return utils.api.multiPartPost({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: 'dms/document/upload',\n      data: formData\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(enqueueNotification(data === null || data === void 0 ? void 0 : data.message, 'success'));\n      dispatch(postDmsDocumentsSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data;\n    }).catch(function (err) {\n      var defaultError = {\n        file: 'stores/dms.actions.postDmsDocuments'\n      };\n      dispatch(enqueueNotification('notification.uploadDmsFile.fail', 'error'));\n      utils.api.handleError(err, defaultError);\n      return dispatch(postDmsDocumentsFailure(err));\n    });\n  };\n};\nexport var postDmsDocumentsRequest = function postDmsDocumentsRequest(params) {\n  return {\n    type: types.POST_DMS_DOCUMENT_PENDING,\n    payload: params\n  };\n};\nexport var postDmsDocumentsSuccess = function postDmsDocumentsSuccess(data) {\n  return {\n    type: types.POST_DMS_DOCUMENT_SUCCESS,\n    payload: data\n  };\n};\nexport var postDmsDocumentsFailure = function postDmsDocumentsFailure(err) {\n  return {\n    type: types.POST_DMS_DOCUMENT_REJECTED,\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.postDmsDocuments.js"],"names":["utils","types","enqueueNotification","constants","postDmsDocuments","params","dispatch","getState","auth","user","endpoint","config","vars","dmsContext","ui","dms","upload","type","contextSubType","selectedRiskRef","processingInstructions","filesArray","fieldsArray","metaData","catCodesID","year","lossName","sourceId","claimId","formValues","documentTypeKey","referenceId","dmsFormatter","getContextReferenceId","endorsementId","endorsementUid","bulkEndorsementUid","getUploadMetaDataParams","claimRef","lossRef","uniqueMarketRef","ucr","expiryDate","metadataFieldsKeys","formData","FormData","docDto","forEach","fileObj","index","file","append","push","tags","documentName","documentTypeId","documentTypeID","documentTypeDescription","fileLastModifiedDate","lastModifiedDate","toISOString","docClassification","undefined","id","metadataFields","map","key","prop","value","Payment","Date","JSON","stringify","sectionType","srcApplication","DMS_SRC_APPLICATION_EDGE","DMS_DOCUMENT_TYPE_SECTION_KEYS","piEndorsement","xbInstanceId","departmentId","documentMetaData","data","departmentName","insuredName","policyId","policyRef","lossId","lossCreatedDate","DMS_CONTEXT_LOSS","createdDate","subDepartmentId","documentDto","postDmsDocumentsRequest","api","multiPartPost","token","accessToken","dmsService","path","then","response","handleResponse","json","handleNewData","message","postDmsDocumentsSuccess","catch","err","defaultError","handleError","postDmsDocumentsFailure","POST_DMS_DOCUMENT_PENDING","payload","POST_DMS_DOCUMENT_SUCCESS","POST_DMS_DOCUMENT_REJECTED"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport types from './types';\r\nimport { enqueueNotification } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport const postDmsDocuments = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, ui: { dmsContext }, dms: { upload, contextSubType: { type } }, processingInstructions: { selectedRiskRef } } = getState();\r\n  // prettier-ignore\r\n  const { fieldsArray: filesArray, metaData: { catCodesID, year, lossName, sourceId, claimId }, formValues, documentTypeKey } = params;\r\n\r\n  // eslint-disable-next-line\r\n  const referenceId = utils.dmsFormatter.getContextReferenceId(getState(), dmsContext, type);\r\n\r\n  const { endorsementId, bulkEndorsementUid: endorsementUid } = selectedRiskRef;\r\n  const { claimRef, lossRef, uniqueMarketRef, ucr, expiryDate } = utils.dmsFormatter.getUploadMetaDataParams(\r\n    getState(),\r\n    dmsContext,\r\n    referenceId\r\n  );\r\n\r\n  let metadataFieldsKeys = ['Payment Reference', 'Loss Payee', 'Amount', 'Currency', 'Payment date'];\r\n  let formData = new FormData();\r\n  let docDto = [];\r\n  filesArray.forEach((fileObj, index) => {\r\n    if (fileObj.file) {\r\n      formData.append('uploadFiles', fileObj.file);\r\n\r\n      docDto.push({\r\n        tags: [],\r\n        documentName: formValues?.['files' + index + 'name'],\r\n        documentTypeId: formValues?.['files' + index]?.documentTypeID,\r\n        documentTypeDescription: formValues?.['files' + index]?.documentTypeDescription,\r\n        fileLastModifiedDate: fileObj.file.lastModifiedDate.toISOString(),\r\n        docClassification:\r\n          formValues?.['filesClassification' + index] === undefined ? '3' : formValues?.['filesClassification' + index]?.id,\r\n        metadataFields: metadataFieldsKeys.map((key) => {\r\n          return {\r\n            prop: key,\r\n            value:\r\n              formValues?.Payment?.[index]?.[key] === undefined\r\n                ? key === 'Payment date'\r\n                  ? new Date().toISOString()\r\n                  : ''\r\n                : formValues?.Payment?.[index]?.[key],\r\n          };\r\n        }),\r\n      });\r\n    }\r\n  });\r\n  formData.append(\r\n    'fileUploadRequestPayload',\r\n    JSON.stringify({\r\n      catCodesID,\r\n      sectionType: dmsContext,\r\n      srcApplication: constants.DMS_SRC_APPLICATION_EDGE,\r\n      year,\r\n      lossName,\r\n      referenceId,\r\n      ...(documentTypeKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.piEndorsement &&\r\n        endorsementId &&\r\n        endorsementUid && {\r\n          endorsementId,\r\n          endorsementUid,\r\n        }),\r\n      xbInstanceId: sourceId,\r\n      departmentId: upload?.documentMetaData?.data?.departmentId,\r\n      departmentName: upload?.documentMetaData?.data?.departmentName,\r\n      insuredName: upload?.documentMetaData?.data?.insuredName,\r\n      policyId: upload?.documentMetaData?.data?.policyId,\r\n      policyRef: upload?.documentMetaData?.data?.policyRef,\r\n      lossId: upload?.documentMetaData?.data?.lossId,\r\n      lossCreatedDate: dmsContext === constants.DMS_CONTEXT_LOSS ? upload?.documentMetaData?.data?.createdDate : null,\r\n      uniqueMarketRef: uniqueMarketRef,\r\n      ucr: ucr,\r\n      expiryDate: expiryDate,\r\n      claimId,\r\n      lossRef,\r\n      claimRef,\r\n      subDepartmentId: upload?.documentMetaData?.data?.subDepartmentId,\r\n      documentDto: [...docDto],\r\n    })\r\n  );\r\n\r\n  dispatch(postDmsDocumentsRequest(params));\r\n\r\n  return utils.api\r\n    .multiPartPost({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: 'dms/document/upload',\r\n      data: formData,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(enqueueNotification(data?.message, 'success'));\r\n      dispatch(postDmsDocumentsSuccess(data?.data));\r\n      return data;\r\n    })\r\n\r\n    .catch((err) => {\r\n      const defaultError = {\r\n        file: 'stores/dms.actions.postDmsDocuments',\r\n      };\r\n      dispatch(enqueueNotification('notification.uploadDmsFile.fail', 'error'));\r\n      utils.api.handleError(err, defaultError);\r\n      return dispatch(postDmsDocumentsFailure(err));\r\n    });\r\n};\r\n\r\nexport const postDmsDocumentsRequest = (params) => {\r\n  return {\r\n    type: types.POST_DMS_DOCUMENT_PENDING,\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const postDmsDocumentsSuccess = (data) => {\r\n  return {\r\n    type: types.POST_DMS_DOCUMENT_SUCCESS,\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postDmsDocumentsFailure = (err) => {\r\n  return {\r\n    type: types.POST_DMS_DOCUMENT_REJECTED,\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}