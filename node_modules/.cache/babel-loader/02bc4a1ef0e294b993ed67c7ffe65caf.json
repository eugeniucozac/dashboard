{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Form\\\\Form.stories.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Form } from 'components';\nimport { withKnobs, boolean as _boolean, text } from '@storybook/addon-knobs';\nimport * as Yup from 'yup';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Form',\n  component: Form,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  var legend = text('Legend', 'Form Legend');\n\n  var cancel = _boolean('Cancel', true);\n\n  var secondary = _boolean('Secondary', false);\n\n  var submit = _boolean('Submit', true);\n\n  var fields = [].concat(_toConsumableArray(legend ? [{\n    name: 'legend',\n    type: 'legend',\n    label: legend\n  }] : []), [{\n    name: 'field-text',\n    type: 'text',\n    label: 'Text',\n    hint: 'Type some text',\n    placeholder: 'placeholder',\n    value: '',\n    validation: Yup.string().max(6).required(),\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }, {\n    name: 'field-number',\n    type: 'number',\n    label: 'Number',\n    hint: 'Type any number',\n    placeholder: 'ex: 0, 1000, 9.95',\n    value: '',\n    validation: Yup.number().min(20).nullable().transform(function (value) {\n      return Number.isNaN(value) ? null : value;\n    }).required(),\n    muiComponentProps: {\n      fullWidth: true\n    }\n  }]);\n  return /*#__PURE__*/_jsxDEV(Form, {\n    id: \"storybook\",\n    fields: fields,\n    actions: [].concat(_toConsumableArray(cancel ? [{\n      name: 'cancel',\n      label: 'Reset'\n    }] : []), _toConsumableArray(secondary ? [{\n      name: 'secondary',\n      label: 'Validate',\n      handler: function handler(data) {\n        alert('Secondary action - check console logs');\n        console.log('[Secondary action]', data);\n      }\n    }] : []), _toConsumableArray(submit ? [{\n      name: 'submit',\n      label: 'Submit',\n      handler: function handler(data) {\n        alert('Submit - check console logs');\n        console.log('[Submit]', data);\n      }\n    }] : [])),\n    defaultValues: utils.form.getInitialValues(fields),\n    validationSchema: utils.form.getValidationSchema(fields)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, _this);\n};\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Form\\\\Form.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\Form\\\\Form.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Form/Form.stories.js"],"names":["React","Form","withKnobs","boolean","text","Yup","utils","title","component","decorators","Default","legend","cancel","secondary","submit","fields","name","type","label","hint","placeholder","value","validation","string","max","required","muiComponentProps","fullWidth","number","min","nullable","transform","Number","isNaN","handler","data","alert","console","log","form","getInitialValues","getValidationSchema"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { Form } from 'components';\r\nimport { withKnobs, boolean, text } from '@storybook/addon-knobs';\r\nimport * as Yup from 'yup';\r\nimport * as utils from 'utils';\r\n\r\nexport default {\r\n  title: 'Form',\r\n  component: Form,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const legend = text('Legend', 'Form Legend');\r\n  const cancel = boolean('Cancel', true);\r\n  const secondary = boolean('Secondary', false);\r\n  const submit = boolean('Submit', true);\r\n\r\n  const fields = [\r\n    ...(legend\r\n      ? [\r\n          {\r\n            name: 'legend',\r\n            type: 'legend',\r\n            label: legend,\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'field-text',\r\n      type: 'text',\r\n      label: 'Text',\r\n      hint: 'Type some text',\r\n      placeholder: 'placeholder',\r\n      value: '',\r\n      validation: Yup.string().max(6).required(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'field-number',\r\n      type: 'number',\r\n      label: 'Number',\r\n      hint: 'Type any number',\r\n      placeholder: 'ex: 0, 1000, 9.95',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .min(20)\r\n        .nullable()\r\n        .transform((value) => (Number.isNaN(value) ? null : value))\r\n        .required(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <Form\r\n      id=\"storybook\"\r\n      fields={fields}\r\n      actions={[\r\n        ...(cancel\r\n          ? [\r\n              {\r\n                name: 'cancel',\r\n                label: 'Reset',\r\n              },\r\n            ]\r\n          : []),\r\n        ...(secondary\r\n          ? [\r\n              {\r\n                name: 'secondary',\r\n                label: 'Validate',\r\n                handler: (data) => {\r\n                  alert('Secondary action - check console logs');\r\n                  console.log('[Secondary action]', data);\r\n                },\r\n              },\r\n            ]\r\n          : []),\r\n        ...(submit\r\n          ? [\r\n              {\r\n                name: 'submit',\r\n                label: 'Submit',\r\n                handler: (data) => {\r\n                  alert('Submit - check console logs');\r\n                  console.log('[Submit]', data);\r\n                },\r\n              },\r\n            ]\r\n          : []),\r\n      ]}\r\n      defaultValues={utils.form.getInitialValues(fields)}\r\n      validationSchema={utils.form.getValidationSchema(fields)}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}