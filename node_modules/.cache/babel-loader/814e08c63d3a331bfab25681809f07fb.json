{"ast":null,"code":"import get from 'lodash/get';\nimport { createSelector } from 'reselect';\nexport var selectRiskRefsForProcessingInstruction = function selectRiskRefsForProcessingInstruction(state) {\n  return get(state, 'processingInstructions.riskReferences') || [];\n};\nexport var selectPiGridDataLoading = function selectPiGridDataLoading(state) {\n  return get(state, 'processingInstructions.isPiGridDataLoading') || false;\n};\nexport var selectPiHasNoGridData = function selectPiHasNoGridData(state) {\n  return get(state, 'processingInstructions.isPiHasNoGridData') || false;\n};\nexport var selectProcessingInstructions = function selectProcessingInstructions(state) {\n  return get(state, 'processingInstructions.instructions') || {};\n};\nexport var selectUsersInRoles = function selectUsersInRoles(state) {\n  return get(state, 'processingInstructions.usersInRoles') || [];\n};\nexport var selectPiProducingBrokers = function selectPiProducingBrokers(state) {\n  return get(state, 'processingInstructions.producingBrokers') || [];\n};\nexport var selectPiAccountExecutives = function selectPiAccountExecutives(state) {\n  return get(state, 'processingInstructions.accountExecutives') || [];\n};\nexport var selectPiFacilityTypes = function selectPiFacilityTypes(state) {\n  return get(state, 'processingInstructions.facilityTypes') || [];\n};\nexport var selectPiDepartmentList = function selectPiDepartmentList(state) {\n  return get(state, 'processingInstructions.departmentList') || [];\n};\nexport var getDocumentsInfo = function getDocumentsInfo(state) {\n  return get(state, 'processingInstructions.documents') || {};\n};\nexport var selectWorkFlowFrontEndContactNamesForRiskReference = function selectWorkFlowFrontEndContactNamesForRiskReference(state) {\n  return get(state, 'processingInstructions.workFlowFrontEndContacts') || [];\n};\nexport var selectProducingBrokerNamesForRiskReference = function selectProducingBrokerNamesForRiskReference(state) {\n  return get(state, 'processingInstructions.producingBrokerNames') || [];\n};\nexport var selectAccountExecutivesForRiskReference = function selectAccountExecutivesForRiskReference(state) {\n  return get(state, 'processingInstructions.piAccountExecutives') || [];\n};\nexport var getSelectedRiskRefInfo = function getSelectedRiskRefInfo(state) {\n  return get(state, 'processingInstructions.selectedRiskRef') || {};\n};\nexport var getRiskReferencesDocumentsCountList = function getRiskReferencesDocumentsCountList(state) {\n  return get(state, 'processingInstructions.riskReferencesDocumentsCountList') || [];\n};\nexport var getIsRiskReferenceDocumentCountLoading = function getIsRiskReferenceDocumentCountLoading(state) {\n  return get(state, 'processingInstructions.isRiskReferenceDocumentCountLoading') || false;\n};\nexport var selectProcessingInstructionById = function selectProcessingInstructionById(id) {\n  return createSelector(selectProcessingInstructions, function (items) {\n    return items[id];\n  });\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.selectors.js"],"names":["get","createSelector","selectRiskRefsForProcessingInstruction","state","selectPiGridDataLoading","selectPiHasNoGridData","selectProcessingInstructions","selectUsersInRoles","selectPiProducingBrokers","selectPiAccountExecutives","selectPiFacilityTypes","selectPiDepartmentList","getDocumentsInfo","selectWorkFlowFrontEndContactNamesForRiskReference","selectProducingBrokerNamesForRiskReference","selectAccountExecutivesForRiskReference","getSelectedRiskRefInfo","getRiskReferencesDocumentsCountList","getIsRiskReferenceDocumentCountLoading","selectProcessingInstructionById","id","items"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport { createSelector } from 'reselect';\r\n\r\nexport const selectRiskRefsForProcessingInstruction = (state) => get(state, 'processingInstructions.riskReferences') || [];\r\nexport const selectPiGridDataLoading = (state) => get(state, 'processingInstructions.isPiGridDataLoading') || false;\r\nexport const selectPiHasNoGridData = (state) => get(state, 'processingInstructions.isPiHasNoGridData') || false;\r\nexport const selectProcessingInstructions = (state) => get(state, 'processingInstructions.instructions') || {};\r\nexport const selectUsersInRoles = (state) => get(state, 'processingInstructions.usersInRoles') || [];\r\nexport const selectPiProducingBrokers = (state) => get(state, 'processingInstructions.producingBrokers') || [];\r\nexport const selectPiAccountExecutives = (state) => get(state, 'processingInstructions.accountExecutives') || [];\r\nexport const selectPiFacilityTypes = (state) => get(state, 'processingInstructions.facilityTypes') || [];\r\nexport const selectPiDepartmentList = (state) => get(state, 'processingInstructions.departmentList') || [];\r\nexport const getDocumentsInfo = (state) => get(state, 'processingInstructions.documents') || {};\r\nexport const selectWorkFlowFrontEndContactNamesForRiskReference = (state) =>\r\n  get(state, 'processingInstructions.workFlowFrontEndContacts') || [];\r\nexport const selectProducingBrokerNamesForRiskReference = (state) => get(state, 'processingInstructions.producingBrokerNames') || [];\r\nexport const selectAccountExecutivesForRiskReference = (state) => get(state, 'processingInstructions.piAccountExecutives') || [];\r\nexport const getSelectedRiskRefInfo = (state) => get(state, 'processingInstructions.selectedRiskRef') || {};\r\nexport const getRiskReferencesDocumentsCountList = (state) => get(state, 'processingInstructions.riskReferencesDocumentsCountList') || [];\r\nexport const getIsRiskReferenceDocumentCountLoading = (state) =>\r\n  get(state, 'processingInstructions.isRiskReferenceDocumentCountLoading') || false;\r\n\r\nexport const selectProcessingInstructionById = (id) => {\r\n  return createSelector(selectProcessingInstructions, (items) => {\r\n    return items[id];\r\n  });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}