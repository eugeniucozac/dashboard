{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PasteFromExcel\\\\PasteFromExcel.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './PasteFromExcel.styles';\nimport { Accordion, Button, Form, Overflow, TableCell, TableHead, Translate, Warning } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Box, TableContainer, Table, TableRow, TableBody, Typography, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPasteFromExcelView.propTypes = {\n  step: PropTypes.number,\n  steps: PropTypes.number,\n  labels: PropTypes.shape({\n    step1: PropTypes.shape({\n      title: PropTypes.node,\n      hint: PropTypes.string,\n      label: PropTypes.string,\n      required: PropTypes.string,\n      placeholder: PropTypes.string\n    }),\n    step2: PropTypes.shape({\n      title: PropTypes.node,\n      hint: PropTypes.string,\n      label: PropTypes.string,\n      error: PropTypes.string\n    }),\n    step3: PropTypes.shape({\n      title: PropTypes.node,\n      hint: PropTypes.string\n    }),\n    step4: PropTypes.shape({\n      title: PropTypes.node,\n      hint: PropTypes.string\n    })\n  }),\n  fields: PropTypes.shape({\n    excelExtract: PropTypes.array,\n    columnMatching: PropTypes.array\n  }).isRequired,\n  rows: PropTypes.array,\n  columns: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string,\n    label: PropTypes.string,\n    compact: PropTypes.bool\n  })),\n  imported: PropTypes.bool,\n  testid: PropTypes.string,\n  isHeaderMappingMissing: PropTypes.bool,\n  handlers: PropTypes.shape({\n    setSteps: PropTypes.func,\n    excelExtract: PropTypes.func,\n    columnMatching: PropTypes.func,\n    submit: PropTypes.func\n  })\n};\nexport function PasteFromExcelView(_ref) {\n  var _this = this;\n\n  var step = _ref.step,\n      steps = _ref.steps,\n      labels = _ref.labels,\n      fields = _ref.fields,\n      rows = _ref.rows,\n      columns = _ref.columns,\n      imported = _ref.imported,\n      testid = _ref.testid,\n      isHeaderMappingMissing = _ref.isHeaderMappingMissing,\n      handlers = _ref.handlers,\n      children = _ref.children;\n  var classes = makeStyles(styles, {\n    name: 'PasteFromExcel'\n  })();\n  var hasRows = utils.generic.isValidArray(rows, true);\n  var has4Steps = steps === 4;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    \"data-testid\": \"paste-from-excel\".concat(testid ? \"-\".concat(testid) : ''),\n    children: [/*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: step === 1,\n      boxed: true,\n      density: \"comfortable\",\n      title: labels.step1.title,\n      onChange: function onChange() {\n        return handlers.setSteps(1);\n      },\n      testid: \"step1\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.hint,\n          children: labels.step1.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Form, {\n          id: \"excel-extract\",\n          fields: fields.excelExtract,\n          defaultValues: utils.form.getInitialValues(fields.excelExtract),\n          validationSchema: utils.form.getValidationSchema(fields.excelExtract),\n          actions: [{\n            name: 'submit',\n            label: utils.string.t('app.continue'),\n            handler: handlers.excelExtract\n          }]\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: step === 2,\n      boxed: true,\n      density: \"comfortable\",\n      title: labels.step2.title,\n      onChange: function onChange() {\n        return handlers.setSteps(2);\n      },\n      testid: \"step2\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: 1,\n        children: [!imported && /*#__PURE__*/_jsxDEV(Warning, {\n          text: labels.step2.error,\n          type: \"error\",\n          size: \"medium\",\n          align: \"left\",\n          icon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 25\n        }, this), imported && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.hint,\n            children: labels.step2.hint\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 119,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Form, {\n            id: \"column-matching\",\n            fields: fields.columnMatching,\n            defaultValues: utils.form.getInitialValues(fields.columnMatching),\n            actions: [{\n              name: 'submit',\n              label: utils.string.t('app.continue'),\n              handler: handlers.columnMatching\n            }]\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: step === 3,\n      boxed: true,\n      density: \"comfortable\",\n      title: labels.step3.title,\n      onChange: function onChange() {\n        return handlers.setSteps(3);\n      },\n      testid: \"step3\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.hint,\n          children: labels.step3.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this), isHeaderMappingMissing && /*#__PURE__*/_jsxDEV(Warning, {\n          text: utils.string.t('products.pasteFromExcel.step3.error'),\n          type: \"error\",\n          size: \"medium\",\n          align: \"left\",\n          icon: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this), children && hasRows && children(rows), !children && hasRows && /*#__PURE__*/_jsxDEV(Box, {\n          mt: -2,\n          children: /*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                size: \"small\",\n                className: classes.table,\n                stickyHeader: true,\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: columns\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: rows.map(function (row, rowIdx) {\n                    var cells = Object.entries(row) || [];\n                    var hasCells = cells.length > 0;\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: hasCells && cells.map(function (_ref2, cellIdx) {\n                        var _ref3 = _slicedToArray(_ref2, 2),\n                            key = _ref3[0],\n                            value = _ref3[1];\n\n                        var cellKey = \"cell-\".concat(cellIdx, \"-\").concat(key);\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          className: classes.cell,\n                          \"data-testid\": cellKey,\n                          children: value\n                        }, cellKey, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 171,\n                          columnNumber: 35\n                        }, _this);\n                      })\n                    }, \"row-\".concat(rowIdx), false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 166,\n                      columnNumber: 27\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 155,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: !imported || isHeaderMappingMissing,\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: has4Steps ? 'app.confirm' : 'app.submit'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 21\n            }, this),\n            nestedClasses: {\n              btn: classes.button\n            },\n            onClick: has4Steps ? function () {\n              return handlers.setSteps(4);\n            } : handlers.submit(rows)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 186,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 145,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), has4Steps && /*#__PURE__*/_jsxDEV(Accordion, {\n      expanded: step === 4,\n      boxed: true,\n      density: \"comfortable\",\n      title: labels.step4.title,\n      onChange: function onChange() {\n        return handlers.setSteps(4);\n      },\n      testid: \"step4\",\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        flexDirection: \"column\",\n        width: 1,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.hint,\n          children: labels.step4.hint\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            color: \"primary\",\n            disabled: !imported,\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"app.submit\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 214,\n              columnNumber: 23\n            }, this),\n            nestedClasses: {\n              btn: classes.button\n            },\n            onClick: handlers.submit(rows)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 210,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 207,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n_c = PasteFromExcelView;\nPasteFromExcelView.displayName = \"PasteFromExcelView\";\nPasteFromExcelView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PasteFromExcelView\",\n  \"props\": {\n    \"step\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"steps\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"labels\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"step1\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"title\": {\n                \"name\": \"node\",\n                \"required\": false\n              },\n              \"hint\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"label\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"required\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"placeholder\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            },\n            \"required\": false\n          },\n          \"step2\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"title\": {\n                \"name\": \"node\",\n                \"required\": false\n              },\n              \"hint\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"label\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"error\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            },\n            \"required\": false\n          },\n          \"step3\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"title\": {\n                \"name\": \"node\",\n                \"required\": false\n              },\n              \"hint\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            },\n            \"required\": false\n          },\n          \"step4\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"title\": {\n                \"name\": \"node\",\n                \"required\": false\n              },\n              \"hint\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            },\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"excelExtract\": {\n            \"name\": \"array\",\n            \"required\": false\n          },\n          \"columnMatching\": {\n            \"name\": \"array\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"rows\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"columns\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"compact\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"imported\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"testid\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isHeaderMappingMissing\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"setSteps\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"excelExtract\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"columnMatching\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"submit\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PasteFromExcel\\\\PasteFromExcel.view.js\"] = {\n    name: \"PasteFromExcelView\",\n    docgenInfo: PasteFromExcelView.__docgenInfo,\n    path: \"src\\\\modules\\\\PasteFromExcel\\\\PasteFromExcel.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PasteFromExcelView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PasteFromExcel/PasteFromExcel.view.js"],"names":["React","PropTypes","styles","Accordion","Button","Form","Overflow","TableCell","TableHead","Translate","Warning","utils","Box","TableContainer","Table","TableRow","TableBody","Typography","makeStyles","PasteFromExcelView","propTypes","step","number","steps","labels","shape","step1","title","node","hint","string","label","required","placeholder","step2","error","step3","step4","fields","excelExtract","array","columnMatching","isRequired","rows","columns","arrayOf","id","compact","bool","imported","testid","isHeaderMappingMissing","handlers","setSteps","func","submit","children","classes","name","hasRows","generic","isValidArray","has4Steps","root","form","getInitialValues","getValidationSchema","t","handler","tableContainer","table","map","row","rowIdx","cells","Object","entries","hasCells","length","cellIdx","key","value","cellKey","cell","btn","button"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './PasteFromExcel.styles';\r\nimport { Accordion, Button, Form, Overflow, TableCell, TableHead, Translate, Warning } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Box, TableContainer, Table, TableRow, TableBody, Typography, makeStyles } from '@material-ui/core';\r\n\r\nPasteFromExcelView.propTypes = {\r\n  step: PropTypes.number,\r\n  steps: PropTypes.number,\r\n  labels: PropTypes.shape({\r\n    step1: PropTypes.shape({\r\n      title: PropTypes.node,\r\n      hint: PropTypes.string,\r\n      label: PropTypes.string,\r\n      required: PropTypes.string,\r\n      placeholder: PropTypes.string,\r\n    }),\r\n    step2: PropTypes.shape({\r\n      title: PropTypes.node,\r\n      hint: PropTypes.string,\r\n      label: PropTypes.string,\r\n      error: PropTypes.string,\r\n    }),\r\n    step3: PropTypes.shape({\r\n      title: PropTypes.node,\r\n      hint: PropTypes.string,\r\n    }),\r\n    step4: PropTypes.shape({\r\n      title: PropTypes.node,\r\n      hint: PropTypes.string,\r\n    }),\r\n  }),\r\n  fields: PropTypes.shape({\r\n    excelExtract: PropTypes.array,\r\n    columnMatching: PropTypes.array,\r\n  }).isRequired,\r\n  rows: PropTypes.array,\r\n  columns: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string,\r\n      label: PropTypes.string,\r\n      compact: PropTypes.bool,\r\n    })\r\n  ),\r\n  imported: PropTypes.bool,\r\n  testid: PropTypes.string,\r\n  isHeaderMappingMissing: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    setSteps: PropTypes.func,\r\n    excelExtract: PropTypes.func,\r\n    columnMatching: PropTypes.func,\r\n    submit: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function PasteFromExcelView({\r\n  step,\r\n  steps,\r\n  labels,\r\n  fields,\r\n  rows,\r\n  columns,\r\n  imported,\r\n  testid,\r\n  isHeaderMappingMissing,\r\n  handlers,\r\n  children,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PasteFromExcel' })();\r\n\r\n  const hasRows = utils.generic.isValidArray(rows, true);\r\n  const has4Steps = steps === 4;\r\n\r\n  return (\r\n    <div className={classes.root} data-testid={`paste-from-excel${testid ? `-${testid}` : ''}`}>\r\n      <Accordion\r\n        expanded={step === 1}\r\n        boxed\r\n        density=\"comfortable\"\r\n        title={labels.step1.title}\r\n        onChange={() => handlers.setSteps(1)}\r\n        testid=\"step1\"\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\" width={1}>\r\n          <Typography className={classes.hint}>{labels.step1.hint}</Typography>\r\n          <Form\r\n            id=\"excel-extract\"\r\n            fields={fields.excelExtract}\r\n            defaultValues={utils.form.getInitialValues(fields.excelExtract)}\r\n            validationSchema={utils.form.getValidationSchema(fields.excelExtract)}\r\n            actions={[\r\n              {\r\n                name: 'submit',\r\n                label: utils.string.t('app.continue'),\r\n                handler: handlers.excelExtract,\r\n              },\r\n            ]}\r\n          />\r\n        </Box>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        expanded={step === 2}\r\n        boxed\r\n        density=\"comfortable\"\r\n        title={labels.step2.title}\r\n        onChange={() => handlers.setSteps(2)}\r\n        testid=\"step2\"\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\" width={1}>\r\n          {!imported && <Warning text={labels.step2.error} type=\"error\" size=\"medium\" align=\"left\" icon />}\r\n          {imported && (\r\n            <>\r\n              <Typography className={classes.hint}>{labels.step2.hint}</Typography>\r\n              <Form\r\n                id=\"column-matching\"\r\n                fields={fields.columnMatching}\r\n                defaultValues={utils.form.getInitialValues(fields.columnMatching)}\r\n                actions={[\r\n                  {\r\n                    name: 'submit',\r\n                    label: utils.string.t('app.continue'),\r\n                    handler: handlers.columnMatching,\r\n                  },\r\n                ]}\r\n              />\r\n            </>\r\n          )}\r\n        </Box>\r\n      </Accordion>\r\n\r\n      <Accordion\r\n        expanded={step === 3}\r\n        boxed\r\n        density=\"comfortable\"\r\n        title={labels.step3.title}\r\n        onChange={() => handlers.setSteps(3)}\r\n        testid=\"step3\"\r\n      >\r\n        <Box display=\"flex\" flexDirection=\"column\" width={1}>\r\n          <Typography className={classes.hint}>{labels.step3.hint}</Typography>\r\n\r\n          {isHeaderMappingMissing && (\r\n            <Warning text={utils.string.t('products.pasteFromExcel.step3.error')} type=\"error\" size=\"medium\" align=\"left\" icon />\r\n          )}\r\n\r\n          {children && hasRows && children(rows)}\r\n\r\n          {!children && hasRows && (\r\n            <Box mt={-2}>\r\n              <Overflow>\r\n                <TableContainer className={classes.tableContainer}>\r\n                  <Table size=\"small\" className={classes.table} stickyHeader>\r\n                    <TableHead columns={columns} />\r\n                    <TableBody>\r\n                      {rows.map((row, rowIdx) => {\r\n                        const cells = Object.entries(row) || [];\r\n                        const hasCells = cells.length > 0;\r\n\r\n                        return (\r\n                          <TableRow key={`row-${rowIdx}`}>\r\n                            {hasCells &&\r\n                              cells.map(([key, value], cellIdx) => {\r\n                                const cellKey = `cell-${cellIdx}-${key}`;\r\n                                return (\r\n                                  <TableCell className={classes.cell} key={cellKey} data-testid={cellKey}>\r\n                                    {value}\r\n                                  </TableCell>\r\n                                );\r\n                              })}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Overflow>\r\n            </Box>\r\n          )}\r\n\r\n          <Box mt={1} display=\"flex\" justifyContent=\"flex-end\">\r\n            <Button\r\n              color=\"primary\"\r\n              disabled={!imported || isHeaderMappingMissing}\r\n              text={<Translate label={has4Steps ? 'app.confirm' : 'app.submit'} />}\r\n              nestedClasses={{ btn: classes.button }}\r\n              onClick={has4Steps ? () => handlers.setSteps(4) : handlers.submit(rows)}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </Accordion>\r\n\r\n      {has4Steps && (\r\n        <Accordion\r\n          expanded={step === 4}\r\n          boxed\r\n          density=\"comfortable\"\r\n          title={labels.step4.title}\r\n          onChange={() => handlers.setSteps(4)}\r\n          testid=\"step4\"\r\n        >\r\n          <Box display=\"flex\" flexDirection=\"column\" width={1}>\r\n            <Typography className={classes.hint}>{labels.step4.hint}</Typography>\r\n\r\n            <Box mt={1} display=\"flex\" justifyContent=\"flex-end\">\r\n              <Button\r\n                color=\"primary\"\r\n                disabled={!imported}\r\n                text={<Translate label=\"app.submit\" />}\r\n                nestedClasses={{ btn: classes.button }}\r\n                onClick={handlers.submit(rows)}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </Accordion>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}