{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminFacilities\\\\ProductsAdminFacilities.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport startCase from 'lodash/startCase';\nimport get from 'lodash/get'; // app\n\nimport styles from './ProductsAdminFacilities.styles';\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { ROLE_UNDERWRITER } from 'consts'; // mui\n\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProductsAdminFacilitiesView.propTypes = {\n  schema: PropTypes.object.isRequired,\n  options: PropTypes.object.isRequired,\n  loading: PropTypes.bool.isRequired,\n  pagination: PropTypes.object.isRequired,\n  popoverActions: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    addFacility: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ProductsAdminFacilitiesView(_ref) {\n  var _this = this,\n      _schema$fields;\n\n  var schema = _ref.schema,\n      options = _ref.options,\n      loading = _ref.loading,\n      pagination = _ref.pagination,\n      popoverActions = _ref.popoverActions,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ProductsAdminFacilities'\n  })();\n\n  var transformValue = function transformValue(field, value, options) {\n    if (!value) return;\n\n    switch (field.transform) {\n      case 'option':\n        return utils.form.getSelectOption(field.optionsDynamicKey, options, value) || '';\n\n      case 'currency':\n        return /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.currency\",\n          options: {\n            value: {\n              number: value,\n              currency: get(constants.CURRENCY_USD, 'code')\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 16\n        }, _this);\n\n      case 'date':\n        return /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.date\",\n          options: {\n            value: {\n              date: value,\n              format: config.ui.format.date.text\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 43,\n          columnNumber: 16\n        }, _this);\n\n      case 'capitalise':\n        return startCase(value.toLowerCase());\n\n      default:\n        return value;\n    }\n  };\n\n  var formatValue = function formatValue(item, field) {\n    var _item$field$id;\n\n    switch (field === null || field === void 0 ? void 0 : field.id) {\n      case 'permissionToBindGroups':\n      case 'permissionToDismissIssuesGroups':\n        return (_item$field$id = item[field.id]) === null || _item$field$id === void 0 ? void 0 : _item$field$id.filter(function (f) {\n          return f !== ROLE_UNDERWRITER;\n        }).map(function (a) {\n          return a.charAt(0).toUpperCase() + a.substr(1).toLowerCase();\n        }).join(', ');\n\n      case 'preBind':\n        {\n          return item[field.id] ? utils.string.t('app.yes') : utils.string.t('app.no');\n        }\n\n      default:\n        return item[field.id];\n    }\n  };\n\n  var isReady = !loading && schema.dependenciesLoaded(options);\n  var hasRows = utils.generic.isValidArray(schema.items, true);\n  var newSchemaFields = schema === null || schema === void 0 ? void 0 : (_schema$fields = schema.fields) === null || _schema$fields === void 0 ? void 0 : _schema$fields.filter(function (field) {\n    return (field === null || field === void 0 ? void 0 : field.displayColumn) !== false && field.id !== 'notifiedUsers';\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    \"data-testid\": \"products-admin-facilities\",\n    children: [(loading || !isReady) && /*#__PURE__*/_jsxDEV(Loader, {\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 33\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: [].concat(_toConsumableArray(utils.schemas.removeIcons(newSchemaFields)), [{\n            id: 'menu'\n          }])\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: [hasRows && schema.items.map(function (item) {\n            var classesRow = _defineProperty({}, classes.rowNew, item.__new__);\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classnames(classesRow),\n              children: [newSchemaFields && newSchemaFields.map(function (field) {\n                return (field === null || field === void 0 ? void 0 : field.id) === 'notifiedUsers' ? null : /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, field.cellProps), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    className: classes.layers,\n                    children: field.transform ? transformValue(field, item[field.id], options) : formatValue(item, field)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 29\n                  }, _this)\n                }), \"\".concat(item.id, \"-\").concat(field.id), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 27\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                \"data-testid\": \"facility-menu\",\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"products-admin-facility-table-popover\",\n                  data: {\n                    facility: item,\n                    fields: schema.fields,\n                    options: options\n                  },\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 21\n              }, _this)]\n            }, \"\".concat(item.id), true, {\n              fileName: _jsxFileName,\n              lineNumber: 83,\n              columnNumber: 19\n            }, _this);\n          }), !hasRows && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: schema.items.length,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                height: 350 - 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 107,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 106,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 105,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            color: \"primary\",\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: 'products.admin.facilities.add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this),\n            \"data-testid\": 'facilities-create-button',\n            onClick: handlers.addFacility(schema.fields)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: schema.pagination && pagination.page !== undefined && /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handlers.changePage,\n          onChangeRowsPerPage: handlers.changeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 72,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductsAdminFacilitiesView;\nProductsAdminFacilitiesView.displayName = \"ProductsAdminFacilitiesView\";\nProductsAdminFacilitiesView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProductsAdminFacilitiesView\",\n  \"props\": {\n    \"schema\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"loading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"popoverActions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"addFacility\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProductsAdminFacilities\\\\ProductsAdminFacilities.view.js\"] = {\n    name: \"ProductsAdminFacilitiesView\",\n    docgenInfo: ProductsAdminFacilitiesView.__docgenInfo,\n    path: \"src\\\\modules\\\\ProductsAdminFacilities\\\\ProductsAdminFacilities.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminFacilitiesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminFacilities/ProductsAdminFacilities.view.js"],"names":["React","PropTypes","classnames","startCase","get","styles","Button","Loader","Overflow","Pagination","PopoverMenu","TableCell","TableHead","Translate","constants","utils","config","ROLE_UNDERWRITER","Grid","makeStyles","Box","Table","TableBody","TableRow","Typography","AddIcon","ProductsAdminFacilitiesView","propTypes","schema","object","isRequired","options","loading","bool","pagination","popoverActions","array","handlers","shape","addFacility","func","changePage","changeRowsPerPage","classes","name","transformValue","field","value","transform","form","getSelectOption","optionsDynamicKey","number","currency","CURRENCY_USD","date","format","ui","text","toLowerCase","formatValue","item","id","filter","f","map","a","charAt","toUpperCase","substr","join","string","t","isReady","dependenciesLoaded","hasRows","generic","isValidArray","items","newSchemaFields","fields","displayColumn","schemas","removeIcons","classesRow","rowNew","__new__","cellProps","layers","facility","length","page","undefined","rowsTotal","rowsPerPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport startCase from 'lodash/startCase';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ProductsAdminFacilities.styles';\r\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { ROLE_UNDERWRITER } from 'consts';\r\n\r\n// mui\r\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nProductsAdminFacilitiesView.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  options: PropTypes.object.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    addFacility: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ProductsAdminFacilitiesView({ schema, options, loading, pagination, popoverActions, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ProductsAdminFacilities' })();\r\n\r\n  const transformValue = (field, value, options) => {\r\n    if (!value) return;\r\n    switch (field.transform) {\r\n      case 'option':\r\n        return utils.form.getSelectOption(field.optionsDynamicKey, options, value) || '';\r\n      case 'currency':\r\n        return <Translate label=\"format.currency\" options={{ value: { number: value, currency: get(constants.CURRENCY_USD, 'code') } }} />;\r\n      case 'date':\r\n        return <Translate label=\"format.date\" options={{ value: { date: value, format: config.ui.format.date.text } }} />;\r\n      case 'capitalise':\r\n        return startCase(value.toLowerCase());\r\n      default:\r\n        return value;\r\n    }\r\n  };\r\n\r\n  const formatValue = (item, field) => {\r\n    switch (field?.id) {\r\n      case 'permissionToBindGroups':\r\n      case 'permissionToDismissIssuesGroups':\r\n        return item[field.id]\r\n          ?.filter((f) => f !== ROLE_UNDERWRITER)\r\n          .map((a) => a.charAt(0).toUpperCase() + a.substr(1).toLowerCase())\r\n          .join(', ');\r\n      case 'preBind': {\r\n        return item[field.id] ? utils.string.t('app.yes') : utils.string.t('app.no');\r\n      }\r\n      default:\r\n        return item[field.id];\r\n    }\r\n  };\r\n\r\n  const isReady = !loading && schema.dependenciesLoaded(options);\r\n  const hasRows = utils.generic.isValidArray(schema.items, true);\r\n  const newSchemaFields = schema?.fields?.filter((field) => field?.displayColumn !== false && field.id !== 'notifiedUsers');\r\n\r\n  return (\r\n    <Box position=\"relative\" data-testid=\"products-admin-facilities\">\r\n      {(loading || !isReady) && <Loader absolute />}\r\n\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={[...utils.schemas.removeIcons(newSchemaFields), { id: 'menu' }]} />\r\n          <TableBody>\r\n            {hasRows &&\r\n              schema.items.map((item) => {\r\n                const classesRow = { [classes.rowNew]: item.__new__ };\r\n                return (\r\n                  <TableRow key={`${item.id}`} className={classnames(classesRow)}>\r\n                    {newSchemaFields &&\r\n                      newSchemaFields.map((field) => {\r\n                        return field?.id === 'notifiedUsers' ? null : (\r\n                          <TableCell key={`${item.id}-${field.id}`} {...field.cellProps}>\r\n                            <Typography variant=\"body2\" className={classes.layers}>\r\n                              {field.transform ? transformValue(field, item[field.id], options) : formatValue(item, field)}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    <TableCell menu data-testid={`facility-menu`}>\r\n                      <PopoverMenu\r\n                        id=\"products-admin-facility-table-popover\"\r\n                        data={{ facility: item, fields: schema.fields, options }}\r\n                        items={popoverActions}\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {!hasRows && (\r\n              <TableRow>\r\n                <TableCell colSpan={schema.items.length}>\r\n                  <Box height={350 - 16} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box mt={2}>\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              text={<Translate label={'products.admin.facilities.add'} />}\r\n              data-testid={'facilities-create-button'}\r\n              onClick={handlers.addFacility(schema.fields)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          {schema.pagination && pagination.page !== undefined && (\r\n            <Pagination\r\n              page={pagination.page}\r\n              count={pagination.rowsTotal}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n              onChangePage={handlers.changePage}\r\n              onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}