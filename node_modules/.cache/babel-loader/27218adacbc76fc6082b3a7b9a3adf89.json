{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, storeProcessingInstruction } from 'stores';\nimport * as utils from 'utils';\nexport var updateProcessingInstruction = function updateProcessingInstruction(instruction) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.updateProcessingInstruction'\n    };\n    dispatch(updateProcessingInstructionRequest(instruction));\n    dispatch(addLoader('updateProcessingInstruction'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: 'instruction/updateInstructionDetails',\n      data: instruction\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(updateProcessingInstructionSuccess(data.data));\n      dispatch(storeProcessingInstruction(data.data));\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (updateProcessingInstruction)'\n      }));\n      dispatch(updateProcessingInstructionFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('updateProcessingInstruction'));\n    });\n  };\n};\nexport var updateProcessingInstructionRequest = function updateProcessingInstructionRequest(instruction) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_REQUEST',\n    payload: instruction\n  };\n};\nexport var updateProcessingInstructionSuccess = function updateProcessingInstructionSuccess(json) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_SUCCESS',\n    payload: json\n  };\n};\nexport var updateProcessingInstructionFailure = function updateProcessingInstructionFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.updateProcessingInstruction.js"],"names":["addLoader","removeLoader","storeProcessingInstruction","utils","updateProcessingInstruction","instruction","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","updateProcessingInstructionRequest","api","post","token","accessToken","ppService","path","data","then","response","handleResponse","json","handleNewData","updateProcessingInstructionSuccess","catch","err","handleError","message","updateProcessingInstructionFailure","finally","type","payload","error"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,YAApB,EAAkCC,0BAAlC,QAAoE,QAApE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,WAAD;AAAA,SAAiB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClF;AADkF,oBAEzBA,QAAQ,EAFiB;AAAA,QAElEC,IAFkE,aAE1EC,IAF0E,CAElED,IAFkE;AAAA,QAExCE,QAFwC,aAE1DC,MAF0D,CAEhDC,IAFgD,CAExCF,QAFwC;;AAIlF,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,kCAAkC,CAACV,WAAD,CAAnC,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,6BAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACa,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADR;AAEJT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,SAFf;AAGJC,MAAAA,IAAI,EAAE,sCAHF;AAIJC,MAAAA,IAAI,EAAEjB;AAJF,KADD,EAOJkB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACa,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUvB,KAAK,CAACa,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdhB,MAAAA,QAAQ,CAACsB,kCAAkC,CAACN,IAAI,CAACA,IAAN,CAAnC,CAAR;AACAhB,MAAAA,QAAQ,CAACJ,0BAA0B,CAACoB,IAAI,CAACA,IAAN,CAA3B,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAbI,EAcJO,KAdI,CAcE,UAACC,GAAD,EAAS;AACd3B,MAAAA,KAAK,CAACa,GAAN,CAAUe,WAAV,CAAsBD,GAAtB,kCAAgCjB,YAAhC;AAA8CmB,QAAAA,OAAO,EAAE;AAAvD;AACA1B,MAAAA,QAAQ,CAAC2B,kCAAkC,CAACH,GAAD,CAAnC,CAAR;AACA,aAAOA,GAAP;AACD,KAlBI,EAmBJI,OAnBI,CAmBI,YAAM;AACb5B,MAAAA,QAAQ,CAACL,YAAY,CAAC,6BAAD,CAAb,CAAR;AACD,KArBI,CAAP;AAsBD,GAjC0C;AAAA,CAApC;AAmCP,OAAO,IAAMc,kCAAkC,GAAG,SAArCA,kCAAqC,CAACV,WAAD,EAAiB;AACjE,SAAO;AACL8B,IAAAA,IAAI,EAAE,+DADD;AAELC,IAAAA,OAAO,EAAE/B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMuB,kCAAkC,GAAG,SAArCA,kCAAqC,CAACF,IAAD,EAAU;AAC1D,SAAO;AACLS,IAAAA,IAAI,EAAE,+DADD;AAELC,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMO,kCAAkC,GAAG,SAArCA,kCAAqC,CAACI,KAAD,EAAW;AAC3D,SAAO;AACLF,IAAAA,IAAI,EAAE,+DADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, removeLoader, storeProcessingInstruction } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const updateProcessingInstruction = (instruction) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.updateProcessingInstruction',\r\n  };\r\n\r\n  dispatch(updateProcessingInstructionRequest(instruction));\r\n  dispatch(addLoader('updateProcessingInstruction'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: 'instruction/updateInstructionDetails',\r\n      data: instruction,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(updateProcessingInstructionSuccess(data.data));\r\n      dispatch(storeProcessingInstruction(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (updateProcessingInstruction)' });\r\n      dispatch(updateProcessingInstructionFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('updateProcessingInstruction'));\r\n    });\r\n};\r\n\r\nexport const updateProcessingInstructionRequest = (instruction) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_REQUEST',\r\n    payload: instruction,\r\n  };\r\n};\r\n\r\nexport const updateProcessingInstructionSuccess = (json) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_SUCCESS',\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const updateProcessingInstructionFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_UPDATE_PROCESSING_INSTRUCTION_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}