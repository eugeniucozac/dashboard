{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LayerAccordion\\\\LayerAccordion.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport toNumber from 'lodash/toNumber'; // app\n\nimport { LayerAccordionView } from './LayerAccordion.view';\nimport { Translate } from 'components';\nimport { selectRefDataDepartments, selectRefDataStatusesMarketQuote } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { useTheme } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLayerAccordion.propTypes = {\n  placement: PropTypes.object.isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  })\n};\nLayerAccordion.defaultProps = {\n  nestedClasses: {}\n};\nexport default function LayerAccordion(_ref) {\n  _s();\n\n  var placement = _ref.placement,\n      nestedClasses = _ref.nestedClasses;\n  var theme = useTheme();\n  var refDataDepartments = useSelector(selectRefDataDepartments);\n  var refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n\n  var buildChartData = function buildChartData(value, label) {\n    return {\n      datasets: [{\n        data: [value <= 100 ? value : Math.min(100, value - 100), value <= 100 ? 100 - value : Math.max(0, 100 - (value - 100))],\n        backgroundColor: [value <= 100 ? theme.palette.primary.main : theme.palette.secondary.main, value <= 100 ? theme.palette.neutral.light : theme.palette.primary.main]\n      }],\n      labels: [utils.string.t(label), '']\n    };\n  };\n\n  var cols = [{\n    id: 'layer',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"placement.generic.layer\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 27\n    }, this)\n  }, {\n    id: 'premium',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"placement.generic.premium\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 29\n    }, this),\n    align: 'center'\n  }, {\n    id: 'written',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"placement.generic.written\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 29\n    }, this),\n    align: 'center',\n    compact: true\n  }, {\n    id: 'signed',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"placement.generic.signed\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 28\n    }, this),\n    align: 'center',\n    compact: true\n  }, {\n    id: 'status',\n    label: /*#__PURE__*/_jsxDEV(Translate, {\n      label: \"placement.generic.status\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 28\n    }, this),\n    align: 'center',\n    compact: true\n  }];\n  var statusPendingId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_PENDING);\n  var statusQuotedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\n  var statusDeclinedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_DECLINED);\n  var departmentId = get(placement, 'departmentId');\n  var department = utils.referenceData.departments.getById(refDataDepartments, departmentId);\n  var businessTypes = department && department.businessTypes;\n  var itemsGrouped = utils.layers.getByBusinessType(placement === null || placement === void 0 ? void 0 : placement.layers);\n  var itemsParsed = itemsGrouped.map(function (_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 2),\n        key = _ref3[0],\n        items = _ref3[1];\n\n    var businessTypeName = utils.referenceData.businessTypes.getNameById(businessTypes, toNumber(key));\n    var orderedItems = utils.layers.orderLayers(items);\n    return [businessTypeName, orderedItems];\n  }); // abort\n\n  if (utils.generic.isInvalidOrEmptyArray(placement === null || placement === void 0 ? void 0 : placement.layers)) return null;\n  return /*#__PURE__*/_jsxDEV(LayerAccordionView, {\n    groups: itemsParsed,\n    cols: cols,\n    statuses: {\n      quoted: statusQuotedId,\n      pending: statusPendingId,\n      declined: statusDeclinedId\n    },\n    handlers: {\n      buildChartData: buildChartData\n    },\n    nestedClasses: nestedClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 78,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LayerAccordion, \"zrRCylpPXf7gnNrwKQ3q7MOYULY=\", false, function () {\n  return [useTheme, useSelector, useSelector];\n});\n\n_c = LayerAccordion;\nLayerAccordion.displayName = \"LayerAccordion\";\nLayerAccordion.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LayerAccordion\",\n  \"props\": {\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placement\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\LayerAccordion\\\\LayerAccordion.js\"] = {\n    name: \"LayerAccordion\",\n    docgenInfo: LayerAccordion.__docgenInfo,\n    path: \"src\\\\modules\\\\LayerAccordion\\\\LayerAccordion.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LayerAccordion\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LayerAccordion/LayerAccordion.js"],"names":["React","PropTypes","useSelector","get","toNumber","LayerAccordionView","Translate","selectRefDataDepartments","selectRefDataStatusesMarketQuote","constants","utils","useTheme","LayerAccordion","propTypes","placement","object","isRequired","nestedClasses","shape","root","string","defaultProps","theme","refDataDepartments","refDataStatusesMarketQuote","buildChartData","value","label","datasets","data","Math","min","max","backgroundColor","palette","primary","main","secondary","neutral","light","labels","t","cols","id","align","compact","statusPendingId","referenceData","status","getIdByCode","STATUS_MARKET_PENDING","statusQuotedId","STATUS_MARKET_QUOTED","statusDeclinedId","STATUS_MARKET_DECLINED","departmentId","department","departments","getById","businessTypes","itemsGrouped","layers","getByBusinessType","itemsParsed","map","key","items","businessTypeName","getNameById","orderedItems","orderLayers","generic","isInvalidOrEmptyArray","quoted","pending","declined"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport toNumber from 'lodash/toNumber';\r\n\r\n// app\r\nimport { LayerAccordionView } from './LayerAccordion.view';\r\nimport { Translate } from 'components';\r\nimport { selectRefDataDepartments, selectRefDataStatusesMarketQuote } from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { useTheme } from '@material-ui/core';\r\n\r\nLayerAccordion.propTypes = {\r\n  placement: PropTypes.object.isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n};\r\n\r\nLayerAccordion.defaultProps = {\r\n  nestedClasses: {},\r\n};\r\n\r\nexport default function LayerAccordion({ placement, nestedClasses }) {\r\n  const theme = useTheme();\r\n  const refDataDepartments = useSelector(selectRefDataDepartments);\r\n  const refDataStatusesMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n\r\n  const buildChartData = (value, label) => {\r\n    return {\r\n      datasets: [\r\n        {\r\n          data: [value <= 100 ? value : Math.min(100, value - 100), value <= 100 ? 100 - value : Math.max(0, 100 - (value - 100))],\r\n          backgroundColor: [\r\n            value <= 100 ? theme.palette.primary.main : theme.palette.secondary.main,\r\n            value <= 100 ? theme.palette.neutral.light : theme.palette.primary.main,\r\n          ],\r\n        },\r\n      ],\r\n      labels: [utils.string.t(label), ''],\r\n    };\r\n  };\r\n\r\n  const cols = [\r\n    { id: 'layer', label: <Translate label=\"placement.generic.layer\" /> },\r\n    { id: 'premium', label: <Translate label=\"placement.generic.premium\" />, align: 'center' },\r\n    { id: 'written', label: <Translate label=\"placement.generic.written\" />, align: 'center', compact: true },\r\n    { id: 'signed', label: <Translate label=\"placement.generic.signed\" />, align: 'center', compact: true },\r\n    { id: 'status', label: <Translate label=\"placement.generic.status\" />, align: 'center', compact: true },\r\n  ];\r\n\r\n  const statusPendingId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_PENDING);\r\n  const statusQuotedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_QUOTED);\r\n  const statusDeclinedId = utils.referenceData.status.getIdByCode(refDataStatusesMarketQuote, constants.STATUS_MARKET_DECLINED);\r\n\r\n  const departmentId = get(placement, 'departmentId');\r\n  const department = utils.referenceData.departments.getById(refDataDepartments, departmentId);\r\n  const businessTypes = department && department.businessTypes;\r\n\r\n  const itemsGrouped = utils.layers.getByBusinessType(placement?.layers);\r\n\r\n  const itemsParsed = itemsGrouped.map(([key, items]) => {\r\n    const businessTypeName = utils.referenceData.businessTypes.getNameById(businessTypes, toNumber(key));\r\n\r\n    const orderedItems = utils.layers.orderLayers(items);\r\n\r\n    return [businessTypeName, orderedItems];\r\n  });\r\n\r\n  // abort\r\n  if (utils.generic.isInvalidOrEmptyArray(placement?.layers)) return null;\r\n\r\n  return (\r\n    <LayerAccordionView\r\n      groups={itemsParsed}\r\n      cols={cols}\r\n      statuses={{\r\n        quoted: statusQuotedId,\r\n        pending: statusPendingId,\r\n        declined: statusDeclinedId,\r\n      }}\r\n      handlers={{\r\n        buildChartData,\r\n      }}\r\n      nestedClasses={nestedClasses}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}