{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport styles from './LinkClaimPolicy.styles';\nimport { Accordion, FormLegend, FormAutocompleteMui, FormDate, FormLabel, FormText, Skeleton } from 'components';\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\nimport * as utils from 'utils';\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LinkClaimPolicyView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      policyData = _ref.policyData,\n      uwResetKey = _ref.uwResetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      underWritingGroups = _ref.underWritingGroups,\n      isBordereauFlag = _ref.isBordereauFlag,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      postSaveHandler = _ref.postSaveHandler,\n      postEditSaveHandler = _ref.postEditSaveHandler,\n      saveStatus = _ref.saveStatus,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      handleFormStatus = _ref.handleFormStatus,\n      selectNextPolicy = _ref.selectNextPolicy,\n      postSaveNextHanlder = _ref.postSaveNextHanlder,\n      fieldsLoader = _ref.fieldsLoader;\n  var classes = makeStyles(styles, {\n    name: 'LinkClaimPolicy'\n  })();\n  var focusInputRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isEdit = _useState2[0],\n      setIsEdit = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      initialLoad = _useState4[0],\n      setInitialLoad = _useState4[1];\n\n  var _useState5 = useState(true),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accExpandStatus = _useState6[0],\n      setAccExpandStatus = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  }));\n  var handleSubmit = claimForm.handleSubmit,\n      setValue = claimForm.setValue,\n      control = claimForm.control,\n      errors = claimForm.errors,\n      watch = claimForm.watch;\n  var insuredWatch = Boolean(watch('insured'));\n  var clientWatch = Boolean(watch('client'));\n  var countryCodeWatch = Boolean(watch('countryCode'));\n  var certificateNumberWatch = Boolean(watch('certificateNumber'));\n  var certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\n  var certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\n  var originalCurrencyCodeWatch = Boolean(watch('originalCurrencyCode'));\n  var settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\n  var interestWatch = Boolean(watch('interest'));\n  var underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\n\n  var formWatcher = function formWatcher() {\n    return insuredWatch || clientWatch || countryCodeWatch || certificateNumberWatch || certificateInceptionDateWatch || certificateExpiryDateWatch || originalCurrencyCodeWatch || settlementCurrencyCodeWatch || interestWatch || underWritingGroupsWatch;\n  };\n\n  var saveHandler = function saveHandler() {\n    if (selectedPolicyRender !== '' && initialLoad || initialLoad && validation) {\n      handleFormStatus();\n    }\n  };\n\n  if (formWatcher() !== isEdit) {\n    if (formWatcher()) setIsEdit(true);\n  }\n\n  useEffect(function () {\n    if (isEdit && initialLoad) {\n      saveHandler();\n    } else {\n      var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n        return _objectSpread({}, form);\n      });\n\n      if (formState[index]['formEditedStatus']) {\n        formState[index]['formEditedStatus'] = false;\n        formState[index]['isSubmitted'] = true;\n        setFormEditedStatus(formState);\n      }\n\n      setInitialLoad(true);\n    }\n  }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _isFormsEdited$index, _isFormsEdited$index2;\n\n    if (saveStatus && !((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) && initialLoad && !selectNextPolicy) {\n      handleSubmit(postSaveHandler)();\n    } else if (saveStatus && ((_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) && validation && !selectNextPolicy) {\n      handleSubmit(postEditSaveHandler)();\n    } else if (selectNextPolicy && initialLoad) {\n      handleSubmit(postSaveNextHanlder)();\n    }\n\n    setValidation(true);\n  }, [saveStatus]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (underWritingGroups) {\n      if (underWritingGroups.percentageOfSelected) {\n        setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n        if (selectedPolicyRender !== '') saveHandler();\n      } else {\n        setValue('order', '100');\n      }\n    }\n  }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _Object$keys;\n\n    if (isBordereauFlag && !Object.keys(errors).length > 0) {\n      setValue('certificateNumber', fields[9].value);\n      setValue('certificateInceptionDate', fields[10].value);\n      setValue('certificateExpiryDate', fields[11].value);\n    }\n\n    if (((_Object$keys = Object.keys(errors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) {\n      var _focusInputRef$curren;\n\n      focusInputRef === null || focusInputRef === void 0 ? void 0 : (_focusInputRef$curren = focusInputRef.current) === null || _focusInputRef$curren === void 0 ? void 0 : _focusInputRef$curren.scrollIntoView();\n    }\n  }, [uwResetKey, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n      text: policyData === null || policyData === void 0 ? void 0 : policyData.policyNumber\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 138,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: -2,\n      ref: focusInputRef,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 3,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fieldsLoader.isInsuredLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 15,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 145,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 55,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'insured', control)), {}, {\n              error: errors.insured,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this)\n          }, uwResetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fieldsLoader.isPoliciesClientsLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 15,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 165,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 55,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'client', control)), {}, {\n              error: errors.client,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)\n          }, uwResetKey || isEdit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 162,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 161,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'countryCode', control)), {}, {\n              error: errors.countryCode,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }, this)\n          }, uwResetKey || isEdit, false, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 181,\n          columnNumber: 11\n        }, this), isBordereauFlag && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              nestedClasses: {\n                root: classes.formLabel\n              },\n              label: \"\".concat(utils.string.t('claims.claimInformation.certificateNumber'))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateNumber', control)), {}, {\n              error: errors.certificateNumber\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 196,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              nestedClasses: {\n                root: classes.formLabel\n              },\n              label: \"\".concat(utils.string.t('claims.claimInformation.certificateInceptionDate'))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 205,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateInceptionDate', control)), {}, {\n              error: errors.certificateInceptionDate\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 209,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 204,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n              nestedClasses: {\n                root: classes.formLabel\n              },\n              label: \"\".concat(utils.string.t('claims.claimInformation.certificateExpiryDate'))\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'certificateExpiryDate', control)), {}, {\n              error: errors.certificateExpiryDate\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 220,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 215,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'originalCurrencyCode', control)), {}, {\n              error: errors.originalCurrencyCode,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)\n          }, uwResetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 226,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 225,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)), {}, {\n              error: errors.settlementCurrencyCode,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 239,\n              columnNumber: 15\n            }, this)\n          }, uwResetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 238,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            children: fieldsLoader.isInterestLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [' ', /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 15,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 254,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 55,\n                animation: \"wave\",\n                displayNumber: 1\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 255,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'interest', control)), {}, {\n              error: errors.interest,\n              callback: initialLoad && saveHandler,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 258,\n              columnNumber: 17\n            }, this)\n          }, uwResetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 250,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 249,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 5,\n        children: /*#__PURE__*/_jsxDEV(Accordion, {\n          expanded: accExpandStatus,\n          onChange: function onChange() {\n            return setAccExpandStatus(!accExpandStatus);\n          },\n          title: /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.accordionTitle,\n            variant: \"body2\",\n            children: utils.string.t('claims.underWritingGroups.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 276,\n            columnNumber: 15\n          }, this),\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.accordionContent,\n            children: [/*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroups, {\n              fields: fields,\n              claimForm: claimForm,\n              uwResetKey: uwResetKey,\n              hasClaimRef: hasClaimRef,\n              selectedPolicyRender: selectedPolicyRender\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 282,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              children: /*#__PURE__*/_jsxDEV(ClaimsMovementType, {\n                fields: fields,\n                claimForm: claimForm,\n                underWritingGroups: underWritingGroups,\n                enforceValueSet: true\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 290,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 289,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 281,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 272,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 271,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LinkClaimPolicyView, \"2OLdRI+O1cbvF0UOr6qqFlEA1W4=\", false, function () {\n  return [useForm];\n});\n\n_c = LinkClaimPolicyView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LinkClaimPolicyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.view.js"],"names":["React","useEffect","useState","useRef","useForm","yupResolver","styles","Accordion","FormLegend","FormAutocompleteMui","FormDate","FormLabel","FormText","Skeleton","ClaimsUnderwritingGroups","ClaimsMovementType","utils","makeStyles","Grid","Box","Typography","LinkClaimPolicyView","fields","policyData","uwResetKey","hasClaimRef","underWritingGroups","isBordereauFlag","validation","setValidation","index","isFormsEdited","setFormEditedStatus","postSaveHandler","postEditSaveHandler","saveStatus","selectedPolicyRender","handleFormStatus","selectNextPolicy","postSaveNextHanlder","fieldsLoader","classes","name","focusInputRef","isEdit","setIsEdit","initialLoad","setInitialLoad","accExpandStatus","setAccExpandStatus","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimForm","resolver","context","handleSubmit","setValue","control","errors","watch","insuredWatch","Boolean","clientWatch","countryCodeWatch","certificateNumberWatch","certificateInceptionDateWatch","certificateExpiryDateWatch","originalCurrencyCodeWatch","settlementCurrencyCodeWatch","interestWatch","underWritingGroupsWatch","formWatcher","saveHandler","formState","map","formEditedStatus","percentageOfSelected","Object","keys","length","value","current","scrollIntoView","policyNumber","isInsuredLoading","getFieldProps","insured","id","isPoliciesClientsLoading","client","countryCode","root","formLabel","string","t","certificateNumber","certificateInceptionDate","certificateExpiryDate","originalCurrencyCode","settlementCurrencyCode","isInterestLoading","interest","accordionTitle","accordionContent"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport styles from './LinkClaimPolicy.styles';\r\nimport { Accordion, FormLegend, FormAutocompleteMui, FormDate, FormLabel, FormText, Skeleton } from 'components';\r\nimport { ClaimsUnderwritingGroups, ClaimsMovementType } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\r\n\r\nexport function LinkClaimPolicyView({\r\n  fields,\r\n  policyData,\r\n  uwResetKey,\r\n  hasClaimRef,\r\n  underWritingGroups,\r\n  isBordereauFlag,\r\n  validation,\r\n  setValidation,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  postSaveHandler,\r\n  postEditSaveHandler,\r\n  saveStatus,\r\n  selectedPolicyRender,\r\n  handleFormStatus,\r\n  selectNextPolicy,\r\n  postSaveNextHanlder,\r\n  fieldsLoader,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'LinkClaimPolicy' })();\r\n\r\n  const focusInputRef = useRef();\r\n\r\n  const [isEdit, setIsEdit] = useState(false);\r\n  const [initialLoad, setInitialLoad] = useState(false);\r\n  const [accExpandStatus, setAccExpandStatus] = useState(true);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const claimForm = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n  });\r\n\r\n  const { handleSubmit, setValue, control, errors, watch } = claimForm;\r\n\r\n  const insuredWatch = Boolean(watch('insured'));\r\n  const clientWatch = Boolean(watch('client'));\r\n  const countryCodeWatch = Boolean(watch('countryCode'));\r\n  const certificateNumberWatch = Boolean(watch('certificateNumber'));\r\n  const certificateInceptionDateWatch = Boolean(watch('certificateInceptionDate'));\r\n  const certificateExpiryDateWatch = Boolean(watch('certificateExpiryDate'));\r\n  const originalCurrencyCodeWatch = Boolean(watch('originalCurrencyCode'));\r\n  const settlementCurrencyCodeWatch = Boolean(watch('settlementCurrencyCode'));\r\n  const interestWatch = Boolean(watch('interest'));\r\n  const underWritingGroupsWatch = Boolean(watch('underWritingGroups'));\r\n\r\n  const formWatcher = () => {\r\n    return (\r\n      insuredWatch ||\r\n      clientWatch ||\r\n      countryCodeWatch ||\r\n      certificateNumberWatch ||\r\n      certificateInceptionDateWatch ||\r\n      certificateExpiryDateWatch ||\r\n      originalCurrencyCodeWatch ||\r\n      settlementCurrencyCodeWatch ||\r\n      interestWatch ||\r\n      underWritingGroupsWatch\r\n    );\r\n  };\r\n\r\n  const saveHandler = () => {\r\n    if ((selectedPolicyRender !== '' && initialLoad) || (initialLoad && validation)) {\r\n      handleFormStatus();\r\n    }\r\n  };\r\n\r\n  if (formWatcher() !== isEdit) {\r\n    if (formWatcher()) setIsEdit(true);\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (isEdit && initialLoad) {\r\n      saveHandler();\r\n    } else {\r\n      const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n      if (formState[index]['formEditedStatus']) {\r\n        formState[index]['formEditedStatus'] = false;\r\n        formState[index]['isSubmitted'] = true;\r\n        setFormEditedStatus(formState);\r\n      }\r\n      setInitialLoad(true);\r\n    }\r\n  }, [isEdit]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (saveStatus && !isFormsEdited[index]?.formEditedStatus && initialLoad && !selectNextPolicy) {\r\n      handleSubmit(postSaveHandler)();\r\n    } else if (saveStatus && isFormsEdited[index]?.formEditedStatus && validation && !selectNextPolicy) {\r\n      handleSubmit(postEditSaveHandler)();\r\n    } else if (selectNextPolicy && initialLoad) {\r\n      handleSubmit(postSaveNextHanlder)();\r\n    }\r\n    setValidation(true);\r\n  }, [saveStatus]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (underWritingGroups) {\r\n      if (underWritingGroups.percentageOfSelected) {\r\n        setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n        if (selectedPolicyRender !== '') saveHandler();\r\n      } else {\r\n        setValue('order', '100');\r\n      }\r\n    }\r\n  }, [underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isBordereauFlag && !Object.keys(errors).length > 0) {\r\n      setValue('certificateNumber', fields[9].value);\r\n      setValue('certificateInceptionDate', fields[10].value);\r\n      setValue('certificateExpiryDate', fields[11].value);\r\n    }\r\n\r\n    if (Object.keys(errors)?.length > 0) {\r\n      focusInputRef?.current?.scrollIntoView();\r\n    }\r\n  }, [uwResetKey, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <FormLegend text={policyData?.policyNumber} />\r\n      <Box mt={-2} ref={focusInputRef}>\r\n        <Grid container spacing={3}>\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey}>\r\n              {fieldsLoader.isInsuredLoading ? (\r\n                <>\r\n                  <Skeleton height={15} animation=\"wave\" displayNumber={1} />\r\n                  <Skeleton height={55} animation=\"wave\" displayNumber={1} />\r\n                </>\r\n              ) : (\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'insured', control)}\r\n                  error={errors.insured}\r\n                  callback={initialLoad && saveHandler}\r\n                  handleUpdate={(id, value) => {\r\n                    setValue(id, value);\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey || isEdit}>\r\n              {fieldsLoader.isPoliciesClientsLoading ? (\r\n                <>\r\n                  <Skeleton height={15} animation=\"wave\" displayNumber={1} />\r\n                  <Skeleton height={55} animation=\"wave\" displayNumber={1} />\r\n                </>\r\n              ) : (\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'client', control)}\r\n                  error={errors.client}\r\n                  callback={initialLoad && saveHandler}\r\n                  handleUpdate={(id, value) => {\r\n                    setValue(id, value);\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey || isEdit}>\r\n              <FormAutocompleteMui\r\n                {...utils.form.getFieldProps(fields, 'countryCode', control)}\r\n                error={errors.countryCode}\r\n                callback={initialLoad && saveHandler}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value);\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n\r\n          {isBordereauFlag && (\r\n            <>\r\n              <Grid item xs={6} sm={4}>\r\n                <FormLabel\r\n                  nestedClasses={{ root: classes.formLabel }}\r\n                  label={`${utils.string.t('claims.claimInformation.certificateNumber')}`}\r\n                />\r\n                <FormText {...utils.form.getFieldProps(fields, 'certificateNumber', control)} error={errors.certificateNumber} />\r\n              </Grid>\r\n\r\n              <Grid item xs={6} sm={4}>\r\n                <FormLabel\r\n                  nestedClasses={{ root: classes.formLabel }}\r\n                  label={`${utils.string.t('claims.claimInformation.certificateInceptionDate')}`}\r\n                />\r\n                <FormDate\r\n                  {...utils.form.getFieldProps(fields, 'certificateInceptionDate', control)}\r\n                  error={errors.certificateInceptionDate}\r\n                />\r\n              </Grid>\r\n\r\n              <Grid item xs={6} sm={4}>\r\n                <FormLabel\r\n                  nestedClasses={{ root: classes.formLabel }}\r\n                  label={`${utils.string.t('claims.claimInformation.certificateExpiryDate')}`}\r\n                />\r\n                <FormDate {...utils.form.getFieldProps(fields, 'certificateExpiryDate', control)} error={errors.certificateExpiryDate} />\r\n              </Grid>\r\n            </>\r\n          )}\r\n\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey}>\r\n              <FormAutocompleteMui\r\n                {...utils.form.getFieldProps(fields, 'originalCurrencyCode', control)}\r\n                error={errors.originalCurrencyCode}\r\n                callback={initialLoad && saveHandler}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value);\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey}>\r\n              <FormAutocompleteMui\r\n                {...utils.form.getFieldProps(fields, 'settlementCurrencyCode', control)}\r\n                error={errors.settlementCurrencyCode}\r\n                callback={initialLoad && saveHandler}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value);\r\n                }}\r\n              />\r\n            </div>\r\n          </Grid>\r\n          <Grid item xs={6} sm={4}>\r\n            <div key={uwResetKey}>\r\n              {fieldsLoader.isInterestLoading ? (\r\n                <>\r\n                  {' '}\r\n                  <Skeleton height={15} animation=\"wave\" displayNumber={1} />\r\n                  <Skeleton height={55} animation=\"wave\" displayNumber={1} />\r\n                </>\r\n              ) : (\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'interest', control)}\r\n                  error={errors.interest}\r\n                  callback={initialLoad && saveHandler}\r\n                  handleUpdate={(id, value) => {\r\n                    setValue(id, value);\r\n                  }}\r\n                />\r\n              )}\r\n            </div>\r\n          </Grid>\r\n        </Grid>\r\n\r\n        <Box mt={5}>\r\n          <Accordion\r\n            expanded={accExpandStatus}\r\n            onChange={() => setAccExpandStatus(!accExpandStatus)}\r\n            title={\r\n              <Typography className={classes.accordionTitle} variant=\"body2\">\r\n                {utils.string.t('claims.underWritingGroups.title')}\r\n              </Typography>\r\n            }\r\n          >\r\n            <Box className={classes.accordionContent}>\r\n              <ClaimsUnderwritingGroups\r\n                fields={fields}\r\n                claimForm={claimForm}\r\n                uwResetKey={uwResetKey}\r\n                hasClaimRef={hasClaimRef}\r\n                selectedPolicyRender={selectedPolicyRender}\r\n              />\r\n              <Box mt={4}>\r\n                <ClaimsMovementType fields={fields} claimForm={claimForm} underWritingGroups={underWritingGroups} enforceValueSet={true} />\r\n              </Box>\r\n            </Box>\r\n          </Accordion>\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}