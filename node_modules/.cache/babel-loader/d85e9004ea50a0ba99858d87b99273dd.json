{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _typeof from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddLimitsRow\\\\AddLimitsRow.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport merge from 'lodash/merge'; // app\n\nimport styles from './AddLimitsRow.styles';\nimport { Button, Overflow, TableCell, TableHead, Pagination } from 'components';\nimport { AddRiskFormField } from 'modules';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Divider, Table, TableBody, TableRow, makeStyles } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAddLimitsRowView.propTypes = {\n  field: PropTypes.object.isRequired,\n  cols: PropTypes.array.isRequired,\n  validFields: PropTypes.array.isRequired,\n  formProps: PropTypes.object.isRequired,\n  overflow: PropTypes.bool,\n  removeLastField: PropTypes.bool,\n  fields: PropTypes.array,\n  handlers: PropTypes.shape({\n    launchPasteFromExcelModal: PropTypes.func.isRequired,\n    closePasteFromExcelModal: PropTypes.func.isRequired,\n    append: PropTypes.func.isRequired\n  })\n};\nexport function AddLimitsRowView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var field = _ref.field,\n      limitFieldOptions = _ref.limitFieldOptions,\n      cols = _ref.cols,\n      validFields = _ref.validFields,\n      fieldName = _ref.fieldName,\n      overflow = _ref.overflow,\n      handlers = _ref.handlers,\n      removeLastField = _ref.removeLastField,\n      fields = _ref.fields,\n      formProps = _ref.formProps,\n      pagination = _ref.pagination,\n      label = _ref.label,\n      qualifier = _ref.qualifier;\n  var classes = makeStyles(styles, {\n    name: 'AddLimitsRow'\n  })();\n  var media = useMedia();\n  var displayFields = fields.filter(function (field) {\n    return field.fieldName === fieldName;\n  });\n  var getEmptyObject = useCallback(function () {\n    return {\n      fieldName: fieldName,\n      label: label,\n      qualifier: qualifier,\n      limit: '',\n      limitFieldOptions: null,\n      alert: ''\n    };\n  }, [fieldName, label, qualifier]);\n  var setToLastPage = useCallback(function (count) {\n    var length = displayFields.length + count;\n    var newPage = Math.ceil(length / pagination.rowsPerPage);\n\n    if (length <= pagination.rowsPerPage) {\n      newPage = 1;\n    }\n\n    pagination.handleChangePage(null, newPage - 1);\n  }, [displayFields.length, pagination]);\n  var appendHandler = useCallback(function (obj) {\n    var formattedObj; // TODO pass all limit fields option and set formatName\n\n    formattedObj = obj === null || obj === void 0 ? void 0 : obj.map(function (item) {\n      return utils.generic.formatFields(item, field === null || field === void 0 ? void 0 : field.arrayItemDef);\n    }).map(function (item) {\n      return _objectSpread(_objectSpread({}, getEmptyObject()), item);\n    });\n    handlers.append(formattedObj || getEmptyObject());\n    setToLastPage(formattedObj ? formattedObj.length : 1);\n  }, [field, setToLastPage, getEmptyObject, handlers]);\n\n  var removeHandler = function removeHandler(idx) {\n    if (fields && fields.length === 1 && idx === 0 && !removeLastField) {\n      formProps.setValue(field.name, [getEmptyObject()]);\n    } else {\n      handlers.remove(idx);\n    }\n  };\n\n  var sortedFields = displayFields.sort(function (item1, item2) {\n    var str1 = (item1 === null || item1 === void 0 ? void 0 : item1.limitFieldOptions) && _typeof(item1 === null || item1 === void 0 ? void 0 : item1.limitFieldOptions) === 'object' ? item1 === null || item1 === void 0 ? void 0 : item1.limitFieldOptions.label : item1 === null || item1 === void 0 ? void 0 : item1.limitFieldOptions;\n    var str2 = (item2 === null || item2 === void 0 ? void 0 : item2.limitFieldOptions) && _typeof(item2 === null || item2 === void 0 ? void 0 : item2.limitFieldOptions) === 'object' ? item2 === null || item2 === void 0 ? void 0 : item2.limitFieldOptions.label : item2 === null || item2 === void 0 ? void 0 : item2.limitFieldOptions;\n\n    if (str1 > str2) {\n      return 1;\n    } else if (str1 < str2) {\n      return -1;\n    } else {\n      return 0;\n    }\n  });\n\n  var renderTable = function renderTable() {\n    return /*#__PURE__*/_jsxDEV(Table, {\n      size: \"small\",\n      className: classes.table,\n      children: [/*#__PURE__*/_jsxDEV(TableHead, {\n        columns: cols,\n        nestedClasses: {\n          tableHead: classes.tableHead,\n          tableCell: classes.tableHeadCell\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n        \"data-testid\": \"limits-array-table\",\n        className: classes.tableBody,\n        children: (pagination.rowsPerPage > 0 ? sortedFields.slice(pagination.page * pagination.rowsPerPage, pagination.page * pagination.rowsPerPage + pagination.rowsPerPage) : sortedFields).map(function (item) {\n          var index = fields.findIndex(function (field) {\n            return field.id === item.id;\n          });\n          var visibleDefs = field.arrayItemDef.filter(function (f) {\n            return f.type !== 'hidden';\n          });\n          var hiddenDefs = field.arrayItemDef.filter(function (f) {\n            return f.type === 'hidden';\n          });\n          return item.fieldName === fieldName ? /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [fields.length > 1 && index > 0 && /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableRowDivider,\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: cols.length,\n                className: classes.tableRowDividerCell,\n                children: /*#__PURE__*/_jsxDEV(Divider, {\n                  classes: {\n                    root: classes.divider\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 143,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 142,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classes.tableRow,\n              children: [hiddenDefs.map(function (def) {\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classes.tableRowCellHidden,\n                  children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, def), {}, {\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name]\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 153,\n                    columnNumber: 25\n                  }, _this)\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, _this);\n              }), visibleDefs.map(function (def, defIndex) {\n                var _classnames;\n\n                if (!validFields.includes(def.type)) return null;\n\n                var label = def.label,\n                    fieldProps = _objectWithoutProperties(def, [\"label\"]);\n\n                var condition = utils.risk.getCondition(def, field.arrayItemDef);\n                var isDisabled = condition;\n                return /*#__PURE__*/_jsxDEV(TableCell, {\n                  className: classnames((_classnames = {}, _defineProperty(_classnames, classes.tableRowCell, true), _defineProperty(_classnames, classes.tableRowCellDisabled, isDisabled), _defineProperty(_classnames, classes.tableRowCellFirst, defIndex === 0), _defineProperty(_classnames, classes.tableRowCellMiddle, defIndex > 0 && defIndex < visibleDefs.length - 1), _defineProperty(_classnames, classes.tableRowCellLast, defIndex === visibleDefs.length - 1), _defineProperty(_classnames, classes.tableRowAlignCenter, fieldProps === null || fieldProps === void 0 ? void 0 : fieldProps.alignCenter), _classnames)),\n                  style: _objectSpread({}, fieldProps.width && {\n                    width: \"\".concat(fieldProps.width, \"%\")\n                  }),\n                  children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, fieldProps), {}, {\n                      label: media.mobile ? label : undefined,\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name],\n                      options: limitFieldOptions || [],\n                      muiComponentProps: merge(fieldProps.muiComponentProps || {}, _objectSpread({}, ['text', 'number'].includes(def.type) && {\n                        InputProps: {\n                          disabled: isDisabled\n                        }\n                      }))\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 185,\n                    columnNumber: 25\n                  }, _this)\n                }, def.name, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 23\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                className: classnames([classes.deleteCell, classes.tableRowCell]),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  danger: true,\n                  size: \"small\",\n                  icon: HighlightOffIcon,\n                  disabled: removeLastField ? false : fields.length === 1,\n                  variant: media.mobile ? 'outlined' : 'text',\n                  text: media.mobile ? utils.string.t('app.delete') : undefined,\n                  nestedClasses: {\n                    btn: classes.deleteBtn\n                  },\n                  onClick: function onClick() {\n                    return removeHandler(index);\n                  },\n                  \"data-testid\": \"btn-row-delete\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 203,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 202,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, _this)]\n          }, item.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 140,\n            columnNumber: 15\n          }, _this) : null;\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [overflow && /*#__PURE__*/_jsxDEV(Overflow, {\n      style: media.mobile ? undefined : {\n        marginTop: -24\n      },\n      children: renderTable()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 225,\n      columnNumber: 20\n    }, this), !overflow && renderTable(), /*#__PURE__*/_jsxDEV(Pagination, {\n      page: pagination.page,\n      count: pagination.count,\n      rowsPerPage: pagination.rowsPerPage,\n      onChangePage: pagination.handleChangePage,\n      onChangeRowsPerPage: pagination.handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 7\n    }, this), (limitFieldOptions === null || limitFieldOptions === void 0 ? void 0 : limitFieldOptions.length) > 0 ? /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      mt: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mr: 1.5,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"secondary\",\n          size: \"small\",\n          icon: AddIcon,\n          text: utils.string.t('app.add'),\n          onClick: function onClick() {\n            return appendHandler();\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 238,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 237,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        variant: \"outlined\",\n        text: utils.string.t('app.pasteFromExcel'),\n        onClick: function onClick() {\n          return handlers.launchPasteFromExcelModal({\n            name: field.name,\n            headers: field.arrayItemDef.filter(function (def) {\n              return (def === null || def === void 0 ? void 0 : def.type) !== 'hidden';\n            }).reduce(function (acc, def) {\n              return [].concat(_toConsumableArray(acc), [{\n                key: def.name,\n                value: ''\n              }]);\n            }, []),\n            handlers: {\n              submit: function submit(data) {\n                appendHandler(data);\n                handlers.closePasteFromExcelModal();\n              }\n            }\n          });\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 236,\n      columnNumber: 9\n    }, this) : null]\n  }, void 0, true);\n}\n\n_s(AddLimitsRowView, \"lv5Ana3O0H9EHz9FDQFp1OPDMI8=\", false, function () {\n  return [useMedia];\n});\n\n_c = AddLimitsRowView;\nAddLimitsRowView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddLimitsRowView\",\n  \"props\": {\n    \"field\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"cols\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"validFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"overflow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"removeLastField\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"launchPasteFromExcelModal\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"closePasteFromExcelModal\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"append\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\AddLimitsRow\\\\AddLimitsRow.view.js\"] = {\n    name: \"AddLimitsRowView\",\n    docgenInfo: AddLimitsRowView.__docgenInfo,\n    path: \"src\\\\modules\\\\AddLimitsRow\\\\AddLimitsRow.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddLimitsRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddLimitsRow/AddLimitsRow.view.js"],"names":["React","Fragment","useCallback","PropTypes","classnames","merge","styles","Button","Overflow","TableCell","TableHead","Pagination","AddRiskFormField","useMedia","utils","Box","Divider","Table","TableBody","TableRow","makeStyles","HighlightOffIcon","AddIcon","AddLimitsRowView","propTypes","field","object","isRequired","cols","array","validFields","formProps","overflow","bool","removeLastField","fields","handlers","shape","launchPasteFromExcelModal","func","closePasteFromExcelModal","append","limitFieldOptions","fieldName","pagination","label","qualifier","classes","name","media","displayFields","filter","getEmptyObject","limit","alert","setToLastPage","count","length","newPage","Math","ceil","rowsPerPage","handleChangePage","appendHandler","obj","formattedObj","map","item","generic","formatFields","arrayItemDef","removeHandler","idx","setValue","remove","sortedFields","sort","item1","item2","str1","str2","renderTable","table","tableHead","tableCell","tableHeadCell","tableBody","slice","page","index","findIndex","id","visibleDefs","f","type","hiddenDefs","tableRowDivider","tableRowDividerCell","root","divider","tableRow","def","tableRowCellHidden","defaultValue","defIndex","includes","fieldProps","condition","risk","getCondition","isDisabled","tableRowCell","tableRowCellDisabled","tableRowCellFirst","tableRowCellMiddle","tableRowCellLast","tableRowAlignCenter","alignCenter","width","mobile","undefined","options","muiComponentProps","InputProps","disabled","deleteCell","string","t","btn","deleteBtn","marginTop","handleChangeRowsPerPage","headers","reduce","acc","key","value","submit","data"],"mappings":";;;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,WAA1B,QAA6C,OAA7C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,KAAP,MAAkB,cAAlB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,YAAnE;AACA,SAASC,gBAAT,QAAiC,SAAjC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,GAAT,EAAcC,OAAd,EAAuBC,KAAvB,EAA8BC,SAA9B,EAAyCC,QAAzC,EAAmDC,UAAnD,QAAqE,mBAArE;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,OAAP,MAAoB,wBAApB;;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,KAAK,EAAEtB,SAAS,CAACuB,MAAV,CAAiBC,UADG;AAE3BC,EAAAA,IAAI,EAAEzB,SAAS,CAAC0B,KAAV,CAAgBF,UAFK;AAG3BG,EAAAA,WAAW,EAAE3B,SAAS,CAAC0B,KAAV,CAAgBF,UAHF;AAI3BI,EAAAA,SAAS,EAAE5B,SAAS,CAACuB,MAAV,CAAiBC,UAJD;AAK3BK,EAAAA,QAAQ,EAAE7B,SAAS,CAAC8B,IALO;AAM3BC,EAAAA,eAAe,EAAE/B,SAAS,CAAC8B,IANA;AAO3BE,EAAAA,MAAM,EAAEhC,SAAS,CAAC0B,KAPS;AAS3BO,EAAAA,QAAQ,EAAEjC,SAAS,CAACkC,KAAV,CAAgB;AACxBC,IAAAA,yBAAyB,EAAEnC,SAAS,CAACoC,IAAV,CAAeZ,UADlB;AAExBa,IAAAA,wBAAwB,EAAErC,SAAS,CAACoC,IAAV,CAAeZ,UAFjB;AAGxBc,IAAAA,MAAM,EAAEtC,SAAS,CAACoC,IAAV,CAAeZ;AAHC,GAAhB;AATiB,CAA7B;AAgBA,OAAO,SAASJ,gBAAT,OAcJ;AAAA;;AAAA;;AAAA,MAbDE,KAaC,QAbDA,KAaC;AAAA,MAZDiB,iBAYC,QAZDA,iBAYC;AAAA,MAXDd,IAWC,QAXDA,IAWC;AAAA,MAVDE,WAUC,QAVDA,WAUC;AAAA,MATDa,SASC,QATDA,SASC;AAAA,MARDX,QAQC,QARDA,QAQC;AAAA,MAPDI,QAOC,QAPDA,QAOC;AAAA,MANDF,eAMC,QANDA,eAMC;AAAA,MALDC,MAKC,QALDA,MAKC;AAAA,MAJDJ,SAIC,QAJDA,SAIC;AAAA,MAHDa,UAGC,QAHDA,UAGC;AAAA,MAFDC,KAEC,QAFDA,KAEC;AAAA,MADDC,SACC,QADDA,SACC;AACD,MAAMC,OAAO,GAAG3B,UAAU,CAACd,MAAD,EAAS;AAAE0C,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,KAAK,GAAGpC,QAAQ,EAAtB;AACA,MAAMqC,aAAa,GAAGf,MAAM,CAACgB,MAAP,CAAc,UAAC1B,KAAD;AAAA,WAAWA,KAAK,CAACkB,SAAN,KAAoBA,SAA/B;AAAA,GAAd,CAAtB;AAEA,MAAMS,cAAc,GAAGlD,WAAW,CAAC,YAAM;AACvC,WAAO;AACLyC,MAAAA,SAAS,EAATA,SADK;AAELE,MAAAA,KAAK,EAAEA,KAFF;AAGLC,MAAAA,SAAS,EAAEA,SAHN;AAILO,MAAAA,KAAK,EAAE,EAJF;AAKLX,MAAAA,iBAAiB,EAAE,IALd;AAMLY,MAAAA,KAAK,EAAE;AANF,KAAP;AAQD,GATiC,EAS/B,CAACX,SAAD,EAAYE,KAAZ,EAAmBC,SAAnB,CAT+B,CAAlC;AAWA,MAAMS,aAAa,GAAGrD,WAAW,CAC/B,UAACsD,KAAD,EAAW;AACT,QAAMC,MAAM,GAAGP,aAAa,CAACO,MAAd,GAAuBD,KAAtC;AACA,QAAIE,OAAO,GAAGC,IAAI,CAACC,IAAL,CAAUH,MAAM,GAAGb,UAAU,CAACiB,WAA9B,CAAd;;AACA,QAAIJ,MAAM,IAAIb,UAAU,CAACiB,WAAzB,EAAsC;AACpCH,MAAAA,OAAO,GAAG,CAAV;AACD;;AACDd,IAAAA,UAAU,CAACkB,gBAAX,CAA4B,IAA5B,EAAkCJ,OAAO,GAAG,CAA5C;AACD,GAR8B,EAS/B,CAACR,aAAa,CAACO,MAAf,EAAuBb,UAAvB,CAT+B,CAAjC;AAYA,MAAMmB,aAAa,GAAG7D,WAAW,CAC/B,UAAC8D,GAAD,EAAS;AACP,QAAIC,YAAJ,CADO,CAEP;;AACAA,IAAAA,YAAY,GAAGD,GAAH,aAAGA,GAAH,uBAAGA,GAAG,CACdE,GADW,CACP,UAACC,IAAD;AAAA,aAAUrD,KAAK,CAACsD,OAAN,CAAcC,YAAd,CAA2BF,IAA3B,EAAiC1C,KAAjC,aAAiCA,KAAjC,uBAAiCA,KAAK,CAAE6C,YAAxC,CAAV;AAAA,KADO,EAEZJ,GAFY,CAER,UAACC,IAAD;AAAA,6CACAf,cAAc,EADd,GAEAe,IAFA;AAAA,KAFQ,CAAf;AAMA/B,IAAAA,QAAQ,CAACK,MAAT,CAAgBwB,YAAY,IAAIb,cAAc,EAA9C;AACAG,IAAAA,aAAa,CAACU,YAAY,GAAGA,YAAY,CAACR,MAAhB,GAAyB,CAAtC,CAAb;AACD,GAZ8B,EAa/B,CAAChC,KAAD,EAAQ8B,aAAR,EAAuBH,cAAvB,EAAuChB,QAAvC,CAb+B,CAAjC;;AAgBA,MAAMmC,aAAa,GAAG,SAAhBA,aAAgB,CAACC,GAAD,EAAS;AAC7B,QAAIrC,MAAM,IAAIA,MAAM,CAACsB,MAAP,KAAkB,CAA5B,IAAiCe,GAAG,KAAK,CAAzC,IAA8C,CAACtC,eAAnD,EAAoE;AAClEH,MAAAA,SAAS,CAAC0C,QAAV,CAAmBhD,KAAK,CAACuB,IAAzB,EAA+B,CAACI,cAAc,EAAf,CAA/B;AACD,KAFD,MAEO;AACLhB,MAAAA,QAAQ,CAACsC,MAAT,CAAgBF,GAAhB;AACD;AACF,GAND;;AAQA,MAAMG,YAAY,GAAGzB,aAAa,CAAC0B,IAAd,CAAmB,UAACC,KAAD,EAAQC,KAAR,EAAkB;AACxD,QAAMC,IAAI,GACR,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEnC,iBAAP,KAA4B,QAAOmC,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEnC,iBAAd,MAAoC,QAAhE,GAA2EmC,KAA3E,aAA2EA,KAA3E,uBAA2EA,KAAK,CAAEnC,iBAAP,CAAyBG,KAApG,GAA4GgC,KAA5G,aAA4GA,KAA5G,uBAA4GA,KAAK,CAAEnC,iBADrH;AAEA,QAAMsC,IAAI,GACR,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEpC,iBAAP,KAA4B,QAAOoC,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEpC,iBAAd,MAAoC,QAAhE,GAA2EoC,KAA3E,aAA2EA,KAA3E,uBAA2EA,KAAK,CAAEpC,iBAAP,CAAyBG,KAApG,GAA4GiC,KAA5G,aAA4GA,KAA5G,uBAA4GA,KAAK,CAAEpC,iBADrH;;AAGA,QAAIqC,IAAI,GAAGC,IAAX,EAAiB;AACf,aAAO,CAAP;AACD,KAFD,MAEO,IAAID,IAAI,GAAGC,IAAX,EAAiB;AACtB,aAAO,CAAC,CAAR;AACD,KAFM,MAEA;AACL,aAAO,CAAP;AACD;AACF,GAboB,CAArB;;AAeA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB,wBACE,QAAC,KAAD;AAAO,MAAA,IAAI,EAAC,OAAZ;AAAoB,MAAA,SAAS,EAAElC,OAAO,CAACmC,KAAvC;AAAA,8BACE,QAAC,SAAD;AACE,QAAA,OAAO,EAAEtD,IADX;AAEE,QAAA,aAAa,EAAE;AACbuD,UAAAA,SAAS,EAAEpC,OAAO,CAACoC,SADN;AAEbC,UAAAA,SAAS,EAAErC,OAAO,CAACsC;AAFN;AAFjB;AAAA;AAAA;AAAA;AAAA,eADF,eASE,QAAC,SAAD;AAAW,uBAAY,oBAAvB;AAA4C,QAAA,SAAS,EAAEtC,OAAO,CAACuC,SAA/D;AAAA,kBACG,CAAC1C,UAAU,CAACiB,WAAX,GAAyB,CAAzB,GACEc,YAAY,CAACY,KAAb,CACE3C,UAAU,CAAC4C,IAAX,GAAkB5C,UAAU,CAACiB,WAD/B,EAEEjB,UAAU,CAAC4C,IAAX,GAAkB5C,UAAU,CAACiB,WAA7B,GAA2CjB,UAAU,CAACiB,WAFxD,CADF,GAKEc,YALH,EAMCT,GAND,CAMK,UAACC,IAAD,EAAU;AACd,cAAMsB,KAAK,GAAGtD,MAAM,CAACuD,SAAP,CAAiB,UAACjE,KAAD;AAAA,mBAAWA,KAAK,CAACkE,EAAN,KAAaxB,IAAI,CAACwB,EAA7B;AAAA,WAAjB,CAAd;AAEA,cAAMC,WAAW,GAAGnE,KAAK,CAAC6C,YAAN,CAAmBnB,MAAnB,CAA0B,UAAC0C,CAAD;AAAA,mBAAOA,CAAC,CAACC,IAAF,KAAW,QAAlB;AAAA,WAA1B,CAApB;AACA,cAAMC,UAAU,GAAGtE,KAAK,CAAC6C,YAAN,CAAmBnB,MAAnB,CAA0B,UAAC0C,CAAD;AAAA,mBAAOA,CAAC,CAACC,IAAF,KAAW,QAAlB;AAAA,WAA1B,CAAnB;AAEA,iBAAO3B,IAAI,CAACxB,SAAL,KAAmBA,SAAnB,gBACL,QAAC,QAAD;AAAA,uBACGR,MAAM,CAACsB,MAAP,GAAgB,CAAhB,IAAqBgC,KAAK,GAAG,CAA7B,iBACC,QAAC,QAAD;AAAU,cAAA,SAAS,EAAE1C,OAAO,CAACiD,eAA7B;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAEpE,IAAI,CAAC6B,MAAzB;AAAiC,gBAAA,SAAS,EAAEV,OAAO,CAACkD,mBAApD;AAAA,uCACE,QAAC,OAAD;AAAS,kBAAA,OAAO,EAAE;AAAEC,oBAAAA,IAAI,EAAEnD,OAAO,CAACoD;AAAhB;AAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAFJ,eASE,QAAC,QAAD;AAAU,cAAA,SAAS,EAAEpD,OAAO,CAACqD,QAA7B;AAAA,yBACGL,UAAU,CAAC7B,GAAX,CAAe,UAACmC,GAAD,EAAS;AACvB,oCACE,QAAC,SAAD;AAA0B,kBAAA,SAAS,EAAEtD,OAAO,CAACuD,kBAA7C;AAAA,yCACE,QAAC,gBAAD;AACE,oBAAA,KAAK,kCACAD,GADA;AAEHrD,sBAAAA,IAAI,YAAKvB,KAAK,CAACuB,IAAX,cAAmByC,KAAnB,eAA6BY,GAAG,CAACrD,IAAjC,CAFD;AAGHuD,sBAAAA,YAAY,EAAEpC,IAAI,CAACkC,GAAG,CAACrD,IAAL;AAHf,sBADP;AAME,oBAAA,SAAS,EAAEjB;AANb;AAAA;AAAA;AAAA;AAAA;AADF,mBAAgBsE,GAAG,CAACrD,IAApB;AAAA;AAAA;AAAA;AAAA,yBADF;AAYD,eAbA,CADH,EAgBG4C,WAAW,CAAC1B,GAAZ,CAAgB,UAACmC,GAAD,EAAMG,QAAN,EAAmB;AAAA;;AAClC,oBAAI,CAAC1E,WAAW,CAAC2E,QAAZ,CAAqBJ,GAAG,CAACP,IAAzB,CAAL,EAAqC,OAAO,IAAP;;AADH,oBAG1BjD,KAH0B,GAGDwD,GAHC,CAG1BxD,KAH0B;AAAA,oBAGhB6D,UAHgB,4BAGDL,GAHC;;AAIlC,oBAAMM,SAAS,GAAG7F,KAAK,CAAC8F,IAAN,CAAWC,YAAX,CAAwBR,GAAxB,EAA6B5E,KAAK,CAAC6C,YAAnC,CAAlB;AACA,oBAAMwC,UAAU,GAAGH,SAAnB;AAEA,oCACE,QAAC,SAAD;AAEE,kBAAA,SAAS,EAAEvG,UAAU,iDAClB2C,OAAO,CAACgE,YADU,EACK,IADL,gCAElBhE,OAAO,CAACiE,oBAFU,EAEaF,UAFb,gCAGlB/D,OAAO,CAACkE,iBAHU,EAGUT,QAAQ,KAAK,CAHvB,gCAIlBzD,OAAO,CAACmE,kBAJU,EAIWV,QAAQ,GAAG,CAAX,IAAgBA,QAAQ,GAAGZ,WAAW,CAACnC,MAAZ,GAAqB,CAJ3D,gCAKlBV,OAAO,CAACoE,gBALU,EAKSX,QAAQ,KAAKZ,WAAW,CAACnC,MAAZ,GAAqB,CAL3C,gCAMlBV,OAAO,CAACqE,mBANU,EAMYV,UANZ,aAMYA,UANZ,uBAMYA,UAAU,CAAEW,WANxB,gBAFvB;AAUE,kBAAA,KAAK,oBAAQX,UAAU,CAACY,KAAX,IAAoB;AAAEA,oBAAAA,KAAK,YAAKZ,UAAU,CAACY,KAAhB;AAAP,mBAA5B,CAVP;AAAA,yCAYE,QAAC,gBAAD;AACE,oBAAA,KAAK,kCACAZ,UADA;AAEH7D,sBAAAA,KAAK,EAAEI,KAAK,CAACsE,MAAN,GAAe1E,KAAf,GAAuB2E,SAF3B;AAGHxE,sBAAAA,IAAI,YAAKvB,KAAK,CAACuB,IAAX,cAAmByC,KAAnB,eAA6BY,GAAG,CAACrD,IAAjC,CAHD;AAIHuD,sBAAAA,YAAY,EAAEpC,IAAI,CAACkC,GAAG,CAACrD,IAAL,CAJf;AAKHyE,sBAAAA,OAAO,EAAE/E,iBAAiB,IAAI,EAL3B;AAMHgF,sBAAAA,iBAAiB,EAAErH,KAAK,CAACqG,UAAU,CAACgB,iBAAX,IAAgC,EAAjC,oBAClB,CAAC,MAAD,EAAS,QAAT,EAAmBjB,QAAnB,CAA4BJ,GAAG,CAACP,IAAhC,KAAyC;AAAE6B,wBAAAA,UAAU,EAAE;AAAEC,0BAAAA,QAAQ,EAAEd;AAAZ;AAAd,uBADvB;AANrB,sBADP;AAWE,oBAAA,SAAS,EAAE/E;AAXb;AAAA;AAAA;AAAA;AAAA;AAZF,mBACOsE,GAAG,CAACrD,IADX;AAAA;AAAA;AAAA;AAAA,yBADF;AA4BD,eAnCA,CAhBH,eAqDE,QAAC,SAAD;AAAW,gBAAA,SAAS,EAAE5C,UAAU,CAAC,CAAC2C,OAAO,CAAC8E,UAAT,EAAqB9E,OAAO,CAACgE,YAA7B,CAAD,CAAhC;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,MAAM,MADR;AAEE,kBAAA,IAAI,EAAC,OAFP;AAGE,kBAAA,IAAI,EAAE1F,gBAHR;AAIE,kBAAA,QAAQ,EAAEa,eAAe,GAAG,KAAH,GAAWC,MAAM,CAACsB,MAAP,KAAkB,CAJxD;AAKE,kBAAA,OAAO,EAAER,KAAK,CAACsE,MAAN,GAAe,UAAf,GAA4B,MALvC;AAME,kBAAA,IAAI,EAAEtE,KAAK,CAACsE,MAAN,GAAezG,KAAK,CAACgH,MAAN,CAAaC,CAAb,CAAe,YAAf,CAAf,GAA8CP,SANtD;AAOE,kBAAA,aAAa,EAAE;AAAEQ,oBAAAA,GAAG,EAAEjF,OAAO,CAACkF;AAAf,mBAPjB;AAQE,kBAAA,OAAO,EAAE;AAAA,2BAAM1D,aAAa,CAACkB,KAAD,CAAnB;AAAA,mBARX;AASE,iCAAY;AATd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBArDF;AAAA;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA,aAAetB,IAAI,CAACwB,EAApB;AAAA;AAAA;AAAA;AAAA,mBADK,GA8EH,IA9EJ;AA+ED,SA3FA;AADH;AAAA;AAAA;AAAA;AAAA,eATF;AAAA;AAAA;AAAA;AAAA;AAAA,aADF;AA0GD,GA3GD;;AA4GA,sBACE;AAAA,eACG3D,QAAQ,iBAAI,QAAC,QAAD;AAAU,MAAA,KAAK,EAAEiB,KAAK,CAACsE,MAAN,GAAeC,SAAf,GAA2B;AAAEU,QAAAA,SAAS,EAAE,CAAC;AAAd,OAA5C;AAAA,gBAAiEjD,WAAW;AAA5E;AAAA;AAAA;AAAA;AAAA,YADf,EAGG,CAACjD,QAAD,IAAaiD,WAAW,EAH3B,eAIE,QAAC,UAAD;AACE,MAAA,IAAI,EAAErC,UAAU,CAAC4C,IADnB;AAEE,MAAA,KAAK,EAAE5C,UAAU,CAACY,KAFpB;AAGE,MAAA,WAAW,EAAEZ,UAAU,CAACiB,WAH1B;AAIE,MAAA,YAAY,EAAEjB,UAAU,CAACkB,gBAJ3B;AAKE,MAAA,mBAAmB,EAAElB,UAAU,CAACuF;AALlC;AAAA;AAAA;AAAA;AAAA,YAJF,EAWG,CAAAzF,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEe,MAAnB,IAA4B,CAA5B,gBACC,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,EAAE,EAAE,CAAxB;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAE,GAAT;AAAA,+BACE,QAAC,MAAD;AAAQ,UAAA,KAAK,EAAC,WAAd;AAA0B,UAAA,IAAI,EAAC,OAA/B;AAAuC,UAAA,IAAI,EAAEnC,OAA7C;AAAsD,UAAA,IAAI,EAAER,KAAK,CAACgH,MAAN,CAAaC,CAAb,CAAe,SAAf,CAA5D;AAAuF,UAAA,OAAO,EAAE;AAAA,mBAAMhE,aAAa,EAAnB;AAAA;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAKE,QAAC,MAAD;AACE,QAAA,KAAK,EAAC,WADR;AAEE,QAAA,IAAI,EAAC,OAFP;AAGE,QAAA,OAAO,EAAC,UAHV;AAIE,QAAA,IAAI,EAAEjD,KAAK,CAACgH,MAAN,CAAaC,CAAb,CAAe,oBAAf,CAJR;AAKE,QAAA,OAAO,EAAE;AAAA,iBACP3F,QAAQ,CAACE,yBAAT,CAAmC;AACjCU,YAAAA,IAAI,EAAEvB,KAAK,CAACuB,IADqB;AAEjCoF,YAAAA,OAAO,EAAE3G,KAAK,CAAC6C,YAAN,CACNnB,MADM,CACC,UAACkD,GAAD;AAAA,qBAAS,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEP,IAAL,MAAc,QAAvB;AAAA,aADD,EAENuC,MAFM,CAEC,UAACC,GAAD,EAAMjC,GAAN,EAAc;AACpB,kDAAWiC,GAAX,IAAgB;AAAEC,gBAAAA,GAAG,EAAElC,GAAG,CAACrD,IAAX;AAAiBwF,gBAAAA,KAAK,EAAE;AAAxB,eAAhB;AACD,aAJM,EAIJ,EAJI,CAFwB;AAOjCpG,YAAAA,QAAQ,EAAE;AACRqG,cAAAA,MAAM,EAAE,gBAACC,IAAD,EAAU;AAChB3E,gBAAAA,aAAa,CAAC2E,IAAD,CAAb;AACAtG,gBAAAA,QAAQ,CAACI,wBAAT;AACD;AAJO;AAPuB,WAAnC,CADO;AAAA;AALX;AAAA;AAAA;AAAA;AAAA,cALF;AAAA;AAAA;AAAA;AAAA;AAAA,YADD,GA6BG,IAxCN;AAAA,kBADF;AA4CD;;GAzOejB,gB;UAgBAV,Q;;;KAhBAU,gB","sourcesContent":["import React, { Fragment, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport merge from 'lodash/merge';\r\n\r\n// app\r\nimport styles from './AddLimitsRow.styles';\r\nimport { Button, Overflow, TableCell, TableHead, Pagination } from 'components';\r\nimport { AddRiskFormField } from 'modules';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Box, Divider, Table, TableBody, TableRow, makeStyles } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nAddLimitsRowView.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  validFields: PropTypes.array.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n  overflow: PropTypes.bool,\r\n  removeLastField: PropTypes.bool,\r\n  fields: PropTypes.array,\r\n\r\n  handlers: PropTypes.shape({\r\n    launchPasteFromExcelModal: PropTypes.func.isRequired,\r\n    closePasteFromExcelModal: PropTypes.func.isRequired,\r\n    append: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport function AddLimitsRowView({\r\n  field,\r\n  limitFieldOptions,\r\n  cols,\r\n  validFields,\r\n  fieldName,\r\n  overflow,\r\n  handlers,\r\n  removeLastField,\r\n  fields,\r\n  formProps,\r\n  pagination,\r\n  label,\r\n  qualifier,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'AddLimitsRow' })();\r\n  const media = useMedia();\r\n  const displayFields = fields.filter((field) => field.fieldName === fieldName);\r\n\r\n  const getEmptyObject = useCallback(() => {\r\n    return {\r\n      fieldName,\r\n      label: label,\r\n      qualifier: qualifier,\r\n      limit: '',\r\n      limitFieldOptions: null,\r\n      alert: '',\r\n    };\r\n  }, [fieldName, label, qualifier]);\r\n\r\n  const setToLastPage = useCallback(\r\n    (count) => {\r\n      const length = displayFields.length + count;\r\n      let newPage = Math.ceil(length / pagination.rowsPerPage);\r\n      if (length <= pagination.rowsPerPage) {\r\n        newPage = 1;\r\n      }\r\n      pagination.handleChangePage(null, newPage - 1);\r\n    },\r\n    [displayFields.length, pagination]\r\n  );\r\n\r\n  const appendHandler = useCallback(\r\n    (obj) => {\r\n      let formattedObj;\r\n      // TODO pass all limit fields option and set formatName\r\n      formattedObj = obj\r\n        ?.map((item) => utils.generic.formatFields(item, field?.arrayItemDef))\r\n        .map((item) => ({\r\n          ...getEmptyObject(),\r\n          ...item,\r\n        }));\r\n      handlers.append(formattedObj || getEmptyObject());\r\n      setToLastPage(formattedObj ? formattedObj.length : 1);\r\n    },\r\n    [field, setToLastPage, getEmptyObject, handlers]\r\n  );\r\n\r\n  const removeHandler = (idx) => {\r\n    if (fields && fields.length === 1 && idx === 0 && !removeLastField) {\r\n      formProps.setValue(field.name, [getEmptyObject()]);\r\n    } else {\r\n      handlers.remove(idx);\r\n    }\r\n  };\r\n\r\n  const sortedFields = displayFields.sort((item1, item2) => {\r\n    const str1 =\r\n      item1?.limitFieldOptions && typeof item1?.limitFieldOptions === 'object' ? item1?.limitFieldOptions.label : item1?.limitFieldOptions;\r\n    const str2 =\r\n      item2?.limitFieldOptions && typeof item2?.limitFieldOptions === 'object' ? item2?.limitFieldOptions.label : item2?.limitFieldOptions;\r\n\r\n    if (str1 > str2) {\r\n      return 1;\r\n    } else if (str1 < str2) {\r\n      return -1;\r\n    } else {\r\n      return 0;\r\n    }\r\n  });\r\n\r\n  const renderTable = () => {\r\n    return (\r\n      <Table size=\"small\" className={classes.table}>\r\n        <TableHead\r\n          columns={cols}\r\n          nestedClasses={{\r\n            tableHead: classes.tableHead,\r\n            tableCell: classes.tableHeadCell,\r\n          }}\r\n        />\r\n\r\n        <TableBody data-testid=\"limits-array-table\" className={classes.tableBody}>\r\n          {(pagination.rowsPerPage > 0\r\n            ? sortedFields.slice(\r\n                pagination.page * pagination.rowsPerPage,\r\n                pagination.page * pagination.rowsPerPage + pagination.rowsPerPage\r\n              )\r\n            : sortedFields\r\n          ).map((item) => {\r\n            const index = fields.findIndex((field) => field.id === item.id);\r\n\r\n            const visibleDefs = field.arrayItemDef.filter((f) => f.type !== 'hidden');\r\n            const hiddenDefs = field.arrayItemDef.filter((f) => f.type === 'hidden');\r\n\r\n            return item.fieldName === fieldName ? (\r\n              <Fragment key={item.id}>\r\n                {fields.length > 1 && index > 0 && (\r\n                  <TableRow className={classes.tableRowDivider}>\r\n                    <TableCell colSpan={cols.length} className={classes.tableRowDividerCell}>\r\n                      <Divider classes={{ root: classes.divider }} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                )}\r\n\r\n                <TableRow className={classes.tableRow}>\r\n                  {hiddenDefs.map((def) => {\r\n                    return (\r\n                      <TableCell key={def.name} className={classes.tableRowCellHidden}>\r\n                        <AddRiskFormField\r\n                          field={{\r\n                            ...def,\r\n                            name: `${field.name}[${index}].${def.name}`,\r\n                            defaultValue: item[def.name],\r\n                          }}\r\n                          formProps={formProps}\r\n                        />\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n\r\n                  {visibleDefs.map((def, defIndex) => {\r\n                    if (!validFields.includes(def.type)) return null;\r\n\r\n                    const { label, ...fieldProps } = def;\r\n                    const condition = utils.risk.getCondition(def, field.arrayItemDef);\r\n                    const isDisabled = condition;\r\n\r\n                    return (\r\n                      <TableCell\r\n                        key={def.name}\r\n                        className={classnames({\r\n                          [classes.tableRowCell]: true,\r\n                          [classes.tableRowCellDisabled]: isDisabled,\r\n                          [classes.tableRowCellFirst]: defIndex === 0,\r\n                          [classes.tableRowCellMiddle]: defIndex > 0 && defIndex < visibleDefs.length - 1,\r\n                          [classes.tableRowCellLast]: defIndex === visibleDefs.length - 1,\r\n                          [classes.tableRowAlignCenter]: fieldProps?.alignCenter,\r\n                        })}\r\n                        style={{ ...(fieldProps.width && { width: `${fieldProps.width}%` }) }}\r\n                      >\r\n                        <AddRiskFormField\r\n                          field={{\r\n                            ...fieldProps,\r\n                            label: media.mobile ? label : undefined,\r\n                            name: `${field.name}[${index}].${def.name}`,\r\n                            defaultValue: item[def.name],\r\n                            options: limitFieldOptions || [],\r\n                            muiComponentProps: merge(fieldProps.muiComponentProps || {}, {\r\n                              ...(['text', 'number'].includes(def.type) && { InputProps: { disabled: isDisabled } }),\r\n                            }),\r\n                          }}\r\n                          formProps={formProps}\r\n                        />\r\n                      </TableCell>\r\n                    );\r\n                  })}\r\n\r\n                  <TableCell className={classnames([classes.deleteCell, classes.tableRowCell])}>\r\n                    <Button\r\n                      danger\r\n                      size=\"small\"\r\n                      icon={HighlightOffIcon}\r\n                      disabled={removeLastField ? false : fields.length === 1}\r\n                      variant={media.mobile ? 'outlined' : 'text'}\r\n                      text={media.mobile ? utils.string.t('app.delete') : undefined}\r\n                      nestedClasses={{ btn: classes.deleteBtn }}\r\n                      onClick={() => removeHandler(index)}\r\n                      data-testid=\"btn-row-delete\"\r\n                    />\r\n                  </TableCell>\r\n                </TableRow>\r\n              </Fragment>\r\n            ) : null;\r\n          })}\r\n        </TableBody>\r\n      </Table>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      {overflow && <Overflow style={media.mobile ? undefined : { marginTop: -24 }}>{renderTable()}</Overflow>}\r\n\r\n      {!overflow && renderTable()}\r\n      <Pagination\r\n        page={pagination.page}\r\n        count={pagination.count}\r\n        rowsPerPage={pagination.rowsPerPage}\r\n        onChangePage={pagination.handleChangePage}\r\n        onChangeRowsPerPage={pagination.handleChangeRowsPerPage}\r\n      />\r\n      {limitFieldOptions?.length > 0 ? (\r\n        <Box display=\"flex\" mt={2}>\r\n          <Box mr={1.5}>\r\n            <Button color=\"secondary\" size=\"small\" icon={AddIcon} text={utils.string.t('app.add')} onClick={() => appendHandler()} />\r\n          </Box>\r\n\r\n          <Button\r\n            color=\"secondary\"\r\n            size=\"small\"\r\n            variant=\"outlined\"\r\n            text={utils.string.t('app.pasteFromExcel')}\r\n            onClick={() =>\r\n              handlers.launchPasteFromExcelModal({\r\n                name: field.name,\r\n                headers: field.arrayItemDef\r\n                  .filter((def) => def?.type !== 'hidden')\r\n                  .reduce((acc, def) => {\r\n                    return [...acc, { key: def.name, value: '' }];\r\n                  }, []),\r\n                handlers: {\r\n                  submit: (data) => {\r\n                    appendHandler(data);\r\n                    handlers.closePasteFromExcelModal();\r\n                  },\r\n                },\r\n              })\r\n            }\r\n          />\r\n        </Box>\r\n      ) : null}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}