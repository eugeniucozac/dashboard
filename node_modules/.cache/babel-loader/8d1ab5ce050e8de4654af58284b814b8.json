{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce'; // app\n\nimport { MultiSelectAsyncView } from './MultiSelectAsync.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMultiSelectAsync.propTypes = {\n  id: PropTypes.string.isRequired,\n  values: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })),\n  max: PropTypes.number,\n  searchMinChars: PropTypes.number,\n  placeholder: PropTypes.string,\n  labels: PropTypes.shape({\n    minChars: PropTypes.string,\n    hint: PropTypes.string,\n    noResults: PropTypes.string\n  }),\n  handlers: PropTypes.shape({\n    fetch: PropTypes.func.isRequired,\n    toggleOption: PropTypes.func\n  })\n};\nMultiSelectAsync.defaultProps = {\n  max: 8,\n  searchMinChars: 1,\n  values: [],\n  handlers: {},\n  nestedClasses: {}\n};\nexport default function MultiSelectAsync(_ref) {\n  _s();\n\n  var id = _ref.id,\n      values = _ref.values,\n      searchMinChars = _ref.searchMinChars,\n      placeholder = _ref.placeholder,\n      handlers = _ref.handlers,\n      props = _objectWithoutProperties(_ref, [\"id\", \"values\", \"searchMinChars\", \"placeholder\", \"handlers\"]);\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      fetching = _useState4[0],\n      setFetching = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      options = _useState6[0],\n      setOptions = _useState6[1];\n\n  var onKeyStroke = function onKeyStroke(value) {\n    setQuery(value);\n\n    if (value && value.length >= searchMinChars) {\n      setFetching(true);\n    }\n  };\n\n  var onClear = function onClear(reset) {\n    return function (event) {\n      setQuery('');\n      setOptions([]);\n      reset();\n    };\n  };\n\n  var onToggleOption = function onToggleOption(item) {\n    if (utils.generic.isFunction(handlers.toggleOption)) {\n      handlers.toggleOption(id, item);\n    }\n  };\n\n  var fetch = useMemo(function () {\n    return (// debounce to prevent too many fetches on every keystrokes\n      debounce(function (request, callback) {\n        setFetching(true);\n        handlers.fetch(request.input).then(function (results) {\n          setFetching(false);\n          callback(results);\n        });\n      }, 250)\n    );\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (query && query.length >= searchMinChars) {\n      fetch({\n        input: query\n      }, function (results) {\n        setOptions(results);\n      });\n    }\n  }, [query]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var field = {\n    name: \"multi-select-async-search-\".concat(id),\n    placeholder: placeholder || '',\n    defaultValue: '',\n    onChange: function onChange(value) {\n      onKeyStroke(value ? value.trim() : '');\n      return value;\n    },\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(MultiSelectAsyncView, _objectSpread({\n    id: \"multi-select-async-\".concat(id),\n    field: field,\n    query: query,\n    options: options,\n    values: values,\n    searchMinChars: searchMinChars,\n    fetching: fetching,\n    handlers: {\n      onClear: onClear,\n      onToggleOption: onToggleOption\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectAsync, \"vIP95BDAWFXetZXdCp67zDU6Q/A=\");\n\n_c = MultiSelectAsync;\nMultiSelectAsync.displayName = \"MultiSelectAsync\";\nMultiSelectAsync.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MultiSelectAsync\",\n  \"props\": {\n    \"max\": {\n      \"defaultValue\": {\n        \"value\": \"8\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"searchMinChars\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"values\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            },\n            \"name\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"fetch\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"toggleOption\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"labels\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"minChars\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"hint\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"noResults\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.js\"] = {\n    name: \"MultiSelectAsync\",\n    docgenInfo: MultiSelectAsync.__docgenInfo,\n    path: \"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectAsync\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MultiSelectAsync/MultiSelectAsync.js"],"names":["React","useState","useEffect","useMemo","PropTypes","debounce","MultiSelectAsyncView","utils","MultiSelectAsync","propTypes","id","string","isRequired","values","arrayOf","shape","oneOfType","number","name","max","searchMinChars","placeholder","labels","minChars","hint","noResults","handlers","fetch","func","toggleOption","defaultProps","nestedClasses","props","query","setQuery","fetching","setFetching","options","setOptions","onKeyStroke","value","length","onClear","reset","event","onToggleOption","item","generic","isFunction","request","callback","input","then","results","field","defaultValue","onChange","trim","muiComponentProps","autoComplete"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport debounce from 'lodash/debounce';\r\n\r\n// app\r\nimport { MultiSelectAsyncView } from './MultiSelectAsync.view';\r\nimport * as utils from 'utils';\r\n\r\nMultiSelectAsync.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  values: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    })\r\n  ),\r\n  max: PropTypes.number,\r\n  searchMinChars: PropTypes.number,\r\n  placeholder: PropTypes.string,\r\n  labels: PropTypes.shape({\r\n    minChars: PropTypes.string,\r\n    hint: PropTypes.string,\r\n    noResults: PropTypes.string,\r\n  }),\r\n  handlers: PropTypes.shape({\r\n    fetch: PropTypes.func.isRequired,\r\n    toggleOption: PropTypes.func,\r\n  }),\r\n};\r\n\r\nMultiSelectAsync.defaultProps = {\r\n  max: 8,\r\n  searchMinChars: 1,\r\n  values: [],\r\n  handlers: {},\r\n  nestedClasses: {},\r\n};\r\n\r\nexport default function MultiSelectAsync({ id, values, searchMinChars, placeholder, handlers, ...props }) {\r\n  const [query, setQuery] = useState('');\r\n  const [fetching, setFetching] = useState(false);\r\n  const [options, setOptions] = useState([]);\r\n\r\n  const onKeyStroke = (value) => {\r\n    setQuery(value);\r\n\r\n    if (value && value.length >= searchMinChars) {\r\n      setFetching(true);\r\n    }\r\n  };\r\n\r\n  const onClear = (reset) => (event) => {\r\n    setQuery('');\r\n    setOptions([]);\r\n    reset();\r\n  };\r\n\r\n  const onToggleOption = (item) => {\r\n    if (utils.generic.isFunction(handlers.toggleOption)) {\r\n      handlers.toggleOption(id, item);\r\n    }\r\n  };\r\n\r\n  const fetch = useMemo(\r\n    () =>\r\n      // debounce to prevent too many fetches on every keystrokes\r\n      debounce((request, callback) => {\r\n        setFetching(true);\r\n        handlers.fetch(request.input).then((results) => {\r\n          setFetching(false);\r\n          callback(results);\r\n        });\r\n      }, 250),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (query && query.length >= searchMinChars) {\r\n      fetch({ input: query }, (results) => {\r\n        setOptions(results);\r\n      });\r\n    }\r\n  }, [query]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const field = {\r\n    name: `multi-select-async-search-${id}`,\r\n    placeholder: placeholder || '',\r\n    defaultValue: '',\r\n    onChange: (value) => {\r\n      onKeyStroke(value ? value.trim() : '');\r\n      return value;\r\n    },\r\n    muiComponentProps: {\r\n      autoComplete: 'off',\r\n    },\r\n  };\r\n\r\n  return (\r\n    <MultiSelectAsyncView\r\n      id={`multi-select-async-${id}`}\r\n      field={field}\r\n      query={query}\r\n      options={options}\r\n      values={values}\r\n      searchMinChars={searchMinChars}\r\n      fetching={fetching}\r\n      handlers={{\r\n        onClear,\r\n        onToggleOption,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}