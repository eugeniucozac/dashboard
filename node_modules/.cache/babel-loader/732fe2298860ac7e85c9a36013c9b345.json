{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateAdHocTask\\\\CreateAdHocTask.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport styles from './CreateAdHocTask.styles';\nimport { CreateAdHocTaskView } from './CreateAdHocTask.view';\nimport { showModal, hideModal, getPriorityLevels, selectPriorities, getUsersByOrg, selectClaimsAssignedToUsers, postSaveAdHocTask, postEditAdHocTask, resetClaimsAssignedToUsers, setDmsTaskContextType, resetDmsTaskTypeContext, getClaimRefTasks } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core'; //mui\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateAdHocTask.propTypes = {\n  claim: PropTypes.object,\n  cancelHandler: PropTypes.func,\n  submitHandler: PropTypes.func\n};\nexport default function CreateAdHocTask(_ref) {\n  _s();\n\n  var _priorities$find;\n\n  var claim = _ref.claim,\n      cancelHandler = _ref.cancelHandler,\n      submitHandler = _ref.submitHandler;\n  var classes = makeStyles(styles, {\n    name: 'CreateAdHocTask'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      additionalResetKey = _useState4[0],\n      setAdditionalResetKey = _useState4[1]; // Redux\n\n\n  var priorities = useSelector(selectPriorities);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var assignedToUsers = selectAssignees === null || selectAssignees === void 0 ? void 0 : selectAssignees.items;\n  var taskDetails = (claim === null || claim === void 0 ? void 0 : claim.taskRef) ? _objectSpread({}, claim) : null;\n  var isEditFlag = utils.generic.isValidObject(taskDetails);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isTaskSubmitted = _useState6[0],\n      setIsTaskSubmitted = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isUploadDocuments = _useState8[0],\n      setIsUploadDocuments = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      adHocTaskData = _useState10[0],\n      setAdHocTaskData = _useState10[1]; // State\n\n\n  var _useState11 = useState(assignedToUsers),\n      _useState12 = _slicedToArray(_useState11, 2),\n      additionalAssigneeList = _useState12[0],\n      setAdditionalAssigneeList = _useState12[1];\n\n  var reminderList = [{\n    id: '1D',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr')\n  }, {\n    id: '2D',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr')\n  }, {\n    id: '3D',\n    name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr')\n  }, {\n    id: '4D',\n    name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr')\n  }, {\n    id: '1W',\n    name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr')\n  }, {\n    id: '2W',\n    name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr')\n  }, {\n    id: 'NA',\n    name: utils.string.t('claims.processing.taskReminderLabels.noReminder')\n  }];\n  var claimRef = (claim === null || claim === void 0 ? void 0 : claim.claimRef) || (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.processRef);\n\n  var _useState13 = useState(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.status),\n      _useState14 = _slicedToArray(_useState13, 2),\n      taskStatus = _useState14[0],\n      setTaskStatus = _useState14[1];\n\n  var taskStatusOptions = constants.TASK_STATUS;\n\n  var getAssigneeFromList = function getAssigneeFromList(searchedEmail) {\n    if (searchedEmail && assignedToUsers) {\n      var userData = assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (user) {\n        return searchedEmail.toLowerCase() === user.email.toLowerCase();\n      });\n      return userData || null;\n    }\n\n    return '';\n  };\n\n  var fields = [{\n    name: 'taskName',\n    type: 'text',\n    label: utils.string.t('claims.processing.taskDetailsLabels.taskName'),\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    value: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskType) || '',\n    muiComponentProps: {\n      disabled: taskDetails !== null,\n      classes: {\n        root: classes.newLabel\n      }\n    }\n  }, {\n    name: 'priority',\n    type: 'select',\n    label: utils.string.t('claims.processing.taskDetailsLabels.priority'),\n    options: utils.generic.isValidArray(priorities, true) ? priorities : [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    defaultValue: priorities === null || priorities === void 0 ? void 0 : (_priorities$find = priorities.find(function (_ref2) {\n      var description = _ref2.description,\n          id = _ref2.id;\n      return description === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.priority) || id === (constants === null || constants === void 0 ? void 0 : constants.PRIORITIES_ID[1]);\n    })) === null || _priorities$find === void 0 ? void 0 : _priorities$find.id,\n    muiComponentProps: {\n      classes: {\n        root: classes.newLabel\n      }\n    }\n  }, {\n    name: 'status',\n    type: 'autocompletemui',\n    options: taskStatusOptions,\n    label: utils.string.t('app.status'),\n    optionKey: 'id',\n    optionLabel: 'status',\n    muiComponentProps: {\n      disabled: constants.TASK_TYPES_NATIVE === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskCategory) || taskDetails === null,\n      classes: {\n        root: classes.newLabel\n      }\n    },\n    defaultValue: taskStatusOptions === null || taskStatusOptions === void 0 ? void 0 : taskStatusOptions.find(function (_ref3) {\n      var status = _ref3.status;\n      return status === taskStatus;\n    })\n  }, {\n    name: 'assignedTo',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\n    options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    validation: !taskDetails && Yup.object().required(utils.string.t('validation.required')).nullable(),\n    defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.assignee) : null,\n    muiComponentProps: {\n      disabled: taskDetails !== null,\n      classes: {\n        root: classes.newLabel\n      }\n    }\n  }, {\n    name: 'addtlAssignee',\n    type: 'autocompletemui',\n    options: [{\n      id: -1,\n      fullName: '',\n      email: ''\n    }].concat(_toConsumableArray(utils.generic.isValidArray(additionalAssigneeList) ? additionalAssigneeList : [])),\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.additionalAssignee) : null,\n    muiComponentProps: {\n      disabled: taskDetails !== null\n    }\n  }, {\n    name: 'reminder',\n    type: 'autocompletemui',\n    options: (reminderList === null || reminderList === void 0 ? void 0 : reminderList.length) ? reminderList : [],\n    label: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\n    optionKey: 'id',\n    optionLabel: 'name',\n    defaultValue: utils.generic.isValidObject(taskDetails) && (reminderList === null || reminderList === void 0 ? void 0 : reminderList.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.id) === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.reminder);\n    })),\n    muiComponentProps: {\n      classes: {\n        root: classes.newLabel\n      }\n    }\n  }, {\n    type: 'datepicker',\n    name: 'targetDueDate',\n    icon: 'TodayIcon',\n    label: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().test('from', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\n      var createdDate = new moment();\n      return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\n    }),\n    outputFormat: 'iso',\n    value: moment(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.targetDueDate) || ''\n  }, {\n    name: 'description',\n    type: 'textarea',\n    label: utils.string.t('claims.processing.taskDetailsLabels.description'),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 350\n      },\n      multiline: true,\n      rows: 5,\n      rowsMax: 5,\n      'data-testid': 'details',\n      classes: {\n        root: classes.newLabel\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    value: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.description) || ''\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var isDirty = formState.isDirty;\n  var assignedToField = watch('assignedTo');\n  var taskStatusChanged = watch('status');\n\n  var createEligibleList = function createEligibleList(allList, existingAssignees) {\n    if (utils.generic.isValidArray(existingAssignees, true)) {\n      return allList.filter(function (_ref4) {\n        var email = _ref4.email;\n        return existingAssignees.indexOf(email.toLowerCase()) === -1;\n      });\n    } else {\n      return allList;\n    }\n  };\n\n  var onClosingUploadModal = function onClosingUploadModal() {\n    dispatch(hideModal());\n  };\n\n  useEffect(function () {\n    if (assignedToField) {\n      var _assignedToField$emai;\n\n      var existingAssignees = taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.assignee.toLowerCase();\n      setAdditionalAssigneeList(createEligibleList(assignedToUsers, [].concat(_toConsumableArray(existingAssignees ? existingAssignees : []), [assignedToField === null || assignedToField === void 0 ? void 0 : (_assignedToField$emai = assignedToField.email) === null || _assignedToField$emai === void 0 ? void 0 : _assignedToField$emai.toLowerCase()])));\n      setAdditionalResetKey(new Date().getTime());\n    }\n\n    isEditFlag && setResetKey(new Date().getTime());\n  }, [assignedToUsers, assignedToField]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (taskStatusChanged) {\n      setTaskStatus(taskStatusChanged.status);\n    }\n  }, [taskStatusChanged]);\n\n  var handleCreateAdhocCancel = function handleCreateAdhocCancel() {\n    if (isDirty) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\n          maxWidth: 'xs',\n          componentProps: {\n            confirmLabel: utils.string.t('app.yes'),\n            cancelLabel: utils.string.t('app.no'),\n            confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\n            buttonColors: {\n              confirm: 'secondary',\n              cancel: 'default'\n            },\n            submitHandler: function submitHandler() {\n              utils.generic.isFunction(cancelHandler) && cancelHandler();\n            },\n            handleClose: function handleClose() {}\n          }\n        }\n      }));\n    } else {\n      dispatch(hideModal());\n    }\n  };\n\n  var handleAdHocTaskSubmit = function handleAdHocTaskSubmit(values) {\n    var _values$addtlAssignee, _values$assignedTo, _values$reminder;\n\n    var adHocData = {\n      additionalAssignee: values === null || values === void 0 ? void 0 : (_values$addtlAssignee = values.addtlAssignee) === null || _values$addtlAssignee === void 0 ? void 0 : _values$addtlAssignee.email,\n      assignedTo: values === null || values === void 0 ? void 0 : (_values$assignedTo = values.assignedTo) === null || _values$assignedTo === void 0 ? void 0 : _values$assignedTo.email,\n      bpmProcessId: claim.processID,\n      claimRef: values.claimRef,\n      description: values.description,\n      followUpdate: null,\n      priority: values === null || values === void 0 ? void 0 : values.priority,\n      reminder: (_values$reminder = values.reminder) === null || _values$reminder === void 0 ? void 0 : _values$reminder.id,\n      requestedBy: null,\n      targetDueDate: values.targetDueDate,\n      taskName: values.taskName\n    };\n\n    if (taskDetails !== null) {\n      var _values$reminder2;\n\n      var editAdHocData = {\n        taskId: taskDetails.taskId,\n        bpmProcessId: claim.rootProcessId,\n        priority: values === null || values === void 0 ? void 0 : values.priority,\n        reminder: (_values$reminder2 = values.reminder) === null || _values$reminder2 === void 0 ? void 0 : _values$reminder2.id,\n        targetDueDate: values.targetDueDate,\n        description: values.description,\n        status: taskStatus,\n        followUpDate: null\n      };\n      dispatch(postEditAdHocTask(editAdHocData, taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskId)).then(function () {\n        return utils.generic.isFunction(submitHandler) && submitHandler();\n      });\n    } else {\n      dispatch(postSaveAdHocTask(adHocData)).then(function (createdAdHocTaskData) {\n        var _createdAdHocTaskData, _createdAdHocTaskData2;\n\n        setIsTaskSubmitted(true);\n        setAdHocTaskData({\n          taskId: createdAdHocTaskData === null || createdAdHocTaskData === void 0 ? void 0 : (_createdAdHocTaskData = createdAdHocTaskData.data) === null || _createdAdHocTaskData === void 0 ? void 0 : _createdAdHocTaskData.id\n        });\n        dispatch(setDmsTaskContextType({\n          type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC,\n          refId: createdAdHocTaskData === null || createdAdHocTaskData === void 0 ? void 0 : (_createdAdHocTaskData2 = createdAdHocTaskData.data) === null || _createdAdHocTaskData2 === void 0 ? void 0 : _createdAdHocTaskData2.id\n        }));\n      });\n    }\n  };\n\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      handleCreateAdhocCancel();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.saveClose'),\n    handler: function handler(values) {\n      handleAdHocTaskSubmit(values);\n    }\n  }];\n  var docsPromptActions = {\n    no: {\n      label: utils.string.t('app.no'),\n      handler: function handler() {\n        setIsUploadDocuments(false);\n        dispatch(hideModal());\n      }\n    },\n    yes: {\n      label: utils.string.t('app.yes'),\n      handler: function handler() {\n        setIsUploadDocuments(true);\n      }\n    }\n  };\n  useEffect(function () {\n    dispatch(setDmsTaskContextType({\n      type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC\n    }));\n    dispatch(getPriorityLevels());\n    dispatch(resetClaimsAssignedToUsers());\n    dispatch(getUsersByOrg(claim === null || claim === void 0 ? void 0 : claim.team, [claim], 'createAdHocTask'));\n    setResetKey(new Date().getTime());\n    return function () {\n      dispatch(resetDmsTaskTypeContext());\n      dispatch(getClaimRefTasks({\n        requestType: constants.CLAIM_PROCESSING_REQ_TYPES.search\n      }));\n      dispatch(getClaimRefTasks({\n        requestType: constants.CLAIM_PROCESSING_REQ_TYPES.filter\n      }));\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (utils.generic.isInvalidOrEmptyArray(priorities)) return null;\n  return /*#__PURE__*/_jsxDEV(CreateAdHocTaskView, {\n    claimRef: claimRef,\n    taskDetails: taskDetails,\n    actions: actions,\n    fields: fields,\n    control: control,\n    errors: errors,\n    setValue: setValue,\n    handleSubmit: handleSubmit,\n    formState: formState,\n    reset: reset,\n    resetKey: resetKey,\n    additionalResetKey: additionalResetKey,\n    isEditFlag: isEditFlag,\n    adHocTaskData: adHocTaskData,\n    isTaskSubmitted: isTaskSubmitted,\n    docsPromptActions: docsPromptActions,\n    isUploadDocuments: isUploadDocuments,\n    handlers: {\n      onClosingUploadModal: onClosingUploadModal\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 349,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAdHocTask, \"jRkB4z3RH7HvjVn4jNp7lRGAjgQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = CreateAdHocTask;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdHocTask\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateAdHocTask/CreateAdHocTask.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","moment","useForm","yupResolver","styles","CreateAdHocTaskView","showModal","hideModal","getPriorityLevels","selectPriorities","getUsersByOrg","selectClaimsAssignedToUsers","postSaveAdHocTask","postEditAdHocTask","resetClaimsAssignedToUsers","setDmsTaskContextType","resetDmsTaskTypeContext","getClaimRefTasks","utils","constants","makeStyles","CreateAdHocTask","propTypes","claim","object","cancelHandler","func","submitHandler","classes","name","dispatch","resetKey","setResetKey","additionalResetKey","setAdditionalResetKey","priorities","selectAssignees","assignedToUsers","items","taskDetails","taskRef","isEditFlag","generic","isValidObject","isTaskSubmitted","setIsTaskSubmitted","isUploadDocuments","setIsUploadDocuments","adHocTaskData","setAdHocTaskData","additionalAssigneeList","setAdditionalAssigneeList","reminderList","id","string","t","claimRef","processRef","status","taskStatus","setTaskStatus","taskStatusOptions","TASK_STATUS","getAssigneeFromList","searchedEmail","userData","find","user","toLowerCase","email","fields","type","label","validation","required","value","taskType","muiComponentProps","disabled","root","newLabel","options","isValidArray","optionKey","optionLabel","defaultValue","description","priority","PRIORITIES_ID","TASK_TYPES_NATIVE","taskCategory","nullable","assignee","fullName","additionalAssignee","length","item","reminder","icon","fullWidth","datepicker","date","test","createdDate","isSameOrAfter","outputFormat","targetDueDate","inputProps","maxLength","multiline","rows","rowsMax","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","watch","setValue","isDirty","assignedToField","taskStatusChanged","createEligibleList","allList","existingAssignees","filter","indexOf","onClosingUploadModal","Date","getTime","handleCreateAdhocCancel","component","props","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","isFunction","handleClose","handleAdHocTaskSubmit","values","adHocData","addtlAssignee","assignedTo","bpmProcessId","processID","followUpdate","requestedBy","taskName","editAdHocData","taskId","rootProcessId","followUpDate","then","createdAdHocTaskData","data","DMS_TASK_CONTEXT_TYPE_ADHOC","refId","actions","handler","docsPromptActions","no","yes","team","requestType","CLAIM_PROCESSING_REQ_TYPES","search","isInvalidOrEmptyArray"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport styles from './CreateAdHocTask.styles';\r\nimport { CreateAdHocTaskView } from './CreateAdHocTask.view';\r\nimport {\r\n  showModal,\r\n  hideModal,\r\n  getPriorityLevels,\r\n  selectPriorities,\r\n  getUsersByOrg,\r\n  selectClaimsAssignedToUsers,\r\n  postSaveAdHocTask,\r\n  postEditAdHocTask,\r\n  resetClaimsAssignedToUsers,\r\n  setDmsTaskContextType,\r\n  resetDmsTaskTypeContext,\r\n  getClaimRefTasks,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\n//mui\r\nCreateAdHocTask.propTypes = {\r\n  claim: PropTypes.object,\r\n  cancelHandler: PropTypes.func,\r\n  submitHandler: PropTypes.func,\r\n};\r\n\r\nexport default function CreateAdHocTask({ claim, cancelHandler, submitHandler }) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdHocTask' })();\r\n  const dispatch = useDispatch();\r\n  const [resetKey, setResetKey] = useState();\r\n  const [additionalResetKey, setAdditionalResetKey] = useState();\r\n  // Redux\r\n  const priorities = useSelector(selectPriorities);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const assignedToUsers = selectAssignees?.items;\r\n  const taskDetails = claim?.taskRef ? { ...claim } : null;\r\n  const isEditFlag = utils.generic.isValidObject(taskDetails);\r\n  const [isTaskSubmitted, setIsTaskSubmitted] = useState(false);\r\n  const [isUploadDocuments, setIsUploadDocuments] = useState(false);\r\n  const [adHocTaskData, setAdHocTaskData] = useState({});\r\n\r\n  // State\r\n  const [additionalAssigneeList, setAdditionalAssigneeList] = useState(assignedToUsers);\r\n  const reminderList = [\r\n    { id: '1D', name: utils.string.t('claims.processing.taskReminderLabels.oneDayBfr') },\r\n    { id: '2D', name: utils.string.t('claims.processing.taskReminderLabels.twoDayBfr') },\r\n    { id: '3D', name: utils.string.t('claims.processing.taskReminderLabels.threeDayBfr') },\r\n    { id: '4D', name: utils.string.t('claims.processing.taskReminderLabels.fourDayBfr') },\r\n    { id: '1W', name: utils.string.t('claims.processing.taskReminderLabels.oneWeekBfr') },\r\n    { id: '2W', name: utils.string.t('claims.processing.taskReminderLabels.twoWeekBfr') },\r\n    { id: 'NA', name: utils.string.t('claims.processing.taskReminderLabels.noReminder') },\r\n  ];\r\n  const claimRef = claim?.claimRef || taskDetails?.processRef;\r\n  const [taskStatus, setTaskStatus] = useState(taskDetails?.status);\r\n  const taskStatusOptions = constants.TASK_STATUS;\r\n\r\n  const getAssigneeFromList = (searchedEmail) => {\r\n    if (searchedEmail && assignedToUsers) {\r\n      let userData = assignedToUsers?.find((user) => searchedEmail.toLowerCase() === user.email.toLowerCase());\r\n      return userData || null;\r\n    }\r\n    return '';\r\n  };\r\n  const fields = [\r\n    {\r\n      name: 'taskName',\r\n      type: 'text',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.taskName'),\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      value: taskDetails?.taskType || '',\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'select',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.priority'),\r\n      options: utils.generic.isValidArray(priorities, true) ? priorities : [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      defaultValue: priorities?.find(({ description, id }) => description === taskDetails?.priority || id === constants?.PRIORITIES_ID[1])?.id,\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'status',\r\n      type: 'autocompletemui',\r\n      options: taskStatusOptions,\r\n      label: utils.string.t('app.status'),\r\n      optionKey: 'id',\r\n      optionLabel: 'status',\r\n      muiComponentProps: {\r\n        disabled: constants.TASK_TYPES_NATIVE === taskDetails?.taskCategory || taskDetails === null,\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n      defaultValue: taskStatusOptions?.find(({ status }) => status === taskStatus),\r\n    },\r\n    {\r\n      name: 'assignedTo',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\r\n      options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      validation: !taskDetails && Yup.object().required(utils.string.t('validation.required')).nullable(),\r\n      defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.assignee) : null,\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'addtlAssignee',\r\n      type: 'autocompletemui',\r\n      options: [{ id: -1, fullName: '', email: '' }, ...(utils.generic.isValidArray(additionalAssigneeList) ? additionalAssigneeList : [])],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      defaultValue: taskDetails && utils.generic.isValidArray(assignedToUsers) ? getAssigneeFromList(taskDetails.additionalAssignee) : null,\r\n      muiComponentProps: {\r\n        disabled: taskDetails !== null,\r\n      },\r\n    },\r\n    {\r\n      name: 'reminder',\r\n      type: 'autocompletemui',\r\n      options: reminderList?.length ? reminderList : [],\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      defaultValue: utils.generic.isValidObject(taskDetails) && reminderList?.find((item) => item?.id === taskDetails?.reminder),\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'targetDueDate',\r\n      icon: 'TodayIcon',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n      validation: Yup.date()\r\n        .nullable()\r\n        .test('from', utils.string.t('claims.processing.validation.targetLessThanCreatedDate'), function (value) {\r\n          const createdDate = new moment();\r\n          return value && createdDate ? moment(value).isSameOrAfter(createdDate, 'day') : true;\r\n        }),\r\n      outputFormat: 'iso',\r\n      value: moment(taskDetails?.targetDueDate) || '',\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      label: utils.string.t('claims.processing.taskDetailsLabels.description'),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 350 },\r\n        multiline: true,\r\n        rows: 5,\r\n        rowsMax: 5,\r\n        'data-testid': 'details',\r\n        classes: {\r\n          root: classes.newLabel,\r\n        },\r\n      },\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      value: taskDetails?.description || '',\r\n    },\r\n  ];\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const { control, reset, errors, handleSubmit, formState, watch, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const { isDirty } = formState;\r\n  const assignedToField = watch('assignedTo');\r\n  const taskStatusChanged = watch('status');\r\n\r\n  const createEligibleList = (allList, existingAssignees) => {\r\n    if (utils.generic.isValidArray(existingAssignees, true)) {\r\n      return allList.filter(({ email }) => existingAssignees.indexOf(email.toLowerCase()) === -1);\r\n    } else {\r\n      return allList;\r\n    }\r\n  };\r\n  const onClosingUploadModal = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (assignedToField) {\r\n      const existingAssignees = taskDetails?.assignee.toLowerCase();\r\n      setAdditionalAssigneeList(\r\n        createEligibleList(assignedToUsers, [...(existingAssignees ? existingAssignees : []), assignedToField?.email?.toLowerCase()])\r\n      );\r\n      setAdditionalResetKey(new Date().getTime());\r\n    }\r\n    isEditFlag && setResetKey(new Date().getTime());\r\n  }, [assignedToUsers, assignedToField]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (taskStatusChanged) {\r\n      setTaskStatus(taskStatusChanged.status);\r\n    }\r\n  }, [taskStatusChanged]);\r\n  const handleCreateAdhocCancel = () => {\r\n    if (isDirty) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            fullWidth: true,\r\n            title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmMessage: utils.string.t('claims.processing.modal.adhocCancelLabel'),\r\n              buttonColors: { confirm: 'secondary', cancel: 'default' },\r\n              submitHandler: () => {\r\n                utils.generic.isFunction(cancelHandler) && cancelHandler();\r\n              },\r\n              handleClose: () => {},\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(hideModal());\r\n    }\r\n  };\r\n\r\n  const handleAdHocTaskSubmit = (values) => {\r\n    const adHocData = {\r\n      additionalAssignee: values?.addtlAssignee?.email,\r\n      assignedTo: values?.assignedTo?.email,\r\n      bpmProcessId: claim.processID,\r\n      claimRef: values.claimRef,\r\n      description: values.description,\r\n      followUpdate: null,\r\n      priority: values?.priority,\r\n      reminder: values.reminder?.id,\r\n      requestedBy: null,\r\n      targetDueDate: values.targetDueDate,\r\n      taskName: values.taskName,\r\n    };\r\n    if (taskDetails !== null) {\r\n      const editAdHocData = {\r\n        taskId: taskDetails.taskId,\r\n        bpmProcessId: claim.rootProcessId,\r\n        priority: values?.priority,\r\n        reminder: values.reminder?.id,\r\n        targetDueDate: values.targetDueDate,\r\n        description: values.description,\r\n        status: taskStatus,\r\n        followUpDate: null,\r\n      };\r\n      dispatch(postEditAdHocTask(editAdHocData, taskDetails?.taskId)).then(\r\n        () => utils.generic.isFunction(submitHandler) && submitHandler()\r\n      );\r\n    } else {\r\n      dispatch(postSaveAdHocTask(adHocData)).then((createdAdHocTaskData) => {\r\n        setIsTaskSubmitted(true);\r\n        setAdHocTaskData({ taskId: createdAdHocTaskData?.data?.id });\r\n        dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC, refId: createdAdHocTaskData?.data?.id }));\r\n      });\r\n    }\r\n  };\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        handleCreateAdhocCancel();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.saveClose'),\r\n      handler: (values) => {\r\n        handleAdHocTaskSubmit(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const docsPromptActions = {\r\n    no: {\r\n      label: utils.string.t('app.no'),\r\n      handler: () => {\r\n        setIsUploadDocuments(false);\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n    yes: {\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => {\r\n        setIsUploadDocuments(true);\r\n      },\r\n    },\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC }));\r\n    dispatch(getPriorityLevels());\r\n    dispatch(resetClaimsAssignedToUsers());\r\n    dispatch(getUsersByOrg(claim?.team, [claim], 'createAdHocTask'));\r\n    setResetKey(new Date().getTime());\r\n\r\n    return () => {\r\n      dispatch(resetDmsTaskTypeContext());\r\n      dispatch(getClaimRefTasks({ requestType: constants.CLAIM_PROCESSING_REQ_TYPES.search }));\r\n      dispatch(getClaimRefTasks({ requestType: constants.CLAIM_PROCESSING_REQ_TYPES.filter }));\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (utils.generic.isInvalidOrEmptyArray(priorities)) return null;\r\n\r\n  return (\r\n    <CreateAdHocTaskView\r\n      claimRef={claimRef}\r\n      taskDetails={taskDetails}\r\n      actions={actions}\r\n      fields={fields}\r\n      control={control}\r\n      errors={errors}\r\n      setValue={setValue}\r\n      handleSubmit={handleSubmit}\r\n      formState={formState}\r\n      reset={reset}\r\n      resetKey={resetKey}\r\n      additionalResetKey={additionalResetKey}\r\n      isEditFlag={isEditFlag}\r\n      adHocTaskData={adHocTaskData}\r\n      isTaskSubmitted={isTaskSubmitted}\r\n      docsPromptActions={docsPromptActions}\r\n      isUploadDocuments={isUploadDocuments}\r\n      handlers={{\r\n        onClosingUploadModal,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}