{"ast":null,"code":"import { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\nimport * as utils from 'utils';\nimport { getComplexityReferralValues } from 'stores';\nimport * as constants from 'consts';\nexport var postComplexityAddReferral = function postComplexityAddReferral(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postComplexityAddReferral'\n    };\n    var requestBody = {\n      complexityRulesValue: formData.addReferralValue\n    };\n    dispatch(postComplexityAddReferralRequest(formData));\n    dispatch(addLoader('postComplexityAddReferral'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/claims-triage/complex/referral-value',\n      data: requestBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postComplexityAddReferralSuccess(data.data));\n      dispatch(enqueueNotification('notification.addReferral.success', 'success'));\n      dispatch(getComplexityReferralValues());\n      dispatch(hideModal());\n      return data;\n    }).catch(function (err) {\n      var _err$response;\n\n      dispatch(postComplexityAddReferralFailure(err, defaultError));\n      dispatch((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === constants.API_STATUS_CONFLICT ? enqueueNotification('notification.addReferral.duplicate', 'error') : enqueueNotification('notification.addReferral.fail', 'error'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('postComplexityAddReferral'));\n    });\n  };\n};\nexport var postComplexityAddReferralRequest = function postComplexityAddReferralRequest(formData) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_REQUEST',\n    payload: formData\n  };\n};\nexport var postComplexityAddReferralSuccess = function postComplexityAddReferralSuccess(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_SUCCESS',\n    payload: data\n  };\n};\nexport var postComplexityAddReferralFailure = function postComplexityAddReferralFailure(err) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postComplexityAddReferral.js"],"names":["addLoader","removeLoader","enqueueNotification","hideModal","authLogout","utils","getComplexityReferralValues","constants","postComplexityAddReferral","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","requestBody","complexityRulesValue","addReferralValue","postComplexityAddReferralRequest","api","post","token","accessToken","claimService","path","data","then","response","handleResponse","json","handleNewData","postComplexityAddReferralSuccess","catch","err","postComplexityAddReferralFailure","status","API_STATUS_CONFLICT","handleUnauthorized","finally","type","payload"],"mappings":"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","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { getComplexityReferralValues } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport const postComplexityAddReferral = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postComplexityAddReferral',\r\n  };\r\n\r\n  const requestBody = {\r\n    complexityRulesValue: formData.addReferralValue,\r\n  };\r\n\r\n  dispatch(postComplexityAddReferralRequest(formData));\r\n  dispatch(addLoader('postComplexityAddReferral'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/claims-triage/complex/referral-value',\r\n      data: requestBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postComplexityAddReferralSuccess(data.data));\r\n      dispatch(enqueueNotification('notification.addReferral.success', 'success'));\r\n      dispatch(getComplexityReferralValues());\r\n      dispatch(hideModal());\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(postComplexityAddReferralFailure(err, defaultError));\r\n      dispatch(\r\n        err?.response?.status === constants.API_STATUS_CONFLICT\r\n          ? enqueueNotification('notification.addReferral.duplicate', 'error')\r\n          : enqueueNotification('notification.addReferral.fail', 'error')\r\n      );\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postComplexityAddReferral'));\r\n    });\r\n};\r\n\r\nexport const postComplexityAddReferralRequest = (formData) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const postComplexityAddReferralSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postComplexityAddReferralFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_ADD_REFERRAL_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}