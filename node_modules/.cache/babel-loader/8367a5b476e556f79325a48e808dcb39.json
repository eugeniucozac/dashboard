{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocumentsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { FormCheckbox, TableCell, PopoverMenu, Tooltip, Skeleton } from 'components';\nimport { DmsDocDetailsTooltip } from 'modules';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Table, TableBody, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsManageDocumentsTable.propTypes = {\n  documents: PropTypes.array.isRequired,\n  control: PropTypes.object.isRequired,\n  register: PropTypes.func.isRequired,\n  watch: PropTypes.func.isRequired,\n  fields: PropTypes.array.isRequired,\n  allFields: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  popoverActions: PropTypes.array.isRequired,\n  isDmsFileViewGridDataLoading: PropTypes.bool,\n  handlers: PropTypes.shape({\n    formStatus: PropTypes.func.isRequired,\n    setSelectAll: PropTypes.func.isRequired,\n    viewDocLauncher: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsManageDocumentsTable(_ref) {\n  _s();\n\n  var _fields$filter,\n      _this = this;\n\n  var documents = _ref.documents,\n      control = _ref.control,\n      register = _ref.register,\n      watch = _ref.watch,\n      fields = _ref.fields,\n      allFields = _ref.allFields,\n      cols = _ref.cols,\n      popoverActions = _ref.popoverActions,\n      isDmsFileViewGridDataLoading = _ref.isDmsFileViewGridDataLoading,\n      handlers = _ref.handlers;\n  var selectedGroups = (fields === null || fields === void 0 ? void 0 : (_fields$filter = fields.filter(function (item) {\n    return !!(item === null || item === void 0 ? void 0 : item.defaultValue) === true;\n  })) === null || _fields$filter === void 0 ? void 0 : _fields$filter.map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.name;\n  })) || [];\n\n  var _useState = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedGxbDocs = _useState2[0],\n      setSelectedGxbDocs = _useState2[1];\n\n  var checkedDocs = function checkedDocs(e, docs) {\n    e.stopPropagation();\n    var checkedDocument = (docs === null || docs === void 0 ? void 0 : docs.checked) ? [].concat(_toConsumableArray(selectedGxbDocs), [docs === null || docs === void 0 ? void 0 : docs.id]) : selectedGxbDocs === null || selectedGxbDocs === void 0 ? void 0 : selectedGxbDocs.filter(function (item) {\n      return item !== (docs === null || docs === void 0 ? void 0 : docs.id);\n    });\n    var allFieldsSelected = (checkedDocument === null || checkedDocument === void 0 ? void 0 : checkedDocument.length) === (allFields === null || allFields === void 0 ? void 0 : allFields.length);\n    setSelectedGxbDocs(checkedDocument);\n    handlers.setSelectAll(allFieldsSelected);\n    handlers.formStatus();\n  };\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    size: \"small\",\n    children: /*#__PURE__*/_jsxDEV(TableBody, {\n      children: isDmsFileViewGridDataLoading ? /*#__PURE__*/_jsxDEV(TableRow, {\n        children: /*#__PURE__*/_jsxDEV(TableCell, {\n          colSpan: cols.length,\n          children: /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 40,\n            animation: \"wave\",\n            displayNumber: 4\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 11\n      }, this) : documents === null || documents === void 0 ? void 0 : documents.map(function (doc, ind) {\n        var updatedPopOverActions = (doc === null || doc === void 0 ? void 0 : doc.isLinkedToMultipleContexts) ? _toConsumableArray(popoverActions).map(function (action) {\n          var isDeleteAction = action.id === 'delete';\n          return isDeleteAction ? _objectSpread(_objectSpread({}, action), {}, {\n            disabled: true\n          }) : action;\n        }) : _toConsumableArray(popoverActions);\n        var actionDescId = doc === null || doc === void 0 ? void 0 : doc.documentId.toString();\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          hover: true,\n          style: {\n            cursor: 'pointer'\n          },\n          onClick: function onClick(e) {\n            return handlers.viewDocLauncher(e, doc);\n          },\n          children: [/*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n              name: actionDescId\n            }, utils.form.getFieldProps(fields, actionDescId)), {}, {\n              control: control,\n              register: register,\n              watch: watch,\n              muiComponentProps: {\n                onClick: function onClick(e) {\n                  return checkedDocs(e, {\n                    id: e.target.name,\n                    checked: e.target.checked\n                  });\n                }\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 77,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            compact: true,\n            minimal: true,\n            children: /*#__PURE__*/_jsxDEV(Tooltip, {\n              title: /*#__PURE__*/_jsxDEV(DmsDocDetailsTooltip, {\n                data: doc\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 89,\n                columnNumber: 35\n              }, _this),\n              placement: 'bottom',\n              arrow: true,\n              children: doc === null || doc === void 0 ? void 0 : doc.documentName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            compact: true,\n            minimal: true,\n            children: doc === null || doc === void 0 ? void 0 : doc.createdByName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            compact: true,\n            minimal: true,\n            children: utils.string.t('format.date', {\n              value: {\n                date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n                format: config.ui.format.date.text\n              }\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n            children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n              id: \"view-menu-list\",\n              items: updatedPopOverActions,\n              data: {\n                doc: doc\n              },\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'left'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'left'\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 100,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 99,\n            columnNumber: 17\n          }, _this)]\n        }, ind, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 15\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsManageDocumentsTable, \"oG/7EQWCPSz6Cn2FPJarpzzGdww=\");\n\n_c = ClaimsManageDocumentsTable;\nClaimsManageDocumentsTable.displayName = \"ClaimsManageDocumentsTable\";\nClaimsManageDocumentsTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsManageDocumentsTable\",\n  \"props\": {\n    \"documents\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"control\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"register\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"watch\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"allFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"cols\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"popoverActions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isDmsFileViewGridDataLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"formStatus\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"setSelectAll\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"viewDocLauncher\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocumentsTable.js\"] = {\n    name: \"ClaimsManageDocumentsTable\",\n    docgenInfo: ClaimsManageDocumentsTable.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocumentsTable.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsManageDocumentsTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsManageDocuments/ClaimsManageDocumentsTable.js"],"names":["React","useState","PropTypes","FormCheckbox","TableCell","PopoverMenu","Tooltip","Skeleton","DmsDocDetailsTooltip","utils","config","Table","TableBody","TableRow","ClaimsManageDocumentsTable","propTypes","documents","array","isRequired","control","object","register","func","watch","fields","allFields","cols","popoverActions","isDmsFileViewGridDataLoading","bool","handlers","shape","formStatus","setSelectAll","viewDocLauncher","selectedGroups","filter","item","defaultValue","map","name","generic","isInvalidOrEmptyArray","selectedGxbDocs","setSelectedGxbDocs","checkedDocs","e","docs","stopPropagation","checkedDocument","checked","id","allFieldsSelected","length","doc","ind","updatedPopOverActions","isLinkedToMultipleContexts","action","isDeleteAction","disabled","actionDescId","documentId","toString","cursor","form","getFieldProps","onClick","target","documentName","createdByName","string","t","value","date","createdDate","format","ui","text","vertical","horizontal"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { FormCheckbox, TableCell, PopoverMenu, Tooltip, Skeleton } from 'components';\r\nimport { DmsDocDetailsTooltip } from 'modules';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Table, TableBody, TableRow } from '@material-ui/core';\r\n\r\nClaimsManageDocumentsTable.propTypes = {\r\n  documents: PropTypes.array.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  register: PropTypes.func.isRequired,\r\n  watch: PropTypes.func.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  allFields: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n  isDmsFileViewGridDataLoading: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    formStatus: PropTypes.func.isRequired,\r\n    setSelectAll: PropTypes.func.isRequired,\r\n    viewDocLauncher: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsManageDocumentsTable({\r\n  documents,\r\n  control,\r\n  register,\r\n  watch,\r\n  fields,\r\n  allFields,\r\n  cols,\r\n  popoverActions,\r\n  isDmsFileViewGridDataLoading,\r\n  handlers,\r\n}) {\r\n  const selectedGroups = fields?.filter((item) => !!item?.defaultValue === true)?.map((item) => item?.name) || [];\r\n  const [selectedGxbDocs, setSelectedGxbDocs] = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []);\r\n\r\n  const checkedDocs = (e, docs) => {\r\n    e.stopPropagation();\r\n    let checkedDocument = docs?.checked ? [...selectedGxbDocs, docs?.id] : selectedGxbDocs?.filter((item) => item !== docs?.id);\r\n    let allFieldsSelected = checkedDocument?.length === allFields?.length;\r\n    setSelectedGxbDocs(checkedDocument);\r\n    handlers.setSelectAll(allFieldsSelected);\r\n    handlers.formStatus();\r\n  };\r\n\r\n  return (\r\n    <Table size=\"small\">\r\n      <TableBody>\r\n        {isDmsFileViewGridDataLoading ? (\r\n          <TableRow>\r\n            <TableCell colSpan={cols.length}>\r\n              <Skeleton height={40} animation=\"wave\" displayNumber={4} />\r\n            </TableCell>\r\n          </TableRow>\r\n        ) : (\r\n          documents?.map((doc, ind) => {\r\n            const updatedPopOverActions = doc?.isLinkedToMultipleContexts\r\n              ? [...popoverActions].map((action) => {\r\n                  const isDeleteAction = action.id === 'delete';\r\n                  return isDeleteAction ? { ...action, disabled: true } : action;\r\n                })\r\n              : [...popoverActions];\r\n\r\n            const actionDescId = doc?.documentId.toString();\r\n\r\n            return (\r\n              <TableRow key={ind} hover style={{ cursor: 'pointer' }} onClick={(e) => handlers.viewDocLauncher(e, doc)}>\r\n                <TableCell>\r\n                  <FormCheckbox\r\n                    name={actionDescId}\r\n                    {...utils.form.getFieldProps(fields, actionDescId)}\r\n                    control={control}\r\n                    register={register}\r\n                    watch={watch}\r\n                    muiComponentProps={{\r\n                      onClick: (e) => checkedDocs(e, { id: e.target.name, checked: e.target.checked }),\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n                <TableCell compact minimal>\r\n                  <Tooltip title={<DmsDocDetailsTooltip data={doc} />} placement={'bottom'} arrow>\r\n                    {doc?.documentName}\r\n                  </Tooltip>\r\n                </TableCell>\r\n                <TableCell compact minimal>\r\n                  {doc?.createdByName}\r\n                </TableCell>\r\n                <TableCell compact minimal>\r\n                  {utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } })}\r\n                </TableCell>\r\n                <TableCell>\r\n                  <PopoverMenu\r\n                    id=\"view-menu-list\"\r\n                    items={updatedPopOverActions}\r\n                    data={{ doc }}\r\n                    anchorOrigin={{\r\n                      vertical: 'bottom',\r\n                      horizontal: 'left',\r\n                    }}\r\n                    transformOrigin={{\r\n                      vertical: 'top',\r\n                      horizontal: 'left',\r\n                    }}\r\n                  />\r\n                </TableCell>\r\n              </TableRow>\r\n            );\r\n          })\r\n        )}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}