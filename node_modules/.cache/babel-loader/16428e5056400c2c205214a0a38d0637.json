{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nexport var getRejectCloseCase = function getRejectCloseCase(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.getRejectCloseCase'\n    };\n    var taskId = params.taskId,\n        notesFieldValue = params.notesFieldValue,\n        policyRef = params.policyRef;\n    var rejectCloseCaseRequestBody = {\n      bpmTaskId: taskId,\n      notes: notesFieldValue,\n      policyRef: policyRef\n    };\n    dispatch(getRejectCloseCaseRequest(rejectCloseCaseRequestBody));\n    dispatch(addLoader('getRejectCloseCase'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/task/rejectclosed',\n      data: rejectCloseCaseRequestBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getRejectCloseCaseSuccess(data === null || data === void 0 ? void 0 : data.data));\n      dispatch(enqueueNotification(data.message, 'success'));\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.getRejectcloseCase)'\n      }));\n      dispatch(getRejectCloseCaseError(error));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('getRejectCloseCase'));\n    });\n  };\n};\nexport var getRejectCloseCaseRequest = function getRejectCloseCaseRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_REQUEST',\n    payload: payload\n  };\n};\nexport var getRejectCloseCaseSuccess = function getRejectCloseCaseSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_SUCCESS',\n    payload: data\n  };\n};\nexport var getRejectCloseCaseError = function getRejectCloseCaseError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getRejectCloseCase.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","getRejectCloseCase","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","taskId","notesFieldValue","policyRef","rejectCloseCaseRequestBody","bpmTaskId","notes","getRejectCloseCaseRequest","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","getRejectCloseCaseSuccess","message","catch","error","handleError","getRejectCloseCaseError","handleUnauthorized","finally","payload","type"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\n\r\nexport const getRejectCloseCase = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.getRejectCloseCase',\r\n  };\r\n\r\n  const { taskId, notesFieldValue, policyRef } = params;\r\n\r\n  const rejectCloseCaseRequestBody = {\r\n    bpmTaskId: taskId,\r\n    notes: notesFieldValue,\r\n    policyRef: policyRef,\r\n  };\r\n\r\n  dispatch(getRejectCloseCaseRequest(rejectCloseCaseRequestBody));\r\n  dispatch(addLoader('getRejectCloseCase'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/task/rejectclosed',\r\n      data: rejectCloseCaseRequestBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getRejectCloseCaseSuccess(data?.data));\r\n      dispatch(enqueueNotification(data.message, 'success'));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.getRejectcloseCase)' });\r\n      dispatch(getRejectCloseCaseError(error));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getRejectCloseCase'));\r\n    });\r\n};\r\n\r\nexport const getRejectCloseCaseRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getRejectCloseCaseSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getRejectCloseCaseError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}