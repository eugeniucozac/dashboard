{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\DmsDocViewer\\\\DmsDocViewer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useParams } from 'react-router';\nimport { Helmet } from 'react-helmet'; // app\n\nimport { DmsDocViewerView } from './DmsDocViewer.view';\nimport { viewDocumentsDownload, setDmsDocViewerState } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function DmsDocViewer() {\n  _s();\n\n  var dispatch = useDispatch();\n  var docViewParams = useParams();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var dmsDocViewerData = {\n    documentId: docViewParams === null || docViewParams === void 0 ? void 0 : docViewParams.id,\n    documentName: docViewParams === null || docViewParams === void 0 ? void 0 : docViewParams.name\n  };\n\n  var _useState = useState({\n    url: '',\n    ext: ''\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      fileProps = _useState2[0],\n      setFileProps = _useState2[1];\n\n  useEffect(function () {\n    if (dmsDocViewerData === null || dmsDocViewerData === void 0 ? void 0 : dmsDocViewerData.documentId) {\n      var documentId = dmsDocViewerData.documentId,\n          documentName = dmsDocViewerData.documentName;\n      dispatch(setDmsDocViewerState(true));\n      dispatch(viewDocumentsDownload({\n        documentId: documentId,\n        documentName: documentName\n      }, true)).then(function (_ref) {\n        var url = _ref.url,\n            ext = _ref.ext,\n            mimeType = _ref.mimeType;\n        setFileProps({\n          url: url,\n          ext: ext,\n          mimeType: mimeType\n        });\n      });\n    } // cleanup\n\n\n    return function () {\n      dispatch(setDmsDocViewerState(false));\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('dms.docViewer.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DmsDocViewerView, {\n      fileProps: fileProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(DmsDocViewer, \"tkTxTz87KMSWd1l5Gv/dDtTyXRE=\", false, function () {\n  return [useDispatch, useParams, useSelector];\n});\n\n_c = DmsDocViewer;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsDocViewer\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/DmsDocViewer/DmsDocViewer.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useParams","Helmet","DmsDocViewerView","viewDocumentsDownload","setDmsDocViewerState","utils","DmsDocViewer","dispatch","docViewParams","brand","state","ui","dmsDocViewerData","documentId","id","documentName","name","url","ext","fileProps","setFileProps","then","mimeType","string","t","app","getAppName"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B;AACA,SAASC,MAAT,QAAuB,cAAvB,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,qBAAT,EAAgCC,oBAAhC,QAA4D,QAA5D;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,aAAa,GAAGR,SAAS,EAA/B;AAEA,MAAMS,KAAK,GAAGV,WAAW,CAAC,UAACW,KAAD;AAAA,WAAWA,KAAK,CAACC,EAAN,CAASF,KAApB;AAAA,GAAD,CAAzB;AAEA,MAAMG,gBAAgB,GAAG;AAAEC,IAAAA,UAAU,EAAEL,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEM,EAA7B;AAAiCC,IAAAA,YAAY,EAAEP,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEQ;AAA9D,GAAzB;;AANqC,kBAQHpB,QAAQ,CAAC;AAAEqB,IAAAA,GAAG,EAAE,EAAP;AAAWC,IAAAA,GAAG,EAAE;AAAhB,GAAD,CARL;AAAA;AAAA,MAQ9BC,SAR8B;AAAA,MAQnBC,YARmB;;AAUrCvB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,gBAAJ,aAAIA,gBAAJ,uBAAIA,gBAAgB,CAAEC,UAAtB,EAAkC;AAAA,UACxBA,UADwB,GACKD,gBADL,CACxBC,UADwB;AAAA,UACZE,YADY,GACKH,gBADL,CACZG,YADY;AAEhCR,MAAAA,QAAQ,CAACH,oBAAoB,CAAC,IAAD,CAArB,CAAR;AACAG,MAAAA,QAAQ,CAACJ,qBAAqB,CAAC;AAAEU,QAAAA,UAAU,EAAVA,UAAF;AAAcE,QAAAA,YAAY,EAAZA;AAAd,OAAD,EAA+B,IAA/B,CAAtB,CAAR,CAAoEM,IAApE,CAAyE,gBAA4B;AAAA,YAAzBJ,GAAyB,QAAzBA,GAAyB;AAAA,YAApBC,GAAoB,QAApBA,GAAoB;AAAA,YAAfI,QAAe,QAAfA,QAAe;AACnGF,QAAAA,YAAY,CAAC;AAAEH,UAAAA,GAAG,EAAHA,GAAF;AAAOC,UAAAA,GAAG,EAAHA,GAAP;AAAYI,UAAAA,QAAQ,EAARA;AAAZ,SAAD,CAAZ;AACD,OAFD;AAGD,KAPa,CASd;;;AACA,WAAO,YAAM;AACXf,MAAAA,QAAQ,CAACH,oBAAoB,CAAC,KAAD,CAArB,CAAR;AACD,KAFD;AAGD,GAbQ,EAaN,EAbM,CAAT,CAVqC,CAuB7B;;AAER,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,4BAAWC,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAX,gBAAsDnB,KAAK,CAACoB,GAAN,CAAUC,UAAV,CAAqBjB,KAArB,CAAtD;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,gBAAD;AAAkB,MAAA,SAAS,EAAEU;AAA7B;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GAjCuBb,Y;UACLR,W,EACKE,S,EAERD,W;;;KAJQO,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\nimport { Helmet } from 'react-helmet';\r\n\r\n// app\r\nimport { DmsDocViewerView } from './DmsDocViewer.view';\r\nimport { viewDocumentsDownload, setDmsDocViewerState } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport default function DmsDocViewer() {\r\n  const dispatch = useDispatch();\r\n  const docViewParams = useParams();\r\n\r\n  const brand = useSelector((state) => state.ui.brand);\r\n\r\n  const dmsDocViewerData = { documentId: docViewParams?.id, documentName: docViewParams?.name };\r\n\r\n  const [fileProps, setFileProps] = useState({ url: '', ext: '' });\r\n\r\n  useEffect(() => {\r\n    if (dmsDocViewerData?.documentId) {\r\n      const { documentId, documentName } = dmsDocViewerData;\r\n      dispatch(setDmsDocViewerState(true));\r\n      dispatch(viewDocumentsDownload({ documentId, documentName }, true)).then(({ url, ext, mimeType }) => {\r\n        setFileProps({ url, ext, mimeType });\r\n      });\r\n    }\r\n\r\n    // cleanup\r\n    return () => {\r\n      dispatch(setDmsDocViewerState(false));\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('dms.docViewer.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <DmsDocViewerView fileProps={fileProps} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}