{"ast":null,"code":"import \"core-js/modules/es.string.search\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport moment from 'moment';\nimport get from 'lodash/get'; // app\n\nimport * as utils from 'utils';\nimport { authLogout } from 'stores';\nimport { CLAIM_TEAM_TYPE, CLAIMS_TAB_REQ_TYPES } from 'consts';\nexport var getClaimsTabDetails = function getClaimsTabDetails() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimsTabDetails'\n    };\n    var newClaimsTabReqType = (params === null || params === void 0 ? void 0 : params.requestType) || CLAIMS_TAB_REQ_TYPES.search;\n    var prevDirection = get(claims, 'claimsTab.tableDetails.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'claimsTab.tableDetails.query') || '';\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'claimsTab.tableDetails.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy && params.hasOwnProperty('firstTimeSort') ? params.firstTimeSort : prevSortBy;\n    var prevSearchBy = get(claims, 'claimsTab.tableDetails.searchBy') || '';\n    var newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\n    var datesExceptionFields = [];\n    var prevFilterQuery = get(claims, 'claimsTab.tableDetails.selectedFilters') || '';\n    var newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : prevFilterQuery;\n    var constructFilter = Object.entries(newFilterQuery);\n    var updatedFilter = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n      var column = filter[0];\n      var values = filter[1];\n      var isDateFilter = datesExceptionFields.includes(column) && values;\n      var filterValue = values;\n      if (isDateFilter) filterValue = [{\n        id: 1,\n        name: moment(new Date(values)).format('DD-MM-YYYY'),\n        value: moment(new Date(values)).format('DD-MM-YYYY')\n      }];\n      return utils.generic.isValidArray(filterValue, true) && {\n        column: column,\n        filterValue: filterValue\n      };\n    }).filter(function (item) {\n      return item;\n    }) : [];\n    var appliedParams = {\n      newClaimsTabReqType: newClaimsTabReqType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newSearchBy: newSearchBy,\n      updatedFilter: updatedFilter\n    };\n    dispatch(getClaimsTabDetailsRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"workflow/process/claimProcess/\".concat(params === null || params === void 0 ? void 0 : params.claimsType),\n      data: _objectSpread({\n        requestType: newClaimsTabReqType,\n        direction: newDirection,\n        filterLossClaimsCriteria: null,\n        filterSearch: constructFilter.length ? updatedFilter : null,\n        page: params && params.page || 0,\n        pageSize: params && params.size || claims.claimsTab.tableDetails.pageSize,\n        search: newQuery,\n        searchBy: newSearchBy,\n        sortBy: newSortBy\n      }, (params === null || params === void 0 ? void 0 : params.claimsType) !== CLAIM_TEAM_TYPE.allClaims && {\n        pullClosedRecords: params === null || params === void 0 ? void 0 : params.pullClosedRecords\n      })\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getClaimsTabDetailsSuccess(data, newClaimsTabReqType, newQuery));\n      return data;\n    })[\"catch\"](function (err) {\n      if (newClaimsTabReqType === CLAIMS_TAB_REQ_TYPES.search) {\n        dispatch(getClaimsTabTableDetailsFailure(err, defaultError));\n      } else if (newClaimsTabReqType === CLAIMS_TAB_REQ_TYPES.filter) {\n        dispatch(getClaimsTabFilterDetailsFailure(err, defaultError));\n      }\n\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getClaimsTabDetailsRequest = function getClaimsTabDetailsRequest(params) {\n  return {\n    type: 'CLAIMS_TAB_DETAILS_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getClaimsTabDetailsSuccess = function getClaimsTabDetailsSuccess(data, newClaimsTabReqType, newQuery) {\n  return {\n    type: 'CLAIMS_TAB_DETAILS_GET_SUCCESS',\n    payload: {\n      items: data.data,\n      pagination: _objectSpread(_objectSpread({}, data.pagination), {}, {\n        search: newQuery\n      }),\n      requestType: newClaimsTabReqType\n    }\n  };\n};\nexport var getClaimsTabTableDetailsFailure = function getClaimsTabTableDetailsFailure(error) {\n  return {\n    type: 'CLAIMS_TAB_TABLE_DETAILS_FAILURE',\n    payload: error\n  };\n};\nexport var getClaimsTabFilterDetailsFailure = function getClaimsTabFilterDetailsFailure(error) {\n  return {\n    type: 'CLAIMS_TAB_FILTER_DETAILS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimsTabDetails.js"],"names":["moment","get","utils","authLogout","CLAIM_TEAM_TYPE","CLAIMS_TAB_REQ_TYPES","getClaimsTabDetails","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","newClaimsTabReqType","requestType","search","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","firstTimeSort","prevSearchBy","newSearchBy","searchBy","datesExceptionFields","prevFilterQuery","newFilterQuery","filterTerm","constructFilter","Object","entries","updatedFilter","generic","isValidArray","map","filter","column","values","isDateFilter","includes","filterValue","id","name","Date","format","value","item","appliedParams","getClaimsTabDetailsRequest","api","post","token","accessToken","bpmService","path","claimsType","data","filterLossClaimsCriteria","filterSearch","length","page","pageSize","size","claimsTab","tableDetails","allClaims","pullClosedRecords","then","response","handleResponse","json","handleNewData","getClaimsTabDetailsSuccess","err","getClaimsTabTableDetailsFailure","getClaimsTabFilterDetailsFailure","handleUnauthorized","type","payload","items","pagination","error"],"mappings":"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","sourcesContent":["import moment from 'moment';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\nimport { CLAIM_TEAM_TYPE, CLAIMS_TAB_REQ_TYPES } from 'consts';\r\n\r\nexport const getClaimsTabDetails =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getClaimsTabDetails',\r\n    };\r\n    const newClaimsTabReqType = params?.requestType || CLAIMS_TAB_REQ_TYPES.search;\r\n\r\n    const prevDirection = get(claims, 'claimsTab.tableDetails.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const prevQuery = get(claims, 'claimsTab.tableDetails.query') || '';\r\n    const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n    const prevSortBy = get(claims, 'claimsTab.tableDetails.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy')\r\n      ? params.sortBy\r\n      : prevSortBy && params.hasOwnProperty('firstTimeSort')\r\n      ? params.firstTimeSort\r\n      : prevSortBy;\r\n\r\n    const prevSearchBy = get(claims, 'claimsTab.tableDetails.searchBy') || '';\r\n    const newSearchBy = params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\r\n\r\n    const datesExceptionFields = [];\r\n\r\n    const prevFilterQuery = get(claims, 'claimsTab.tableDetails.selectedFilters') || '';\r\n    const newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : prevFilterQuery;\r\n\r\n    const constructFilter = Object.entries(newFilterQuery);\r\n    const updatedFilter = utils.generic.isValidArray(constructFilter, true)\r\n      ? constructFilter\r\n          .map((filter) => {\r\n            const column = filter[0];\r\n            const values = filter[1];\r\n            const isDateFilter = datesExceptionFields.includes(column) && values;\r\n\r\n            let filterValue = values;\r\n            if (isDateFilter)\r\n              filterValue = [\r\n                { id: 1, name: moment(new Date(values)).format('DD-MM-YYYY'), value: moment(new Date(values)).format('DD-MM-YYYY') },\r\n              ];\r\n\r\n            return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n          })\r\n          .filter((item) => item)\r\n      : [];\r\n\r\n    const appliedParams = { newClaimsTabReqType, newDirection, newQuery, newSortBy, newSearchBy, updatedFilter };\r\n\r\n    dispatch(getClaimsTabDetailsRequest({ params, appliedParams }));\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.bpmService,\r\n        path: `workflow/process/claimProcess/${params?.claimsType}`,\r\n        data: {\r\n          requestType: newClaimsTabReqType,\r\n          direction: newDirection,\r\n          filterLossClaimsCriteria: null,\r\n          filterSearch: constructFilter.length ? updatedFilter : null,\r\n          page: (params && params.page) || 0,\r\n          pageSize: (params && params.size) || claims.claimsTab.tableDetails.pageSize,\r\n          search: newQuery,\r\n          searchBy: newSearchBy,\r\n          sortBy: newSortBy,\r\n          ...(params?.claimsType !== CLAIM_TEAM_TYPE.allClaims && { pullClosedRecords: params?.pullClosedRecords }),\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleNewData(json))\r\n      .then((data) => {\r\n        dispatch(getClaimsTabDetailsSuccess(data, newClaimsTabReqType, newQuery));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        if (newClaimsTabReqType === CLAIMS_TAB_REQ_TYPES.search) {\r\n          dispatch(getClaimsTabTableDetailsFailure(err, defaultError));\r\n        } else if (newClaimsTabReqType === CLAIMS_TAB_REQ_TYPES.filter) {\r\n          dispatch(getClaimsTabFilterDetailsFailure(err, defaultError));\r\n        }\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      });\r\n  };\r\n\r\nexport const getClaimsTabDetailsRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_DETAILS_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getClaimsTabDetailsSuccess = (data, newClaimsTabReqType, newQuery) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_DETAILS_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n      pagination: { ...data.pagination, search: newQuery },\r\n      requestType: newClaimsTabReqType,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getClaimsTabTableDetailsFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_TABLE_DETAILS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getClaimsTabFilterDetailsFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_TAB_FILTER_DETAILS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}