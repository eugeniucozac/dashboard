{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditPolicy\\\\EditPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport isNumber from 'lodash/isNumber'; // app\n\nimport { EditPolicyView } from './EditPolicy.view';\nimport { enqueueNotification, hideModal, selectRefDataCurrencies, selectRefDataStatusesPolicy, putPlacementEditPolicy } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditPolicy.propTypes = {\n  policy: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function EditPolicy(_ref) {\n  _s();\n\n  var _ref$policy = _ref.policy,\n      policy = _ref$policy === void 0 ? {} : _ref$policy,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var refDataCurrencies = useSelector(selectRefDataCurrencies);\n  var refDataStatusesPolicy = useSelector(selectRefDataStatusesPolicy);\n  var statusPolicyNtu = utils.referenceData.status.getIdByCode(refDataStatusesPolicy, constants.STATUS_POLICY_NTU);\n  useEffect(function () {\n    if (!refDataCurrencies || !refDataCurrencies.length > 0) {\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.generic.reload', 'error'));\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var fields = [{\n    name: 'id',\n    type: 'hidden',\n    value: policy.id\n  }, {\n    name: 'departmentId',\n    type: 'hidden',\n    value: policy.departmentId\n  }, {\n    name: 'businessTypeId',\n    type: 'hidden',\n    value: policy.businessTypeId\n  }, {\n    name: 'status',\n    type: 'select',\n    value: policy.statusId || '',\n    // we're hard coding a fake \"In Progress\" option here which doesn't exist in refData\n    // this will actually send the value NULL to the B/E in order to reset the status\n    options: [{\n      id: 'null',\n      code: utils.string.t('status.inprogress')\n    }, refDataStatusesPolicy.find(function (status) {\n      return status.id === statusPolicyNtu;\n    })],\n    optionKey: 'id',\n    optionLabel: 'code',\n    validation: Yup.string(),\n    label: utils.string.t('placement.form.status.label'),\n    muiComponentProps: {\n      'data-testid': 'status'\n    }\n  }, {\n    name: 'currency',\n    type: 'select',\n    value: utils.policy.getCurrency(policy, ''),\n    options: refDataCurrencies,\n    optionKey: 'code',\n    optionLabel: 'code',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    label: utils.string.t('placement.form.currency.label')\n  }, {\n    name: 'buydown',\n    type: 'checkbox',\n    value: false,\n    label: utils.string.t('placement.form.buydown.label')\n  }, {\n    name: 'amount',\n    type: 'number',\n    value: isNumber(policy.amount) ? policy.amount : '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('app.amount'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }, {\n    name: 'excess',\n    type: 'number',\n    value: isNumber(policy.excess) ? policy.excess : '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('app.excess'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    value: policy.notes || '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.notes.label'),\n    muiComponentProps: {\n      multiline: true,\n      minRows: 3,\n      maxRows: 6\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      return dispatch(putPlacementEditPolicy(values));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(EditPolicyView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 143,\n    columnNumber: 10\n  }, this);\n}\n\n_s(EditPolicy, \"jAZHowwjdhDm75Y4RxmZ/F2IsKo=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditPolicy/EditPolicy.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Yup","isNumber","EditPolicyView","enqueueNotification","hideModal","selectRefDataCurrencies","selectRefDataStatusesPolicy","putPlacementEditPolicy","utils","constants","EditPolicy","propTypes","policy","object","isRequired","handleClose","func","dispatch","refDataCurrencies","refDataStatusesPolicy","statusPolicyNtu","referenceData","status","getIdByCode","STATUS_POLICY_NTU","length","fields","name","type","value","id","departmentId","businessTypeId","statusId","options","code","string","t","find","optionKey","optionLabel","validation","label","muiComponentProps","getCurrency","required","amount","number","nullable","min","currency","transform","originalvalue","isType","Number","isNaN","autoComplete","excess","notes","max","multiline","minRows","maxRows","actions","handler","values"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport isNumber from 'lodash/isNumber';\r\n\r\n// app\r\nimport { EditPolicyView } from './EditPolicy.view';\r\nimport { enqueueNotification, hideModal, selectRefDataCurrencies, selectRefDataStatusesPolicy, putPlacementEditPolicy } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nEditPolicy.propTypes = {\r\n  policy: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function EditPolicy({ policy = {}, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const refDataCurrencies = useSelector(selectRefDataCurrencies);\r\n  const refDataStatusesPolicy = useSelector(selectRefDataStatusesPolicy);\r\n  const statusPolicyNtu = utils.referenceData.status.getIdByCode(refDataStatusesPolicy, constants.STATUS_POLICY_NTU);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!refDataCurrencies || !refDataCurrencies.length > 0) {\r\n        dispatch(hideModal());\r\n        dispatch(enqueueNotification('notification.generic.reload', 'error'));\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const fields = [\r\n    {\r\n      name: 'id',\r\n      type: 'hidden',\r\n      value: policy.id,\r\n    },\r\n    {\r\n      name: 'departmentId',\r\n      type: 'hidden',\r\n      value: policy.departmentId,\r\n    },\r\n    {\r\n      name: 'businessTypeId',\r\n      type: 'hidden',\r\n      value: policy.businessTypeId,\r\n    },\r\n    {\r\n      name: 'status',\r\n      type: 'select',\r\n      value: policy.statusId || '',\r\n      // we're hard coding a fake \"In Progress\" option here which doesn't exist in refData\r\n      // this will actually send the value NULL to the B/E in order to reset the status\r\n      options: [\r\n        { id: 'null', code: utils.string.t('status.inprogress') },\r\n        refDataStatusesPolicy.find((status) => status.id === statusPolicyNtu),\r\n      ],\r\n      optionKey: 'id',\r\n      optionLabel: 'code',\r\n      validation: Yup.string(),\r\n      label: utils.string.t('placement.form.status.label'),\r\n      muiComponentProps: {\r\n        'data-testid': 'status',\r\n      },\r\n    },\r\n    {\r\n      name: 'currency',\r\n      type: 'select',\r\n      value: utils.policy.getCurrency(policy, ''),\r\n      options: refDataCurrencies,\r\n      optionKey: 'code',\r\n      optionLabel: 'code',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      label: utils.string.t('placement.form.currency.label'),\r\n    },\r\n    {\r\n      name: 'buydown',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: utils.string.t('placement.form.buydown.label'),\r\n    },\r\n    {\r\n      name: 'amount',\r\n      type: 'number',\r\n      value: isNumber(policy.amount) ? policy.amount : '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('app.amount'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n    {\r\n      name: 'excess',\r\n      type: 'number',\r\n      value: isNumber(policy.excess) ? policy.excess : '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('app.excess'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      value: policy.notes || '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.notes.label'),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 3,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => dispatch(putPlacementEditPolicy(values)),\r\n    },\r\n  ];\r\n\r\n  return <EditPolicyView fields={fields} actions={actions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}