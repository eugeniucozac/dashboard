{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var emailSearch = function emailSearch(email) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/admin.actions.emailSearch'\n    };\n    dispatch(adminEmailSearchRequest(email));\n    return new Promise(function (resolve, reject) {\n      utils.api.get({\n        token: auth.accessToken,\n        endpoint: endpoint.edge,\n        path: \"api/user/emailId/\".concat(email)\n      }).then(function (response) {\n        return utils.api.handleResponse(response);\n      }).then(function (json) {\n        return utils.api.handleData(json);\n      }).then(function (data) {\n        dispatch(adminEmailSearchSuccess(data));\n        resolve(data);\n      }).catch(function (err) {\n        utils.api.handleError(err, defaultError);\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\n        dispatch(adminEmailSearchFailure(err));\n        reject(_objectSpread(_objectSpread({}, err), {}, {\n          file: 'stores/admin.actions.emailSearch',\n          message: 'API fetch error (admin.emailSearch)'\n        }));\n      });\n    });\n  };\n};\nexport var adminEmailSearchRequest = function adminEmailSearchRequest(payload) {\n  return {\n    type: 'ADMIN_EMAIL_SEARCH_REQUEST',\n    payload: payload\n  };\n};\nexport var adminEmailSearchSuccess = function adminEmailSearchSuccess(userData) {\n  return {\n    type: 'ADMIN_EMAIL_SEARCH_SUCCESS',\n    payload: userData\n  };\n};\nexport var adminEmailSearchFailure = function adminEmailSearchFailure(error) {\n  return {\n    type: 'ADMIN_EMAIL_SEARCH_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/admin/admin.actions.emailSearch.js"],"names":["authLogout","utils","emailSearch","email","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","adminEmailSearchRequest","Promise","resolve","reject","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","adminEmailSearchSuccess","catch","err","handleError","handleUnauthorized","adminEmailSearchFailure","message","payload","type","userData","error"],"mappings":";AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,KAAD;AAAA,SAAW,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5D;AAD4D,oBAEHA,QAAQ,EAFL;AAAA,QAE5CC,IAF4C,aAEpDC,IAFoD,CAE5CD,IAF4C;AAAA,QAElBE,QAFkB,aAEpCC,MAFoC,CAE1BC,IAF0B,CAElBF,QAFkB;;AAI5D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,uBAAuB,CAACV,KAAD,CAAxB,CAAR;AAEA,WAAO,IAAIW,OAAJ,CAAY,UAACC,OAAD,EAAUC,MAAV,EAAqB;AACtCf,MAAAA,KAAK,CAACgB,GAAN,CACGC,GADH,CACO;AACHC,QAAAA,KAAK,EAAEb,IAAI,CAACc,WADT;AAEHZ,QAAAA,QAAQ,EAAEA,QAAQ,CAACa,IAFhB;AAGHC,QAAAA,IAAI,6BAAsBnB,KAAtB;AAHD,OADP,EAMGoB,IANH,CAMQ,UAACC,QAAD;AAAA,eAAcvB,KAAK,CAACgB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,OANR,EAOGD,IAPH,CAOQ,UAACG,IAAD;AAAA,eAAUzB,KAAK,CAACgB,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,OAPR,EAQGH,IARH,CAQQ,UAACK,IAAD,EAAU;AACdxB,QAAAA,QAAQ,CAACyB,uBAAuB,CAACD,IAAD,CAAxB,CAAR;AACAb,QAAAA,OAAO,CAACa,IAAD,CAAP;AACD,OAXH,EAYGE,KAZH,CAYS,UAACC,GAAD,EAAS;AACd9B,QAAAA,KAAK,CAACgB,GAAN,CAAUe,WAAV,CAAsBD,GAAtB,EAA2BpB,YAA3B;AACAV,QAAAA,KAAK,CAACgB,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkC3B,QAAlC,EAA4CJ,UAA5C;AACAI,QAAAA,QAAQ,CAAC8B,uBAAuB,CAACH,GAAD,CAAxB,CAAR;AACAf,QAAAA,MAAM,iCACDe,GADC;AAEJnB,UAAAA,IAAI,EAAE,kCAFF;AAGJuB,UAAAA,OAAO,EAAE;AAHL,WAAN;AAKD,OArBH;AAsBD,KAvBM,CAAP;AAwBD,GAlC0B;AAAA,CAApB;AAoCP,OAAO,IAAMtB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACuB,OAAD,EAAa;AAClD,SAAO;AACLC,IAAAA,IAAI,EAAE,4BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMP,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACS,QAAD,EAAc;AACnD,SAAO;AACLD,IAAAA,IAAI,EAAE,4BADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMJ,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACK,KAAD,EAAW;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAE,4BADD;AAELD,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const emailSearch = (email) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/admin.actions.emailSearch',\r\n  };\r\n\r\n  dispatch(adminEmailSearchRequest(email));\r\n\r\n  return new Promise((resolve, reject) => {\r\n    utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.edge,\r\n        path: `api/user/emailId/${email}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleData(json))\r\n      .then((data) => {\r\n        dispatch(adminEmailSearchSuccess(data));\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, defaultError);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(adminEmailSearchFailure(err));\r\n        reject({\r\n          ...err,\r\n          file: 'stores/admin.actions.emailSearch',\r\n          message: 'API fetch error (admin.emailSearch)',\r\n        });\r\n      });\r\n  });\r\n};\r\n\r\nexport const adminEmailSearchRequest = (payload) => {\r\n  return {\r\n    type: 'ADMIN_EMAIL_SEARCH_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const adminEmailSearchSuccess = (userData) => {\r\n  return {\r\n    type: 'ADMIN_EMAIL_SEARCH_SUCCESS',\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const adminEmailSearchFailure = (error) => {\r\n  return {\r\n    type: 'ADMIN_EMAIL_SEARCH_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}