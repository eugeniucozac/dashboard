{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var downloadWhitespaceZip = function downloadWhitespaceZip(umrIds) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/whitespace.actions.downloadWhitespaceZip'\n    };\n    dispatch(downloadWhitespaceZipRequest(umrIds));\n    dispatch(addLoader('downloadWhitespaceZip'));\n\n    if (!utils.generic.isValidArray(umrIds, true)) {\n      dispatch(downloadWhitespaceZipFailure(defaultError));\n      dispatch(removeLoader('downloadWhitespaceZip'));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.whitespace,\n      path: \"api/v1/mrcContracts/pdf?umrId=\".concat(umrIds.join(','))\n    }).then(function (response) {\n      return utils.api.handleResponseBlob(response);\n    }).then(function (blob) {\n      dispatch(downloadWhitespaceZipSuccess());\n      return blob;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(downloadWhitespaceZipFailure(err));\n      return false;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('downloadWhitespaceZip'));\n    });\n  };\n};\nexport var downloadWhitespaceZipRequest = function downloadWhitespaceZipRequest(payload) {\n  return {\n    type: 'WHITESPACE_ZIP_DOWNLOAD_REQUEST',\n    payload: payload\n  };\n};\nexport var downloadWhitespaceZipSuccess = function downloadWhitespaceZipSuccess() {\n  return {\n    type: 'WHITESPACE_ZIP_DOWNLOAD_SUCCESS'\n  };\n};\nexport var downloadWhitespaceZipFailure = function downloadWhitespaceZipFailure(error) {\n  return {\n    type: 'WHITESPACE_ZIP_DOWNLOAD_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/whitespace/whitespace.actions.downloadZip.js"],"names":["authLogout","addLoader","removeLoader","utils","downloadWhitespaceZip","umrIds","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","downloadWhitespaceZipRequest","generic","isValidArray","downloadWhitespaceZipFailure","api","get","token","accessToken","whitespace","path","join","then","response","handleResponseBlob","blob","downloadWhitespaceZipSuccess","err","handleError","handleUnauthorized","payload","type","error"],"mappings":";AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACvE;AADuE,oBAEdA,QAAQ,EAFM;AAAA,QAEvDC,IAFuD,aAE/DC,IAF+D,CAEvDD,IAFuD;AAAA,QAE7BE,QAF6B,aAE/CC,MAF+C,CAErCC,IAFqC,CAE7BF,QAF6B;;AAIvE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,4BAA4B,CAACV,MAAD,CAA7B,CAAR;AACAC,IAAAA,QAAQ,CAACL,SAAS,CAAC,uBAAD,CAAV,CAAR;;AAEA,QAAI,CAACE,KAAK,CAACa,OAAN,CAAcC,YAAd,CAA2BZ,MAA3B,EAAmC,IAAnC,CAAL,EAA+C;AAC7CC,MAAAA,QAAQ,CAACY,4BAA4B,CAACL,YAAD,CAA7B,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAAC,uBAAD,CAAb,CAAR;AACD;;AAED,WAAOC,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEb,IAAI,CAACc,WADT;AAEHZ,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,UAFhB;AAGHC,MAAAA,IAAI,0CAAmCnB,MAAM,CAACoB,IAAP,CAAY,GAAZ,CAAnC;AAHD,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcxB,KAAK,CAACgB,GAAN,CAAUS,kBAAV,CAA6BD,QAA7B,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,4BAA4B,EAA7B,CAAR;AACA,aAAOD,IAAP;AACD,KAVI,WAWE,UAACE,GAAD,EAAS;AACd5B,MAAAA,KAAK,CAACgB,GAAN,CAAUa,WAAV,CAAsBD,GAAtB,EAA2BlB,YAA3B;AACAV,MAAAA,KAAK,CAACgB,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CN,UAA5C;AACAM,MAAAA,QAAQ,CAACY,4BAA4B,CAACa,GAAD,CAA7B,CAAR;AACA,aAAO,KAAP;AACD,KAhBI,aAiBI,YAAM;AACbzB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,uBAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GApCoC;AAAA,CAA9B;AAsCP,OAAO,IAAMa,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACmB,OAAD,EAAa;AACvD,SAAO;AACLC,IAAAA,IAAI,EAAE,iCADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMJ,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMjB,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACkB,KAAD,EAAW;AACrD,SAAO;AACLD,IAAAA,IAAI,EAAE,iCADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const downloadWhitespaceZip = (umrIds) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/whitespace.actions.downloadWhitespaceZip',\r\n  };\r\n\r\n  dispatch(downloadWhitespaceZipRequest(umrIds));\r\n  dispatch(addLoader('downloadWhitespaceZip'));\r\n\r\n  if (!utils.generic.isValidArray(umrIds, true)) {\r\n    dispatch(downloadWhitespaceZipFailure(defaultError));\r\n    dispatch(removeLoader('downloadWhitespaceZip'));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.whitespace,\r\n      path: `api/v1/mrcContracts/pdf?umrId=${umrIds.join(',')}`,\r\n    })\r\n    .then((response) => utils.api.handleResponseBlob(response))\r\n    .then((blob) => {\r\n      dispatch(downloadWhitespaceZipSuccess());\r\n      return blob;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(downloadWhitespaceZipFailure(err));\r\n      return false;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('downloadWhitespaceZip'));\r\n    });\r\n};\r\n\r\nexport const downloadWhitespaceZipRequest = (payload) => {\r\n  return {\r\n    type: 'WHITESPACE_ZIP_DOWNLOAD_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const downloadWhitespaceZipSuccess = () => {\r\n  return {\r\n    type: 'WHITESPACE_ZIP_DOWNLOAD_SUCCESS',\r\n  };\r\n};\r\n\r\nexport const downloadWhitespaceZipFailure = (error) => {\r\n  return {\r\n    type: 'WHITESPACE_ZIP_DOWNLOAD_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}