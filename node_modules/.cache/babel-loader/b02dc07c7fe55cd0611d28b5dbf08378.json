{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TreeView\\\\TreeView.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport { FilterBar, Tooltip, Layout } from 'components';\nimport * as utils from 'utils';\nimport styles from './TreeView.styles'; //mui\n\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { TreeView as TreeViewMui, TreeItem } from '@material-ui/lab';\nimport { Box, Typography, Divider, makeStyles } from \"@material-ui/core\";\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTreeView.propTypes = {\n  rootRef: PropTypes.string.isRequired,\n  treeData: PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    labelInfo: PropTypes.string,\n    children: PropTypes.array.isRequired\n  }),\n  handleAccordionClick: PropTypes.func.isRequired,\n  widgetTitle: PropTypes.string,\n  columns: PropTypes.arrayOf({\n    header: PropTypes.string,\n    flex: PropTypes.string\n  }),\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string.isRequired),\n  filteredData: PropTypes.arrayOf(PropTypes.object)\n};\nexport default function TreeView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var treeData = _ref.treeData,\n      rootRef = _ref.rootRef,\n      handleAccordionClick = _ref.handleAccordionClick,\n      widgetTitle = _ref.widgetTitle,\n      columns = _ref.columns,\n      defaultExpanded = _ref.defaultExpanded,\n      filteredData = _ref.filteredData;\n  var classes = makeStyles(styles, {\n    name: 'TreeView'\n  })();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n\n  var searchFields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: utils.string.t('dms.search.searchDocuments'),\n    defaultVaue: '',\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }];\n  var searchActions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {\n      var query = values.query;\n      setQuery(query);\n    }\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: function handler() {\n      setQuery(query);\n    }\n  }];\n\n  var renderTree = function renderTree(nodes) {\n    var _nodes$children;\n\n    return /*#__PURE__*/_jsxDEV(TreeItem, {\n      nodeId: nodes === null || nodes === void 0 ? void 0 : nodes.id,\n      label: /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.rootTree,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.labelCol,\n          children: /*#__PURE__*/_jsxDEV(Tooltip, {\n            title: 'Tooltip' //need to add tooltip data\n            ,\n            placement: 'top',\n            arrow: true,\n            children: nodes === null || nodes === void 0 ? void 0 : nodes.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classes.lebelInfoCol,\n          variant: \"caption\",\n          color: \"inherit\",\n          children: nodes === null || nodes === void 0 ? void 0 : nodes.labelInfo\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 9\n      }, _this),\n      children: utils.generic.isInvalidOrEmptyArray(nodes === null || nodes === void 0 ? void 0 : nodes.children) ? null : nodes === null || nodes === void 0 ? void 0 : (_nodes$children = nodes.children) === null || _nodes$children === void 0 ? void 0 : _nodes$children.map(function (node) {\n        return renderTree(node);\n      })\n    }, nodes === null || nodes === void 0 ? void 0 : nodes.id, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 5\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    sidebar: true,\n    padding: false,\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      pt: 2,\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body1\",\n          children: widgetTitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        pt: 2,\n        pl: 1,\n        pr: 1,\n        children: [/*#__PURE__*/_jsxDEV(FilterBar, {\n          id: \"userFilter\",\n          fields: searchFields,\n          actions: searchActions\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 100,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: columns.map(function (_ref2) {\n            var header = _ref2.header,\n                flex = _ref2.flex;\n            return /*#__PURE__*/_jsxDEV(Box, {\n              flex: flex,\n              pl: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                children: header\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 105,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 104,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 110,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TreeViewMui, {\n          \"aria-label\": \"rich object\",\n          defaultCollapseIcon: /*#__PURE__*/_jsxDEV(ExpandMoreIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 34\n          }, this),\n          defaultExpanded: defaultExpanded,\n          defaultExpandIcon: /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 32\n          }, this),\n          sx: {\n            height: 110,\n            flexGrow: 1,\n            maxWidth: 400,\n            overflowY: 'auto'\n          },\n          onNodeSelect: handleAccordionClick,\n          children: rootRef ? renderTree(treeData) : null\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TreeView, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = TreeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TreeView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TreeView/TreeView.js"],"names":["React","useState","PropTypes","FilterBar","Tooltip","Layout","utils","styles","ExpandMoreIcon","TreeView","TreeViewMui","TreeItem","Box","Typography","Divider","makeStyles","ChevronRightIcon","DescriptionIcon","propTypes","rootRef","string","isRequired","treeData","shape","id","label","labelInfo","children","array","handleAccordionClick","func","widgetTitle","columns","arrayOf","header","flex","defaultExpanded","filteredData","object","classes","name","query","setQuery","searchFields","type","placeholder","t","defaultVaue","muiComponentProps","autoComplete","searchActions","handler","values","renderTree","nodes","rootTree","labelCol","lebelInfoCol","generic","isInvalidOrEmptyArray","map","node","height","flexGrow","maxWidth","overflowY"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { FilterBar, Tooltip, Layout } from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './TreeView.styles';\r\n\r\n//mui\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\nimport { TreeView as TreeViewMui, TreeItem } from '@material-ui/lab';\r\nimport { Box, Typography, Divider, makeStyles } from \"@material-ui/core\";\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nTreeView.propTypes = {\r\n  rootRef: PropTypes.string.isRequired,\r\n  treeData: PropTypes.shape({\r\n    id: PropTypes.string.isRequired,\r\n    label: PropTypes.string.isRequired,\r\n    labelInfo: PropTypes.string,\r\n    children: PropTypes.array.isRequired\r\n  }),\r\n  handleAccordionClick: PropTypes.func.isRequired,\r\n  widgetTitle: PropTypes.string,\r\n  columns: PropTypes.arrayOf({ header: PropTypes.string, flex: PropTypes.string }),\r\n  defaultExpanded: PropTypes.arrayOf(PropTypes.string.isRequired),\r\n  filteredData: PropTypes.arrayOf(PropTypes.object)\r\n}\r\n\r\nexport default function TreeView({ treeData, rootRef, handleAccordionClick, widgetTitle, columns, defaultExpanded, filteredData }) {\r\n\r\n  const classes = makeStyles(styles, { name: 'TreeView' })();\r\n\r\n  const [query, setQuery] = useState('');\r\n\r\n  const searchFields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: utils.string.t('dms.search.searchDocuments'),\r\n      defaultVaue: '',\r\n      muiComponentProps: {\r\n        autoComplete: 'off'\r\n      },\r\n    },\r\n  ];\r\n  const searchActions = [\r\n    {\r\n      name: 'filter',\r\n      label: utils.string.t('app.searchLabel'),\r\n      handler: (values) => {\r\n        const { query } = values\r\n        setQuery(query);\r\n      },\r\n    },\r\n    {\r\n      name: 'reset',\r\n      label: utils.string.t('app.reset'),\r\n      handler: () => {\r\n        setQuery(query);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const renderTree = (nodes) => (\r\n    <TreeItem\r\n      key={nodes?.id}\r\n      nodeId={nodes?.id}\r\n      label={\r\n        <Box className={classes.rootTree}>\r\n          <Typography variant=\"body2\" className={classes.labelCol}>\r\n            <Tooltip\r\n              title={'Tooltip'} //need to add tooltip data\r\n              placement={'top'}\r\n              arrow\r\n            >\r\n              {nodes?.label}\r\n            </Tooltip>\r\n          </Typography>\r\n          <Typography className={classes.lebelInfoCol} variant=\"caption\" color=\"inherit\">\r\n              {nodes?.labelInfo}\r\n          </Typography>\r\n        </Box>\r\n      }\r\n    >\r\n      {utils.generic.isInvalidOrEmptyArray(nodes?.children) ? null : nodes?.children?.map((node) => renderTree(node))}\r\n    </TreeItem>\r\n  );\r\n\r\n  return (\r\n    <Layout sidebar padding={false}>\r\n      <Box pt={2} display=\"flex\" flexDirection=\"column\">\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <DescriptionIcon />\r\n          <Typography variant=\"body1\">{widgetTitle}</Typography>\r\n        </Box>\r\n        <Box pt={2} pl={1} pr={1}>\r\n          <FilterBar id=\"userFilter\" fields={searchFields} actions={searchActions} />\r\n          <Divider />\r\n          <Box display=\"flex\">\r\n            {columns.map(({ header, flex }) => {\r\n              return (\r\n                <Box flex={flex} pl={2}>\r\n                  <Typography variant=\"body2\">{header}</Typography>\r\n                </Box>\r\n              )\r\n            })}\r\n          </Box>\r\n          <Divider />\r\n          {/* will be uncommented once search bar issue resolves */}\r\n          {/* {(filteredData?.length !== treeData?.length) ? filteredData?.map(({ label, labelInfo }) => {\r\n            return (\r\n              <Box display=\"flex\">\r\n                <Box flex={0.8} pl={2}>\r\n                  <Typography variant=\"body2\">{label}</Typography>\r\n                </Box>\r\n                <Box flex={0.5} pl={2}>\r\n                  <Typography variant=\"body2\">{labelInfo}</Typography>\r\n                </Box>\r\n              </Box>\r\n            )\r\n          }) : null} */}\r\n          <TreeViewMui\r\n            aria-label=\"rich object\"\r\n            defaultCollapseIcon={<ExpandMoreIcon />}\r\n            defaultExpanded={defaultExpanded}\r\n            defaultExpandIcon={<ChevronRightIcon />}\r\n            sx={{ height: 110, flexGrow: 1, maxWidth: 400, overflowY: 'auto' }}\r\n            onNodeSelect={handleAccordionClick}\r\n          >\r\n            {rootRef ? renderTree(treeData) : null}\r\n          </TreeViewMui>\r\n        </Box>\r\n      </Box>\r\n    </Layout>\r\n  )\r\n}\r\n"]},"metadata":{},"sourceType":"module"}