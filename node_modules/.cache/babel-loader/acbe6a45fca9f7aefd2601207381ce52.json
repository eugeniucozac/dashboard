{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DetailsCard\\\\DetailsCard.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isString from 'lodash/isString'; // app\n\nimport styles from './DetailsCard.styles';\nimport { Link, Skeleton } from 'components'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDetailCardView.propTypes = {\n  title: PropTypes.node,\n  details: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isLoading: PropTypes.bool,\n  canCopyText: PropTypes.bool,\n  link: PropTypes.bool,\n  handleClick: PropTypes.func,\n  handleClipBoard: PropTypes.func,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n  })\n};\nexport function DetailCardView(_ref) {\n  var title = _ref.title,\n      details = _ref.details,\n      isLoading = _ref.isLoading,\n      link = _ref.link,\n      width = _ref.width,\n      canCopyText = _ref.canCopyText,\n      handleClick = _ref.handleClick,\n      handleClipBoard = _ref.handleClipBoard,\n      nestedClasses = _ref.nestedClasses;\n  var showHover = canCopyText && !isLoading;\n  var classes = makeStyles(styles, {\n    name: 'DetailsCard'\n  })({\n    width: width,\n    showHover: showHover\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(classes.root, nestedClasses.root),\n    children: /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(classes.container),\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames(classes.content),\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          className: classnames(classes.title, nestedClasses.title),\n          color: \"secondary\",\n          title: isString(title) ? title : null,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          className: classnames(classes.text, nestedClasses.text),\n          variant: \"body2\",\n          title: details ? details : null,\n          children: isLoading ? /*#__PURE__*/_jsxDEV(Skeleton, {\n            height: 40,\n            animation: \"wave\",\n            displayNumber: 1\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, this) : link === true ? /*#__PURE__*/_jsxDEV(Link, {\n            title: link,\n            text: 'link',\n            color: \"secondary\",\n            nestedClasses: {\n              link: classes.link\n            },\n            handleClick: handleClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 15\n          }, this) : details\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), details && canCopyText && !isLoading && /*#__PURE__*/_jsxDEV(FileCopyOutlined, {\n        className: classes.clipboard,\n        onClick: handleClipBoard\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 50\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = DetailCardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailCardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DetailsCard/DetailsCard.view.js"],"names":["React","PropTypes","classnames","isString","styles","Link","Skeleton","makeStyles","Typography","FileCopyOutlined","DetailCardView","propTypes","title","node","details","string","width","oneOfType","number","isLoading","bool","canCopyText","link","handleClick","func","handleClipBoard","nestedClasses","shape","root","text","showHover","classes","name","container","content","clipboard"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport isString from 'lodash/isString';\r\n\r\n// app\r\nimport styles from './DetailsCard.styles';\r\nimport { Link, Skeleton } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\nimport FileCopyOutlined from '@material-ui/icons/FileCopyOutlined';\r\n\r\nDetailCardView.propTypes = {\r\n  title: PropTypes.node,\r\n  details: PropTypes.string,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  isLoading: PropTypes.bool,\r\n  canCopyText: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  handleClick: PropTypes.func,\r\n  handleClipBoard: PropTypes.func,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n  }),\r\n};\r\n\r\nexport function DetailCardView({ title, details, isLoading, link, width, canCopyText, handleClick, handleClipBoard, nestedClasses }) {\r\n  const showHover = canCopyText && !isLoading;\r\n  const classes = makeStyles(styles, { name: 'DetailsCard' })({ width, showHover });\r\n\r\n  return (\r\n    <div className={classnames(classes.root, nestedClasses.root)}>\r\n      <div className={classnames(classes.container)}>\r\n        <div className={classnames(classes.content)}>\r\n          <Typography className={classnames(classes.title, nestedClasses.title)} color=\"secondary\" title={isString(title) ? title : null}>\r\n            {title}\r\n          </Typography>\r\n\r\n          <Typography className={classnames(classes.text, nestedClasses.text)} variant=\"body2\" title={details ? details : null}>\r\n            {isLoading ? (\r\n              <Skeleton height={40} animation=\"wave\" displayNumber={1} />\r\n            ) : link === true ? (\r\n              <Link title={link} text={'link'} color=\"secondary\" nestedClasses={{ link: classes.link }} handleClick={handleClick} />\r\n            ) : (\r\n              details\r\n            )}\r\n          </Typography>\r\n        </div>\r\n\r\n        {details && canCopyText && !isLoading && <FileCopyOutlined className={classes.clipboard} onClick={handleClipBoard} />}\r\n      </div>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}