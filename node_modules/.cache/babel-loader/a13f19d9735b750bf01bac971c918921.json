{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminClients\\\\ProductsAdminClients.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './ProductsAdminClients.styles';\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProductsAdminClientsView.propTypes = {\n  schema: PropTypes.object.isRequired,\n  countries: PropTypes.array.isRequired,\n  loading: PropTypes.bool.isRequired,\n  pagination: PropTypes.object.isRequired,\n  popoverActions: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    addClient: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ProductsAdminClientsView(_ref) {\n  var _this = this;\n\n  var schema = _ref.schema,\n      countries = _ref.countries,\n      loading = _ref.loading,\n      pagination = _ref.pagination,\n      popoverActions = _ref.popoverActions,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ProductsAdminClients'\n  })();\n  var hasRows = utils.generic.isValidArray(schema.items, true);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    position: \"relative\",\n    \"data-testid\": \"products-admin-clients\",\n    children: [loading && /*#__PURE__*/_jsxDEV(Loader, {\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 19\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: schema.fields\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          style: {\n            minHeight: 300\n          },\n          children: [hasRows && schema.items.map(function (item) {\n            var classesRow = _defineProperty({}, classes.rowNew, item.__new__);\n\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              className: classnames(classesRow),\n              children: [schema.fields && schema.fields.map(function (field) {\n                var addressFields = ['street', 'city', 'zipCode', 'county', 'state', 'country'];\n                var isAddressField = addressFields.includes(field.id);\n\n                var parseField = function parseField() {\n                  if (isAddressField) {\n                    if (field.id === 'country') {\n                      return utils.risk.getInsuredCountry(item.address, countries);\n                    }\n\n                    return get(item, \"[address.\".concat(field.id, \"]\"));\n                  }\n\n                  return get(item, \"[\".concat(field.id, \"]\"));\n                };\n\n                return /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, field.cellProps), {}, {\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    variant: \"body2\",\n                    className: classes.layers,\n                    children: parseField()\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 29\n                  }, _this)\n                }), \"\".concat(item.id, \"-\").concat(field.id), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 64,\n                  columnNumber: 27\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                \"data-testid\": \"edit-menu\",\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"products-admin-edit-table-popover\",\n                  data: {\n                    id: item.id\n                  },\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 72,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, _this)]\n            }, \"\".concat(item.id), true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 19\n            }, _this);\n          }), !hasRows && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: schema.items.length,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                height: 350 - 16\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 78,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 4,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            color: \"primary\",\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: 'products.admin.clients.add'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 21\n            }, this),\n            \"data-testid\": 'clients-create-button',\n            onClick: handlers.addClient(schema.fields)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 8,\n        children: schema.pagination && pagination.page !== undefined && /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handlers.changePage,\n          onChangeRowsPerPage: handlers.changeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ProductsAdminClientsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminClientsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminClients/ProductsAdminClients.view.js"],"names":["React","PropTypes","classnames","get","styles","Button","Loader","Overflow","Pagination","PopoverMenu","TableCell","TableHead","Translate","utils","Grid","makeStyles","Box","Table","TableBody","TableRow","Typography","AddIcon","ProductsAdminClientsView","propTypes","schema","object","isRequired","countries","array","loading","bool","pagination","popoverActions","handlers","shape","addClient","func","changePage","changeRowsPerPage","classes","name","hasRows","generic","isValidArray","items","fields","minHeight","map","item","classesRow","rowNew","__new__","field","addressFields","isAddressField","includes","id","parseField","risk","getInsuredCountry","address","cellProps","layers","length","page","undefined","rowsTotal","rowsPerPage"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,+BAAnB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,QAAzB,EAAmCC,UAAnC,EAA+CC,WAA/C,EAA4DC,SAA5D,EAAuEC,SAAvE,EAAkFC,SAAlF,QAAmG,YAAnG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,IAAT,EAAeC,UAAf,EAA2BC,GAA3B,EAAgCC,KAAhC,EAAuCC,SAAvC,EAAkDC,QAAlD,EAA4DC,UAA5D,QAA8E,mBAA9E;AACA,OAAOC,OAAP,MAAoB,wBAApB;;AAEAC,wBAAwB,CAACC,SAAzB,GAAqC;AACnCC,EAAAA,MAAM,EAAEvB,SAAS,CAACwB,MAAV,CAAiBC,UADU;AAEnCC,EAAAA,SAAS,EAAE1B,SAAS,CAAC2B,KAAV,CAAgBF,UAFQ;AAGnCG,EAAAA,OAAO,EAAE5B,SAAS,CAAC6B,IAAV,CAAeJ,UAHW;AAInCK,EAAAA,UAAU,EAAE9B,SAAS,CAACwB,MAAV,CAAiBC,UAJM;AAKnCM,EAAAA,cAAc,EAAE/B,SAAS,CAAC2B,KAAV,CAAgBF,UALG;AAMnCO,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,KAAV,CAAgB;AACxBC,IAAAA,SAAS,EAAElC,SAAS,CAACmC,IAAV,CAAeV,UADF;AAExBW,IAAAA,UAAU,EAAEpC,SAAS,CAACmC,IAAV,CAAeV,UAFH;AAGxBY,IAAAA,iBAAiB,EAAErC,SAAS,CAACmC,IAAV,CAAeV;AAHV,GAAhB,EAIPA;AAVgC,CAArC;AAaA,OAAO,SAASJ,wBAAT,OAAwG;AAAA;;AAAA,MAApEE,MAAoE,QAApEA,MAAoE;AAAA,MAA5DG,SAA4D,QAA5DA,SAA4D;AAAA,MAAjDE,OAAiD,QAAjDA,OAAiD;AAAA,MAAxCE,UAAwC,QAAxCA,UAAwC;AAAA,MAA5BC,cAA4B,QAA5BA,cAA4B;AAAA,MAAZC,QAAY,QAAZA,QAAY;AAC7G,MAAMM,OAAO,GAAGxB,UAAU,CAACX,MAAD,EAAS;AAAEoC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AAEA,MAAMC,OAAO,GAAG5B,KAAK,CAAC6B,OAAN,CAAcC,YAAd,CAA2BnB,MAAM,CAACoB,KAAlC,EAAyC,IAAzC,CAAhB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,UAAd;AAAyB,mBAAY,wBAArC;AAAA,eACGf,OAAO,iBAAI,QAAC,MAAD;AAAQ,MAAA,QAAQ;AAAhB;AAAA;AAAA;AAAA;AAAA,YADd,eAGE,QAAC,QAAD;AAAA,6BACE,QAAC,KAAD;AAAO,QAAA,IAAI,EAAC,OAAZ;AAAA,gCACE,QAAC,SAAD;AAAW,UAAA,OAAO,EAAEL,MAAM,CAACqB;AAA3B;AAAA;AAAA;AAAA;AAAA,gBADF,eAEE,QAAC,SAAD;AAAW,UAAA,KAAK,EAAE;AAAEC,YAAAA,SAAS,EAAE;AAAb,WAAlB;AAAA,qBACGL,OAAO,IACNjB,MAAM,CAACoB,KAAP,CAAaG,GAAb,CAAiB,UAACC,IAAD,EAAU;AACzB,gBAAMC,UAAU,uBAAMV,OAAO,CAACW,MAAd,EAAuBF,IAAI,CAACG,OAA5B,CAAhB;;AAEA,gCACE,QAAC,QAAD;AAA6B,cAAA,SAAS,EAAEjD,UAAU,CAAC+C,UAAD,CAAlD;AAAA,yBACGzB,MAAM,CAACqB,MAAP,IACCrB,MAAM,CAACqB,MAAP,CAAcE,GAAd,CAAkB,UAACK,KAAD,EAAW;AAC3B,oBAAMC,aAAa,GAAG,CAAC,QAAD,EAAW,MAAX,EAAmB,SAAnB,EAA8B,QAA9B,EAAwC,OAAxC,EAAiD,SAAjD,CAAtB;AACA,oBAAMC,cAAc,GAAGD,aAAa,CAACE,QAAd,CAAuBH,KAAK,CAACI,EAA7B,CAAvB;;AAEA,oBAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACvB,sBAAIH,cAAJ,EAAoB;AAClB,wBAAIF,KAAK,CAACI,EAAN,KAAa,SAAjB,EAA4B;AAC1B,6BAAO3C,KAAK,CAAC6C,IAAN,CAAWC,iBAAX,CAA6BX,IAAI,CAACY,OAAlC,EAA2CjC,SAA3C,CAAP;AACD;;AAED,2BAAOxB,GAAG,CAAC6C,IAAD,qBAAmBI,KAAK,CAACI,EAAzB,OAAV;AACD;;AAED,yBAAOrD,GAAG,CAAC6C,IAAD,aAAWI,KAAK,CAACI,EAAjB,OAAV;AACD,iBAVD;;AAWA,oCACE,QAAC,SAAD,kCAA8CJ,KAAK,CAACS,SAApD;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,OAAO,EAAC,OAApB;AAA4B,oBAAA,SAAS,EAAEtB,OAAO,CAACuB,MAA/C;AAAA,8BACGL,UAAU;AADb;AAAA;AAAA;AAAA;AAAA;AADF,8BAAmBT,IAAI,CAACQ,EAAxB,cAA8BJ,KAAK,CAACI,EAApC;AAAA;AAAA;AAAA;AAAA,yBADF;AAOD,eAtBD,CAFJ,eAyBE,QAAC,SAAD;AAAW,gBAAA,IAAI,MAAf;AAAgB,0CAAhB;AAAA,uCACE,QAAC,WAAD;AAAa,kBAAA,EAAE,EAAC,mCAAhB;AAAoD,kBAAA,IAAI,EAAE;AAAEA,oBAAAA,EAAE,EAAER,IAAI,CAACQ;AAAX,mBAA1D;AAA2E,kBAAA,KAAK,EAAExB;AAAlF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,uBAzBF;AAAA,yBAAkBgB,IAAI,CAACQ,EAAvB;AAAA;AAAA;AAAA;AAAA,qBADF;AA+BD,WAlCD,CAFJ,EAqCG,CAACf,OAAD,iBACC,QAAC,QAAD;AAAA,mCACE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAEjB,MAAM,CAACoB,KAAP,CAAamB,MAAjC;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,MAAM,EAAE,MAAM;AAAnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,gBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAHF,eAsDE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAE1C,OADR;AAEE,YAAA,KAAK,EAAC,SAFR;AAGE,YAAA,IAAI,EAAC,OAHP;AAIE,YAAA,IAAI,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE;AAAlB;AAAA;AAAA;AAAA;AAAA,oBAJR;AAKE,2BAAa,uBALf;AAME,YAAA,OAAO,EAAEY,QAAQ,CAACE,SAAT,CAAmBX,MAAM,CAACqB,MAA1B;AANX;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAaE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAmB,QAAA,EAAE,EAAE,CAAvB;AAAA,kBACGrB,MAAM,CAACO,UAAP,IAAqBA,UAAU,CAACiC,IAAX,KAAoBC,SAAzC,iBACC,QAAC,UAAD;AACE,UAAA,IAAI,EAAElC,UAAU,CAACiC,IADnB;AAEE,UAAA,KAAK,EAAEjC,UAAU,CAACmC,SAFpB;AAGE,UAAA,WAAW,EAAEnC,UAAU,CAACoC,WAH1B;AAIE,UAAA,YAAY,EAAElC,QAAQ,CAACI,UAJzB;AAKE,UAAA,mBAAmB,EAAEJ,QAAQ,CAACK;AALhC;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,cAbF;AAAA;AAAA;AAAA;AAAA;AAAA,YAtDF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAkFD;KAvFehB,wB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './ProductsAdminClients.styles';\r\nimport { Button, Loader, Overflow, Pagination, PopoverMenu, TableCell, TableHead, Translate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Grid, makeStyles, Box, Table, TableBody, TableRow, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nProductsAdminClientsView.propTypes = {\r\n  schema: PropTypes.object.isRequired,\r\n  countries: PropTypes.array.isRequired,\r\n  loading: PropTypes.bool.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    addClient: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ProductsAdminClientsView({ schema, countries, loading, pagination, popoverActions, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ProductsAdminClients' })();\r\n\r\n  const hasRows = utils.generic.isValidArray(schema.items, true);\r\n\r\n  return (\r\n    <Box position=\"relative\" data-testid=\"products-admin-clients\">\r\n      {loading && <Loader absolute />}\r\n\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={schema.fields} />\r\n          <TableBody style={{ minHeight: 300 }}>\r\n            {hasRows &&\r\n              schema.items.map((item) => {\r\n                const classesRow = { [classes.rowNew]: item.__new__ };\r\n\r\n                return (\r\n                  <TableRow key={`${item.id}`} className={classnames(classesRow)}>\r\n                    {schema.fields &&\r\n                      schema.fields.map((field) => {\r\n                        const addressFields = ['street', 'city', 'zipCode', 'county', 'state', 'country'];\r\n                        const isAddressField = addressFields.includes(field.id);\r\n\r\n                        const parseField = () => {\r\n                          if (isAddressField) {\r\n                            if (field.id === 'country') {\r\n                              return utils.risk.getInsuredCountry(item.address, countries);\r\n                            }\r\n\r\n                            return get(item, `[address.${field.id}]`);\r\n                          }\r\n\r\n                          return get(item, `[${field.id}]`);\r\n                        };\r\n                        return (\r\n                          <TableCell key={`${item.id}-${field.id}`} {...field.cellProps}>\r\n                            <Typography variant=\"body2\" className={classes.layers}>\r\n                              {parseField()}\r\n                            </Typography>\r\n                          </TableCell>\r\n                        );\r\n                      })}\r\n                    <TableCell menu data-testid={`edit-menu`}>\r\n                      <PopoverMenu id=\"products-admin-edit-table-popover\" data={{ id: item.id }} items={popoverActions} />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n            {!hasRows && (\r\n              <TableRow>\r\n                <TableCell colSpan={schema.items.length}>\r\n                  <Box height={350 - 16} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      <Grid container>\r\n        <Grid item xs={12} sm={4}>\r\n          <Box mt={2}>\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              size=\"small\"\r\n              text={<Translate label={'products.admin.clients.add'} />}\r\n              data-testid={'clients-create-button'}\r\n              onClick={handlers.addClient(schema.fields)}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n        <Grid item xs={12} sm={8}>\r\n          {schema.pagination && pagination.page !== undefined && (\r\n            <Pagination\r\n              page={pagination.page}\r\n              count={pagination.rowsTotal}\r\n              rowsPerPage={pagination.rowsPerPage}\r\n              onChangePage={handlers.changePage}\r\n              onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n            />\r\n          )}\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}