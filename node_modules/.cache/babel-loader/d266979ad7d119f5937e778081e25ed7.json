{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsAttachments\\\\ClaimsAttachments.view.js\";\nimport React, { Fragment } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './ClaimsAttachments.styles';\nimport { Accordion, Info } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsAttachmentsView.prototype = {\n  title: PropTypes.string.isRequired,\n  details: PropTypes.array.isRequired\n};\nexport function ClaimsAttachmentsView(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      details = _ref.details;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsAttachments'\n  })();\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.caseAccordion,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      title: title,\n      children: /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.details,\n        children: details.length ? details.map(function (attachment) {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Info, {\n              title: utils.string.t('claims.attachments.attachmentId'),\n              description: attachment.id,\n              nestedClasses: {\n                root: classnames(classes.description)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Info, {\n              title: utils.string.t('claims.attachments.type'),\n              description: attachment.type,\n              nestedClasses: {\n                root: classnames(classes.description)\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 19\n            }, _this)]\n          }, attachment.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 17\n          }, _this);\n        }) : utils.string.t('claims.attachments.noAttachmentFound')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 24,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 23,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 22,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsAttachmentsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsAttachmentsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsAttachments/ClaimsAttachments.view.js"],"names":["React","Fragment","classnames","PropTypes","styles","Accordion","Info","utils","makeStyles","ClaimsAttachmentsView","prototype","title","string","isRequired","details","array","classes","name","caseAccordion","length","map","attachment","t","id","root","description","type"],"mappings":";AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,4BAAnB;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,YAAhC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEAC,qBAAqB,CAACC,SAAtB,GAAkC;AAChCC,EAAAA,KAAK,EAAER,SAAS,CAACS,MAAV,CAAiBC,UADQ;AAEhCC,EAAAA,OAAO,EAAEX,SAAS,CAACY,KAAV,CAAgBF;AAFO,CAAlC;AAKA,OAAO,SAASJ,qBAAT,OAAmD;AAAA;;AAAA,MAAlBE,KAAkB,QAAlBA,KAAkB;AAAA,MAAXG,OAAW,QAAXA,OAAW;AACxD,MAAME,OAAO,GAAGR,UAAU,CAACJ,MAAD,EAAS;AAAEa,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AAEA,sBACE;AAAS,IAAA,SAAS,EAAED,OAAO,CAACE,aAA5B;AAAA,2BACE,QAAC,SAAD;AAAW,MAAA,KAAK,EAAEP,KAAlB;AAAA,6BACE;AAAS,QAAA,SAAS,EAAEK,OAAO,CAACF,OAA5B;AAAA,kBACGA,OAAO,CAACK,MAAR,GACGL,OAAO,CAACM,GAAR,CAAY,UAACC,UAAD;AAAA,8BACV,QAAC,QAAD;AAAA,oCACE,QAAC,IAAD;AACE,cAAA,KAAK,EAAEd,KAAK,CAACK,MAAN,CAAaU,CAAb,CAAe,iCAAf,CADT;AAEE,cAAA,WAAW,EAAED,UAAU,CAACE,EAF1B;AAGE,cAAA,aAAa,EAAE;AAAEC,gBAAAA,IAAI,EAAEtB,UAAU,CAACc,OAAO,CAACS,WAAT;AAAlB;AAHjB;AAAA;AAAA;AAAA;AAAA,qBADF,eAME,QAAC,IAAD;AACE,cAAA,KAAK,EAAElB,KAAK,CAACK,MAAN,CAAaU,CAAb,CAAe,yBAAf,CADT;AAEE,cAAA,WAAW,EAAED,UAAU,CAACK,IAF1B;AAGE,cAAA,aAAa,EAAE;AAAEF,gBAAAA,IAAI,EAAEtB,UAAU,CAACc,OAAO,CAACS,WAAT;AAAlB;AAHjB;AAAA;AAAA;AAAA;AAAA,qBANF;AAAA,aAAeJ,UAAU,CAACE,EAA1B;AAAA;AAAA;AAAA;AAAA,mBADU;AAAA,SAAZ,CADH,GAeGhB,KAAK,CAACK,MAAN,CAAaU,CAAb,CAAe,sCAAf;AAhBN;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAwBD;KA3Beb,qB","sourcesContent":["import React, { Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './ClaimsAttachments.styles';\r\nimport { Accordion, Info } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nClaimsAttachmentsView.prototype = {\r\n  title: PropTypes.string.isRequired,\r\n  details: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function ClaimsAttachmentsView({ title, details }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsAttachments' })();\r\n\r\n  return (\r\n    <section className={classes.caseAccordion}>\r\n      <Accordion title={title}>\r\n        <section className={classes.details}>\r\n          {details.length\r\n            ? details.map((attachment) => (\r\n                <Fragment key={attachment.id}>\r\n                  <Info\r\n                    title={utils.string.t('claims.attachments.attachmentId')}\r\n                    description={attachment.id}\r\n                    nestedClasses={{ root: classnames(classes.description) }}\r\n                  />\r\n                  <Info\r\n                    title={utils.string.t('claims.attachments.type')}\r\n                    description={attachment.type}\r\n                    nestedClasses={{ root: classnames(classes.description) }}\r\n                  />\r\n                </Fragment>\r\n              ))\r\n            : utils.string.t('claims.attachments.noAttachmentFound')}\r\n        </section>\r\n      </Accordion>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}