{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\Marketing\\\\Marketing.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './Marketing.styles';\nimport { Button, Restricted, SectionHeader, Translate } from 'components';\nimport { MarketingStructuring, MarketingMarkets, MarketingMudmap } from 'modules';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMarketingView.propTypes = {\n  placementId: PropTypes.string.isRequired,\n  isDev: PropTypes.bool,\n  sections: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    active: PropTypes.bool\n  })).isRequired,\n  handlers: PropTypes.shape({\n    addLayer: PropTypes.func.isRequired,\n    addMarket: PropTypes.func.isRequired,\n    selectSection: PropTypes.func.isRequired\n  }).isRequired\n};\nMarketingView.defaultProps = {\n  handlers: {}\n};\nexport function MarketingView(_ref) {\n  var _this = this;\n\n  var placementId = _ref.placementId,\n      isDev = _ref.isDev,\n      sections = _ref.sections,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'Marketing'\n  })();\n\n  var getActiveSection = function getActiveSection() {\n    var item = sections.find(function (s) {\n      return s.active;\n    }) || {};\n    return item.value;\n  };\n\n  var isMarkets = getActiveSection() === 'markets';\n  var isStructuring = getActiveSection() === 'structuring';\n  var isMudmap = getActiveSection() === 'mudmap';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      testid: \"placement-marketing-markets\",\n      content: /*#__PURE__*/_jsxDEV(ToggleButtonGroup, {\n        exclusive: true,\n        value: getActiveSection(),\n        onChange: handlers.selectSection,\n        \"aria-label\": \"marketing-sections\",\n        \"data-testid\": \"toggle-button-group-marketing\",\n        children: sections.map(function (section) {\n          return /*#__PURE__*/_jsxDEV(ToggleButton, {\n            value: section.value,\n            classes: {\n              root: classes.buttons\n            },\n            children: section.label\n          }, section.value, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 11\n      }, this),\n      children: /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER],\n        children: [isMarkets && /*#__PURE__*/_jsxDEV(Button, {\n          icon: AddIcon,\n          color: \"primary\",\n          variant: \"outlined\",\n          size: \"medium\",\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"placement.marketing.addMarket\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 21\n          }, this),\n          onClick: handlers.addMarket()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 13\n        }, this), isStructuring && /*#__PURE__*/_jsxDEV(Button, {\n          icon: AddIcon,\n          color: \"primary\",\n          variant: \"outlined\",\n          size: \"medium\",\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"placement.marketing.addLayer\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 86,\n            columnNumber: 21\n          }, this),\n          onClick: handlers.addLayer()\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 81,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 68,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), isMarkets && /*#__PURE__*/_jsxDEV(MarketingMarkets, {\n      placementId: placementId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 21\n    }, this), isStructuring && /*#__PURE__*/_jsxDEV(MarketingStructuring, {\n      placementId: placementId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 25\n    }, this), isMudmap && /*#__PURE__*/_jsxDEV(MarketingMudmap, {\n      placementId: placementId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 95,\n      columnNumber: 20\n    }, this)]\n  }, void 0, true);\n}\n_c = MarketingView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketingView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/Marketing/Marketing.view.js"],"names":["React","PropTypes","styles","Button","Restricted","SectionHeader","Translate","MarketingStructuring","MarketingMarkets","MarketingMudmap","constants","makeStyles","ToggleButtonGroup","ToggleButton","AddIcon","MarketingView","propTypes","placementId","string","isRequired","isDev","bool","sections","arrayOf","shape","value","label","active","handlers","addLayer","func","addMarket","selectSection","defaultProps","classes","name","getActiveSection","item","find","s","isMarkets","isStructuring","isMudmap","map","section","root","buttons","ROLE_BROKER"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './Marketing.styles';\r\nimport { Button, Restricted, SectionHeader, Translate } from 'components';\r\nimport { MarketingStructuring, MarketingMarkets, MarketingMudmap } from 'modules';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport { ToggleButtonGroup, ToggleButton } from '@material-ui/lab';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nMarketingView.propTypes = {\r\n  placementId: PropTypes.string.isRequired,\r\n  isDev: PropTypes.bool,\r\n  sections: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      active: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n  handlers: PropTypes.shape({\r\n    addLayer: PropTypes.func.isRequired,\r\n    addMarket: PropTypes.func.isRequired,\r\n    selectSection: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nMarketingView.defaultProps = {\r\n  handlers: {},\r\n};\r\n\r\nexport function MarketingView({ placementId, isDev, sections, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'Marketing' })();\r\n\r\n  const getActiveSection = () => {\r\n    const item = sections.find((s) => s.active) || {};\r\n\r\n    return item.value;\r\n  };\r\n\r\n  const isMarkets = getActiveSection() === 'markets';\r\n  const isStructuring = getActiveSection() === 'structuring';\r\n  const isMudmap = getActiveSection() === 'mudmap';\r\n  return (\r\n    <>\r\n      <SectionHeader\r\n        testid=\"placement-marketing-markets\"\r\n        content={\r\n          <ToggleButtonGroup\r\n            exclusive\r\n            value={getActiveSection()}\r\n            onChange={handlers.selectSection}\r\n            aria-label=\"marketing-sections\"\r\n            data-testid=\"toggle-button-group-marketing\"\r\n          >\r\n            {sections.map((section) => (\r\n              <ToggleButton key={section.value} value={section.value} classes={{ root: classes.buttons }}>\r\n                {section.label}\r\n              </ToggleButton>\r\n            ))}\r\n          </ToggleButtonGroup>\r\n        }\r\n      >\r\n        <Restricted include={[constants.ROLE_BROKER]}>\r\n          {isMarkets && (\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              text={<Translate label=\"placement.marketing.addMarket\" />}\r\n              onClick={handlers.addMarket()}\r\n            />\r\n          )}\r\n\r\n          {isStructuring && (\r\n            <Button\r\n              icon={AddIcon}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              text={<Translate label=\"placement.marketing.addLayer\" />}\r\n              onClick={handlers.addLayer()}\r\n            />\r\n          )}\r\n        </Restricted>\r\n      </SectionHeader>\r\n\r\n      {isMarkets && <MarketingMarkets placementId={placementId} />}\r\n      {isStructuring && <MarketingStructuring placementId={placementId} />}\r\n      {isMudmap && <MarketingMudmap placementId={placementId} />}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}