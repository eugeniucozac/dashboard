{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport config from 'config';\nvar initialState = {\n  emailIsAvailable: false,\n  userList: {\n    items: [],\n    itemsTotal: 0,\n    page: 1,\n    pageSize: config.ui.pagination[\"default\"],\n    pageTotal: 0,\n    sortBy: 'fullName',\n    sortType: 'lexical',\n    sortDirection: 'asc',\n    query: '',\n    filters: {}\n  },\n  refData: {\n    departments: [],\n    groups: [],\n    roles: [],\n    xbInstances: [],\n    organisations: []\n  }\n};\n\nvar administrationReducers = function administrationReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'ADMINISTRATION_USERS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, state.userList), {}, {\n          items: action.payload.content\n        }, action.payload.pagination), action.payload.sort), {}, {\n          filters: action.payload.filters\n        })\n      });\n\n    case 'ADMINISTRATION_USERS_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'ADMINISTRATION_REF_DATA_GROUPS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        refData: _objectSpread(_objectSpread({}, state.refData), {}, {\n          groups: action.payload\n        })\n      });\n\n    case 'ADMINISTRATION_REF_DATA_ROLES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        refData: _objectSpread(_objectSpread({}, state.refData), {}, {\n          roles: action.payload\n        })\n      });\n\n    case 'ADMINISTRATION_REF_DATA_DEPARTMENTS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        refData: _objectSpread(_objectSpread({}, state.refData), {}, {\n          departments: action.payload\n        })\n      });\n\n    case 'ADMINISTRATION_EMAIL_AVAILABLE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailIsAvailable: action.payload\n      });\n\n    case 'ADMINISTRATION_USER_CREATE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: _objectSpread(_objectSpread({}, state.userList), {}, {\n          items: [_objectSpread(_objectSpread({}, action.payload), {}, {\n            __new__: true\n          })].concat(_toConsumableArray(state.userList.items)),\n          itemsTotal: state.userList.itemsTotal + 1\n        })\n      });\n\n    case 'ADMINISTRATION_USER_EDIT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: _objectSpread(_objectSpread({}, state.userList), {}, {\n          items: state.userList.items.map(function (user) {\n            return user.id === action.payload.id ? _objectSpread(_objectSpread({}, user), action.payload) : user;\n          })\n        })\n      });\n\n    case 'ADMINISTRATION_USER_DELETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: _objectSpread(_objectSpread({}, state.userList), {}, {\n          items: state.userList.items.filter(function (user) {\n            return user.id.toString() !== action.payload.toString();\n          }),\n          itemsTotal: state.userList.itemsTotal - 1\n        })\n      });\n\n    case 'ADMINISTRATION_RESET_USERS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        userList: _objectSpread(_objectSpread({}, state.userList), {}, {\n          filters: {},\n          sortBy: 'fullName',\n          sortDirection: 'asc',\n          query: ''\n        })\n      });\n\n    case 'ADMINISTRATION_TEAMS_DATA_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        refData: _objectSpread(_objectSpread({}, state.refData), {}, {\n          organisations: action.payload.map(function (org) {\n            return _objectSpread({\n              id: org.organisationID,\n              name: org.organisationName\n            }, org);\n          })\n        })\n      });\n\n    case 'ADMINISTRATION_TEAMS_DATA_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default administrationReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/administration/administration.reducers.js"],"names":["config","initialState","emailIsAvailable","userList","items","itemsTotal","page","pageSize","ui","pagination","pageTotal","sortBy","sortType","sortDirection","query","filters","refData","departments","groups","roles","xbInstances","organisations","administrationReducers","state","action","type","payload","content","sort","error","__new__","map","user","id","filter","toString","org","organisationID","name","organisationName"],"mappings":"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","sourcesContent":["import config from 'config';\r\n\r\nconst initialState = {\r\n  emailIsAvailable: false,\r\n  userList: {\r\n    items: [],\r\n    itemsTotal: 0,\r\n    page: 1,\r\n    pageSize: config.ui.pagination.default,\r\n    pageTotal: 0,\r\n    sortBy: 'fullName',\r\n    sortType: 'lexical',\r\n    sortDirection: 'asc',\r\n    query: '',\r\n    filters: {},\r\n  },\r\n  refData: {\r\n    departments: [],\r\n    groups: [],\r\n    roles: [],\r\n    xbInstances: [],\r\n    organisations: [],\r\n  },\r\n};\r\n\r\nconst administrationReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'ADMINISTRATION_USERS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        userList: {\r\n          ...state.userList,\r\n          items: action.payload.content,\r\n          ...action.payload.pagination,\r\n          ...action.payload.sort,\r\n          filters: action.payload.filters,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_USERS_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'ADMINISTRATION_REF_DATA_GROUPS':\r\n      return {\r\n        ...state,\r\n        refData: {\r\n          ...state.refData,\r\n          groups: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_REF_DATA_ROLES':\r\n      return {\r\n        ...state,\r\n        refData: {\r\n          ...state.refData,\r\n          roles: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_REF_DATA_DEPARTMENTS':\r\n      return {\r\n        ...state,\r\n        refData: {\r\n          ...state.refData,\r\n          departments: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_EMAIL_AVAILABLE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        emailIsAvailable: action.payload,\r\n      };\r\n\r\n    case 'ADMINISTRATION_USER_CREATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        userList: {\r\n          ...state.userList,\r\n          items: [{ ...action.payload, __new__: true }, ...state.userList.items],\r\n          itemsTotal: state.userList.itemsTotal + 1,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_USER_EDIT_SUCCESS':\r\n      return {\r\n        ...state,\r\n        userList: {\r\n          ...state.userList,\r\n          items: state.userList.items.map((user) => (user.id === action.payload.id ? { ...user, ...action.payload } : user)),\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_USER_DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        userList: {\r\n          ...state.userList,\r\n          items: state.userList.items.filter((user) => user.id.toString() !== action.payload.toString()),\r\n          itemsTotal: state.userList.itemsTotal - 1,\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_RESET_USERS':\r\n      return {\r\n        ...state,\r\n        userList: {\r\n          ...state.userList,\r\n          filters: {},\r\n          sortBy: 'fullName',\r\n          sortDirection: 'asc',\r\n          query: '',\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_TEAMS_DATA_SUCCESS':\r\n      return {\r\n        ...state,\r\n        refData: {\r\n          ...state.refData,\r\n          organisations: action.payload.map((org) => ({\r\n            id: org.organisationID,\r\n            name: org.organisationName,\r\n            ...org,\r\n          })),\r\n        },\r\n      };\r\n\r\n    case 'ADMINISTRATION_TEAMS_DATA_FAILURE':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default administrationReducers;\r\n"]},"metadata":{},"sourceType":"module"}