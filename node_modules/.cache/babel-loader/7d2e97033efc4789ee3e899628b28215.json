{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\InlineEdit\\\\InlineEdit.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames'; // app\n\nimport styles from './InlineEdit.styles';\nimport { FormTextFormik } from 'components';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { withStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var InlineEdit = /*#__PURE__*/function (_PureComponent) {\n  _inherits(InlineEdit, _PureComponent);\n\n  var _super = _createSuper(InlineEdit);\n\n  function InlineEdit(props) {\n    var _this;\n\n    _classCallCheck(this, InlineEdit);\n\n    _this = _super.call(this, props);\n\n    _this.handleFocus = function (event) {\n      event.preventDefault();\n      event.stopPropagation();\n      var onClick = _this.props.onClick;\n      _this.inputRef.current && _this.inputRef.current.select();\n\n      if (utils.generic.isFunction(onClick)) {\n        onClick(_this.inputRef.current);\n      }\n    };\n\n    _this.handleClick = function (event) {\n      event.stopPropagation();\n    };\n\n    _this.handleClickAway = function (event) {\n      var _this$props = _this.props,\n          editing = _this$props.editing,\n          onClickAway = _this$props.onClickAway;\n\n      if (editing && utils.generic.isFunction(onClickAway)) {\n        onClickAway(event);\n        _this.inputRef.current && _this.inputRef.current.blur();\n      }\n    };\n\n    _this.handleKeyDown = function (event) {\n      var editing = _this.props.editing; // enter\n\n      if (editing && event.keyCode === constants.KEYCODE.Enter) {\n        event.preventDefault();\n\n        _this.handleClickAway();\n      }\n    };\n\n    _this.showTitle = function () {\n      var _this$props2 = _this.props,\n          title = _this$props2.title,\n          value = _this$props2.value;\n      return title && value && value.trim();\n    };\n\n    _this.inputRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(InlineEdit, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      document.addEventListener('keydown', this.handleKeyDown);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      document.removeEventListener('keydown', this.handleKeyDown);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classesRoot, _classesFormControl, _classesBase, _classesInput, _classesLabel;\n\n      var _this$props3 = this.props,\n          name = _this$props3.name,\n          type = _this$props3.type,\n          variant = _this$props3.variant,\n          value = _this$props3.value,\n          currency = _this$props3.currency,\n          error = _this$props3.error,\n          compact = _this$props3.compact,\n          editing = _this$props3.editing,\n          multiline = _this$props3.multiline,\n          muiComponentProps = _this$props3.muiComponentProps,\n          nestedClasses = _this$props3.nestedClasses,\n          classes = _this$props3.classes;\n      var labelValue = value ? value.toString().trim() : /*#__PURE__*/_jsxDEV(\"span\", {\n        children: \"\\xA0\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 56\n      }, this);\n      var isPercent = variant === 'percent';\n      var isNumber = variant === 'number';\n      var isCurrency = variant === 'currency';\n\n      if (isPercent) {\n        labelValue = utils.string.t('format.percent', {\n          value: {\n            number: value,\n            default: '-'\n          }\n        });\n      } else if (isNumber) {\n        labelValue = utils.string.t('format.number', {\n          value: {\n            number: value,\n            default: '-'\n          }\n        });\n      } else if (isCurrency) {\n        labelValue = utils.string.t('format.currency', {\n          value: {\n            number: value,\n            currency: currency,\n            default: '-'\n          }\n        });\n      }\n\n      var classesRoot = (_classesRoot = {}, _defineProperty(_classesRoot, classes.root, true), _defineProperty(_classesRoot, nestedClasses.root, Boolean(nestedClasses.root)), _classesRoot);\n      var classesFormControl = (_classesFormControl = {}, _defineProperty(_classesFormControl, classes.formControl, true), _defineProperty(_classesFormControl, classes.formControlEditing, editing), _classesFormControl);\n      var classesBase = (_classesBase = {}, _defineProperty(_classesBase, classes.base, true), _defineProperty(_classesBase, classes.baseCompact, compact), _defineProperty(_classesBase, classes.baseMultiline, multiline), _classesBase);\n      var classesInput = (_classesInput = {}, _defineProperty(_classesInput, classes.input, true), _defineProperty(_classesInput, classes.inputEditing, editing), _defineProperty(_classesInput, classes.inputCompact, compact), _defineProperty(_classesInput, classes.inputError, error), _defineProperty(_classesInput, classes.inputMultiline, multiline), _defineProperty(_classesInput, nestedClasses.input, Boolean(nestedClasses.input)), _classesInput);\n      var classesLabel = (_classesLabel = {}, _defineProperty(_classesLabel, classes.label, true), _defineProperty(_classesLabel, nestedClasses.label, Boolean(nestedClasses.label)), _defineProperty(_classesLabel, classes.labelCompact, compact), _defineProperty(_classesLabel, classes.labelNumber, editing && (isNumber || isCurrency && !currency)), _defineProperty(_classesLabel, classes.labelPercent, editing && isPercent), _defineProperty(_classesLabel, classes.labelCurrency, editing && isCurrency && currency), _defineProperty(_classesLabel, classes.labelHidden, editing), _defineProperty(_classesLabel, classes.labelMultiline, multiline), _classesLabel);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames(classesRoot),\n        title: this.showTitle() ? value : undefined,\n        children: [/*#__PURE__*/_jsxDEV(FormTextFormik, {\n          name: name,\n          type: type,\n          classes: {\n            root: classnames(classesFormControl)\n          },\n          muiComponentProps: _objectSpread(_objectSpread(_objectSpread({\n            autoComplete: 'off'\n          }, multiline && {\n            multiline: true\n          }), muiComponentProps), {}, {\n            inputRef: this.inputRef,\n            InputProps: _objectSpread(_objectSpread({}, muiComponentProps.InputProps), {}, {\n              className: classnames(classesBase),\n              onBlur: this.handleClickAway,\n              onFocus: this.handleFocus,\n              onClick: this.handleClick\n            }),\n            inputProps: _objectSpread(_objectSpread({}, muiComponentProps.inputProps), {}, {\n              className: classnames(classesInput)\n            })\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 153,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(classesLabel),\n          children: labelValue\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 178,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 152,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return InlineEdit;\n}(PureComponent);\nInlineEdit.propTypes = {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['text', 'textarea', 'number']).isRequired,\n  variant: PropTypes.oneOf(['text', 'percent', 'currency', 'number']),\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\n  currency: PropTypes.string,\n  error: PropTypes.bool,\n  editing: PropTypes.bool,\n  compact: PropTypes.bool,\n  title: PropTypes.bool,\n  multiline: PropTypes.bool,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    input: PropTypes.string,\n    label: PropTypes.string\n  }),\n  muiComponentProps: PropTypes.object,\n  onClick: PropTypes.func,\n  onClickAway: PropTypes.func\n};\nInlineEdit.defaultProps = {\n  type: 'text',\n  variant: 'text',\n  nestedClasses: {},\n  muiComponentProps: {}\n};\nexport default compose(withStyles(styles))(InlineEdit);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/InlineEdit/InlineEdit.js"],"names":["React","PureComponent","PropTypes","compose","classnames","styles","FormTextFormik","constants","utils","withStyles","InlineEdit","props","handleFocus","event","preventDefault","stopPropagation","onClick","inputRef","current","select","generic","isFunction","handleClick","handleClickAway","editing","onClickAway","blur","handleKeyDown","keyCode","KEYCODE","Enter","showTitle","title","value","trim","createRef","document","addEventListener","removeEventListener","name","type","variant","currency","error","compact","multiline","muiComponentProps","nestedClasses","classes","labelValue","toString","isPercent","isNumber","isCurrency","string","t","number","default","classesRoot","root","Boolean","classesFormControl","formControl","formControlEditing","classesBase","base","baseCompact","baseMultiline","classesInput","input","inputEditing","inputCompact","inputError","inputMultiline","classesLabel","label","labelCompact","labelNumber","labelPercent","labelCurrency","labelHidden","labelMultiline","undefined","autoComplete","InputProps","className","onBlur","onFocus","inputProps","propTypes","isRequired","oneOf","oneOfType","bool","shape","object","func","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './InlineEdit.styles';\r\nimport { FormTextFormik } from 'components';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nexport class InlineEdit extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['text', 'textarea', 'number']).isRequired,\r\n    variant: PropTypes.oneOf(['text', 'percent', 'currency', 'number']),\r\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]),\r\n    currency: PropTypes.string,\r\n    error: PropTypes.bool,\r\n    editing: PropTypes.bool,\r\n    compact: PropTypes.bool,\r\n    title: PropTypes.bool,\r\n    multiline: PropTypes.bool,\r\n    nestedClasses: PropTypes.shape({\r\n      root: PropTypes.string,\r\n      input: PropTypes.string,\r\n      label: PropTypes.string,\r\n    }),\r\n    muiComponentProps: PropTypes.object,\r\n    onClick: PropTypes.func,\r\n    onClickAway: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    type: 'text',\r\n    variant: 'text',\r\n    nestedClasses: {},\r\n    muiComponentProps: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.inputRef = React.createRef();\r\n  }\r\n\r\n  handleFocus = (event) => {\r\n    event.preventDefault();\r\n    event.stopPropagation();\r\n    const { onClick } = this.props;\r\n\r\n    this.inputRef.current && this.inputRef.current.select();\r\n\r\n    if (utils.generic.isFunction(onClick)) {\r\n      onClick(this.inputRef.current);\r\n    }\r\n  };\r\n\r\n  handleClick = (event) => {\r\n    event.stopPropagation();\r\n  };\r\n\r\n  handleClickAway = (event) => {\r\n    const { editing, onClickAway } = this.props;\r\n\r\n    if (editing && utils.generic.isFunction(onClickAway)) {\r\n      onClickAway(event);\r\n      this.inputRef.current && this.inputRef.current.blur();\r\n    }\r\n  };\r\n\r\n  handleKeyDown = (event) => {\r\n    const { editing } = this.props;\r\n\r\n    // enter\r\n    if (editing && event.keyCode === constants.KEYCODE.Enter) {\r\n      event.preventDefault();\r\n      this.handleClickAway();\r\n    }\r\n  };\r\n\r\n  componentDidMount() {\r\n    document.addEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    document.removeEventListener('keydown', this.handleKeyDown);\r\n  }\r\n\r\n  showTitle = () => {\r\n    const { title, value } = this.props;\r\n\r\n    return title && value && value.trim();\r\n  };\r\n\r\n  render() {\r\n    const { name, type, variant, value, currency, error, compact, editing, multiline, muiComponentProps, nestedClasses, classes } =\r\n      this.props;\r\n\r\n    let labelValue = value ? value.toString().trim() : <span>&nbsp;</span>;\r\n    const isPercent = variant === 'percent';\r\n    const isNumber = variant === 'number';\r\n    const isCurrency = variant === 'currency';\r\n\r\n    if (isPercent) {\r\n      labelValue = utils.string.t('format.percent', { value: { number: value, default: '-' } });\r\n    } else if (isNumber) {\r\n      labelValue = utils.string.t('format.number', { value: { number: value, default: '-' } });\r\n    } else if (isCurrency) {\r\n      labelValue = utils.string.t('format.currency', { value: { number: value, currency: currency, default: '-' } });\r\n    }\r\n\r\n    const classesRoot = {\r\n      [classes.root]: true,\r\n      [nestedClasses.root]: Boolean(nestedClasses.root),\r\n    };\r\n\r\n    const classesFormControl = {\r\n      [classes.formControl]: true,\r\n      [classes.formControlEditing]: editing,\r\n    };\r\n\r\n    const classesBase = {\r\n      [classes.base]: true,\r\n      [classes.baseCompact]: compact,\r\n      [classes.baseMultiline]: multiline,\r\n    };\r\n\r\n    const classesInput = {\r\n      [classes.input]: true,\r\n      [classes.inputEditing]: editing,\r\n      [classes.inputCompact]: compact,\r\n      [classes.inputError]: error,\r\n      [classes.inputMultiline]: multiline,\r\n      [nestedClasses.input]: Boolean(nestedClasses.input),\r\n    };\r\n\r\n    const classesLabel = {\r\n      [classes.label]: true,\r\n      [nestedClasses.label]: Boolean(nestedClasses.label),\r\n      [classes.labelCompact]: compact,\r\n      [classes.labelNumber]: editing && (isNumber || (isCurrency && !currency)),\r\n      [classes.labelPercent]: editing && isPercent,\r\n      [classes.labelCurrency]: editing && isCurrency && currency,\r\n      [classes.labelHidden]: editing,\r\n      [classes.labelMultiline]: multiline,\r\n    };\r\n\r\n    return (\r\n      <div className={classnames(classesRoot)} title={this.showTitle() ? value : undefined}>\r\n        <FormTextFormik\r\n          name={name}\r\n          type={type}\r\n          classes={{\r\n            root: classnames(classesFormControl),\r\n          }}\r\n          muiComponentProps={{\r\n            autoComplete: 'off',\r\n            ...(multiline && { multiline: true }),\r\n            ...muiComponentProps,\r\n            inputRef: this.inputRef,\r\n            InputProps: {\r\n              ...muiComponentProps.InputProps,\r\n              className: classnames(classesBase),\r\n              onBlur: this.handleClickAway,\r\n              onFocus: this.handleFocus,\r\n              onClick: this.handleClick,\r\n            },\r\n            inputProps: {\r\n              ...muiComponentProps.inputProps,\r\n              className: classnames(classesInput),\r\n            },\r\n          }}\r\n        />\r\n\r\n        <div className={classnames(classesLabel)}>{labelValue}</div>\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(InlineEdit);\r\n"]},"metadata":{},"sourceType":"module"}