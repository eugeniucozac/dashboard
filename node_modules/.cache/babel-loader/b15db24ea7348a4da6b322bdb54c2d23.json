{"ast":null,"code":"import \"core-js/modules/es.array.find\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddPlacementLayer\\\\AddPlacementLayer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { AddPlacementLayerView } from './AddPlacementLayer.view';\nimport { enqueueNotification, hideModal, selectRefDataBusinessTypes, selectRefDataCurrencies, postPlacementAddLayer } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport { CURRENCY_USD } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddPlacementLayer.propTypes = {\n  businessTypeId: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\n  handleClose: PropTypes.func.isRequired\n};\nexport default function AddPlacementLayer(_ref) {\n  _s();\n\n  var businessTypeId = _ref.businessTypeId,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var media = useMedia();\n  var refDataBusinessTypes = useSelector(selectRefDataBusinessTypes);\n  var refDataCurrencies = useSelector(selectRefDataCurrencies);\n  useEffect(function () {\n    if (!refDataBusinessTypes || !refDataBusinessTypes.length > 0) {\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.generic.reload', 'error'));\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  ); // if a businessTypeId is provided, it becomes the default option\n  // if businessTypeId is 0, the first of option is pre-selected by default\n  // anything else will leave the field empty by default\n\n  var defaultBusinessType;\n\n  if (businessTypeId) {\n    defaultBusinessType = refDataBusinessTypes.find(function (type) {\n      return type.id === businessTypeId;\n    });\n  } else if (businessTypeId === 0) {\n    defaultBusinessType = refDataBusinessTypes[0];\n  }\n\n  var defaultValue = defaultBusinessType ? [defaultBusinessType] : [];\n  var defaultCurrency = utils.referenceData.currencies.getByCode(refDataCurrencies, CURRENCY_USD);\n  var fields = [{\n    name: 'businessType',\n    type: 'autocomplete',\n    value: defaultValue,\n    options: refDataBusinessTypes,\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('placement.form.class.required'))).required(utils.string.t('placement.form.class.required')),\n    label: utils.string.t('placement.form.class.label'),\n    innerComponentProps: {\n      maxMenuHeight: media.mobile ? 340 : 270\n    },\n    muiComponentProps: {\n      autoFocus: !Boolean(defaultBusinessType),\n      'data-testid': 'business-class'\n    }\n  }, {\n    name: 'currency',\n    type: 'select',\n    value: defaultCurrency.code || '',\n    options: refDataCurrencies,\n    optionKey: 'code',\n    optionLabel: 'code',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    label: utils.string.t('placement.form.currency.label')\n  }, {\n    name: 'buydown',\n    type: 'checkbox',\n    value: false,\n    label: utils.string.t('placement.form.buydown.label')\n  }, {\n    name: 'amount',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('app.amount'),\n    muiComponentProps: {\n      autoComplete: 'off',\n      autoFocus: Boolean(defaultBusinessType)\n    }\n  }, {\n    name: 'excess',\n    type: 'number',\n    value: '',\n    validation: Yup.number().nullable().min(0).currency().transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    }),\n    label: utils.string.t('app.excess'),\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    value: '',\n    validation: Yup.string().max(280),\n    label: utils.string.t('placement.form.notes.label'),\n    muiComponentProps: {\n      multiline: true,\n      minRows: 3,\n      maxRows: 6\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler(values) {\n      return dispatch(postPlacementAddLayer(values));\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(AddPlacementLayerView, {\n    fields: fields,\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 144,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddPlacementLayer, \"rNK1MDhn+DtPFEvjIM71tWY3uus=\", false, function () {\n  return [useDispatch, useMedia, useSelector, useSelector];\n});\n\n_c = AddPlacementLayer;\nAddPlacementLayer.displayName = \"AddPlacementLayer\";\nAddPlacementLayer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddPlacementLayer\",\n  \"props\": {\n    \"businessTypeId\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"bool\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddPlacementLayer\\\\AddPlacementLayer.js\"] = {\n    name: \"AddPlacementLayer\",\n    docgenInfo: AddPlacementLayer.__docgenInfo,\n    path: \"src\\\\forms\\\\AddPlacementLayer\\\\AddPlacementLayer.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddPlacementLayer\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddPlacementLayer/AddPlacementLayer.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","Yup","AddPlacementLayerView","enqueueNotification","hideModal","selectRefDataBusinessTypes","selectRefDataCurrencies","postPlacementAddLayer","useMedia","utils","CURRENCY_USD","AddPlacementLayer","propTypes","businessTypeId","oneOfType","number","bool","handleClose","func","isRequired","dispatch","media","refDataBusinessTypes","refDataCurrencies","length","defaultBusinessType","find","type","id","defaultValue","defaultCurrency","referenceData","currencies","getByCode","fields","name","value","options","optionKey","optionLabel","validation","array","of","mixed","required","string","t","label","innerComponentProps","maxMenuHeight","mobile","muiComponentProps","autoFocus","Boolean","code","nullable","min","currency","transform","originalvalue","isType","Number","isNaN","autoComplete","max","multiline","minRows","maxRows","actions","handler","values"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAO,KAAKC,GAAZ,MAAqB,KAArB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,mBAAT,EAA8BC,SAA9B,EAAyCC,0BAAzC,EAAqEC,uBAArE,EAA8FC,qBAA9F,QAA2H,QAA3H;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,QAA7B;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;AAC5BC,EAAAA,cAAc,EAAEf,SAAS,CAACgB,SAAV,CAAoB,CAAChB,SAAS,CAACiB,MAAX,EAAmBjB,SAAS,CAACkB,IAA7B,CAApB,CADY;AAE5BC,EAAAA,WAAW,EAAEnB,SAAS,CAACoB,IAAV,CAAeC;AAFA,CAA9B;AAKA,eAAe,SAASR,iBAAT,OAA4D;AAAA;;AAAA,MAA/BE,cAA+B,QAA/BA,cAA+B;AAAA,MAAfI,WAAe,QAAfA,WAAe;AACzE,MAAMG,QAAQ,GAAGrB,WAAW,EAA5B;AACA,MAAMsB,KAAK,GAAGb,QAAQ,EAAtB;AACA,MAAMc,oBAAoB,GAAGtB,WAAW,CAACK,0BAAD,CAAxC;AACA,MAAMkB,iBAAiB,GAAGvB,WAAW,CAACM,uBAAD,CAArC;AAEAT,EAAAA,SAAS,CACP,YAAM;AACJ,QAAI,CAACyB,oBAAD,IAAyB,CAACA,oBAAoB,CAACE,MAAtB,GAA+B,CAA5D,EAA+D;AAC7DJ,MAAAA,QAAQ,CAAChB,SAAS,EAAV,CAAR;AACAgB,MAAAA,QAAQ,CAACjB,mBAAmB,CAAC,6BAAD,EAAgC,OAAhC,CAApB,CAAR;AACD;AACF,GANM,EAOP,EAPO,CAOJ;AAPI,GAAT,CANyE,CAgBzE;AACA;AACA;;AACA,MAAIsB,mBAAJ;;AAEA,MAAIZ,cAAJ,EAAoB;AAClBY,IAAAA,mBAAmB,GAAGH,oBAAoB,CAACI,IAArB,CAA0B,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,EAAL,KAAYf,cAAtB;AAAA,KAA1B,CAAtB;AACD,GAFD,MAEO,IAAIA,cAAc,KAAK,CAAvB,EAA0B;AAC/BY,IAAAA,mBAAmB,GAAGH,oBAAoB,CAAC,CAAD,CAA1C;AACD;;AAED,MAAMO,YAAY,GAAGJ,mBAAmB,GAAG,CAACA,mBAAD,CAAH,GAA2B,EAAnE;AACA,MAAMK,eAAe,GAAGrB,KAAK,CAACsB,aAAN,CAAoBC,UAApB,CAA+BC,SAA/B,CAAyCV,iBAAzC,EAA4Db,YAA5D,CAAxB;AAEA,MAAMwB,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,cADR;AAEER,IAAAA,IAAI,EAAE,cAFR;AAGES,IAAAA,KAAK,EAAEP,YAHT;AAIEQ,IAAAA,OAAO,EAAEf,oBAJX;AAKEgB,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,aANf;AAOEC,IAAAA,UAAU,EAAEvC,GAAG,CAACwC,KAAJ,GACTC,EADS,CACNzC,GAAG,CAAC0C,KAAJ,GAAYC,QAAZ,CAAqBnC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAArB,CADM,EAETF,QAFS,CAEAnC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAFA,CAPd;AAUEC,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,4BAAf,CAVT;AAWEE,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,aAAa,EAAE5B,KAAK,CAAC6B,MAAN,GAAe,GAAf,GAAqB;AADjB,KAXvB;AAcEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,SAAS,EAAE,CAACC,OAAO,CAAC5B,mBAAD,CADF;AAEjB,qBAAe;AAFE;AAdrB,GADa,EAoBb;AACEU,IAAAA,IAAI,EAAE,UADR;AAEER,IAAAA,IAAI,EAAE,QAFR;AAGES,IAAAA,KAAK,EAAEN,eAAe,CAACwB,IAAhB,IAAwB,EAHjC;AAIEjB,IAAAA,OAAO,EAAEd,iBAJX;AAKEe,IAAAA,SAAS,EAAE,MALb;AAMEC,IAAAA,WAAW,EAAE,MANf;AAOEC,IAAAA,UAAU,EAAEvC,GAAG,CAAC4C,MAAJ,GAAaD,QAAb,CAAsBnC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,qBAAf,CAAtB,CAPd;AAQEC,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,+BAAf;AART,GApBa,EA8Bb;AACEX,IAAAA,IAAI,EAAE,SADR;AAEER,IAAAA,IAAI,EAAE,UAFR;AAGES,IAAAA,KAAK,EAAE,KAHT;AAIEW,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,8BAAf;AAJT,GA9Ba,EAoCb;AACEX,IAAAA,IAAI,EAAE,QADR;AAEER,IAAAA,IAAI,EAAE,QAFR;AAGES,IAAAA,KAAK,EAAE,EAHT;AAIEI,IAAAA,UAAU,EAAEvC,GAAG,CAACc,MAAJ,GACTwC,QADS,GAETC,GAFS,CAEL,CAFK,EAGTC,QAHS,GAITC,SAJS,CAIC,UAAUtB,KAAV,EAAiBuB,aAAjB,EAAgC;AACzC,aAAO,KAAKC,MAAL,CAAYxB,KAAZ,IAAsByB,MAAM,CAACC,KAAP,CAAa1B,KAAb,IAAsB,IAAtB,GAA6BA,KAAnD,GAA4D,IAAnE;AACD,KANS,CAJd;AAWEW,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,YAAf,CAXT;AAYEK,IAAAA,iBAAiB,EAAE;AACjBY,MAAAA,YAAY,EAAE,KADG;AAEjBX,MAAAA,SAAS,EAAEC,OAAO,CAAC5B,mBAAD;AAFD;AAZrB,GApCa,EAqDb;AACEU,IAAAA,IAAI,EAAE,QADR;AAEER,IAAAA,IAAI,EAAE,QAFR;AAGES,IAAAA,KAAK,EAAE,EAHT;AAIEI,IAAAA,UAAU,EAAEvC,GAAG,CAACc,MAAJ,GACTwC,QADS,GAETC,GAFS,CAEL,CAFK,EAGTC,QAHS,GAITC,SAJS,CAIC,UAAUtB,KAAV,EAAiBuB,aAAjB,EAAgC;AACzC,aAAO,KAAKC,MAAL,CAAYxB,KAAZ,IAAsByB,MAAM,CAACC,KAAP,CAAa1B,KAAb,IAAsB,IAAtB,GAA6BA,KAAnD,GAA4D,IAAnE;AACD,KANS,CAJd;AAWEW,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,YAAf,CAXT;AAYEK,IAAAA,iBAAiB,EAAE;AACjBY,MAAAA,YAAY,EAAE;AADG;AAZrB,GArDa,EAqEb;AACE5B,IAAAA,IAAI,EAAE,OADR;AAEER,IAAAA,IAAI,EAAE,UAFR;AAGES,IAAAA,KAAK,EAAE,EAHT;AAIEI,IAAAA,UAAU,EAAEvC,GAAG,CAAC4C,MAAJ,GAAamB,GAAb,CAAiB,GAAjB,CAJd;AAKEjB,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,4BAAf,CALT;AAMEK,IAAAA,iBAAiB,EAAE;AACjBc,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,OAAO,EAAE,CAFQ;AAGjBC,MAAAA,OAAO,EAAE;AAHQ;AANrB,GArEa,CAAf;AAmFA,MAAMC,OAAO,GAAG,CACd;AACEjC,IAAAA,IAAI,EAAE,QADR;AAEEY,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEuB,IAAAA,OAAO,EAAEpD;AAHX,GADc,EAMd;AACEkB,IAAAA,IAAI,EAAE,QADR;AAEEY,IAAAA,KAAK,EAAEtC,KAAK,CAACoC,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEuB,IAAAA,OAAO,EAAE,iBAACC,MAAD;AAAA,aAAYlD,QAAQ,CAACb,qBAAqB,CAAC+D,MAAD,CAAtB,CAApB;AAAA;AAHX,GANc,CAAhB;AAaA,sBAAO,QAAC,qBAAD;AAAuB,IAAA,MAAM,EAAEpC,MAA/B;AAAuC,IAAA,OAAO,EAAEkC;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GA/HuBzD,iB;UACLZ,W,EACHS,Q,EACeR,W,EACHA,W;;;KAJJW,iB;AAAAA,iB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { AddPlacementLayerView } from './AddPlacementLayer.view';\r\nimport { enqueueNotification, hideModal, selectRefDataBusinessTypes, selectRefDataCurrencies, postPlacementAddLayer } from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { CURRENCY_USD } from 'consts';\r\n\r\nAddPlacementLayer.propTypes = {\r\n  businessTypeId: PropTypes.oneOfType([PropTypes.number, PropTypes.bool]),\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function AddPlacementLayer({ businessTypeId, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const media = useMedia();\r\n  const refDataBusinessTypes = useSelector(selectRefDataBusinessTypes);\r\n  const refDataCurrencies = useSelector(selectRefDataCurrencies);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!refDataBusinessTypes || !refDataBusinessTypes.length > 0) {\r\n        dispatch(hideModal());\r\n        dispatch(enqueueNotification('notification.generic.reload', 'error'));\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  // if a businessTypeId is provided, it becomes the default option\r\n  // if businessTypeId is 0, the first of option is pre-selected by default\r\n  // anything else will leave the field empty by default\r\n  let defaultBusinessType;\r\n\r\n  if (businessTypeId) {\r\n    defaultBusinessType = refDataBusinessTypes.find((type) => type.id === businessTypeId);\r\n  } else if (businessTypeId === 0) {\r\n    defaultBusinessType = refDataBusinessTypes[0];\r\n  }\r\n\r\n  const defaultValue = defaultBusinessType ? [defaultBusinessType] : [];\r\n  const defaultCurrency = utils.referenceData.currencies.getByCode(refDataCurrencies, CURRENCY_USD);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'businessType',\r\n      type: 'autocomplete',\r\n      value: defaultValue,\r\n      options: refDataBusinessTypes,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('placement.form.class.required')))\r\n        .required(utils.string.t('placement.form.class.required')),\r\n      label: utils.string.t('placement.form.class.label'),\r\n      innerComponentProps: {\r\n        maxMenuHeight: media.mobile ? 340 : 270,\r\n      },\r\n      muiComponentProps: {\r\n        autoFocus: !Boolean(defaultBusinessType),\r\n        'data-testid': 'business-class',\r\n      },\r\n    },\r\n    {\r\n      name: 'currency',\r\n      type: 'select',\r\n      value: defaultCurrency.code || '',\r\n      options: refDataCurrencies,\r\n      optionKey: 'code',\r\n      optionLabel: 'code',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      label: utils.string.t('placement.form.currency.label'),\r\n    },\r\n    {\r\n      name: 'buydown',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: utils.string.t('placement.form.buydown.label'),\r\n    },\r\n    {\r\n      name: 'amount',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('app.amount'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        autoFocus: Boolean(defaultBusinessType),\r\n      },\r\n    },\r\n    {\r\n      name: 'excess',\r\n      type: 'number',\r\n      value: '',\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .currency()\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n      label: utils.string.t('app.excess'),\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n      },\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      value: '',\r\n      validation: Yup.string().max(280),\r\n      label: utils.string.t('placement.form.notes.label'),\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 3,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: (values) => dispatch(postPlacementAddLayer(values)),\r\n    },\r\n  ];\r\n\r\n  return <AddPlacementLayerView fields={fields} actions={actions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}