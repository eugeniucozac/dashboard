{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTableRow.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { ClaimsTabTableRowView } from './ClaimsTabTableRow.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableRow.prototype = {\n  claim: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  columnProps: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    clickClaim: PropTypes.func.isRequired,\n    selectClaim: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableRow(_ref) {\n  var claim = _ref.claim,\n      handlers = _ref.handlers,\n      rest = _objectWithoutProperties(_ref, [\"claim\", \"handlers\"]);\n\n  var rowActions = [{\n    id: 'editClaim',\n    label: utils.string.t('claims.claimsTab.popOverButtonItems.editClaim')\n  }, {\n    id: 'changeItems',\n    label: utils.string.t('claims.claimsTab.popOverButtonItems.changeItems')\n  }, {\n    id: 'createRFI',\n    label: utils.string.t('claims.claimsTab.popOverButtonItems.createRFI')\n  }, {\n    id: 'createAdhocTask',\n    label: utils.string.t('claims.claimsTab.popOverButtonItems.createAdhocTask')\n  }];\n  return /*#__PURE__*/_jsxDEV(ClaimsTabTableRowView, _objectSpread(_objectSpread({\n    claim: claim,\n    handlers: {\n      selectClaim: handlers.selectClaim,\n      clickClaim: handlers.clickClaim\n    }\n  }, rest), {}, {\n    rowActions: rowActions\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTabTableRow;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableRow\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTableRow.js"],"names":["React","PropTypes","ClaimsTabTableRowView","utils","ClaimsTabTableRow","prototype","claim","object","isRequired","isSelected","bool","columnProps","handlers","shape","clickClaim","func","selectClaim","rest","rowActions","id","label","string","t"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,iBAAiB,CAACC,SAAlB,GAA8B;AAC5BC,EAAAA,KAAK,EAAEL,SAAS,CAACM,MAAV,CAAiBC,UADI;AAE5BC,EAAAA,UAAU,EAAER,SAAS,CAACS,IAFM;AAG5BC,EAAAA,WAAW,EAAEV,SAAS,CAACM,MAAV,CAAiBC,UAHF;AAI5BI,EAAAA,QAAQ,EAAEX,SAAS,CAACY,KAAV,CAAgB;AACxBC,IAAAA,UAAU,EAAEb,SAAS,CAACc,IAAV,CAAeP,UADH;AAExBQ,IAAAA,WAAW,EAAEf,SAAS,CAACc,IAAV,CAAeP;AAFJ,GAAhB,EAGPA;AAPyB,CAA9B;AAUA,OAAO,SAASJ,iBAAT,OAAyD;AAAA,MAA5BE,KAA4B,QAA5BA,KAA4B;AAAA,MAArBM,QAAqB,QAArBA,QAAqB;AAAA,MAARK,IAAQ;;AAE9D,MAAMC,UAAU,GAAG,CACjB;AACEC,IAAAA,EAAE,EAAE,WADN;AAEEC,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,+CAAf;AAFT,GADiB,EAKjB;AACEH,IAAAA,EAAE,EAAE,aADN;AAEEC,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,iDAAf;AAFT,GALiB,EASjB;AACEH,IAAAA,EAAE,EAAE,WADN;AAEEC,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,+CAAf;AAFT,GATiB,EAajB;AACEH,IAAAA,EAAE,EAAE,iBADN;AAEEC,IAAAA,KAAK,EAAEjB,KAAK,CAACkB,MAAN,CAAaC,CAAb,CAAe,qDAAf;AAFT,GAbiB,CAAnB;AAmBA,sBACE,QAAC,qBAAD;AACE,IAAA,KAAK,EAAEhB,KADT;AAEE,IAAA,QAAQ,EAAE;AACRU,MAAAA,WAAW,EAAEJ,QAAQ,CAACI,WADd;AAERF,MAAAA,UAAU,EAAEF,QAAQ,CAACE;AAFb;AAFZ,KAMMG,IANN;AAOE,IAAA,UAAU,EAAEC;AAPd;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;KAhCed,iB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { ClaimsTabTableRowView } from './ClaimsTabTableRow.view'\r\nimport * as utils from 'utils';\r\n\r\nClaimsTabTableRow.prototype = {\r\n  claim: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  columnProps: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    clickClaim: PropTypes.func.isRequired,\r\n    selectClaim: PropTypes.func.isRequired\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableRow({ claim, handlers, ...rest }) {\r\n\r\n  const rowActions = [\r\n    {\r\n      id: 'editClaim',\r\n      label: utils.string.t('claims.claimsTab.popOverButtonItems.editClaim')\r\n    },\r\n    {\r\n      id: 'changeItems',\r\n      label: utils.string.t('claims.claimsTab.popOverButtonItems.changeItems')\r\n    },\r\n    {\r\n      id: 'createRFI',\r\n      label: utils.string.t('claims.claimsTab.popOverButtonItems.createRFI')\r\n    },\r\n    {\r\n      id: 'createAdhocTask',\r\n      label: utils.string.t('claims.claimsTab.popOverButtonItems.createAdhocTask')\r\n    }\r\n  ];\r\n\r\n  return (\r\n    <ClaimsTabTableRowView\r\n      claim={claim}\r\n      handlers={{\r\n        selectClaim: handlers.selectClaim,\r\n        clickClaim: handlers.clickClaim,\r\n      }}\r\n      {...rest}\r\n      rowActions={rowActions}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}