{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TaskDetails.view.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport classnames from 'classnames';\nimport isEmpty from 'lodash/isEmpty'; //app\n\nimport { TasksAdditionInfo } from \"./TasksAdditionInfo\";\nimport * as utils from 'utils';\nimport { Layout, FormGrid, FormRadio, Button, FormLabel, TableToolbar, Accordion } from 'components';\nimport styles from './TaskDetails.styles';\nimport { RowDetails, TaskCheckList } from 'modules';\nimport config from 'config';\nimport { ADVICE_AND_SETTLEMENT } from 'consts';\nimport { selectSancCheckAssociatedTask } from 'stores';\nimport { SANCTIONS_CHECK_KEY } from 'consts'; //mui\n\nimport { makeStyles, Typography, Box, Grid, Card, CardHeader, CardContent } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskDetailsView.prototype = {\n  taskObj: PropTypes.object.isRequired,\n  fields: PropTypes.array.isRequired,\n  taskInfo: PropTypes.array.isRequired,\n  currencyPurchasedValue: PropTypes.string.isRequired,\n  sanctionsCheckState: PropTypes.string,\n  control: PropTypes.object,\n  currencyValue: PropTypes.string.isRequired,\n  handlers: PropTypes.shape({\n    setCurrencyValue: PropTypes.func.isRequired,\n    handleClose: PropTypes.func,\n    setStatusType: PropTypes.func\n  })\n};\nexport function TaskDetailsView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var taskObj = _ref.taskObj,\n      taskInfo = _ref.taskInfo,\n      fields = _ref.fields,\n      isTaskDetailsLoading = _ref.isTaskDetailsLoading,\n      currencyPurchasedValue = _ref.currencyPurchasedValue,\n      sanctionsCheckState = _ref.sanctionsCheckState,\n      control = _ref.control,\n      currencyValue = _ref.currencyValue,\n      handlers = _ref.handlers,\n      lossInfo = _ref.lossInfo,\n      policyInfo = _ref.policyInfo,\n      claimInfo = _ref.claimInfo,\n      underWritingInfo = _ref.underWritingInfo,\n      underWritingGroupColumns = _ref.underWritingGroupColumns;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isPurchasedCurrencyRequired = _useState2[0],\n      setIsPurchasedCurrencyRequired = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isCurrencyChanged = _useState4[0],\n      setIsCurrencyChanged = _useState4[1];\n\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n  var associatedTask = useSelector(selectSancCheckAssociatedTask);\n  var detailsHeader = (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === SANCTIONS_CHECK_KEY ? utils.string.t('claims.processing.taskDetailsAssociated') : utils.string.t('claims.processing.taskDetails');\n  var isTaskSanctionsCheck = (taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === SANCTIONS_CHECK_KEY;\n  useEffect(function () {\n    if (currencyPurchasedValue !== currencyValue) {\n      if ((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT) {\n        setIsCurrencyChanged(true);\n      }\n\n      handlers.setCurrencyValue(currencyPurchasedValue);\n    }\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setIsPurchasedCurrencyRequired((taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskDefKey) === ADVICE_AND_SETTLEMENT ? true : false);\n  }, [taskObj]);\n  useEffect(function () {\n    if (sanctionsCheckState) {\n      handlers.setApprovalStatus(sanctionsCheckState);\n    }\n  }, [sanctionsCheckState]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (isTaskSanctionsCheck && isEmpty(associatedTask)) return null;\n\n  var accordionTitle = function accordionTitle(title) {\n    return /*#__PURE__*/_jsxDEV(Typography, {\n      className: classes.title,\n      variant: \"body2\",\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      padding: true,\n      children: [/*#__PURE__*/_jsxDEV(Card, {\n        className: classes.root,\n        children: /*#__PURE__*/_jsxDEV(TasksAdditionInfo, {\n          lossInfo: lossInfo,\n          policyInfo: policyInfo,\n          claimInfo: claimInfo,\n          taskInfo: taskInfo,\n          underWritingInfo: underWritingInfo,\n          underWritingGroupColumns: underWritingGroupColumns,\n          handleStep: function handleStep() {},\n          taskObj: taskObj,\n          isTaskDetailsLoading: isTaskDetailsLoading\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 90,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 9\n      }, this), isPurchasedCurrencyRequired && /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased'), ' ', '? :', '   ', '*'),\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 115,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 114,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'), \": \"),\n            align: \"left\",\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 122,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'sanctionsCheckState')), {}, {\n            control: control\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 128,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 11\n      }, this), !isTaskSanctionsCheck && /*#__PURE__*/_jsxDEV(TaskCheckList, {\n        task: taskObj,\n        currencyPurchasedValue: currencyPurchasedValue,\n        isCurrencyChanged: isCurrencyChanged\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 11\n      }, this), isTaskSanctionsCheck && (taskObj === null || taskObj === void 0 ? void 0 : taskObj.status) !== utils.string.t('claims.claimRefTasks.status.completed') && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        className: classes.gridContainer,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.nextActionBtn,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: \"Close\",\n            type: \"submit\",\n            onClick: handlers.handleClose,\n            disabled: !sanctionsCheckState,\n            nestedClasses: {\n              btn: classnames(classes.cancel)\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 139,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 138,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 85,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskDetailsView, \"GE1Qq6kgnGhAUQdXoJpBbHpcvlY=\", false, function () {\n  return [useSelector];\n});\n\n_c = TaskDetailsView;\nTaskDetailsView.displayName = \"TaskDetailsView\";\nTaskDetailsView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskDetailsView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskDetails\\\\TaskDetails.view.js\"] = {\n    name: \"TaskDetailsView\",\n    docgenInfo: TaskDetailsView.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskDetails\\\\TaskDetails.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetailsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TaskDetails.view.js"],"names":["React","useState","useEffect","useSelector","PropTypes","moment","classnames","isEmpty","TasksAdditionInfo","utils","Layout","FormGrid","FormRadio","Button","FormLabel","TableToolbar","Accordion","styles","RowDetails","TaskCheckList","config","ADVICE_AND_SETTLEMENT","selectSancCheckAssociatedTask","SANCTIONS_CHECK_KEY","makeStyles","Typography","Box","Grid","Card","CardHeader","CardContent","TaskDetailsView","prototype","taskObj","object","isRequired","fields","array","taskInfo","currencyPurchasedValue","string","sanctionsCheckState","control","currencyValue","handlers","shape","setCurrencyValue","func","handleClose","setStatusType","isTaskDetailsLoading","lossInfo","policyInfo","claimInfo","underWritingInfo","underWritingGroupColumns","isPurchasedCurrencyRequired","setIsPurchasedCurrencyRequired","isCurrencyChanged","setIsCurrencyChanged","classes","name","associatedTask","detailsHeader","taskDefKey","t","isTaskSanctionsCheck","setApprovalStatus","accordionTitle","title","wrapper","root","tableToolbar","viewLabel","form","getFieldProps","status","gridContainer","nextActionBtn","btn","cancel"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport classnames from 'classnames';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n//app\r\nimport { TasksAdditionInfo } from \"./TasksAdditionInfo\"\r\nimport * as utils from 'utils';\r\nimport { Layout, FormGrid, FormRadio, Button, FormLabel, TableToolbar, Accordion } from 'components';\r\nimport styles from './TaskDetails.styles';\r\nimport { RowDetails, TaskCheckList } from 'modules';\r\nimport config from 'config';\r\nimport { ADVICE_AND_SETTLEMENT } from 'consts';\r\nimport { selectSancCheckAssociatedTask } from 'stores';\r\nimport { SANCTIONS_CHECK_KEY } from 'consts';\r\n\r\n\r\n//mui\r\nimport { makeStyles, Typography, Box, Grid, Card, CardHeader, CardContent } from '@material-ui/core';\r\n\r\nTaskDetailsView.prototype = {\r\n  taskObj: PropTypes.object.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  taskInfo: PropTypes.array.isRequired,\r\n  currencyPurchasedValue: PropTypes.string.isRequired,\r\n  sanctionsCheckState: PropTypes.string,\r\n  control: PropTypes.object,\r\n  currencyValue: PropTypes.string.isRequired,\r\n  handlers: PropTypes.shape({\r\n    setCurrencyValue: PropTypes.func.isRequired,\r\n    handleClose: PropTypes.func,\r\n    setStatusType: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function TaskDetailsView({ taskObj,taskInfo, fields,isTaskDetailsLoading, currencyPurchasedValue, sanctionsCheckState, control, currencyValue, handlers,\r\n  lossInfo,\r\n  policyInfo,\r\n  claimInfo,\r\n  underWritingInfo,\r\n  underWritingGroupColumns,\r\n\r\n}) {\r\n  const [isPurchasedCurrencyRequired, setIsPurchasedCurrencyRequired] = useState(false);\r\n  const [isCurrencyChanged, setIsCurrencyChanged] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n  const associatedTask = useSelector(selectSancCheckAssociatedTask);\r\n  const detailsHeader =\r\n    taskObj?.taskDefKey === SANCTIONS_CHECK_KEY\r\n      ? utils.string.t('claims.processing.taskDetailsAssociated')\r\n      : utils.string.t('claims.processing.taskDetails');\r\n\r\n  const isTaskSanctionsCheck = taskObj?.taskDefKey === SANCTIONS_CHECK_KEY;\r\n\r\n  useEffect(() => {\r\n    if (currencyPurchasedValue !== currencyValue) {\r\n      if (taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT) {\r\n        setIsCurrencyChanged(true);\r\n      }\r\n      handlers.setCurrencyValue(currencyPurchasedValue);\r\n    }\r\n  }, [currencyPurchasedValue]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setIsPurchasedCurrencyRequired(taskObj?.taskDefKey === ADVICE_AND_SETTLEMENT ? true : false);\r\n  }, [taskObj]);\r\n\r\n  useEffect(() => {\r\n    if (sanctionsCheckState) {\r\n      handlers.setApprovalStatus(sanctionsCheckState);\r\n    }\r\n  }, [sanctionsCheckState]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (isTaskSanctionsCheck && isEmpty(associatedTask)) return null;\r\n  const accordionTitle = (title) => {\r\n    return (\r\n      <Typography className={classes.title} variant=\"body2\">\r\n        {title}\r\n      </Typography>\r\n    );\r\n  };\r\n  return (\r\n    <div className={classes.wrapper}>\r\n      <Layout main padding>\r\n\r\n        <Card className={classes.root}>\r\n         \r\n            <TasksAdditionInfo\r\n              lossInfo={lossInfo}\r\n              policyInfo={policyInfo}\r\n              claimInfo={claimInfo}\r\n              taskInfo={taskInfo}\r\n              underWritingInfo={underWritingInfo}\r\n              underWritingGroupColumns={underWritingGroupColumns}\r\n              handleStep={() => { }}\r\n              taskObj={taskObj}\r\n              isTaskDetailsLoading={isTaskDetailsLoading}\r\n            />\r\n\r\n        \r\n\r\n        </Card>\r\n\r\n        {isPurchasedCurrencyRequired && (\r\n          <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.currencyWasPurchased')}${' '}${'? :'}${'   '}${'*'}`}\r\n                nestedClasses={{ root: classes.viewLabel }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'currencyPurchasedRadio', control)} />\r\n            </FormGrid>\r\n          </TableToolbar>\r\n        )}\r\n        {isTaskSanctionsCheck && (\r\n          <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n            <FormGrid>\r\n              <FormLabel\r\n                label={`${utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus')}: `}\r\n                align=\"left\"\r\n                nestedClasses={{ root: classes.viewLabel }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid>\r\n              <FormRadio {...utils.form.getFieldProps(fields, 'sanctionsCheckState')} control={control} />\r\n            </FormGrid>\r\n          </TableToolbar>\r\n        )}\r\n        {!isTaskSanctionsCheck && (\r\n          <TaskCheckList task={taskObj} currencyPurchasedValue={currencyPurchasedValue} isCurrencyChanged={isCurrencyChanged} />\r\n        )}\r\n        {isTaskSanctionsCheck && taskObj?.status !== utils.string.t('claims.claimRefTasks.status.completed') && (\r\n          <Grid container className={classes.gridContainer}>\r\n            <Grid item className={classes.nextActionBtn}>\r\n              <Button\r\n                text=\"Close\"\r\n                type=\"submit\"\r\n                onClick={handlers.handleClose}\r\n                disabled={!sanctionsCheckState}\r\n                nestedClasses={{ btn: classnames(classes.cancel) }}\r\n              />\r\n            </Grid>\r\n          </Grid>\r\n        )}\r\n      </Layout>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}