{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport config from 'config';\nimport * as utils from 'utils';\nvar initialState = {\n  list: {\n    items: [],\n    itemsTotal: 0,\n    page: 1,\n    pageSize: config.ui.pagination[\"default\"],\n    pageTotal: 0,\n    sortBy: 'id',\n    sortType: 'text',\n    sortDirection: 'desc',\n    status: ''\n  },\n  selected: {},\n  dirty: false\n};\n\nvar openingMemoReducers = function openingMemoReducers() {\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'OPENING_MEMO_GET_SUCCESS':\n    case 'OPENING_MEMO_PUT_SUCCESS':\n    case 'OPENING_MEMO_PATCH_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: _objectSpread({}, action.payload)\n      });\n\n    case 'OPENING_MEMO_POST_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: _objectSpread({}, action.payload),\n        postSuccess: true\n      });\n\n    case 'OPENING_MEMO_PLACEMENT_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread(_objectSpread({}, state.list), {}, {\n          items: action.payload.content\n        }, utils.api.pagination(action.payload))\n      });\n\n    case 'OPENING_MEMO_PLACEMENT_FILTER_STATUS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread(_objectSpread({}, state.list), {}, {\n          status: action.payload\n        })\n      });\n\n    case 'OPENING_MEMO_UPDATE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: _objectSpread(_objectSpread({}, state.selected), action.payload)\n      });\n\n    case 'RESET_OPENING_MEMO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: {},\n        dirty: false\n      });\n\n    case 'RESET_OPENING_MEMO_LIST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        list: _objectSpread({}, initialState.list)\n      });\n\n    case 'RESET_OPENING_MEMO_POST_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: {},\n        postSuccess: false\n      });\n\n    case 'UPDATE_DIRTY_OPENING_MEMO':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        dirty: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default openingMemoReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/openingMemo/openingMemo.reducers.js"],"names":["config","utils","initialState","list","items","itemsTotal","page","pageSize","ui","pagination","pageTotal","sortBy","sortType","sortDirection","status","selected","dirty","openingMemoReducers","state","action","type","payload","postSuccess","content","api"],"mappings":";AAAA,OAAOA,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,IAAI,EAAE;AACJC,IAAAA,KAAK,EAAE,EADH;AAEJC,IAAAA,UAAU,EAAE,CAFR;AAGJC,IAAAA,IAAI,EAAE,CAHF;AAIJC,IAAAA,QAAQ,EAAEP,MAAM,CAACQ,EAAP,CAAUC,UAAV,WAJN;AAKJC,IAAAA,SAAS,EAAE,CALP;AAMJC,IAAAA,MAAM,EAAE,IANJ;AAOJC,IAAAA,QAAQ,EAAE,MAPN;AAQJC,IAAAA,aAAa,EAAE,MARX;AASJC,IAAAA,MAAM,EAAE;AATJ,GADa;AAYnBC,EAAAA,QAAQ,EAAE,EAZS;AAanBC,EAAAA,KAAK,EAAE;AAbY,CAArB;;AAgBA,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAkC;AAAA,MAAjCC,KAAiC,uEAAzBhB,YAAyB;AAAA,MAAXiB,MAAW;;AAC5D,UAAQA,MAAM,CAACC,IAAf;AACE,SAAK,0BAAL;AACA,SAAK,0BAAL;AACA,SAAK,4BAAL;AACE,6CACKF,KADL;AAEEH,QAAAA,QAAQ,oBAAOI,MAAM,CAACE,OAAd;AAFV;;AAIF,SAAK,2BAAL;AACE,6CACKH,KADL;AAEEH,QAAAA,QAAQ,oBAAOI,MAAM,CAACE,OAAd,CAFV;AAGEC,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAK,yCAAL;AACE,6CACKJ,KADL;AAEEf,QAAAA,IAAI,kCACCe,KAAK,CAACf,IADP;AAEFC,UAAAA,KAAK,EAAEe,MAAM,CAACE,OAAP,CAAeE;AAFpB,WAGCtB,KAAK,CAACuB,GAAN,CAAUf,UAAV,CAAqBU,MAAM,CAACE,OAA5B,CAHD;AAFN;;AAQF,SAAK,sCAAL;AACE,6CACKH,KADL;AAEEf,QAAAA,IAAI,kCACCe,KAAK,CAACf,IADP;AAEFW,UAAAA,MAAM,EAAEK,MAAM,CAACE;AAFb;AAFN;;AAOF,SAAK,6BAAL;AACE,6CACKH,KADL;AAEEH,QAAAA,QAAQ,kCAAOG,KAAK,CAACH,QAAb,GAA0BI,MAAM,CAACE,OAAjC;AAFV;;AAIF,SAAK,oBAAL;AACE,6CACKH,KADL;AAEEH,QAAAA,QAAQ,EAAE,EAFZ;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAKF,SAAK,yBAAL;AACE,6CACKE,KADL;AAEEf,QAAAA,IAAI,oBAAOD,YAAY,CAACC,IAApB;AAFN;;AAIF,SAAK,iCAAL;AACE,6CACKe,KADL;AAEEH,QAAAA,QAAQ,EAAE,EAFZ;AAGEO,QAAAA,WAAW,EAAE;AAHf;;AAKF,SAAK,2BAAL;AACE,6CACKJ,KADL;AAEEF,QAAAA,KAAK,EAAEG,MAAM,CAACE;AAFhB;;AAIF;AACE,aAAOH,KAAP;AA3DJ;AA6DD,CA9DD;;AAgEA,eAAeD,mBAAf","sourcesContent":["import config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nconst initialState = {\r\n  list: {\r\n    items: [],\r\n    itemsTotal: 0,\r\n    page: 1,\r\n    pageSize: config.ui.pagination.default,\r\n    pageTotal: 0,\r\n    sortBy: 'id',\r\n    sortType: 'text',\r\n    sortDirection: 'desc',\r\n    status: '',\r\n  },\r\n  selected: {},\r\n  dirty: false,\r\n};\r\n\r\nconst openingMemoReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'OPENING_MEMO_GET_SUCCESS':\r\n    case 'OPENING_MEMO_PUT_SUCCESS':\r\n    case 'OPENING_MEMO_PATCH_SUCCESS':\r\n      return {\r\n        ...state,\r\n        selected: { ...action.payload },\r\n      };\r\n    case 'OPENING_MEMO_POST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        selected: { ...action.payload },\r\n        postSuccess: true,\r\n      };\r\n    case 'OPENING_MEMO_PLACEMENT_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          items: action.payload.content,\r\n          ...utils.api.pagination(action.payload),\r\n        },\r\n      };\r\n    case 'OPENING_MEMO_PLACEMENT_FILTER_STATUS':\r\n      return {\r\n        ...state,\r\n        list: {\r\n          ...state.list,\r\n          status: action.payload,\r\n        },\r\n      };\r\n    case 'OPENING_MEMO_UPDATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        selected: { ...state.selected, ...action.payload },\r\n      };\r\n    case 'RESET_OPENING_MEMO':\r\n      return {\r\n        ...state,\r\n        selected: {},\r\n        dirty: false,\r\n      };\r\n    case 'RESET_OPENING_MEMO_LIST':\r\n      return {\r\n        ...state,\r\n        list: { ...initialState.list },\r\n      };\r\n    case 'RESET_OPENING_MEMO_POST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        selected: {},\r\n        postSuccess: false,\r\n      };\r\n    case 'UPDATE_DIRTY_OPENING_MEMO':\r\n      return {\r\n        ...state,\r\n        dirty: action.payload,\r\n      };\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default openingMemoReducers;\r\n"]},"metadata":{},"sourceType":"module"}