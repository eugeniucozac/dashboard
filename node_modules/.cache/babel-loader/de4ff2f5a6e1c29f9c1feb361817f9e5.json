{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ComplexityManagementDivisionReset\\\\ComplexityManagementDivisionReset.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { ComplexityManagementDivisionResetView } from './ComplexityManagementDivisionReset.view';\nimport { hideModal, resetComplexityDivisionMatrix, resetComplexityDivisionMatrixByComplexId, resetComplexityDivisionMatrixByReferralId, selectComplexityManagementTab } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ComplexityManagementDivisionReset(props) {\n  _s();\n\n  var dispatch = useDispatch();\n  var currentTab = useSelector(selectComplexityManagementTab);\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.yes'),\n    handler: function handler() {\n      switch (currentTab) {\n        case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[2]:\n          dispatch(resetComplexityDivisionMatrix());\n          break;\n\n        case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]:\n          dispatch(resetComplexityDivisionMatrixByComplexId());\n          break;\n\n        case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]:\n          dispatch(resetComplexityDivisionMatrixByReferralId());\n          break;\n\n        default:\n          dispatch(resetComplexityDivisionMatrix());\n      }\n\n      dispatch(hideModal());\n    }\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.no'),\n    handler: function handler() {\n      dispatch(hideModal());\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(ComplexityManagementDivisionResetView, {\n    actions: actions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 50,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ComplexityManagementDivisionReset, \"/01q5emakTGawZQdFBALODV/SJM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ComplexityManagementDivisionReset;\nComplexityManagementDivisionReset.displayName = \"ComplexityManagementDivisionReset\";\nComplexityManagementDivisionReset.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ComplexityManagementDivisionReset\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\ComplexityManagementDivisionReset\\\\ComplexityManagementDivisionReset.js\"] = {\n    name: \"ComplexityManagementDivisionReset\",\n    docgenInfo: ComplexityManagementDivisionReset.__docgenInfo,\n    path: \"src\\\\forms\\\\ComplexityManagementDivisionReset\\\\ComplexityManagementDivisionReset.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ComplexityManagementDivisionReset\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ComplexityManagementDivisionReset/ComplexityManagementDivisionReset.js"],"names":["React","useDispatch","useSelector","ComplexityManagementDivisionResetView","hideModal","resetComplexityDivisionMatrix","resetComplexityDivisionMatrixByComplexId","resetComplexityDivisionMatrixByReferralId","selectComplexityManagementTab","utils","constants","ComplexityManagementDivisionReset","props","dispatch","currentTab","actions","name","label","string","t","handler","CLAIM_COMPLEXITY_MANAGEMENT_TABS"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,qCAAT,QAAsD,0CAAtD;AACA,SACEC,SADF,EAEEC,6BAFF,EAGEC,wCAHF,EAIEC,yCAJF,EAKEC,6BALF,QAMO,QANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;;AAEA,eAAe,SAASC,iCAAT,CAA2CC,KAA3C,EAAkD;AAAA;;AAC/D,MAAMC,QAAQ,GAAGZ,WAAW,EAA5B;AACA,MAAMa,UAAU,GAAGZ,WAAW,CAACM,6BAAD,CAA9B;AAEA,MAAMO,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,SAAf,CAFT;AAGEC,IAAAA,OAAO,EAAE,mBAAM;AACb,cAAQN,UAAR;AACE,aAAKJ,SAAS,CAACW,gCAAV,CAA2C,CAA3C,CAAL;AACER,UAAAA,QAAQ,CAACR,6BAA6B,EAA9B,CAAR;AACA;;AACF,aAAKK,SAAS,CAACW,gCAAV,CAA2C,CAA3C,CAAL;AACER,UAAAA,QAAQ,CAACP,wCAAwC,EAAzC,CAAR;AACA;;AACF,aAAKI,SAAS,CAACW,gCAAV,CAA2C,CAA3C,CAAL;AACER,UAAAA,QAAQ,CAACN,yCAAyC,EAA1C,CAAR;AACA;;AACF;AACEM,UAAAA,QAAQ,CAACR,6BAA6B,EAA9B,CAAR;AAXJ;;AAaAQ,MAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACD;AAlBH,GADc,EAqBd;AACEY,IAAAA,IAAI,EAAE,QADR;AAEEC,IAAAA,KAAK,EAAER,KAAK,CAACS,MAAN,CAAaC,CAAb,CAAe,QAAf,CAFT;AAGEC,IAAAA,OAAO,EAAE,mBAAM;AACbP,MAAAA,QAAQ,CAACT,SAAS,EAAV,CAAR;AACD;AALH,GArBc,CAAhB;AA8BA,sBAAO,QAAC,qCAAD;AAAuC,IAAA,OAAO,EAAEW;AAAhD;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAnCuBJ,iC;UACLV,W,EACEC,W;;;KAFGS,iC;AAAAA,iC","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { ComplexityManagementDivisionResetView } from './ComplexityManagementDivisionReset.view';\r\nimport {\r\n  hideModal,\r\n  resetComplexityDivisionMatrix,\r\n  resetComplexityDivisionMatrixByComplexId,\r\n  resetComplexityDivisionMatrixByReferralId,\r\n  selectComplexityManagementTab,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ComplexityManagementDivisionReset(props) {\r\n  const dispatch = useDispatch();\r\n  const currentTab = useSelector(selectComplexityManagementTab);\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.yes'),\r\n      handler: () => {\r\n        switch (currentTab) {\r\n          case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[2]:\r\n            dispatch(resetComplexityDivisionMatrix());\r\n            break;\r\n          case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3]:\r\n            dispatch(resetComplexityDivisionMatrixByComplexId());\r\n            break;\r\n          case constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[4]:\r\n            dispatch(resetComplexityDivisionMatrixByReferralId());\r\n            break;\r\n          default:\r\n            dispatch(resetComplexityDivisionMatrix());\r\n        }\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.no'),\r\n      handler: () => {\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <ComplexityManagementDivisionResetView actions={actions} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}