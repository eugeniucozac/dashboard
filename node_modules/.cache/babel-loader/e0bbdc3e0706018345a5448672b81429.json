{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditMarkets\\\\AddEditMarkets.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { addEditMarkets, getReferenceDataByType, selectFormattedAccountStatusList } from 'stores';\nimport { AddEditMarketsView } from './AddEditMarkets.view';\nimport * as utils from 'utils';\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function AddEditMarkets(_ref) {\n  _s();\n\n  var _this = this;\n\n  var handleClose = _ref.handleClose,\n      _ref$marketParent = _ref.marketParent,\n      marketParent = _ref$marketParent === void 0 ? {} : _ref$marketParent;\n  var dispatch = useDispatch();\n  var formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\n\n  var handleSubmit = function handleSubmit(_ref2) {\n    var markets = _ref2.markets;\n    return dispatch(addEditMarkets(_objectSpread(_objectSpread({}, marketParent), {}, {\n      markets: markets\n    })));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var filterMarketsInUse = function filterMarketsInUse(marketsInUse) {\n    return function (list) {\n      return list.filter(function (item) {\n        return !marketsInUse.includes(item.id);\n      });\n    };\n  };\n\n  var getOptions = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var _args = arguments;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getReferenceDataByType.apply(void 0, _args));\n\n            case 2:\n              return _context.abrupt(\"return\", _context.sent);\n\n            case 3:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getOptions() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var getMarketDetail = function getMarketDetail(_ref4) {\n    var gxbBeReference = _ref4.gxbBeReference,\n        address = _ref4.address;\n    var addressStr = utils.market.getAddress(address);\n    if (!gxbBeReference && !addressStr) return;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [gxbBeReference && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('placement.generic.gxbBeReference'), \": \", gxbBeReference, /*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, _this), addressStr && /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('app.address'), \": \", addressStr]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 49,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var renderOptions = /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, searchTerm) {\n      var orderBy, options, optionsWithStatus;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              orderBy = formattedAccountStatusList.map(function (status) {\n                return status.id;\n              });\n              _context2.next = 3;\n              return getOptions(type, searchTerm);\n\n            case 3:\n              options = _context2.sent;\n              optionsWithStatus = options.map(function (option) {\n                var marketDetail = getMarketDetail(option);\n                return _objectSpread(_objectSpread({}, option), {}, {\n                  label: /*#__PURE__*/_jsxDEV(OptionDetail, {\n                    label: option.edgeName,\n                    detail: marketDetail,\n                    children: /*#__PURE__*/_jsxDEV(Restricted, {\n                      include: [constants.ROLE_BROKER],\n                      children: /*#__PURE__*/_jsxDEV(StatusIcon, {\n                        translationPath: \"statusMarket\",\n                        list: formattedAccountStatusList,\n                        id: option.statusId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 67,\n                        columnNumber: 15\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 66,\n                      columnNumber: 13\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 65,\n                    columnNumber: 11\n                  }, _this)\n                });\n              });\n              return _context2.abrupt(\"return\", optionsWithStatus.sort(function (a, b) {\n                return orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId);\n              }));\n\n            case 6:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function renderOptions(_x, _x2) {\n      return _ref5.apply(this, arguments);\n    };\n  }();\n\n  var fields = [{\n    name: 'parent',\n    label: utils.string.t('admin.form.marketParent.label'),\n    type: 'text',\n    value: marketParent.name,\n    muiComponentProps: {\n      InputProps: {\n        readOnly: true,\n        disabled: true\n      }\n    }\n  }, {\n    name: 'markets',\n    type: 'autocomplete',\n    label: utils.string.t('admin.form.markets.label'),\n    options: [],\n    value: marketParent.markets || [],\n    optionKey: 'id',\n    optionLabel: 'label',\n    validation: Yup.array().of(Yup.mixed().required(utils.string.t('validation.required'))).required(utils.string.t('validation.required')),\n    innerComponentProps: {\n      isCreatable: true,\n      valueLabel: 'edgeName',\n      allowEmpty: true,\n      maxMenuHeight: 200,\n      async: {\n        handler: renderOptions,\n        type: 'market',\n        filter: filterMarketsInUse(marketParent.markets)\n      },\n      isMulti: true\n    },\n    muiComponentProps: {\n      autoFocus: true,\n      'data-testid': 'markets'\n    }\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(AddEditMarketsView, {\n    actions: actions,\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 133,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddEditMarkets, \"iK8Bi2ns65MdLxnFtDqEIZ7XCRI=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = AddEditMarkets;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditMarkets\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditMarkets/AddEditMarkets.js"],"names":["React","useDispatch","useSelector","Yup","addEditMarkets","getReferenceDataByType","selectFormattedAccountStatusList","AddEditMarketsView","utils","StatusIcon","Restricted","OptionDetail","constants","AddEditMarkets","handleClose","marketParent","dispatch","formattedAccountStatusList","handleSubmit","markets","handleCancel","generic","isFunction","filterMarketsInUse","marketsInUse","list","filter","item","includes","id","getOptions","getMarketDetail","gxbBeReference","address","addressStr","market","getAddress","string","t","renderOptions","type","searchTerm","orderBy","map","status","options","optionsWithStatus","option","marketDetail","label","edgeName","ROLE_BROKER","statusId","sort","a","b","indexOf","fields","name","value","muiComponentProps","InputProps","readOnly","disabled","optionKey","optionLabel","validation","array","of","mixed","required","innerComponentProps","isCreatable","valueLabel","allowEmpty","maxMenuHeight","async","handler","isMulti","autoFocus","actions"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { addEditMarkets, getReferenceDataByType, selectFormattedAccountStatusList } from 'stores';\r\nimport { AddEditMarketsView } from './AddEditMarkets.view';\r\nimport * as utils from 'utils';\r\nimport { StatusIcon, Restricted, OptionDetail } from 'components';\r\nimport * as constants from 'consts';\r\n\r\nexport default function AddEditMarkets({ handleClose, marketParent = {} }) {\r\n  const dispatch = useDispatch();\r\n  const formattedAccountStatusList = useSelector(selectFormattedAccountStatusList);\r\n\r\n  const handleSubmit = ({ markets }) => {\r\n    return dispatch(addEditMarkets({ ...marketParent, markets }));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const filterMarketsInUse = (marketsInUse) => (list) => {\r\n    return list.filter((item) => {\r\n      return !marketsInUse.includes(item.id);\r\n    });\r\n  };\r\n\r\n  const getOptions = async (...args) => {\r\n    return await dispatch(getReferenceDataByType(...args));\r\n  };\r\n\r\n  const getMarketDetail = ({ gxbBeReference, address }) => {\r\n    const addressStr = utils.market.getAddress(address);\r\n    if (!gxbBeReference && !addressStr) return;\r\n\r\n    return (\r\n      <>\r\n        {gxbBeReference && (\r\n          <span>\r\n            {utils.string.t('placement.generic.gxbBeReference')}: {gxbBeReference}\r\n            <br />\r\n          </span>\r\n        )}\r\n        {addressStr && (\r\n          <span>\r\n            {utils.string.t('app.address')}: {addressStr}\r\n          </span>\r\n        )}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const renderOptions = async (type, searchTerm) => {\r\n    const orderBy = formattedAccountStatusList.map((status) => status.id);\r\n    const options = await getOptions(type, searchTerm);\r\n    const optionsWithStatus = options.map((option) => {\r\n      const marketDetail = getMarketDetail(option);\r\n      return {\r\n        ...option,\r\n        label: (\r\n          <OptionDetail label={option.edgeName} detail={marketDetail}>\r\n            <Restricted include={[constants.ROLE_BROKER]}>\r\n              <StatusIcon translationPath=\"statusMarket\" list={formattedAccountStatusList} id={option.statusId} />\r\n            </Restricted>\r\n          </OptionDetail>\r\n        ),\r\n      };\r\n    });\r\n\r\n    return optionsWithStatus.sort((a, b) => orderBy.indexOf(a.statusId) - orderBy.indexOf(b.statusId));\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'parent',\r\n      label: utils.string.t('admin.form.marketParent.label'),\r\n      type: 'text',\r\n      value: marketParent.name,\r\n      muiComponentProps: {\r\n        InputProps: {\r\n          readOnly: true,\r\n          disabled: true,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'markets',\r\n      type: 'autocomplete',\r\n      label: utils.string.t('admin.form.markets.label'),\r\n      options: [],\r\n      value: marketParent.markets || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      validation: Yup.array()\r\n        .of(Yup.mixed().required(utils.string.t('validation.required')))\r\n        .required(utils.string.t('validation.required')),\r\n      innerComponentProps: {\r\n        isCreatable: true,\r\n        valueLabel: 'edgeName',\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n        async: {\r\n          handler: renderOptions,\r\n          type: 'market',\r\n          filter: filterMarketsInUse(marketParent.markets),\r\n        },\r\n        isMulti: true,\r\n      },\r\n      muiComponentProps: {\r\n        autoFocus: true,\r\n        'data-testid': 'markets',\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <AddEditMarketsView actions={actions} fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}