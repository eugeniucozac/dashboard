{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RfiQueryForm\\\\RfiQueryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport * as utils from 'utils';\nimport { RfiQueryFormView } from './RfiQueryForm.view';\nimport { Loader } from 'components';\nimport config from 'config';\nimport { CREATE_RFI_FORM, TASK_TAB_COMPLETED_STATUS } from 'consts';\nimport { getUsersByOrg, selectClaimsAssignedToUsers, postSendRFI, postCloseRFI, showModal, selectUserEmail, resetClaimsAssignedToUsers, setDmsTaskContextType, selectDmsClientSideUploadFiles, postDmsDocuments, resetDmsClientSideUploadedDocuments, removeDmsClientSideUploadedDocuments, linkMultipleDmsDocuments, resetDmsClientSideLinkedDocuments } from 'stores';\nimport * as constants from 'consts'; // mui\n\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RfiQueryForm(props) {\n  _s();\n\n  var _useSelector, _rfiTask$requestedBy3;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var assignedToUsers = ((_useSelector = useSelector(selectClaimsAssignedToUsers)) === null || _useSelector === void 0 ? void 0 : _useSelector.items) || null;\n  var userEmail = useSelector(selectUserEmail);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDataReady = _useState4[0],\n      setIsDataReady = _useState4[1];\n\n  var clientUploadedFiles = useSelector(selectDmsClientSideUploadFiles);\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isUploading = _useState6[0],\n      setIsUploading = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isLinking = _useState8[0],\n      setIsLinking = _useState8[1];\n\n  var documentNameList = clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.documentNameList;\n  var rfiTask = props.rfiTask;\n\n  var defaultAssignedUser = function defaultAssignedUser() {\n    var _rfiTask$requestedBy;\n\n    return (userEmail === null || userEmail === void 0 ? void 0 : userEmail.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy = rfiTask.requestedBy) === null || _rfiTask$requestedBy === void 0 ? void 0 : _rfiTask$requestedBy.toLowerCase()) ? assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (_ref) {\n      var _rfiTask$rfiSentTo;\n\n      var email = _ref.email;\n      return (email === null || email === void 0 ? void 0 : email.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$rfiSentTo = rfiTask.rfiSentTo) === null || _rfiTask$rfiSentTo === void 0 ? void 0 : _rfiTask$rfiSentTo.toLowerCase());\n    }) : utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (_ref2) {\n      var _rfiTask$requestedBy2;\n\n      var email = _ref2.email;\n      return (email === null || email === void 0 ? void 0 : email.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy2 = rfiTask.requestedBy) === null || _rfiTask$requestedBy2 === void 0 ? void 0 : _rfiTask$requestedBy2.toLowerCase());\n    }) : null;\n  };\n\n  var fields = [{\n    name: 'sendTo',\n    type: 'autocompletemui',\n    value: defaultAssignedUser(),\n    options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    muiComponentProps: {\n      disabled: (rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.status) === TASK_TAB_COMPLETED_STATUS\n    },\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }, {\n    name: 'description',\n    type: 'textarea',\n    hint: utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', {\n      char: 1000\n    }),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 1000\n      },\n      multiline: true,\n      rows: 3,\n      rowsMax: 3,\n      'data-testid': 'details'\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(1000, utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', {\n      char: 1000\n    }))\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.close'),\n    disabled: userEmail.toLowerCase() !== (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy3 = rfiTask.requestedBy) === null || _rfiTask$requestedBy3 === void 0 ? void 0 : _rfiTask$requestedBy3.toLowerCase()),\n    handler: function handler() {\n      handleCloseRFI();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.reply'),\n    handler: function handler(values) {\n      handleRFISend(values);\n    }\n  }];\n\n  var handleRFISend = function handleRFISend(values) {\n    if (values) {\n      var _props$selectedQueryC;\n\n      var sendToObj = assignedToUsers.find(function (user) {\n        var _values$sendTo;\n\n        return user.email === (values === null || values === void 0 ? void 0 : (_values$sendTo = values.sendTo) === null || _values$sendTo === void 0 ? void 0 : _values$sendTo.email);\n      });\n      var rfiSendData = {\n        assignedTo: sendToObj === null || sendToObj === void 0 ? void 0 : sendToObj.email,\n        bpmTaskID: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId,\n        caseIncidentID: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.caseIncidentID,\n        notes: values === null || values === void 0 ? void 0 : values.description,\n        team: sendToObj === null || sendToObj === void 0 ? void 0 : sendToObj.organisationName,\n        queryCodeDescription: (props === null || props === void 0 ? void 0 : (_props$selectedQueryC = props.selectedQueryCode) === null || _props$selectedQueryC === void 0 ? void 0 : _props$selectedQueryC.queryCodeDescription) || ''\n      };\n      dispatch(postSendRFI(rfiSendData)).then(function (data) {\n        if (data.status === constants.API_RESPONSE_OK) {\n          setValue('sendTo', null);\n          setValue('description', '');\n          var _data$data = data.data,\n              caseIncidentID = _data$data.caseIncidentID,\n              caseIncidentNotesID = _data$data.caseIncidentNotesID;\n\n          if (caseIncidentID && caseIncidentNotesID) {\n            dispatch(setDmsTaskContextType({\n              caseIncidentID: caseIncidentID,\n              caseIncidentNotesID: caseIncidentNotesID\n            }));\n\n            var uploadedFileDetails = _objectSpread({}, clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.uploadFileDetails);\n\n            var documentTypeKey = uploadedFileDetails.documentTypeKey,\n                submitData = uploadedFileDetails.submitData,\n                submitFiles = uploadedFileDetails.submitFiles;\n\n            var linkedDocList = _toConsumableArray(clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.linkedDocumentList);\n\n            if (utils.generic.isInvalidOrEmptyArray(linkedDocList) && utils.generic.isInvalidOrEmptyArray(submitFiles)) {\n              var _props$handlers;\n\n              (_props$handlers = props.handlers) === null || _props$handlers === void 0 ? void 0 : _props$handlers.getRfiHistoryDetails();\n            }\n\n            if (!utils.generic.isInvalidOrEmptyArray(linkedDocList)) {\n              makeLinkDocumentCall(caseIncidentNotesID);\n            }\n\n            if (!utils.generic.isInvalidOrEmptyArray(submitFiles)) {\n              makeUploadDocumentCall(documentTypeKey, submitData, submitFiles);\n            }\n          }\n        }\n      });\n    }\n  };\n\n  var makeLinkDocumentCall = function makeLinkDocumentCall(caseIncidentNotesID) {\n    setIsLinking(true);\n\n    var linkedDocList = _toConsumableArray(clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.linkedDocumentList);\n\n    var linkedDocParamList = linkedDocList === null || linkedDocList === void 0 ? void 0 : linkedDocList.map(function (item) {\n      var linkItem = _objectSpread({}, item);\n\n      return {\n        documentId: linkItem.documentId,\n        referenceId: \"\".concat(linkItem.referenceId, \"-\").concat(caseIncidentNotesID),\n        sectionType: linkItem.sectionType\n      };\n    });\n    dispatch(linkMultipleDmsDocuments(linkedDocParamList)).then(function (response) {\n      setIsLinking(false);\n\n      if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n        var _props$handlers2;\n\n        var linkedResponseList = _toConsumableArray(response === null || response === void 0 ? void 0 : response.data);\n\n        var linkedDocIdList = linkedResponseList === null || linkedResponseList === void 0 ? void 0 : linkedResponseList.map(function (doc) {\n          return doc === null || doc === void 0 ? void 0 : doc.documentDataId;\n        });\n        var docTableViewList = clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.documentTableList;\n        var docsTableList = docTableViewList === null || docTableViewList === void 0 ? void 0 : docTableViewList.filter(function (doc) {\n          return !(linkedDocIdList === null || linkedDocIdList === void 0 ? void 0 : linkedDocIdList.includes(doc === null || doc === void 0 ? void 0 : doc.documentId));\n        });\n        var docsNameList = docsTableList === null || docsTableList === void 0 ? void 0 : docsTableList.map(function (doc) {\n          return doc === null || doc === void 0 ? void 0 : doc.documentName;\n        });\n        dispatch(resetDmsClientSideLinkedDocuments({\n          documentTableList: docsTableList,\n          documentNameList: docsNameList\n        }));\n        (_props$handlers2 = props.handlers) === null || _props$handlers2 === void 0 ? void 0 : _props$handlers2.getRfiHistoryDetails();\n      }\n    });\n  };\n\n  var makeUploadDocumentCall = function makeUploadDocumentCall(documentTypeKey, submitData, submitFiles) {\n    setIsUploading(true);\n    dispatch(postDmsDocuments({\n      context: constants.DMS_CONTEXT_TASK,\n      documentTypeKey: documentTypeKey,\n      submitData: submitData,\n      submitFiles: submitFiles\n    })).then(function (data) {\n      setIsUploading(false);\n\n      if (data.status === constants.API_RESPONSE_OK) {\n        var _data$data2, _props$handlers3;\n\n        var documentDtoList = _toConsumableArray(data === null || data === void 0 ? void 0 : (_data$data2 = data.data) === null || _data$data2 === void 0 ? void 0 : _data$data2.documentDto);\n\n        var documentNameDtoList = documentDtoList === null || documentDtoList === void 0 ? void 0 : documentDtoList.map(function (document) {\n          return document === null || document === void 0 ? void 0 : document.documentName;\n        });\n\n        var documentTableList = _toConsumableArray(clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.documentTableList);\n\n        var docTableList = documentTableList === null || documentTableList === void 0 ? void 0 : documentTableList.filter(function (doc) {\n          return !documentNameDtoList.includes(doc === null || doc === void 0 ? void 0 : doc.documentName);\n        });\n\n        var _documentNameList = _toConsumableArray(clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.documentNameList);\n\n        var docNameList = _documentNameList === null || _documentNameList === void 0 ? void 0 : _documentNameList.filter(function (doc) {\n          return !documentNameDtoList.includes(doc);\n        });\n        dispatch(resetDmsClientSideUploadedDocuments({\n          documentTableList: docTableList,\n          documentNameList: docNameList\n        }));\n        (_props$handlers3 = props.handlers) === null || _props$handlers3 === void 0 ? void 0 : _props$handlers3.getRfiHistoryDetails();\n      }\n    });\n  };\n\n  var handleCloseRFI = function handleCloseRFI() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('status.alert'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: utils.string.t('claims.processing.modal.rfiCloseConfirm'),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'default'\n          },\n          submitHandler: function submitHandler() {\n            dispatch(postCloseRFI(rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId, history)).then(function (data) {\n              if (data.status === 'OK') {\n                setTimeout(function () {\n                  return history.replace(config.routes.claimsFNOL.taskTab);\n                }, 1000);\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var handleAttachDocuments = function handleAttachDocuments() {\n    dispatch(showModal({\n      component: 'DMS_UPLOAD_FILES_CLIENT_SIDE',\n      props: {\n        title: utils.string.t('claims.rfiDashboard.attachDocuments'),\n        fullWidth: true,\n        maxWidth: 'xl',\n        componentProps: {\n          referenceId: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId,\n          sourceId: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.sourceID,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim\n        }\n      }\n    }));\n  };\n\n  var confirmDocumentDelete = function confirmDocumentDelete(index) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.deleteDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\n          confirmMessage: utils.string.t('dms.view.deleteDocument.confirmMessage'),\n          submitHandler: function submitHandler() {\n            return removeDocument(index);\n          }\n        }\n      }\n    }));\n  };\n\n  var removeDocument = function removeDocument(index) {\n    var _documentList$index, _documentList$index3;\n\n    var uploadedFiles = _objectSpread({}, clientUploadedFiles);\n\n    var documentList = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.documentTableList);\n\n    if (!utils.generic.isInvalidOrEmptyArray(documentList) && ((_documentList$index = documentList[index]) === null || _documentList$index === void 0 ? void 0 : _documentList$index.isLink)) {\n      var _documentList$index2, _uploadedFiles$linked, _uploadedFiles$docume, _uploadedFiles$docume2;\n\n      var linkedDocName = (_documentList$index2 = documentList[index]) === null || _documentList$index2 === void 0 ? void 0 : _documentList$index2.documentName;\n\n      var linkedDocList = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.linkedDocumentList);\n\n      var searchIndex = linkedDocList === null || linkedDocList === void 0 ? void 0 : linkedDocList.findIndex(function (linkedDocItem) {\n        return (linkedDocItem === null || linkedDocItem === void 0 ? void 0 : linkedDocItem.documentName) === linkedDocName;\n      });\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$linked = uploadedFiles.linkedDocumentList) === null || _uploadedFiles$linked === void 0 ? void 0 : _uploadedFiles$linked.splice(searchIndex, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume = uploadedFiles.documentTableList) === null || _uploadedFiles$docume === void 0 ? void 0 : _uploadedFiles$docume.splice(index, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume2 = uploadedFiles.documentNameList) === null || _uploadedFiles$docume2 === void 0 ? void 0 : _uploadedFiles$docume2.splice(index, 1);\n    } else if (!utils.generic.isInvalidOrEmptyArray(documentList) && !((_documentList$index3 = documentList[index]) === null || _documentList$index3 === void 0 ? void 0 : _documentList$index3.isLink)) {\n      var _documentList$index4, _uploadedFiles$upload, _uploadedFiles$upload2, _uploadedFiles$upload3, _uploadedFiles$upload4, _uploadedFiles$upload5, _uploadedFiles$upload6, _uploadedFiles$upload7, _uploadedFiles$upload8, _uploadedFiles$upload9, _uploadedFiles$upload10, _uploadedFiles$upload11, _uploadedFiles$docume3, _uploadedFiles$docume4;\n\n      var uploadedDocName = (_documentList$index4 = documentList[index]) === null || _documentList$index4 === void 0 ? void 0 : _documentList$index4.documentName;\n\n      var submitFiles = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload === void 0 ? void 0 : _uploadedFiles$upload.submitFiles);\n\n      var searchSubmitIndex = submitFiles === null || submitFiles === void 0 ? void 0 : submitFiles.findIndex(function (uploadSubmitItem) {\n        return (uploadSubmitItem === null || uploadSubmitItem === void 0 ? void 0 : uploadSubmitItem.name) === uploadedDocName;\n      });\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload2 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload2 === void 0 ? void 0 : _uploadedFiles$upload2.submitFiles) && (uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload3 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload3 === void 0 ? void 0 : (_uploadedFiles$upload4 = _uploadedFiles$upload3.submitFiles) === null || _uploadedFiles$upload4 === void 0 ? void 0 : _uploadedFiles$upload4.splice(searchSubmitIndex, 1));\n\n      var documentDto = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload5 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload5 === void 0 ? void 0 : (_uploadedFiles$upload6 = _uploadedFiles$upload5.submitData) === null || _uploadedFiles$upload6 === void 0 ? void 0 : _uploadedFiles$upload6.documentDto);\n\n      var searchDtoIndex = documentDto === null || documentDto === void 0 ? void 0 : documentDto.findIndex(function (docDtoItem) {\n        return (docDtoItem === null || docDtoItem === void 0 ? void 0 : docDtoItem.documentName) === uploadedDocName;\n      });\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload7 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload7 === void 0 ? void 0 : (_uploadedFiles$upload8 = _uploadedFiles$upload7.submitData) === null || _uploadedFiles$upload8 === void 0 ? void 0 : _uploadedFiles$upload8.documentDto) && (uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload9 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload9 === void 0 ? void 0 : (_uploadedFiles$upload10 = _uploadedFiles$upload9.submitData) === null || _uploadedFiles$upload10 === void 0 ? void 0 : (_uploadedFiles$upload11 = _uploadedFiles$upload10.documentDto) === null || _uploadedFiles$upload11 === void 0 ? void 0 : _uploadedFiles$upload11.splice(searchDtoIndex, 1));\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume3 = uploadedFiles.documentTableList) === null || _uploadedFiles$docume3 === void 0 ? void 0 : _uploadedFiles$docume3.splice(index, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume4 = uploadedFiles.documentNameList) === null || _uploadedFiles$docume4 === void 0 ? void 0 : _uploadedFiles$docume4.splice(index, 1);\n    }\n\n    dispatch(removeDmsClientSideUploadedDocuments({\n      uploadedFiles: uploadedFiles\n    }));\n  };\n\n  useEffect(function () {\n    dispatch(getUsersByOrg('', [rfiTask], CREATE_RFI_FORM, false));\n    dispatch(resetClaimsAssignedToUsers());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if ((assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.length) > 0) {\n      setResetKey(new Date().getTime());\n      setIsDataReady(true);\n    }\n  }, [assignedToUsers]);\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  if (!isDataReady) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      height: \"300px\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        visible: true,\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 308,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 307,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RfiQueryFormView, _objectSpread(_objectSpread({}, props), {}, {\n    fields: fields,\n    actions: actions,\n    formProps: {\n      control: control,\n      handleSubmit: handleSubmit,\n      setValue: setValue,\n      errors: errors,\n      formState: formState,\n      reset: reset\n    },\n    resetKey: resetKey,\n    documentNameList: documentNameList,\n    isUploading: isUploading,\n    isLinking: isLinking,\n    handlers: {\n      handleAttachDocuments: handleAttachDocuments,\n      confirmDocumentDelete: confirmDocumentDelete\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 314,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RfiQueryForm, \"wiavAy3tKiVSnZVyIQO8KZ/jjyo=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = RfiQueryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiQueryForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RfiQueryForm/RfiQueryForm.js"],"names":["React","useEffect","useState","Yup","yupResolver","useHistory","useForm","useDispatch","useSelector","utils","RfiQueryFormView","Loader","config","CREATE_RFI_FORM","TASK_TAB_COMPLETED_STATUS","getUsersByOrg","selectClaimsAssignedToUsers","postSendRFI","postCloseRFI","showModal","selectUserEmail","resetClaimsAssignedToUsers","setDmsTaskContextType","selectDmsClientSideUploadFiles","postDmsDocuments","resetDmsClientSideUploadedDocuments","removeDmsClientSideUploadedDocuments","linkMultipleDmsDocuments","resetDmsClientSideLinkedDocuments","constants","Box","RfiQueryForm","props","dispatch","history","assignedToUsers","items","userEmail","resetKey","setResetKey","isDataReady","setIsDataReady","clientUploadedFiles","isUploading","setIsUploading","isLinking","setIsLinking","documentNameList","rfiTask","defaultAssignedUser","toLowerCase","requestedBy","find","email","rfiSentTo","generic","isValidArray","fields","name","type","value","options","optionKey","optionLabel","muiComponentProps","disabled","status","validation","object","required","string","t","hint","char","inputProps","maxLength","multiline","rows","rowsMax","max","actions","label","handler","handleCloseRFI","values","handleRFISend","sendToObj","user","sendTo","rfiSendData","assignedTo","bpmTaskID","taskId","caseIncidentID","notes","description","team","organisationName","queryCodeDescription","selectedQueryCode","then","data","API_RESPONSE_OK","setValue","caseIncidentNotesID","uploadedFileDetails","uploadFileDetails","documentTypeKey","submitData","submitFiles","linkedDocList","linkedDocumentList","isInvalidOrEmptyArray","handlers","getRfiHistoryDetails","makeLinkDocumentCall","makeUploadDocumentCall","linkedDocParamList","map","item","linkItem","documentId","referenceId","sectionType","response","linkedResponseList","linkedDocIdList","doc","documentDataId","docTableViewList","documentTableList","docsTableList","filter","includes","docsNameList","documentName","context","DMS_CONTEXT_TASK","documentDtoList","documentDto","documentNameDtoList","document","docTableList","docNameList","component","fullWidth","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","submitHandler","setTimeout","replace","routes","claimsFNOL","taskTab","handleAttachDocuments","sourceId","sourceID","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","confirmDocumentDelete","index","removeDocument","uploadedFiles","documentList","isLink","linkedDocName","searchIndex","findIndex","linkedDocItem","splice","uploadedDocName","searchSubmitIndex","uploadSubmitItem","searchDtoIndex","docDtoItem","length","Date","getTime","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { RfiQueryFormView } from './RfiQueryForm.view';\r\nimport { Loader } from 'components';\r\nimport config from 'config';\r\nimport { CREATE_RFI_FORM, TASK_TAB_COMPLETED_STATUS } from 'consts';\r\nimport {\r\n  getUsersByOrg,\r\n  selectClaimsAssignedToUsers,\r\n  postSendRFI,\r\n  postCloseRFI,\r\n  showModal,\r\n  selectUserEmail,\r\n  resetClaimsAssignedToUsers,\r\n  setDmsTaskContextType,\r\n  selectDmsClientSideUploadFiles,\r\n  postDmsDocuments,\r\n  resetDmsClientSideUploadedDocuments,\r\n  removeDmsClientSideUploadedDocuments,\r\n  linkMultipleDmsDocuments,\r\n  resetDmsClientSideLinkedDocuments,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function RfiQueryForm(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const assignedToUsers = useSelector(selectClaimsAssignedToUsers)?.items || null;\r\n  const userEmail = useSelector(selectUserEmail);\r\n  const [resetKey, setResetKey] = useState();\r\n  const [isDataReady, setIsDataReady] = useState(false);\r\n\r\n  const clientUploadedFiles = useSelector(selectDmsClientSideUploadFiles);\r\n  const [isUploading, setIsUploading] = useState(false);\r\n  const [isLinking, setIsLinking] = useState(false);\r\n  const documentNameList = clientUploadedFiles?.documentNameList;\r\n  const { rfiTask } = props;\r\n\r\n  const defaultAssignedUser = () =>\r\n    userEmail?.toLowerCase() === rfiTask?.requestedBy?.toLowerCase()\r\n      ? assignedToUsers?.find(({ email }) => email?.toLowerCase() === rfiTask?.rfiSentTo?.toLowerCase())\r\n      : utils.generic.isValidArray(assignedToUsers, true)\r\n      ? assignedToUsers?.find(({ email }) => email?.toLowerCase() === rfiTask?.requestedBy?.toLowerCase())\r\n      : null;\r\n\r\n  const fields = [\r\n    {\r\n      name: 'sendTo',\r\n      type: 'autocompletemui',\r\n      value: defaultAssignedUser(),\r\n      options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      muiComponentProps: {\r\n        disabled: rfiTask?.status === TASK_TAB_COMPLETED_STATUS,\r\n      },\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      hint: utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', { char: 1000 }),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 1000 },\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 3,\r\n        'data-testid': 'details',\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(1000, utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', { char: 1000 })),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.close'),\r\n      disabled: userEmail.toLowerCase() !== rfiTask?.requestedBy?.toLowerCase(),\r\n      handler: () => {\r\n        handleCloseRFI();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.reply'),\r\n      handler: (values) => {\r\n        handleRFISend(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleRFISend = (values) => {\r\n    if (values) {\r\n      const sendToObj = assignedToUsers.find((user) => user.email === values?.sendTo?.email);\r\n      const rfiSendData = {\r\n        assignedTo: sendToObj?.email,\r\n        bpmTaskID: rfiTask?.taskId,\r\n        caseIncidentID: rfiTask?.caseIncidentID,\r\n        notes: values?.description,\r\n        team: sendToObj?.organisationName,\r\n        queryCodeDescription: props?.selectedQueryCode?.queryCodeDescription || '',\r\n      };\r\n\r\n      dispatch(postSendRFI(rfiSendData)).then((data) => {\r\n        if (data.status === constants.API_RESPONSE_OK) {\r\n          setValue('sendTo', null);\r\n          setValue('description', '');\r\n          const { caseIncidentID, caseIncidentNotesID } = data.data;\r\n          if (caseIncidentID && caseIncidentNotesID) {\r\n            dispatch(setDmsTaskContextType({ caseIncidentID, caseIncidentNotesID }));\r\n\r\n            const uploadedFileDetails = { ...clientUploadedFiles?.uploadFileDetails };\r\n            const { documentTypeKey, submitData, submitFiles } = uploadedFileDetails;\r\n            const linkedDocList = [...clientUploadedFiles?.linkedDocumentList];\r\n\r\n            if (utils.generic.isInvalidOrEmptyArray(linkedDocList) && utils.generic.isInvalidOrEmptyArray(submitFiles)) {\r\n              props.handlers?.getRfiHistoryDetails();\r\n            }\r\n\r\n            if (!utils.generic.isInvalidOrEmptyArray(linkedDocList)) {\r\n              makeLinkDocumentCall(caseIncidentNotesID);\r\n            }\r\n\r\n            if (!utils.generic.isInvalidOrEmptyArray(submitFiles)) {\r\n              makeUploadDocumentCall(documentTypeKey, submitData, submitFiles);\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const makeLinkDocumentCall = (caseIncidentNotesID) => {\r\n    setIsLinking(true);\r\n    const linkedDocList = [...clientUploadedFiles?.linkedDocumentList];\r\n    const linkedDocParamList = linkedDocList?.map((item) => {\r\n      const linkItem = { ...item };\r\n      return {\r\n        documentId: linkItem.documentId,\r\n        referenceId: `${linkItem.referenceId}-${caseIncidentNotesID}`,\r\n        sectionType: linkItem.sectionType,\r\n      };\r\n    });\r\n    dispatch(linkMultipleDmsDocuments(linkedDocParamList)).then((response) => {\r\n      setIsLinking(false);\r\n      if (response?.status === constants.API_RESPONSE_OK) {\r\n        const linkedResponseList = [...response?.data];\r\n        const linkedDocIdList = linkedResponseList?.map((doc) => doc?.documentDataId);\r\n        const docTableViewList = clientUploadedFiles?.documentTableList;\r\n        const docsTableList = docTableViewList?.filter((doc) => {\r\n          return !linkedDocIdList?.includes(doc?.documentId);\r\n        });\r\n        const docsNameList = docsTableList?.map((doc) => doc?.documentName);\r\n        dispatch(resetDmsClientSideLinkedDocuments({ documentTableList: docsTableList, documentNameList: docsNameList }));\r\n        props.handlers?.getRfiHistoryDetails();\r\n      }\r\n    });\r\n  };\r\n\r\n  const makeUploadDocumentCall = (documentTypeKey, submitData, submitFiles) => {\r\n    setIsUploading(true);\r\n    dispatch(postDmsDocuments({ context: constants.DMS_CONTEXT_TASK, documentTypeKey, submitData, submitFiles })).then((data) => {\r\n      setIsUploading(false);\r\n      if (data.status === constants.API_RESPONSE_OK) {\r\n        const documentDtoList = [...data?.data?.documentDto];\r\n        const documentNameDtoList = documentDtoList?.map((document) => document?.documentName);\r\n        const documentTableList = [...clientUploadedFiles?.documentTableList];\r\n\r\n        const docTableList = documentTableList?.filter((doc) => {\r\n          return !documentNameDtoList.includes(doc?.documentName);\r\n        });\r\n        const documentNameList = [...clientUploadedFiles?.documentNameList];\r\n        const docNameList = documentNameList?.filter((doc) => {\r\n          return !documentNameDtoList.includes(doc);\r\n        });\r\n        dispatch(resetDmsClientSideUploadedDocuments({ documentTableList: docTableList, documentNameList: docNameList }));\r\n        props.handlers?.getRfiHistoryDetails();\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleCloseRFI = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('status.alert'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: utils.string.t('claims.processing.modal.rfiCloseConfirm'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'default' },\r\n            submitHandler: () => {\r\n              dispatch(postCloseRFI(rfiTask?.taskId, history)).then((data) => {\r\n                if (data.status === 'OK') {\r\n                  setTimeout(() => history.replace(config.routes.claimsFNOL.taskTab), 1000);\r\n                }\r\n              });\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAttachDocuments = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_UPLOAD_FILES_CLIENT_SIDE',\r\n        props: {\r\n          title: utils.string.t('claims.rfiDashboard.attachDocuments'),\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          componentProps: {\r\n            referenceId: rfiTask?.taskId,\r\n            sourceId: rfiTask?.sourceID,\r\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const confirmDocumentDelete = (index) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.deleteDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\r\n            confirmMessage: utils.string.t('dms.view.deleteDocument.confirmMessage'),\r\n            submitHandler: () => removeDocument(index),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeDocument = (index) => {\r\n    const uploadedFiles = { ...clientUploadedFiles };\r\n    const documentList = [...uploadedFiles?.documentTableList];\r\n    if (!utils.generic.isInvalidOrEmptyArray(documentList) && documentList[index]?.isLink) {\r\n      const linkedDocName = documentList[index]?.documentName;\r\n      const linkedDocList = [...uploadedFiles?.linkedDocumentList];\r\n      const searchIndex = linkedDocList?.findIndex((linkedDocItem) => linkedDocItem?.documentName === linkedDocName);\r\n      uploadedFiles?.linkedDocumentList?.splice(searchIndex, 1);\r\n      uploadedFiles?.documentTableList?.splice(index, 1);\r\n      uploadedFiles?.documentNameList?.splice(index, 1);\r\n    } else if (!utils.generic.isInvalidOrEmptyArray(documentList) && !documentList[index]?.isLink) {\r\n      const uploadedDocName = documentList[index]?.documentName;\r\n      const submitFiles = [...uploadedFiles?.uploadFileDetails?.submitFiles];\r\n      const searchSubmitIndex = submitFiles?.findIndex((uploadSubmitItem) => uploadSubmitItem?.name === uploadedDocName);\r\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles?.uploadFileDetails?.submitFiles) &&\r\n        uploadedFiles?.uploadFileDetails?.submitFiles?.splice(searchSubmitIndex, 1);\r\n\r\n      const documentDto = [...uploadedFiles?.uploadFileDetails?.submitData?.documentDto];\r\n      const searchDtoIndex = documentDto?.findIndex((docDtoItem) => docDtoItem?.documentName === uploadedDocName);\r\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles?.uploadFileDetails?.submitData?.documentDto) &&\r\n        uploadedFiles?.uploadFileDetails?.submitData?.documentDto?.splice(searchDtoIndex, 1);\r\n      uploadedFiles?.documentTableList?.splice(index, 1);\r\n      uploadedFiles?.documentNameList?.splice(index, 1);\r\n    }\r\n\r\n    dispatch(removeDmsClientSideUploadedDocuments({ uploadedFiles: uploadedFiles }));\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersByOrg('', [rfiTask], CREATE_RFI_FORM, false));\r\n    dispatch(resetClaimsAssignedToUsers());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (assignedToUsers?.length > 0) {\r\n      setResetKey(new Date().getTime());\r\n      setIsDataReady(true);\r\n    }\r\n  }, [assignedToUsers]);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  if (!isDataReady) {\r\n    return (\r\n      <Box height=\"300px\">\r\n        <Loader visible absolute />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RfiQueryFormView\r\n      {...props}\r\n      fields={fields}\r\n      actions={actions}\r\n      formProps={{ control, handleSubmit, setValue, errors, formState, reset }}\r\n      resetKey={resetKey}\r\n      documentNameList={documentNameList}\r\n      isUploading={isUploading}\r\n      isLinking={isLinking}\r\n      handlers={{ handleAttachDocuments: handleAttachDocuments, confirmDocumentDelete: confirmDocumentDelete }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}