{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\RiskData\\\\RiskSummaryQuote.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport get from 'lodash/get'; // app\n\nimport { selectUser } from 'stores';\nimport { FormGrid, Tooltip } from 'components';\nimport SummaryLine from './SummaryLine';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Typography, CircularProgress } from '@material-ui/core';\nimport InfoIcon from '@material-ui/icons/Info';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nvar RiskSummaryQuote = function RiskSummaryQuote(_ref) {\n  _s();\n\n  var allStepsCompleted = _ref.allStepsCompleted,\n      isFormValid = _ref.isFormValid,\n      classes = _ref.classes,\n      riskValues = _ref.riskValues,\n      definitions = _ref.definitions,\n      productType = _ref.productType;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      quotes = _useState2[0],\n      setQuotes = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isLoading = _useState4[0],\n      setIsLoading = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      error = _useState6[0],\n      setError = _useState6[1];\n\n  var user = useSelector(selectUser);\n  var endpoint = useSelector(function (state) {\n    return get(state, 'config.vars.endpoint');\n  });\n  var auth = user.auth;\n\n  var formatNumber = function formatNumber(num) {\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\n  };\n\n  useEffect(function () {\n    var isSubscribed = true;\n    isSubscribed && setIsLoading(true);\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var riskData, response, data, errorParams;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                riskData = _objectSpread(_objectSpread({}, utils.risk.parsedValues(utils.risk.filterConditionalValues(riskValues, definitions), definitions)), {}, {\n                  riskType: productType\n                });\n                _context.next = 4;\n                return utils.api.post({\n                  token: auth.accessToken,\n                  endpoint: endpoint.auth,\n                  path: \"api/v1/risks/summary-quote\",\n                  data: riskData\n                });\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return utils.api.handleResponse(response);\n\n              case 7:\n                data = _context.sent;\n\n                if (isSubscribed) {\n                  setQuotes(data);\n                  setIsLoading(false);\n                }\n\n                _context.next = 16;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                setError(true);\n                errorParams = {\n                  file: 'RiskSummaryQuote.js',\n                  message: 'API fetch error'\n                };\n                utils.api.handleError(_context.t0, errorParams);\n\n              case 16:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    if (allStepsCompleted && isFormValid && utils.generic.isValidObject(riskValues) && !isEmpty(riskValues)) {\n      fetchData();\n    }\n\n    return function () {\n      return isSubscribed = false;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [allStepsCompleted, JSON.stringify(riskValues), productType, isFormValid]);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: allStepsCompleted && isFormValid && !error ? /*#__PURE__*/_jsxDEV(FormGrid, {\n      item: true,\n      xs: 12,\n      sm: 12,\n      style: {\n        justifyContent: 'center'\n      },\n      children: /*#__PURE__*/_jsxDEV(FormGrid, {\n        container: true,\n        spacing: 3,\n        justifyContent: \"center\",\n        children: isLoading ? /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          style: {\n            justifyContent: 'center'\n          },\n          \"data-testid\": \"loading\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                className: classes.card,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  p: 2,\n                  className: classes.cardPolicyTitle,\n                  style: {\n                    textAlign: 'center'\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 80,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  p: 2,\n                  className: classes.policyBox,\n                  style: {\n                    textAlign: 'center'\n                  },\n                  children: /*#__PURE__*/_jsxDEV(CircularProgress, {}, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 82,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 81,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 15\n        }, _this) : quotes.map(function (quote, index) {\n          var _quote$summaryValues;\n\n          return /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            sm: 4,\n            style: {\n              justifyContent: 'center'\n            },\n            \"data-testid\": \"summary-quote-\".concat(index),\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 3,\n              justifyContent: \"center\",\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(Box, {\n                  className: classes.card,\n                  children: [/*#__PURE__*/_jsxDEV(Box, {\n                    p: 2,\n                    className: classes.cardPolicyTitle,\n                    style: {\n                      textAlign: 'center',\n                      backgroundColor: (quote === null || quote === void 0 ? void 0 : quote.hasReferrals) ? 'rgb(237, 172, 0)' : 'rgb(9, 169, 237)'\n                    },\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"h3\",\n                      className: classes.cardPolicyTitleHeading,\n                      style: {\n                        textAlign: 'center'\n                      },\n                      children: (quote === null || quote === void 0 ? void 0 : quote.carrierName) ? quote.carrierName : null\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    pt: 2,\n                    className: classes.policyBox,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      spacing: 1,\n                      justifyContent: \"center\",\n                      children: [(quote === null || quote === void 0 ? void 0 : quote.premium) && (quote === null || quote === void 0 ? void 0 : quote.quoted) && !(quote === null || quote === void 0 ? void 0 : quote.hasReferrals) ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 12,\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h4\",\n                          align: \"center\",\n                          style: {\n                            marginBottom: 0\n                          },\n                          children: utils.string.t('risks.grossPremium')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 114,\n                          columnNumber: 33\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 31\n                      }, _this) : null, /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 12,\n                        align: \"center\",\n                        children: /*#__PURE__*/_jsxDEV(Typography, {\n                          variant: \"h1\",\n                          align: \"center\",\n                          className: classes.premium,\n                          children: (quote === null || quote === void 0 ? void 0 : quote.hasReferrals) || (quote === null || quote === void 0 ? void 0 : quote.quoted) === false ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [/*#__PURE__*/_jsxDEV(Tooltip, {\n                              title: \"Submit the risk to view the referral reason(s)\",\n                              children: /*#__PURE__*/_jsxDEV(InfoIcon, {\n                                style: {\n                                  color: 'rgb(237, 172, 0)',\n                                  fontSize: 24,\n                                  marginRight: 10\n                                }\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 124,\n                                columnNumber: 39\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 123,\n                              columnNumber: 37\n                            }, _this), utils.string.t('risks.referral')]\n                          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                            children: [(quote === null || quote === void 0 ? void 0 : quote.currency) ? quote.currency : null, (quote === null || quote === void 0 ? void 0 : quote.premium) ? formatNumber(quote.premium) : null]\n                          }, void 0, true)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 120,\n                          columnNumber: 31\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 119,\n                        columnNumber: 29\n                      }, _this), (quote === null || quote === void 0 ? void 0 : (_quote$summaryValues = quote.summaryValues) === null || _quote$summaryValues === void 0 ? void 0 : _quote$summaryValues.length) > 0 ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                          item: true,\n                          xs: 12,\n                          align: \"center\",\n                          children: /*#__PURE__*/_jsxDEV(Box, {\n                            py: 2,\n                            className: classes.quoteValuesBox,\n                            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                              container: true,\n                              spacing: 1,\n                              justifyContent: \"center\",\n                              children: quote === null || quote === void 0 ? void 0 : quote.summaryValues.map(function (summary) {\n                                return /*#__PURE__*/_jsxDEV(SummaryLine, {\n                                  summary: summary,\n                                  classes: classes\n                                }, summary.title, false, {\n                                  fileName: _jsxFileName,\n                                  lineNumber: 142,\n                                  columnNumber: 41\n                                }, _this);\n                              })\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 140,\n                              columnNumber: 37\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 139,\n                            columnNumber: 35\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 138,\n                          columnNumber: 33\n                        }, _this)\n                      }, void 0, false) : null]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 25\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, _this)\n          }, \"quote-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 17\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, _this) : null\n  }, void 0, false);\n};\n\n_s(RiskSummaryQuote, \"RZ7QaSWP683AqMgw42xVCHgv+ks=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = RiskSummaryQuote;\nexport default RiskSummaryQuote;\n\nvar _c;\n\n$RefreshReg$(_c, \"RiskSummaryQuote\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/RiskData/RiskSummaryQuote.js"],"names":["React","useState","useEffect","useSelector","isEmpty","get","selectUser","FormGrid","Tooltip","SummaryLine","utils","Box","Typography","CircularProgress","InfoIcon","RiskSummaryQuote","allStepsCompleted","isFormValid","classes","riskValues","definitions","productType","quotes","setQuotes","isLoading","setIsLoading","error","setError","user","endpoint","state","auth","formatNumber","num","toString","replace","isSubscribed","fetchData","riskData","risk","parsedValues","filterConditionalValues","riskType","api","post","token","accessToken","path","data","response","handleResponse","errorParams","file","message","handleError","generic","isValidObject","JSON","stringify","justifyContent","card","cardPolicyTitle","textAlign","policyBox","map","quote","index","backgroundColor","hasReferrals","cardPolicyTitleHeading","carrierName","premium","quoted","marginBottom","string","t","color","fontSize","marginRight","currency","summaryValues","length","quoteValuesBox","summary","title"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,SAASC,QAAT,EAAmBC,OAAnB,QAAkC,YAAlC;AACA,OAAOC,WAAP,MAAwB,eAAxB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CACA;;AACA,SAASC,GAAT,EAAcC,UAAd,EAA0BC,gBAA1B,QAAkD,mBAAlD;AACA,OAAOC,QAAP,MAAqB,yBAArB;;;;AAEA,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,OAAuF;AAAA;;AAAA,MAApFC,iBAAoF,QAApFA,iBAAoF;AAAA,MAAjEC,WAAiE,QAAjEA,WAAiE;AAAA,MAApDC,OAAoD,QAApDA,OAAoD;AAAA,MAA3CC,UAA2C,QAA3CA,UAA2C;AAAA,MAA/BC,WAA+B,QAA/BA,WAA+B;AAAA,MAAlBC,WAAkB,QAAlBA,WAAkB;;AAAA,kBAClFpB,QAAQ,CAAC,EAAD,CAD0E;AAAA;AAAA,MACvGqB,MADuG;AAAA,MAC/FC,SAD+F;;AAAA,mBAE5EtB,QAAQ,CAAC,IAAD,CAFoE;AAAA;AAAA,MAEvGuB,SAFuG;AAAA,MAE5FC,YAF4F;;AAAA,mBAGpFxB,QAAQ,CAAC,KAAD,CAH4E;AAAA;AAAA,MAGvGyB,KAHuG;AAAA,MAGhGC,QAHgG;;AAI9G,MAAMC,IAAI,GAAGzB,WAAW,CAACG,UAAD,CAAxB;AACA,MAAMuB,QAAQ,GAAG1B,WAAW,CAAC,UAAC2B,KAAD;AAAA,WAAWzB,GAAG,CAACyB,KAAD,EAAQ,sBAAR,CAAd;AAAA,GAAD,CAA5B;AAL8G,MAMtGC,IANsG,GAM7FH,IAN6F,CAMtGG,IANsG;;AAQ9G,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,GAAD,EAAS;AAC5B,WAAOA,GAAG,CAACC,QAAJ,GAAeC,OAAf,CAAuB,yBAAvB,EAAkD,KAAlD,CAAP;AACD,GAFD;;AAIAjC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkC,YAAY,GAAG,IAAnB;AAEAA,IAAAA,YAAY,IAAIX,YAAY,CAAC,IAAD,CAA5B;;AACA,QAAMY,SAAS;AAAA,2EAAG;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAERC,gBAAAA,QAFQ,mCAGT5B,KAAK,CAAC6B,IAAN,CAAWC,YAAX,CAAwB9B,KAAK,CAAC6B,IAAN,CAAWE,uBAAX,CAAmCtB,UAAnC,EAA+CC,WAA/C,CAAxB,EAAqFA,WAArF,CAHS;AAIZsB,kBAAAA,QAAQ,EAAErB;AAJE;AAAA;AAAA,uBAMSX,KAAK,CAACiC,GAAN,CAAUC,IAAV,CAAe;AACpCC,kBAAAA,KAAK,EAAEd,IAAI,CAACe,WADwB;AAEpCjB,kBAAAA,QAAQ,EAAEA,QAAQ,CAACE,IAFiB;AAGpCgB,kBAAAA,IAAI,8BAHgC;AAIpCC,kBAAAA,IAAI,EAAEV;AAJ8B,iBAAf,CANT;;AAAA;AAMRW,gBAAAA,QANQ;AAAA;AAAA,uBAYKvC,KAAK,CAACiC,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAZL;;AAAA;AAYRD,gBAAAA,IAZQ;;AAcd,oBAAIZ,YAAJ,EAAkB;AAChBb,kBAAAA,SAAS,CAACyB,IAAD,CAAT;AACAvB,kBAAAA,YAAY,CAAC,KAAD,CAAZ;AACD;;AAjBa;AAAA;;AAAA;AAAA;AAAA;AAmBdE,gBAAAA,QAAQ,CAAC,IAAD,CAAR;AACMwB,gBAAAA,WApBQ,GAoBM;AAClBC,kBAAAA,IAAI,EAAE,qBADY;AAElBC,kBAAAA,OAAO,EAAE;AAFS,iBApBN;AAyBd3C,gBAAAA,KAAK,CAACiC,GAAN,CAAUW,WAAV,cAA2BH,WAA3B;;AAzBc;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAAH;;AAAA,sBAATd,SAAS;AAAA;AAAA;AAAA,OAAf;;AA6BA,QAAIrB,iBAAiB,IAAIC,WAArB,IAAoCP,KAAK,CAAC6C,OAAN,CAAcC,aAAd,CAA4BrC,UAA5B,CAApC,IAA+E,CAACf,OAAO,CAACe,UAAD,CAA3F,EAAyG;AACvGkB,MAAAA,SAAS;AACV;;AAED,WAAO;AAAA,aAAOD,YAAY,GAAG,KAAtB;AAAA,KAAP,CArCc,CAsCd;AACD,GAvCQ,EAuCN,CAACpB,iBAAD,EAAoByC,IAAI,CAACC,SAAL,CAAevC,UAAf,CAApB,EAAgDE,WAAhD,EAA6DJ,WAA7D,CAvCM,CAAT;AAyCA,sBACE;AAAA,cACGD,iBAAiB,IAAIC,WAArB,IAAoC,CAACS,KAArC,gBACC,QAAC,QAAD;AAAU,MAAA,IAAI,MAAd;AAAe,MAAA,EAAE,EAAE,EAAnB;AAAuB,MAAA,EAAE,EAAE,EAA3B;AAA+B,MAAA,KAAK,EAAE;AAAEiC,QAAAA,cAAc,EAAE;AAAlB,OAAtC;AAAA,6BACE,QAAC,QAAD;AAAU,QAAA,SAAS,MAAnB;AAAoB,QAAA,OAAO,EAAE,CAA7B;AAAgC,QAAA,cAAc,EAAC,QAA/C;AAAA,kBACGnC,SAAS,gBACR,QAAC,QAAD;AAAU,UAAA,IAAI,MAAd;AAAe,UAAA,EAAE,EAAE,CAAnB;AAAsB,UAAA,EAAE,EAAE,CAA1B;AAA6B,UAAA,KAAK,EAAE;AAAEmC,YAAAA,cAAc,EAAE;AAAlB,WAApC;AAAkE,yBAAY,SAA9E;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAoB,YAAA,OAAO,EAAE,CAA7B;AAAgC,YAAA,cAAc,EAAC,QAA/C;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,IAAI,MAAd;AAAe,cAAA,EAAE,EAAE,EAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,SAAS,EAAEzC,OAAO,CAAC0C,IAAxB;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,CAAC,EAAE,CAAR;AAAW,kBAAA,SAAS,EAAE1C,OAAO,CAAC2C,eAA9B;AAA+C,kBAAA,KAAK,EAAE;AAAEC,oBAAAA,SAAS,EAAE;AAAb;AAAtD;AAAA;AAAA;AAAA;AAAA,yBADF,eAEE,QAAC,GAAD;AAAK,kBAAA,CAAC,EAAE,CAAR;AAAW,kBAAA,SAAS,EAAE5C,OAAO,CAAC6C,SAA9B;AAAyC,kBAAA,KAAK,EAAE;AAAED,oBAAAA,SAAS,EAAE;AAAb,mBAAhD;AAAA,yCACE,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADQ,GAcRxC,MAAM,CAAC0C,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR;AAAA;;AAAA,8BACT,QAAC,QAAD;AAEE,YAAA,IAAI,MAFN;AAGE,YAAA,EAAE,EAAE,CAHN;AAIE,YAAA,EAAE,EAAE,CAJN;AAKE,YAAA,KAAK,EAAE;AAAEP,cAAAA,cAAc,EAAE;AAAlB,aALT;AAME,mDAA8BO,KAA9B,CANF;AAAA,mCAQE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAoB,cAAA,OAAO,EAAE,CAA7B;AAAgC,cAAA,cAAc,EAAC,QAA/C;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,GAAD;AAAK,kBAAA,SAAS,EAAEhD,OAAO,CAAC0C,IAAxB;AAAA,0CACE,QAAC,GAAD;AACE,oBAAA,CAAC,EAAE,CADL;AAEE,oBAAA,SAAS,EAAE1C,OAAO,CAAC2C,eAFrB;AAGE,oBAAA,KAAK,EAAE;AAAEC,sBAAAA,SAAS,EAAE,QAAb;AAAuBK,sBAAAA,eAAe,EAAE,CAAAF,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,YAAP,IAAsB,kBAAtB,GAA2C;AAAnF,qBAHT;AAAA,2CAKE,QAAC,UAAD;AAAY,sBAAA,OAAO,EAAC,IAApB;AAAyB,sBAAA,SAAS,EAAElD,OAAO,CAACmD,sBAA5C;AAAoE,sBAAA,KAAK,EAAE;AAAEP,wBAAAA,SAAS,EAAE;AAAb,uBAA3E;AAAA,gCACG,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEK,WAAP,IAAqBL,KAAK,CAACK,WAA3B,GAAyC;AAD5C;AAAA;AAAA;AAAA;AAAA;AALF;AAAA;AAAA;AAAA;AAAA,2BADF,eAUE,QAAC,GAAD;AAAK,oBAAA,EAAE,EAAE,CAAT;AAAY,oBAAA,SAAS,EAAEpD,OAAO,CAAC6C,SAA/B;AAAA,2CACE,QAAC,QAAD;AAAU,sBAAA,SAAS,MAAnB;AAAoB,sBAAA,OAAO,EAAE,CAA7B;AAAgC,sBAAA,cAAc,EAAC,QAA/C;AAAA,iCACG,CAAAE,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,OAAP,MAAkBN,KAAlB,aAAkBA,KAAlB,uBAAkBA,KAAK,CAAEO,MAAzB,KAAmC,EAACP,KAAD,aAACA,KAAD,uBAACA,KAAK,CAAEG,YAAR,CAAnC,gBACC,QAAC,QAAD;AAAU,wBAAA,IAAI,MAAd;AAAe,wBAAA,EAAE,EAAE,EAAnB;AAAA,+CACE,QAAC,UAAD;AAAY,0BAAA,OAAO,EAAC,IAApB;AAAyB,0BAAA,KAAK,EAAC,QAA/B;AAAwC,0BAAA,KAAK,EAAE;AAAEK,4BAAAA,YAAY,EAAE;AAAhB,2BAA/C;AAAA,oCACG/D,KAAK,CAACgE,MAAN,CAAaC,CAAb,CAAe,oBAAf;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,+BADD,GAMG,IAPN,eAQE,QAAC,QAAD;AAAU,wBAAA,IAAI,MAAd;AAAe,wBAAA,EAAE,EAAE,EAAnB;AAAuB,wBAAA,KAAK,EAAC,QAA7B;AAAA,+CACE,QAAC,UAAD;AAAY,0BAAA,OAAO,EAAC,IAApB;AAAyB,0BAAA,KAAK,EAAC,QAA/B;AAAwC,0BAAA,SAAS,EAAEzD,OAAO,CAACqD,OAA3D;AAAA,oCACG,CAAAN,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEG,YAAP,KAAuB,CAAAH,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEO,MAAP,MAAkB,KAAzC,gBACC;AAAA,oDACE,QAAC,OAAD;AAAS,8BAAA,KAAK,EAAC,gDAAf;AAAA,qDACE,QAAC,QAAD;AAAU,gCAAA,KAAK,EAAE;AAAEI,kCAAAA,KAAK,EAAE,kBAAT;AAA6BC,kCAAAA,QAAQ,EAAE,EAAvC;AAA2CC,kCAAAA,WAAW,EAAE;AAAxD;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qCADF,EAIGpE,KAAK,CAACgE,MAAN,CAAaC,CAAb,CAAe,gBAAf,CAJH;AAAA,0CADD,gBAQC;AAAA,uCACG,CAAAV,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEc,QAAP,IAAkBd,KAAK,CAACc,QAAxB,GAAmC,IADtC,EAEG,CAAAd,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEM,OAAP,IAAiBvC,YAAY,CAACiC,KAAK,CAACM,OAAP,CAA7B,GAA+C,IAFlD;AAAA;AATJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,+BARF,EAyBG,CAAAN,KAAK,SAAL,IAAAA,KAAK,WAAL,oCAAAA,KAAK,CAAEe,aAAP,8EAAsBC,MAAtB,IAA+B,CAA/B,gBACC;AAAA,+CACE,QAAC,QAAD;AAAU,0BAAA,IAAI,MAAd;AAAe,0BAAA,EAAE,EAAE,EAAnB;AAAuB,0BAAA,KAAK,EAAC,QAA7B;AAAA,iDACE,QAAC,GAAD;AAAK,4BAAA,EAAE,EAAE,CAAT;AAAY,4BAAA,SAAS,EAAE/D,OAAO,CAACgE,cAA/B;AAAA,mDACE,QAAC,QAAD;AAAU,8BAAA,SAAS,MAAnB;AAAoB,8BAAA,OAAO,EAAE,CAA7B;AAAgC,8BAAA,cAAc,EAAC,QAA/C;AAAA,wCACGjB,KADH,aACGA,KADH,uBACGA,KAAK,CAAEe,aAAP,CAAqBhB,GAArB,CAAyB,UAACmB,OAAD;AAAA,oDACxB,QAAC,WAAD;AAAiC,kCAAA,OAAO,EAAEA,OAA1C;AAAmD,kCAAA,OAAO,EAAEjE;AAA5D,mCAAkBiE,OAAO,CAACC,KAA1B;AAAA;AAAA;AAAA;AAAA,yCADwB;AAAA,+BAAzB;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF,uCADD,GAYG,IArCN;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,2BAVF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AARF,6BACgBlB,KADhB;AAAA;AAAA;AAAA;AAAA,mBADS;AAAA,SAAX;AAfJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADD,GAuFG;AAxFN,mBADF;AA4FD,CAjJD;;GAAMnD,gB;UAISZ,W,EACIA,W;;;KALbY,gB;AAmJN,eAAeA,gBAAf","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { selectUser } from 'stores';\r\n\r\nimport { FormGrid, Tooltip } from 'components';\r\nimport SummaryLine from './SummaryLine';\r\n\r\nimport * as utils from 'utils';\r\n// mui\r\nimport { Box, Typography, CircularProgress } from '@material-ui/core';\r\nimport InfoIcon from '@material-ui/icons/Info';\r\n\r\nconst RiskSummaryQuote = ({ allStepsCompleted, isFormValid, classes, riskValues, definitions, productType }) => {\r\n  const [quotes, setQuotes] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [error, setError] = useState(false);\r\n  const user = useSelector(selectUser);\r\n  const endpoint = useSelector((state) => get(state, 'config.vars.endpoint'));\r\n  const { auth } = user;\r\n\r\n  const formatNumber = (num) => {\r\n    return num.toString().replace(/(\\d)(?=(\\d{3})+(?!\\d))/g, '$1,');\r\n  };\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    isSubscribed && setIsLoading(true);\r\n    const fetchData = async () => {\r\n      try {\r\n        const riskData = {\r\n          ...utils.risk.parsedValues(utils.risk.filterConditionalValues(riskValues, definitions), definitions),\r\n          riskType: productType,\r\n        };\r\n        const response = await utils.api.post({\r\n          token: auth.accessToken,\r\n          endpoint: endpoint.auth,\r\n          path: `api/v1/risks/summary-quote`,\r\n          data: riskData,\r\n        });\r\n        const data = await utils.api.handleResponse(response);\r\n\r\n        if (isSubscribed) {\r\n          setQuotes(data);\r\n          setIsLoading(false);\r\n        }\r\n      } catch (err) {\r\n        setError(true);\r\n        const errorParams = {\r\n          file: 'RiskSummaryQuote.js',\r\n          message: 'API fetch error',\r\n        };\r\n\r\n        utils.api.handleError(err, errorParams);\r\n      }\r\n    };\r\n\r\n    if (allStepsCompleted && isFormValid && utils.generic.isValidObject(riskValues) && !isEmpty(riskValues)) {\r\n      fetchData();\r\n    }\r\n\r\n    return () => (isSubscribed = false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [allStepsCompleted, JSON.stringify(riskValues), productType, isFormValid]);\r\n\r\n  return (\r\n    <>\r\n      {allStepsCompleted && isFormValid && !error ? (\r\n        <FormGrid item xs={12} sm={12} style={{ justifyContent: 'center' }}>\r\n          <FormGrid container spacing={3} justifyContent=\"center\">\r\n            {isLoading ? (\r\n              <FormGrid item xs={6} sm={4} style={{ justifyContent: 'center' }} data-testid=\"loading\">\r\n                <FormGrid container spacing={3} justifyContent=\"center\">\r\n                  <FormGrid item xs={12}>\r\n                    <Box className={classes.card}>\r\n                      <Box p={2} className={classes.cardPolicyTitle} style={{ textAlign: 'center' }}></Box>\r\n                      <Box p={2} className={classes.policyBox} style={{ textAlign: 'center' }}>\r\n                        <CircularProgress />\r\n                      </Box>\r\n                    </Box>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            ) : (\r\n              quotes.map((quote, index) => (\r\n                <FormGrid\r\n                  key={`quote-${index}`}\r\n                  item\r\n                  xs={6}\r\n                  sm={4}\r\n                  style={{ justifyContent: 'center' }}\r\n                  data-testid={`summary-quote-${index}`}\r\n                >\r\n                  <FormGrid container spacing={3} justifyContent=\"center\">\r\n                    <FormGrid item xs={12}>\r\n                      <Box className={classes.card}>\r\n                        <Box\r\n                          p={2}\r\n                          className={classes.cardPolicyTitle}\r\n                          style={{ textAlign: 'center', backgroundColor: quote?.hasReferrals ? 'rgb(237, 172, 0)' : 'rgb(9, 169, 237)' }}\r\n                        >\r\n                          <Typography variant=\"h3\" className={classes.cardPolicyTitleHeading} style={{ textAlign: 'center' }}>\r\n                            {quote?.carrierName ? quote.carrierName : null}\r\n                          </Typography>\r\n                        </Box>\r\n                        <Box pt={2} className={classes.policyBox}>\r\n                          <FormGrid container spacing={1} justifyContent=\"center\">\r\n                            {quote?.premium && quote?.quoted && !quote?.hasReferrals ? (\r\n                              <FormGrid item xs={12}>\r\n                                <Typography variant=\"h4\" align=\"center\" style={{ marginBottom: 0 }}>\r\n                                  {utils.string.t('risks.grossPremium')}\r\n                                </Typography>\r\n                              </FormGrid>\r\n                            ) : null}\r\n                            <FormGrid item xs={12} align=\"center\">\r\n                              <Typography variant=\"h1\" align=\"center\" className={classes.premium}>\r\n                                {quote?.hasReferrals || quote?.quoted === false ? (\r\n                                  <>\r\n                                    <Tooltip title=\"Submit the risk to view the referral reason(s)\">\r\n                                      <InfoIcon style={{ color: 'rgb(237, 172, 0)', fontSize: 24, marginRight: 10 }} />\r\n                                    </Tooltip>\r\n                                    {utils.string.t('risks.referral')}\r\n                                  </>\r\n                                ) : (\r\n                                  <>\r\n                                    {quote?.currency ? quote.currency : null}\r\n                                    {quote?.premium ? formatNumber(quote.premium) : null}\r\n                                  </>\r\n                                )}\r\n                              </Typography>\r\n                            </FormGrid>\r\n                            {quote?.summaryValues?.length > 0 ? (\r\n                              <>\r\n                                <FormGrid item xs={12} align=\"center\">\r\n                                  <Box py={2} className={classes.quoteValuesBox}>\r\n                                    <FormGrid container spacing={1} justifyContent=\"center\">\r\n                                      {quote?.summaryValues.map((summary) => (\r\n                                        <SummaryLine key={summary.title} summary={summary} classes={classes} />\r\n                                      ))}\r\n                                    </FormGrid>\r\n                                  </Box>\r\n                                </FormGrid>\r\n                              </>\r\n                            ) : null}\r\n                          </FormGrid>\r\n                        </Box>\r\n                      </Box>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              ))\r\n            )}\r\n          </FormGrid>\r\n        </FormGrid>\r\n      ) : null}\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RiskSummaryQuote;\r\n"]},"metadata":{},"sourceType":"module"}