{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ModellingTable\\\\ModellingTable.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport * as constants from 'consts';\nimport styles from './ModellingTable.styles';\nimport { Status, TableCell, TableHead, Translate, PopoverMenu, DocumentTable } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModellingTableView.propTypes = {\n  selectedId: PropTypes.number,\n  modellingList: PropTypes.array.isRequired,\n  handleClickRow: PropTypes.func.isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  }),\n  cols: PropTypes.array.isRequired,\n  popoverActions: PropTypes.array.isRequired\n};\nexport function ModellingTableView(_ref) {\n  var _this = this;\n\n  var selectedId = _ref.selectedId,\n      popoverActions = _ref.popoverActions,\n      _ref$modellingList = _ref.modellingList,\n      modellingList = _ref$modellingList === void 0 ? [] : _ref$modellingList,\n      handleClickRow = _ref.handleClickRow,\n      sort = _ref.sort,\n      cols = _ref.cols;\n  var classes = makeStyles(styles, {\n    name: 'ModellingTable'\n  })();\n\n  var tableRowClasses = _defineProperty({}, classes.hover, handleClickRow && utils.generic.isFunction(handleClickRow));\n\n  return /*#__PURE__*/_jsxDEV(Table, {\n    size: \"small\",\n    children: [/*#__PURE__*/_jsxDEV(TableHead, {\n      columns: cols,\n      sorting: sort\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n      \"data-testid\": \"modelling-list\",\n      children: modellingList.map(function (modellingTask, index) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(TableRow, {\n            onClick: function onClick() {\n              return handleClickRow(modellingTask.id);\n            },\n            className: classnames(tableRowClasses, _defineProperty({}, classes.selectedRow, selectedId === modellingTask.id)),\n            hover: true,\n            \"data-testid\": \"modelling-row-\".concat(modellingTask.id),\n            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n              nestedClasses: {\n                root: classes.idCell\n              },\n              \"data-testid\": \"modelling-insured-id\",\n              children: modellingTask.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"modelling-insured-cell\",\n              children: modellingTask.insured && modellingTask.insured.name\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              nowrap: true,\n              \"data-testid\": \"modelling-dueDate-cell\",\n              children: utils.string.t('format.date', {\n                value: {\n                  date: modellingTask.dueDate,\n                  format: config.ui.format.date.text\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"modelling-notes-cell\",\n              children: modellingTask.notes\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n              \"data-testid\": \"modelling-status-cell\",\n              children: /*#__PURE__*/_jsxDEV(Status, {\n                size: \"sm\",\n                text: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"status.\".concat(utils.string.replaceLowerCase(modellingTask.status))\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, _this),\n                status: utils.string.replaceLowerCase(modellingTask.status)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 17\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this), popoverActions.length > 0 && /*#__PURE__*/_jsxDEV(TableCell, {\n              menu: true,\n              \"data-testid\": \"modelling-edit-cell\",\n              children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                id: \"modelling-table-popover\",\n                data: {\n                  modellingTask: modellingTask\n                },\n                items: popoverActions\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 64,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, _this), selectedId === modellingTask.id && /*#__PURE__*/_jsxDEV(DocumentTable, {\n            documentTypeId: selectedId,\n            documentType: constants.FOLDER_MODELLING\n          }, \"document-table-\".concat(index), false, {\n            fileName: _jsxFileName,\n            lineNumber: 69,\n            columnNumber: 15\n          }, _this)]\n        }, \"modelling-table-row-\".concat(index), true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n_c = ModellingTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ModellingTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ModellingTable/ModellingTable.view.js"],"names":["React","Fragment","PropTypes","classnames","constants","styles","Status","TableCell","TableHead","Translate","PopoverMenu","DocumentTable","utils","config","Table","TableRow","TableBody","makeStyles","ModellingTableView","propTypes","selectedId","number","modellingList","array","isRequired","handleClickRow","func","sort","shape","by","string","type","direction","cols","popoverActions","classes","name","tableRowClasses","hover","generic","isFunction","map","modellingTask","index","id","selectedRow","root","idCell","insured","t","value","date","dueDate","format","ui","text","notes","replaceLowerCase","status","length","FOLDER_MODELLING"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport * as constants from 'consts';\r\nimport styles from './ModellingTable.styles';\r\nimport { Status, TableCell, TableHead, Translate, PopoverMenu, DocumentTable } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Table, TableRow, TableBody, makeStyles } from '@material-ui/core';\r\n\r\nModellingTableView.propTypes = {\r\n  selectedId: PropTypes.number,\r\n  modellingList: PropTypes.array.isRequired,\r\n  handleClickRow: PropTypes.func.isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }),\r\n  cols: PropTypes.array.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function ModellingTableView({ selectedId, popoverActions, modellingList = [], handleClickRow, sort, cols }) {\r\n  const classes = makeStyles(styles, { name: 'ModellingTable' })();\r\n\r\n  const tableRowClasses = {\r\n    [classes.hover]: handleClickRow && utils.generic.isFunction(handleClickRow),\r\n  };\r\n\r\n  return (\r\n    <Table size=\"small\">\r\n      <TableHead columns={cols} sorting={sort} />\r\n      <TableBody data-testid=\"modelling-list\">\r\n        {modellingList.map((modellingTask, index) => (\r\n          <Fragment key={`modelling-table-row-${index}`}>\r\n            <TableRow\r\n              onClick={() => handleClickRow(modellingTask.id)}\r\n              className={classnames(tableRowClasses, { [classes.selectedRow]: selectedId === modellingTask.id })}\r\n              hover\r\n              data-testid={`modelling-row-${modellingTask.id}`}\r\n            >\r\n              <TableCell nestedClasses={{ root: classes.idCell }} data-testid={`modelling-insured-id`}>\r\n                {modellingTask.id}\r\n              </TableCell>\r\n              <TableCell data-testid={`modelling-insured-cell`}>{modellingTask.insured && modellingTask.insured.name}</TableCell>\r\n              <TableCell nowrap data-testid={`modelling-dueDate-cell`}>\r\n                {utils.string.t('format.date', { value: { date: modellingTask.dueDate, format: config.ui.format.date.text } })}\r\n              </TableCell>\r\n              <TableCell data-testid={`modelling-notes-cell`}>{modellingTask.notes}</TableCell>\r\n              <TableCell data-testid={`modelling-status-cell`}>\r\n                <Status\r\n                  size=\"sm\"\r\n                  text={<Translate label={`status.${utils.string.replaceLowerCase(modellingTask.status)}`} />}\r\n                  status={utils.string.replaceLowerCase(modellingTask.status)}\r\n                />\r\n              </TableCell>\r\n              {popoverActions.length > 0 && (\r\n                <TableCell menu data-testid={`modelling-edit-cell`}>\r\n                  <PopoverMenu id=\"modelling-table-popover\" data={{ modellingTask }} items={popoverActions} />\r\n                </TableCell>\r\n              )}\r\n            </TableRow>\r\n            {selectedId === modellingTask.id && (\r\n              <DocumentTable key={`document-table-${index}`} documentTypeId={selectedId} documentType={constants.FOLDER_MODELLING} />\r\n            )}\r\n          </Fragment>\r\n        ))}\r\n      </TableBody>\r\n    </Table>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}