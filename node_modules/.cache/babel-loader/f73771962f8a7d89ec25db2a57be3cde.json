{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { Button, FormActions, FormCheckbox, FormContainer, FormFields } from 'components';\nimport { withKnobs, boolean as _boolean, text, select } from '@storybook/addon-knobs';\nimport * as utils from 'utils';\nimport { useForm, Controller } from 'react-hook-form';\nimport { Box, Grid } from '@material-ui/core';\nimport xor from 'lodash/xor';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'FormCheckbox',\n  component: FormCheckbox,\n  decorators: [withKnobs]\n};\nexport var Checkbox = function Checkbox() {\n  _s();\n\n  var type = select('Type', ['single value', 'single option', 'multiple options'], 'single value'); // prettier-ignore\n\n  var fields = [{\n    name: 'single value',\n    type: 'checkbox',\n    value: false,\n    label: \"Banana\",\n    title: \"Single Value\",\n    muiComponentProps: {\n      onChange: function onChange(name, value) {\n        console.log('[Single Value]', name, value);\n      }\n    }\n  }, {\n    name: 'single option',\n    type: 'checkbox',\n    title: 'Single Option',\n    options: [{\n      label: 'Apple',\n      name: 'apple',\n      value: false\n    }],\n    value: ['apple'],\n    muiComponentProps: {\n      onChange: function onChange(group, name, value) {\n        console.log('[Single Option]', group, name, value);\n      }\n    }\n  }, {\n    name: 'multiple options',\n    type: 'checkbox',\n    title: 'Multiple Options',\n    options: [{\n      label: 'Grapes',\n      name: 'grapes',\n      value: false\n    }, {\n      label: 'Kiwi',\n      name: 'kiwi',\n      value: false\n    }, {\n      label: 'Lime',\n      name: 'lime',\n      value: true\n    }, {\n      label: 'Lemon',\n      name: 'lemon',\n      value: true,\n      disabled: true\n    }, {\n      label: 'Orange',\n      name: 'orange',\n      value: false\n    }, {\n      label: 'Pineapple',\n      name: 'pineapple',\n      value: false\n    }],\n    value: ['lime', 'lemon'],\n    muiComponentProps: {\n      onChange: function onChange(group, name, value) {\n        console.log('[Multiple Options]', group, name, value);\n      }\n    }\n  }];\n\n  var _useState = useState({\n    'single value': false,\n    'single option': [],\n    'multiple options': ['lime', 'lemon']\n  }),\n      _useState2 = _slicedToArray(_useState, 2),\n      checkbox = _useState2[0],\n      setCheckbox = _useState2[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit;\n\n  useEffect(function () {\n    reset(defaultValues);\n  }, [type] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var color = select('Color', ['primary', 'secondary'], 'primary');\n\n  var row = _boolean('Row', false);\n\n  var hint = text('Hint', 'Select at least one option...');\n  var error = _boolean('Error', false) ? {\n    message: 'Dummy error',\n    type: 'required'\n  } : undefined;\n\n  var submitHandler = function submitHandler(values) {\n    console.log('[submit] with RHF control', values);\n  };\n\n  var submitHandlerNoControl = function submitHandlerNoControl(type) {\n    return function (event) {\n      event.preventDefault();\n      console.log('[submit] no control', type, checkbox[type]);\n    };\n  };\n\n  var arrayWithoutValue = function arrayWithoutValue(arr, value) {\n    return arr.filter(function (a) {\n      return a !== value;\n    });\n  };\n\n  var handleChange = function handleChange(name, option) {};\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          onSubmit: handleSubmit(submitHandler),\n          children: [/*#__PURE__*/_jsxDEV(FormFields, {\n            children: [/*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({\n              control: control,\n              register: register,\n              watch: watch\n            }, fields[0]), {}, {\n              hint: hint,\n              error: error,\n              color: color\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: fields[1].name,\n              control: control,\n              register: register,\n              watch: watch,\n              error: error,\n              hint: hint,\n              color: color,\n              render: function render(_ref) {\n                var field = _ref.field;\n                return /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, field), {}, {\n                  options: fields[1].options\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 40\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: fields[2].name,\n              control: control,\n              register: register,\n              watch: watch,\n              error: error,\n              hint: hint,\n              color: color,\n              render: function render(_ref2) {\n                var field = _ref2.field;\n                return /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, field), {}, {\n                  options: fields[2].options\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 126,\n                  columnNumber: 40\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormActions, {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: \"With Control\",\n              type: \"submit\",\n              color: \"primary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 6,\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          onSubmit: submitHandlerNoControl(type),\n          children: [/*#__PURE__*/_jsxDEV(FormFields, {\n            children: [/*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, fields[0]), {}, {\n              value: checkbox.noOption,\n              hint: hint,\n              error: error,\n              color: color,\n              muiComponentProps: {\n                onChange: function onChange() {\n                  return handleChange(fields[0].name, !checkbox.noOption);\n                }\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: fields[1].name,\n              control: control,\n              register: register,\n              watch: watch,\n              error: error,\n              hint: hint,\n              color: color,\n              render: function render(_ref3) {\n                var field = _ref3.field;\n                return /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, field), {}, {\n                  value: checkbox.singleOption,\n                  options: fields[1].options,\n                  muiComponentProps: {\n                    onChange: function onChange() {\n                      return handleChange(fields[1].name, checkbox.singleOption.includes(fields[1].options[0].value) ? [] : [fields[1].options[0].value]);\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, _this), /*#__PURE__*/_jsxDEV(Controller, {\n              name: fields[2].name,\n              control: control,\n              register: register,\n              watch: watch,\n              error: error,\n              hint: hint,\n              color: color,\n              render: function render(_ref4) {\n                var field = _ref4.field;\n                return /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, field), {}, {\n                  value: checkbox.singleOption,\n                  options: fields[2].options,\n                  muiFormGroupProps: {\n                    row: row\n                  },\n                  muiComponentProps: {\n                    onChange: function onChange(_ref5, checked) {\n                      var target = _ref5.target;\n                      var arrayClean = arrayWithoutValue(checkbox.multipleOptions, target.value);\n                      var newValue = checked ? [].concat(_toConsumableArray(arrayClean), [target.value]) : arrayClean;\n                      return handleChange(fields[2].name, newValue);\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 180,\n                  columnNumber: 19\n                }, _this);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 15\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormActions, {\n            align: \"left\",\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: \"Without Control\",\n              type: \"submit\",\n              color: \"secondary\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Checkbox, \"qvjzM8+AskyfDw4+MiNNSB439Dc=\", false, function () {\n  return [useForm];\n});\n\nCheckbox.displayName = \"Checkbox\";\n_c = Checkbox;\nCheckbox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Checkbox\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\"] = {\n    name: \"Checkbox\",\n    docgenInfo: Checkbox.__docgenInfo,\n    path: \"src\\\\components\\\\FormCheckbox\\\\FormCheckbox.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Checkbox\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormCheckbox/FormCheckbox.stories.js"],"names":["React","useEffect","useState","Button","FormActions","FormCheckbox","FormContainer","FormFields","withKnobs","boolean","text","select","utils","useForm","Controller","Box","Grid","xor","title","component","decorators","Checkbox","type","fields","name","value","label","muiComponentProps","onChange","console","log","options","group","disabled","checkbox","setCheckbox","defaultValues","form","getInitialValues","control","register","watch","reset","handleSubmit","color","row","hint","error","message","undefined","submitHandler","values","submitHandlerNoControl","event","preventDefault","arrayWithoutValue","arr","filter","a","handleChange","option","field","noOption","singleOption","includes","checked","target","arrayClean","multipleOptions","newValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { Button, FormActions, FormCheckbox, FormContainer, FormFields } from 'components';\r\nimport { withKnobs, boolean, text, select } from '@storybook/addon-knobs';\r\nimport * as utils from 'utils';\r\nimport { useForm, Controller } from 'react-hook-form';\r\nimport { Box, Grid } from '@material-ui/core';\r\nimport xor from 'lodash/xor';\r\n\r\nexport default {\r\n  title: 'FormCheckbox',\r\n  component: FormCheckbox,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Checkbox = () => {\r\n  const type = select('Type', ['single value', 'single option', 'multiple options'], 'single value');\r\n\r\n  // prettier-ignore\r\n  const fields = [\r\n    {\r\n      name: 'single value',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: \"Banana\",\r\n      title: \"Single Value\",\r\n      muiComponentProps: {\r\n        onChange: (name, value) => {\r\n          console.log('[Single Value]', name, value);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'single option',\r\n      type: 'checkbox',\r\n      title: 'Single Option',\r\n      options: [\r\n        { label: 'Apple', name: 'apple', value: false },\r\n      ],\r\n      value: ['apple'],\r\n      muiComponentProps: {\r\n        onChange: (group, name, value) => {\r\n          console.log('[Single Option]', group, name, value);\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'multiple options',\r\n      type: 'checkbox',\r\n      title: 'Multiple Options',\r\n      options: [\r\n        { label: 'Grapes', name: 'grapes', value: false },\r\n        { label: 'Kiwi', name: 'kiwi', value: false },\r\n        { label: 'Lime', name: 'lime', value: true },\r\n        { label: 'Lemon', name: 'lemon', value: true, disabled: true },\r\n        { label: 'Orange', name: 'orange', value: false },\r\n        { label: 'Pineapple', name: 'pineapple', value: false },\r\n      ],\r\n      value: ['lime', 'lemon'],\r\n      muiComponentProps: {\r\n        onChange: (group, name, value) => {\r\n          console.log('[Multiple Options]', group, name, value);\r\n        },\r\n      },\r\n    }\r\n  ];\r\n\r\n  const [checkbox, setCheckbox] = useState({\r\n    'single value': false,\r\n    'single option': [],\r\n    'multiple options': ['lime', 'lemon'],\r\n  });\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const { control, register, watch, reset, handleSubmit } = useForm({ defaultValues });\r\n\r\n  useEffect(\r\n    () => {\r\n      reset(defaultValues);\r\n    },\r\n    [type] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const color = select('Color', ['primary', 'secondary'], 'primary');\r\n  const row = boolean('Row', false);\r\n  const hint = text('Hint', 'Select at least one option...');\r\n  const error = boolean('Error', false) ? { message: 'Dummy error', type: 'required' } : undefined;\r\n\r\n  const submitHandler = (values) => {\r\n    console.log('[submit] with RHF control', values);\r\n  };\r\n\r\n  const submitHandlerNoControl = (type) => (event) => {\r\n    event.preventDefault();\r\n    console.log('[submit] no control', type, checkbox[type]);\r\n  };\r\n\r\n  const arrayWithoutValue = (arr, value) => {\r\n    return arr.filter((a) => a !== value);\r\n  };\r\n  const handleChange = (name, option) => {};\r\n  return (\r\n    <Box width={1}>\r\n      <Grid container>\r\n        <Grid item xs={6}>\r\n          <FormContainer onSubmit={handleSubmit(submitHandler)}>\r\n            <FormFields>\r\n              <FormCheckbox control={control} register={register} watch={watch} {...fields[0]} hint={hint} error={error} color={color} />\r\n              <Controller\r\n                name={fields[1].name}\r\n                control={control}\r\n                register={register}\r\n                watch={watch}\r\n                error={error}\r\n                hint={hint}\r\n                color={color}\r\n                render={({ field }) => <FormCheckbox {...field} options={fields[1].options} />}\r\n              />\r\n              <Controller\r\n                name={fields[2].name}\r\n                control={control}\r\n                register={register}\r\n                watch={watch}\r\n                error={error}\r\n                hint={hint}\r\n                color={color}\r\n                render={({ field }) => <FormCheckbox {...field} options={fields[2].options} />}\r\n              />\r\n            </FormFields>\r\n\r\n            <FormActions align=\"left\">\r\n              <Button text=\"With Control\" type=\"submit\" color=\"primary\" />\r\n            </FormActions>\r\n          </FormContainer>\r\n        </Grid>\r\n        <Grid item xs={6}>\r\n          <FormContainer onSubmit={submitHandlerNoControl(type)}>\r\n            <FormFields>\r\n              <FormCheckbox\r\n                {...fields[0]}\r\n                value={checkbox.noOption}\r\n                hint={hint}\r\n                error={error}\r\n                color={color}\r\n                muiComponentProps={{\r\n                  onChange: () => handleChange(fields[0].name, !checkbox.noOption),\r\n                }}\r\n              />\r\n              <Controller\r\n                name={fields[1].name}\r\n                control={control}\r\n                register={register}\r\n                watch={watch}\r\n                error={error}\r\n                hint={hint}\r\n                color={color}\r\n                render={({ field }) => (\r\n                  <FormCheckbox\r\n                    {...field}\r\n                    value={checkbox.singleOption}\r\n                    options={fields[1].options}\r\n                    muiComponentProps={{\r\n                      onChange: () =>\r\n                        handleChange(\r\n                          fields[1].name,\r\n                          checkbox.singleOption.includes(fields[1].options[0].value) ? [] : [fields[1].options[0].value]\r\n                        ),\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n              <Controller\r\n                name={fields[2].name}\r\n                control={control}\r\n                register={register}\r\n                watch={watch}\r\n                error={error}\r\n                hint={hint}\r\n                color={color}\r\n                render={({ field }) => (\r\n                  <FormCheckbox\r\n                    {...field}\r\n                    value={checkbox.singleOption}\r\n                    options={fields[2].options}\r\n                    muiFormGroupProps={{ row: row }}\r\n                    muiComponentProps={{\r\n                      onChange: ({ target }, checked) => {\r\n                        const arrayClean = arrayWithoutValue(checkbox.multipleOptions, target.value);\r\n                        const newValue = checked ? [...arrayClean, target.value] : arrayClean;\r\n                        return handleChange(fields[2].name, newValue);\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n              />\r\n            </FormFields>\r\n\r\n            <FormActions align=\"left\">\r\n              <Button text=\"Without Control\" type=\"submit\" color=\"secondary\" />\r\n            </FormActions>\r\n          </FormContainer>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}