{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport flatten from 'lodash/flatten';\nimport get from 'lodash/get';\nimport upperCase from 'lodash/upperCase'; // app\n\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { processingInstructionsSchema } from 'schemas';\nexport var getData = function getData(_ref) {\n  var _processingInstructio, _processingInstructio2;\n\n  var _ref$processingInstru = _ref.processingInstruction,\n      processingInstruction = _ref$processingInstru === void 0 ? {} : _ref$processingInstru,\n      departmentName = _ref.departmentName,\n      _ref$frontEndContactN = _ref.frontEndContactName,\n      frontEndContactName = _ref$frontEndContactN === void 0 ? '' : _ref$frontEndContactN,\n      _ref$authorizedSignat = _ref.authorizedSignatoryName,\n      authorizedSignatoryName = _ref$authorizedSignat === void 0 ? '' : _ref$authorizedSignat,\n      _ref$accountExecutive = _ref.accountExecutiveName,\n      accountExecutiveName = _ref$accountExecutive === void 0 ? '' : _ref$accountExecutive,\n      _ref$producingBrokerN = _ref.producingBrokerName,\n      producingBrokerName = _ref$producingBrokerN === void 0 ? '' : _ref$producingBrokerN,\n      retainedBrokerageAmountForPdf = _ref.retainedBrokerageAmountForPdf,\n      totalAmountForPdf = _ref.totalAmountForPdf,\n      refDataCurrencies = _ref.refDataCurrencies;\n  var labels = helpers.getLabels();\n  var leadRiskRefNumber = utils.generic.isValidArray(processingInstruction === null || processingInstruction === void 0 ? void 0 : processingInstruction.riskReferences, true) && (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio = processingInstruction.riskReferences) === null || _processingInstructio === void 0 ? void 0 : (_processingInstructio2 = _processingInstructio.find(function (r) {\n    return r.leadPolicy;\n  })) === null || _processingInstructio2 === void 0 ? void 0 : _processingInstructio2.riskRefId) || '';\n  var leadRiskRefDetails = leadRiskRefNumber && processingInstruction.financialChecklistDetails.find(function (a) {\n    return a.riskReference === leadRiskRefNumber;\n  });\n  if (!processingInstruction) return;\n  return {\n    labels: labels,\n    tableHeader: helpers.createHeader(),\n    summaryBody: helpers.createSummaryBody(processingInstruction, departmentName, frontEndContactName, accountExecutiveName, producingBrokerName),\n    checklistBody: flatten(['prePlacing', 'mrc', 'otherDetails'].map(function (sectionKey) {\n      return helpers.createChecklistBody(processingInstruction, sectionKey, false);\n    })),\n    instructionBody: helpers.createInstructionBody(processingInstruction, retainedBrokerageAmountForPdf, totalAmountForPdf, refDataCurrencies, leadRiskRefDetails),\n    specialBody: helpers.createSpecialBody(processingInstruction),\n    attachedDocumentBody: helpers.createAttachedDocumemtBody(processingInstruction),\n    approvalBody: helpers.createApprovalBody(processingInstruction, frontEndContactName, authorizedSignatoryName)\n  };\n};\nvar helpers = {\n  getSettlementCurrency: function getSettlementCurrency(id, refDataCurrencies) {\n    var _refDataCurrencies$fi;\n\n    return (_refDataCurrencies$fi = refDataCurrencies.find(function (ref) {\n      return ref.currencyCodeID === id;\n    })) === null || _refDataCurrencies$fi === void 0 ? void 0 : _refDataCurrencies$fi.currencyCd;\n  },\n  getPaymentBasis: function getPaymentBasis(id) {\n    var _paymentBasisOptions$;\n\n    var paymentBasisOptions = [{\n      id: 1,\n      code: 'cash',\n      name: 'Cash'\n    }, {\n      id: 2,\n      code: 'quaterly',\n      name: 'Quaterly'\n    }, {\n      id: 3,\n      code: 'otherDeferred',\n      name: 'Other Deferred'\n    }];\n    return (_paymentBasisOptions$ = paymentBasisOptions.find(function (p) {\n      return p.id === id;\n    })) === null || _paymentBasisOptions$ === void 0 ? void 0 : _paymentBasisOptions$.name;\n  },\n  getPpwOrPpc: function getPpwOrPpc(id) {\n    var _ppwOrPpcOptions$find;\n\n    var ppwOrPpcOptions = [{\n      id: 1,\n      code: 'ppw',\n      name: 'PPW',\n      value: 1\n    }, {\n      id: 2,\n      code: 'ppc',\n      name: 'PPC',\n      value: 2\n    }, {\n      id: 3,\n      code: 'na',\n      name: 'N/A',\n      value: 3\n    }];\n    return (_ppwOrPpcOptions$find = ppwOrPpcOptions.find(function (p) {\n      return p.id === id;\n    })) === null || _ppwOrPpcOptions$find === void 0 ? void 0 : _ppwOrPpcOptions$find.name;\n  },\n  getMultiToggleLabel: function getMultiToggleLabel(value) {\n    if (!value) return;\n    var newValue = '';\n\n    if (value === constants.PI_TOGGLE_ID_YES) {\n      return newValue = utils.string.t('app.yes');\n    }\n\n    if (value === constants.PI_TOGGLE_ID_NO) {\n      return newValue = utils.string.t('app.no');\n    }\n\n    if (value === constants.PI_TOGGLE_ID_NA) {\n      return newValue = utils.string.t('app.na');\n    }\n\n    return newValue;\n  },\n  createHeader: function createHeader() {\n    return [['processingInstructionDetails', 'frontEndContact', 'authorisedSignatory'].map(function (headerKey) {\n      return helpers.getHeaderLabel(headerKey);\n    })];\n  },\n  createChecklistBody: function createChecklistBody(processingInstruction, sectionKey, subHeader) {\n    if (!processingInstruction) return [];\n    var rows = get(processingInstructionsSchema, \"content.\".concat(sectionKey));\n    if (!rows || !Array.isArray(rows)) return [];\n    var data = rows.map(function (row) {\n      var item = processingInstruction.checklist.find(function (item) {\n        return item.checkListDetails === row.rowKey;\n      }) || {};\n      var labelColumn = \"\".concat(helpers.getRowLabel(sectionKey, row.rowKey));\n      return [item.signedDate ? \"\".concat(labelColumn, \" (\").concat(utils.string.t('format.date', {\n        value: {\n          date: item.signedDate,\n          format: config.ui.format.date.text\n        }\n      }), \")\") : labelColumn, upperCase(helpers.renderAccountHandler(item.accountHandler, row, processingInstruction.checklist)).replace(/ /g, '/'), item.authorisedSignatory ? utils.string.t('app.authorised') : '-'];\n    });\n    return [[{\n      colSpan: 3,\n      content: subHeader ? helpers.getSectionSubHeader(sectionKey) : helpers.getSectionLabel(sectionKey)\n    }]].concat(_toConsumableArray(data));\n  },\n  createInstructionBody: function createInstructionBody(processingInstruction, retainedBrokerageAmountForPdf, totalAmountForPdf, refDataCurrencies, leadRiskRefDetails) {\n    var _processingInstructio3, _processingInstructio4, _processingInstructio5, _processingInstructio6, _utils$processingInst, _processingInstructio7, _utils$processingInst2, _processingInstructio8, _utils$processingInst3, _processingInstructio9, _utils$processingInst4, _processingInstructio10, _utils$processingInst5, _processingInstructio11, _utils$processingInst6, _processingInstructio12, _utils$processingInst7, _processingInstructio13, _utils$processingInst8, _processingInstructio14, _utils$processingInst9, _processingInstructio15, _processingInstructio16, _processingInstructio17, _processingInstructio18, _retainedBrokerageAmo, _retainedBrokerageAmo2, _retainedBrokerageAmo3, _processingInstructio19, _processingInstructio20, _utils$processingInst10, _processingInstructio21, _utils$processingInst11, _processingInstructio22, _utils$processingInst12, _processingInstructio23, _utils$processingInst13, _processingInstructio24, _utils$processingInst14, _utils$processingInst15, _utils$processingInst16, _processingInstructio25;\n\n    if (!processingInstruction) return [];\n    var premiumTaxCalSheetAttach = helpers.getMultiToggleLabel(processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio3 = processingInstruction.details) === null || _processingInstructio3 === void 0 ? void 0 : _processingInstructio3.premiumTaxCalculationSheetAttached);\n    var signedLinesCalAttach = helpers.getMultiToggleLabel(processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio4 = processingInstruction.details) === null || _processingInstructio4 === void 0 ? void 0 : _processingInstructio4.signedLinesCalculationSheetAttached);\n    return [[utils.string.t('processingInstructions.pdf.instructionLabels.piPageSubHeader')], [utils.string.t('processingInstructions.pdf.instructionLabels.premiumAndTaxCalSheetAttach'), premiumTaxCalSheetAttach ? premiumTaxCalSheetAttach : utils.string.t('app.no'), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio5 = processingInstruction.details) === null || _processingInstructio5 === void 0 ? void 0 : _processingInstructio5.premiumTaxAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.signedLinesCalAttach'), signedLinesCalAttach ? signedLinesCalAttach : utils.string.t('app.no'), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio6 = processingInstruction.details) === null || _processingInstructio6 === void 0 ? void 0 : _processingInstructio6.signedLinesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.grossPremium'), (_utils$processingInst = utils.processingInstructions.getFinancialField(processingInstruction, 'grossPremiumAmount')) === null || _utils$processingInst === void 0 ? void 0 : _utils$processingInst.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio7 = processingInstruction.details) === null || _processingInstructio7 === void 0 ? void 0 : _processingInstructio7.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.slipOrder'), (_utils$processingInst2 = utils.processingInstructions.getFinancialField(processingInstruction, 'slipOrder')) === null || _utils$processingInst2 === void 0 ? void 0 : _utils$processingInst2.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio8 = processingInstruction.details) === null || _processingInstructio8 === void 0 ? void 0 : _processingInstructio8.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.totalBrokerage'), (_utils$processingInst3 = utils.processingInstructions.getFinancialField(processingInstruction, 'totalBrokerage')) === null || _utils$processingInst3 === void 0 ? void 0 : _utils$processingInst3.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio9 = processingInstruction.details) === null || _processingInstructio9 === void 0 ? void 0 : _processingInstructio9.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.splitAsFollows'), '', '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.clientDiscount'), (_utils$processingInst4 = utils.processingInstructions.getFinancialField(processingInstruction, 'clientDiscount')) === null || _utils$processingInst4 === void 0 ? void 0 : _utils$processingInst4.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio10 = processingInstruction.details) === null || _processingInstructio10 === void 0 ? void 0 : _processingInstructio10.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.thirdPartyCommSharing'), (_utils$processingInst5 = utils.processingInstructions.getFinancialField(processingInstruction, constants.THIRD_PARTY)) === null || _utils$processingInst5 === void 0 ? void 0 : _utils$processingInst5.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio11 = processingInstruction.details) === null || _processingInstructio11 === void 0 ? void 0 : _processingInstructio11.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.thirdPartyName'), (_utils$processingInst6 = utils.processingInstructions.getFinancialField(processingInstruction, constants.THIRD_PARTY)) === null || _utils$processingInst6 === void 0 ? void 0 : _utils$processingInst6.stringValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio12 = processingInstruction.details) === null || _processingInstructio12 === void 0 ? void 0 : _processingInstructio12.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.pfInternalCommissionSharing'), (_utils$processingInst7 = utils.processingInstructions.getFinancialField(processingInstruction, 'pfinternal')) === null || _utils$processingInst7 === void 0 ? void 0 : _utils$processingInst7.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio13 = processingInstruction.details) === null || _processingInstructio13 === void 0 ? void 0 : _processingInstructio13.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.pfInternalDeptName'), (_utils$processingInst8 = utils.processingInstructions.getFinancialField(processingInstruction, constants.PF_INTERNAL)) === null || _utils$processingInst8 === void 0 ? void 0 : _utils$processingInst8.stringValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio14 = processingInstruction.details) === null || _processingInstructio14 === void 0 ? void 0 : _processingInstructio14.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokerage'), (_utils$processingInst9 = utils.processingInstructions.getFinancialField(processingInstruction, 'retainedBrokerage')) === null || _utils$processingInst9 === void 0 ? void 0 : _utils$processingInst9.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio15 = processingInstruction.details) === null || _processingInstructio15 === void 0 ? void 0 : _processingInstructio15.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokerageAmount'), \"\".concat((processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio16 = processingInstruction.details) === null || _processingInstructio16 === void 0 ? void 0 : _processingInstructio16.retainedBrokerageCurrencyCode) ? processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio17 = processingInstruction.details) === null || _processingInstructio17 === void 0 ? void 0 : _processingInstructio17.retainedBrokerageCurrencyCode : '', \" \").concat(retainedBrokerageAmountForPdf === null || retainedBrokerageAmountForPdf === void 0 ? void 0 : retainedBrokerageAmountForPdf.retBrokerageAmt), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio18 = processingInstruction.details) === null || _processingInstructio18 === void 0 ? void 0 : _processingInstructio18.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokergaeAmountInSelectedCurr'), \"GBP \".concat((retainedBrokerageAmountForPdf === null || retainedBrokerageAmountForPdf === void 0 ? void 0 : (_retainedBrokerageAmo = retainedBrokerageAmountForPdf.convertedBrokerageAmt) === null || _retainedBrokerageAmo === void 0 ? void 0 : _retainedBrokerageAmo.value) ? retainedBrokerageAmountForPdf === null || retainedBrokerageAmountForPdf === void 0 ? void 0 : (_retainedBrokerageAmo2 = retainedBrokerageAmountForPdf.convertedBrokerageAmt) === null || _retainedBrokerageAmo2 === void 0 ? void 0 : _retainedBrokerageAmo2.value : '', \" @ \").concat(utils.string.t('format.number', {\n      value: {\n        number: retainedBrokerageAmountForPdf === null || retainedBrokerageAmountForPdf === void 0 ? void 0 : (_retainedBrokerageAmo3 = retainedBrokerageAmountForPdf.convertedBrokerageAmt) === null || _retainedBrokerageAmo3 === void 0 ? void 0 : _retainedBrokerageAmo3.rate,\n        format: {\n          trimMantissa: false\n        }\n      }\n    })), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio19 = processingInstruction.details) === null || _processingInstructio19 === void 0 ? void 0 : _processingInstructio19.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.total'), totalAmountForPdf, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio20 = processingInstruction.details) === null || _processingInstructio20 === void 0 ? void 0 : _processingInstructio20.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.fees'), (_utils$processingInst10 = utils.processingInstructions.getFinancialField(processingInstruction, 'fees')) === null || _utils$processingInst10 === void 0 ? void 0 : _utils$processingInst10.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio21 = processingInstruction.details) === null || _processingInstructio21 === void 0 ? void 0 : _processingInstructio21.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.otherDeductions'), (_utils$processingInst11 = utils.processingInstructions.getFinancialField(processingInstruction, 'otherDeductions')) === null || _utils$processingInst11 === void 0 ? void 0 : _utils$processingInst11.numberValue, (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio22 = processingInstruction.details) === null || _processingInstructio22 === void 0 ? void 0 : _processingInstructio22.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.settlementCurrency'), helpers.getSettlementCurrency((_utils$processingInst12 = utils.processingInstructions.getFinancialField(processingInstruction, constants.SETTLEMENT_CURRENCY_CODE_ID)) === null || _utils$processingInst12 === void 0 ? void 0 : _utils$processingInst12.numberValue, refDataCurrencies), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio23 = processingInstruction.details) === null || _processingInstructio23 === void 0 ? void 0 : _processingInstructio23.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [utils.string.t('processingInstructions.pdf.instructionLabels.paymentBasis'), helpers.getPaymentBasis((_utils$processingInst13 = utils.processingInstructions.getFinancialField(processingInstruction, 'paymentBasis')) === null || _utils$processingInst13 === void 0 ? void 0 : _utils$processingInst13.numberValue), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio24 = processingInstruction.details) === null || _processingInstructio24 === void 0 ? void 0 : _processingInstructio24.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-'], [((_utils$processingInst14 = utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')) === null || _utils$processingInst14 === void 0 ? void 0 : _utils$processingInst14.dateValue) ? \"\".concat(utils.string.t('processingInstructions.pdf.instructionLabels.ppwPpcApplicable'), \" (\").concat(utils.string.t('format.date', {\n      value: {\n        date: (_utils$processingInst15 = utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')) === null || _utils$processingInst15 === void 0 ? void 0 : _utils$processingInst15.dateValue,\n        format: config.ui.format.date.text\n      }\n    }), \")\") : utils.string.t('processingInstructions.pdf.instructionLabels.ppwPpcApplicable'), helpers.getPpwOrPpc((_utils$processingInst16 = utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')) === null || _utils$processingInst16 === void 0 ? void 0 : _utils$processingInst16.numberValue), (processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio25 = processingInstruction.details) === null || _processingInstructio25 === void 0 ? void 0 : _processingInstructio25.riskReferencesAuthorisedSignatory) ? utils.string.t('app.authorised') : '-']];\n  },\n  calculateTotal: function calculateTotal(lineItems) {\n    var sourceRowIds = ['totalClientDiscount', 'totalThirdParty', 'totalPfInternal', 'totalRetainedBrokerage'];\n    var values = lineItems.filter(function (item) {\n      return sourceRowIds.includes(item.itemKey);\n    }).map(function (item) {\n      return item.accountHandler;\n    });\n    return utils.generic.getSumOfArray(values, config.ui.format.percent.decimal);\n  },\n  calculateRetainedBrokerageAmount: function calculateRetainedBrokerageAmount(lineItems) {\n    var premiumCurrency = (lineItems.find(function (item) {\n      return item.itemKey === 'retainedBrokerageAmount';\n    }) || {}).premiumCurrency || '';\n    var grossPremium = lineItems.find(function (item) {\n      return item.itemKey === 'grossPremium';\n    });\n    var slipOrder = lineItems.find(function (item) {\n      return item.itemKey === 'slipOrder';\n    });\n    var totalRetainedBrokerage = lineItems.find(function (item) {\n      return item.itemKey === 'totalRetainedBrokerage';\n    });\n    if (!utils.generic.isValidObject(grossPremium) || !utils.generic.isValidObject(slipOrder) || !utils.generic.isValidObject(totalRetainedBrokerage)) return;\n    var brokerageAmount = utils.openingMemo.getRetainedBrokerageValue(grossPremium.accountHandler, slipOrder.accountHandler, totalRetainedBrokerage.accountHandler);\n    var convertedBrokerage = utils.openingMemo.getRetainedBrokerageConvertedValue(premiumCurrency, brokerageAmount);\n    var convertedBrokerageString = convertedBrokerage ? \" / GBP \".concat(convertedBrokerage.value, \" @ \").concat(utils.string.t('format.number', {\n      value: {\n        number: convertedBrokerage.rate,\n        format: {\n          trimMantissa: false\n        }\n      }\n    })) : '';\n    return \"\".concat(premiumCurrency, \" \").concat(brokerageAmount).concat(convertedBrokerageString);\n  },\n  renderAccountHandler: function renderAccountHandler(accountHandler, row, lineItems) {\n    var cell = row.cells.find(function (cell) {\n      return cell.name === 'accountHandler';\n    });\n    if (!cell) return;\n    if (row.rowKey === 'total') return helpers.calculateTotal(lineItems);\n    if (row.rowKey === 'retainedBrokerageAmount') return helpers.calculateRetainedBrokerageAmount(lineItems);\n    if (!cell.component || !cell.component.optionsKey) return accountHandler;\n    return utils.form.getSelectOption(cell.component.optionsKey, {}, accountHandler);\n  },\n  createSummaryBody: function createSummaryBody(processingInstruction, departmentName, frontEndContactName, accountExecutiveName, producingBrokerName) {\n    var _processingInstructio26, _processingInstructio27, _processingInstructio28, _processingInstructio29, _processingInstructio30, _processingInstructio31;\n\n    var processType = constants.PROCESS_TYPE_ID_CLOSING === (processingInstruction === null || processingInstruction === void 0 ? void 0 : processingInstruction.processTypeId) ? constants.PROCESS_TYPE_CLOSING : constants.PROCESS_TYPE_ID_FDO === (processingInstruction === null || processingInstruction === void 0 ? void 0 : processingInstruction.processTypeId) ? constants.PROCESS_TYPE_FDO : '';\n    var leadRef = processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio26 = processingInstruction.riskReferences) === null || _processingInstructio26 === void 0 ? void 0 : _processingInstructio26.find(function (r) {\n      return r.leadPolicy;\n    });\n    var allRiskRefs = processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio27 = processingInstruction.riskReferences) === null || _processingInstructio27 === void 0 ? void 0 : _processingInstructio27.map(function (r) {\n      return r.riskRefId;\n    });\n    return [[utils.string.t('processingInstructions.pdf.summaryLabels.processType'), upperCase(processType)], [utils.string.t('processingInstructions.pdf.summaryLabels.addedRiskRef'), allRiskRefs.join(', ')], [utils.string.t('processingInstructions.pdf.summaryLabels.leadRiskRef'), leadRef === null || leadRef === void 0 ? void 0 : leadRef.riskRefId], [utils.string.t('processingInstructions.pdf.summaryLabels.gxbInstance'), leadRef === null || leadRef === void 0 ? void 0 : leadRef.xbInstance], [utils.string.t('processingInstructions.pdf.summaryLabels.department'), departmentName], [utils.string.t('processingInstructions.pdf.summaryLabels.reInsuredOrCoverHolderName'), leadRef === null || leadRef === void 0 ? void 0 : leadRef.assuredName], [utils.string.t('processingInstructions.pdf.summaryLabels.period'), \"From: \".concat(leadRef === null || leadRef === void 0 ? void 0 : leadRef.inceptionDate, \" To: \").concat(leadRef === null || leadRef === void 0 ? void 0 : leadRef.expiryDate)], [utils.string.t('processingInstructions.pdf.summaryLabels.invoicingClient'), leadRef === null || leadRef === void 0 ? void 0 : leadRef.clientName], [utils.string.t('processingInstructions.pdf.summaryLabels.contactName'), processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio28 = processingInstruction.details) === null || _processingInstructio28 === void 0 ? void 0 : _processingInstructio28.contactName], [utils.string.t('processingInstructions.pdf.summaryLabels.clientEmail'), processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio29 = processingInstruction.details) === null || _processingInstructio29 === void 0 ? void 0 : _processingInstructio29.clientEmail], [utils.string.t('processingInstructions.pdf.summaryLabels.eocInvoiceContactName'), processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio30 = processingInstruction.details) === null || _processingInstructio30 === void 0 ? void 0 : _processingInstructio30.eocInvoiceContactName], [utils.string.t('processingInstructions.pdf.summaryLabels.eocInvoiceEmail'), processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio31 = processingInstruction.details) === null || _processingInstructio31 === void 0 ? void 0 : _processingInstructio31.eocInvoiceMail], [utils.string.t('processingInstructions.pdf.summaryLabels.producingBroker'), producingBrokerName], [utils.string.t('processingInstructions.pdf.summaryLabels.accountExecutive'), accountExecutiveName], [utils.string.t('processingInstructions.pdf.summaryLabels.frontEndContactName'), frontEndContactName], [{\n      colSpan: 2,\n      content: utils.string.t('processingInstructions.pdf.leadRiskReferenceLegend')\n    }]];\n  },\n  createApprovalBody: function createApprovalBody(processingInstruction, frontEndContactName, authorizedSignatoryName) {\n    return [[\"\".concat(utils.string.t('processingInstructions.pdf.approvalSection.name'), \": \").concat(frontEndContactName), \"\".concat(utils.string.t('processingInstructions.pdf.approvalSection.name'), \": \").concat(authorizedSignatoryName)], [\"\".concat(utils.string.t('processingInstructions.pdf.approvalSection.approved'), \": \").concat(helpers.formatDate(new Date())), \"\".concat(utils.string.t('processingInstructions.pdf.approvalSection.approved'), \": \").concat(helpers.formatDate(new Date()))]];\n  },\n  createAttachedDocumemtBody: function createAttachedDocumemtBody(processingInstruction) {\n    var _processingInstructio32, _leadRef$gxbDocuments;\n\n    var leadRef = processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio32 = processingInstruction.riskReferences) === null || _processingInstructio32 === void 0 ? void 0 : _processingInstructio32.find(function (r) {\n      return r.leadPolicy;\n    });\n    var gxbDocuments = leadRef === null || leadRef === void 0 ? void 0 : (_leadRef$gxbDocuments = leadRef.gxbDocuments) === null || _leadRef$gxbDocuments === void 0 ? void 0 : _leadRef$gxbDocuments.map(function (item, index) {\n      return [index + 1, item.name];\n    });\n    return [[\"\".concat(utils.string.t('processingInstructions.pdf.attachedDocumentSection.sno')), \"\".concat(utils.string.t('processingInstructions.pdf.attachedDocumentSection.header'))]].concat(_toConsumableArray(gxbDocuments));\n  },\n  createSpecialBody: function createSpecialBody(processingInstruction) {\n    var _processingInstructio33, _processingInstructio34, _processingInstructio35;\n\n    return [[\"\".concat(utils.string.t('processingInstructions.pdf.specialInstructions.highPriority'), \": \").concat((processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio33 = processingInstruction.details) === null || _processingInstructio33 === void 0 ? void 0 : _processingInstructio33.highPriority) || '-'), \"\".concat(utils.string.t('processingInstructions.pdf.specialInstructions.frontEndSendDocuments'), \": \").concat((processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio34 = processingInstruction.details) === null || _processingInstructio34 === void 0 ? void 0 : _processingInstructio34.frontEndSendDocs) || '-')], [{\n      colSpan: 2,\n      content: \"\".concat(utils.string.t('processingInstructions.pdf.specialInstructions.notes'), \": \").concat((processingInstruction === null || processingInstruction === void 0 ? void 0 : (_processingInstructio35 = processingInstruction.details) === null || _processingInstructio35 === void 0 ? void 0 : _processingInstructio35.notes) || '-')\n    }]];\n  },\n  formatDate: function formatDate(date) {\n    return utils.string.t('format.date', {\n      value: {\n        date: date,\n        format: config.ui.format.date.text\n      }\n    });\n  },\n  getLabels: function getLabels() {\n    return {\n      na: utils.string.t('form.options.yesNoNa.na'),\n      approved: utils.string.t('app.approved'),\n      pdfHeader: utils.string.t('placement.openingMemo.pdf.header'),\n      instructionToProcessing: utils.string.t('placement.openingMemo.instructionToProcessing'),\n      specialInstructionsHeader: utils.string.t('placement.openingMemo.specialInstructions.header'),\n      attachedDocumentSectionHeader: utils.string.t('placement.openingMemo.attachedDocumentSection.header'),\n      accountHandler: utils.string.t('placement.openingMemo.approvers.accountHandler'),\n      authorisedSignatory: utils.string.t('placement.openingMemo.approvers.authorisedSignatory'),\n      placingBrokerLabel: utils.string.t('placement.openingMemo.specialInstructions.placingBroker.label'),\n      originatorLabel: utils.string.t('placement.openingMemo.specialInstructions.originator.label'),\n      accountExecutiveLabel: utils.string.t('placement.openingMemo.specialInstructions.accountExecutive.label'),\n      producingBrokerLabel: utils.string.t('placement.openingMemo.specialInstructions.producingBroker.label'),\n      frontEndContactLabel: utils.string.t('processingInstructions.authorisations.fields.frontEndContact')\n    };\n  },\n  getRowLabel: function getRowLabel(sectionKey, rowKey) {\n    return utils.string.t(\"processingInstructions.checklist.lineItems.\".concat(sectionKey, \".rows.\").concat(rowKey, \".label\"));\n  },\n  getYesNoNaLabel: function getYesNoNaLabel(accountHandler) {\n    return utils.string.t(\"form.options.yesNoNa.\".concat(utils.string.replaceLowerCase(accountHandler)));\n  },\n  getSectionLabel: function getSectionLabel(sectionKey) {\n    return utils.string.t(\"processingInstructions.checklist.lineItems.\".concat(sectionKey, \".label\"));\n  },\n  getSectionSubHeader: function getSectionSubHeader(sectionKey) {\n    return utils.string.t(\"processingInstructions.checklist.lineItems.\".concat(sectionKey, \".subHeader\"));\n  },\n  getHeaderLabel: function getHeaderLabel(headerKey) {\n    return utils.string.t(\"processingInstructions.pdf.pdfColHeaderLabels.\".concat(headerKey));\n  },\n  getOptionLabel: function getOptionLabel(rowKey, value) {\n    return utils.string.t(\"form.options.\".concat(rowKey, \".\").concat(value));\n  }\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsPdf/ProcessingInstructions.pdf.helpers.js"],"names":["flatten","get","upperCase","utils","config","constants","processingInstructionsSchema","getData","processingInstruction","departmentName","frontEndContactName","authorizedSignatoryName","accountExecutiveName","producingBrokerName","retainedBrokerageAmountForPdf","totalAmountForPdf","refDataCurrencies","labels","helpers","getLabels","leadRiskRefNumber","generic","isValidArray","riskReferences","find","r","leadPolicy","riskRefId","leadRiskRefDetails","financialChecklistDetails","a","riskReference","tableHeader","createHeader","summaryBody","createSummaryBody","checklistBody","map","sectionKey","createChecklistBody","instructionBody","createInstructionBody","specialBody","createSpecialBody","attachedDocumentBody","createAttachedDocumemtBody","approvalBody","createApprovalBody","getSettlementCurrency","id","ref","currencyCodeID","currencyCd","getPaymentBasis","paymentBasisOptions","code","name","p","getPpwOrPpc","ppwOrPpcOptions","value","getMultiToggleLabel","newValue","PI_TOGGLE_ID_YES","string","t","PI_TOGGLE_ID_NO","PI_TOGGLE_ID_NA","headerKey","getHeaderLabel","subHeader","rows","Array","isArray","data","row","item","checklist","checkListDetails","rowKey","labelColumn","getRowLabel","signedDate","date","format","ui","text","renderAccountHandler","accountHandler","replace","authorisedSignatory","colSpan","content","getSectionSubHeader","getSectionLabel","premiumTaxCalSheetAttach","details","premiumTaxCalculationSheetAttached","signedLinesCalAttach","signedLinesCalculationSheetAttached","premiumTaxAuthorisedSignatory","signedLinesAuthorisedSignatory","processingInstructions","getFinancialField","numberValue","riskReferencesAuthorisedSignatory","THIRD_PARTY","stringValue","PF_INTERNAL","retainedBrokerageCurrencyCode","retBrokerageAmt","convertedBrokerageAmt","number","rate","trimMantissa","SETTLEMENT_CURRENCY_CODE_ID","dateValue","calculateTotal","lineItems","sourceRowIds","values","filter","includes","itemKey","getSumOfArray","percent","decimal","calculateRetainedBrokerageAmount","premiumCurrency","grossPremium","slipOrder","totalRetainedBrokerage","isValidObject","brokerageAmount","openingMemo","getRetainedBrokerageValue","convertedBrokerage","getRetainedBrokerageConvertedValue","convertedBrokerageString","cell","cells","component","optionsKey","form","getSelectOption","processType","PROCESS_TYPE_ID_CLOSING","processTypeId","PROCESS_TYPE_CLOSING","PROCESS_TYPE_ID_FDO","PROCESS_TYPE_FDO","leadRef","allRiskRefs","join","xbInstance","assuredName","inceptionDate","expiryDate","clientName","contactName","clientEmail","eocInvoiceContactName","eocInvoiceMail","formatDate","Date","gxbDocuments","index","highPriority","frontEndSendDocs","notes","na","approved","pdfHeader","instructionToProcessing","specialInstructionsHeader","attachedDocumentSectionHeader","placingBrokerLabel","originatorLabel","accountExecutiveLabel","producingBrokerLabel","frontEndContactLabel","getYesNoNaLabel","replaceLowerCase","getOptionLabel"],"mappings":"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","sourcesContent":["import flatten from 'lodash/flatten';\r\nimport get from 'lodash/get';\r\nimport upperCase from 'lodash/upperCase';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\nimport { processingInstructionsSchema } from 'schemas';\r\n\r\nexport const getData = ({\r\n  processingInstruction = {},\r\n  departmentName,\r\n  frontEndContactName = '',\r\n  authorizedSignatoryName = '',\r\n  accountExecutiveName = '',\r\n  producingBrokerName = '',\r\n  retainedBrokerageAmountForPdf,\r\n  totalAmountForPdf,\r\n  refDataCurrencies,\r\n}) => {\r\n  const labels = helpers.getLabels();\r\n  const leadRiskRefNumber =\r\n    (utils.generic.isValidArray(processingInstruction?.riskReferences, true) &&\r\n      processingInstruction?.riskReferences?.find((r) => r.leadPolicy)?.riskRefId) ||\r\n    '';\r\n  const leadRiskRefDetails =\r\n    leadRiskRefNumber && processingInstruction.financialChecklistDetails.find((a) => a.riskReference === leadRiskRefNumber);\r\n\r\n  if (!processingInstruction) return;\r\n  return {\r\n    labels,\r\n    tableHeader: helpers.createHeader(),\r\n    summaryBody: helpers.createSummaryBody(\r\n      processingInstruction,\r\n      departmentName,\r\n      frontEndContactName,\r\n      accountExecutiveName,\r\n      producingBrokerName\r\n    ),\r\n    checklistBody: flatten(\r\n      ['prePlacing', 'mrc', 'otherDetails'].map((sectionKey) => helpers.createChecklistBody(processingInstruction, sectionKey, false))\r\n    ),\r\n    instructionBody: helpers.createInstructionBody(\r\n      processingInstruction,\r\n      retainedBrokerageAmountForPdf,\r\n      totalAmountForPdf,\r\n      refDataCurrencies,\r\n      leadRiskRefDetails\r\n    ),\r\n    specialBody: helpers.createSpecialBody(processingInstruction),\r\n    attachedDocumentBody: helpers.createAttachedDocumemtBody(processingInstruction),\r\n    approvalBody: helpers.createApprovalBody(processingInstruction, frontEndContactName, authorizedSignatoryName),\r\n  };\r\n};\r\n\r\nconst helpers = {\r\n  getSettlementCurrency: (id, refDataCurrencies) => {\r\n    return refDataCurrencies.find((ref) => ref.currencyCodeID === id)?.currencyCd;\r\n  },\r\n  getPaymentBasis: (id) => {\r\n    const paymentBasisOptions = [\r\n      { id: 1, code: 'cash', name: 'Cash' },\r\n      { id: 2, code: 'quaterly', name: 'Quaterly' },\r\n      { id: 3, code: 'otherDeferred', name: 'Other Deferred' },\r\n    ];\r\n    return paymentBasisOptions.find((p) => p.id === id)?.name;\r\n  },\r\n  getPpwOrPpc: (id) => {\r\n    const ppwOrPpcOptions = [\r\n      { id: 1, code: 'ppw', name: 'PPW', value: 1 },\r\n      { id: 2, code: 'ppc', name: 'PPC', value: 2 },\r\n      { id: 3, code: 'na', name: 'N/A', value: 3 },\r\n    ];\r\n    return ppwOrPpcOptions.find((p) => p.id === id)?.name;\r\n  },\r\n  getMultiToggleLabel: (value) => {\r\n    if (!value) return;\r\n    let newValue = '';\r\n\r\n    if (value === constants.PI_TOGGLE_ID_YES) {\r\n      return (newValue = utils.string.t('app.yes'));\r\n    }\r\n    if (value === constants.PI_TOGGLE_ID_NO) {\r\n      return (newValue = utils.string.t('app.no'));\r\n    }\r\n    if (value === constants.PI_TOGGLE_ID_NA) {\r\n      return (newValue = utils.string.t('app.na'));\r\n    }\r\n    return newValue;\r\n  },\r\n  createHeader: () => {\r\n    return [\r\n      ['processingInstructionDetails', 'frontEndContact', 'authorisedSignatory'].map((headerKey) => helpers.getHeaderLabel(headerKey)),\r\n    ];\r\n  },\r\n  createChecklistBody: (processingInstruction, sectionKey, subHeader) => {\r\n    if (!processingInstruction) return [];\r\n    const rows = get(processingInstructionsSchema, `content.${sectionKey}`);\r\n    if (!rows || !Array.isArray(rows)) return [];\r\n    const data = rows.map((row) => {\r\n      const item = processingInstruction.checklist.find((item) => item.checkListDetails === row.rowKey) || {};\r\n      const labelColumn = `${helpers.getRowLabel(sectionKey, row.rowKey)}`;\r\n      return [\r\n        item.signedDate\r\n          ? `${labelColumn} (${utils.string.t('format.date', { value: { date: item.signedDate, format: config.ui.format.date.text } })})`\r\n          : labelColumn,\r\n        upperCase(helpers.renderAccountHandler(item.accountHandler, row, processingInstruction.checklist)).replace(/ /g, '/'),\r\n        item.authorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ];\r\n    });\r\n    return [[{ colSpan: 3, content: subHeader ? helpers.getSectionSubHeader(sectionKey) : helpers.getSectionLabel(sectionKey) }], ...data];\r\n  },\r\n  createInstructionBody: (\r\n    processingInstruction,\r\n    retainedBrokerageAmountForPdf,\r\n    totalAmountForPdf,\r\n    refDataCurrencies,\r\n    leadRiskRefDetails\r\n  ) => {\r\n    if (!processingInstruction) return [];\r\n\r\n    const premiumTaxCalSheetAttach = helpers.getMultiToggleLabel(processingInstruction?.details?.premiumTaxCalculationSheetAttached);\r\n\r\n    const signedLinesCalAttach = helpers.getMultiToggleLabel(processingInstruction?.details?.signedLinesCalculationSheetAttached);\r\n\r\n    return [\r\n      [utils.string.t('processingInstructions.pdf.instructionLabels.piPageSubHeader')],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.premiumAndTaxCalSheetAttach'),\r\n        premiumTaxCalSheetAttach ? premiumTaxCalSheetAttach : utils.string.t('app.no'),\r\n        processingInstruction?.details?.premiumTaxAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.signedLinesCalAttach'),\r\n        signedLinesCalAttach ? signedLinesCalAttach : utils.string.t('app.no'),\r\n        processingInstruction?.details?.signedLinesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.grossPremium'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'grossPremiumAmount')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.slipOrder'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'slipOrder')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.totalBrokerage'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'totalBrokerage')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [utils.string.t('processingInstructions.pdf.instructionLabels.splitAsFollows'), '', '-'],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.clientDiscount'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'clientDiscount')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.thirdPartyCommSharing'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, constants.THIRD_PARTY)?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.thirdPartyName'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, constants.THIRD_PARTY)?.stringValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.pfInternalCommissionSharing'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'pfinternal')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.pfInternalDeptName'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, constants.PF_INTERNAL)?.stringValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokerage'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'retainedBrokerage')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokerageAmount'),\r\n        `${\r\n          processingInstruction?.details?.retainedBrokerageCurrencyCode ? processingInstruction?.details?.retainedBrokerageCurrencyCode : ''\r\n        } ${retainedBrokerageAmountForPdf?.retBrokerageAmt}`,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.retainedBrokergaeAmountInSelectedCurr'),\r\n        `GBP ${\r\n          retainedBrokerageAmountForPdf?.convertedBrokerageAmt?.value ? retainedBrokerageAmountForPdf?.convertedBrokerageAmt?.value : ''\r\n        } @ ${utils.string.t('format.number', {\r\n          value: { number: retainedBrokerageAmountForPdf?.convertedBrokerageAmt?.rate, format: { trimMantissa: false } },\r\n        })}`,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.total'),\r\n        totalAmountForPdf,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.fees'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'fees')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.otherDeductions'),\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'otherDeductions')?.numberValue,\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.settlementCurrency'),\r\n        helpers.getSettlementCurrency(\r\n          utils.processingInstructions.getFinancialField(processingInstruction, constants.SETTLEMENT_CURRENCY_CODE_ID)?.numberValue,\r\n          refDataCurrencies\r\n        ),\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.instructionLabels.paymentBasis'),\r\n        helpers.getPaymentBasis(utils.processingInstructions.getFinancialField(processingInstruction, 'paymentBasis')?.numberValue),\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n      [\r\n        utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')?.dateValue\r\n          ? `${utils.string.t('processingInstructions.pdf.instructionLabels.ppwPpcApplicable')} (${utils.string.t('format.date', {\r\n              value: {\r\n                date: utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')?.dateValue,\r\n                format: config.ui.format.date.text,\r\n              },\r\n            })})`\r\n          : utils.string.t('processingInstructions.pdf.instructionLabels.ppwPpcApplicable'),\r\n        helpers.getPpwOrPpc(utils.processingInstructions.getFinancialField(processingInstruction, 'ppwOrPpc')?.numberValue),\r\n        processingInstruction?.details?.riskReferencesAuthorisedSignatory ? utils.string.t('app.authorised') : '-',\r\n      ],\r\n    ];\r\n  },\r\n  calculateTotal: (lineItems) => {\r\n    const sourceRowIds = ['totalClientDiscount', 'totalThirdParty', 'totalPfInternal', 'totalRetainedBrokerage'];\r\n    const values = lineItems.filter((item) => sourceRowIds.includes(item.itemKey)).map((item) => item.accountHandler);\r\n    return utils.generic.getSumOfArray(values, config.ui.format.percent.decimal);\r\n  },\r\n  calculateRetainedBrokerageAmount: (lineItems) => {\r\n    const premiumCurrency = (lineItems.find((item) => item.itemKey === 'retainedBrokerageAmount') || {}).premiumCurrency || '';\r\n    const grossPremium = lineItems.find((item) => item.itemKey === 'grossPremium');\r\n    const slipOrder = lineItems.find((item) => item.itemKey === 'slipOrder');\r\n    const totalRetainedBrokerage = lineItems.find((item) => item.itemKey === 'totalRetainedBrokerage');\r\n\r\n    if (\r\n      !utils.generic.isValidObject(grossPremium) ||\r\n      !utils.generic.isValidObject(slipOrder) ||\r\n      !utils.generic.isValidObject(totalRetainedBrokerage)\r\n    )\r\n      return;\r\n\r\n    const brokerageAmount = utils.openingMemo.getRetainedBrokerageValue(\r\n      grossPremium.accountHandler,\r\n      slipOrder.accountHandler,\r\n      totalRetainedBrokerage.accountHandler\r\n    );\r\n    const convertedBrokerage = utils.openingMemo.getRetainedBrokerageConvertedValue(premiumCurrency, brokerageAmount);\r\n    const convertedBrokerageString = convertedBrokerage\r\n      ? ` / GBP ${convertedBrokerage.value} @ ${utils.string.t('format.number', {\r\n          value: { number: convertedBrokerage.rate, format: { trimMantissa: false } },\r\n        })}`\r\n      : '';\r\n\r\n    return `${premiumCurrency} ${brokerageAmount}${convertedBrokerageString}`;\r\n  },\r\n  renderAccountHandler: (accountHandler, row, lineItems) => {\r\n    const cell = row.cells.find((cell) => cell.name === 'accountHandler');\r\n    if (!cell) return;\r\n    if (row.rowKey === 'total') return helpers.calculateTotal(lineItems);\r\n    if (row.rowKey === 'retainedBrokerageAmount') return helpers.calculateRetainedBrokerageAmount(lineItems);\r\n    if (!cell.component || !cell.component.optionsKey) return accountHandler;\r\n    return utils.form.getSelectOption(cell.component.optionsKey, {}, accountHandler);\r\n  },\r\n  createSummaryBody: (processingInstruction, departmentName, frontEndContactName, accountExecutiveName, producingBrokerName) => {\r\n    const processType =\r\n      constants.PROCESS_TYPE_ID_CLOSING === processingInstruction?.processTypeId\r\n        ? constants.PROCESS_TYPE_CLOSING\r\n        : constants.PROCESS_TYPE_ID_FDO === processingInstruction?.processTypeId\r\n        ? constants.PROCESS_TYPE_FDO\r\n        : '';\r\n    const leadRef = processingInstruction?.riskReferences?.find((r) => r.leadPolicy);\r\n    const allRiskRefs = processingInstruction?.riskReferences?.map((r) => r.riskRefId);\r\n    return [\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.processType'), upperCase(processType)],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.addedRiskRef'), allRiskRefs.join(', ')],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.leadRiskRef'), leadRef?.riskRefId],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.gxbInstance'), leadRef?.xbInstance],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.department'), departmentName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.reInsuredOrCoverHolderName'), leadRef?.assuredName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.period'), `From: ${leadRef?.inceptionDate} To: ${leadRef?.expiryDate}`],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.invoicingClient'), leadRef?.clientName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.contactName'), processingInstruction?.details?.contactName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.clientEmail'), processingInstruction?.details?.clientEmail],\r\n      [\r\n        utils.string.t('processingInstructions.pdf.summaryLabels.eocInvoiceContactName'),\r\n        processingInstruction?.details?.eocInvoiceContactName,\r\n      ],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.eocInvoiceEmail'), processingInstruction?.details?.eocInvoiceMail],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.producingBroker'), producingBrokerName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.accountExecutive'), accountExecutiveName],\r\n      [utils.string.t('processingInstructions.pdf.summaryLabels.frontEndContactName'), frontEndContactName],\r\n      [\r\n        {\r\n          colSpan: 2,\r\n          content: utils.string.t('processingInstructions.pdf.leadRiskReferenceLegend'),\r\n        },\r\n      ],\r\n    ];\r\n  },\r\n  createApprovalBody: (processingInstruction, frontEndContactName, authorizedSignatoryName) => {\r\n    return [\r\n      [\r\n        `${utils.string.t('processingInstructions.pdf.approvalSection.name')}: ${frontEndContactName}`,\r\n        `${utils.string.t('processingInstructions.pdf.approvalSection.name')}: ${authorizedSignatoryName}`,\r\n      ],\r\n      [\r\n        `${utils.string.t('processingInstructions.pdf.approvalSection.approved')}: ${helpers.formatDate(new Date())}`,\r\n        `${utils.string.t('processingInstructions.pdf.approvalSection.approved')}: ${helpers.formatDate(new Date())}`,\r\n      ],\r\n    ];\r\n  },\r\n  createAttachedDocumemtBody: (processingInstruction) => {\r\n    const leadRef = processingInstruction?.riskReferences?.find((r) => r.leadPolicy);\r\n    const gxbDocuments = leadRef?.gxbDocuments?.map((item, index) => [index + 1, item.name]);\r\n    return [\r\n      [\r\n        `${utils.string.t('processingInstructions.pdf.attachedDocumentSection.sno')}`,\r\n        `${utils.string.t('processingInstructions.pdf.attachedDocumentSection.header')}`,\r\n      ],\r\n      ...gxbDocuments,\r\n    ];\r\n  },\r\n\r\n  createSpecialBody: (processingInstruction) => {\r\n    return [\r\n      [\r\n        `${utils.string.t('processingInstructions.pdf.specialInstructions.highPriority')}: ${\r\n          processingInstruction?.details?.highPriority || '-'\r\n        }`,\r\n        `${utils.string.t('processingInstructions.pdf.specialInstructions.frontEndSendDocuments')}: ${\r\n          processingInstruction?.details?.frontEndSendDocs || '-'\r\n        }`,\r\n      ],\r\n      [\r\n        {\r\n          colSpan: 2,\r\n          content: `${utils.string.t('processingInstructions.pdf.specialInstructions.notes')}: ${\r\n            processingInstruction?.details?.notes || '-'\r\n          }`,\r\n        },\r\n      ],\r\n    ];\r\n  },\r\n  formatDate: (date) => {\r\n    return utils.string.t('format.date', { value: { date, format: config.ui.format.date.text } });\r\n  },\r\n  getLabels: () => ({\r\n    na: utils.string.t('form.options.yesNoNa.na'),\r\n    approved: utils.string.t('app.approved'),\r\n    pdfHeader: utils.string.t('placement.openingMemo.pdf.header'),\r\n    instructionToProcessing: utils.string.t('placement.openingMemo.instructionToProcessing'),\r\n    specialInstructionsHeader: utils.string.t('placement.openingMemo.specialInstructions.header'),\r\n    attachedDocumentSectionHeader: utils.string.t('placement.openingMemo.attachedDocumentSection.header'),\r\n    accountHandler: utils.string.t('placement.openingMemo.approvers.accountHandler'),\r\n    authorisedSignatory: utils.string.t('placement.openingMemo.approvers.authorisedSignatory'),\r\n    placingBrokerLabel: utils.string.t('placement.openingMemo.specialInstructions.placingBroker.label'),\r\n    originatorLabel: utils.string.t('placement.openingMemo.specialInstructions.originator.label'),\r\n    accountExecutiveLabel: utils.string.t('placement.openingMemo.specialInstructions.accountExecutive.label'),\r\n    producingBrokerLabel: utils.string.t('placement.openingMemo.specialInstructions.producingBroker.label'),\r\n    frontEndContactLabel: utils.string.t('processingInstructions.authorisations.fields.frontEndContact'),\r\n  }),\r\n  getRowLabel: (sectionKey, rowKey) => utils.string.t(`processingInstructions.checklist.lineItems.${sectionKey}.rows.${rowKey}.label`),\r\n  getYesNoNaLabel: (accountHandler) => utils.string.t(`form.options.yesNoNa.${utils.string.replaceLowerCase(accountHandler)}`),\r\n  getSectionLabel: (sectionKey) => utils.string.t(`processingInstructions.checklist.lineItems.${sectionKey}.label`),\r\n  getSectionSubHeader: (sectionKey) => utils.string.t(`processingInstructions.checklist.lineItems.${sectionKey}.subHeader`),\r\n  getHeaderLabel: (headerKey) => utils.string.t(`processingInstructions.pdf.pdfColHeaderLabels.${headerKey}`),\r\n  getOptionLabel: (rowKey, value) => utils.string.t(`form.options.${rowKey}.${value}`),\r\n};\r\n"]},"metadata":{},"sourceType":"module"}