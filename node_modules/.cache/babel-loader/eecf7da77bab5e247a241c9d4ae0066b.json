{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskRowMultiple\\\\LocationAutocomplete.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport { useDispatch } from 'react-redux';\nimport parse from 'autosuggest-highlight/parse';\nimport throttle from 'lodash/throttle';\nimport TextField from '@material-ui/core/TextField';\nimport Autocomplete from '@material-ui/lab/Autocomplete';\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\nimport Grid from '@material-ui/core/Grid';\nimport Box from '@material-ui/core/Box';\nimport Typography from '@material-ui/core/Typography';\nimport AddIcon from '@material-ui/icons/Add';\nimport { makeStyles } from '@material-ui/core/styles';\nimport { Button } from 'components';\nimport { enqueueNotification, getRiskAddress, getDistanceToCoast } from 'stores';\nimport * as utils from 'utils';\nimport { RISK_LOCATIONS_ACCURACY } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction loadScript(src, position, id) {\n  if (!position) {\n    return;\n  }\n\n  var script = document.createElement('script');\n  script.setAttribute('async', '');\n  script.setAttribute('id', id);\n  script.src = src;\n  position.appendChild(script);\n}\n\nvar autocompleteService = {\n  current: null\n};\nvar useStyles = makeStyles(function (theme) {\n  return {\n    icon: {\n      color: theme.palette.text.secondary,\n      marginRight: theme.spacing(2)\n    },\n    autocomplete: {\n      width: 300\n    }\n  };\n});\nexport default function LocationAutocomplete(_ref) {\n  _s();\n\n  var _this = this;\n\n  var handleAdd = _ref.handleAdd,\n      componentRestrictions = _ref.componentRestrictions;\n  var dispatch = useDispatch();\n  var classes = useStyles();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      value = _useState2[0],\n      setValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      inputValue = _useState4[0],\n      setInputValue = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      options = _useState6[0],\n      setOptions = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isAdding = _useState8[0],\n      setIsAdding = _useState8[1];\n\n  var loaded = useRef(false);\n\n  if (typeof window !== 'undefined' && !loaded.current) {\n    if (!document.querySelector('#google-maps')) {\n      loadScript('https://maps.googleapis.com/maps/api/js?key=AIzaSyBeX9Z1AmI5hFNx3FAfdodgyv34B7dy9CY&libraries=places', document.querySelector('head'), 'google-maps');\n    }\n\n    loaded.current = true;\n  }\n\n  var fetch = React.useMemo(function () {\n    return throttle(function (request, callback) {\n      autocompleteService.current.getPlacePredictions(request, callback);\n    }, 200);\n  }, []);\n  React.useEffect(function () {\n    var active = true;\n\n    if (!autocompleteService.current && window.google) {\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\n    }\n\n    if (!autocompleteService.current) {\n      return undefined;\n    }\n\n    fetch({\n      input: inputValue,\n      componentRestrictions: componentRestrictions\n    }, function (results) {\n      if (active) {\n        var newOptions = [];\n\n        if (value) {\n          newOptions = [value];\n        }\n\n        if (results) {\n          newOptions = [].concat(_toConsumableArray(newOptions), _toConsumableArray(results));\n        }\n\n        setOptions(newOptions);\n      }\n    });\n    return function () {\n      active = false;\n    };\n  }, [value, inputValue, fetch, componentRestrictions]);\n\n  var getAddressDetails = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(address) {\n      var response, location, distanceToCoastResult, streetAddress, result;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getRiskAddress(address));\n\n            case 2:\n              response = _context.sent;\n\n              if (!((response === null || response === void 0 ? void 0 : response.accuracy) !== 'ROOFTOP')) {\n                _context.next = 6;\n                break;\n              }\n\n              if (RISK_LOCATIONS_ACCURACY.includes(response === null || response === void 0 ? void 0 : response.accuracy)) {\n                _context.next = 6;\n                break;\n              }\n\n              return _context.abrupt(\"return\", {\n                error: 'NO_ACCURATE_RESULT',\n                address: address\n              });\n\n            case 6:\n              location = {\n                lng: response.lng,\n                lat: response.lat\n              };\n              _context.next = 9;\n              return dispatch(getDistanceToCoast(location));\n\n            case 9:\n              distanceToCoastResult = _context.sent;\n              streetAddress = (response === null || response === void 0 ? void 0 : response.streetNumber) ? \"\".concat(response.streetNumber, \" \").concat(response === null || response === void 0 ? void 0 : response.streetAddress) : \"\".concat(response === null || response === void 0 ? void 0 : response.streetAddress);\n              result = {\n                city: response === null || response === void 0 ? void 0 : response.city,\n                zip: response === null || response === void 0 ? void 0 : response.zip,\n                county: response === null || response === void 0 ? void 0 : response.county,\n                state: response === null || response === void 0 ? void 0 : response.state,\n                streetAddress: streetAddress,\n                formattedAddress: response === null || response === void 0 ? void 0 : response.outputAddress,\n                distanceToCoast: distanceToCoastResult === null || distanceToCoastResult === void 0 ? void 0 : distanceToCoastResult.distanceInMiles,\n                distanceToCoastInitialValue: distanceToCoastResult === null || distanceToCoastResult === void 0 ? void 0 : distanceToCoastResult.distanceInMiles,\n                latitude: response === null || response === void 0 ? void 0 : response.lat,\n                longitude: response === null || response === void 0 ? void 0 : response.lng\n              };\n              return _context.abrupt(\"return\", result);\n\n            case 13:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function getAddressDetails(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleAddAddress = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var result;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              setIsAdding(true);\n\n              if (!(value === null || value === void 0 ? void 0 : value.description)) {\n                _context2.next = 6;\n                break;\n              }\n\n              _context2.next = 4;\n              return getAddressDetails(value.description);\n\n            case 4:\n              result = _context2.sent;\n\n              if ((result === null || result === void 0 ? void 0 : result.error) !== 'NO_ACCURATE_RESULT') {\n                handleAdd(result);\n              } else {\n                dispatch(enqueueNotification(\"\".concat(result === null || result === void 0 ? void 0 : result.address, \" \").concat(utils.string.t('products.multiLocation.buildingError')), 'error', {\n                  delay: 6000\n                }));\n              }\n\n            case 6:\n              setIsAdding(false);\n\n            case 7:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleAddAddress() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 1,\n      children: /*#__PURE__*/_jsxDEV(Autocomplete, {\n        id: \"google-autocomplete\",\n        className: classes.autocomplete,\n        getOptionLabel: function getOptionLabel(option) {\n          return typeof option === 'string' ? option : option.description;\n        },\n        filterOptions: function filterOptions(x) {\n          return x;\n        },\n        options: options,\n        autoComplete: true,\n        includeInputInList: true,\n        filterSelectedOptions: true,\n        value: value,\n        onChange: function onChange(event, newValue) {\n          setOptions(newValue ? [newValue].concat(_toConsumableArray(options)) : options);\n          setValue(newValue);\n        },\n        onInputChange: function onInputChange(event, newInputValue) {\n          setInputValue(newInputValue);\n        },\n        renderInput: function renderInput(params) {\n          return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, params), {}, {\n            label: utils.string.t('products.multiLocation.label'),\n            placeholder: utils.string.t('products.multiLocation.placeholder'),\n            variant: \"outlined\",\n            fullWidth: true,\n            onKeyPress: function onKeyPress(event) {\n              if (event.key === 'Enter') {\n                event.preventDefault();\n                handleAddAddress();\n              }\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 171,\n            columnNumber: 13\n          }, _this);\n        },\n        renderOption: function renderOption(option) {\n          var matches = option.structured_formatting.main_text_matched_substrings;\n          var parts = parse(option.structured_formatting.main_text, matches.map(function (match) {\n            return [match.offset, match.offset + match.length];\n          }));\n          return /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(LocationOnIcon, {\n                className: classes.icon\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 195,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 194,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: true,\n              children: [parts.map(function (part, index) {\n                return /*#__PURE__*/_jsxDEV(\"span\", {\n                  style: {\n                    fontWeight: part.highlight ? 700 : 400\n                  },\n                  children: part.text\n                }, index, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, _this);\n              }), /*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                color: \"textSecondary\",\n                children: option.structured_formatting.secondary_text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 204,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 197,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 193,\n            columnNumber: 15\n          }, _this);\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 153,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      ml: 2.5,\n      mt: 1,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        disabled: isAdding || !value,\n        color: \"primary\",\n        size: \"small\",\n        icon: isAdding ? null : AddIcon,\n        text: utils.string.t('app.addLocation'),\n        onClick: function onClick() {\n          return handleAddAddress();\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 214,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 213,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LocationAutocomplete, \"J8Z8Vdg8X9bx6HHe9ML2xv3EY/o=\", false, function () {\n  return [useDispatch, useStyles];\n});\n\n_c = LocationAutocomplete;\nLocationAutocomplete.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LocationAutocomplete\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\AddRiskRowMultiple\\\\LocationAutocomplete.js\"] = {\n    name: \"LocationAutocomplete\",\n    docgenInfo: LocationAutocomplete.__docgenInfo,\n    path: \"src\\\\modules\\\\AddRiskRowMultiple\\\\LocationAutocomplete.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationAutocomplete\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskRowMultiple/LocationAutocomplete.js"],"names":["React","useState","useRef","useDispatch","parse","throttle","TextField","Autocomplete","LocationOnIcon","Grid","Box","Typography","AddIcon","makeStyles","Button","enqueueNotification","getRiskAddress","getDistanceToCoast","utils","RISK_LOCATIONS_ACCURACY","loadScript","src","position","id","script","document","createElement","setAttribute","appendChild","autocompleteService","current","useStyles","theme","icon","color","palette","text","secondary","marginRight","spacing","autocomplete","width","LocationAutocomplete","handleAdd","componentRestrictions","dispatch","classes","value","setValue","inputValue","setInputValue","options","setOptions","isAdding","setIsAdding","loaded","window","querySelector","fetch","useMemo","request","callback","getPlacePredictions","useEffect","active","google","maps","places","AutocompleteService","undefined","input","results","newOptions","getAddressDetails","address","response","accuracy","includes","error","location","lng","lat","distanceToCoastResult","streetAddress","streetNumber","result","city","zip","county","state","formattedAddress","outputAddress","distanceToCoast","distanceInMiles","distanceToCoastInitialValue","latitude","longitude","handleAddAddress","description","string","t","delay","option","x","event","newValue","newInputValue","params","key","preventDefault","matches","structured_formatting","main_text_matched_substrings","parts","main_text","map","match","offset","length","part","index","fontWeight","highlight","secondary_text"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport parse from 'autosuggest-highlight/parse';\r\nimport throttle from 'lodash/throttle';\r\n\r\nimport TextField from '@material-ui/core/TextField';\r\nimport Autocomplete from '@material-ui/lab/Autocomplete';\r\nimport LocationOnIcon from '@material-ui/icons/LocationOn';\r\nimport Grid from '@material-ui/core/Grid';\r\nimport Box from '@material-ui/core/Box';\r\nimport Typography from '@material-ui/core/Typography';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\n\r\nimport { Button } from 'components';\r\n\r\nimport { enqueueNotification, getRiskAddress, getDistanceToCoast } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { RISK_LOCATIONS_ACCURACY } from 'consts';\r\n\r\nfunction loadScript(src, position, id) {\r\n  if (!position) {\r\n    return;\r\n  }\r\n\r\n  const script = document.createElement('script');\r\n  script.setAttribute('async', '');\r\n  script.setAttribute('id', id);\r\n  script.src = src;\r\n  position.appendChild(script);\r\n}\r\n\r\nconst autocompleteService = { current: null };\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  icon: {\r\n    color: theme.palette.text.secondary,\r\n    marginRight: theme.spacing(2),\r\n  },\r\n  autocomplete: {\r\n    width: 300,\r\n  },\r\n}));\r\n\r\nexport default function LocationAutocomplete({ handleAdd, componentRestrictions }) {\r\n  const dispatch = useDispatch();\r\n  const classes = useStyles();\r\n\r\n  const [value, setValue] = useState(null);\r\n  const [inputValue, setInputValue] = useState('');\r\n  const [options, setOptions] = useState([]);\r\n  const [isAdding, setIsAdding] = useState(false);\r\n\r\n  const loaded = useRef(false);\r\n\r\n  if (typeof window !== 'undefined' && !loaded.current) {\r\n    if (!document.querySelector('#google-maps')) {\r\n      loadScript(\r\n        'https://maps.googleapis.com/maps/api/js?key=AIzaSyBeX9Z1AmI5hFNx3FAfdodgyv34B7dy9CY&libraries=places',\r\n        document.querySelector('head'),\r\n        'google-maps'\r\n      );\r\n    }\r\n\r\n    loaded.current = true;\r\n  }\r\n\r\n  const fetch = React.useMemo(\r\n    () =>\r\n      throttle((request, callback) => {\r\n        autocompleteService.current.getPlacePredictions(request, callback);\r\n      }, 200),\r\n    []\r\n  );\r\n\r\n  React.useEffect(() => {\r\n    let active = true;\r\n\r\n    if (!autocompleteService.current && window.google) {\r\n      autocompleteService.current = new window.google.maps.places.AutocompleteService();\r\n    }\r\n    if (!autocompleteService.current) {\r\n      return undefined;\r\n    }\r\n\r\n    fetch({ input: inputValue, componentRestrictions }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (value) {\r\n          newOptions = [value];\r\n        }\r\n\r\n        if (results) {\r\n          newOptions = [...newOptions, ...results];\r\n        }\r\n\r\n        setOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [value, inputValue, fetch, componentRestrictions]);\r\n\r\n  const getAddressDetails = async (address) => {\r\n    const response = await dispatch(getRiskAddress(address));\r\n    if (response?.accuracy !== 'ROOFTOP')\r\n      if (!RISK_LOCATIONS_ACCURACY.includes(response?.accuracy)) return { error: 'NO_ACCURATE_RESULT', address };\r\n\r\n    const location = { lng: response.lng, lat: response.lat };\r\n    const distanceToCoastResult = await dispatch(getDistanceToCoast(location));\r\n    const streetAddress = response?.streetNumber ? `${response.streetNumber} ${response?.streetAddress}` : `${response?.streetAddress}`;\r\n\r\n    const result = {\r\n      city: response?.city,\r\n      zip: response?.zip,\r\n      county: response?.county,\r\n      state: response?.state,\r\n      streetAddress,\r\n      formattedAddress: response?.outputAddress,\r\n      distanceToCoast: distanceToCoastResult?.distanceInMiles,\r\n      distanceToCoastInitialValue: distanceToCoastResult?.distanceInMiles,\r\n      latitude: response?.lat,\r\n      longitude: response?.lng,\r\n    };\r\n\r\n    return result;\r\n  };\r\n\r\n  const handleAddAddress = async () => {\r\n    setIsAdding(true);\r\n\r\n    if (value?.description) {\r\n      const result = await getAddressDetails(value.description);\r\n\r\n      if (result?.error !== 'NO_ACCURATE_RESULT') {\r\n        handleAdd(result);\r\n      } else {\r\n        dispatch(\r\n          enqueueNotification(`${result?.address} ${utils.string.t('products.multiLocation.buildingError')}`, 'error', { delay: 6000 })\r\n        );\r\n      }\r\n    }\r\n    setIsAdding(false);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Box mb={1}>\r\n        <Autocomplete\r\n          id=\"google-autocomplete\"\r\n          className={classes.autocomplete}\r\n          getOptionLabel={(option) => (typeof option === 'string' ? option : option.description)}\r\n          filterOptions={(x) => x}\r\n          options={options}\r\n          autoComplete\r\n          includeInputInList\r\n          filterSelectedOptions\r\n          value={value}\r\n          onChange={(event, newValue) => {\r\n            setOptions(newValue ? [newValue, ...options] : options);\r\n            setValue(newValue);\r\n          }}\r\n          onInputChange={(event, newInputValue) => {\r\n            setInputValue(newInputValue);\r\n          }}\r\n          renderInput={(params) => (\r\n            <TextField\r\n              {...params}\r\n              label={utils.string.t('products.multiLocation.label')}\r\n              placeholder={utils.string.t('products.multiLocation.placeholder')}\r\n              variant=\"outlined\"\r\n              fullWidth\r\n              onKeyPress={(event) => {\r\n                if (event.key === 'Enter') {\r\n                  event.preventDefault();\r\n                  handleAddAddress();\r\n                }\r\n              }}\r\n            />\r\n          )}\r\n          renderOption={(option) => {\r\n            const matches = option.structured_formatting.main_text_matched_substrings;\r\n            const parts = parse(\r\n              option.structured_formatting.main_text,\r\n              matches.map((match) => [match.offset, match.offset + match.length])\r\n            );\r\n\r\n            return (\r\n              <Grid container alignItems=\"center\">\r\n                <Grid item>\r\n                  <LocationOnIcon className={classes.icon} />\r\n                </Grid>\r\n                <Grid item xs>\r\n                  {parts.map((part, index) => (\r\n                    <span key={index} style={{ fontWeight: part.highlight ? 700 : 400 }}>\r\n                      {part.text}\r\n                    </span>\r\n                  ))}\r\n\r\n                  <Typography variant=\"body2\" color=\"textSecondary\">\r\n                    {option.structured_formatting.secondary_text}\r\n                  </Typography>\r\n                </Grid>\r\n              </Grid>\r\n            );\r\n          }}\r\n        />\r\n      </Box>\r\n      <Box ml={2.5} mt={1}>\r\n        <Button\r\n          disabled={isAdding || !value}\r\n          color=\"primary\"\r\n          size=\"small\"\r\n          icon={isAdding ? null : AddIcon}\r\n          text={utils.string.t('app.addLocation')}\r\n          onClick={() => handleAddAddress()}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}