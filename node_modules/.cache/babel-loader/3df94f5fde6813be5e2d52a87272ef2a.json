{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsRiskRefs\\\\ProcessingInstructionsRiskRefs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { firstBy } from 'thenby';\nimport isEqual from 'lodash/isEqual';\nimport get from 'lodash/get';\nimport uniqBy from 'lodash/uniqBy'; // app\n\nimport ProcessingInstructionsRiskRefsView from './ProcessingInstructionsRiskRefs.view';\nimport { searchRiskRefIds, enqueueNotification, searchInsuredCoverHolderNames, showModal, getRiskReferenceDetails, storeProcessingInstruction, saveRiskReferences, selectUser, getDocumentsInfo, storeProcessingInstructionDocuments, removeBulkDocumentsOnLeadRefChange } from 'stores';\nimport * as utils from 'utils';\nimport { TabularOptionDetail } from 'components';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsRiskRefs.propTypes = {\n  instruction: PropTypes.object,\n  isStatusSubmittedProcessing: PropTypes.bool,\n  isStatusReopened: PropTypes.bool,\n  handlers: PropTypes.shape({\n    next: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsRiskRefs(_ref) {\n  _s();\n\n  var _processTypes$find,\n      _this = this;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      isStatusSubmittedProcessing = _ref.isStatusSubmittedProcessing,\n      isStatusReopened = _ref.isStatusReopened;\n  var dispatch = useDispatch();\n  var riskFieldRef = useRef(null);\n  var departmentList = useSelector(function (state) {\n    return get(state, 'processingInstructions.departmentList');\n  }) || [];\n  var processTypes = useSelector(function (state) {\n    return get(state, 'referenceData.processTypes');\n  }) || [];\n  var selectedProcess = (_processTypes$find = processTypes.find(function (type) {\n    return type.processTypeID === (instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  })) === null || _processTypes$find === void 0 ? void 0 : _processTypes$find.processTypeDetails;\n  var user = useSelector(selectUser);\n  var documents = useSelector(getDocumentsInfo);\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var isEditable = userHasWritePermission && (isDraft || isRejectedDraft);\n  var isReadOnly = !isEditable;\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isClosing = utils.processingInstructions.isClosing(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFdo = utils.processingInstructions.isFdo(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFaBorderProcessType = isBordereau || isFeeAndAmendment;\n\n  var _useState = useState((instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences) || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      riskRefs = _useState2[0],\n      setRiskRefs = _useState2[1];\n\n  var _useState3 = useState((documents === null || documents === void 0 ? void 0 : documents.riskReferences) || []),\n      _useState4 = _slicedToArray(_useState3, 2),\n      riskRefsForDocuments = _useState4[0],\n      setRiskRefsForDocuments = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchReferenceValue = _useState6[0],\n      setSearchReferenceValue = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchInsuredNames = _useState8[0],\n      setSearchInsuredNames = _useState8[1];\n\n  var _useState9 = useState('risk'),\n      _useState10 = _slicedToArray(_useState9, 1),\n      searchReferenceType = _useState10[0];\n\n  var _useState11 = useState('insuredCoverHolder'),\n      _useState12 = _slicedToArray(_useState11, 1),\n      searchInsuredType = _useState12[0];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedProcessRefinementColumns = _useState14[0],\n      setSelectedProcessRefinementColumns = _useState14[1];\n\n  var riskRefsHasLead = riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.some(function (r) {\n    return r.leadPolicy;\n  });\n  var optionsDepartments = uniqBy(departmentList, 'deptName').map(function (d) {\n    return {\n      id: d.id,\n      name: d.deptName\n    };\n  });\n  useEffect(function () {\n    setRiskRefs(instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences);\n  }, [instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences]);\n  useEffect(function () {\n    setRiskRefsForDocuments(documents === null || documents === void 0 ? void 0 : documents.riskReferences);\n  }, [documents === null || documents === void 0 ? void 0 : documents.riskReferences]);\n  useEffect(function () {\n    setSelectedProcessRefinementColumns(isEndorsement || isFeeAndAmendment);\n  }, [isEndorsement, isFeeAndAmendment]);\n\n  var isPageEdited = function isPageEdited() {\n    // we're sorting the refs\n    // and only comparing only a subset of properties that are editable\n    var savedRiskRefs = ((instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences) || []).sort(firstBy(utils.sort.array('lexical', 'riskRefId'))).map(function (r) {\n      var _r$riskRefId, _r$endorsementNumber, _r$isNonPremium;\n\n      return {\n        leadPolicy: Boolean(r.leadPolicy),\n        riskRefId: (_r$riskRefId = r.riskRefId) === null || _r$riskRefId === void 0 ? void 0 : _r$riskRefId.toString(),\n        endorsementNumber: (_r$endorsementNumber = r.endorsementNumber) === null || _r$endorsementNumber === void 0 ? void 0 : _r$endorsementNumber.toString(),\n        isNonPremium: (_r$isNonPremium = r.isNonPremium) === null || _r$isNonPremium === void 0 ? void 0 : _r$isNonPremium.toString()\n      };\n    });\n    var currentRiskRefs = riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.sort(firstBy(utils.sort.array('lexical', 'riskRefId'))).map(function (r) {\n      var _r$riskRefId2, _r$endorsementNumber2, _r$isNonPremium2;\n\n      return {\n        leadPolicy: Boolean(r.leadPolicy),\n        riskRefId: (_r$riskRefId2 = r.riskRefId) === null || _r$riskRefId2 === void 0 ? void 0 : _r$riskRefId2.toString(),\n        endorsementNumber: (_r$endorsementNumber2 = r.endorsementNumber) === null || _r$endorsementNumber2 === void 0 ? void 0 : _r$endorsementNumber2.toString(),\n        isNonPremium: (_r$isNonPremium2 = r.isNonPremium) === null || _r$isNonPremium2 === void 0 ? void 0 : _r$isNonPremium2.toString()\n      };\n    });\n    return !isEqual(savedRiskRefs, currentRiskRefs);\n  };\n\n  var isLeadRiskRefChanged = function isLeadRiskRefChanged() {\n    var _instruction$riskRefe, _instruction$riskRefe2, _instruction$riskRefe3, _riskRefs$find, _riskRefs$find$riskRe;\n\n    var savedLeadRiskRef = instruction === null || instruction === void 0 ? void 0 : (_instruction$riskRefe = instruction.riskReferences) === null || _instruction$riskRefe === void 0 ? void 0 : (_instruction$riskRefe2 = _instruction$riskRefe.find(function (r) {\n      return Boolean(r.leadPolicy);\n    })) === null || _instruction$riskRefe2 === void 0 ? void 0 : (_instruction$riskRefe3 = _instruction$riskRefe2.riskRefId) === null || _instruction$riskRefe3 === void 0 ? void 0 : _instruction$riskRefe3.toString();\n    var currentLeadRiskRef = riskRefs === null || riskRefs === void 0 ? void 0 : (_riskRefs$find = riskRefs.find(function (r) {\n      return Boolean(r.leadPolicy);\n    })) === null || _riskRefs$find === void 0 ? void 0 : (_riskRefs$find$riskRe = _riskRefs$find.riskRefId) === null || _riskRefs$find$riskRe === void 0 ? void 0 : _riskRefs$find$riskRe.toString();\n    return !isEqual(savedLeadRiskRef, currentLeadRiskRef);\n  };\n\n  var fetchPolicyRefs = useCallback( /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(type, searchTerm) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(searchTerm.length >= 3)) {\n                _context.next = 2;\n                break;\n              }\n\n              return _context.abrupt(\"return\", dispatch(searchRiskRefIds(searchTerm)));\n\n            case 2:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function (_x, _x2) {\n      return _ref2.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var fetchInsuredOrCoverHolderNames = useCallback( /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(type, searchTerm) {\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              if (!(searchTerm.length >= 3)) {\n                _context2.next = 2;\n                break;\n              }\n\n              return _context2.abrupt(\"return\", dispatch(searchInsuredCoverHolderNames(searchTerm)));\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref3.apply(this, arguments);\n    };\n  }(), [dispatch]);\n\n  var addRiskRef = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(riskRefId) {\n      var _response$response;\n\n      var response, updatedRiskRefs, updatedRiskRefsForDocuments;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!((riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.find(function (rr) {\n                return rr.riskRefId === riskRefId;\n              })) && (!isEndorsement || !isFeeAndAmendment))) {\n                _context3.next = 2;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'error')));\n\n            case 2:\n              _context3.next = 4;\n              return dispatch(getRiskReferenceDetails(riskRefId, selectedProcess));\n\n            case 4:\n              response = _context3.sent;\n\n              if (response && (response === null || response === void 0 ? void 0 : (_response$response = response.response) === null || _response$response === void 0 ? void 0 : _response$response.status) !== 500) {\n                if ((riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) === 0) {\n                  response['leadPolicy'] = true;\n                }\n\n                updatedRiskRefs = [].concat(_toConsumableArray(riskRefs), [response]);\n                setRiskRefs(updatedRiskRefs);\n                updatedRiskRefsForDocuments = [].concat(_toConsumableArray(riskRefsForDocuments), [response]);\n                setRiskRefsForDocuments(updatedRiskRefsForDocuments);\n              }\n\n            case 6:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function addRiskRef(_x5) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onChangeLeadRiskRef = function onChangeLeadRiskRef(event, riskRefId) {\n    setRiskRefs(riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.map(function (r) {\n      return _objectSpread(_objectSpread({}, r), {}, {\n        leadPolicy: r.riskRefId === riskRefId\n      });\n    }));\n    setRiskRefsForDocuments(riskRefsForDocuments.map(function (r) {\n      return _objectSpread(_objectSpread({}, r), {}, {\n        leadPolicy: r.riskRefId === riskRefId\n      });\n    }));\n  };\n\n  var removeRiskReference = function removeRiskReference(riskRefId) {\n    var refsToKeep = riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.filter(function (ref) {\n      return ref.riskRefId !== riskRefId;\n    });\n    setRiskRefs(refsToKeep);\n    var refsForDocumentsToKeep = riskRefsForDocuments.filter(function (ref) {\n      return ref.riskRefId !== riskRefId;\n    });\n    setRiskRefsForDocuments(refsForDocumentsToKeep);\n  };\n\n  var handleCancel = function handleCancel() {\n    setRiskRefs((instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences) || []);\n    setRiskRefsForDocuments((documents === null || documents === void 0 ? void 0 : documents.riskReferences) || []);\n  };\n\n  var handleRemove = function handleRemove(index, riskRefId) {\n    removeRiskReference(riskRefId);\n  };\n\n  var handleAdvancedSearch = function handleAdvancedSearch(props) {\n    dispatch(showModal({\n      component: 'ADD_RISK_REF_ADVANCED_SEARCH',\n      props: {\n        title: 'processingInstructions.addRiskReference.addRiskRefAdvancedSearch.label',\n        fullWidth: true,\n        maxWidth: 'xl',\n        disableAutoFocus: true,\n        componentProps: {\n          props: props,\n          instruction: instruction,\n          selectedProcess: selectedProcess,\n          riskRefs: riskRefs,\n          setRiskRefs: setRiskRefs\n        }\n      }\n    }));\n  };\n\n  var handleSave = function handleSave(type) {\n    var updatedInstruction = _objectSpread(_objectSpread({}, instruction), {}, {\n      riskReferences: riskRefs\n    });\n\n    var updatedDocuments = _objectSpread(_objectSpread({}, documents), {}, {\n      riskReferences: riskRefsForDocuments\n    }, isLeadRiskRefChanged() && {\n      premiumTaxDocument: null,\n      signedLinesDocument: null\n    });\n\n    dispatch(storeProcessingInstructionDocuments(updatedDocuments));\n    dispatch(storeProcessingInstruction(updatedInstruction));\n    dispatch(saveRiskReferences(updatedInstruction)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n        if (isPageEdited() && type === 'saveNext') {\n          handlers.next();\n        }\n      }\n    });\n  };\n\n  var confirmBeforeSave = function confirmBeforeSave(type) {\n    var _updatedInstruction$r, _updatedInstruction$r2, _updatedInstruction$r3, _updatedInstruction$r4;\n\n    var updatedInstruction = _objectSpread(_objectSpread({}, instruction), {}, {\n      riskReferences: riskRefs\n    });\n\n    var endorsementSelected = updatedInstruction === null || updatedInstruction === void 0 ? void 0 : (_updatedInstruction$r = updatedInstruction.riskReferences) === null || _updatedInstruction$r === void 0 ? void 0 : _updatedInstruction$r.every(function (r) {\n      return r.hasOwnProperty('endorsementNumber');\n    });\n    var endorsementValueNotPresent = updatedInstruction === null || updatedInstruction === void 0 ? void 0 : (_updatedInstruction$r2 = updatedInstruction.riskReferences) === null || _updatedInstruction$r2 === void 0 ? void 0 : _updatedInstruction$r2.some(function (r) {\n      return r.endorsementNumber === 0;\n    });\n    var isEndorsement = utils.processingInstructions.isEndorsement(updatedInstruction === null || updatedInstruction === void 0 ? void 0 : updatedInstruction.processTypeId);\n    var isEndorsementReferenceIdsAvailable = updatedInstruction === null || updatedInstruction === void 0 ? void 0 : (_updatedInstruction$r3 = updatedInstruction.riskReferences) === null || _updatedInstruction$r3 === void 0 ? void 0 : _updatedInstruction$r3.some(function (rr) {\n      var _rr$endorsement;\n\n      return (rr === null || rr === void 0 ? void 0 : (_rr$endorsement = rr.endorsement) === null || _rr$endorsement === void 0 ? void 0 : _rr$endorsement.length) === 0;\n    });\n    var endorsementReference = updatedInstruction === null || updatedInstruction === void 0 ? void 0 : (_updatedInstruction$r4 = updatedInstruction.riskReferences) === null || _updatedInstruction$r4 === void 0 ? void 0 : _updatedInstruction$r4.find(function (rr) {\n      var _rr$endorsement2;\n\n      return (rr === null || rr === void 0 ? void 0 : (_rr$endorsement2 = rr.endorsement) === null || _rr$endorsement2 === void 0 ? void 0 : _rr$endorsement2.length) === 0;\n    });\n\n    if ((riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) > 0 && !riskRefsHasLead) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.chooseLeadRiskRefToSave', 'warning'));\n      return;\n    } else if (isEndorsement && isEndorsementReferenceIdsAvailable) {\n      dispatch(enqueueNotification(utils.string.t('processingInstructions.addRiskReference.noEndorsementValueAssociatedWithRiskRef', {\n        riskRefId: endorsementReference ? endorsementReference.riskRefId : ''\n      }), 'warning'));\n      return;\n    } else if (isEndorsement && (riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) > 0 && (!endorsementSelected || endorsementValueNotPresent)) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noEndorsementValueSelected', 'warning'));\n      return;\n    } else if ((riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) === 0) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noLeadRiskRefAddedToSave', 'warning'));\n      return;\n    }\n\n    if (isLeadRiskRefChanged() && ((documents === null || documents === void 0 ? void 0 : documents.premiumTaxDocument) || (documents === null || documents === void 0 ? void 0 : documents.signedLinesDocument))) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          title: utils.string.t('app.confirm'),\n          maxWidth: 'sm',\n          fullWidth: true,\n          componentProps: {\n            cancelLabel: utils.string.t('app.no'),\n            confirmLabel: utils.string.t('app.yes'),\n            confirmMessage: utils.string.t('processingInstructions.addRiskReference.changeLeadRiskRefAlertMessage'),\n            cancelHandler: function cancelHandler() {},\n            submitHandler: function submitHandler() {\n              dispatch(removeBulkDocumentsOnLeadRefChange({\n                documents: documents\n              })).then(function (response) {\n                var _response$status;\n\n                if ((response === null || response === void 0 ? void 0 : (_response$status = response.status) === null || _response$status === void 0 ? void 0 : _response$status.toLowerCase()) === constants.API_RESPONSE_OK.toLowerCase()) {\n                  handleSave(type);\n                }\n              });\n            }\n          }\n        }\n      }));\n    } else {\n      handleSave(type);\n    }\n  };\n\n  var columns = [{\n    id: 'chooseLead',\n    label: utils.string.t('processingInstructions.gridUmrColumns.chooseLead')\n  }, {\n    id: 'riskReferenceId',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskReferenceId')\n  }, {\n    id: 'gxbInstance',\n    label: utils.string.t('processingInstructions.gridUmrColumns.gxbInstance')\n  }, {\n    id: 'insuredOrCoverHolder',\n    label: utils.string.t('processingInstructions.gridUmrColumns.insuredOrCoverHolder')\n  }, {\n    id: 'yearOfAccounts',\n    label: utils.string.t('processingInstructions.gridUmrColumns.yearOfAccounts')\n  }, {\n    id: 'clientName',\n    label: utils.string.t('processingInstructions.gridUmrColumns.clientName')\n  }, {\n    id: 'riskStatus',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskStatus')\n  }, {\n    id: 'riskDetails',\n    label: utils.string.t('processingInstructions.gridUmrColumns.riskDetails')\n  }].concat(_toConsumableArray(selectedProcessRefinementColumns ? [{\n    id: 'endorsementRef',\n    label: \"\".concat(utils.string.t('processingInstructions.gridUmrColumns.endorsementRef', {\n      isMandatory: !isFaBorderProcessType ? '*' : ''\n    }))\n  }, {\n    id: 'checkbox',\n    label: utils.string.t('processingInstructions.gridUmrColumns.nonPremium'),\n    narrow: true,\n    nowrap: true\n  }] : []), _toConsumableArray(isEditable ? [{\n    id: 'removeUmrs',\n    empty: true\n  }] : []));\n\n  var renderOption = function renderOption(ref) {\n    var optionTooltip = function optionTooltip(ref) {\n      if (!(ref === null || ref === void 0 ? void 0 : ref.xbInstance)) return;\n      return /*#__PURE__*/_jsxDEV(\"span\", {\n        children: [utils.string.t('fileUpload.xbInstance'), \": \", ref.xbInstance]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 336,\n        columnNumber: 9\n      }, _this);\n    };\n\n    var instructionsListAsString = function instructionsListAsString() {\n      var _ref$instructionId, _ref$instructionId2, _ref$instructionId2$s, _ref$instructionId3;\n\n      if (((_ref$instructionId = ref.instructionId) === null || _ref$instructionId === void 0 ? void 0 : _ref$instructionId.length) === 1) return ref.instructionId[0];\n      var joinedVals = (_ref$instructionId2 = ref.instructionId) === null || _ref$instructionId2 === void 0 ? void 0 : (_ref$instructionId2$s = _ref$instructionId2.slice(0, 3)) === null || _ref$instructionId2$s === void 0 ? void 0 : _ref$instructionId2$s.join(', ');\n      if (((_ref$instructionId3 = ref.instructionId) === null || _ref$instructionId3 === void 0 ? void 0 : _ref$instructionId3.length) > 3) joinedVals += '...';\n      return joinedVals;\n    };\n\n    return /*#__PURE__*/_jsxDEV(TabularOptionDetail, {\n      label: ref.policyReference,\n      labelWidth: '20%',\n      sublabels: [ref.assuredName, ref.riskDetails, instructionsListAsString()],\n      sublabelWidths: ['25%', '35%', '20%'],\n      detail: optionTooltip(ref)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 349,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var searchFields = [{\n    name: 'riskReference',\n    type: 'autocompletemui',\n    label: utils.string.t('processingInstructions.addRiskReference.riskRefId'),\n    value: searchReferenceValue || null,\n    options: [],\n    optionKey: 'policyReference',\n    optionLabel: 'policyReference',\n    optionsFetch: {\n      type: 'risk',\n      handler: fetchPolicyRefs\n    },\n    muiComponentProps: {\n      renderOption: renderOption,\n      ref: riskFieldRef,\n      fullWidth: true,\n      disabled: isStatusSubmittedProcessing || isStatusReopened,\n      inputProps: {\n        maxLength: 25\n      }\n    },\n    callback: function callback(event, data) {\n      setSearchReferenceValue(data);\n    },\n    showLoading: true\n  }, {\n    name: 'insuredCoverHolderName',\n    type: 'autocompletemui',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.insuredCoverHolder'),\n    value: searchInsuredNames || null,\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    optionsFetch: {\n      type: 'insuredCoverHolder',\n      handler: fetchInsuredOrCoverHolderNames\n    },\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 25\n      },\n      disabled: isStatusSubmittedProcessing || isStatusReopened\n    },\n    callback: function callback(event, data) {\n      setSearchInsuredNames(data);\n    }\n  }, {\n    name: 'department',\n    type: 'autocompletemui',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.department.label'),\n    value: null,\n    options: optionsDepartments,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      disabled: isStatusSubmittedProcessing || isStatusReopened\n    }\n  }, {\n    name: 'yearOfAccount',\n    type: 'datepicker',\n    label: utils.string.t('processingInstructions.addRiskReference.fields.yearOfAccount'),\n    value: new Date().getFullYear().toString(),\n    placeholder: 'YYYY',\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('processingInstructions.addRiskReference.fields.helperTextYoa'),\n      disabled: isStatusSubmittedProcessing || isStatusReopened\n    },\n    muiPickerProps: {\n      views: ['year'],\n      format: 'YYYY',\n      clearable: true\n    }\n  }]; // abort\n\n  if (!instruction) return;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsRiskRefsView, {\n    instructionId: instruction === null || instruction === void 0 ? void 0 : instruction.id,\n    riskRefs: riskRefs,\n    searchFields: searchFields,\n    searchReferenceType: searchReferenceType,\n    searchInsuredType: searchInsuredType,\n    columns: columns,\n    isStatusSubmittedProcessing: isStatusSubmittedProcessing,\n    isStatusReopened: isStatusReopened,\n    isPageEdited: isPageEdited(),\n    isReadOnly: isReadOnly,\n    isEditable: isEditable,\n    isClosing: isClosing,\n    isFdo: isFdo,\n    isEndorsement: isEndorsement,\n    isFeeAndAmendment: isFeeAndAmendment,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      save: confirmBeforeSave,\n      cancel: handleCancel,\n      advancedSearch: handleAdvancedSearch,\n      riskRefFetch: addRiskRef,\n      riskRefChangeLead: onChangeLeadRiskRef,\n      riskRefRemove: handleRemove,\n      riskRefSet: setRiskRefs\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 443,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsRiskRefs, \"kcQWAEJpQNgkbQ8nPMZNNC2U7zs=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsRiskRefs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsRiskRefs\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsRiskRefs/ProcessingInstructionsRiskRefs.js"],"names":["React","useEffect","useState","useRef","useCallback","PropTypes","useDispatch","useSelector","firstBy","isEqual","get","uniqBy","ProcessingInstructionsRiskRefsView","searchRiskRefIds","enqueueNotification","searchInsuredCoverHolderNames","showModal","getRiskReferenceDetails","storeProcessingInstruction","saveRiskReferences","selectUser","getDocumentsInfo","storeProcessingInstructionDocuments","removeBulkDocumentsOnLeadRefChange","utils","TabularOptionDetail","constants","ProcessingInstructionsRiskRefs","propTypes","instruction","object","isStatusSubmittedProcessing","bool","isStatusReopened","handlers","shape","next","func","isRequired","dispatch","riskFieldRef","departmentList","state","processTypes","selectedProcess","find","type","processTypeID","processTypeId","processTypeDetails","user","documents","isDraft","processingInstructions","status","statusId","isRejectedDraft","userHasWritePermission","app","access","feature","isEditable","isReadOnly","isEndorsement","isClosing","isFdo","isFeeAndAmendment","isBordereau","isFaBorderProcessType","riskReferences","riskRefs","setRiskRefs","riskRefsForDocuments","setRiskRefsForDocuments","searchReferenceValue","setSearchReferenceValue","searchInsuredNames","setSearchInsuredNames","searchReferenceType","searchInsuredType","selectedProcessRefinementColumns","setSelectedProcessRefinementColumns","riskRefsHasLead","some","r","leadPolicy","optionsDepartments","map","d","id","name","deptName","isPageEdited","savedRiskRefs","sort","array","Boolean","riskRefId","toString","endorsementNumber","isNonPremium","currentRiskRefs","isLeadRiskRefChanged","savedLeadRiskRef","currentLeadRiskRef","fetchPolicyRefs","searchTerm","length","fetchInsuredOrCoverHolderNames","addRiskRef","rr","response","updatedRiskRefs","updatedRiskRefsForDocuments","onChangeLeadRiskRef","event","removeRiskReference","refsToKeep","filter","ref","refsForDocumentsToKeep","handleCancel","handleRemove","index","handleAdvancedSearch","props","component","title","fullWidth","maxWidth","disableAutoFocus","componentProps","handleSave","updatedInstruction","updatedDocuments","premiumTaxDocument","signedLinesDocument","then","API_RESPONSE_OK","confirmBeforeSave","endorsementSelected","every","hasOwnProperty","endorsementValueNotPresent","isEndorsementReferenceIdsAvailable","endorsement","endorsementReference","string","t","cancelLabel","confirmLabel","confirmMessage","cancelHandler","submitHandler","toLowerCase","columns","label","isMandatory","narrow","nowrap","empty","renderOption","optionTooltip","xbInstance","instructionsListAsString","instructionId","joinedVals","slice","join","policyReference","assuredName","riskDetails","searchFields","value","options","optionKey","optionLabel","optionsFetch","handler","muiComponentProps","disabled","inputProps","maxLength","callback","data","showLoading","Date","getFullYear","placeholder","helperText","muiPickerProps","views","format","clearable","save","cancel","advancedSearch","riskRefFetch","riskRefChangeLead","riskRefRemove","riskRefSet"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { firstBy } from 'thenby';\r\nimport isEqual from 'lodash/isEqual';\r\nimport get from 'lodash/get';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\n// app\r\nimport ProcessingInstructionsRiskRefsView from './ProcessingInstructionsRiskRefs.view';\r\nimport {\r\n  searchRiskRefIds,\r\n  enqueueNotification,\r\n  searchInsuredCoverHolderNames,\r\n  showModal,\r\n  getRiskReferenceDetails,\r\n  storeProcessingInstruction,\r\n  saveRiskReferences,\r\n  selectUser,\r\n  getDocumentsInfo,\r\n  storeProcessingInstructionDocuments,\r\n  removeBulkDocumentsOnLeadRefChange,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { TabularOptionDetail } from 'components';\r\nimport * as constants from 'consts';\r\n\r\nProcessingInstructionsRiskRefs.propTypes = {\r\n  instruction: PropTypes.object,\r\n  isStatusSubmittedProcessing: PropTypes.bool,\r\n  isStatusReopened: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    next: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsRiskRefs({ instruction, handlers, isStatusSubmittedProcessing, isStatusReopened }) {\r\n  const dispatch = useDispatch();\r\n  const riskFieldRef = useRef(null);\r\n  const departmentList = useSelector((state) => get(state, 'processingInstructions.departmentList')) || [];\r\n  const processTypes = useSelector((state) => get(state, 'referenceData.processTypes')) || [];\r\n\r\n  const selectedProcess = processTypes.find((type) => type.processTypeID === instruction?.processTypeId)?.processTypeDetails;\r\n  const user = useSelector(selectUser);\r\n  const documents = useSelector(getDocumentsInfo);\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const isEditable = userHasWritePermission && (isDraft || isRejectedDraft);\r\n  const isReadOnly = !isEditable;\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isClosing = utils.processingInstructions.isClosing(instruction?.processTypeId);\r\n  const isFdo = utils.processingInstructions.isFdo(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isFaBorderProcessType = isBordereau || isFeeAndAmendment;\r\n\r\n  const [riskRefs, setRiskRefs] = useState(instruction?.riskReferences || []);\r\n  const [riskRefsForDocuments, setRiskRefsForDocuments] = useState(documents?.riskReferences || []);\r\n  const [searchReferenceValue, setSearchReferenceValue] = useState(null);\r\n  const [searchInsuredNames, setSearchInsuredNames] = useState(null);\r\n  const [searchReferenceType] = useState('risk');\r\n  const [searchInsuredType] = useState('insuredCoverHolder');\r\n  const [selectedProcessRefinementColumns, setSelectedProcessRefinementColumns] = useState(false);\r\n\r\n  const riskRefsHasLead = riskRefs?.some((r) => r.leadPolicy);\r\n  const optionsDepartments = uniqBy(departmentList, 'deptName').map((d) => ({ id: d.id, name: d.deptName }));\r\n\r\n  useEffect(() => {\r\n    setRiskRefs(instruction?.riskReferences);\r\n  }, [instruction?.riskReferences]);\r\n\r\n  useEffect(() => {\r\n    setRiskRefsForDocuments(documents?.riskReferences);\r\n  }, [documents?.riskReferences]);\r\n\r\n  useEffect(() => {\r\n    setSelectedProcessRefinementColumns(isEndorsement || isFeeAndAmendment);\r\n  }, [isEndorsement, isFeeAndAmendment]);\r\n\r\n  const isPageEdited = () => {\r\n    // we're sorting the refs\r\n    // and only comparing only a subset of properties that are editable\r\n    const savedRiskRefs = (instruction?.riskReferences || []).sort(firstBy(utils.sort.array('lexical', 'riskRefId'))).map((r) => {\r\n      return {\r\n        leadPolicy: Boolean(r.leadPolicy),\r\n        riskRefId: r.riskRefId?.toString(),\r\n        endorsementNumber: r.endorsementNumber?.toString(),\r\n        isNonPremium: r.isNonPremium?.toString(),\r\n      };\r\n    });\r\n\r\n    const currentRiskRefs = riskRefs?.sort(firstBy(utils.sort.array('lexical', 'riskRefId'))).map((r) => {\r\n      return {\r\n        leadPolicy: Boolean(r.leadPolicy),\r\n        riskRefId: r.riskRefId?.toString(),\r\n        endorsementNumber: r.endorsementNumber?.toString(),\r\n        isNonPremium: r.isNonPremium?.toString(),\r\n      };\r\n    });\r\n\r\n    return !isEqual(savedRiskRefs, currentRiskRefs);\r\n  };\r\n\r\n  const isLeadRiskRefChanged = () => {\r\n    const savedLeadRiskRef = instruction?.riskReferences?.find((r) => Boolean(r.leadPolicy))?.riskRefId?.toString();\r\n\r\n    const currentLeadRiskRef = riskRefs?.find((r) => Boolean(r.leadPolicy))?.riskRefId?.toString();\r\n\r\n    return !isEqual(savedLeadRiskRef, currentLeadRiskRef);\r\n  };\r\n\r\n  const fetchPolicyRefs = useCallback(\r\n    async (type, searchTerm) => {\r\n      if (searchTerm.length >= 3) {\r\n        return dispatch(searchRiskRefIds(searchTerm));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const fetchInsuredOrCoverHolderNames = useCallback(\r\n    async (type, searchTerm) => {\r\n      if (searchTerm.length >= 3) {\r\n        return dispatch(searchInsuredCoverHolderNames(searchTerm));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const addRiskRef = async (riskRefId) => {\r\n    if (riskRefs?.find((rr) => rr.riskRefId === riskRefId) && (!isEndorsement || !isFeeAndAmendment)) {\r\n      return dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'error'));\r\n    }\r\n\r\n    const response = await dispatch(getRiskReferenceDetails(riskRefId, selectedProcess));\r\n\r\n    if (response && response?.response?.status !== 500) {\r\n      if (riskRefs?.length === 0) {\r\n        response['leadPolicy'] = true;\r\n      }\r\n      const updatedRiskRefs = [...riskRefs, response];\r\n      setRiskRefs(updatedRiskRefs);\r\n      const updatedRiskRefsForDocuments = [...riskRefsForDocuments, response];\r\n      setRiskRefsForDocuments(updatedRiskRefsForDocuments);\r\n    }\r\n  };\r\n\r\n  const onChangeLeadRiskRef = (event, riskRefId) => {\r\n    setRiskRefs(\r\n      riskRefs?.map((r) => {\r\n        return { ...r, leadPolicy: r.riskRefId === riskRefId };\r\n      })\r\n    );\r\n    setRiskRefsForDocuments(\r\n      riskRefsForDocuments.map((r) => {\r\n        return { ...r, leadPolicy: r.riskRefId === riskRefId };\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeRiskReference = (riskRefId) => {\r\n    const refsToKeep = riskRefs?.filter((ref) => ref.riskRefId !== riskRefId);\r\n    setRiskRefs(refsToKeep);\r\n    const refsForDocumentsToKeep = riskRefsForDocuments.filter((ref) => ref.riskRefId !== riskRefId);\r\n    setRiskRefsForDocuments(refsForDocumentsToKeep);\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    setRiskRefs(instruction?.riskReferences || []);\r\n    setRiskRefsForDocuments(documents?.riskReferences || []);\r\n  };\r\n\r\n  const handleRemove = (index, riskRefId) => {\r\n    removeRiskReference(riskRefId);\r\n  };\r\n\r\n  const handleAdvancedSearch = (props) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_RISK_REF_ADVANCED_SEARCH',\r\n        props: {\r\n          title: 'processingInstructions.addRiskReference.addRiskRefAdvancedSearch.label',\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            props: props,\r\n            instruction: instruction,\r\n            selectedProcess: selectedProcess,\r\n            riskRefs: riskRefs,\r\n            setRiskRefs: setRiskRefs,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSave = (type) => {\r\n    const updatedInstruction = { ...instruction, riskReferences: riskRefs };\r\n    const updatedDocuments = {\r\n      ...documents,\r\n      riskReferences: riskRefsForDocuments,\r\n      ...(isLeadRiskRefChanged() && { premiumTaxDocument: null, signedLinesDocument: null }),\r\n    };\r\n\r\n    dispatch(storeProcessingInstructionDocuments(updatedDocuments));\r\n    dispatch(storeProcessingInstruction(updatedInstruction));\r\n    dispatch(saveRiskReferences(updatedInstruction)).then((response) => {\r\n      if (response?.status === constants.API_RESPONSE_OK) {\r\n        if (isPageEdited() && type === 'saveNext') {\r\n          handlers.next();\r\n        }\r\n      }\r\n    });\r\n  };\r\n\r\n  const confirmBeforeSave = (type) => {\r\n    const updatedInstruction = { ...instruction, riskReferences: riskRefs };\r\n    const endorsementSelected = updatedInstruction?.riskReferences?.every((r) => r.hasOwnProperty('endorsementNumber'));\r\n    const endorsementValueNotPresent = updatedInstruction?.riskReferences?.some((r) => r.endorsementNumber === 0);\r\n    const isEndorsement = utils.processingInstructions.isEndorsement(updatedInstruction?.processTypeId);\r\n    const isEndorsementReferenceIdsAvailable = updatedInstruction?.riskReferences?.some((rr) => rr?.endorsement?.length === 0);\r\n    const endorsementReference = updatedInstruction?.riskReferences?.find((rr) => rr?.endorsement?.length === 0);\r\n\r\n    if (riskRefs?.length > 0 && !riskRefsHasLead) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.chooseLeadRiskRefToSave', 'warning'));\r\n      return;\r\n    } else if (isEndorsement && isEndorsementReferenceIdsAvailable) {\r\n      dispatch(\r\n        enqueueNotification(\r\n          utils.string.t('processingInstructions.addRiskReference.noEndorsementValueAssociatedWithRiskRef', {\r\n            riskRefId: endorsementReference ? endorsementReference.riskRefId : '',\r\n          }),\r\n          'warning'\r\n        )\r\n      );\r\n      return;\r\n    } else if (isEndorsement && riskRefs?.length > 0 && (!endorsementSelected || endorsementValueNotPresent)) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noEndorsementValueSelected', 'warning'));\r\n      return;\r\n    } else if (riskRefs?.length === 0) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noLeadRiskRefAddedToSave', 'warning'));\r\n      return;\r\n    }\r\n\r\n    if (isLeadRiskRefChanged() && (documents?.premiumTaxDocument || documents?.signedLinesDocument)) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            title: utils.string.t('app.confirm'),\r\n            maxWidth: 'sm',\r\n            fullWidth: true,\r\n            componentProps: {\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              confirmMessage: utils.string.t('processingInstructions.addRiskReference.changeLeadRiskRefAlertMessage'),\r\n              cancelHandler: () => {},\r\n              submitHandler: () => {\r\n                dispatch(removeBulkDocumentsOnLeadRefChange({ documents })).then((response) => {\r\n                  if (response?.status?.toLowerCase() === constants.API_RESPONSE_OK.toLowerCase()) {\r\n                    handleSave(type);\r\n                  }\r\n                });\r\n              },\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      handleSave(type);\r\n    }\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'chooseLead',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.chooseLead'),\r\n    },\r\n    {\r\n      id: 'riskReferenceId',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskReferenceId'),\r\n    },\r\n    {\r\n      id: 'gxbInstance',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.gxbInstance'),\r\n    },\r\n    {\r\n      id: 'insuredOrCoverHolder',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.insuredOrCoverHolder'),\r\n    },\r\n    {\r\n      id: 'yearOfAccounts',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.yearOfAccounts'),\r\n    },\r\n    {\r\n      id: 'clientName',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.clientName'),\r\n    },\r\n    {\r\n      id: 'riskStatus',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskStatus'),\r\n    },\r\n    {\r\n      id: 'riskDetails',\r\n      label: utils.string.t('processingInstructions.gridUmrColumns.riskDetails'),\r\n    },\r\n    ...(selectedProcessRefinementColumns\r\n      ? [\r\n          {\r\n            id: 'endorsementRef',\r\n            label: `${utils.string.t('processingInstructions.gridUmrColumns.endorsementRef', {\r\n              isMandatory: !isFaBorderProcessType ? '*' : '',\r\n            })}`,\r\n          },\r\n          {\r\n            id: 'checkbox',\r\n            label: utils.string.t('processingInstructions.gridUmrColumns.nonPremium'),\r\n            narrow: true,\r\n            nowrap: true,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isEditable ? [{ id: 'removeUmrs', empty: true }] : []),\r\n  ];\r\n\r\n  const renderOption = (ref) => {\r\n    const optionTooltip = (ref) => {\r\n      if (!ref?.xbInstance) return;\r\n      return (\r\n        <span>\r\n          {utils.string.t('fileUpload.xbInstance')}: {ref.xbInstance}\r\n        </span>\r\n      );\r\n    };\r\n\r\n    const instructionsListAsString = () => {\r\n      if (ref.instructionId?.length === 1) return ref.instructionId[0];\r\n      let joinedVals = ref.instructionId?.slice(0, 3)?.join(', ');\r\n      if (ref.instructionId?.length > 3) joinedVals += '...';\r\n      return joinedVals;\r\n    };\r\n    return (\r\n      <TabularOptionDetail\r\n        label={ref.policyReference}\r\n        labelWidth={'20%'}\r\n        sublabels={[ref.assuredName, ref.riskDetails, instructionsListAsString()]}\r\n        sublabelWidths={['25%', '35%', '20%']}\r\n        detail={optionTooltip(ref)}\r\n      />\r\n    );\r\n  };\r\n\r\n  const searchFields = [\r\n    {\r\n      name: 'riskReference',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('processingInstructions.addRiskReference.riskRefId'),\r\n      value: searchReferenceValue || null,\r\n      options: [],\r\n      optionKey: 'policyReference',\r\n      optionLabel: 'policyReference',\r\n      optionsFetch: {\r\n        type: 'risk',\r\n        handler: fetchPolicyRefs,\r\n      },\r\n      muiComponentProps: {\r\n        renderOption,\r\n        ref: riskFieldRef,\r\n        fullWidth: true,\r\n        disabled: isStatusSubmittedProcessing || isStatusReopened,\r\n        inputProps: {\r\n          maxLength: 25,\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        setSearchReferenceValue(data);\r\n      },\r\n      showLoading: true,\r\n    },\r\n    {\r\n      name: 'insuredCoverHolderName',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.insuredCoverHolder'),\r\n      value: searchInsuredNames || null,\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      optionsFetch: {\r\n        type: 'insuredCoverHolder',\r\n        handler: fetchInsuredOrCoverHolderNames,\r\n      },\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 25,\r\n        },\r\n        disabled: isStatusSubmittedProcessing || isStatusReopened,\r\n      },\r\n      callback: (event, data) => {\r\n        setSearchInsuredNames(data);\r\n      },\r\n    },\r\n    {\r\n      name: 'department',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.department.label'),\r\n      value: null,\r\n      options: optionsDepartments,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        disabled: isStatusSubmittedProcessing || isStatusReopened,\r\n      },\r\n    },\r\n    {\r\n      name: 'yearOfAccount',\r\n      type: 'datepicker',\r\n      label: utils.string.t('processingInstructions.addRiskReference.fields.yearOfAccount'),\r\n      value: new Date().getFullYear().toString(),\r\n      placeholder: 'YYYY',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('processingInstructions.addRiskReference.fields.helperTextYoa'),\r\n        disabled: isStatusSubmittedProcessing || isStatusReopened,\r\n      },\r\n      muiPickerProps: {\r\n        views: ['year'],\r\n        format: 'YYYY',\r\n        clearable: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!instruction) return;\r\n\r\n  return (\r\n    <ProcessingInstructionsRiskRefsView\r\n      instructionId={instruction?.id}\r\n      riskRefs={riskRefs}\r\n      searchFields={searchFields}\r\n      searchReferenceType={searchReferenceType}\r\n      searchInsuredType={searchInsuredType}\r\n      columns={columns}\r\n      isStatusSubmittedProcessing={isStatusSubmittedProcessing}\r\n      isStatusReopened={isStatusReopened}\r\n      isPageEdited={isPageEdited()}\r\n      isReadOnly={isReadOnly}\r\n      isEditable={isEditable}\r\n      isClosing={isClosing}\r\n      isFdo={isFdo}\r\n      isEndorsement={isEndorsement}\r\n      isFeeAndAmendment={isFeeAndAmendment}\r\n      handlers={{\r\n        ...handlers,\r\n        save: confirmBeforeSave,\r\n\r\n        cancel: handleCancel,\r\n        advancedSearch: handleAdvancedSearch,\r\n        riskRefFetch: addRiskRef,\r\n        riskRefChangeLead: onChangeLeadRiskRef,\r\n        riskRefRemove: handleRemove,\r\n        riskRefSet: setRiskRefs,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}