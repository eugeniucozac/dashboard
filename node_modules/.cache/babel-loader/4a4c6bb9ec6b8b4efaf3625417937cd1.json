{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { postEditClaimDetailsInformation } from 'stores';\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  lossQualifiers: PropTypes.object,\n  resetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool.isRequired,\n  claimsDocsList: PropTypes.array\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _watch, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      claimsDocsList = _ref.claimsDocsList,\n      claimRefId = _ref.claimRefId,\n      claimData = _ref.claimData,\n      policyInformation = _ref.policyInformation,\n      complexityValues = _ref.complexityValues,\n      index = _ref.index,\n      handleNext = _ref.handleNext,\n      handleSave = _ref.handleSave,\n      _handleBack = _ref.handleBack,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      isBordereauChecked = _ref.isBordereauChecked,\n      lossQualifiers = _ref.lossQualifiers;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refResponseDisable = _useState4[0],\n      setRefResponseDisable = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      refValuesDisable = _useState6[0],\n      setRefValueDisable = _useState6[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      handleSubmit = _useForm.handleSubmit,\n      watch = _useForm.watch;\n\n  var lossQualifierID = (_watch = watch('lossQualifierID')) === null || _watch === void 0 ? void 0 : _watch.id;\n  var complexValues = watch('complexity');\n  var refValues = watch('referral');\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n      setRefResponseDisable(refResponseState);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setRefResponseDisable(true);\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleNext(index);\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  useEffect(function () {\n    if (lossQualifierID) {\n      var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n        return CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n          return itr === item.name;\n        });\n      }).map(function (item) {\n        return item.id;\n      });\n      var isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\n      setDateValidation(!isRequired);\n    }\n\n    if (complexValues) {\n      var _complexityValues$fin;\n\n      var getComplexityStatus = ((_complexityValues$fin = complexityValues.find(function (item) {\n        return item.complexityRulesID === (complexValues === null || complexValues === void 0 ? void 0 : complexValues.complexityRulesID);\n      })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      setRefValueDisable(getComplexityStatus);\n      getRefValues(refValues);\n    } else if (complexValues === null) {\n      setRefValueDisable(false);\n    }\n  }, [lossQualifierID, complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      mb: 0,\n      \"data-testid\": \"register-claim-card-information\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.legendContainer,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.claimInformation.title'),\n            nestedClasses: {\n              root: classes.formLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 123,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef), \" | \").concat(policyInformation.policyRef, \" | \").concat(policyInformation.insured),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 121,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 120,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-claimsCardInformation\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.claimInformation.claimRef'),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 134,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (_ref2 = (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimReference) || (claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                  nestedClasses: {\n                    root: classes.claimRef\n                  },\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 133,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                  error: errors.toDate,\n                  muiComponentProps: {\n                    disabled: dateValidation,\n                    fullWidth: true,\n                    classes: {\n                      root: classes.datepicker\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                  error: errors.location\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                  error: errors.complexity\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 165,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 163,\n              columnNumber: 15\n            }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                  error: errors.bordereauClaim,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 7,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                          error: errors.claimReceivedDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 183,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 182,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 5,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 186,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 185,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 181,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 180,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 179,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                      error: errors.toDate,\n                      muiComponentProps: {\n                        disabled: dateValidation,\n                        fullWidth: true,\n                        classes: {\n                          root: classes.datepicker\n                        }\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 193,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 192,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 191,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                      error: errors.fgunarrative\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 208,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 207,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 206,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: watch('adjuster') === 'beAdjuster' ? /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 214,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 213,\n                    columnNumber: 21\n                  }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'nonBeAdjuster', control)), {}, {\n                      error: errors.nonBeAdjuster\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 218,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 217,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                      error: errors.referral,\n                      muiComponentProps: {\n                        disabled: !refValuesDisable\n                      },\n                      callback: function callback(e, data) {\n                        getRefValues(data);\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 224,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 223,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 222,\n                  columnNumber: 19\n                }, this), isBordereauChecked && /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                      error: errors.bordereauPeriod\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 239,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 238,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 237,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 176,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                  error: errors.claimantName\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 248,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 247,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                  error: errors.lossQualifierID\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 254,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 253,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 252,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                  error: errors.priority\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 259,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 258,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 257,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                  error: errors.adjusterReference\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 264,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 263,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 262,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                  error: errors.rfiResponse,\n                  muiComponentProps: {\n                    disabled: refResponseDisable\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 269,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 268,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 267,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 246,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 129,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 128,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.UploadDocumentContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n            refData: claimData,\n            refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n            ,\n            dmsContext: DMS_CONTEXT_CLAIM,\n            documentTypeKey: DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims,\n            isTabView: false,\n            isClaims: true,\n            isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n            claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\n            docList: claimsDocsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 285,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 284,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 283,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 282,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: handleSubmit(handleSaveForm),\n      handleNextSubmit: handleSubmit(handleSubmitForm),\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 301,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterClaimCardInformationView, \"l2+rmeiRRtIdKSGWFHOnZ727mw0=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useEffect","useState","useDispatch","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","postEditClaimDetailsInformation","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","makeStyles","Box","Grid","RegisterClaimCardInformationView","prototype","claimantNames","array","isRequired","referralValues","lossQualifiers","object","resetKey","number","hasClaimRef","bool","claimsDocsList","fields","claimRefId","claimData","policyInformation","complexityValues","index","handleNext","handleSave","handleBack","activeStep","isAllStepsCompleted","isBordereauChecked","classes","name","dispatch","dateValidation","setDateValidation","refResponseDisable","setRefResponseDisable","refValuesDisable","setRefValueDisable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","setValue","handleSubmit","watch","lossQualifierID","id","complexValues","refValues","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","handleSubmitForm","values","then","response","handleSaveForm","dateDisabledLossQualifiers","filter","itr","map","getComplexityStatus","legendContainer","string","t","root","formLegend","claimReference","claimRef","policyRef","insured","getFieldProps","toDate","disabled","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fgunarrative","nonBeAdjuster","referral","e","data","bordereauPeriod","claimantName","priority","adjusterReference","rfiResponse","UploadDocumentContainer","type","claims"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uCAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,aADF,EAEEC,QAFF,EAGEC,QAHF,EAIEC,SAJF,EAKEC,QALF,EAMEC,mBANF,EAOEC,SAPF,EAQEC,YARF,EASEC,UATF,EAUEC,UAVF,QAWO,YAXP;AAYA,SAASC,0BAAT,EAAqCC,6BAArC,QAA0E,SAA1E;AACA,SAASC,+BAAT,QAAgD,QAAhD;AACA,SAASC,mCAAT,EAA8CC,iBAA9C,EAAiEC,8BAAjE,QAAuG,QAAvG,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,mBAAtC;;;AACAC,gCAAgC,CAACC,SAAjC,GAA6C;AAC3CC,EAAAA,aAAa,EAAE1B,SAAS,CAAC2B,KAAV,CAAgBC,UADY;AAE3CC,EAAAA,cAAc,EAAE7B,SAAS,CAAC2B,KAAV,CAAgBC,UAFW;AAG3CE,EAAAA,cAAc,EAAE9B,SAAS,CAAC+B,MAHiB;AAI3CC,EAAAA,QAAQ,EAAEhC,SAAS,CAACiC,MAJuB;AAK3CC,EAAAA,WAAW,EAAElC,SAAS,CAACmC,IAAV,CAAeP,UALe;AAM3CQ,EAAAA,cAAc,EAAEpC,SAAS,CAAC2B;AANiB,CAA7C;AAQA,OAAO,SAASH,gCAAT,OAgBJ;AAAA;;AAAA;;AAAA,MAfDa,MAeC,QAfDA,MAeC;AAAA,MAdDR,cAcC,QAdDA,cAcC;AAAA,MAbDO,cAaC,QAbDA,cAaC;AAAA,MAZDE,UAYC,QAZDA,UAYC;AAAA,MAXDC,SAWC,QAXDA,SAWC;AAAA,MAVDC,iBAUC,QAVDA,iBAUC;AAAA,MATDC,gBASC,QATDA,gBASC;AAAA,MARDC,KAQC,QARDA,KAQC;AAAA,MAPDC,UAOC,QAPDA,UAOC;AAAA,MANDC,UAMC,QANDA,UAMC;AAAA,MALDC,WAKC,QALDA,UAKC;AAAA,MAJDC,UAIC,QAJDA,UAIC;AAAA,MAHDC,mBAGC,QAHDA,mBAGC;AAAA,MAFDC,kBAEC,QAFDA,kBAEC;AAAA,MADDlB,cACC,QADDA,cACC;AACD,MAAMmB,OAAO,GAAG5B,UAAU,CAAClB,MAAD,EAAS;AAAE+C,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAGpD,WAAW,EAA5B;;AAFC,kBAG2CD,QAAQ,CAAC,KAAD,CAHnD;AAAA;AAAA,MAGMsD,cAHN;AAAA,MAGsBC,iBAHtB;;AAAA,mBAImDvD,QAAQ,CAAC,IAAD,CAJ3D;AAAA;AAAA,MAIMwD,kBAJN;AAAA,MAI0BC,qBAJ1B;;AAAA,mBAK8CzD,QAAQ,CAAC,KAAD,CALtD;AAAA;AAAA,MAKM0D,gBALN;AAAA,MAKwBC,kBALxB;;AAMD,MAAMC,aAAa,GAAGtD,KAAK,CAACuD,IAAN,CAAWC,gBAAX,CAA4BvB,MAA5B,CAAtB;AACA,MAAMwB,gBAAgB,GAAGzD,KAAK,CAACuD,IAAN,CAAWG,mBAAX,CAA+BzB,MAA/B,CAAzB;;AAPC,iBAS0DpC,OAAO;AAChEyD,IAAAA,aAAa,EAAbA;AADgE,KAE5DG,gBAAgB,IAAI;AAAEE,IAAAA,QAAQ,EAAE7D,WAAW,CAAC2D,gBAAD;AAAvB,GAFwC,EATjE;AAAA,MASOG,OATP,YASOA,OATP;AAAA,MASgBC,MAThB,YASgBA,MAThB;AAAA,MASwBC,QATxB,YASwBA,QATxB;AAAA,MASkCC,YATlC,YASkCA,YATlC;AAAA,MASgDC,KAThD,YASgDA,KAThD;;AAcD,MAAMC,eAAe,aAAGD,KAAK,CAAC,iBAAD,CAAR,2CAAG,OAA0BE,EAAlD;AACA,MAAMC,aAAa,GAAGH,KAAK,CAAC,YAAD,CAA3B;AACA,MAAMI,SAAS,GAAGJ,KAAK,CAAC,UAAD,CAAvB;;AAEA,MAAMK,YAAY,GAAG,SAAfA,YAAe,CAACC,aAAD,EAAmB;AACtC,QAAIA,aAAJ,EAAmB;AAAA;;AACjB,UAAMC,gBAAgB,2BAAG9C,cAAc,CAAC+C,IAAf,CACvB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,iBAAL,MAA2BJ,aAA3B,aAA2BA,aAA3B,uBAA2BA,aAAa,CAAEI,iBAA1C,CAAV;AAAA,OADuB,CAAH,yDAAG,qBAEtBC,oBAFH;AAGA,UAAMC,aAAa,GAAG,CAAC,uBAAD,EAA0B,yCAA1B,EAAqE,QAArE,CAAtB;AACA,UAAMC,gBAAgB,GAAGD,aAAa,CAACE,QAAd,CAAuBP,gBAAvB,CAAzB;AACApB,MAAAA,qBAAqB,CAAC0B,gBAAD,CAArB;;AACA,UAAIA,gBAAJ,EAAsB;AACpBf,QAAAA,QAAQ,CAAC,aAAD,EAAgB,IAAhB,CAAR;AACD;AACF,KAVD,MAUO,IAAIQ,aAAa,KAAK,IAAlB,IAA0B,CAACA,aAA/B,EAA8C;AACnDnB,MAAAA,qBAAqB,CAAC,IAAD,CAArB;AACAW,MAAAA,QAAQ,CAAC,aAAD,EAAgB,IAAhB,CAAR;AACD;AACF,GAfD;;AAiBA,MAAMiB,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,MAAD,EAAY;AACnCjC,IAAAA,QAAQ,CAAClC,+BAA+B,CAACmE,MAAD,CAAhC,CAAR,CAAkDC,IAAlD,CAAuD,UAACC,QAAD,EAAY;AACjE,UAAGA,QAAH,EAAa3C,UAAU,CAACD,KAAD,CAAV;AACd,KAFD;AAGD,GAJD;;AAMA,MAAM6C,cAAc,GAAG,SAAjBA,cAAiB,CAACH,MAAD,EAAY;AACjCjC,IAAAA,QAAQ,CAAClC,+BAA+B,CAACmE,MAAD,CAAhC,CAAR,CAAkDC,IAAlD,CAAuD,UAACC,QAAD,EAAY;AACjE,UAAGA,QAAH,EAAa1C,UAAU;AACxB,KAFD;AAGD,GAJD;;AAMA/C,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIwE,eAAJ,EAAqB;AACnB,UAAMmB,0BAA0B,GAAG1D,cAAc,CAC9C2D,MADgC,CACzB,UAACZ,IAAD;AAAA,eAAU3D,mCAAmC,CAAC0D,IAApC,CAAyC,UAACc,GAAD;AAAA,iBAASA,GAAG,KAAKb,IAAI,CAAC3B,IAAtB;AAAA,SAAzC,CAAV;AAAA,OADyB,EAEhCyC,GAFgC,CAE5B,UAACd,IAAD;AAAA,eAAUA,IAAI,CAACP,EAAf;AAAA,OAF4B,CAAnC;AAGA,UAAM1C,UAAU,GAAG,CAAC4D,0BAA0B,CAACN,QAA3B,CAAoCb,eAApC,CAApB;AACAhB,MAAAA,iBAAiB,CAAC,CAACzB,UAAF,CAAjB;AACD;;AACD,QAAI2C,aAAJ,EAAmB;AAAA;;AACjB,UAAMqB,mBAAmB,GACvB,0BAAAnD,gBAAgB,CAACmC,IAAjB,CAAsB,UAACC,IAAD;AAAA,eAAUA,IAAI,CAACC,iBAAL,MAA2BP,aAA3B,aAA2BA,aAA3B,uBAA2BA,aAAa,CAAEO,iBAA1C,CAAV;AAAA,OAAtB,iFAA8FC,oBAA9F,MACA,mBAFF;AAGAtB,MAAAA,kBAAkB,CAACmC,mBAAD,CAAlB;AACAnB,MAAAA,YAAY,CAACD,SAAD,CAAZ;AACD,KAND,MAMO,IAAID,aAAa,KAAK,IAAtB,EAA4B;AACjCd,MAAAA,kBAAkB,CAAC,KAAD,CAAlB;AACD;AACF,GAjBQ,EAiBN,CAACY,eAAD,EAAkBE,aAAlB,CAjBM,CAAT,CA/CC,CAgEqC;;AAEtC,sBACE;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,CAAC,EAAE,CAAR;AAAW,MAAA,EAAE,EAAE,CAAf;AAAkB,qBAAY,iCAA9B;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,SAAS,EAAC,KAA1B;AAAgC,QAAA,OAAO,EAAC,eAAxC;AAAwD,QAAA,UAAU,EAAC,QAAnE;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAEtB,OAAO,CAAC4C,eAA9B;AAAA,iCACE,QAAC,UAAD;AAAY,YAAA,IAAI,EAAEzF,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,+BAAf,CAAlB;AAAmE,YAAA,aAAa,EAAE;AAAEC,cAAAA,IAAI,EAAE/C,OAAO,CAACgD;AAAhB;AAAlF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAIE,QAAC,SAAD;AAAW,UAAA,KAAK,YAAM,CAAA3D,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE4D,cAAZ,MAA8B5D,UAA9B,aAA8BA,UAA9B,uBAA8BA,UAAU,CAAE6D,QAA1C,CAAN,gBAA+D3D,iBAAiB,CAAC4D,SAAjF,gBAAgG5D,iBAAiB,CAAC6D,OAAlH,CAAhB;AAA6I,UAAA,KAAK,EAAC;AAAnJ;AAAA;AAAA;AAAA;AAAA,gBAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eASE,QAAC,aAAD;AAAe,qBAAY,4BAA3B;AAAA,6BACE,QAAC,UAAD;AAAY,QAAA,IAAI,EAAC,QAAjB;AAAA,+BACE,QAAC,QAAD;AAAU,UAAA,SAAS,MAAnB;AAAoB,UAAA,OAAO,EAAE,CAA7B;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,IAAI,MAAd;AAAe,YAAA,EAAE,EAAE,EAAnB;AAAuB,YAAA,EAAE,EAAE,CAA3B;AAAA,oCACA,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACI,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,wCACE,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAEjG,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAlB;AAAsE,kBAAA,KAAK,EAAC;AAA5E;AAAA;AAAA;AAAA;AAAA,wBADF,eAEE,QAAC,SAAD;AAAW,kBAAA,KAAK,WAAG,CAAAzD,UAAU,SAAV,IAAAA,UAAU,WAAV,YAAAA,UAAU,CAAE4D,cAAZ,MAA8B5D,UAA9B,aAA8BA,UAA9B,uBAA8BA,UAAU,CAAE6D,QAA1C,CAAH,yCAA0D/F,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,uCAAf,CAA1E;AAAmI,kBAAA,aAAa,EAAE;AAAEC,oBAAAA,IAAI,EAAE/C,OAAO,CAACkD;AAAhB,mBAAlJ;AAA8K,kBAAA,KAAK,EAAC;AAApL;AAAA;AAAA;AAAA;AAAA,wBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,oBADA,eAOE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,QAAD,kCACM/F,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6C2B,OAA7C,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACsC,MAFhB;AAGE,kBAAA,iBAAiB,EAAE;AACjBC,oBAAAA,QAAQ,EAAEpD,cADO;AAEjBqD,oBAAAA,SAAS,EAAE,IAFM;AAGjBxD,oBAAAA,OAAO,EAAE;AACL+C,sBAAAA,IAAI,EAAE/C,OAAO,CAACyD;AADT;AAHQ;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAPF,eAsBE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,QAAD,kCAActG,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6C2B,OAA7C,CAAd;AAAqE,kBAAA,KAAK,EAAEC,MAAM,CAAC0C;AAAnF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtBF,eA2BE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,SAAD,oBAAevG,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6C2B,OAA7C,CAAf;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBA3BF,eAgCE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,mBAAD,kCAAyB5D,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,YAAjC,EAA+C2B,OAA/C,CAAzB;AAAkF,kBAAA,KAAK,EAAEC,MAAM,CAAC2C;AAAhG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhCF,EAqCG5D,kBAAkB,iBACjB,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,YAAD,kCAAkB5C,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,gBAAjC,EAAmD2B,OAAnD,CAAlB;AAA+E,kBAAA,KAAK,EAAEC,MAAM,CAAC4C,cAA7F;AAA6G,kBAAA,aAAa,EAAE;AAAEb,oBAAAA,IAAI,EAAE/C,OAAO,CAAC6D;AAAhB;AAA5H;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAtCJ;AAAA;AAAA;AAAA;AAAA;AAAA,kBADF,eA8CE,QAAC,QAAD;AAAU,YAAA,IAAI,MAAd;AAAe,YAAA,EAAE,EAAE,EAAnB;AAAuB,YAAA,EAAE,EAAE,CAA3B;AAAA,mCACE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,wCACE,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,QAAD;AAAU,sBAAA,SAAS,MAAnB;AAAoB,sBAAA,UAAU,EAAC,QAA/B;AAAwC,sBAAA,OAAO,EAAE,CAAjD;AAAA,8CACE,QAAC,QAAD;AAAU,wBAAA,IAAI,MAAd;AAAe,wBAAA,EAAE,EAAE,CAAnB;AAAA,+CACE,QAAC,QAAD,kCAAc1G,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,mBAAjC,EAAsD2B,OAAtD,CAAd;AAA8E,0BAAA,KAAK,EAAEC,MAAM,CAAC8C;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BADF,eAIE,QAAC,QAAD;AAAU,wBAAA,IAAI,MAAd;AAAe,wBAAA,EAAE,EAAE,CAAnB;AAAsB,wBAAA,aAAa,EAAE;AAAEf,0BAAAA,IAAI,EAAE/C,OAAO,CAAC+D;AAAhB,yBAArC;AAAA,+CACE,QAAC,QAAD,oBAAc5G,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,mBAAjC,EAAsD2B,OAAtD,CAAd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,8BAJF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBADF,eAaE,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,QAAD,kCACM5D,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,QAAjC,EAA2C2B,OAA3C,CADN;AAEE,sBAAA,KAAK,EAAEC,MAAM,CAACsC,MAFhB;AAGE,sBAAA,iBAAiB,EAAE;AACjBC,wBAAAA,QAAQ,EAAEpD,cADO;AAEjBqD,wBAAAA,SAAS,EAAE,IAFM;AAGjBxD,wBAAAA,OAAO,EAAE;AACP+C,0BAAAA,IAAI,EAAE/C,OAAO,CAACyD;AADP;AAHQ;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBAbF,eA4BE,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,QAAD,kCAActG,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,cAAjC,EAAiD2B,OAAjD,CAAd;AAAyE,sBAAA,KAAK,EAAEC,MAAM,CAACgD;AAAvF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA5BF,eAiCE,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,4BACC7C,KAAK,CAAC,UAAD,CAAL,KAAsB,YAAtB,gBACC,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,mBAAD,oBAAyBhE,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,YAAjC,EAA+C2B,OAA/C,CAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,0BADD,gBAKC,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,QAAD,kCAAc5D,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,eAAjC,EAAkD2B,OAAlD,CAAd;AAA0E,sBAAA,KAAK,EAAEC,MAAM,CAACiD;AAAxF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AANF;AAAA;AAAA;AAAA;AAAA,wBAjCF,eA4CE,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,mBAAD,kCACM9G,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6C2B,OAA7C,CADN;AAEE,sBAAA,KAAK,EAAEC,MAAM,CAACkD,QAFhB;AAGE,sBAAA,iBAAiB,EAAE;AACjBX,wBAAAA,QAAQ,EAAE,CAAChD;AADM,uBAHrB;AAME,sBAAA,QAAQ,EAAE,kBAAC4D,CAAD,EAAIC,IAAJ,EAAa;AACrB5C,wBAAAA,YAAY,CAAC4C,IAAD,CAAZ;AACD;AARH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA5CF,EA0DGrE,kBAAkB,iBACjB,QAAC,QAAD;AAAU,kBAAA,SAAS,MAAnB;AAAA,yCACE,QAAC,QAAD;AAAU,oBAAA,IAAI,MAAd;AAAe,oBAAA,EAAE,EAAE,EAAnB;AAAA,2CACE,QAAC,mBAAD,kCAAyB5C,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,iBAAjC,EAAoD2B,OAApD,CAAzB;AAAuF,sBAAA,KAAK,EAAEC,MAAM,CAACqD;AAArG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,wBA3DJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,kBA9CF,eAoHE,QAAC,QAAD;AAAU,YAAA,IAAI,MAAd;AAAe,YAAA,EAAE,EAAE,EAAnB;AAAuB,YAAA,EAAE,EAAE,CAA3B;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,mBAAD,kCAAyBlH,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,cAAjC,EAAiD2B,OAAjD,CAAzB;AAAoF,kBAAA,KAAK,EAAEC,MAAM,CAACsD;AAAlG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAME,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,mBAAD,kCAAyBnH,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,iBAAjC,EAAoD2B,OAApD,CAAzB;AAAuF,kBAAA,KAAK,EAAEC,MAAM,CAACI;AAArG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBANF,eAWE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,mBAAD,kCAAyBjE,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,UAAjC,EAA6C2B,OAA7C,CAAzB;AAAgF,kBAAA,KAAK,EAAEC,MAAM,CAACuD;AAA9F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAXF,eAgBE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,QAAD,kCAAcpH,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,mBAAjC,EAAsD2B,OAAtD,CAAd;AAA8E,kBAAA,KAAK,EAAEC,MAAM,CAACwD;AAA5F;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAhBF,eAqBE,QAAC,QAAD;AAAU,cAAA,SAAS,MAAnB;AAAA,qCACE,QAAC,QAAD;AAAU,gBAAA,IAAI,MAAd;AAAe,gBAAA,EAAE,EAAE,EAAnB;AAAA,uCACE,QAAC,mBAAD,kCACMrH,KAAK,CAACuD,IAAN,CAAW2C,aAAX,CAAyBjE,MAAzB,EAAiC,aAAjC,EAAgD2B,OAAhD,CADN;AAEE,kBAAA,KAAK,EAAEC,MAAM,CAACyD,WAFhB;AAGE,kBAAA,iBAAiB,EAAE;AACjBlB,oBAAAA,QAAQ,EAAElD;AADO;AAHrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBArBF;AAAA;AAAA;AAAA;AAAA;AAAA,kBApHF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YATF,eAmKE,QAAC,GAAD;AAAK,MAAA,SAAS,EAAEL,OAAO,CAAC0E,uBAAxB;AAAA,6BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,OAAO,EAAE,CAAzB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,0BAAD;AACI,YAAA,OAAO,EAAEpF,SADb;AAEI,YAAA,SAAS,EAAE,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE4D,QAAX,IAAsB,UAAtB,GAAmC,gBAFlD,CAEoE;AAFpE;AAGI,YAAA,UAAU,EAAEhF,iBAHhB;AAII,YAAA,eAAe,EAAEC,8BAA8B,CAACwG,IAA/B,CAAoCC,MAJzD;AAKI,YAAA,SAAS,EAAE,KALf;AAMI,YAAA,QAAQ,MANZ;AAOI,YAAA,sBAAsB,EAAE,EAACvF,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAE6D,QAAb,CAP5B;AAQI,YAAA,sBAAsB,EAAE,EAAC7D,UAAD,aAACA,UAAD,uBAACA,UAAU,CAAE6D,QAAb,IAAwB/F,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,+CAAf,CAAxB,GAA0F,EARtH;AASI,YAAA,wBAAwB,EAAE3F,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,6CAAf,CAT9B;AAUI,YAAA,oBAAoB,EAAE3F,KAAK,CAAC0F,MAAN,CAAaC,CAAb,CAAe,6CAAf,CAV1B;AAWI,YAAA,OAAO,EAAE3D;AAXb;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAnKF,eAsLE,QAAC,6BAAD;AACI,MAAA,UAAU,EAAEU,UADhB;AAEI,MAAA,mBAAmB,EAAEC,mBAFzB;AAGI,MAAA,UAAU,EAAE,sBAAM;AAAEF,QAAAA,WAAU,CAACH,KAAD,CAAV;AAAmB,OAH3C;AAII,MAAA,UAAU,EAAEyB,YAAY,CAACoB,cAAD,CAJ5B;AAKI,MAAA,gBAAgB,EAAEpB,YAAY,CAACgB,gBAAD,CALlC;AAMI,MAAA,IAAI,EAAE;AANV;AAAA;AAAA;AAAA;AAAA,YAtLF;AAAA,kBADF;AAiMD;;GAnRe3D,gC;UAkBGzB,W,EAO0CE,O;;;KAzB7CuB,gC","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { postEditClaimDetailsInformation } from 'stores';\r\nimport { CLAIM_LOSS_DATE_DISABLED_QUALIFIERS, DMS_CONTEXT_CLAIM, DMS_DOCUMENT_TYPE_SECTION_KEYS } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  lossQualifiers: PropTypes.object,\r\n  resetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  claimsDocsList: PropTypes.array\r\n};\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  claimsDocsList,\r\n  claimRefId,\r\n  claimData,\r\n  policyInformation,\r\n  complexityValues,\r\n  index,\r\n  handleNext,\r\n  handleSave,\r\n  handleBack,\r\n  activeStep,\r\n  isAllStepsCompleted,\r\n  isBordereauChecked,\r\n  lossQualifiers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch()\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const [refResponseDisable, setRefResponseDisable] = useState(true);\r\n  const [refValuesDisable, setRefValueDisable] = useState(false);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, setValue, handleSubmit, watch } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const lossQualifierID = watch('lossQualifierID')?.id;\r\n  const complexValues = watch('complexity');\r\n  const refValues = watch('referral');\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      setRefResponseDisable(refResponseState);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setRefResponseDisable(true);\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleNext(index)\r\n    });\r\n  }\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleSave()\r\n    });\r\n  }\r\n\r\n  useEffect(() => {\r\n    if (lossQualifierID) {\r\n      const dateDisabledLossQualifiers = lossQualifiers\r\n        .filter((item) => CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name))\r\n        .map((item) => item.id);\r\n      const isRequired = !dateDisabledLossQualifiers.includes(lossQualifierID);\r\n      setDateValidation(!isRequired);\r\n    }\r\n    if (complexValues) {\r\n      const getComplexityStatus =\r\n        complexityValues.find((item) => item.complexityRulesID === complexValues?.complexityRulesID)?.complexityRulesValue ===\r\n        'Referral Required';\r\n      setRefValueDisable(getComplexityStatus);\r\n      getRefValues(refValues);\r\n    } else if (complexValues === null) {\r\n      setRefValueDisable(false);\r\n    }\r\n  }, [lossQualifierID, complexValues]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <Box m={3} mb={0} data-testid=\"register-claim-card-information\">\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item className={classes.legendContainer}>\r\n            <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          </Grid>\r\n          <FormLabel label={`${(claimRefId?.claimReference || claimRefId?.claimRef)} | ${policyInformation.policyRef} | ${policyInformation.insured}`} align=\"left\" />\r\n        </Grid>\r\n      </Box>\r\n      <FormContainer data-testid=\"form-claimsCardInformation\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={6}>\r\n            <FormGrid item xs={12} sm={4}>\r\n            <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                  <FormLabel label={(claimRefId?.claimReference || claimRefId?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')} nestedClasses={{ root: classes.claimRef }} align=\"left\" />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormDate\r\n                    {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                    error={errors.toDate}\r\n                    muiComponentProps={{\r\n                      disabled: dateValidation,\r\n                      fullWidth: true,\r\n                      classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                      }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              {isBordereauChecked &&\r\n                <FormGrid container>\r\n                  <FormGrid item xs={12}>\r\n                    <FormCheckbox {...utils.form.getFieldProps(fields, 'bordereauClaim', control)} error={errors.bordereauClaim} nestedClasses={{ root: classes.checkbox }}/>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              }\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={7}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormDate\r\n                        {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                        error={errors.toDate}\r\n                        muiComponentProps={{\r\n                          disabled: dateValidation,\r\n                          fullWidth: true,\r\n                          classes: {\r\n                            root: classes.datepicker,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                  {watch('adjuster') === 'beAdjuster' ? (\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} />\r\n                    </FormGrid>\r\n                  ) : (\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'nonBeAdjuster', control)} error={errors.nonBeAdjuster} />\r\n                    </FormGrid>\r\n                  )}\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui \r\n                        {...utils.form.getFieldProps(fields, 'referral', control)} \r\n                        error={errors.referral}\r\n                        muiComponentProps={{\r\n                          disabled: !refValuesDisable,\r\n                        }}\r\n                        callback={(e, data) => {\r\n                          getRefValues(data);\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  {isBordereauChecked &&\r\n                    <FormGrid container>\r\n                      <FormGrid item xs={12}>\r\n                        <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)} error={errors.bordereauPeriod} />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  }\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui \r\n                    {...utils.form.getFieldProps(fields, 'rfiResponse', control)} \r\n                    error={errors.rfiResponse} \r\n                    muiComponentProps={{\r\n                      disabled: refResponseDisable,\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n          </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <Box className={classes.UploadDocumentContainer}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <ClaimsUploadViewSearchDocs\r\n                refData={claimData}\r\n                refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n                dmsContext={DMS_CONTEXT_CLAIM}\r\n                documentTypeKey={DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n                isTabView={false}\r\n                isClaims\r\n                isClaimsUploadDisabled={!claimRefId?.claimRef}\r\n                claimsUploadWarningMsg={!claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : ''}\r\n                claimsSearchDocumentsTxt={utils.string.t('claims.claimInformation.dms.searchDocuments')}\r\n                uploadDocumentsTitle={utils.string.t('claims.claimInformation.dms.uploadDocuments')}\r\n                docList={claimsDocsList}\r\n              />       \r\n            </Grid>\r\n          </Grid>\r\n      </Box>\r\n      <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => { handleBack(index) }}\r\n          handleSave={handleSubmit(handleSaveForm)} \r\n          handleNextSubmit={handleSubmit(handleSubmitForm)} \r\n          save={true}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}