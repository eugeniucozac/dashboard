{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\PremiumProcessing\\\\PremiumProcessing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get'; // app\n\nimport { PremiumProcessingView } from './PremiumProcessing.view';\nimport { selectTechnicians, getCasesList, changeCaseType, selectUser } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function PremiumProcessing() {\n  _s();\n\n  var dispatch = useDispatch();\n  var uiBrand = useSelector(function (state) {\n    return get(state, 'ui.brand');\n  });\n  var technicians = useSelector(selectTechnicians);\n  var technicianAssigning = true;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataloaded = _useState2[0],\n      setIsDataloaded = _useState2[1];\n\n  var loggedUserDetails = useSelector(selectUser);\n  var userRoleDetails = loggedUserDetails === null || loggedUserDetails === void 0 ? void 0 : loggedUserDetails.userRole;\n  useEffect(function () {\n    var getCaseDetails = /*#__PURE__*/function () {\n      var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var tabType, response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                tabType = constants.WORKLIST;\n\n                if ((userRoleDetails === null || userRoleDetails === void 0 ? void 0 : userRoleDetails.length) > 0 && (utils.user.isSeniorManager(userRoleDetails[0]) || utils.user.isAdminUser(userRoleDetails[0]))) {\n                  tabType = constants.WORKBASKET;\n                  dispatch(changeCaseType(constants.WORKBASKET));\n                }\n\n                _context.next = 4;\n                return dispatch(getCasesList({\n                  type: tabType,\n                  filters: {}\n                }));\n\n              case 4:\n                response = _context.sent;\n\n                if (response) {\n                  setIsDataloaded(true);\n                }\n\n              case 6:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function getCaseDetails() {\n        return _ref.apply(this, arguments);\n      };\n    }();\n\n    getCaseDetails();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSelectType = function handleSelectType(event) {\n    dispatch(changeCaseType(event));\n    dispatch(getCasesList());\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('premiumProcessing.title'), \" - \").concat(utils.app.getAppName(uiBrand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), isDataloaded && /*#__PURE__*/_jsxDEV(PremiumProcessingView, {\n      technicians: technicians,\n      technicianAssigning: technicianAssigning,\n      handleSelectType: handleSelectType,\n      userRoleDetails: userRoleDetails\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PremiumProcessing, \"wVLHNTadrN+SvBw/l7ljpgverqU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = PremiumProcessing;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessing\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/PremiumProcessing/PremiumProcessing.js"],"names":["React","useEffect","useState","useDispatch","useSelector","Helmet","get","PremiumProcessingView","selectTechnicians","getCasesList","changeCaseType","selectUser","utils","constants","PremiumProcessing","dispatch","uiBrand","state","technicians","technicianAssigning","isDataloaded","setIsDataloaded","loggedUserDetails","userRoleDetails","userRole","getCaseDetails","tabType","WORKLIST","length","user","isSeniorManager","isAdminUser","WORKBASKET","type","filters","response","handleSelectType","event","string","t","app","getAppName"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { PremiumProcessingView } from './PremiumProcessing.view';\r\nimport { selectTechnicians, getCasesList, changeCaseType, selectUser } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport default function PremiumProcessing() {\r\n  const dispatch = useDispatch();\r\n  const uiBrand = useSelector((state) => get(state, 'ui.brand'));\r\n  const technicians = useSelector(selectTechnicians);\r\n  const technicianAssigning = true;\r\n  const [isDataloaded, setIsDataloaded] = useState(false);\r\n  const loggedUserDetails = useSelector(selectUser);\r\n  const userRoleDetails = loggedUserDetails?.userRole;\r\n  useEffect(() => {\r\n    const getCaseDetails = async () => {\r\n      let tabType = constants.WORKLIST;\r\n      if (userRoleDetails?.length > 0 && (utils.user.isSeniorManager(userRoleDetails[0]) || utils.user.isAdminUser(userRoleDetails[0]))) {\r\n        tabType = constants.WORKBASKET;\r\n        dispatch(changeCaseType(constants.WORKBASKET));\r\n      }\r\n      const response = await dispatch(getCasesList({ type: tabType, filters: {} }));\r\n      if (response) {\r\n        setIsDataloaded(true);\r\n      }\r\n    };\r\n    getCaseDetails();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSelectType = (event) => {\r\n    dispatch(changeCaseType(event));\r\n    dispatch(getCasesList());\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('premiumProcessing.title')} - ${utils.app.getAppName(uiBrand)}`}</title>\r\n      </Helmet>\r\n      {isDataloaded && (\r\n        <PremiumProcessingView\r\n          technicians={technicians}\r\n          technicianAssigning={technicianAssigning}\r\n          handleSelectType={handleSelectType}\r\n          userRoleDetails={userRoleDetails}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}