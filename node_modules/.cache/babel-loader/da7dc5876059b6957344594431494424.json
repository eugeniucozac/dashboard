{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessing\\\\PremiumProcessingCases.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport merge from 'lodash/merge';\nimport isEmpty from 'lodash/isEmpty';\nimport isInteger from 'lodash/isInteger';\nimport xorBy from 'lodash/xorBy';\nimport * as Yup from 'yup'; //app\n\nimport styles from './PremiumProcessingCases.styles';\nimport { Overflow, Status, TableCell, TableHead, Translate, SelectPopover, SingleSelect, TableToolbar, TableFilters, FormSwitch, Pagination, Tooltip, FormDate, Button, FormGrid, FormSelect, FormText, Warning } from 'components';\nimport { enqueueNotification, setMultiSelectFlag, getCasesList, collapseNav, expandSidebar, collapseSidebar, setIsCaseTableHidden, selectUserRole, getAssignedToUsersList, getDepartments, selectPiDepartmentList, getUsersForRole, selectUsersInRoles, selectMultiSelectedCase, selectCasesListType } from 'stores';\nimport * as constants from 'consts';\nimport { useFlexiColumns, usePagination, useSort } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Grid, makeStyles, Table, TableBody, TableRow, Typography, TableContainer, Switch, Popover, InputAdornment, Avatar, Checkbox } from '@material-ui/core';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCasesView.propTypes = {\n  columnsData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired\n  })).isRequired,\n  cases: PropTypes.array.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  }).isRequired,\n  tabSelectionView: PropTypes.string.isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    direction: PropTypes.oneOf(['asc', 'desc']).isRequired,\n    type: PropTypes.oneOf(['lexical', 'date', 'number']).isRequired\n  }).isRequired,\n  selectedCase: PropTypes.array,\n  assingnedToDropdownList: PropTypes.array,\n  selectedFilterDetails: PropTypes.object,\n  handlers: PropTypes.shape({\n    searchSubmit: PropTypes.func.isRequired,\n    searchReset: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    checkboxClick: PropTypes.func.isRequired,\n    selectSingleCase: PropTypes.func.isRequired,\n    casesFilter: PropTypes.func.isRequired,\n    showCheckboxesHandler: PropTypes.func.isRequired,\n    clickRfiQueryResponse: PropTypes.func.isRequired,\n    assignedUsersToCase: PropTypes.func.isRequired,\n    tableFilterReset: PropTypes.func.isRequired,\n    tableFilterApply: PropTypes.func.isRequired,\n    updateMultiSelectedRows: PropTypes.func.isRequired,\n    showCheckboxColumnHandler: PropTypes.func.isRequired,\n    handleDoubleClickCaseRow: PropTypes.func.isRequired\n  }).isRequired,\n  userRoleDetails: PropTypes.array,\n  tableFilterFields: PropTypes.array.isRequired,\n  flagsInRow: PropTypes.bool.isRequired,\n  defaultFormFields: PropTypes.array.isRequired,\n  watch: PropTypes.func,\n  setValue: PropTypes.func,\n  register: PropTypes.func\n};\nexport function PremiumProcessingCasesView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var columnsData = _ref.columnsData,\n      cases = _ref.cases,\n      pagination = _ref.pagination,\n      sortObj = _ref.sort,\n      selectedCases = _ref.selectedCases,\n      handlers = _ref.handlers,\n      tabSelectionView = _ref.tabSelectionView,\n      userRoleDetails = _ref.userRoleDetails,\n      register = _ref.register,\n      tableFilterFields = _ref.tableFilterFields,\n      selectedFilterDetails = _ref.selectedFilterDetails,\n      control = _ref.control,\n      watch = _ref.watch,\n      setValue = _ref.setValue,\n      formState = _ref.formState,\n      assingnedToDropdownList = _ref.assingnedToDropdownList,\n      flagsInRow = _ref.flagsInRow,\n      defaultFormFields = _ref.defaultFormFields;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCases'\n  })();\n  var dispatch = useDispatch();\n  var uiSidebarExpanded = useSelector(function (state) {\n    return get(state, 'ui.sidebar.expanded');\n  });\n  var currentUser = useSelector(selectUserRole);\n  var isAssignedToUserList = utils.generic.isValidArray(assingnedToDropdownList, true);\n  var casesListType = useSelector(selectCasesListType);\n  var departmentsList = useSelector(selectPiDepartmentList);\n  var isDeparmentsLoaded = utils.generic.isValidArray(departmentsList, true);\n  var fecUsers = useSelector(selectUsersInRoles);\n  var isFecUsersLoaded = utils.generic.isValidArray(fecUsers, true);\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedValueBulkAssign = _useState2[0],\n      setSelectedValueBulkAssign = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isBulkSelectClear = _useState4[0],\n      setIsBulkSelectClear = _useState4[1];\n\n  var _useState5 = useState(columnsData),\n      _useState6 = _slicedToArray(_useState5, 1),\n      columns = _useState6[0];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      isTableHidden = _useFlexiColumns.isTableHidden,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      disableMultiSelect = _useState8[0],\n      setDisableMultiSelect = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isMultiSelect = _useState10[0],\n      setIsMultiSelect = _useState10[1];\n\n  var paginationObj = usePagination(cases, pagination, handlers.changePage, handlers.changeRowsPerPage);\n\n  var _useSort = useSort(columnsArray, sortObj, handlers.sortColumn),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var uiNavExpanded = useSelector(function (state) {\n    return get(state, 'ui.nav.expanded');\n  });\n  var multiSelectedCasesList = useSelector(selectMultiSelectedCase);\n\n  var _useState11 = useState(null),\n      _useState12 = _slicedToArray(_useState11, 2),\n      assignedToSelected = _useState12[0],\n      setAssignedToSelected = _useState12[1];\n\n  var _useState13 = useState('caseId'),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchValue = _useState14[0],\n      setIsSearch = _useState14[1];\n\n  var value = watch();\n\n  var _useState15 = useState('ENABLE'),\n      _useState16 = _slicedToArray(_useState15, 2),\n      flagColumn = _useState16[0],\n      setFlagColumn = _useState16[1];\n\n  var isDisable = (value === null || value === void 0 ? void 0 : value.textValue) === '' || (value === null || value === void 0 ? void 0 : value.caseId) === '' || (value === null || value === void 0 ? void 0 : value.searchInceptionDate) === null || (value === null || value === void 0 ? void 0 : value.caseId) === null ? true : false;\n  var multipleCasesLength = (multiSelectedCasesList === null || multiSelectedCasesList === void 0 ? void 0 : multiSelectedCasesList.length) || 0;\n  var isValidFlagSection = utils.generic.isValidArray(currentUser, true) && currentUser.some(function (item) {\n    return [constants.FRONT_END_CONTACT.toLowerCase(), constants.ROLE_SENIOR_TECHNICIAN.toLowerCase(), constants.ROLE_TECHNICIAN_MANAGER.toLowerCase(), constants.SENIOR_MANAGER.toLowerCase(), constants.OPERATIONS_LEAD.toLowerCase(), constants.ROLE_JUNIOR_TECHNICIAN.toLowerCase()].includes(item.name.toLowerCase());\n  });\n  var isValidCheckSigining = utils.generic.isValidArray(currentUser, true) && currentUser.some(function (item) {\n    return [constants.ROLE_SENIOR_TECHNICIAN.toLowerCase(), constants.ROLE_TECHNICIAN_MANAGER.toLowerCase(), constants.ROLE_JUNIOR_TECHNICIAN.toLowerCase(), constants.SENIOR_MANAGER.toLowerCase()].includes(item.name.toLowerCase());\n  });\n  useEffect(function () {\n    setValue('workInprogress', false);\n  }, [setValue, casesListType]);\n  useEffect(function () {\n    var _columnsVisible$, _columnsVisible$2;\n\n    if (multipleCasesLength > 0) {\n      dispatch(collapseSidebar());\n    }\n\n    if (selectedCases.length === 1) {\n      if (!uiSidebarExpanded) {\n        dispatch(expandSidebar());\n      }\n    } else {\n      dispatch(collapseSidebar());\n    }\n\n    var columnsVisible = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.filter(function (columnData) {\n      return columnData.visible !== false;\n    });\n\n    if ((columnsVisible === null || columnsVisible === void 0 ? void 0 : columnsVisible.length) === 1 && ((_columnsVisible$ = columnsVisible[0]) === null || _columnsVisible$ === void 0 ? void 0 : _columnsVisible$.id) === 'flag' && ((_columnsVisible$2 = columnsVisible[0]) === null || _columnsVisible$2 === void 0 ? void 0 : _columnsVisible$2.visible)) {\n      dispatch(collapseSidebar());\n      dispatch(setIsCaseTableHidden(true)); // setting true when all columns are hidden and only when flag column enabled.\n    } else {\n      if (isTableHidden) {\n        dispatch(collapseSidebar());\n      }\n\n      dispatch(setIsCaseTableHidden(isTableHidden));\n    }\n\n    dispatch(collapseNav());\n  }, [multipleCasesLength, selectedCases, isTableHidden, columnsArray]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isBulkSelectClear) {\n      setSelectedValueBulkAssign(null);\n    }\n\n    if (tabSelectionView !== constants.WORKBASKET) {\n      setIsMultiSelect(false);\n      setDisableMultiSelect(true);\n      dispatch(setMultiSelectFlag({\n        flag: false\n      }));\n      columnsArray.forEach(function (col) {\n        if (col.id === 'select') {\n          col.visible = false;\n\n          if (utils.generic.isValidArray(selectedCases, true)) {\n            handlers.selectSingleCase(selectedCases);\n          }\n        }\n      });\n    } else {\n      setDisableMultiSelect(false);\n    }\n  }, [dispatch, isBulkSelectClear, tabSelectionView]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isMultiSelect) {\n      setIsMultiSelect(false);\n      toggleColumn((columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n        return e.id === 'select';\n      })) || null);\n    }\n  }, [sort, pagination.page, pagination.rowsPerPage]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var resetCaseFilters = function resetCaseFilters() {\n    handlers.tableFilterReset();\n\n    if (isMultiSelect) {\n      setIsMultiSelect(false);\n      toggleColumn((columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n        return e.id === 'select';\n      })) || null);\n    }\n  };\n  /**Toggle checkbox column to enable Multi Select option */\n\n\n  var showCheckboxesClick = function showCheckboxesClick(event) {\n    var _event$target, _event$target2, _selectColumn$label, _selectColumn$label$p, _selectColumn$label$p2, _selectColumn$label$p3, _selectColumn$label$p4;\n\n    setIsMultiSelect((event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.checked) || !isMultiSelect);\n    handlers.showCheckboxColumnHandler(event === null || event === void 0 ? void 0 : (_event$target2 = event.target) === null || _event$target2 === void 0 ? void 0 : _event$target2.checked);\n    var selectColumn = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n      return e.id === 'select';\n    });\n    toggleColumn(selectColumn || null);\n    selectColumn === null || selectColumn === void 0 ? void 0 : (_selectColumn$label = selectColumn.label) === null || _selectColumn$label === void 0 ? void 0 : (_selectColumn$label$p = _selectColumn$label.props) === null || _selectColumn$label$p === void 0 ? void 0 : (_selectColumn$label$p2 = _selectColumn$label$p.children) === null || _selectColumn$label$p2 === void 0 ? void 0 : (_selectColumn$label$p3 = _selectColumn$label$p2.props) === null || _selectColumn$label$p3 === void 0 ? void 0 : (_selectColumn$label$p4 = _selectColumn$label$p3.control) === null || _selectColumn$label$p4 === void 0 ? void 0 : _selectColumn$label$p4.setValue('singlevalue', false);\n  };\n\n  var handleDoubleClickRow = function handleDoubleClickRow(id) {\n    if (!isMultiSelect) {\n      handlers.handleDoubleClickCaseRow(id);\n    } else {\n      dispatch(enqueueNotification(utils.string.t('premiumProcessing.multiSelectEanbleWarningMessage'), 'warning'));\n    }\n  };\n\n  var tableRowClick = function tableRowClick(caseRow) {\n    if (!isMultiSelect) {\n      var selectedCaseDetails = isMultiSelect ? xorBy(selectedCases || [], [caseRow], 'id') : [caseRow];\n      handlers.selectSingleCase(selectedCaseDetails);\n\n      if (utils.generic.isValidArray(selectedCases, true)) {\n        var _selectColumn$label2, _selectColumn$label2$, _selectColumn$label2$2, _selectColumn$label2$3, _selectColumn$label2$4;\n\n        var selectColumn = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n          return e.id === 'select';\n        });\n        selectColumn === null || selectColumn === void 0 ? void 0 : (_selectColumn$label2 = selectColumn.label) === null || _selectColumn$label2 === void 0 ? void 0 : (_selectColumn$label2$ = _selectColumn$label2.props) === null || _selectColumn$label2$ === void 0 ? void 0 : (_selectColumn$label2$2 = _selectColumn$label2$.children) === null || _selectColumn$label2$2 === void 0 ? void 0 : (_selectColumn$label2$3 = _selectColumn$label2$2.props) === null || _selectColumn$label2$3 === void 0 ? void 0 : (_selectColumn$label2$4 = _selectColumn$label2$3.control) === null || _selectColumn$label2$4 === void 0 ? void 0 : _selectColumn$label2$4.setValue('singlevalue', false);\n\n        if (isMultiSelect && utils.generic.isValidArray(selectedCaseDetails, true) && selectedCaseDetails.length > 10) {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\n        }\n      }\n    } else {\n      dispatch(enqueueNotification(utils.string.t('premiumProcessing.multiSelectEanbleWarningMessage'), 'warning'));\n    }\n  };\n\n  var rowCheckboxClick = function rowCheckboxClick(rowDetails, event) {\n    if (isMultiSelect) {\n      var _event$target3, _event$target4, _event$target5;\n\n      if (event === null || event === void 0 ? void 0 : (_event$target3 = event.target) === null || _event$target3 === void 0 ? void 0 : _event$target3.checked) {\n        var casesList = [].concat(_toConsumableArray(multiSelectedCasesList), [rowDetails]);\n\n        if (multiSelectedCasesList.length > 9) {\n          event.target.checked = false;\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\n        } else {\n          handlers.updateMultiSelectedRows(casesList);\n        }\n      } else {\n        handlers.updateMultiSelectedRows(multiSelectedCasesList.filter(function (item) {\n          return item.bpmProcessId !== rowDetails.bpmProcessId;\n        }));\n      }\n\n      if (multiSelectedCasesList.length === 1 && !(event === null || event === void 0 ? void 0 : (_event$target4 = event.target) === null || _event$target4 === void 0 ? void 0 : _event$target4.checked)) {\n        var _selectColumn$label3, _selectColumn$label3$, _selectColumn$label3$2, _selectColumn$label3$3, _selectColumn$label3$4;\n\n        var selectColumn = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n          return e.id === 'select';\n        });\n        selectColumn === null || selectColumn === void 0 ? void 0 : (_selectColumn$label3 = selectColumn.label) === null || _selectColumn$label3 === void 0 ? void 0 : (_selectColumn$label3$ = _selectColumn$label3.props) === null || _selectColumn$label3$ === void 0 ? void 0 : (_selectColumn$label3$2 = _selectColumn$label3$.children) === null || _selectColumn$label3$2 === void 0 ? void 0 : (_selectColumn$label3$3 = _selectColumn$label3$2.props) === null || _selectColumn$label3$3 === void 0 ? void 0 : (_selectColumn$label3$4 = _selectColumn$label3$3.control) === null || _selectColumn$label3$4 === void 0 ? void 0 : _selectColumn$label3$4.setValue('singlevalue', false);\n      }\n\n      var rowPerPage = get(paginationObj, 'obj.rowsPerPage');\n\n      if (multiSelectedCasesList.length === rowPerPage && (event === null || event === void 0 ? void 0 : (_event$target5 = event.target) === null || _event$target5 === void 0 ? void 0 : _event$target5.checked)) {\n        var _selectColumn$label4, _selectColumn$label4$, _selectColumn$label4$2, _selectColumn$label4$3, _selectColumn$label4$4;\n\n        var _selectColumn = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n          return e.id === 'select';\n        });\n\n        _selectColumn === null || _selectColumn === void 0 ? void 0 : (_selectColumn$label4 = _selectColumn.label) === null || _selectColumn$label4 === void 0 ? void 0 : (_selectColumn$label4$ = _selectColumn$label4.props) === null || _selectColumn$label4$ === void 0 ? void 0 : (_selectColumn$label4$2 = _selectColumn$label4$.children) === null || _selectColumn$label4$2 === void 0 ? void 0 : (_selectColumn$label4$3 = _selectColumn$label4$2.props) === null || _selectColumn$label4$3 === void 0 ? void 0 : (_selectColumn$label4$4 = _selectColumn$label4$3.control) === null || _selectColumn$label4$4 === void 0 ? void 0 : _selectColumn$label4$4.setValue('singlevalue', true);\n      }\n    }\n  };\n\n  useEffect(function () {\n    columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.forEach(function (col) {\n      if (col.id === 'flag') {\n        col.visible = userRoleDetails[0] && flagsInRow && isValidFlagSection;\n      }\n    });\n\n    if (utils.generic.isValidArray(columnsArray, true)) {\n      var nonFlagData = columnsArray.filter(function (a) {\n        return a.id !== 'flag';\n      });\n\n      if (utils.generic.isValidArray(nonFlagData, true)) {\n        if (nonFlagData.every(function (columnData) {\n          return columnData.visible === false;\n        })) {\n          setFlagColumn('DISABLE');\n        } else {\n          setFlagColumn('ENABLE');\n        }\n      }\n    }\n  }, [flagColumn, toggleColumn, isBulkSelectClear, tabSelectionView]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var toggelFlexiColumns = function toggelFlexiColumns(column) {\n    var _columnsArray$filter;\n\n    if (uiNavExpanded) {\n      dispatch(collapseNav());\n    }\n\n    toggleColumn(column);\n    setDisableMultiSelect(false);\n    /**Checking here for all columns are visible false and then disableing the multi select switch control  */\n\n    if (columnsArray.every(function (columnData) {\n      return columnData.visible === false;\n    })) {\n      setDisableMultiSelect(column.visible);\n    }\n    /**Checking the columns visible true and should not consider checkbox(select) column and disabling the multi select switch control  */\n\n\n    if (((_columnsArray$filter = columnsArray.filter(function (item) {\n      return item.visible === true && item.id !== 'select';\n    })) === null || _columnsArray$filter === void 0 ? void 0 : _columnsArray$filter.length) === 1) {\n      setDisableMultiSelect(false);\n      setIsMultiSelect(false);\n      /** updating MultiSelectCheckbox flag  */\n\n      handlers.showCheckboxesHandler();\n      columnsArray.forEach(function (col) {\n        if (col.id === 'select') {\n          col.visible = false;\n        }\n      });\n    }\n  };\n\n  var removeSearchFilters = function removeSearchFilters(filterList) {\n    if (filterList.riskReference) delete filterList.riskReference;\n    if (filterList.caseId) delete filterList.caseId;\n    if (filterList.workPackageReferance) delete filterList.workPackageReferance;\n    return filterList;\n  };\n\n  var searchData = function searchData() {\n    var params = watch();\n    var searchFieldValues = selectedFilterDetails;\n    searchFieldValues = removeSearchFilters(searchFieldValues);\n\n    if (params) {\n      if (params.searchDropdown === 'searchInceptionDate') {\n        var _searchFieldValues;\n\n        if (!isEmpty((_searchFieldValues = searchFieldValues) === null || _searchFieldValues === void 0 ? void 0 : _searchFieldValues.inceptionDate)) {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.filterAppliedValidation'), 'warning'));\n          return;\n        }\n\n        searchFieldValues.inceptionDate = params[params.searchDropdown];\n      }\n\n      if (params.searchDropdown === 'insured') {\n        var _searchFieldValues2;\n\n        if (utils.generic.isValidArray((_searchFieldValues2 = searchFieldValues) === null || _searchFieldValues2 === void 0 ? void 0 : _searchFieldValues2.insured, true)) {\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.filterAppliedValidation'), 'warning'));\n          return;\n        }\n\n        searchFieldValues[params.searchDropdown] = [params.textValue];\n      }\n\n      if (params.searchDropdown === 'caseId') {\n        searchFieldValues[params.searchDropdown] = params.searchDropdown === 'caseId' ? parseInt(params[params.searchDropdown]) : params[params.searchDropdown];\n      }\n\n      if (params.searchDropdown === 'riskReference') searchFieldValues[params.searchDropdown] = params.textValue;\n      if (params.searchDropdown === 'workPackageReferance') searchFieldValues[params.searchDropdown] = params.textValue;\n      dispatch(getCasesList({\n        filters: searchFieldValues\n      }));\n      setOpenPopover(false);\n    }\n  };\n\n  var loadFiltersData = function loadFiltersData(value) {\n    if (value) {\n      if (!isAssignedToUserList) {\n        dispatch(getAssignedToUsersList());\n      }\n\n      if (!isDeparmentsLoaded) {\n        dispatch(getDepartments());\n      }\n\n      if (!isFecUsersLoaded) {\n        dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD]));\n      }\n    }\n  };\n\n  var filterData = function filterData(params) {\n    if (params && params.filters) {\n      var dataFiltersObj = {};\n      Object.entries(params.filters).forEach(function (_ref2) {\n        var _ref3 = _slicedToArray(_ref2, 2),\n            key = _ref3[0],\n            val = _ref3[1];\n\n        if (utils.generic.isValidArray(val, true)) {\n          if (params.filters.hasOwnProperty(key)) {\n            var keyValue = {};\n\n            if (key === 'bordereauType' || key === 'facilityType' || key === 'assignedTo' || key === 'process' || key === 'priority' || key === 'departmentId' || key === 'fecName' || key === 'flag' || key === 'caseStage' || key === 'slaOverdue') {\n              var _params$filters;\n\n              keyValue = _defineProperty({}, key, ((_params$filters = params.filters) === null || _params$filters === void 0 ? void 0 : _params$filters[key]) ? params.filters[key].map(function (a) {\n                return isInteger(a.id) ? isNaN(parseInt(a.id)) ? a.id : parseInt(a.id) : a.id;\n              }) : []);\n            } else {\n              var _params$filters2;\n\n              keyValue = _defineProperty({}, key, ((_params$filters2 = params.filters) === null || _params$filters2 === void 0 ? void 0 : _params$filters2[key]) ? params.filters[key].map(function (a) {\n                return a.name;\n              }) : []);\n            }\n\n            merge(dataFiltersObj, keyValue, function (a, b) {\n              return utils.generic.isValidArray(a, true) ? a.concat(b) : undefined;\n            });\n          }\n        }\n\n        if (typeof val === 'string') {\n          if (val) {\n            if (params.filters.hasOwnProperty(key)) {\n              var _params$filters3;\n\n              var keyValueString = _defineProperty({}, key, ((_params$filters3 = params.filters) === null || _params$filters3 === void 0 ? void 0 : _params$filters3[key]) ? params.filters[key] : '');\n\n              merge(dataFiltersObj, keyValueString, function (a, b) {\n                return a ? a.concat(b) : undefined;\n              });\n            }\n          }\n        }\n      });\n\n      if (utils.generic.isValidObject(dataFiltersObj)) {\n        handlers.tableFilterApply(dataFiltersObj);\n\n        if (isMultiSelect) {\n          setIsMultiSelect(false);\n          toggleColumn((columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n            return e.id === 'select';\n          })) || null);\n        }\n      }\n    }\n  };\n\n  var _useState17 = useState(false),\n      _useState18 = _slicedToArray(_useState17, 2),\n      openPopover = _useState18[0],\n      setOpenPopover = _useState18[1];\n\n  var _useState19 = useState(null),\n      _useState20 = _slicedToArray(_useState19, 2),\n      anchorEl = _useState20[0],\n      setAnchorEl = _useState20[1];\n\n  var toggleOpenPopover = function toggleOpenPopover(event) {\n    setOpenPopover(!openPopover);\n    setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n    setIsSearch('caseId');\n  };\n\n  var searchOptions = [{\n    id: 'riskReference',\n    name: utils.string.t('premiumProcessing.search.policyNo')\n  }, {\n    id: 'insured',\n    name: utils.string.t('premiumProcessing.search.insuredCoverholder')\n  }, {\n    id: 'caseId',\n    name: utils.string.t('premiumProcessing.search.caseId')\n  }, {\n    id: 'searchInceptionDate',\n    name: utils.string.t('premiumProcessing.search.inceptionDate')\n  }, {\n    id: 'workPackageReferance',\n    name: utils.string.t('premiumProcessing.search.workPackageReference')\n  }];\n  var searchField = [{\n    id: 'searchDropdown',\n    name: 'searchDropdown',\n    type: 'select',\n    defaultValue: searchValue || '',\n    options: searchOptions,\n    optionKey: 'id',\n    optionLabel: 'name'\n  }, {\n    id: 'searchText',\n    name: 'textValue',\n    defaultValue: '',\n    type: 'text',\n    placeholder: 'Search',\n    icon: SearchIcon,\n    value: ''\n  }, {\n    name: 'caseId',\n    type: 'number',\n    value: '',\n    placeholder: 'Search',\n    defaultValue: null,\n    validation: Yup.number().nullable().min(0).transform(function (value, originalvalue) {\n      return this.isType(value) ? Number.isNaN(value) ? null : value : null;\n    })\n  }, {\n    name: 'searchInceptionDate',\n    type: 'datepicker',\n    value: '',\n    outputFormat: '',\n    placeholder: utils.string.t('app.selectDate'),\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    }\n  }];\n\n  var handleChangeDropDown = function handleChangeDropDown(event, name) {\n    if (name) {\n      setIsSearch(name);\n    } else {\n      setIsSearch('caseId');\n    }\n  };\n\n  var getAssignedToUsersDetails = function getAssignedToUsersDetails() {\n    dispatch(getAssignedToUsersList());\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"premium-processing-search-table\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      my: 2,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        className: classes.searchBox,\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          icon: SearchIcon,\n          iconPosition: \"right\",\n          size: \"xsmall\",\n          light: true,\n          \"aria-owns\": openPopover ? \"search-popover\" : null,\n          \"aria-haspopup\": \"true\",\n          onClick: toggleOpenPopover\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 533,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          id: \"search-popover-modal\",\n          open: Boolean(openPopover),\n          anchorEl: anchorEl,\n          onClose: toggleOpenPopover,\n          classes: {\n            paper: classes.searchPopoverFrame\n          },\n          anchorOrigin: {\n            vertical: 'center',\n            horizontal: 'left'\n          },\n          transformOrigin: {\n            vertical: 'center',\n            horizontal: 'right'\n          },\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            nestedClasses: {\n              root: classes.searchContainer\n            },\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pr: 1,\n              width: '40%',\n              flex: 0.4,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchField, 'searchDropdown', control)), {}, {\n                handleUpdate: handleChangeDropDown\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 559,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 558,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              pr: 1,\n              flex: 0.4,\n              children: [searchValue === 'caseId' && /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchField, 'caseId', control)), {}, {\n                omitThousandSeparator: true,\n                placeholder: utils.string.t('app.search'),\n                muiComponentProps: {\n                  InputProps: {\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      classes: {\n                        root: classes.adornmentStart\n                      },\n                      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 571,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 570,\n                      columnNumber: 27\n                    }, this)\n                  }\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 563,\n                columnNumber: 19\n              }, this), searchValue === 'searchInceptionDate' && /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(searchField, 'searchInceptionDate', control)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 579,\n                columnNumber: 19\n              }, this), (searchValue === 'riskReference' || searchValue === 'insured' || searchValue === 'workPackageReferance') && /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchField, 'textValue', control)), {}, {\n                placeholder: utils.string.t('app.search'),\n                muiComponentProps: {\n                  InputProps: {\n                    maxLength: 50,\n                    startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                      position: \"start\",\n                      classes: {\n                        root: classes.adornmentStart\n                      },\n                      children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 590,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 589,\n                      columnNumber: 27\n                    }, this)\n                  }\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 582,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 561,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              flex: 0.1,\n              justifyContent: \"flex-end\",\n              direction: \"row\",\n              alignItems: \"center\",\n              display: \"flex\",\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                text: utils.string.t('app.go'),\n                type: \"submit\",\n                color: \"primary\",\n                size: \"small\",\n                disabled: formState.isSubmitting || !formState.isDirty || isDisable,\n                \"data-testid\": \"popover-submit-button\",\n                onClick: function onClick(e) {\n                  return searchData(e);\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 599,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 598,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 557,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 542,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 532,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableToolbar, {\n        nestedClasses: {\n          root: classes.tableToolbar\n        },\n        children: [isValidCheckSigining && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            children: utils.string.t('premiumProcessing.checkSigning')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 615,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 614,\n          columnNumber: 13\n        }, this), isValidCheckSigining && /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.switchControl,\n          children: /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread(_objectSpread({}, utils.form.getFieldProps(defaultFormFields, 'workInprogress')), {}, {\n            name: 'workInprogress',\n            control: control,\n            register: register\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 620,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 619,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n          search: false,\n          filtersArray: tableFilterFields,\n          columns: true,\n          columnsArray: columnsArray.filter(function (item) {\n            return item.id !== 'select' && item.id !== 'flag';\n          }),\n          handlers: {\n            onSearch: function onSearch(values) {},\n            onFilter: function onFilter(values) {\n              filterData(values, 'filters');\n            },\n            onResetFilter: resetCaseFilters,\n            onToggleColumn: toggelFlexiColumns,\n            onFilterExpand: function onFilterExpand(value) {\n              loadFiltersData(value);\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 628,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 612,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n        children: cases && /*#__PURE__*/_jsxDEV(TableContainer, {\n          children: [isTableHidden || flagColumn === 'DISABLE' ? /*#__PURE__*/_jsxDEV(Box, {\n            p: 5,\n            children: /*#__PURE__*/_jsxDEV(Warning, {\n              type: \"info\",\n              align: \"center\",\n              text: utils.string.t('premiumProcessing.flexiColumnMessage'),\n              size: \"large\",\n              icon: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 651,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 650,\n            columnNumber: 17\n          }, this) : /*#__PURE__*/_jsxDEV(Table, {\n            className: classes.table,\n            size: \"small\",\n            children: [columnsArray && /*#__PURE__*/_jsxDEV(TableHead, {\n              columns: cols,\n              sorting: sort\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 655,\n              columnNumber: 36\n            }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n              \"data-testid\": \"cases-list\",\n              children: cases.map(function (caseRowValues) {\n                var _selectedCases$, _classnames, _caseRowValues$assign, _caseRowValues$assign2, _caseRowValues$assign3, _caseRowValues$assign4, _caseRowValues$assign5, _caseRowValues$assign6;\n\n                var checked = utils.generic.isValidArray(multiSelectedCasesList, true) && Boolean(multiSelectedCasesList.find(function (item) {\n                  return (item === null || item === void 0 ? void 0 : item.id) == (caseRowValues === null || caseRowValues === void 0 ? void 0 : caseRowValues.id);\n                })); // eslint-disable-line eqeqeq\n\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  \"data-testid\": \"case-row-\".concat(caseRowValues.id),\n                  className: classnames((_classnames = {}, _defineProperty(_classnames, classes.row, true), _defineProperty(_classnames, classes.rowSelected, utils.generic.isValidArray(selectedCases, true) && ((_selectedCases$ = selectedCases[0]) === null || _selectedCases$ === void 0 ? void 0 : _selectedCases$.caseId) == caseRowValues.caseId), _classnames)),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps(utils.string.t('premiumProcessing.columns.select'))), {}, {\n                    \"data-testid\": \"select-case-checkbox-\".concat(caseRowValues.id),\n                    className: classes.cellCheckbox,\n                    children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                      name: \"case-checkbox-row-\".concat(caseRowValues.id),\n                      type: \"checkbox\",\n                      value: checked,\n                      checked: checked,\n                      color: \"primary\",\n                      onChange: function onChange(event) {\n                        return rowCheckboxClick(caseRowValues, event);\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 677,\n                      columnNumber: 29\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 672,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('flag')), {}, {\n                    \"data-testid\": \"flag-\".concat(caseRowValues.id),\n                    className: classes.flagDirection,\n                    children: /*#__PURE__*/_jsxDEV(_Fragment, {\n                      children: utils.generic.isValidArray(caseRowValues.flag, true) && caseRowValues.flag.map(function (flagType) {\n                        return /*#__PURE__*/_jsxDEV(\"span\", {\n                          className: classes.flags,\n                          children: [flagType === constants.RFI && /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: utils.string.t('premiumProcessing.flagTooltip.rfiFlag'),\n                            placement: \"bottom\",\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              className: classes.rfiFlag,\n                              size: 10,\n                              children: /*#__PURE__*/_jsxDEV(Translate, {\n                                label: utils.string.t('premiumProcessing.columns.rfiFlag')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 702,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 701,\n                              columnNumber: 43\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 700,\n                            columnNumber: 41\n                          }, _this), flagType === constants.QC_FLAG && /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: utils.string.t('premiumProcessing.flagTooltip.qcFlag'),\n                            placement: \"bottom\",\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              className: classes.qcFlag,\n                              size: 10,\n                              children: /*#__PURE__*/_jsxDEV(Translate, {\n                                label: utils.string.t('premiumProcessing.columns.qcFlag')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 709,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 708,\n                              columnNumber: 43\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 707,\n                            columnNumber: 41\n                          }, _this), flagType === constants.RP_FLAG && /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: utils.string.t('premiumProcessing.flagTooltip.rpFlag'),\n                            placement: \"bottom\",\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              className: classes.rpFlag,\n                              size: 10,\n                              children: /*#__PURE__*/_jsxDEV(Translate, {\n                                label: utils.string.t('premiumProcessing.columns.rpFlag')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 716,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 715,\n                              columnNumber: 43\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 714,\n                            columnNumber: 41\n                          }, _this), flagType === constants.RESUBMITTED_FLAG && /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: utils.string.t('premiumProcessing.flagTooltip.rsFlag'),\n                            placement: \"bottom\",\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              className: classes.rsFlag,\n                              size: 10,\n                              children: /*#__PURE__*/_jsxDEV(Translate, {\n                                label: utils.string.t('premiumProcessing.columns.rsFlag')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 724,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 723,\n                              columnNumber: 43\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 722,\n                            columnNumber: 41\n                          }, _this), flagType === constants.REJECTCLOSE_FLAG && /*#__PURE__*/_jsxDEV(Tooltip, {\n                            title: utils.string.t('premiumProcessing.flagTooltip.rcFlag'),\n                            placement: \"bottom\",\n                            children: /*#__PURE__*/_jsxDEV(Avatar, {\n                              variant: \"rounded\",\n                              className: classes.rsFlag,\n                              size: 10,\n                              children: /*#__PURE__*/_jsxDEV(Translate, {\n                                label: utils.string.t('premiumProcessing.columns.rcFlag')\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 732,\n                                columnNumber: 45\n                              }, _this)\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 731,\n                              columnNumber: 43\n                            }, _this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 730,\n                            columnNumber: 41\n                          }, _this)]\n                        }, flagType, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 698,\n                          columnNumber: 37\n                        }, _this);\n                      })\n                    }, void 0, false)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 687,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    },\n                    \"data-testid\": \"case-\".concat(caseRowValues.id)\n                  }, columnProps('department')), {}, {\n                    children: /*#__PURE__*/_jsxDEV(\"span\", {\n                      className: classes.relativeBox,\n                      children: caseRowValues.department\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 748,\n                      columnNumber: 29\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 742,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    },\n                    \"data-testid\": \"date-\".concat(caseRowValues.id)\n                  }, columnProps('caseCreatedOn')), {}, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: caseRowValues.caseCreatedOn\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 757,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        noWrap: true,\n                        className: !caseRowValues.slaFlag ? classes.subText : classes.subTextError,\n                        children: caseRowValues.slaDaysPending\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 759,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 758,\n                      columnNumber: 29\n                    }, _this)]\n                  }), void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 751,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    },\n                    \"data-testid\": \"policy-number-\".concat(caseRowValues.id)\n                  }, columnProps('policyRef')), {}, {\n                    children: [/*#__PURE__*/_jsxDEV(Box, {\n                      children: caseRowValues.policyRef\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 774,\n                      columnNumber: 29\n                    }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                      children: /*#__PURE__*/_jsxDEV(Typography, {\n                        variant: \"body2\",\n                        noWrap: true,\n                        className: classes.subText,\n                        children: caseRowValues.insuredOrCoverHolder\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 776,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 775,\n                      columnNumber: 29\n                    }, _this)]\n                  }), void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 768,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    },\n                    \"data-testid\": \"insured-\".concat(caseRowValues.id)\n                  }, columnProps('processName')), {}, {\n                    children: caseRowValues.processName\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 781,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('priority')), {}, {\n                    children: caseRowValues.priority && /*#__PURE__*/_jsxDEV(Status, {\n                      size: \"sm\",\n                      text: /*#__PURE__*/_jsxDEV(Translate, {\n                        label: utils.string.replaceLowerCase(caseRowValues.priority) === 'yes' ? utils.string.t('app.high') : utils.string.t('app.medium')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 798,\n                        columnNumber: 35\n                      }, _this),\n                      status: utils.string.replaceLowerCase(caseRowValues.priority) === 'yes' ? 'error' : utils.string.replaceLowerCase(caseRowValues.priority) === 'no' ? 'alert' : 'success'\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 795,\n                      columnNumber: 31\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 789,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedToUser')), {}, {\n                    \"data-testid\": \"assigned-to-\".concat(caseRowValues.id),\n                    children: tabSelectionView === constants.WORKBASKET && !utils.user.isAdminUser(utils.generic.isValidArray(userRoleDetails, true) && userRoleDetails[0]) ? /*#__PURE__*/_jsxDEV(Box, {\n                      className: classes.assignedToAlignment,\n                      title: (_caseRowValues$assign = caseRowValues.assignedToUser) === null || _caseRowValues$assign === void 0 ? void 0 : _caseRowValues$assign.id,\n                      children: /*#__PURE__*/_jsxDEV(SelectPopover, {\n                        id: \"select-popover-\".concat(caseRowValues.id),\n                        buttonText: ((_caseRowValues$assign2 = caseRowValues.assignedToUser) === null || _caseRowValues$assign2 === void 0 ? void 0 : _caseRowValues$assign2.name) ? utils.string.t('app.reAssing') : utils.string.t('app.assign'),\n                        showButtonTextOnly: false,\n                        text: ((_caseRowValues$assign3 = caseRowValues.assignedToUser) === null || _caseRowValues$assign3 === void 0 ? void 0 : _caseRowValues$assign3.name) || utils.string.t('premiumProcessing.unAssigned'),\n                        toolTip: (_caseRowValues$assign4 = caseRowValues.assignedToUser) === null || _caseRowValues$assign4 === void 0 ? void 0 : _caseRowValues$assign4.id,\n                        displaySelectedText: caseRowValues.assignedToUser,\n                        buttonVariant: 'text',\n                        buttonDisabled: multiSelectedCasesList.length > 0 ? true : false,\n                        value: caseRowValues.assignedToUser,\n                        handlers: {\n                          onTogglePopOver: function onTogglePopOver(data) {\n                            if (data) {\n                              if (!isAssignedToUserList) {\n                                getAssignedToUsersDetails();\n                              }\n                            }\n                          },\n                          onToggleOption: function onToggleOption(values) {\n                            if (assignedToSelected && assignedToSelected.name && assignedToSelected.id && assignedToSelected.emailId) {\n                              if (caseRowValues.id === assignedToSelected.caseRowId) {\n                                handlers.assignedUsersToCase({\n                                  name: assignedToSelected.name,\n                                  emailId: assignedToSelected.emailId,\n                                  id: assignedToSelected.id\n                                }, [caseRowValues], false);\n                                setAssignedToSelected(null);\n                              } else {\n                                dispatch(enqueueNotification(utils.string.t('premiumProcessing.validUserSelection'), 'warning'));\n                              }\n                            } else {\n                              dispatch(enqueueNotification(utils.string.t('premiumProcessing.validUserSelection'), 'warning'));\n                            }\n                          }\n                        },\n                        children: /*#__PURE__*/_jsxDEV(SingleSelect, {\n                          search: true,\n                          value: caseRowValues.assignedToUser,\n                          placeholder: 'search users',\n                          options: assingnedToDropdownList,\n                          handlers: {\n                            onToggleOption: function onToggleOption(item) {\n                              setAssignedToSelected(null);\n\n                              if (item) {\n                                setAssignedToSelected({\n                                  name: item.name,\n                                  emailId: item.id,\n                                  id: item.id,\n                                  caseRowId: caseRowValues.id\n                                });\n                              }\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 867,\n                          columnNumber: 35\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 820,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 819,\n                      columnNumber: 31\n                    }, _this) : /*#__PURE__*/_jsxDEV(Tooltip, {\n                      title: (_caseRowValues$assign5 = caseRowValues.assignedToUser) === null || _caseRowValues$assign5 === void 0 ? void 0 : _caseRowValues$assign5.id,\n                      placement: 'top',\n                      arrow: true,\n                      children: /*#__PURE__*/_jsxDEV(Box, {\n                        onDoubleClick: function onDoubleClick() {\n                          return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                        },\n                        onClick: function onClick() {\n                          return tableRowClick(caseRowValues);\n                        },\n                        children: ((_caseRowValues$assign6 = caseRowValues.assignedToUser) === null || _caseRowValues$assign6 === void 0 ? void 0 : _caseRowValues$assign6.name) || utils.string.t('premiumProcessing.unAssigned')\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 890,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 889,\n                      columnNumber: 31\n                    }, _this)\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 816,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('caseId')), {}, {\n                    children: caseRowValues.caseId\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 899,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('inceptionDate')), {}, {\n                    children: caseRowValues.inceptionDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 906,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('fecName')), {}, {\n                    children: caseRowValues.fecName\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 913,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('bordereauType')), {}, {\n                    children: caseRowValues.bordereauType\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 920,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('facilityType')), {}, {\n                    children: caseRowValues.facilityType\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 927,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('caseStage')), {}, {\n                    children: caseRowValues.caseStage\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 934,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('nonPremium')), {}, {\n                    children: caseRowValues.nonPremium\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 941,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('feeAmendments')), {}, {\n                    children: caseRowValues.feeAmendments\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 948,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({\n                    onDoubleClick: function onDoubleClick() {\n                      return handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId);\n                    },\n                    onClick: function onClick() {\n                      return tableRowClick(caseRowValues);\n                    }\n                  }, columnProps('workPackageReference')), {}, {\n                    children: caseRowValues.workPackageReference\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 955,\n                    columnNumber: 27\n                  }, _this)]\n                }, \"\".concat(caseRowValues.caseId, \"-\").concat(caseRowValues.taskId), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 663,\n                  columnNumber: 25\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 656,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 654,\n            columnNumber: 17\n          }, this), !isTableHidden && cases.length === 0 && /*#__PURE__*/_jsxDEV(Box, {\n            p: 5,\n            children: /*#__PURE__*/_jsxDEV(Warning, {\n              type: \"info\",\n              align: \"center\",\n              text: utils.string.t('premiumProcessing.noResultsMessage'),\n              size: \"large\",\n              icon: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 970,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 969,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 648,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 646,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        marginTop: \"5px\",\n        children: /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          children: utils.string.t('premiumProcessing.multiSelect')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 979,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 978,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classnames(classes.switchControl, classes.noLeftMargin),\n        children: /*#__PURE__*/_jsxDEV(Switch, {\n          checked: isMultiSelect,\n          disabled: isTableHidden || cases.length === 0 || tabSelectionView !== constants.WORKBASKET || disableMultiSelect,\n          onChange: function onChange(event) {\n            return showCheckboxesClick(event);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 982,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 981,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        children: assingnedToDropdownList && /*#__PURE__*/_jsxDEV(SelectPopover, {\n          id: \"multi-select-popover\",\n          buttonDisabled: isMultiSelect ? !isTableHidden && cases.length > 0 && multiSelectedCasesList.length >= 1 && tabSelectionView === constants.WORKBASKET ? false : true : true,\n          className: classes.bulkAssignPopover,\n          buttonText: utils.string.t('app.assign'),\n          text: utils.string.t('premiumProcessing.bulkAssignment'),\n          value: selectedValueBulkAssign,\n          buttonVariant: 'outlined',\n          displaySelectedText: selectedValueBulkAssign,\n          showButtonTextOnly: true,\n          handlers: {\n            onTogglePopOver: function onTogglePopOver(data) {\n              if (data) {\n                if (!isAssignedToUserList) {\n                  getAssignedToUsersDetails();\n                }\n              }\n            },\n            onToggleOption: function onToggleOption(values) {\n              setSelectedValueBulkAssign(values);\n\n              if (multiSelectedCasesList.length === 0) {\n                dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseNotSelected'), 'warning'));\n              } else {\n                if (multiSelectedCasesList.length > 10) {\n                  dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\n                  return;\n                } else {\n                  handlers.assignedUsersToCase(values, multiSelectedCasesList, true);\n                  setIsBulkSelectClear(true);\n                  setSelectedValueBulkAssign(null);\n\n                  if (isMultiSelect && multiSelectedCasesList.length > 0) {\n                    var _selectColumn$label5, _selectColumn$label5$, _selectColumn$label5$2, _selectColumn$label5$3, _selectColumn$label5$4;\n\n                    var selectColumn = columnsArray === null || columnsArray === void 0 ? void 0 : columnsArray.find(function (e) {\n                      return e.id === 'select';\n                    });\n                    selectColumn === null || selectColumn === void 0 ? void 0 : (_selectColumn$label5 = selectColumn.label) === null || _selectColumn$label5 === void 0 ? void 0 : (_selectColumn$label5$ = _selectColumn$label5.props) === null || _selectColumn$label5$ === void 0 ? void 0 : (_selectColumn$label5$2 = _selectColumn$label5$.children) === null || _selectColumn$label5$2 === void 0 ? void 0 : (_selectColumn$label5$3 = _selectColumn$label5$2.props) === null || _selectColumn$label5$3 === void 0 ? void 0 : (_selectColumn$label5$4 = _selectColumn$label5$3.control) === null || _selectColumn$label5$4 === void 0 ? void 0 : _selectColumn$label5$4.setValue('singlevalue', false);\n                  }\n                }\n              }\n            }\n          },\n          children: /*#__PURE__*/_jsxDEV(SingleSelect, {\n            search: true,\n            placeholder: 'search users',\n            options: assingnedToDropdownList,\n            value: selectedValueBulkAssign,\n            handlers: {\n              onToggleOption: function onToggleOption(item) {\n                setSelectedValueBulkAssign(item);\n              }\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 1035,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 990,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 988,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        className: classes.pageRow,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          page: get(paginationObj, 'obj.page'),\n          count: get(paginationObj, 'obj.rowsTotal'),\n          rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n          onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n          onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 1050,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 1049,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 977,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 530,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCasesView, \"OTDjoxatTTEhJi0cDUexnLWxBrM=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useFlexiColumns, usePagination, useSort, useSelector, useSelector];\n});\n\n_c = PremiumProcessingCasesView;\nPremiumProcessingCasesView.displayName = \"PremiumProcessingCasesView\";\nPremiumProcessingCasesView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCasesView\",\n  \"props\": {\n    \"columnsData\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"node\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"cases\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"page\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsTotal\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsPerPage\": {\n            \"name\": \"number\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"tabSelectionView\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"by\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"direction\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'asc'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'desc'\",\n              \"computed\": false\n            }],\n            \"required\": true\n          },\n          \"type\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'lexical'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'date'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'number'\",\n              \"computed\": false\n            }],\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedCase\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"assingnedToDropdownList\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"selectedFilterDetails\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"searchSubmit\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"searchReset\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"checkboxClick\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"selectSingleCase\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"casesFilter\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"showCheckboxesHandler\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"clickRfiQueryResponse\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"assignedUsersToCase\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"tableFilterReset\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"tableFilterApply\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"updateMultiSelectedRows\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"showCheckboxColumnHandler\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"handleDoubleClickCaseRow\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"userRoleDetails\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tableFilterFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"flagsInRow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"defaultFormFields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"watch\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"setValue\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"register\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessing\\\\PremiumProcessingCases.view.js\"] = {\n    name: \"PremiumProcessingCasesView\",\n    docgenInfo: PremiumProcessingCasesView.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessing\\\\PremiumProcessingCases.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCasesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessing/PremiumProcessingCases.view.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","classnames","get","merge","isEmpty","isInteger","xorBy","Yup","styles","Overflow","Status","TableCell","TableHead","Translate","SelectPopover","SingleSelect","TableToolbar","TableFilters","FormSwitch","Pagination","Tooltip","FormDate","Button","FormGrid","FormSelect","FormText","Warning","enqueueNotification","setMultiSelectFlag","getCasesList","collapseNav","expandSidebar","collapseSidebar","setIsCaseTableHidden","selectUserRole","getAssignedToUsersList","getDepartments","selectPiDepartmentList","getUsersForRole","selectUsersInRoles","selectMultiSelectedCase","selectCasesListType","constants","useFlexiColumns","usePagination","useSort","utils","Box","Grid","makeStyles","Table","TableBody","TableRow","Typography","TableContainer","Switch","Popover","InputAdornment","Avatar","Checkbox","SearchIcon","PremiumProcessingCasesView","propTypes","columnsData","arrayOf","shape","id","string","isRequired","label","node","cases","array","pagination","page","number","rowsTotal","rowsPerPage","tabSelectionView","sort","by","direction","oneOf","type","selectedCase","assingnedToDropdownList","selectedFilterDetails","object","handlers","searchSubmit","func","searchReset","changePage","changeRowsPerPage","checkboxClick","selectSingleCase","casesFilter","showCheckboxesHandler","clickRfiQueryResponse","assignedUsersToCase","tableFilterReset","tableFilterApply","updateMultiSelectedRows","showCheckboxColumnHandler","handleDoubleClickCaseRow","userRoleDetails","tableFilterFields","flagsInRow","bool","defaultFormFields","watch","setValue","register","sortObj","selectedCases","control","formState","classes","name","dispatch","uiSidebarExpanded","state","currentUser","isAssignedToUserList","generic","isValidArray","casesListType","departmentsList","isDeparmentsLoaded","fecUsers","isFecUsersLoaded","selectedValueBulkAssign","setSelectedValueBulkAssign","isBulkSelectClear","setIsBulkSelectClear","columns","columnsArray","isTableHidden","columnProps","toggleColumn","disableMultiSelect","setDisableMultiSelect","isMultiSelect","setIsMultiSelect","paginationObj","sortColumn","cols","uiNavExpanded","multiSelectedCasesList","assignedToSelected","setAssignedToSelected","searchValue","setIsSearch","value","flagColumn","setFlagColumn","isDisable","textValue","caseId","searchInceptionDate","multipleCasesLength","length","isValidFlagSection","some","item","FRONT_END_CONTACT","toLowerCase","ROLE_SENIOR_TECHNICIAN","ROLE_TECHNICIAN_MANAGER","SENIOR_MANAGER","OPERATIONS_LEAD","ROLE_JUNIOR_TECHNICIAN","includes","isValidCheckSigining","columnsVisible","filter","columnData","visible","WORKBASKET","flag","forEach","col","find","e","resetCaseFilters","showCheckboxesClick","event","target","checked","selectColumn","props","children","handleDoubleClickRow","t","tableRowClick","caseRow","selectedCaseDetails","rowCheckboxClick","rowDetails","casesList","bpmProcessId","rowPerPage","nonFlagData","a","every","toggelFlexiColumns","column","removeSearchFilters","filterList","riskReference","workPackageReferance","searchData","params","searchFieldValues","searchDropdown","inceptionDate","insured","parseInt","filters","setOpenPopover","loadFiltersData","filterData","dataFiltersObj","Object","entries","key","val","hasOwnProperty","keyValue","map","isNaN","b","concat","undefined","keyValueString","isValidObject","openPopover","anchorEl","setAnchorEl","toggleOpenPopover","currentTarget","searchOptions","searchField","defaultValue","options","optionKey","optionLabel","placeholder","icon","validation","nullable","min","transform","originalvalue","isType","Number","outputFormat","muiComponentProps","fullWidth","root","datepicker","handleChangeDropDown","getAssignedToUsersDetails","searchBox","Boolean","paper","searchPopoverFrame","vertical","horizontal","searchContainer","form","getFieldProps","InputProps","startAdornment","adornmentStart","maxLength","isSubmitting","isDirty","tableToolbar","switchControl","onSearch","values","onFilter","onResetFilter","onToggleColumn","onFilterExpand","table","caseRowValues","row","rowSelected","cellCheckbox","taskId","flagDirection","flagType","flags","RFI","rfiFlag","QC_FLAG","qcFlag","RP_FLAG","rpFlag","RESUBMITTED_FLAG","rsFlag","REJECTCLOSE_FLAG","relativeBox","department","caseCreatedOn","slaFlag","subText","subTextError","slaDaysPending","policyRef","insuredOrCoverHolder","processName","priority","replaceLowerCase","user","isAdminUser","assignedToAlignment","assignedToUser","onTogglePopOver","data","onToggleOption","emailId","caseRowId","fecName","bordereauType","facilityType","caseStage","nonPremium","feeAmendments","workPackageReference","noLeftMargin","bulkAssignPopover","pageRow"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\nimport merge from 'lodash/merge';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport isInteger from 'lodash/isInteger';\r\nimport xorBy from 'lodash/xorBy';\r\nimport * as Yup from 'yup';\r\n\r\n//app\r\nimport styles from './PremiumProcessingCases.styles';\r\nimport {\r\n  Overflow,\r\n  Status,\r\n  TableCell,\r\n  TableHead,\r\n  Translate,\r\n  SelectPopover,\r\n  SingleSelect,\r\n  TableToolbar,\r\n  TableFilters,\r\n  FormSwitch,\r\n  Pagination,\r\n  Tooltip,\r\n  FormDate,\r\n  Button,\r\n  FormGrid,\r\n  FormSelect,\r\n  FormText,\r\n  Warning,\r\n} from 'components';\r\nimport {\r\n  enqueueNotification,\r\n  setMultiSelectFlag,\r\n  getCasesList,\r\n  collapseNav,\r\n  expandSidebar,\r\n  collapseSidebar,\r\n  setIsCaseTableHidden,\r\n  selectUserRole,\r\n  getAssignedToUsersList,\r\n  getDepartments,\r\n  selectPiDepartmentList,\r\n  getUsersForRole,\r\n  selectUsersInRoles,\r\n  selectMultiSelectedCase,\r\n  selectCasesListType,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport { useFlexiColumns, usePagination, useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport {\r\n  Box,\r\n  Grid,\r\n  makeStyles,\r\n  Table,\r\n  TableBody,\r\n  TableRow,\r\n  Typography,\r\n  TableContainer,\r\n  Switch,\r\n  Popover,\r\n  InputAdornment,\r\n  Avatar,\r\n  Checkbox,\r\n} from '@material-ui/core';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nPremiumProcessingCasesView.propTypes = {\r\n  columnsData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.node.isRequired,\r\n    })\r\n  ).isRequired,\r\n  cases: PropTypes.array.isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  tabSelectionView: PropTypes.string.isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    direction: PropTypes.oneOf(['asc', 'desc']).isRequired,\r\n    type: PropTypes.oneOf(['lexical', 'date', 'number']).isRequired,\r\n  }).isRequired,\r\n  selectedCase: PropTypes.array,\r\n  assingnedToDropdownList: PropTypes.array,\r\n  selectedFilterDetails: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    searchSubmit: PropTypes.func.isRequired,\r\n    searchReset: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    checkboxClick: PropTypes.func.isRequired,\r\n    selectSingleCase: PropTypes.func.isRequired,\r\n    casesFilter: PropTypes.func.isRequired,\r\n    showCheckboxesHandler: PropTypes.func.isRequired,\r\n    clickRfiQueryResponse: PropTypes.func.isRequired,\r\n    assignedUsersToCase: PropTypes.func.isRequired,\r\n    tableFilterReset: PropTypes.func.isRequired,\r\n    tableFilterApply: PropTypes.func.isRequired,\r\n    updateMultiSelectedRows: PropTypes.func.isRequired,\r\n    showCheckboxColumnHandler: PropTypes.func.isRequired,\r\n    handleDoubleClickCaseRow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  userRoleDetails: PropTypes.array,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  flagsInRow: PropTypes.bool.isRequired,\r\n  defaultFormFields: PropTypes.array.isRequired,\r\n  watch: PropTypes.func,\r\n  setValue: PropTypes.func,\r\n  register: PropTypes.func,\r\n};\r\n\r\nexport function PremiumProcessingCasesView({\r\n  columnsData,\r\n  cases,\r\n  pagination,\r\n  sort: sortObj,\r\n  selectedCases,\r\n  handlers,\r\n  tabSelectionView,\r\n  userRoleDetails,\r\n  register,\r\n  tableFilterFields,\r\n  selectedFilterDetails,\r\n  control,\r\n  watch,\r\n  setValue,\r\n  formState,\r\n  assingnedToDropdownList,\r\n  flagsInRow,\r\n  defaultFormFields,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCases' })();\r\n  const dispatch = useDispatch();\r\n  const uiSidebarExpanded = useSelector((state) => get(state, 'ui.sidebar.expanded'));\r\n  const currentUser = useSelector(selectUserRole);\r\n  const isAssignedToUserList = utils.generic.isValidArray(assingnedToDropdownList, true);\r\n  const casesListType = useSelector(selectCasesListType);\r\n  const departmentsList = useSelector(selectPiDepartmentList);\r\n  const isDeparmentsLoaded = utils.generic.isValidArray(departmentsList, true);\r\n  const fecUsers = useSelector(selectUsersInRoles);\r\n  const isFecUsersLoaded = utils.generic.isValidArray(fecUsers, true);\r\n  const [selectedValueBulkAssign, setSelectedValueBulkAssign] = useState(null);\r\n  const [isBulkSelectClear, setIsBulkSelectClear] = useState(false);\r\n  const [columns] = useState(columnsData);\r\n  const { columns: columnsArray, isTableHidden, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n  const [disableMultiSelect, setDisableMultiSelect] = useState(false);\r\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\r\n  const paginationObj = usePagination(cases, pagination, handlers.changePage, handlers.changeRowsPerPage);\r\n  const { cols, sort } = useSort(columnsArray, sortObj, handlers.sortColumn);\r\n  const uiNavExpanded = useSelector((state) => get(state, 'ui.nav.expanded'));\r\n  const multiSelectedCasesList = useSelector(selectMultiSelectedCase);\r\n  const [assignedToSelected, setAssignedToSelected] = useState(null);\r\n  const [searchValue, setIsSearch] = useState('caseId');\r\n  const value = watch();\r\n  const [flagColumn, setFlagColumn] = useState('ENABLE');\r\n  const isDisable =\r\n    value?.textValue === '' || value?.caseId === '' || value?.searchInceptionDate === null || value?.caseId === null ? true : false;\r\n  const multipleCasesLength = multiSelectedCasesList?.length || 0;\r\n  const isValidFlagSection =\r\n    utils.generic.isValidArray(currentUser, true) &&\r\n    currentUser.some((item) =>\r\n      [\r\n        constants.FRONT_END_CONTACT.toLowerCase(),\r\n        constants.ROLE_SENIOR_TECHNICIAN.toLowerCase(),\r\n        constants.ROLE_TECHNICIAN_MANAGER.toLowerCase(),\r\n        constants.SENIOR_MANAGER.toLowerCase(),\r\n        constants.OPERATIONS_LEAD.toLowerCase(),\r\n        constants.ROLE_JUNIOR_TECHNICIAN.toLowerCase(),\r\n      ].includes(item.name.toLowerCase())\r\n    );\r\n  const isValidCheckSigining =\r\n    utils.generic.isValidArray(currentUser, true) &&\r\n    currentUser.some((item) =>\r\n      [\r\n        constants.ROLE_SENIOR_TECHNICIAN.toLowerCase(),\r\n        constants.ROLE_TECHNICIAN_MANAGER.toLowerCase(),\r\n        constants.ROLE_JUNIOR_TECHNICIAN.toLowerCase(),\r\n        constants.SENIOR_MANAGER.toLowerCase(),\r\n      ].includes(item.name.toLowerCase())\r\n    );\r\n\r\n  useEffect(() => {\r\n    setValue('workInprogress', false);\r\n  }, [setValue, casesListType]);\r\n\r\n  useEffect(() => {\r\n    if (multipleCasesLength > 0) {\r\n      dispatch(collapseSidebar());\r\n    }\r\n    if (selectedCases.length === 1) {\r\n      if (!uiSidebarExpanded) {\r\n        dispatch(expandSidebar());\r\n      }\r\n    } else {\r\n      dispatch(collapseSidebar());\r\n    }\r\n    const columnsVisible = columnsArray?.filter((columnData) => columnData.visible !== false);\r\n    if (columnsVisible?.length === 1 && columnsVisible[0]?.id === 'flag' && columnsVisible[0]?.visible) {\r\n      dispatch(collapseSidebar());\r\n      dispatch(setIsCaseTableHidden(true)); // setting true when all columns are hidden and only when flag column enabled.\r\n    } else {\r\n      if (isTableHidden) {\r\n        dispatch(collapseSidebar());\r\n      }\r\n      dispatch(setIsCaseTableHidden(isTableHidden));\r\n    }\r\n    dispatch(collapseNav());\r\n  }, [multipleCasesLength, selectedCases, isTableHidden, columnsArray]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isBulkSelectClear) {\r\n      setSelectedValueBulkAssign(null);\r\n    }\r\n    if (tabSelectionView !== constants.WORKBASKET) {\r\n      setIsMultiSelect(false);\r\n      setDisableMultiSelect(true);\r\n      dispatch(setMultiSelectFlag({ flag: false }));\r\n      columnsArray.forEach((col) => {\r\n        if (col.id === 'select') {\r\n          col.visible = false;\r\n          if (utils.generic.isValidArray(selectedCases, true)) {\r\n            handlers.selectSingleCase(selectedCases);\r\n          }\r\n        }\r\n      });\r\n    } else {\r\n      setDisableMultiSelect(false);\r\n    }\r\n  }, [dispatch, isBulkSelectClear, tabSelectionView]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isMultiSelect) {\r\n      setIsMultiSelect(false);\r\n      toggleColumn(columnsArray?.find((e) => e.id === 'select') || null);\r\n    }\r\n  }, [sort, pagination.page, pagination.rowsPerPage]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const resetCaseFilters = () => {\r\n    handlers.tableFilterReset();\r\n    if (isMultiSelect) {\r\n      setIsMultiSelect(false);\r\n      toggleColumn(columnsArray?.find((e) => e.id === 'select') || null);\r\n    }\r\n  };\r\n\r\n  /**Toggle checkbox column to enable Multi Select option */\r\n  const showCheckboxesClick = (event) => {\r\n    setIsMultiSelect(event?.target?.checked || !isMultiSelect);\r\n    handlers.showCheckboxColumnHandler(event?.target?.checked);\r\n    const selectColumn = columnsArray?.find((e) => e.id === 'select');\r\n    toggleColumn(selectColumn || null);\r\n    selectColumn?.label?.props?.children?.props?.control?.setValue('singlevalue', false);\r\n  };\r\n  const handleDoubleClickRow = (id) => {\r\n    if (!isMultiSelect) {\r\n      handlers.handleDoubleClickCaseRow(id);\r\n    } else {\r\n      dispatch(enqueueNotification(utils.string.t('premiumProcessing.multiSelectEanbleWarningMessage'), 'warning'));\r\n    }\r\n  };\r\n  const tableRowClick = (caseRow) => {\r\n    if (!isMultiSelect) {\r\n      const selectedCaseDetails = isMultiSelect ? xorBy(selectedCases || [], [caseRow], 'id') : [caseRow];\r\n      handlers.selectSingleCase(selectedCaseDetails);\r\n      if (utils.generic.isValidArray(selectedCases, true)) {\r\n        const selectColumn = columnsArray?.find((e) => e.id === 'select');\r\n        selectColumn?.label?.props?.children?.props?.control?.setValue('singlevalue', false);\r\n        if (isMultiSelect && utils.generic.isValidArray(selectedCaseDetails, true) && selectedCaseDetails.length > 10) {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\r\n        }\r\n      }\r\n    } else {\r\n      dispatch(enqueueNotification(utils.string.t('premiumProcessing.multiSelectEanbleWarningMessage'), 'warning'));\r\n    }\r\n  };\r\n\r\n  const rowCheckboxClick = (rowDetails, event) => {\r\n    if (isMultiSelect) {\r\n      if (event?.target?.checked) {\r\n        const casesList = [...multiSelectedCasesList, rowDetails];\r\n        if (multiSelectedCasesList.length > 9) {\r\n          event.target.checked = false;\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\r\n        } else {\r\n          handlers.updateMultiSelectedRows(casesList);\r\n        }\r\n      } else {\r\n        handlers.updateMultiSelectedRows(multiSelectedCasesList.filter((item) => item.bpmProcessId !== rowDetails.bpmProcessId));\r\n      }\r\n\r\n      if (multiSelectedCasesList.length === 1 && !event?.target?.checked) {\r\n        const selectColumn = columnsArray?.find((e) => e.id === 'select');\r\n        selectColumn?.label?.props?.children?.props?.control?.setValue('singlevalue', false);\r\n      }\r\n      const rowPerPage = get(paginationObj, 'obj.rowsPerPage');\r\n      if (multiSelectedCasesList.length === rowPerPage && event?.target?.checked) {\r\n        const selectColumn = columnsArray?.find((e) => e.id === 'select');\r\n        selectColumn?.label?.props?.children?.props?.control?.setValue('singlevalue', true);\r\n      }\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    columnsArray?.forEach((col) => {\r\n      if (col.id === 'flag') {\r\n        col.visible = userRoleDetails[0] && flagsInRow && isValidFlagSection;\r\n      }\r\n    });\r\n    if (utils.generic.isValidArray(columnsArray, true)) {\r\n      const nonFlagData = columnsArray.filter((a) => a.id !== 'flag');\r\n      if (utils.generic.isValidArray(nonFlagData, true)) {\r\n        if (nonFlagData.every((columnData) => columnData.visible === false)) {\r\n          setFlagColumn('DISABLE');\r\n        } else {\r\n          setFlagColumn('ENABLE');\r\n        }\r\n      }\r\n    }\r\n  }, [flagColumn, toggleColumn, isBulkSelectClear, tabSelectionView]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const toggelFlexiColumns = (column) => {\r\n    if (uiNavExpanded) {\r\n      dispatch(collapseNav());\r\n    }\r\n    toggleColumn(column);\r\n    setDisableMultiSelect(false);\r\n    /**Checking here for all columns are visible false and then disableing the multi select switch control  */\r\n    if (columnsArray.every((columnData) => columnData.visible === false)) {\r\n      setDisableMultiSelect(column.visible);\r\n    }\r\n    /**Checking the columns visible true and should not consider checkbox(select) column and disabling the multi select switch control  */\r\n    if (columnsArray.filter((item) => item.visible === true && item.id !== 'select')?.length === 1) {\r\n      setDisableMultiSelect(false);\r\n      setIsMultiSelect(false);\r\n      /** updating MultiSelectCheckbox flag  */\r\n      handlers.showCheckboxesHandler();\r\n      columnsArray.forEach((col) => {\r\n        if (col.id === 'select') {\r\n          col.visible = false;\r\n        }\r\n      });\r\n    }\r\n  };\r\n  const removeSearchFilters = (filterList) => {\r\n    if (filterList.riskReference) delete filterList.riskReference;\r\n    if (filterList.caseId) delete filterList.caseId;\r\n    if (filterList.workPackageReferance) delete filterList.workPackageReferance;\r\n    return filterList;\r\n  };\r\n  const searchData = () => {\r\n    const params = watch();\r\n    let searchFieldValues = selectedFilterDetails;\r\n    searchFieldValues = removeSearchFilters(searchFieldValues);\r\n    if (params) {\r\n      if (params.searchDropdown === 'searchInceptionDate') {\r\n        if (!isEmpty(searchFieldValues?.inceptionDate)) {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.filterAppliedValidation'), 'warning'));\r\n          return;\r\n        }\r\n        searchFieldValues.inceptionDate = params[params.searchDropdown];\r\n      }\r\n      if (params.searchDropdown === 'insured') {\r\n        if (utils.generic.isValidArray(searchFieldValues?.insured, true)) {\r\n          dispatch(enqueueNotification(utils.string.t('premiumProcessing.filterAppliedValidation'), 'warning'));\r\n          return;\r\n        }\r\n        searchFieldValues[params.searchDropdown] = [params.textValue];\r\n      }\r\n      if (params.searchDropdown === 'caseId') {\r\n        searchFieldValues[params.searchDropdown] =\r\n          params.searchDropdown === 'caseId' ? parseInt(params[params.searchDropdown]) : params[params.searchDropdown];\r\n      }\r\n      if (params.searchDropdown === 'riskReference') searchFieldValues[params.searchDropdown] = params.textValue;\r\n      if (params.searchDropdown === 'workPackageReferance') searchFieldValues[params.searchDropdown] = params.textValue;\r\n      dispatch(getCasesList({ filters: searchFieldValues }));\r\n      setOpenPopover(false);\r\n    }\r\n  };\r\n  const loadFiltersData = (value) => {\r\n    if (value) {\r\n      if (!isAssignedToUserList) {\r\n        dispatch(getAssignedToUsersList());\r\n      }\r\n      if (!isDeparmentsLoaded) {\r\n        dispatch(getDepartments());\r\n      }\r\n      if (!isFecUsersLoaded) {\r\n        dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD]));\r\n      }\r\n    }\r\n  };\r\n  const filterData = (params) => {\r\n    if (params && params.filters) {\r\n      const dataFiltersObj = {};\r\n      Object.entries(params.filters).forEach(([key, val]) => {\r\n        if (utils.generic.isValidArray(val, true)) {\r\n          if (params.filters.hasOwnProperty(key)) {\r\n            let keyValue = {};\r\n            if (\r\n              key === 'bordereauType' ||\r\n              key === 'facilityType' ||\r\n              key === 'assignedTo' ||\r\n              key === 'process' ||\r\n              key === 'priority' ||\r\n              key === 'departmentId' ||\r\n              key === 'fecName' ||\r\n              key === 'flag' ||\r\n              key === 'caseStage' ||\r\n              key === 'slaOverdue'\r\n            ) {\r\n              keyValue = {\r\n                [key]: params.filters?.[key]\r\n                  ? params.filters[key].map((a) => (isInteger(a.id) ? (isNaN(parseInt(a.id)) ? a.id : parseInt(a.id)) : a.id))\r\n                  : [],\r\n              };\r\n            } else {\r\n              keyValue = {\r\n                [key]: params.filters?.[key] ? params.filters[key].map((a) => a.name) : [],\r\n              };\r\n            }\r\n            merge(dataFiltersObj, keyValue, (a, b) => {\r\n              return utils.generic.isValidArray(a, true) ? a.concat(b) : undefined;\r\n            });\r\n          }\r\n        }\r\n        if (typeof val === 'string') {\r\n          if (val) {\r\n            if (params.filters.hasOwnProperty(key)) {\r\n              const keyValueString = { [key]: params.filters?.[key] ? params.filters[key] : '' };\r\n              merge(dataFiltersObj, keyValueString, (a, b) => {\r\n                return a ? a.concat(b) : undefined;\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n      if (utils.generic.isValidObject(dataFiltersObj)) {\r\n        handlers.tableFilterApply(dataFiltersObj);\r\n        if (isMultiSelect) {\r\n          setIsMultiSelect(false);\r\n          toggleColumn(columnsArray?.find((e) => e.id === 'select') || null);\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const [openPopover, setOpenPopover] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const toggleOpenPopover = (event) => {\r\n    setOpenPopover(!openPopover);\r\n    setAnchorEl(event?.currentTarget);\r\n    setIsSearch('caseId');\r\n  };\r\n  const searchOptions = [\r\n    { id: 'riskReference', name: utils.string.t('premiumProcessing.search.policyNo') },\r\n    { id: 'insured', name: utils.string.t('premiumProcessing.search.insuredCoverholder') },\r\n    { id: 'caseId', name: utils.string.t('premiumProcessing.search.caseId') },\r\n    { id: 'searchInceptionDate', name: utils.string.t('premiumProcessing.search.inceptionDate') },\r\n    { id: 'workPackageReferance', name: utils.string.t('premiumProcessing.search.workPackageReference') },\r\n  ];\r\n  const searchField = [\r\n    {\r\n      id: 'searchDropdown',\r\n      name: 'searchDropdown',\r\n      type: 'select',\r\n      defaultValue: searchValue || '',\r\n      options: searchOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n    },\r\n    {\r\n      id: 'searchText',\r\n      name: 'textValue',\r\n      defaultValue: '',\r\n      type: 'text',\r\n      placeholder: 'Search',\r\n      icon: SearchIcon,\r\n      value: '',\r\n    },\r\n    {\r\n      name: 'caseId',\r\n      type: 'number',\r\n      value: '',\r\n      placeholder: 'Search',\r\n      defaultValue: null,\r\n      validation: Yup.number()\r\n        .nullable()\r\n        .min(0)\r\n        .transform(function (value, originalvalue) {\r\n          return this.isType(value) ? (Number.isNaN(value) ? null : value) : null;\r\n        }),\r\n    },\r\n    {\r\n      name: 'searchInceptionDate',\r\n      type: 'datepicker',\r\n      value: '',\r\n      outputFormat: '',\r\n      placeholder: utils.string.t('app.selectDate'),\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleChangeDropDown = (event, name) => {\r\n    if (name) {\r\n      setIsSearch(name);\r\n    } else {\r\n      setIsSearch('caseId');\r\n    }\r\n  };\r\n\r\n  const getAssignedToUsersDetails = () => {\r\n    dispatch(getAssignedToUsersList());\r\n  };\r\n\r\n  return (\r\n    <Box data-testid=\"premium-processing-search-table\">\r\n      <Box my={2}>\r\n        <Box className={classes.searchBox}>\r\n          <Button\r\n            icon={SearchIcon}\r\n            iconPosition=\"right\"\r\n            size=\"xsmall\"\r\n            light\r\n            aria-owns={openPopover ? `search-popover` : null}\r\n            aria-haspopup=\"true\"\r\n            onClick={toggleOpenPopover}\r\n          />\r\n          <Popover\r\n            id={`search-popover-modal`}\r\n            open={Boolean(openPopover)}\r\n            anchorEl={anchorEl}\r\n            onClose={toggleOpenPopover}\r\n            classes={{ paper: classes.searchPopoverFrame }}\r\n            anchorOrigin={{\r\n              vertical: 'center',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'center',\r\n              horizontal: 'right',\r\n            }}\r\n          >\r\n            <FormGrid container nestedClasses={{ root: classes.searchContainer }}>\r\n              <Box pr={1} width={'40%'} flex={0.4}>\r\n                <FormSelect {...utils.form.getFieldProps(searchField, 'searchDropdown', control)} handleUpdate={handleChangeDropDown} />\r\n              </Box>\r\n              <Box pr={1} flex={0.4}>\r\n                {searchValue === 'caseId' && (\r\n                  <FormText\r\n                    {...utils.form.getFieldProps(searchField, 'caseId', control)}\r\n                    omitThousandSeparator\r\n                    placeholder={utils.string.t('app.search')}\r\n                    muiComponentProps={{\r\n                      InputProps: {\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\" classes={{ root: classes.adornmentStart }}>\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        ),\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n                {searchValue === 'searchInceptionDate' && (\r\n                  <FormDate {...utils.form.getFieldProps(searchField, 'searchInceptionDate', control)} />\r\n                )}\r\n                {(searchValue === 'riskReference' || searchValue === 'insured' || searchValue === 'workPackageReferance') && (\r\n                  <FormText\r\n                    {...utils.form.getFieldProps(searchField, 'textValue', control)}\r\n                    placeholder={utils.string.t('app.search')}\r\n                    muiComponentProps={{\r\n                      InputProps: {\r\n                        maxLength: 50,\r\n                        startAdornment: (\r\n                          <InputAdornment position=\"start\" classes={{ root: classes.adornmentStart }}>\r\n                            <SearchIcon />\r\n                          </InputAdornment>\r\n                        ),\r\n                      },\r\n                    }}\r\n                  />\r\n                )}\r\n              </Box>\r\n              <Box flex={0.1} justifyContent=\"flex-end\" direction=\"row\" alignItems=\"center\" display=\"flex\">\r\n                <Button\r\n                  text={utils.string.t('app.go')}\r\n                  type=\"submit\"\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  disabled={formState.isSubmitting || !formState.isDirty || isDisable}\r\n                  data-testid={`popover-submit-button`}\r\n                  onClick={(e) => searchData(e)}\r\n                />\r\n              </Box>\r\n            </FormGrid>\r\n          </Popover>\r\n        </Box>\r\n        <TableToolbar nestedClasses={{ root: classes.tableToolbar }}>\r\n          {isValidCheckSigining && (\r\n            <Box>\r\n              <Typography variant=\"body2\">{utils.string.t('premiumProcessing.checkSigning')}</Typography>\r\n            </Box>\r\n          )}\r\n          {isValidCheckSigining && (\r\n            <Box className={classes.switchControl}>\r\n              <FormSwitch\r\n                {...utils.form.getFieldProps(defaultFormFields, 'workInprogress')}\r\n                name={'workInprogress'}\r\n                control={control}\r\n                register={register}\r\n              />\r\n            </Box>\r\n          )}\r\n          <TableFilters\r\n            search={false}\r\n            filtersArray={tableFilterFields}\r\n            columns\r\n            columnsArray={columnsArray.filter((item) => item.id !== 'select' && item.id !== 'flag')}\r\n            handlers={{\r\n              onSearch: (values) => {},\r\n              onFilter: (values) => {\r\n                filterData(values, 'filters');\r\n              },\r\n              onResetFilter: resetCaseFilters,\r\n              onToggleColumn: toggelFlexiColumns,\r\n              onFilterExpand: (value) => {\r\n                loadFiltersData(value);\r\n              },\r\n            }}\r\n          />\r\n        </TableToolbar>\r\n        <Overflow>\r\n          {cases && (\r\n            <TableContainer>\r\n              {isTableHidden || flagColumn === 'DISABLE' ? (\r\n                <Box p={5}>\r\n                  <Warning type=\"info\" align=\"center\" text={utils.string.t('premiumProcessing.flexiColumnMessage')} size=\"large\" icon />\r\n                </Box>\r\n              ) : (\r\n                <Table className={classes.table} size=\"small\">\r\n                  {columnsArray && <TableHead columns={cols} sorting={sort} />}\r\n                  <TableBody data-testid=\"cases-list\">\r\n                    {cases.map((caseRowValues) => {\r\n                      const checked =\r\n                        utils.generic.isValidArray(multiSelectedCasesList, true) &&\r\n                        Boolean(multiSelectedCasesList.find((item) => item?.id == caseRowValues?.id)); // eslint-disable-line eqeqeq\r\n\r\n                      return (\r\n                        <TableRow\r\n                          key={`${caseRowValues.caseId}-${caseRowValues.taskId}`}\r\n                          data-testid={`case-row-${caseRowValues.id}`}\r\n                          className={classnames({\r\n                            [classes.row]: true,\r\n                            [classes.rowSelected]:\r\n                              utils.generic.isValidArray(selectedCases, true) && selectedCases[0]?.caseId == caseRowValues.caseId, // eslint-disable-line eqeqeq\r\n                          })}\r\n                        >\r\n                          <TableCell\r\n                            {...columnProps(utils.string.t('premiumProcessing.columns.select'))}\r\n                            data-testid={`select-case-checkbox-${caseRowValues.id}`}\r\n                            className={classes.cellCheckbox}\r\n                          >\r\n                            <Checkbox\r\n                              name={`case-checkbox-row-${caseRowValues.id}`}\r\n                              type=\"checkbox\"\r\n                              value={checked}\r\n                              checked={checked}\r\n                              color=\"primary\"\r\n                              onChange={(event) => rowCheckboxClick(caseRowValues, event)}\r\n                            />\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('flag')}\r\n                            data-testid={`flag-${caseRowValues.id}`}\r\n                            className={classes.flagDirection}\r\n                          >\r\n                            <>\r\n                              {utils.generic.isValidArray(caseRowValues.flag, true) &&\r\n                                caseRowValues.flag.map((flagType) => {\r\n                                  return (\r\n                                    <span className={classes.flags} key={flagType}>\r\n                                      {flagType === constants.RFI && (\r\n                                        <Tooltip title={utils.string.t('premiumProcessing.flagTooltip.rfiFlag')} placement=\"bottom\">\r\n                                          <Avatar variant=\"rounded\" className={classes.rfiFlag} size={10}>\r\n                                            <Translate label={utils.string.t('premiumProcessing.columns.rfiFlag')} />\r\n                                          </Avatar>\r\n                                        </Tooltip>\r\n                                      )}\r\n                                      {flagType === constants.QC_FLAG && (\r\n                                        <Tooltip title={utils.string.t('premiumProcessing.flagTooltip.qcFlag')} placement=\"bottom\">\r\n                                          <Avatar variant=\"rounded\" className={classes.qcFlag} size={10}>\r\n                                            <Translate label={utils.string.t('premiumProcessing.columns.qcFlag')} />\r\n                                          </Avatar>\r\n                                        </Tooltip>\r\n                                      )}\r\n                                      {flagType === constants.RP_FLAG && (\r\n                                        <Tooltip title={utils.string.t('premiumProcessing.flagTooltip.rpFlag')} placement=\"bottom\">\r\n                                          <Avatar variant=\"rounded\" className={classes.rpFlag} size={10}>\r\n                                            <Translate label={utils.string.t('premiumProcessing.columns.rpFlag')} />\r\n                                          </Avatar>\r\n                                        </Tooltip>\r\n                                      )}\r\n\r\n                                      {flagType === constants.RESUBMITTED_FLAG && (\r\n                                        <Tooltip title={utils.string.t('premiumProcessing.flagTooltip.rsFlag')} placement=\"bottom\">\r\n                                          <Avatar variant=\"rounded\" className={classes.rsFlag} size={10}>\r\n                                            <Translate label={utils.string.t('premiumProcessing.columns.rsFlag')} />\r\n                                          </Avatar>\r\n                                        </Tooltip>\r\n                                      )}\r\n\r\n                                      {flagType === constants.REJECTCLOSE_FLAG && (\r\n                                        <Tooltip title={utils.string.t('premiumProcessing.flagTooltip.rcFlag')} placement=\"bottom\">\r\n                                          <Avatar variant=\"rounded\" className={classes.rsFlag} size={10}>\r\n                                            <Translate label={utils.string.t('premiumProcessing.columns.rcFlag')} />\r\n                                          </Avatar>\r\n                                        </Tooltip>\r\n                                      )}\r\n                                    </span>\r\n                                  );\r\n                                })}\r\n                            </>\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            data-testid={`case-${caseRowValues.id}`}\r\n                            {...columnProps('department')}\r\n                          >\r\n                            <span className={classes.relativeBox}>{caseRowValues.department}</span>\r\n                          </TableCell>\r\n\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            data-testid={`date-${caseRowValues.id}`}\r\n                            {...columnProps('caseCreatedOn')}\r\n                          >\r\n                            <Box>{caseRowValues.caseCreatedOn}</Box>\r\n                            <Box>\r\n                              <Typography\r\n                                variant=\"body2\"\r\n                                noWrap\r\n                                className={!caseRowValues.slaFlag ? classes.subText : classes.subTextError}\r\n                              >\r\n                                {caseRowValues.slaDaysPending}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            data-testid={`policy-number-${caseRowValues.id}`}\r\n                            {...columnProps('policyRef')}\r\n                          >\r\n                            <Box>{caseRowValues.policyRef}</Box>\r\n                            <Box>\r\n                              <Typography variant=\"body2\" noWrap className={classes.subText}>\r\n                                {caseRowValues.insuredOrCoverHolder}\r\n                              </Typography>\r\n                            </Box>\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            data-testid={`insured-${caseRowValues.id}`}\r\n                            {...columnProps('processName')}\r\n                          >\r\n                            {caseRowValues.processName}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('priority')}\r\n                          >\r\n                            {caseRowValues.priority && (\r\n                              <Status\r\n                                size=\"sm\"\r\n                                text={\r\n                                  <Translate\r\n                                    label={\r\n                                      utils.string.replaceLowerCase(caseRowValues.priority) === 'yes'\r\n                                        ? utils.string.t('app.high')\r\n                                        : utils.string.t('app.medium')\r\n                                    }\r\n                                  />\r\n                                }\r\n                                status={\r\n                                  utils.string.replaceLowerCase(caseRowValues.priority) === 'yes'\r\n                                    ? 'error'\r\n                                    : utils.string.replaceLowerCase(caseRowValues.priority) === 'no'\r\n                                    ? 'alert'\r\n                                    : 'success'\r\n                                }\r\n                              />\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell {...columnProps('assignedToUser')} data-testid={`assigned-to-${caseRowValues.id}`}>\r\n                            {tabSelectionView === constants.WORKBASKET &&\r\n                            !utils.user.isAdminUser(utils.generic.isValidArray(userRoleDetails, true) && userRoleDetails[0]) ? (\r\n                              <Box className={classes.assignedToAlignment} title={caseRowValues.assignedToUser?.id}>\r\n                                <SelectPopover\r\n                                  id={`select-popover-${caseRowValues.id}`}\r\n                                  buttonText={\r\n                                    caseRowValues.assignedToUser?.name ? utils.string.t('app.reAssing') : utils.string.t('app.assign')\r\n                                  }\r\n                                  showButtonTextOnly={false}\r\n                                  text={caseRowValues.assignedToUser?.name || utils.string.t('premiumProcessing.unAssigned')}\r\n                                  toolTip={caseRowValues.assignedToUser?.id}\r\n                                  displaySelectedText={caseRowValues.assignedToUser}\r\n                                  buttonVariant={'text'}\r\n                                  buttonDisabled={multiSelectedCasesList.length > 0 ? true : false}\r\n                                  value={caseRowValues.assignedToUser}\r\n                                  handlers={{\r\n                                    onTogglePopOver: (data) => {\r\n                                      if (data) {\r\n                                        if (!isAssignedToUserList) {\r\n                                          getAssignedToUsersDetails();\r\n                                        }\r\n                                      }\r\n                                    },\r\n                                    onToggleOption: (values) => {\r\n                                      if (\r\n                                        assignedToSelected &&\r\n                                        assignedToSelected.name &&\r\n                                        assignedToSelected.id &&\r\n                                        assignedToSelected.emailId\r\n                                      ) {\r\n                                        if (caseRowValues.id === assignedToSelected.caseRowId) {\r\n                                          handlers.assignedUsersToCase(\r\n                                            {\r\n                                              name: assignedToSelected.name,\r\n                                              emailId: assignedToSelected.emailId,\r\n                                              id: assignedToSelected.id,\r\n                                            },\r\n                                            [caseRowValues],\r\n                                            false\r\n                                          );\r\n                                          setAssignedToSelected(null);\r\n                                        } else {\r\n                                          dispatch(enqueueNotification(utils.string.t('premiumProcessing.validUserSelection'), 'warning'));\r\n                                        }\r\n                                      } else {\r\n                                        dispatch(enqueueNotification(utils.string.t('premiumProcessing.validUserSelection'), 'warning'));\r\n                                      }\r\n                                    },\r\n                                  }}\r\n                                >\r\n                                  <SingleSelect\r\n                                    search\r\n                                    value={caseRowValues.assignedToUser}\r\n                                    placeholder={'search users'}\r\n                                    options={assingnedToDropdownList}\r\n                                    handlers={{\r\n                                      onToggleOption: (item) => {\r\n                                        setAssignedToSelected(null);\r\n                                        if (item) {\r\n                                          setAssignedToSelected({\r\n                                            name: item.name,\r\n                                            emailId: item.id,\r\n                                            id: item.id,\r\n                                            caseRowId: caseRowValues.id,\r\n                                          });\r\n                                        }\r\n                                      },\r\n                                    }}\r\n                                  />\r\n                                </SelectPopover>\r\n                              </Box>\r\n                            ) : (\r\n                              <Tooltip title={caseRowValues.assignedToUser?.id} placement={'top'} arrow={true}>\r\n                                <Box\r\n                                  onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                                  onClick={() => tableRowClick(caseRowValues)}\r\n                                >\r\n                                  {caseRowValues.assignedToUser?.name || utils.string.t('premiumProcessing.unAssigned')}\r\n                                </Box>\r\n                              </Tooltip>\r\n                            )}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('caseId')}\r\n                          >\r\n                            {caseRowValues.caseId}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('inceptionDate')}\r\n                          >\r\n                            {caseRowValues.inceptionDate}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('fecName')}\r\n                          >\r\n                            {caseRowValues.fecName}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('bordereauType')}\r\n                          >\r\n                            {caseRowValues.bordereauType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('facilityType')}\r\n                          >\r\n                            {caseRowValues.facilityType}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('caseStage')}\r\n                          >\r\n                            {caseRowValues.caseStage}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('nonPremium')}\r\n                          >\r\n                            {caseRowValues.nonPremium}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('feeAmendments')}\r\n                          >\r\n                            {caseRowValues.feeAmendments}\r\n                          </TableCell>\r\n                          <TableCell\r\n                            onDoubleClick={() => handleDoubleClickRow(caseRowValues.taskId || caseRowValues.bpmProcessId)}\r\n                            onClick={() => tableRowClick(caseRowValues)}\r\n                            {...columnProps('workPackageReference')}\r\n                          >\r\n                            {caseRowValues.workPackageReference}\r\n                          </TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              )}\r\n              {!isTableHidden && cases.length === 0 && (\r\n                <Box p={5}>\r\n                  <Warning type=\"info\" align=\"center\" text={utils.string.t('premiumProcessing.noResultsMessage')} size=\"large\" icon />\r\n                </Box>\r\n              )}\r\n            </TableContainer>\r\n          )}\r\n        </Overflow>\r\n      </Box>\r\n      <Grid container>\r\n        <Box marginTop=\"5px\">\r\n          <Typography variant=\"body2\">{utils.string.t('premiumProcessing.multiSelect')}</Typography>\r\n        </Box>\r\n        <Box className={classnames(classes.switchControl, classes.noLeftMargin)}>\r\n          <Switch\r\n            checked={isMultiSelect}\r\n            disabled={isTableHidden || cases.length === 0 || tabSelectionView !== constants.WORKBASKET || disableMultiSelect}\r\n            onChange={(event) => showCheckboxesClick(event)}\r\n          />\r\n        </Box>\r\n        <Box>\r\n          {assingnedToDropdownList && (\r\n            <SelectPopover\r\n              id=\"multi-select-popover\"\r\n              buttonDisabled={\r\n                isMultiSelect\r\n                  ? !isTableHidden && cases.length > 0 && multiSelectedCasesList.length >= 1 && tabSelectionView === constants.WORKBASKET\r\n                    ? false\r\n                    : true\r\n                  : true\r\n              }\r\n              className={classes.bulkAssignPopover}\r\n              buttonText={utils.string.t('app.assign')}\r\n              text={utils.string.t('premiumProcessing.bulkAssignment')}\r\n              value={selectedValueBulkAssign}\r\n              buttonVariant={'outlined'}\r\n              displaySelectedText={selectedValueBulkAssign}\r\n              showButtonTextOnly={true}\r\n              handlers={{\r\n                onTogglePopOver: (data) => {\r\n                  if (data) {\r\n                    if (!isAssignedToUserList) {\r\n                      getAssignedToUsersDetails();\r\n                    }\r\n                  }\r\n                },\r\n                onToggleOption: (values) => {\r\n                  setSelectedValueBulkAssign(values);\r\n                  if (multiSelectedCasesList.length === 0) {\r\n                    dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseNotSelected'), 'warning'));\r\n                  } else {\r\n                    if (multiSelectedCasesList.length > 10) {\r\n                      dispatch(enqueueNotification(utils.string.t('premiumProcessing.caseSelectionWarningMessage'), 'warning'));\r\n                      return;\r\n                    } else {\r\n                      handlers.assignedUsersToCase(values, multiSelectedCasesList, true);\r\n                      setIsBulkSelectClear(true);\r\n                      setSelectedValueBulkAssign(null);\r\n                      if (isMultiSelect && multiSelectedCasesList.length > 0) {\r\n                        const selectColumn = columnsArray?.find((e) => e.id === 'select');\r\n                        selectColumn?.label?.props?.children?.props?.control?.setValue('singlevalue', false);\r\n                      }\r\n                    }\r\n                  }\r\n                },\r\n              }}\r\n            >\r\n              <SingleSelect\r\n                search\r\n                placeholder={'search users'}\r\n                options={assingnedToDropdownList}\r\n                value={selectedValueBulkAssign}\r\n                handlers={{\r\n                  onToggleOption: (item) => {\r\n                    setSelectedValueBulkAssign(item);\r\n                  },\r\n                }}\r\n              />\r\n            </SelectPopover>\r\n          )}\r\n        </Box>\r\n        <Box className={classes.pageRow}>\r\n          <Pagination\r\n            page={get(paginationObj, 'obj.page')}\r\n            count={get(paginationObj, 'obj.rowsTotal')}\r\n            rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n            onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n            onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}