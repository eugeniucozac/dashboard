{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTab.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ClaimsTab.styles';\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormSelect } from 'components';\nimport { ClaimsTabTable } from './ClaimsTabTable';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabView.propTypes = {\n  claims: PropTypes.array.isRequired,\n  sort: PropTypes.func.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  viewFields: PropTypes.array.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  resetKey: PropTypes.number,\n  control: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchFilter: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    toggleColumn: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    onSelectSearchBy: PropTypes.func.isRequired\n  }).isRequired,\n  searchTerm: PropTypes.string,\n  isSearchByNull: PropTypes.bool\n};\nexport default function ClaimsTabView(_ref) {\n  var claims = _ref.claims,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      viewFields = _ref.viewFields,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      resetKey = _ref.resetKey,\n      control = _ref.control,\n      handlers = _ref.handlers,\n      searchTerm = _ref.searchTerm,\n      isSearchByNull = _ref.isSearchByNull;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTab'\n  })();\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"claims-tab\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        nestedClasses: {\n          root: classes.radioContainer\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          alignItems: \"center\",\n          children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n            label: \"\".concat(utils.string.t('app.view'), \": \"),\n            align: \"left\",\n            nestedClasses: {\n              root: classes.viewLabel\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'views')), {}, {\n            control: control\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchBy: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.filterBox,\n          children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'searchBy')), {}, {\n            control: control,\n            nestedClasses: {\n              root: classes.selectAutocomplete\n            },\n            handleUpdate: function handleUpdate(name, value) {\n              handlers.onSelectSearchBy(value);\n            }\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this),\n        isSearchByNull: isSearchByNull,\n        searchMinChars: 4,\n        searchPlaceholder: utils.string.t('claims.processing.searchPlaceHolder'),\n        searchTerm: searchTerm || '',\n        filtersArray: tableFilterFields,\n        isFetchingFilters: isFetchingFilters,\n        clearFilterKey: resetKey,\n        nestedClasses: {\n          root: classes.filtersContainer,\n          searchBox: classes.searchBox\n        },\n        handlers: {\n          onSearch: handlers.search,\n          onResetFilter: handlers.resetFilter,\n          onFilter: handlers.searchFilter,\n          onToggleColumn: handlers.toggleColumn,\n          onResetSearch: handlers.resetSearch\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimsTabTable, {\n      claims: claims,\n      cols: columnsArray,\n      columnProps: columnProps,\n      sort: sort,\n      handlers: {\n        changePage: handlers.changePage,\n        changeRowsPerPage: handlers.changeRowsPerPage,\n        sort: handlers.sort\n      },\n      viewFields: viewFields,\n      control: control\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTab.view.js"],"names":["React","PropTypes","styles","TableActions","TableFilters","TableToolbar","FormRadio","FormLabel","FormSelect","ClaimsTabTable","utils","makeStyles","Box","ClaimsTabView","propTypes","claims","array","isRequired","sort","func","columnsArray","columnProps","viewFields","tableFilterFields","isFetchingFilters","bool","resetKey","number","control","object","handlers","shape","search","searchFilter","resetFilter","changePage","changeRowsPerPage","toggleColumn","resetSearch","onSelectSearchBy","searchTerm","string","isSearchByNull","classes","name","root","radioContainer","t","viewLabel","form","getFieldProps","filterBox","selectAutocomplete","value","filtersContainer","searchBox","onSearch","onResetFilter","onFilter","onToggleColumn","onResetSearch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ClaimsTab.styles';\r\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormSelect } from 'components';\r\nimport { ClaimsTabTable } from './ClaimsTabTable';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nClaimsTabView.propTypes = {\r\n  claims: PropTypes.array.isRequired,\r\n  sort: PropTypes.func.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  viewFields: PropTypes.array.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  resetKey: PropTypes.number,\r\n  control: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    searchFilter: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    onSelectSearchBy: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  searchTerm: PropTypes.string,\r\n  isSearchByNull: PropTypes.bool,\r\n};\r\n\r\nexport default function ClaimsTabView({\r\n  claims,\r\n  sort,\r\n  columnsArray,\r\n  columnProps,\r\n  viewFields,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  resetKey,\r\n  control,\r\n  handlers,\r\n  searchTerm,\r\n  isSearchByNull,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTab' })();\r\n\r\n  return (\r\n    <Box mt={3} data-testid=\"claims-tab\">\r\n      <TableToolbar>\r\n        <TableActions nestedClasses={{ root: classes.radioContainer }}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <FormLabel label={`${utils.string.t('app.view')}: `} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n            <FormRadio {...utils.form.getFieldProps(viewFields, 'views')} control={control} />\r\n          </Box>\r\n        </TableActions>\r\n        <TableFilters\r\n          search\r\n          searchBy={\r\n            <Box className={classes.filterBox}>\r\n              <FormSelect\r\n                {...utils.form.getFieldProps(viewFields, 'searchBy')}\r\n                control={control}\r\n                nestedClasses={{ root: classes.selectAutocomplete }}\r\n                handleUpdate={(name, value) => {\r\n                  handlers.onSelectSearchBy(value);\r\n                }}\r\n              />\r\n            </Box>\r\n          }\r\n          isSearchByNull={isSearchByNull}\r\n          searchMinChars={4}\r\n          searchPlaceholder={utils.string.t('claims.processing.searchPlaceHolder')}\r\n          searchTerm={searchTerm || ''}\r\n          filtersArray={tableFilterFields}\r\n          isFetchingFilters={isFetchingFilters}\r\n          clearFilterKey={resetKey}\r\n          nestedClasses={{\r\n            root: classes.filtersContainer,\r\n            searchBox: classes.searchBox,\r\n          }}\r\n          handlers={{\r\n            onSearch: handlers.search,\r\n            onResetFilter: handlers.resetFilter,\r\n            onFilter: handlers.searchFilter,\r\n            onToggleColumn: handlers.toggleColumn,\r\n            onResetSearch: handlers.resetSearch,\r\n          }}\r\n        />\r\n      </TableToolbar>\r\n\r\n      <ClaimsTabTable\r\n        claims={claims}\r\n        cols={columnsArray}\r\n        columnProps={columnProps}\r\n        sort={sort}\r\n        handlers={{\r\n          changePage: handlers.changePage,\r\n          changeRowsPerPage: handlers.changeRowsPerPage,\r\n          sort: handlers.sort,\r\n        }}\r\n        viewFields={viewFields}\r\n        control={control}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}