{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof\";\nimport toNumber from 'lodash/toNumber'; // app\n\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal, uploadDocument } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nexport var createModellingTask = function createModellingTask(payload) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/modelling.actions.post',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postModellingRequest(payload));\n    dispatch(addLoader('createModelling'));\n\n    if (!payload || _typeof(payload) !== 'object') {\n      dispatch(postModellingFailure(defaultError));\n      dispatch(enqueueNotification('notification.modelling.postFail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('createModelling'));\n      return;\n    }\n\n    var insured = Array.isArray(payload.insured) ? payload.insured[0] : payload.insured;\n    var provisionalInsured = (insured === null || insured === void 0 ? void 0 : insured.__isNew__) ? {\n      name: insured === null || insured === void 0 ? void 0 : insured.id\n    } : null;\n    var transformedPayload = {\n      dueDate: payload.dueDate,\n      notes: payload.notes,\n      status: 'PENDING',\n      insured: (insured === null || insured === void 0 ? void 0 : insured.__isNew__) ? null : {\n        id: _typeof(insured) === 'object' ? insured === null || insured === void 0 ? void 0 : insured.id : toNumber(insured)\n      },\n      provisionalInsured: provisionalInsured,\n      type: payload.modellingType,\n      modellingAttachmentTypes: payload.modellingAttachmentTypes\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/modelling',\n      data: transformedPayload\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postModellingSuccess(data));\n      var documentObject = {\n        folder: constants.FOLDER_MODELLING,\n        file: payload.file\n      };\n\n      if (payload.file && payload.file.length > 0) {\n        return dispatch(uploadDocument({\n          data: documentObject,\n          documentType: constants.FOLDER_MODELLING,\n          documentTypeId: data === null || data === void 0 ? void 0 : data.id\n        }));\n      }\n    }).then(function () {\n      dispatch(enqueueNotification('notification.modelling.postSuccess', 'success'));\n      dispatch(hideModal());\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (modelling)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postModellingFailure(err));\n      dispatch(enqueueNotification('notification.modelling.postFail', 'error'));\n      dispatch(hideModal());\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('createModelling'));\n    });\n  };\n};\nexport var postModellingRequest = function postModellingRequest(payload) {\n  return {\n    type: 'MODELLING_POST_REQUEST',\n    payload: payload\n  };\n};\nexport var postModellingSuccess = function postModellingSuccess(payload) {\n  return {\n    type: 'MODELLING_POST_SUCCESS',\n    payload: payload\n  };\n};\nexport var postModellingFailure = function postModellingFailure(error) {\n  return {\n    type: 'MODELLING_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/modelling/modelling.actions.post.js"],"names":["toNumber","authLogout","enqueueNotification","addLoader","removeLoader","hideModal","uploadDocument","utils","constants","createModellingTask","payload","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postModellingRequest","postModellingFailure","insured","Array","isArray","provisionalInsured","__isNew__","name","id","transformedPayload","dueDate","notes","status","type","modellingType","modellingAttachmentTypes","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","postModellingSuccess","documentObject","folder","FOLDER_MODELLING","length","documentType","documentTypeId","err","errorParams","handleError","handleUnauthorized","error"],"mappings":"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","sourcesContent":["import toNumber from 'lodash/toNumber';\r\n// app\r\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal, uploadDocument } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport const createModellingTask = (payload) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/modelling.actions.post',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postModellingRequest(payload));\r\n  dispatch(addLoader('createModelling'));\r\n\r\n  if (!payload || typeof payload !== 'object') {\r\n    dispatch(postModellingFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.modelling.postFail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('createModelling'));\r\n    return;\r\n  }\r\n\r\n  const insured = Array.isArray(payload.insured) ? payload.insured[0] : payload.insured;\r\n  const provisionalInsured = insured?.__isNew__ ? { name: insured?.id } : null;\r\n  const transformedPayload = {\r\n    dueDate: payload.dueDate,\r\n    notes: payload.notes,\r\n    status: 'PENDING',\r\n    insured: insured?.__isNew__\r\n      ? null\r\n      : {\r\n          id: typeof insured === 'object' ? insured?.id : toNumber(insured),\r\n        },\r\n    provisionalInsured: provisionalInsured,\r\n    type: payload.modellingType,\r\n    modellingAttachmentTypes: payload.modellingAttachmentTypes,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/modelling',\r\n      data: transformedPayload,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postModellingSuccess(data));\r\n      const documentObject = {\r\n        folder: constants.FOLDER_MODELLING,\r\n        file: payload.file,\r\n      };\r\n      if (payload.file && payload.file.length > 0) {\r\n        return dispatch(\r\n          uploadDocument({\r\n            data: documentObject,\r\n            documentType: constants.FOLDER_MODELLING,\r\n            documentTypeId: data?.id,\r\n          })\r\n        );\r\n      }\r\n    })\r\n    .then(() => {\r\n      dispatch(enqueueNotification('notification.modelling.postSuccess', 'success'));\r\n      dispatch(hideModal());\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (modelling)',\r\n      };\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postModellingFailure(err));\r\n      dispatch(enqueueNotification('notification.modelling.postFail', 'error'));\r\n      dispatch(hideModal());\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('createModelling'));\r\n    });\r\n};\r\n\r\nexport const postModellingRequest = (payload) => {\r\n  return {\r\n    type: 'MODELLING_POST_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postModellingSuccess = (payload) => {\r\n  return {\r\n    type: 'MODELLING_POST_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postModellingFailure = (error) => {\r\n  return {\r\n    type: 'MODELLING_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}