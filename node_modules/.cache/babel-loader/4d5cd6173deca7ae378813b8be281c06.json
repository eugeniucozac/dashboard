{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\CreateAdhocUploadDocuments\\\\CreateAdhocUploadDocuments.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport styles from './CreateAdhocUploadDocuments.style';\nimport { CreateAdhocTaskFooter, ClaimsUploadViewSearchDocs } from 'modules';\nimport { selectAdhocTaskData, setDmsTaskContextType, resetDmsTaskTypeContext, setAdhocTaskDocuments, selectorDmsViewFiles, selectAdhocTaskDocuments } from 'stores'; //mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nfunction CreateAdhocUploadDocumentsView(props) {\n  _s();\n\n  var classes = makeStyles(styles, {\n    name: 'CreateAdhocUploadDocuments'\n  })();\n  var dispatch = useDispatch();\n  var taskDetails = useSelector(selectAdhocTaskData);\n\n  var refData = _objectSpread({\n    taskId: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id\n  }, taskDetails);\n\n  var viewDmsDocuments = useSelector(selectorDmsViewFiles);\n  var adhocDocuments = useSelector(selectAdhocTaskDocuments);\n  useEffect(function () {\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\n      dispatch(setAdhocTaskDocuments(viewDmsDocuments));\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [viewDmsDocuments]);\n  useEffect(function () {\n    if (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id) {\n      dispatch(setDmsTaskContextType({\n        type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC,\n        refId: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id\n      }));\n    }\n\n    return function () {\n      dispatch(resetDmsTaskTypeContext());\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [taskDetails]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      flex: \"1 1 auto\",\n      className: classes.container,\n      children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n        refData: refData,\n        refIdName: constants.DMS_CONTEXT_TASK_ID,\n        dmsContext: constants.DMS_CONTEXT_TASK,\n        documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n        viewOptions: {\n          link: true\n        },\n        docList: !utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? adhocDocuments : []\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(CreateAdhocTaskFooter, {\n        handleNext: props === null || props === void 0 ? void 0 : props.handleNext,\n        handleCancel: props === null || props === void 0 ? void 0 : props.handleCancel,\n        handleBack: props === null || props === void 0 ? void 0 : props.handleBack,\n        activeStep: props === null || props === void 0 ? void 0 : props.activeStep\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 51,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAdhocUploadDocumentsView, \"XC8yR7+U5Ly4BV5Q5JpE0Cqjr+8=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = CreateAdhocUploadDocumentsView;\nexport default CreateAdhocUploadDocumentsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdhocUploadDocumentsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/CreateAdhocUploadDocuments/CreateAdhocUploadDocuments.view.js"],"names":["React","useEffect","useDispatch","useSelector","constants","utils","styles","CreateAdhocTaskFooter","ClaimsUploadViewSearchDocs","selectAdhocTaskData","setDmsTaskContextType","resetDmsTaskTypeContext","setAdhocTaskDocuments","selectorDmsViewFiles","selectAdhocTaskDocuments","makeStyles","Box","CreateAdhocUploadDocumentsView","props","classes","name","dispatch","taskDetails","refData","taskId","id","viewDmsDocuments","adhocDocuments","generic","isInvalidOrEmptyArray","type","DMS_TASK_CONTEXT_TYPE_ADHOC","refId","container","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","link","handleNext","handleCancel","handleBack","activeStep"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,oCAAnB;AACA,SAASC,qBAAT,EAAgCC,0BAAhC,QAAkE,SAAlE;AACA,SACEC,mBADF,EAEEC,qBAFF,EAGEC,uBAHF,EAIEC,qBAJF,EAKEC,oBALF,EAMEC,wBANF,QAOO,QAPP,C,CASA;;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,mBAAhC;;;AAEA,SAASC,8BAAT,CAAwCC,KAAxC,EAA+C;AAAA;;AAC7C,MAAMC,OAAO,GAAGJ,UAAU,CAACT,MAAD,EAAS;AAAEc,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AACA,MAAMC,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,WAAW,GAAGnB,WAAW,CAACM,mBAAD,CAA/B;;AACA,MAAMc,OAAO;AACXC,IAAAA,MAAM,EAAEF,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEG;AADV,KAERH,WAFQ,CAAb;;AAIA,MAAMI,gBAAgB,GAAGvB,WAAW,CAACU,oBAAD,CAApC;AACA,MAAMc,cAAc,GAAGxB,WAAW,CAACW,wBAAD,CAAlC;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACI,KAAK,CAACuB,OAAN,CAAcC,qBAAd,CAAoCH,gBAApC,CAAL,EAA4D;AAC1DL,MAAAA,QAAQ,CAACT,qBAAqB,CAACc,gBAAD,CAAtB,CAAR;AACD,KAHa,CAId;;AACD,GALQ,EAKN,CAACA,gBAAD,CALM,CAAT;AAOAzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIqB,WAAJ,aAAIA,WAAJ,uBAAIA,WAAW,CAAEG,EAAjB,EAAqB;AACnBJ,MAAAA,QAAQ,CAACX,qBAAqB,CAAC;AAAEoB,QAAAA,IAAI,EAAE1B,SAAS,CAAC2B,2BAAlB;AAA+CC,QAAAA,KAAK,EAAEV,WAAF,aAAEA,WAAF,uBAAEA,WAAW,CAAEG;AAAnE,OAAD,CAAtB,CAAR;AACD;;AAED,WAAO,YAAM;AACXJ,MAAAA,QAAQ,CAACV,uBAAuB,EAAxB,CAAR;AACD,KAFD,CALc,CAQd;AACD,GATQ,EASN,CAACW,WAAD,CATM,CAAT;AAWA,sBACE,QAAC,GAAD;AAAK,IAAA,QAAQ,EAAC,QAAd;AAAuB,IAAA,OAAO,EAAC,MAA/B;AAAsC,IAAA,aAAa,EAAC,QAApD;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAT;AAAY,MAAA,IAAI,EAAC,UAAjB;AAA4B,MAAA,SAAS,EAAEH,OAAO,CAACc,SAA/C;AAAA,6BACE,QAAC,0BAAD;AACE,QAAA,OAAO,EAAEV,OADX;AAEE,QAAA,SAAS,EAAEnB,SAAS,CAAC8B,mBAFvB;AAGE,QAAA,UAAU,EAAE9B,SAAS,CAAC+B,gBAHxB;AAIE,QAAA,eAAe,EAAE/B,SAAS,CAACgC,8BAAV,CAAyCC,KAJ5D;AAKE,QAAA,WAAW,EAAE;AAAEC,UAAAA,IAAI,EAAE;AAAR,SALf;AAME,QAAA,OAAO,EAAE,CAACjC,KAAK,CAACuB,OAAN,CAAcC,qBAAd,CAAoCF,cAApC,CAAD,GAAuDA,cAAvD,GAAwE;AANnF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAWE,QAAC,GAAD;AAAK,MAAA,IAAI,EAAC,UAAV;AAAA,6BACE,QAAC,qBAAD;AACE,QAAA,UAAU,EAAET,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEqB,UADrB;AAEE,QAAA,YAAY,EAAErB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsB,YAFvB;AAGE,QAAA,UAAU,EAAEtB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEuB,UAHrB;AAIE,QAAA,UAAU,EAAEvB,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEwB;AAJrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YAXF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAsBD;;GAnDQzB,8B;UAEUf,W,EACGC,W,EAKKA,W,EACFA,W;;;KAThBc,8B;AAqDT,eAAeA,8BAAf","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport styles from './CreateAdhocUploadDocuments.style';\r\nimport { CreateAdhocTaskFooter, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport {\r\n  selectAdhocTaskData,\r\n  setDmsTaskContextType,\r\n  resetDmsTaskTypeContext,\r\n  setAdhocTaskDocuments,\r\n  selectorDmsViewFiles,\r\n  selectAdhocTaskDocuments,\r\n} from 'stores';\r\n\r\n//mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nfunction CreateAdhocUploadDocumentsView(props) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdhocUploadDocuments' })();\r\n  const dispatch = useDispatch();\r\n  const taskDetails = useSelector(selectAdhocTaskData);\r\n  const refData = {\r\n    taskId: taskDetails?.id,\r\n    ...taskDetails,\r\n  };\r\n  const viewDmsDocuments = useSelector(selectorDmsViewFiles);\r\n  const adhocDocuments = useSelector(selectAdhocTaskDocuments);\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\r\n      dispatch(setAdhocTaskDocuments(viewDmsDocuments));\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [viewDmsDocuments]);\r\n\r\n  useEffect(() => {\r\n    if (taskDetails?.id) {\r\n      dispatch(setDmsTaskContextType({ type: constants.DMS_TASK_CONTEXT_TYPE_ADHOC, refId: taskDetails?.id }));\r\n    }\r\n\r\n    return () => {\r\n      dispatch(resetDmsTaskTypeContext());\r\n    };\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [taskDetails]);\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box mt={2} flex=\"1 1 auto\" className={classes.container}>\r\n        <ClaimsUploadViewSearchDocs\r\n          refData={refData}\r\n          refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n          dmsContext={constants.DMS_CONTEXT_TASK}\r\n          documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n          viewOptions={{ link: true }}\r\n          docList={!utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? adhocDocuments : []}\r\n        />\r\n      </Box>\r\n      <Box flex=\"0 1 auto\">\r\n        <CreateAdhocTaskFooter\r\n          handleNext={props?.handleNext}\r\n          handleCancel={props?.handleCancel}\r\n          handleBack={props?.handleBack}\r\n          activeStep={props?.activeStep}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n\r\nexport default CreateAdhocUploadDocumentsView;\r\n"]},"metadata":{},"sourceType":"module"}