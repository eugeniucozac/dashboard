{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport { addLoader, authLogout, removeLoader, storeProcessingInstruction } from 'stores';\nimport piSchema from '../../schemas/processingInstructions';\nimport * as utils from 'utils';\nimport config from 'config';\nexport var checkListUpdate = function checkListUpdate(values, instruction) {\n  return function (dispatch, getState) {\n    var _instruction$details, _values$clientEmail, _values$contactName, _values$eocInvoiceCon, _values$eocInvoiceMai;\n\n    // prettier-ignore\n    var _getState = getState(),\n        user = _getState.user,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.checkListUpdate'\n    };\n    var now = utils.string.t('format.date', {\n      value: {\n        date: new Date(),\n        format: config.ui.format.date.iso\n      }\n    });\n\n    var createChecklistArray = function createChecklistArray() {\n      var checklist = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n      return Object.entries(piSchema.content).reduce(function (acc, _ref) {\n        var _ref2 = _slicedToArray(_ref, 2),\n            key = _ref2[0],\n            list = _ref2[1];\n\n        return [].concat(_toConsumableArray(acc), _toConsumableArray(list.map(function (l) {\n          var checklistObject = checklist[l.rowKey] || {};\n          var signedDate = utils.string.t('format.date', {\n            value: {\n              date: checklistObject.signedDate,\n              format: 'YYYY-MM-DD'\n            }\n          });\n          return {\n            instructionId: instruction.id,\n            checkListDetails: l.rowKey,\n            checkListType: key,\n            accountHandler: checklistObject.accountHandler || '',\n            authorisedSignatory: checklistObject.authorisedSignatory || false,\n            signedDate: signedDate || '',\n            createdBy: checklistObject.createdBy || user.id,\n            createdDate: checklistObject.createdDate || now,\n            updatedBy: user.id,\n            updatedDate: now,\n            isActive: checklistObject.isActive || 1\n          };\n        })));\n      }, []);\n    };\n\n    dispatch(checkListUpdateRequest(values, instruction));\n    dispatch(addLoader('checkListUpdate'));\n\n    if (!values || !instruction || !(instruction === null || instruction === void 0 ? void 0 : instruction.id)) {\n      dispatch(checkListUpdateFailure(defaultError));\n      return;\n    }\n\n    var payload = _objectSpread(_objectSpread({}, instruction), {}, {\n      checklist: createChecklistArray(values === null || values === void 0 ? void 0 : values.checklist),\n      details: _objectSpread(_objectSpread({}, instruction === null || instruction === void 0 ? void 0 : instruction.details), {}, {\n        instructionId: (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.id,\n        accountExecutiveId: values.accountExecutive || 0,\n        producingBrokerId: values.producingBroker || 0,\n        clientEmail: ((_values$clientEmail = values.clientEmail) === null || _values$clientEmail === void 0 ? void 0 : _values$clientEmail.trim()) || '',\n        clientName: values.clientName || '',\n        contactName: ((_values$contactName = values.contactName) === null || _values$contactName === void 0 ? void 0 : _values$contactName.trim()) || '',\n        eocInvoiceContactName: ((_values$eocInvoiceCon = values.eocInvoiceContactName) === null || _values$eocInvoiceCon === void 0 ? void 0 : _values$eocInvoiceCon.trim()) || '',\n        eocInvoiceMail: ((_values$eocInvoiceMai = values.eocInvoiceMail) === null || _values$eocInvoiceMai === void 0 ? void 0 : _values$eocInvoiceMai.trim()) || '',\n        facilityTypeId: values.facilityType || null\n      })\n    });\n\n    return utils.api.put({\n      token: user.auth.accessToken,\n      endpoint: endpoint.ppService,\n      path: \"instruction/saveChecklist\",\n      data: payload\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(checkListUpdateSuccess(data.data));\n      dispatch(storeProcessingInstruction(data.data));\n      return data.data; // const newInstruction = {\n      //   ...payload,\n      //   accountExecutiveId: payload.details.accountExecutiveId,\n      //   accountExecutiveName: payload.details.accountExecutiveName,\n      //   producingBrokerId: payload.details.producingBrokerId,\n      //   producingBrokerName: payload.details.producingBrokerName,\n      //   clientEmail: payload.details.clientEmail,\n      //   clientName: payload.details.clientName,\n      //   contactName: payload.details.contactName,\n      //   eocInvoiceContactName: payload.details.eocInvoiceContactName,\n      //   eocInvoiceMail: payload.details.eocInvoiceMail,\n      // };\n      // dispatch(checkListUpdateSuccess(newInstruction));\n      // dispatch(storeProcessingInstruction(newInstruction));\n      // return newInstruction;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (checkListUpdate)'\n      }));\n      dispatch(checkListUpdateFailure(err));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('checkListUpdate'));\n    });\n  };\n};\nexport var checkListUpdateRequest = function checkListUpdateRequest(values, instruction) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_REQUEST',\n    payload: {\n      values: values,\n      instruction: instruction\n    }\n  };\n};\nexport var checkListUpdateSuccess = function checkListUpdateSuccess(json) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_SUCCESS',\n    payload: json\n  };\n};\nexport var checkListUpdateFailure = function checkListUpdateFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.checkListUpdate.js"],"names":["addLoader","authLogout","removeLoader","storeProcessingInstruction","piSchema","utils","config","checkListUpdate","values","instruction","dispatch","getState","user","endpoint","vars","defaultError","file","now","string","t","value","date","Date","format","ui","iso","createChecklistArray","checklist","Object","entries","content","reduce","acc","key","list","map","l","checklistObject","rowKey","signedDate","instructionId","id","checkListDetails","checkListType","accountHandler","authorisedSignatory","createdBy","createdDate","updatedBy","updatedDate","isActive","checkListUpdateRequest","checkListUpdateFailure","payload","details","accountExecutiveId","accountExecutive","producingBrokerId","producingBroker","clientEmail","trim","clientName","contactName","eocInvoiceContactName","eocInvoiceMail","facilityTypeId","facilityType","api","put","token","auth","accessToken","ppService","path","data","then","response","handleResponse","json","handleNewData","checkListUpdateSuccess","err","handleError","message","handleUnauthorized","type","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, storeProcessingInstruction } from 'stores';\r\nimport piSchema from '../../schemas/processingInstructions';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport const checkListUpdate = (values, instruction) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.checkListUpdate',\r\n  };\r\n\r\n  const now = utils.string.t('format.date', { value: { date: new Date(), format: config.ui.format.date.iso } });\r\n\r\n  const createChecklistArray = (checklist = {}) => {\r\n    return Object.entries(piSchema.content).reduce((acc, [key, list]) => {\r\n      return [\r\n        ...acc,\r\n        ...list.map((l) => {\r\n          const checklistObject = checklist[l.rowKey] || {};\r\n          const signedDate = utils.string.t('format.date', {\r\n            value: { date: checklistObject.signedDate, format: 'YYYY-MM-DD' },\r\n          });\r\n\r\n          return {\r\n            instructionId: instruction.id,\r\n            checkListDetails: l.rowKey,\r\n            checkListType: key,\r\n            accountHandler: checklistObject.accountHandler || '',\r\n            authorisedSignatory: checklistObject.authorisedSignatory || false,\r\n            signedDate: signedDate || '',\r\n            createdBy: checklistObject.createdBy || user.id,\r\n            createdDate: checklistObject.createdDate || now,\r\n            updatedBy: user.id,\r\n            updatedDate: now,\r\n            isActive: checklistObject.isActive || 1,\r\n          };\r\n        }),\r\n      ];\r\n    }, []);\r\n  };\r\n\r\n  dispatch(checkListUpdateRequest(values, instruction));\r\n  dispatch(addLoader('checkListUpdate'));\r\n\r\n  if (!values || !instruction || !instruction?.id) {\r\n    dispatch(checkListUpdateFailure(defaultError));\r\n    return;\r\n  }\r\n\r\n  const payload = {\r\n    ...instruction,\r\n    checklist: createChecklistArray(values?.checklist),\r\n    details: {\r\n      ...instruction?.details,\r\n      instructionId: instruction.details?.id,\r\n      accountExecutiveId: values.accountExecutive || 0,\r\n      producingBrokerId: values.producingBroker || 0,\r\n      clientEmail: values.clientEmail?.trim() || '',\r\n      clientName: values.clientName || '',\r\n      contactName: values.contactName?.trim() || '',\r\n      eocInvoiceContactName: values.eocInvoiceContactName?.trim() || '',\r\n      eocInvoiceMail: values.eocInvoiceMail?.trim() || '',\r\n      facilityTypeId: values.facilityType || null,\r\n    },\r\n  };\r\n\r\n  return utils.api\r\n    .put({\r\n      token: user.auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      path: `instruction/saveChecklist`,\r\n      data: payload,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(checkListUpdateSuccess(data.data));\r\n      dispatch(storeProcessingInstruction(data.data));\r\n      return data.data;\r\n      // const newInstruction = {\r\n      //   ...payload,\r\n      //   accountExecutiveId: payload.details.accountExecutiveId,\r\n      //   accountExecutiveName: payload.details.accountExecutiveName,\r\n      //   producingBrokerId: payload.details.producingBrokerId,\r\n      //   producingBrokerName: payload.details.producingBrokerName,\r\n      //   clientEmail: payload.details.clientEmail,\r\n      //   clientName: payload.details.clientName,\r\n      //   contactName: payload.details.contactName,\r\n      //   eocInvoiceContactName: payload.details.eocInvoiceContactName,\r\n      //   eocInvoiceMail: payload.details.eocInvoiceMail,\r\n      // };\r\n\r\n      // dispatch(checkListUpdateSuccess(newInstruction));\r\n      // dispatch(storeProcessingInstruction(newInstruction));\r\n      // return newInstruction;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (checkListUpdate)' });\r\n      dispatch(checkListUpdateFailure(err));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('checkListUpdate'));\r\n    });\r\n};\r\n\r\nexport const checkListUpdateRequest = (values, instruction) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_REQUEST',\r\n    payload: { values, instruction },\r\n  };\r\n};\r\n\r\nexport const checkListUpdateSuccess = (json) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_SUCCESS',\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const checkListUpdateFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTIONS_CHECKLIST_UPDATE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}