{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsUploadViewSearchDocs\\\\ClaimsUploadViewSearchDocs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport merge from 'lodash/merge'; // app\n\nimport ClaimsUploadViewSearchDocsView from './ClaimsUploadViewSearchDocs.view';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { getViewTableDocuments, selectorDmsViewFiles, selectContextSubType, resetDmsDocumentsUpload, resetDmsDocumentsView, resetDmsDocumentsHistory, resetFilesUploaded } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsUploadViewSearchDocs.propTypes = {\n  refData: PropTypes.object.isRequired,\n  refIdName: PropTypes.string.isRequired,\n  dmsContext: PropTypes.string.isRequired,\n  sourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  viewOptions: PropTypes.shape({\n    disabled: PropTypes.bool,\n    canUpload: PropTypes.bool,\n    canSearch: PropTypes.bool,\n    canUnlink: PropTypes.bool,\n    canDelete: PropTypes.bool,\n    canEditMetaData: PropTypes.bool\n  }).isRequired,\n  searchOptions: PropTypes.shape({\n    disabled: PropTypes.bool\n  }).isRequired,\n  defaultTab: PropTypes.string,\n  documentTypeKey: PropTypes.oneOf([constants.DMS_DOCUMENT_TYPE_SECTION_KEYS]),\n  handlers: PropTypes.shape({\n    onClosingUploadModal: PropTypes.func\n  })\n};\nClaimsUploadViewSearchDocs.defaultProps = {\n  viewOptions: {},\n  searchOptions: {},\n  defaultTab: constants.DMS_VIEW_TAB_VIEW,\n  handlers: {\n    onClosingUploadModal: function onClosingUploadModal() {}\n  }\n};\nexport default function ClaimsUploadViewSearchDocs(_ref) {\n  _s();\n\n  var refData = _ref.refData,\n      refIdName = _ref.refIdName,\n      dmsContext = _ref.dmsContext,\n      sourceId = _ref.sourceId,\n      viewOptions = _ref.viewOptions,\n      searchOptions = _ref.searchOptions,\n      defaultTab = _ref.defaultTab,\n      documentTypeKey = _ref.documentTypeKey,\n      handlers = _ref.handlers;\n  var dispatch = useDispatch();\n  var viewOptionsMerged = merge({\n    disabled: false,\n    upload: true,\n    search: true,\n    unlink: true,\n    delete: true,\n    editMetaData: true\n  }, viewOptions);\n  var searchOptionsMerged = merge({\n    disabled: false\n  }, searchOptions);\n\n  var _useState = useState(defaultTab),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var contextSubType = useSelector(selectContextSubType); // pp details\n\n  var policyRef = refData === null || refData === void 0 ? void 0 : refData.policyRef;\n  var instructionId = refData === null || refData === void 0 ? void 0 : refData.instructionId;\n  var referenceId = refData === null || refData === void 0 ? void 0 : refData[refIdName];\n  var sectionType = dmsContext;\n  var isAutoSearchScreen = defaultTab === constants.DMS_VIEW_TAB_SEARCH;\n  useEffect(function () {\n    if (checkisSubContext()) {\n      getViewTableDocsForSubContext();\n    } else if (referenceId && sectionType) {\n      dispatch(getViewTableDocuments(_objectSpread({\n        referenceId: referenceId,\n        sectionType: sectionType,\n        documentTypeKey: documentTypeKey\n      }, policyRef && instructionId && {\n        policyRef: policyRef,\n        instructionId: instructionId\n      })));\n    }\n  }, [referenceId, sectionType, contextSubType === null || contextSubType === void 0 ? void 0 : contextSubType.caseIncidentNotesID]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    // Cleanup\n    return function () {\n      dispatch(resetDmsDocumentsUpload());\n      dispatch(resetDmsDocumentsView());\n      dispatch(resetDmsDocumentsHistory());\n      dispatch(resetFilesUploaded());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var dms = {\n    context: dmsContext,\n    source: sourceId || (refData === null || refData === void 0 ? void 0 : refData.sourceId),\n    refData: refData\n  };\n\n  var onUnlinkorDeleteSuccess = function onUnlinkorDeleteSuccess() {\n    dispatch(getViewTableDocuments(_objectSpread({\n      referenceId: referenceId,\n      sectionType: sectionType,\n      documentTypeKey: documentTypeKey\n    }, policyRef && instructionId && {\n      policyRef: policyRef,\n      instructionId: instructionId\n    })));\n  };\n\n  var tabs = [{\n    value: constants.DMS_VIEW_TAB_VIEW,\n    label: utils.string.t('dms.wrapper.tabs.viewDocuments'),\n    disabled: viewOptionsMerged.disabled\n  }, {\n    value: constants.DMS_VIEW_TAB_SEARCH,\n    label: utils.string.t('dms.wrapper.tabs.search'),\n    disabled: searchOptionsMerged.disabled\n  }];\n\n  var selectTab = function selectTab(tabName) {\n    setSelectedTab(tabName);\n\n    if (tabName === constants.DMS_VIEW_TAB_VIEW) {\n      if (referenceId && sectionType) {\n        dispatch(getViewTableDocuments(_objectSpread({\n          referenceId: referenceId,\n          sectionType: sectionType,\n          documentTypeKey: documentTypeKey\n        }, policyRef && instructionId && {\n          policyRef: policyRef,\n          instructionId: instructionId\n        })));\n      }\n    }\n  };\n\n  var checkisSubContext = function checkisSubContext() {\n    var type = contextSubType.type;\n    return type && constants.DMS_TASK_CONTEXT_ALL_TYPES.includes(type);\n  };\n\n  var getViewTableDocsForSubContext = function getViewTableDocsForSubContext() {\n    var caseIncidentNotesID = contextSubType.caseIncidentNotesID,\n        refId = contextSubType.refId;\n\n    if (caseIncidentNotesID) {\n      var refIdForSubContext = refId + '-' + caseIncidentNotesID;\n      dispatch(getViewTableDocuments(_objectSpread({\n        referenceId: refIdForSubContext,\n        sectionType: sectionType,\n        documentTypeKey: documentTypeKey\n      }, policyRef && instructionId && {\n        policyRef: policyRef,\n        instructionId: instructionId\n      })));\n    } else {\n      dispatch(getViewTableDocuments(_objectSpread({\n        referenceId: refId,\n        sectionType: sectionType,\n        documentTypeKey: documentTypeKey\n      }, policyRef && instructionId && {\n        policyRef: policyRef,\n        instructionId: instructionId\n      })));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocsView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    isAutoSearchScreen: isAutoSearchScreen,\n    dms: dms,\n    sourceId: sourceId,\n    viewOptions: viewOptionsMerged,\n    referenceId: referenceId,\n    viewDocumentList: viewDocumentList,\n    handlers: {\n      selectTab: selectTab,\n      onUnlinkorDeleteSuccess: onUnlinkorDeleteSuccess,\n      onClosingUploadModal: handlers.onClosingUploadModal\n    },\n    documentTypeKey: documentTypeKey,\n    refData: refData\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 194,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsUploadViewSearchDocs, \"iTAkqbLt37Du+IV5IAWqxvPe+ZE=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ClaimsUploadViewSearchDocs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsUploadViewSearchDocs\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsUploadViewSearchDocs/ClaimsUploadViewSearchDocs.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","merge","ClaimsUploadViewSearchDocsView","constants","utils","getViewTableDocuments","selectorDmsViewFiles","selectContextSubType","resetDmsDocumentsUpload","resetDmsDocumentsView","resetDmsDocumentsHistory","resetFilesUploaded","ClaimsUploadViewSearchDocs","propTypes","refData","object","isRequired","refIdName","string","dmsContext","sourceId","oneOfType","number","viewOptions","shape","disabled","bool","canUpload","canSearch","canUnlink","canDelete","canEditMetaData","searchOptions","defaultTab","documentTypeKey","oneOf","DMS_DOCUMENT_TYPE_SECTION_KEYS","handlers","onClosingUploadModal","func","defaultProps","DMS_VIEW_TAB_VIEW","dispatch","viewOptionsMerged","upload","search","unlink","delete","editMetaData","searchOptionsMerged","selectedTab","setSelectedTab","viewDocumentList","contextSubType","policyRef","instructionId","referenceId","sectionType","isAutoSearchScreen","DMS_VIEW_TAB_SEARCH","checkisSubContext","getViewTableDocsForSubContext","caseIncidentNotesID","dms","context","source","onUnlinkorDeleteSuccess","tabs","value","label","t","selectTab","tabName","type","DMS_TASK_CONTEXT_ALL_TYPES","includes","refId","refIdForSubContext"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport merge from 'lodash/merge';\r\n\r\n// app\r\nimport ClaimsUploadViewSearchDocsView from './ClaimsUploadViewSearchDocs.view';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport {\r\n  getViewTableDocuments,\r\n  selectorDmsViewFiles,\r\n  selectContextSubType,\r\n  resetDmsDocumentsUpload,\r\n  resetDmsDocumentsView,\r\n  resetDmsDocumentsHistory,\r\n  resetFilesUploaded,\r\n} from 'stores';\r\n\r\nClaimsUploadViewSearchDocs.propTypes = {\r\n  refData: PropTypes.object.isRequired,\r\n  refIdName: PropTypes.string.isRequired,\r\n  dmsContext: PropTypes.string.isRequired,\r\n  sourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  viewOptions: PropTypes.shape({\r\n    disabled: PropTypes.bool,\r\n    canUpload: PropTypes.bool,\r\n    canSearch: PropTypes.bool,\r\n    canUnlink: PropTypes.bool,\r\n    canDelete: PropTypes.bool,\r\n    canEditMetaData: PropTypes.bool,\r\n  }).isRequired,\r\n  searchOptions: PropTypes.shape({\r\n    disabled: PropTypes.bool,\r\n  }).isRequired,\r\n  defaultTab: PropTypes.string,\r\n  documentTypeKey: PropTypes.oneOf([constants.DMS_DOCUMENT_TYPE_SECTION_KEYS]),\r\n  handlers: PropTypes.shape({\r\n    onClosingUploadModal: PropTypes.func,\r\n  }),\r\n};\r\n\r\nClaimsUploadViewSearchDocs.defaultProps = {\r\n  viewOptions: {},\r\n  searchOptions: {},\r\n  defaultTab: constants.DMS_VIEW_TAB_VIEW,\r\n  handlers: {\r\n    onClosingUploadModal: () => {},\r\n  }\r\n};\r\n\r\nexport default function ClaimsUploadViewSearchDocs({\r\n  refData,\r\n  refIdName,\r\n  dmsContext,\r\n  sourceId,\r\n  viewOptions,\r\n  searchOptions,\r\n  defaultTab,\r\n  documentTypeKey,\r\n  handlers,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const viewOptionsMerged = merge(\r\n    {\r\n      disabled: false,\r\n      upload: true,\r\n      search: true,\r\n      unlink: true,\r\n      delete: true,\r\n      editMetaData: true,\r\n    },\r\n    viewOptions\r\n  );\r\n\r\n  const searchOptionsMerged = merge(\r\n    {\r\n      disabled: false,\r\n    },\r\n    searchOptions\r\n  );\r\n\r\n  const [selectedTab, setSelectedTab] = useState(defaultTab);\r\n\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const contextSubType = useSelector(selectContextSubType);\r\n\r\n  // pp details\r\n  const policyRef = refData?.policyRef;\r\n  const instructionId = refData?.instructionId;\r\n\r\n  const referenceId = refData?.[refIdName];\r\n  const sectionType = dmsContext;\r\n  const isAutoSearchScreen = defaultTab === constants.DMS_VIEW_TAB_SEARCH;\r\n\r\n  useEffect(() => {\r\n    if (checkisSubContext()) {\r\n      getViewTableDocsForSubContext();\r\n    } else if (referenceId && sectionType) {\r\n      dispatch(\r\n        getViewTableDocuments({\r\n          referenceId,\r\n          sectionType,\r\n          documentTypeKey,\r\n          ...(policyRef && instructionId && { policyRef, instructionId }),\r\n        })\r\n      );\r\n    }\r\n  }, [referenceId, sectionType, contextSubType?.caseIncidentNotesID]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    // Cleanup\r\n    return () => {\r\n      dispatch(resetDmsDocumentsUpload());\r\n      dispatch(resetDmsDocumentsView());\r\n      dispatch(resetDmsDocumentsHistory());\r\n      dispatch(resetFilesUploaded());\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const dms = {\r\n    context: dmsContext,\r\n    source: sourceId || refData?.sourceId,\r\n    refData,\r\n  };\r\n\r\n  const onUnlinkorDeleteSuccess = () => {\r\n    dispatch(\r\n      getViewTableDocuments({ referenceId, sectionType, documentTypeKey, ...(policyRef && instructionId && { policyRef, instructionId }) })\r\n    );\r\n  };\r\n\r\n  const tabs = [\r\n    {\r\n      value: constants.DMS_VIEW_TAB_VIEW,\r\n      label: utils.string.t('dms.wrapper.tabs.viewDocuments'),\r\n      disabled: viewOptionsMerged.disabled,\r\n    },\r\n    {\r\n      value: constants.DMS_VIEW_TAB_SEARCH,\r\n      label: utils.string.t('dms.wrapper.tabs.search'),\r\n      disabled: searchOptionsMerged.disabled,\r\n    },\r\n  ];\r\n\r\n  const selectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n\r\n    if (tabName === constants.DMS_VIEW_TAB_VIEW) {\r\n      if (referenceId && sectionType) {\r\n        dispatch(\r\n          getViewTableDocuments({\r\n            referenceId,\r\n            sectionType,\r\n            documentTypeKey,\r\n            ...(policyRef && instructionId && { policyRef, instructionId }),\r\n          })\r\n        );\r\n      }\r\n    }\r\n  };\r\n\r\n  const checkisSubContext = () => {\r\n    const { type } = contextSubType;\r\n    return type && constants.DMS_TASK_CONTEXT_ALL_TYPES.includes(type);\r\n  };\r\n\r\n  const getViewTableDocsForSubContext = () => {\r\n    const { caseIncidentNotesID, refId } = contextSubType;\r\n    if (caseIncidentNotesID) {\r\n      const refIdForSubContext = refId + '-' + caseIncidentNotesID;\r\n      dispatch(\r\n        getViewTableDocuments({\r\n          referenceId: refIdForSubContext,\r\n          sectionType,\r\n          documentTypeKey,\r\n          ...(policyRef && instructionId && { policyRef, instructionId }),\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(\r\n        getViewTableDocuments({\r\n          referenceId: refId,\r\n          sectionType,\r\n          documentTypeKey,\r\n          ...(policyRef && instructionId && { policyRef, instructionId }),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <ClaimsUploadViewSearchDocsView\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      isAutoSearchScreen={isAutoSearchScreen}\r\n      dms={dms}\r\n      sourceId={sourceId}\r\n      viewOptions={viewOptionsMerged}\r\n      referenceId={referenceId}\r\n      viewDocumentList={viewDocumentList}\r\n      handlers={{ selectTab, onUnlinkorDeleteSuccess, onClosingUploadModal: handlers.onClosingUploadModal }}\r\n      documentTypeKey={documentTypeKey}\r\n      refData={refData}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}