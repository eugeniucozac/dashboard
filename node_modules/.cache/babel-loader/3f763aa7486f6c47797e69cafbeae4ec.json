{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DmsSearch\\\\DmsSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { get } from 'lodash'; // app\n\nimport { DmsSearchView } from './DmsSearch.view';\nimport { searchDmsDocuments, selectRefDataNewDocumentTypesByContextSource, resetDmsDocumentsSearch, viewDocumentsDownload, viewDocumentsMultiDownload, linkMultipleDmsDocuments, showModal, selectClaimsListFilterLoading, selectLossId, selectClaimsInformation, getDepartments, selectPiDepartmentList, selectDmsSearchDataLoader } from 'stores';\nimport { useFormActions, useFlexiColumns } from 'hooks';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { MultiSelect } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsSearch.propTypes = {\n  context: PropTypes.oneOf([constants.DMS_CONTEXT_CASE, constants.DMS_CONTEXT_CLAIM, constants.DMS_CONTEXT_LOSS, constants.DMS_CONTEXT_POLICY, constants.DMS_CONTEXT_TASK, constants.DMS_CONTEXT_PROCESSING_INSTRUCTION, constants.DMS_CONTEXT_INSTRUCTION, constants.DMS_CONTEXT_RFI]).isRequired,\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  referenceId: PropTypes.string.isRequired,\n  isAutoSearchScreen: PropTypes.bool,\n  isFnolDmsSearch: PropTypes.bool,\n  updateClaimFileListAfterLinking: PropTypes.func,\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\n  handleFormStatus: PropTypes.func.isRequired\n};\nDmsSearch.defaultProps = {\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\n  isFnolDmsSearch: false,\n  updateClaimFileListAfterLinking: function updateClaimFileListAfterLinking() {},\n  handleFormStatus: function handleFormStatus() {}\n};\nexport default function DmsSearch(_ref) {\n  _s();\n\n  var _useSelector, _useSelector2, _documentsList$filter, _documentsList$filter2, _documentsList$filter3, _documentsList$filter4, _documentsList$filter5, _documentsList$filter6, _documentsList$files, _documentsList$files$, _documentsList$files2, _documentsList$files3, _documentsList$files4, _documentsList$files5, _documentsList$files6, _documentsList$files7;\n\n  var context = _ref.context,\n      source = _ref.source,\n      referenceId = _ref.referenceId,\n      isAutoSearchScreen = _ref.isAutoSearchScreen,\n      documentTypeKey = _ref.documentTypeKey,\n      isFnolDmsSearch = _ref.isFnolDmsSearch,\n      updateClaimFileListAfterLinking = _ref.updateClaimFileListAfterLinking,\n      handleFormStatus = _ref.handleFormStatus;\n  var dispatch = useDispatch();\n\n  var _utils$dmsFormatter$g = utils.dmsFormatter.getDocumentTypeFilterKeys(context, source, documentTypeKey),\n      dmsSectionKey = _utils$dmsFormatter$g.dmsSectionKey,\n      sourceId = _utils$dmsFormatter$g.sourceId; // redux\n\n\n  var documentTypes = useSelector(selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId));\n  var documentsList = useSelector(function (state) {\n    return get(state, 'dms.search');\n  }) || [];\n  var isFetchingFilters = useSelector(selectClaimsListFilterLoading);\n  var departmentList = useSelector(selectPiDepartmentList);\n  var lossRefID = (_useSelector = useSelector(selectLossId)) === null || _useSelector === void 0 ? void 0 : _useSelector.lossRef;\n  var claimRefID = (_useSelector2 = useSelector(selectClaimsInformation)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.claimReference;\n  var dmsSearchDataLoader = useSelector(selectDmsSearchDataLoader); // state\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState({\n    isOpen: false,\n    timeStamp: new Date()\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchExpanded = _useState4[0],\n      setSearchExpanded = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isMultiSelect = _useState6[0],\n      setIsMultiSelect = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDocs = _useState8[0],\n      setSelectedDocs = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchFields = _useState10[0],\n      setSearchFields = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDivisionOptions = _useState12[0],\n      setSelectDivisionOption = _useState12[1];\n\n  var _useState13 = useState(constants.DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchRowsTotalPreference = _useState14[0],\n      setSearchRowsTotalPreference = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filtersPreference = _useState16[0],\n      setFiltersPreference = _useState16[1];\n\n  var _useState17 = useState(dmsSearchDataLoader),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isDmsSearchDataLoading = _useState18[0],\n      setIsDmsSearchDataLoading = _useState18[1];\n\n  var bothTypeCall = constants.CLAIM_PROCESSING_REQ_TYPES.both;\n  var contextReferenceObject = {\n    id: referenceId\n  };\n  var divOptions = departmentList.map(function (list) {\n    return {\n      id: list.id,\n      value: list.deptID,\n      label: list.name\n    };\n  });\n  useEffect(function () {\n    if (!utils.generic.isValidArray(departmentList, true)) dispatch(getDepartments());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isAutoSearchScreen) {\n      var defaultSearchCriteria = context === constants.DMS_CONTEXT_POLICY ? {\n        policyId: referenceId,\n        pageSize: searchRowsTotalPreference\n      } : {};\n\n      if (utils.generic.isValidArray(Object.values(defaultSearchCriteria), true)) {\n        setSearchFields(defaultSearchCriteria);\n        dispatch(searchDmsDocuments(context, contextReferenceObject, defaultSearchCriteria));\n      }\n    }\n\n    dispatch(selectRefDataNewDocumentTypesByContextSource(context, source));\n    return function () {\n      dispatch(resetDmsDocumentsSearch());\n    };\n  }, [referenceId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (dmsSearchDataLoader !== isDmsSearchDataLoading) setIsDmsSearchDataLoading(dmsSearchDataLoader);\n  }, [dmsSearchDataLoader]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var cols = [{\n    id: 'multiSelect',\n    visible: true\n  }, {\n    id: 'fileName',\n    label: utils.string.t('dms.search.cols.fileName'),\n    sort: {\n      type: 'numeric',\n      direction: 'desc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'hDriveFolders',\n    label: utils.string.t('dms.search.cols.hDriveFolders'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'reference',\n    label: utils.string.t('dms.search.cols.reference'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'documentTypeDescription',\n    label: utils.string.t('dms.search.cols.documentType'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'version',\n    label: utils.string.t('dms.search.cols.version'),\n    sort: {\n      type: 'numeric',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'userDetails.fullName',\n    label: utils.string.t('dms.search.cols.uploadedBy'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }].concat([isFnolDmsSearch ? {\n    id: 'uploadedDate',\n    label: utils.string.t('dms.search.cols.uploadedDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  } : {}], [{\n    id: 'actionButtons',\n    menu: true,\n    nowrap: true\n  }]);\n\n  var _useFlexiColumns = useFlexiColumns(cols),\n      colsArray = _useFlexiColumns.columns;\n\n  var fields = [{\n    name: 'policyId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.policyReference.label'),\n    defaultValue: isAutoSearchScreen ? referenceId : ''\n  }, {\n    name: 'claimId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.claimReference.label'),\n    value: ''\n  }, {\n    name: 'lossId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.lossReference.label'),\n    value: ''\n  }, {\n    name: 'insuredName',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.insuredName.label'),\n    value: ''\n  }, {\n    name: 'documentType',\n    type: 'autocompletemui',\n    label: utils.string.t('dms.search.fields.documentType.label'),\n    placeholder: utils.string.t('dms.search.fields.documentType.placeholder'),\n    value: null,\n    options: documentTypes,\n    optionKey: 'documentTypeID',\n    optionLabel: 'documentTypeDescription'\n  }, {\n    name: 'documentName',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.documentName.label'),\n    value: ''\n  }, {\n    name: 'year',\n    type: 'datepicker',\n    label: utils.string.t('dms.search.fields.inceptionYear.label'),\n    placeholder: utils.string.t('dms.search.fields.inceptionYear.placeholder'),\n    value: null,\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('dms.search.fields.inceptionYear.helperText')\n    },\n    muiPickerProps: {\n      views: ['year'],\n      format: 'YYYY',\n      clearable: true\n    }\n  }, {\n    name: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('dms.search.fields.division.label'),\n    options: divOptions,\n    tagType: 'quantity',\n    placeholder: 'Choose Division',\n    setSelectOption: setSelectDivisionOption,\n    selectedOptions: selectedDivisionOptions\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentDate\"),\n    type: 'datepicker',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.paymentDate.label'),\n    placeholder: utils.string.t('dms.search.fields.paymentDate.placeholder'),\n    value: null,\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('dms.search.fields.paymentDate.helperText')\n    },\n    muiPickerProps: {\n      format: config.ui.format.date.slashNumeric,\n      clearable: true\n    }\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentReference\"),\n    type: 'text',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.paymentReference.label'),\n    value: ''\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_lossPayee\"),\n    type: 'text',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.lossPayee.label'),\n    value: ''\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_amount\"),\n    type: 'number',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.amount.label'),\n    value: ''\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      setResetKey(new Date().getTime());\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('dms.search.btn'),\n    handler: function handler(data) {\n      setSearchFields(data);\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n      var divIDs = selectedDivisionOptions.map(function (div) {\n        return div.value;\n      });\n      dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, data), {}, {\n        divisionIds: divIDs,\n        pageSize: searchRowsTotalPreference,\n        requestType: bothTypeCall,\n        filterRequest: filtersPreference\n      })));\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var formProps = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  }));\n\n  var _useFormActions = useFormActions(actions, formProps.reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var handleDownloadFile = function handleDownloadFile(e, file) {\n    e.stopPropagation();\n    dispatch(viewDocumentsDownload(file));\n  };\n\n  var handleLinkFile = function handleLinkFile(e, file) {\n    e.stopPropagation();\n\n    if (file.isLinked) {\n      return;\n    }\n\n    confirmDocumentlink([file]);\n  };\n\n  var handleFnolLinkFile = function handleFnolLinkFile(file, sectionType) {\n    if (file.isLinked) {\n      return;\n    }\n\n    confirmDocumentlink([file], sectionType);\n  };\n\n  var handleMultipleDownload = function handleMultipleDownload() {\n    var selectedDocIds = selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.map(function (docId) {\n      return docId.documentId;\n    });\n\n    if ((selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.length) !== 1) {\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\n      return;\n    }\n\n    dispatch(viewDocumentsDownload(selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs[0]));\n  };\n\n  var handleMutiplelinking = function handleMutiplelinking() {\n    var sectionType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    confirmDocumentlink(selectedDocs, sectionType);\n  };\n\n  var resetToDefaultValues = function resetToDefaultValues() {\n    setSelectedDocs([]);\n    setIsMultiSelect(false);\n  };\n\n  var confirmDocumentlink = function confirmDocumentlink(docs) {\n    var fnolSecType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n      return {\n        documentId: d.documentId,\n        referenceId: isFnolDmsSearch ? fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID : referenceId,\n        sectionType: isFnolDmsSearch ? fnolSecType : context\n      };\n    });\n\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\n      var claimParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n        return {\n          documentId: d.documentId,\n          referenceId: claimRefID,\n          sectionType: constants.DMS_CONTEXT_CLAIM\n        };\n      });\n      requestParams.push.apply(requestParams, _toConsumableArray(claimParams));\n    }\n\n    var requestParamsLength = requestParams === null || requestParams === void 0 ? void 0 : requestParams.length;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.search.linkDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.search.linkDocument.confirmLabel'),\n          confirmMessage: requestParamsLength === 1 || fnolSecType === constants.DMS_CONTEXT_LOSS && !isMultiSelect ? utils.string.t('dms.search.linkDocument.confirmMessage') : utils.string.t('dms.search.linkDocument.confirmMessageForMulti', {\n            count: isFnolDmsSearch && fnolSecType === constants.DMS_CONTEXT_LOSS ? requestParamsLength / 2 : requestParamsLength\n          }),\n          submitHandler: function submitHandler() {\n            return dispatch(linkMultipleDmsDocuments(requestParams)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                resetToDefaultValues();\n\n                if (utils.generic.isValidArray(Object.values(searchFields), true)) {\n                  dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n                    pageSize: searchRowsTotalPreference\n                  })));\n                }\n\n                updateClaimFileListAfterLinking();\n                handleFormStatus();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var handleCheckboxClick = function handleCheckboxClick(e, doc) {\n    e.stopPropagation();\n    var newlySelectedDocs = [].concat(_toConsumableArray(selectedDocs), [doc]);\n\n    if (selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.includes(doc)) {\n      newlySelectedDocs = newlySelectedDocs.filter(function (selectedDoc) {\n        return selectedDoc !== doc;\n      });\n    }\n\n    setSelectedDocs(newlySelectedDocs);\n    handleFormStatus();\n  };\n\n  var showCheckboxesClick = function showCheckboxesClick(event) {\n    var _event$target;\n\n    setIsMultiSelect(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.checked);\n    handleFormStatus();\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      by: by,\n      dir: dir,\n      pageSize: searchRowsTotalPreference,\n      requestType: bothTypeCall,\n      filterRequest: filtersPreference\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var _useFlexiColumns2 = useFlexiColumns(cols),\n      columnProps = _useFlexiColumns2.columnProps;\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setSearchRowsTotalPreference(rowsPerPage);\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      requestType: bothTypeCall,\n      pageSize: rowsPerPage,\n      filterRequest: filtersPreference\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      page: newPage,\n      pageSize: searchRowsTotalPreference,\n      filterRequest: filtersPreference,\n      requestType: bothTypeCall\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      setValue = _useForm.setValue;\n\n  var managedTableFilterFields = [!isFnolDmsSearch && {\n    id: 'hdriveFolder',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.hDriveFolders'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter = documentsList.filters) === null || _documentsList$filter === void 0 ? void 0 : _documentsList$filter.hdriveFolder,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"hdriveFolder\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter2 = documentsList.filters) === null || _documentsList$filter2 === void 0 ? void 0 : _documentsList$filter2.hdriveFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 487,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'documentTypeDescription',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.docType'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter3 = documentsList.filters) === null || _documentsList$filter3 === void 0 ? void 0 : _documentsList$filter3.documentTypeDescription,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"documentTypeDescription\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter4 = documentsList.filters) === null || _documentsList$filter4 === void 0 ? void 0 : _documentsList$filter4.documentTypeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 495,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'createdBy',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.createdBy'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter5 = documentsList.filters) === null || _documentsList$filter5 === void 0 ? void 0 : _documentsList$filter5.createdBy,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"createdBy\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter6 = documentsList.filters) === null || _documentsList$filter6 === void 0 ? void 0 : _documentsList$filter6.createdBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 503,\n      columnNumber: 16\n    }, this)\n  }];\n\n  var resetFilter = function resetFilter() {\n    setValue('hdriveFolder', null);\n    setValue('documentTypeDescription', null);\n    setValue('createdBy', null);\n    setFiltersPreference([]);\n    if (!Object.keys(searchFields).length) return;\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread({}, searchFields)));\n  };\n\n  var handleSearchFilter = function handleSearchFilter(_ref2) {\n    var search = _ref2.search,\n        filters = _ref2.filters;\n    setFiltersPreference(filters);\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      pageSize: searchRowsTotalPreference,\n      requestType: bothTypeCall,\n      filterRequest: filters\n    })));\n  }; // TODO\n\n\n  var resetNotificationFilters = function resetNotificationFilters() {};\n\n  var viewDocLauncher = function viewDocLauncher(e, doc) {\n    e.preventDefault();\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DmsSearchView, {\n    cols: colsArray,\n    columnPropsFunc: columnProps,\n    rows: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files = documentsList.files) === null || _documentsList$files === void 0 ? void 0 : (_documentsList$files$ = _documentsList$files.data) === null || _documentsList$files$ === void 0 ? void 0 : _documentsList$files$.searchValue) || [],\n    fields: fields,\n    buttons: {\n      cancel: cancel,\n      submit: submit\n    },\n    isFnolDmsSearch: isFnolDmsSearch,\n    formProps: formProps,\n    searchExpanded: searchExpanded,\n    handlers: {\n      download: handleDownloadFile,\n      link: handleLinkFile,\n      fnolLink: handleFnolLinkFile,\n      sort: handleSort,\n      handleCheckboxClick: handleCheckboxClick,\n      showCheckboxesClick: showCheckboxesClick,\n      handleMultipleDownload: handleMultipleDownload,\n      handleMutiplelinking: handleMutiplelinking,\n      resetFilter: resetFilter,\n      handleSearchFilter: handleSearchFilter,\n      resetNotificationFilters: resetNotificationFilters,\n      viewDocLauncher: viewDocLauncher\n    },\n    resetKey: resetKey,\n    isMultiSelect: isMultiSelect,\n    selectedDocs: selectedDocs,\n    pagination: {\n      page: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files2 = documentsList.files) === null || _documentsList$files2 === void 0 ? void 0 : (_documentsList$files3 = _documentsList$files2.pagination) === null || _documentsList$files3 === void 0 ? void 0 : _documentsList$files3.page) || 0,\n      rowsTotal: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files4 = documentsList.files) === null || _documentsList$files4 === void 0 ? void 0 : (_documentsList$files5 = _documentsList$files4.pagination) === null || _documentsList$files5 === void 0 ? void 0 : _documentsList$files5.totalElements) || 0,\n      rowsPerPage: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files6 = documentsList.files) === null || _documentsList$files6 === void 0 ? void 0 : (_documentsList$files7 = _documentsList$files6.pagination) === null || _documentsList$files7 === void 0 ? void 0 : _documentsList$files7.size) || searchRowsTotalPreference,\n      handlers: {\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage\n      }\n    },\n    tableFilterFields: managedTableFilterFields,\n    isFetchingFilters: isFetchingFilters,\n    isDmsSearchDataLoading: isDmsSearchDataLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 539,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsSearch, \"6QtH/0VozHT1f1Jz6jwKO/6EIMw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFlexiColumns, useForm, useFormActions, useFlexiColumns, useForm];\n});\n\n_c = DmsSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsSearch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DmsSearch/DmsSearch.js"],"names":["React","useEffect","useState","PropTypes","useSelector","useDispatch","useForm","yupResolver","get","DmsSearchView","searchDmsDocuments","selectRefDataNewDocumentTypesByContextSource","resetDmsDocumentsSearch","viewDocumentsDownload","viewDocumentsMultiDownload","linkMultipleDmsDocuments","showModal","selectClaimsListFilterLoading","selectLossId","selectClaimsInformation","getDepartments","selectPiDepartmentList","selectDmsSearchDataLoader","useFormActions","useFlexiColumns","constants","utils","config","MultiSelect","DmsSearch","propTypes","context","oneOf","DMS_CONTEXT_CASE","DMS_CONTEXT_CLAIM","DMS_CONTEXT_LOSS","DMS_CONTEXT_POLICY","DMS_CONTEXT_TASK","DMS_CONTEXT_PROCESSING_INSTRUCTION","DMS_CONTEXT_INSTRUCTION","DMS_CONTEXT_RFI","isRequired","source","oneOfType","string","number","referenceId","isAutoSearchScreen","bool","isFnolDmsSearch","updateClaimFileListAfterLinking","func","documentTypeKey","Object","values","DMS_DOCUMENT_TYPE_SECTION_KEYS","handleFormStatus","defaultProps","policy","dispatch","dmsFormatter","getDocumentTypeFilterKeys","dmsSectionKey","sourceId","documentTypes","documentsList","state","isFetchingFilters","departmentList","lossRefID","lossRef","claimRefID","claimReference","dmsSearchDataLoader","resetKey","setResetKey","isOpen","timeStamp","Date","searchExpanded","setSearchExpanded","isMultiSelect","setIsMultiSelect","selectedDocs","setSelectedDocs","searchFields","setSearchFields","selectedDivisionOptions","setSelectDivisionOption","DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS","searchRowsTotalPreference","setSearchRowsTotalPreference","filtersPreference","setFiltersPreference","isDmsSearchDataLoading","setIsDmsSearchDataLoading","bothTypeCall","CLAIM_PROCESSING_REQ_TYPES","both","contextReferenceObject","id","divOptions","map","list","value","deptID","label","name","generic","isValidArray","defaultSearchCriteria","policyId","pageSize","cols","visible","t","sort","type","direction","nowrap","menu","colsArray","columns","fields","defaultValue","placeholder","options","optionKey","optionLabel","muiComponentProps","fullWidth","helperText","muiPickerProps","views","format","clearable","tagType","setSelectOption","selectedOptions","DMS_DOCUMENT_TYPE_PAYMENT","group","ui","date","slashNumeric","actions","handler","getTime","data","divIDs","div","divisionIds","requestType","filterRequest","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","formProps","resolver","reset","cancel","submit","handleDownloadFile","e","file","stopPropagation","handleLinkFile","isLinked","confirmDocumentlink","handleFnolLinkFile","sectionType","handleMultipleDownload","selectedDocIds","docId","documentId","length","handleMutiplelinking","resetToDefaultValues","docs","fnolSecType","requestParams","d","claimParams","push","requestParamsLength","component","props","title","maxWidth","componentProps","confirmLabel","confirmMessage","count","submitHandler","then","response","status","API_RESPONSE_OK","handleCheckboxClick","doc","newlySelectedDocs","includes","filter","selectedDoc","showCheckboxesClick","event","target","checked","handleSort","by","dir","columnProps","handleChangeRowsPerPage","rowsPerPage","handleChangePage","newPage","page","setValue","managedTableFilterFields","filters","hdriveFolder","content","documentTypeDescription","createdBy","resetFilter","keys","handleSearchFilter","search","resetNotificationFilters","viewDocLauncher","preventDefault","documentName","dms","dmsDocumentViewLauncher","files","searchValue","download","link","fnolLink","pagination","rowsTotal","totalElements","size","handlers"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { get } from 'lodash';\r\n\r\n// app\r\nimport { DmsSearchView } from './DmsSearch.view';\r\nimport {\r\n  searchDmsDocuments,\r\n  selectRefDataNewDocumentTypesByContextSource,\r\n  resetDmsDocumentsSearch,\r\n  viewDocumentsDownload,\r\n  viewDocumentsMultiDownload,\r\n  linkMultipleDmsDocuments,\r\n  showModal,\r\n  selectClaimsListFilterLoading,\r\n  selectLossId,\r\n  selectClaimsInformation,\r\n  getDepartments,\r\n  selectPiDepartmentList,\r\n  selectDmsSearchDataLoader,\r\n} from 'stores';\r\nimport { useFormActions, useFlexiColumns } from 'hooks';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { MultiSelect } from 'components';\r\n\r\nDmsSearch.propTypes = {\r\n  context: PropTypes.oneOf([\r\n    constants.DMS_CONTEXT_CASE,\r\n    constants.DMS_CONTEXT_CLAIM,\r\n    constants.DMS_CONTEXT_LOSS,\r\n    constants.DMS_CONTEXT_POLICY,\r\n    constants.DMS_CONTEXT_TASK,\r\n    constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n    constants.DMS_CONTEXT_INSTRUCTION,\r\n    constants.DMS_CONTEXT_RFI,\r\n  ]).isRequired,\r\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  referenceId: PropTypes.string.isRequired,\r\n  isAutoSearchScreen: PropTypes.bool,\r\n  isFnolDmsSearch: PropTypes.bool,\r\n  updateClaimFileListAfterLinking: PropTypes.func,\r\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\r\n  handleFormStatus: PropTypes.func.isRequired\r\n};\r\n\r\nDmsSearch.defaultProps = {\r\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n  isFnolDmsSearch: false,\r\n  updateClaimFileListAfterLinking: () => {},\r\n  handleFormStatus: () => {}\r\n};\r\n\r\nexport default function DmsSearch({\r\n  context,\r\n  source,\r\n  referenceId,\r\n  isAutoSearchScreen,\r\n  documentTypeKey,\r\n  isFnolDmsSearch,\r\n  updateClaimFileListAfterLinking,\r\n  handleFormStatus\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const { dmsSectionKey, sourceId } = utils.dmsFormatter.getDocumentTypeFilterKeys(context, source, documentTypeKey);\r\n\r\n  // redux\r\n  const documentTypes = useSelector(selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId));\r\n  const documentsList = useSelector((state) => get(state, 'dms.search')) || [];\r\n  const isFetchingFilters = useSelector(selectClaimsListFilterLoading);\r\n  const departmentList = useSelector(selectPiDepartmentList);\r\n  const lossRefID = useSelector(selectLossId)?.lossRef;\r\n  const claimRefID = useSelector(selectClaimsInformation)?.claimReference;\r\n  const dmsSearchDataLoader = useSelector(selectDmsSearchDataLoader);\r\n\r\n  // state\r\n  const [resetKey, setResetKey] = useState();\r\n  const [searchExpanded, setSearchExpanded] = useState({ isOpen: false, timeStamp: new Date() });\r\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [searchFields, setSearchFields] = useState({});\r\n  const [selectedDivisionOptions, setSelectDivisionOption] = useState([]);\r\n  const [searchRowsTotalPreference, setSearchRowsTotalPreference] = useState(constants.DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS);\r\n  const [filtersPreference, setFiltersPreference] = useState([]);\r\n  const [isDmsSearchDataLoading, setIsDmsSearchDataLoading] = useState(dmsSearchDataLoader);\r\n  const bothTypeCall = constants.CLAIM_PROCESSING_REQ_TYPES.both;\r\n  const contextReferenceObject = { id: referenceId };\r\n  const divOptions = departmentList.map((list) => {\r\n    return { id: list.id, value: list.deptID, label: list.name };\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isValidArray(departmentList, true)) dispatch(getDepartments());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isAutoSearchScreen) {\r\n      const defaultSearchCriteria =\r\n        context === constants.DMS_CONTEXT_POLICY ? { policyId: referenceId, pageSize: searchRowsTotalPreference } : {};\r\n      if (utils.generic.isValidArray(Object.values(defaultSearchCriteria), true)) {\r\n        setSearchFields(defaultSearchCriteria);\r\n        dispatch(searchDmsDocuments(context, contextReferenceObject, defaultSearchCriteria));\r\n      }\r\n    }\r\n    dispatch(selectRefDataNewDocumentTypesByContextSource(context, source));\r\n    return () => {\r\n      dispatch(resetDmsDocumentsSearch());\r\n    };\r\n  }, [referenceId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (dmsSearchDataLoader !== isDmsSearchDataLoading) setIsDmsSearchDataLoading(dmsSearchDataLoader);\r\n  }, [dmsSearchDataLoader]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const cols = [\r\n    {\r\n      id: 'multiSelect',\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'fileName',\r\n      label: utils.string.t('dms.search.cols.fileName'),\r\n      sort: { type: 'numeric', direction: 'desc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'hDriveFolders',\r\n      label: utils.string.t('dms.search.cols.hDriveFolders'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'reference',\r\n      label: utils.string.t('dms.search.cols.reference'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'documentTypeDescription',\r\n      label: utils.string.t('dms.search.cols.documentType'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'version',\r\n      label: utils.string.t('dms.search.cols.version'),\r\n      sort: { type: 'numeric', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'userDetails.fullName',\r\n      label: utils.string.t('dms.search.cols.uploadedBy'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    ...[isFnolDmsSearch ? {\r\n      id: 'uploadedDate',\r\n      label: utils.string.t('dms.search.cols.uploadedDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    } : {}],\r\n    { id: 'actionButtons', menu: true, nowrap: true },\r\n  ];\r\n\r\n  const { columns: colsArray } = useFlexiColumns(cols);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'policyId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.policyReference.label'),\r\n      defaultValue: isAutoSearchScreen ? referenceId : '',\r\n    },\r\n    {\r\n      name: 'claimId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.claimReference.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: 'lossId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.lossReference.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: 'insuredName',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.insuredName.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: 'documentType',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('dms.search.fields.documentType.label'),\r\n      placeholder: utils.string.t('dms.search.fields.documentType.placeholder'),\r\n      value: null,\r\n      options: documentTypes,\r\n      optionKey: 'documentTypeID',\r\n      optionLabel: 'documentTypeDescription',\r\n    },\r\n    {\r\n      name: 'documentName',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.documentName.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: 'year',\r\n      type: 'datepicker',\r\n      label: utils.string.t('dms.search.fields.inceptionYear.label'),\r\n      placeholder: utils.string.t('dms.search.fields.inceptionYear.placeholder'),\r\n      value: null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('dms.search.fields.inceptionYear.helperText'),\r\n      },\r\n      muiPickerProps: {\r\n        views: ['year'],\r\n        format: 'YYYY',\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('dms.search.fields.division.label'),\r\n      options: divOptions,\r\n      tagType: 'quantity',\r\n      placeholder: 'Choose Division',\r\n      setSelectOption: setSelectDivisionOption,\r\n      selectedOptions: selectedDivisionOptions,\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentDate`,\r\n      type: 'datepicker',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.paymentDate.label'),\r\n      placeholder: utils.string.t('dms.search.fields.paymentDate.placeholder'),\r\n      value: null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('dms.search.fields.paymentDate.helperText'),\r\n      },\r\n      muiPickerProps: {\r\n        format: config.ui.format.date.slashNumeric,\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentReference`,\r\n      type: 'text',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.paymentReference.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_lossPayee`,\r\n      type: 'text',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.lossPayee.label'),\r\n      value: '',\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_amount`,\r\n      type: 'number',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.amount.label'),\r\n      value: '',\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        setResetKey(new Date().getTime());\r\n        setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('dms.search.btn'),\r\n      handler: (data) => {\r\n        setSearchFields(data);\r\n        setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n        let divIDs = selectedDivisionOptions.map((div) => div.value);\r\n        dispatch(\r\n          searchDmsDocuments(context, contextReferenceObject, {\r\n            ...data,\r\n            divisionIds: divIDs,\r\n            pageSize: searchRowsTotalPreference,\r\n            requestType: bothTypeCall,\r\n            filterRequest: filtersPreference,\r\n          })\r\n        )\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const formProps = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, formProps.reset);\r\n\r\n  const handleDownloadFile = (e, file) => {\r\n    e.stopPropagation();\r\n    dispatch(viewDocumentsDownload(file));\r\n  };\r\n\r\n  const handleLinkFile = (e, file) => {\r\n    e.stopPropagation();\r\n    if (file.isLinked) {\r\n      return;\r\n    }\r\n    confirmDocumentlink([file]);\r\n  };\r\n\r\n  const handleFnolLinkFile = (file, sectionType) => {\r\n    if (file.isLinked) {\r\n      return;\r\n    }\r\n    confirmDocumentlink([file], sectionType);\r\n  };\r\n\r\n  const handleMultipleDownload = () => {\r\n    const selectedDocIds = selectedDocs?.map((docId) => docId.documentId);\r\n    if (selectedDocs?.length !== 1) {\r\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\r\n      return;\r\n    }\r\n    dispatch(viewDocumentsDownload(selectedDocs?.[0]));\r\n  };\r\n\r\n  const handleMutiplelinking = (sectionType = '') => {\r\n    confirmDocumentlink(selectedDocs, sectionType);\r\n  };\r\n\r\n  const resetToDefaultValues = () => {\r\n    setSelectedDocs([]);\r\n    setIsMultiSelect(false);\r\n  };\r\n\r\n  const confirmDocumentlink = (docs, fnolSecType = '') => {\r\n    const requestParams = docs?.map((d) => {\r\n      return {\r\n        documentId: d.documentId,\r\n        referenceId: isFnolDmsSearch ? (fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID) : referenceId,\r\n        sectionType: isFnolDmsSearch ? fnolSecType : context,\r\n      };\r\n    });\r\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\r\n      const claimParams = docs?.map((d) => {\r\n        return {\r\n          documentId: d.documentId,\r\n          referenceId: claimRefID,\r\n          sectionType: constants.DMS_CONTEXT_CLAIM,\r\n        };\r\n      });\r\n      requestParams.push(...claimParams);\r\n    }\r\n    const requestParamsLength = requestParams?.length;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.search.linkDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.search.linkDocument.confirmLabel'),\r\n            confirmMessage:\r\n              requestParamsLength === 1 || (fnolSecType === constants.DMS_CONTEXT_LOSS && !isMultiSelect)\r\n                ? utils.string.t('dms.search.linkDocument.confirmMessage')\r\n                : utils.string.t('dms.search.linkDocument.confirmMessageForMulti', {\r\n                  count: isFnolDmsSearch && fnolSecType === constants.DMS_CONTEXT_LOSS ? requestParamsLength / 2 : requestParamsLength,\r\n                }),\r\n            submitHandler: () =>\r\n              dispatch(linkMultipleDmsDocuments(requestParams)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  resetToDefaultValues();\r\n                  if (utils.generic.isValidArray(Object.values(searchFields), true)) {\r\n                    dispatch(searchDmsDocuments(context, contextReferenceObject, { ...searchFields, pageSize: searchRowsTotalPreference }));\r\n                  }\r\n                  updateClaimFileListAfterLinking();\r\n                  handleFormStatus()\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCheckboxClick = (e, doc) => {\r\n    e.stopPropagation();\r\n    let newlySelectedDocs = [...selectedDocs, doc];\r\n    if (selectedDocs?.includes(doc)) {\r\n      newlySelectedDocs = newlySelectedDocs.filter((selectedDoc) => selectedDoc !== doc);\r\n    }\r\n    setSelectedDocs(newlySelectedDocs);\r\n    handleFormStatus()\r\n  };\r\n\r\n  const showCheckboxesClick = (event) => {\r\n    setIsMultiSelect(event?.target?.checked);\r\n    handleFormStatus()\r\n\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        by,\r\n        dir,\r\n        pageSize: searchRowsTotalPreference,\r\n        requestType: bothTypeCall,\r\n        filterRequest: filtersPreference,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const { columnProps } = useFlexiColumns(cols);\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setSearchRowsTotalPreference(rowsPerPage);\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        requestType: bothTypeCall,\r\n        pageSize: rowsPerPage,\r\n        filterRequest: filtersPreference,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        page: newPage,\r\n        pageSize: searchRowsTotalPreference,\r\n        filterRequest: filtersPreference,\r\n        requestType: bothTypeCall,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const { setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const managedTableFilterFields = [\r\n    !isFnolDmsSearch && {\r\n      id: 'hdriveFolder',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.hDriveFolders'),\r\n      value: [],\r\n      options: documentsList?.filters?.hdriveFolder,\r\n      content: <MultiSelect id=\"hdriveFolder\" search options={documentsList?.filters?.hdriveFolder} />,\r\n    },\r\n    {\r\n      id: 'documentTypeDescription',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.docType'),\r\n      value: [],\r\n      options: documentsList?.filters?.documentTypeDescription,\r\n      content: <MultiSelect id=\"documentTypeDescription\" search options={documentsList?.filters?.documentTypeDescription} />,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.createdBy'),\r\n      value: [],\r\n      options: documentsList?.filters?.createdBy,\r\n      content: <MultiSelect id=\"createdBy\" search options={documentsList?.filters?.createdBy} />,\r\n    },\r\n  ];\r\n\r\n  const resetFilter = () => {\r\n    setValue('hdriveFolder', null);\r\n    setValue('documentTypeDescription', null);\r\n    setValue('createdBy', null);\r\n    setFiltersPreference([]);\r\n    if (!Object.keys(searchFields).length) return;\r\n    dispatch(searchDmsDocuments(context, contextReferenceObject, { ...searchFields }));\r\n  };\r\n\r\n  const handleSearchFilter = ({ search, filters }) => {\r\n    setFiltersPreference(filters);\r\n\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        pageSize: searchRowsTotalPreference,\r\n        requestType: bothTypeCall,\r\n        filterRequest: filters,\r\n      })\r\n    );\r\n  };\r\n\r\n  // TODO\r\n  const resetNotificationFilters = () => {};\r\n\r\n  const viewDocLauncher = (e, doc) => {\r\n    e.preventDefault();\r\n    const { documentId, documentName } = doc;\r\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\r\n  };\r\n\r\n  return (\r\n    <DmsSearchView\r\n      cols={colsArray}\r\n      columnPropsFunc={columnProps}\r\n      rows={documentsList?.files?.data?.searchValue || []}\r\n      fields={fields}\r\n      buttons={{ cancel, submit }}\r\n      isFnolDmsSearch={isFnolDmsSearch}\r\n      formProps={formProps}\r\n      searchExpanded={searchExpanded}\r\n      handlers={{\r\n        download: handleDownloadFile,\r\n        link: handleLinkFile,\r\n        fnolLink: handleFnolLinkFile,\r\n        sort: handleSort,\r\n        handleCheckboxClick: handleCheckboxClick,\r\n        showCheckboxesClick: showCheckboxesClick,\r\n        handleMultipleDownload: handleMultipleDownload,\r\n        handleMutiplelinking: handleMutiplelinking,\r\n        resetFilter,\r\n        handleSearchFilter,\r\n        resetNotificationFilters,\r\n        viewDocLauncher\r\n      }}\r\n      resetKey={resetKey}\r\n      isMultiSelect={isMultiSelect}\r\n      selectedDocs={selectedDocs}\r\n      pagination={{\r\n        page: documentsList?.files?.pagination?.page || 0,\r\n        rowsTotal: documentsList?.files?.pagination?.totalElements || 0,\r\n        rowsPerPage: documentsList?.files?.pagination?.size || searchRowsTotalPreference,\r\n        handlers: {\r\n          handleChangePage: handleChangePage,\r\n          handleChangeRowsPerPage: handleChangeRowsPerPage,\r\n        },\r\n      }}\r\n      tableFilterFields={managedTableFilterFields}\r\n      isFetchingFilters={isFetchingFilters}\r\n      isDmsSearchDataLoading={isDmsSearchDataLoading}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}