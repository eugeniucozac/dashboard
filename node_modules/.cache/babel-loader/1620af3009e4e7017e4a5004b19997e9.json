{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SelectInterest\\\\SelectInterest.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport * as utils from 'utils';\nimport { SelectInterestView } from './SelectInterest.view';\nimport { setInterestValue, hideModal, selectClaimsInterest, getInterest } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectInterest() {\n  _s();\n\n  var _interest$items$find;\n\n  var dispatch = useDispatch();\n  var interest = useSelector(selectClaimsInterest);\n\n  var _useState = useState(interest.selectedInterest),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedInterest = _useState2[0],\n      setSelectedInterest = _useState2[1]; //later we need to remove it\n\n\n  var cols = [{\n    id: 'actions',\n    empty: true,\n    narrow: true\n  }, {\n    id: 'code',\n    label: utils.string.t('claims.claimInformation.code')\n  }, {\n    id: 'rate',\n    label: utils.string.t('claims.claimInformation.rate')\n  }, {\n    id: 'description',\n    label: utils.string.t('claims.claimInformation.description')\n  }];\n  useEffect(function () {\n    dispatch(getInterest());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var interestValue = ((_interest$items$find = interest.items.find(function (item) {\n    return item.policyInterestID.toString() === selectedInterest;\n  })) === null || _interest$items$find === void 0 ? void 0 : _interest$items$find.code) || '';\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      return dispatch(hideModal());\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.submit'),\n    handler: function handler() {\n      dispatch(setInterestValue(interestValue));\n      dispatch(hideModal());\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(SelectInterestView, {\n    cols: cols,\n    interestList: interest.items,\n    actions: actions,\n    selectedInterest: selectedInterest,\n    setSelectedInterest: setSelectedInterest\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectInterest, \"j1Es9Hx2WOpX6+tGqjDSiX9GoNU=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SelectInterest;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectInterest\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SelectInterest/SelectInterest.js"],"names":["React","useState","useEffect","useDispatch","useSelector","utils","SelectInterestView","setInterestValue","hideModal","selectClaimsInterest","getInterest","SelectInterest","dispatch","interest","selectedInterest","setSelectedInterest","cols","id","empty","narrow","label","string","t","interestValue","items","find","item","policyInterestID","toString","code","actions","name","handler"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,gBAAT,EAA2BC,SAA3B,EAAsCC,oBAAtC,EAA4DC,WAA5D,QAA+E,QAA/E;;AAEA,eAAe,SAASC,cAAT,GAA0B;AAAA;;AAAA;;AACvC,MAAMC,QAAQ,GAAGT,WAAW,EAA5B;AACA,MAAMU,QAAQ,GAAGT,WAAW,CAACK,oBAAD,CAA5B;;AAFuC,kBAGSR,QAAQ,CAACY,QAAQ,CAACC,gBAAV,CAHjB;AAAA;AAAA,MAGhCA,gBAHgC;AAAA,MAGdC,mBAHc,kBAG8C;;;AAErF,MAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,KAAK,EAAE,IAAxB;AAA8BC,IAAAA,MAAM,EAAE;AAAtC,GADW,EAEX;AAAEF,IAAAA,EAAE,EAAE,MAAN;AAAcG,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,8BAAf;AAArB,GAFW,EAGX;AAAEL,IAAAA,EAAE,EAAE,MAAN;AAAcG,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,8BAAf;AAArB,GAHW,EAIX;AAAEL,IAAAA,EAAE,EAAE,aAAN;AAAqBG,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,qCAAf;AAA5B,GAJW,CAAb;AAOApB,EAAAA,SAAS,CAAC,YAAM;AACdU,IAAAA,QAAQ,CAACF,WAAW,EAAZ,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAZuC,CAc/B;;AAER,MAAMa,aAAa,GAAG,yBAAAV,QAAQ,CAACW,KAAT,CAAeC,IAAf,CAAoB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,gBAAL,CAAsBC,QAAtB,OAAqCd,gBAA/C;AAAA,GAApB,+EAAsFe,IAAtF,KAA8F,EAApH;AACA,MAAMC,OAAO,GAAG,CACd;AACEC,IAAAA,IAAI,EAAE,QADR;AAEEX,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEU,IAAAA,OAAO,EAAE;AAAA,aAAMpB,QAAQ,CAACJ,SAAS,EAAV,CAAd;AAAA;AAHX,GADc,EAMd;AACEuB,IAAAA,IAAI,EAAE,QADR;AAEEX,IAAAA,KAAK,EAAEf,KAAK,CAACgB,MAAN,CAAaC,CAAb,CAAe,YAAf,CAFT;AAGEU,IAAAA,OAAO,EAAE,mBAAM;AACbpB,MAAAA,QAAQ,CAACL,gBAAgB,CAACgB,aAAD,CAAjB,CAAR;AACAX,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD;AANH,GANc,CAAhB;AAgBA,sBACE,QAAC,kBAAD;AACE,IAAA,IAAI,EAAEQ,IADR;AAEE,IAAA,YAAY,EAAEH,QAAQ,CAACW,KAFzB;AAGE,IAAA,OAAO,EAAEM,OAHX;AAIE,IAAA,gBAAgB,EAAEhB,gBAJpB;AAKE,IAAA,mBAAmB,EAAEC;AALvB;AAAA;AAAA;AAAA;AAAA,UADF;AASD;;GA1CuBJ,c;UACLR,W,EACAC,W;;;KAFKO,c","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { SelectInterestView } from './SelectInterest.view';\r\nimport { setInterestValue, hideModal, selectClaimsInterest, getInterest } from 'stores';\r\n\r\nexport default function SelectInterest() {\r\n  const dispatch = useDispatch();\r\n  const interest = useSelector(selectClaimsInterest);\r\n  const [selectedInterest, setSelectedInterest] = useState(interest.selectedInterest); //later we need to remove it\r\n\r\n  const cols = [\r\n    { id: 'actions', empty: true, narrow: true },\r\n    { id: 'code', label: utils.string.t('claims.claimInformation.code') },\r\n    { id: 'rate', label: utils.string.t('claims.claimInformation.rate') },\r\n    { id: 'description', label: utils.string.t('claims.claimInformation.description') },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    dispatch(getInterest());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const interestValue = interest.items.find((item) => item.policyInterestID.toString() === selectedInterest)?.code || '';\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => dispatch(hideModal()),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.submit'),\r\n      handler: () => {\r\n        dispatch(setInterestValue(interestValue));\r\n        dispatch(hideModal());\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SelectInterestView\r\n      cols={cols}\r\n      interestList={interest.items}\r\n      actions={actions}\r\n      selectedInterest={selectedInterest}\r\n      setSelectedInterest={setSelectedInterest}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}