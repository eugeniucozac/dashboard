{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DmsTable\\\\DmsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { firstBy } from 'thenby'; // app\n\nimport { DmsTableView } from './DmsTable.view';\nimport * as utils from 'utils';\nimport { showModal, hideModal, unlinkDmsViewDocuments, viewDocumentsDownload, viewDocumentsDelete, setDmsContext, viewDocumentsMultiDownload, selectContextSubType, getDmsEditMetadata, getDmsMetaData, addLoader, selectDmsFileViewGridDataLoader, selectUserRole, getViewTableDocuments, selectCaseDetails, enqueueNotification, linkMultipleDmsDocuments } from 'stores';\nimport * as constants from 'consts';\nimport { usePagination } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsTable.propTypes = {\n  columnsData: PropTypes.array.isRequired,\n  showHeader: PropTypes.bool,\n  canUpload: PropTypes.bool,\n  canSearch: PropTypes.bool,\n  canUnlink: PropTypes.bool,\n  canDelete: PropTypes.bool,\n  canMultiSelect: PropTypes.bool,\n  canEditMetaData: PropTypes.bool,\n  canLink: PropTypes.bool,\n  canLinkToParentContext: PropTypes.bool,\n  fnolViewOptions: PropTypes.object,\n  context: PropTypes.oneOf(['Claim', 'Loss', 'Policy', 'Task', 'Case']).isRequired,\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\n  referenceId: PropTypes.string.isRequired,\n  sourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  parentLossRef: PropTypes.string,\n  searchParamsAfterUpload: PropTypes.shape({\n    referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\n    sectionType: PropTypes.string.isRequired\n  }),\n  parentContext: PropTypes.string,\n  parentContextId: PropTypes.string,\n  refData: PropTypes.object,\n  handlers: PropTypes.shape({\n    onUnlinkorDeleteSuccess: PropTypes.func,\n    onSelectFile: PropTypes.func,\n    onClosingUploadModal: PropTypes.func,\n    onLink: PropTypes.func\n  })\n};\nDmsTable.defaultProps = {\n  showHeader: true,\n  canUpload: true,\n  canSearch: true,\n  canUnlink: true,\n  canDelete: true,\n  canMultiSelect: true,\n  canEditMetaData: true,\n  canLink: false,\n  canLinkToParentContext: false,\n  parentContext: '',\n  parentContextId: '',\n  fnolViewOptions: {\n    isClaimsFNOL: false,\n    isClaimsUploadDisabled: false,\n    isDmsDocumentMenuDisabled: false,\n    claimsSearchDocumentsTxt: utils.string.t('dms.view.searchDocuments')\n  },\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy\n};\nexport default function DmsTable(_ref) {\n  _s();\n\n  var _utils$dmsFormatter;\n\n  var columnsData = _ref.columnsData,\n      showHeader = _ref.showHeader,\n      canUpload = _ref.canUpload,\n      canSearch = _ref.canSearch,\n      canUnlink = _ref.canUnlink,\n      canDelete = _ref.canDelete,\n      canMultiSelect = _ref.canMultiSelect,\n      canEditMetaData = _ref.canEditMetaData,\n      canLink = _ref.canLink,\n      fnolViewOptions = _ref.fnolViewOptions,\n      context = _ref.context,\n      documentTypeKey = _ref.documentTypeKey,\n      referenceId = _ref.referenceId,\n      sourceId = _ref.sourceId,\n      parentLossRef = _ref.parentLossRef,\n      searchParamsAfterUpload = _ref.searchParamsAfterUpload,\n      handlers = _ref.handlers,\n      canLinkToParentContext = _ref.canLinkToParentContext,\n      parentContext = _ref.parentContext,\n      parentContextId = _ref.parentContextId;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      search = _useState2[0],\n      setSearch = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      resetKey = _useState4[0],\n      setResetKey = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      originalTableData = _useState6[0],\n      setOriginalTableData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filteredTableData = _useState8[0],\n      setFilteredTableData = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchIndex = _useState10[0],\n      setSearchIndex = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isMultiSelect = _useState12[0],\n      setIsMultiSelect = _useState12[1];\n\n  var _useState13 = useState([]),\n      _useState14 = _slicedToArray(_useState13, 2),\n      selectedDocs = _useState14[0],\n      setSelectedDocs = _useState14[1];\n\n  var _useState15 = useState(constants.DMS_PAGINATION_DEFAULT_PAGE),\n      _useState16 = _slicedToArray(_useState15, 2),\n      newPage = _useState16[0],\n      setNewPage = _useState16[1];\n\n  var _useState17 = useState(constants.DMS_DEFAULT_ROWS_PER_PAGE),\n      _useState18 = _slicedToArray(_useState17, 2),\n      rowsPerPage = _useState18[0],\n      setRowsPerPage = _useState18[1];\n\n  var DmsFileViewGridDataLoading = useSelector(selectDmsFileViewGridDataLoader);\n  var contextSubType = useSelector(selectContextSubType);\n  var currentUser = useSelector(selectUserRole);\n  var ppCaseDetails = useSelector(selectCaseDetails); // TODO will be later coming as props\n\n  var xbInstanceId = sourceId ? sourceId : constants.DMS_CLAIM_SOURCE_ID;\n\n  var _useState19 = useState(DmsFileViewGridDataLoading),\n      _useState20 = _slicedToArray(_useState19, 2),\n      isDmsFileViewGridDataLoading = _useState20[0],\n      setIsDmsFileViewGridDataLoading = _useState20[1];\n\n  useEffect(function () {\n    setIsDmsFileViewGridDataLoading(DmsFileViewGridDataLoading);\n  }, [DmsFileViewGridDataLoading]);\n  var isWorkBasketOrAllCases = (ppCaseDetails === null || ppCaseDetails === void 0 ? void 0 : ppCaseDetails.taskView) === constants.WORKBASKET || (ppCaseDetails === null || ppCaseDetails === void 0 ? void 0 : ppCaseDetails.taskView) === constants.ALL_CASES;\n  var isSeniorManager = utils.generic.isValidArray(currentUser, true) && currentUser.some(function (item) {\n    return [constants.SENIOR_MANAGER.toLowerCase()].includes(item.name.toLowerCase());\n  });\n  useEffect(function () {\n    var tableDataString = function tableDataString(data, allValues) {\n      if (!allValues) allValues = [];\n\n      for (var key in data) {\n        if (typeof data[key] === 'object') tableDataString(data[key], allValues);else allValues.push(\"\".concat(data[key], \"' '\"));\n      }\n\n      return allValues;\n    };\n\n    var setInitialTableData = function setInitialTableData() {\n      setOriginalTableData(columnsData);\n      setFilteredTableData(columnsData);\n      var searchInd = columnsData === null || columnsData === void 0 ? void 0 : columnsData.map(function (data) {\n        var allValues = tableDataString(data);\n        return {\n          allValues: allValues.toString()\n        };\n      });\n      setSearchIndex(searchInd);\n    };\n\n    setInitialTableData();\n  }, [columnsData]);\n  useEffect(function () {\n    if (search) {\n      var newFilteredTableData = searchIndex === null || searchIndex === void 0 ? void 0 : searchIndex.map(function (data, index) {\n        var _data$allValues;\n\n        if ((data === null || data === void 0 ? void 0 : (_data$allValues = data.allValues) === null || _data$allValues === void 0 ? void 0 : _data$allValues.toLowerCase().indexOf(search.toLowerCase())) >= 0) return originalTableData[index];\n        return null;\n      });\n      setFilteredTableData(newFilteredTableData === null || newFilteredTableData === void 0 ? void 0 : newFilteredTableData.filter(function (data) {\n        if (data) return true;\n        return false;\n      }));\n    } else setFilteredTableData(originalTableData);\n  }, [search, originalTableData, searchIndex]);\n  var isDmsFromPiRiskRef = [constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder, constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo].includes(documentTypeKey);\n  useEffect(function () {\n    setFilteredTableData(originalTableData === null || originalTableData === void 0 ? void 0 : originalTableData.slice(newPage * rowsPerPage, newPage * rowsPerPage + rowsPerPage));\n  }, [newPage, rowsPerPage, originalTableData]);\n  var isClaims = utils.dms.checkIfClaimsScreenContext(context) || false;\n  var cols = [{\n    id: 'multiSelect',\n    visible: true\n  }].concat(_toConsumableArray(!isDmsFromPiRiskRef ? [{\n    id: 'folderName',\n    label: utils.string.t('dms.view.columns.folderName'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }] : []), [{\n    id: 'documentName',\n    label: utils.string.t('dms.view.columns.documentName'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'documentSource',\n    label: utils.string.t('dms.view.columns.documentSource'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }], _toConsumableArray(!isDmsFromPiRiskRef && !(fnolViewOptions === null || fnolViewOptions === void 0 ? void 0 : fnolViewOptions.isClaimsFNOL) ? [{\n    id: 'hDriveFolders',\n    label: utils.string.t('dms.view.columns.hDriveFolders'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }] : []), [{\n    id: 'documentTypeDescription',\n    label: utils.string.t('dms.view.columns.documentType'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'docClassification',\n    label: utils.string.t('dms.view.columns.documentClassification'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'updatedDate',\n    label: utils.string.t('dms.view.columns.uploadedDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    }\n  }, {\n    id: 'createdByName',\n    label: utils.string.t('dms.view.columns.uploadedBy'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'documentVersion',\n    label: utils.string.t('dms.view.columns.documentVersion'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }], _toConsumableArray(!((fnolViewOptions === null || fnolViewOptions === void 0 ? void 0 : fnolViewOptions.isClaimsFNOL) || isClaims) ? [{\n    id: 'createdDate',\n    label: utils.string.t('dms.view.columns.creationDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    visible: true\n  }] : []), [{\n    id: 'actions',\n    menu: true,\n    visible: true\n  }]);\n\n  var resetToDefaultValues = function resetToDefaultValues() {\n    handlers.onUnlinkorDeleteSuccess();\n    setSelectedDocs([]);\n    setIsMultiSelect(false);\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    setNewPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setNewPage(constants.DMS_PAGINATION_DEFAULT_PAGE);\n    setRowsPerPage(rowsPerPage);\n  };\n\n  var pagination = usePagination(filteredTableData || [], {\n    page: newPage || constants.DMS_PAGINATION_DEFAULT_PAGE,\n    rowsTotal: originalTableData.length || 0,\n    rowsPerPage: rowsPerPage\n  }, handleChangePage, handleChangeRowsPerPage);\n\n  var confirmDocumentUnlink = function confirmDocumentUnlink(docs) {\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n      return {\n        documentId: d.documentId,\n        referenceId: referenceId,\n        sectionType: context\n      };\n    });\n    var requestParamsLength = requestParams === null || requestParams === void 0 ? void 0 : requestParams.length;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.unlinkDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.unlinkDocument.confirmLabel'),\n          confirmMessage: requestParamsLength === 1 ? utils.string.t('dms.view.unlinkDocument.confirmMessage') : utils.string.t('dms.view.unlinkDocument.confirmMessageForMulti', {\n            count: requestParamsLength\n          }),\n          submitHandler: function submitHandler() {\n            return dispatch(unlinkDmsViewDocuments(requestParams)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                resetToDefaultValues();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var confirmDocumentDelete = function confirmDocumentDelete(docs) {\n    // GXB sharepoint sourced docs cannot be deleted\n    var hasGxbDocs = selectedDocs.some(function (doc) {\n      return isGxbDocument(doc);\n    });\n    var documentIds = hasGxbDocs ? docs === null || docs === void 0 ? void 0 : docs.filter(function (doc) {\n      return !isGxbDocument(doc);\n    }).map(function (doc) {\n      return doc.documentId;\n    }) : docs === null || docs === void 0 ? void 0 : docs.map(function (doc) {\n      return doc.documentId;\n    });\n    var documentIdsLength = documentIds === null || documentIds === void 0 ? void 0 : documentIds.length;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.deleteDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\n          confirmMessage: documentIdsLength === 1 ? utils.string.t('dms.view.deleteDocument.confirmMessage') : utils.string.t('dms.view.deleteDocument.confirmMessageForMulti', {\n            count: documentIdsLength\n          }),\n          warningMessage: hasGxbDocs ? utils.string.t('dms.view.deleteDocument.gxbDocsDeleteWarning') : '',\n          submitHandler: function submitHandler() {\n            return dispatch(viewDocumentsDelete(documentIds)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                resetToDefaultValues();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var showVersionHistoryModal = function showVersionHistoryModal(docData) {\n    dispatch(showModal({\n      component: 'DMS_VERSION_HISTORY',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.versionHistory.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          docData: docData\n        }\n      }\n    }));\n  };\n\n  var launchEditMetadataModel = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(doc) {\n      var refinedReferenceId;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              refinedReferenceId = getRefIdForContext();\n              dispatch(setDmsContext(context));\n              _context.next = 4;\n              return dispatch(getDmsMetaData(context, xbInstanceId, referenceId));\n\n            case 4:\n              _context.next = 6;\n              return dispatch(getDmsEditMetadata(doc === null || doc === void 0 ? void 0 : doc.documentId, doc === null || doc === void 0 ? void 0 : doc.docClassification)).then(function (res) {\n                if ((res === null || res === void 0 ? void 0 : res.status) === constants.API_RESPONSE_OK) {\n                  dispatch(showModal({\n                    component: 'DMS_EDIT_META_DATA',\n                    props: {\n                      fullWidth: true,\n                      title: utils.string.t('dms.view.editMetadata.title'),\n                      maxWidth: 'xl',\n                      componentProps: {\n                        docData: doc,\n                        context: context,\n                        referenceId: refinedReferenceId,\n                        selectedSourceId: sourceId,\n                        documentTypeKey: documentTypeKey,\n                        searchParamsAfterUpload: searchParamsAfterUpload,\n                        cancelHandler: function cancelHandler() {\n                          dispatch(hideModal('DMS_EDIT_META_DATA'));\n                        }\n                      }\n                    }\n                  }));\n                }\n              });\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function launchEditMetadataModel(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var linkDocToParentContext = function linkDocToParentContext(docs) {\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (doc) {\n      return {\n        documentId: doc.documentId,\n        referenceId: parentContextId,\n        sectionType: parentContext\n      };\n    });\n\n    if (!utils.generic.isInvalidOrEmptyArray(requestParams)) {\n      dispatch(linkMultipleDmsDocuments(requestParams)).then(function (response) {\n        if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n          resetToDefaultValues();\n        }\n      });\n    }\n  };\n\n  var popoverActions = [{\n    id: 'download',\n    label: utils.string.t('dms.view.popOverMenuItems.download'),\n    callback: function callback(_ref3) {\n      var doc = _ref3.doc;\n      return dispatch(viewDocumentsDownload(doc));\n    }\n  }].concat(_toConsumableArray(canUnlink ? [{\n    id: 'unlink',\n    label: utils.string.t('dms.view.popOverMenuItems.unlink'),\n    disabled: isWorkBasketOrAllCases,\n    callback: function callback(_ref4) {\n      var doc = _ref4.doc;\n      return confirmDocumentUnlink([doc]);\n    }\n  }] : []), _toConsumableArray(canDelete ? [{\n    id: 'delete',\n    label: utils.string.t('dms.view.popOverMenuItems.delete'),\n    disabled: isWorkBasketOrAllCases,\n    callback: function callback(_ref5) {\n      var doc = _ref5.doc;\n      return confirmDocumentDelete([doc]);\n    }\n  }] : []), [{\n    id: 'versionHistory',\n    label: utils.string.t('dms.view.popOverMenuItems.versionHistory'),\n    callback: function callback(_ref6) {\n      var doc = _ref6.doc;\n      return showVersionHistoryModal(doc);\n    }\n  }], _toConsumableArray(canEditMetaData ? [{\n    id: 'editMetaData',\n    label: utils.string.t('dms.view.popOverMenuItems.editMetadata'),\n    disabled: isWorkBasketOrAllCases,\n    callback: function callback(_ref7) {\n      var doc = _ref7.doc;\n      return launchEditMetadataModel(doc);\n    }\n  }] : []), _toConsumableArray(canLink ? [{\n    id: 'LinkTo',\n    label: utils.string.t('dms.view.popOverMenuItems.linkTo'),\n    callback: function callback(_ref8) {\n      var doc = _ref8.doc;\n      return handlers.onLink([doc], resetToDefaultValues);\n    }\n  }] : []), _toConsumableArray(canLinkToParentContext ? [{\n    id: 'LinkToParentContext',\n    label: \"\".concat(utils.string.t('dms.view.popOverMenuItems.linkTo'), \" \").concat(parentContext),\n    callback: function callback(_ref9) {\n      var doc = _ref9.doc;\n      return linkDocToParentContext([doc]);\n    }\n  }] : []));\n\n  var resetSearch = function resetSearch() {\n    setResetKey(new Date().getTime());\n    setSearch('');\n  };\n\n  var submitSearch = function submitSearch(query) {\n    setSearch(query);\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    originalTableData === null || originalTableData === void 0 ? void 0 : originalTableData.sort(firstBy(utils.sort.array('lexical', by, dir)));\n  };\n\n  var launchDmsUpload = function launchDmsUpload() {\n    return function (files) {\n      dispatch(addLoader('DmsUploadFiles'));\n      var refinedReferenceId = getRefIdForContext();\n      dispatch(showModal({\n        component: 'DMS_UPLOAD_FILES',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('dms.upload.modalItems.uploadDocuments'),\n          hideCompOnBlur: false,\n          maxWidth: 'lg',\n          componentProps: {\n            files: files,\n            context: context,\n            referenceId: refinedReferenceId,\n            sourceId: sourceId,\n            documentTypeKey: documentTypeKey,\n            searchParamsAfterUpload: searchParamsAfterUpload,\n            confirmLabel: utils.string.t('app.ok'),\n            cancelLabel: utils.string.t('app.goBack'),\n            confirmMessage: utils.string.t('processingInstructions.documentsWillNotBeSaved'),\n            buttonColors: {\n              confirm: 'secondary',\n              cancel: 'primary'\n            },\n            onClosingUploadModal: function onClosingUploadModal() {\n              return handleUploadModalClose();\n            }\n          }\n        }\n      }));\n    };\n  };\n\n  var handleUploadModalClose = function handleUploadModalClose() {\n    // Premium Processing Case Details\n    var policyRef = ppCaseDetails === null || ppCaseDetails === void 0 ? void 0 : ppCaseDetails.policyRef;\n    var instructionId = ppCaseDetails === null || ppCaseDetails === void 0 ? void 0 : ppCaseDetails.instructionId;\n\n    if (!utils.dmsFormatter.isDmsFromPiInstruction(documentTypeKey)) {\n      // Refresh DmsTable Data once Upload is done\n      dispatch(getViewTableDocuments(_objectSpread({}, searchParamsAfterUpload ? searchParamsAfterUpload : _objectSpread({\n        referenceId: referenceId,\n        sectionType: context,\n        documentTypeKey: documentTypeKey,\n        parentLossRef: parentLossRef\n      }, policyRef && instructionId && {\n        policyRef: policyRef,\n        instructionId: instructionId\n      }))));\n    }\n  };\n\n  var handleCheckboxClick = function handleCheckboxClick(e, doc) {\n    e.stopPropagation();\n    var newlySelectedDocs = [].concat(_toConsumableArray(selectedDocs), [doc]);\n\n    if (selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.find(function (docs) {\n      return docs.documentId === doc.documentId;\n    })) {\n      newlySelectedDocs = newlySelectedDocs.filter(function (selectedDoc) {\n        return selectedDoc.documentId !== doc.documentId;\n      });\n    }\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onSelectFile)) {\n      handlers.onSelectFile(newlySelectedDocs);\n    }\n\n    setSelectedDocs(newlySelectedDocs);\n  };\n\n  var checkLinkedToMultipleContexts = function checkLinkedToMultipleContexts(docList) {\n    var linkedDocList = [];\n\n    if (utils.generic.isValidArray(docList, true)) {\n      var selectedDocList = _toConsumableArray(docList);\n\n      selectedDocList.forEach(function (doc) {\n        if (doc === null || doc === void 0 ? void 0 : doc.isLinkedToMultipleContexts) {\n          linkedDocList.push(doc.documentName);\n        }\n      });\n    }\n\n    return linkedDocList;\n  };\n\n  var showCheckboxesClick = function showCheckboxesClick(event) {\n    var _event$target;\n\n    setIsMultiSelect(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.checked);\n  };\n\n  var handleMultipleDownload = function handleMultipleDownload() {\n    var selectedDocIds = selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.map(function (docId) {\n      return docId.documentId;\n    });\n\n    if ((selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.length) !== 1) {\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\n      return;\n    }\n\n    dispatch(viewDocumentsDownload(selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs[0]));\n  };\n\n  var handleMutipleUnlinking = function handleMutipleUnlinking() {\n    confirmDocumentUnlink(selectedDocs);\n  };\n\n  var handleMutipleDelete = function handleMutipleDelete() {\n    var linkedDocList = checkLinkedToMultipleContexts(selectedDocs);\n\n    if (utils.generic.isValidArray(linkedDocList, true)) {\n      var errorText = \"\".concat(utils.string.t('dms.view.deleteDocument.deleteWarning'), \" \\n   -   \").concat(linkedDocList.join('\\n   -   '));\n      dispatch(enqueueNotification(errorText, 'error'));\n    }\n\n    confirmDocumentDelete(selectedDocs);\n  };\n\n  var handleMutipleLink = function handleMutipleLink() {\n    handlers.onLink(selectedDocs, resetToDefaultValues);\n  };\n\n  var isGxbDocument = function isGxbDocument(doc) {\n    return doc.srcApplication === constants.DMS_SHAREPATH_SOURCES.gxb;\n  };\n\n  var getRefIdForContext = function getRefIdForContext() {\n    var type = contextSubType.type,\n        caseIncidentNotesID = contextSubType.caseIncidentNotesID,\n        refId = contextSubType.refId;\n\n    if (type === constants.DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE) {\n      return caseIncidentNotesID ? refId + '-' + caseIncidentNotesID : refId;\n    } else if (type === constants.DMS_TASK_CONTEXT_TYPE_RFI || type === constants.DMS_TASK_CONTEXT_TYPE_ADHOC) {\n      return refId;\n    } else {\n      return referenceId;\n    }\n  };\n\n  var docClassification = utils === null || utils === void 0 ? void 0 : (_utils$dmsFormatter = utils.dmsFormatter) === null || _utils$dmsFormatter === void 0 ? void 0 : _utils$dmsFormatter.getDocumentClassificationList();\n  var docClassificationList = new Map(docClassification === null || docClassification === void 0 ? void 0 : docClassification.map(function (item) {\n    return [item === null || item === void 0 ? void 0 : item.id, item === null || item === void 0 ? void 0 : item.value];\n  }));\n\n  var getDocClassification = function getDocClassification(value) {\n    return docClassificationList === null || docClassificationList === void 0 ? void 0 : docClassificationList.get(Number(value));\n  }; // abort\n\n\n  if (!columnsData) return null;\n  return /*#__PURE__*/_jsxDEV(DmsTableView, {\n    cols: cols,\n    documents: filteredTableData,\n    pagination: pagination,\n    popoverActions: popoverActions,\n    search: search,\n    resetKey: resetKey,\n    isMultiSelect: isMultiSelect,\n    showHeader: showHeader,\n    canUpload: canUpload,\n    canSearch: canSearch,\n    canUnlink: canUnlink,\n    canDelete: canDelete,\n    canMultiSelect: canMultiSelect,\n    canLink: canLink,\n    fnolViewOptions: fnolViewOptions,\n    selectedDocs: selectedDocs,\n    isDmsFromPiRiskRef: isDmsFromPiRiskRef,\n    isWorkBasketOrAllCases: isWorkBasketOrAllCases,\n    isDmsFileViewGridDataLoading: isDmsFileViewGridDataLoading,\n    isSeniorManager: isSeniorManager,\n    isClaims: isClaims,\n    getDocClassification: getDocClassification,\n    canLinkToParentContext: canLinkToParentContext,\n    parentContext: parentContext,\n    handlers: {\n      resetSearch: resetSearch,\n      submitSearch: submitSearch,\n      handleSort: handleSort,\n      uploadModal: launchDmsUpload,\n      handleCheckboxClick: handleCheckboxClick,\n      showCheckboxesClick: showCheckboxesClick,\n      handleMultipleDownload: handleMultipleDownload,\n      handleMutipleUnlinking: handleMutipleUnlinking,\n      handleMutipleDelete: handleMutipleDelete,\n      handleMutipleLink: handleMutipleLink,\n      linkDocToParentContext: linkDocToParentContext\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 619,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsTable, \"pz02tVm02smibykYPi9nCiCISko=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = DmsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DmsTable/DmsTable.js"],"names":["React","useState","useEffect","useDispatch","useSelector","PropTypes","firstBy","DmsTableView","utils","showModal","hideModal","unlinkDmsViewDocuments","viewDocumentsDownload","viewDocumentsDelete","setDmsContext","viewDocumentsMultiDownload","selectContextSubType","getDmsEditMetadata","getDmsMetaData","addLoader","selectDmsFileViewGridDataLoader","selectUserRole","getViewTableDocuments","selectCaseDetails","enqueueNotification","linkMultipleDmsDocuments","constants","usePagination","DmsTable","propTypes","columnsData","array","isRequired","showHeader","bool","canUpload","canSearch","canUnlink","canDelete","canMultiSelect","canEditMetaData","canLink","canLinkToParentContext","fnolViewOptions","object","context","oneOf","documentTypeKey","Object","values","DMS_DOCUMENT_TYPE_SECTION_KEYS","referenceId","string","sourceId","oneOfType","number","parentLossRef","searchParamsAfterUpload","shape","sectionType","parentContext","parentContextId","refData","handlers","onUnlinkorDeleteSuccess","func","onSelectFile","onClosingUploadModal","onLink","defaultProps","isClaimsFNOL","isClaimsUploadDisabled","isDmsDocumentMenuDisabled","claimsSearchDocumentsTxt","t","policy","dispatch","search","setSearch","resetKey","setResetKey","originalTableData","setOriginalTableData","filteredTableData","setFilteredTableData","searchIndex","setSearchIndex","isMultiSelect","setIsMultiSelect","selectedDocs","setSelectedDocs","DMS_PAGINATION_DEFAULT_PAGE","newPage","setNewPage","DMS_DEFAULT_ROWS_PER_PAGE","rowsPerPage","setRowsPerPage","DmsFileViewGridDataLoading","contextSubType","currentUser","ppCaseDetails","xbInstanceId","DMS_CLAIM_SOURCE_ID","isDmsFileViewGridDataLoading","setIsDmsFileViewGridDataLoading","isWorkBasketOrAllCases","taskView","WORKBASKET","ALL_CASES","isSeniorManager","generic","isValidArray","some","item","SENIOR_MANAGER","toLowerCase","includes","name","tableDataString","data","allValues","key","push","setInitialTableData","searchInd","map","toString","newFilteredTableData","index","indexOf","filter","isDmsFromPiRiskRef","piEndorsement","piFABorder","piClosingFdo","slice","isClaims","dms","checkIfClaimsScreenContext","cols","id","visible","label","sort","type","direction","menu","resetToDefaultValues","handleChangePage","handleChangeRowsPerPage","pagination","page","rowsTotal","length","confirmDocumentUnlink","docs","requestParams","d","documentId","requestParamsLength","component","props","fullWidth","title","maxWidth","componentProps","confirmLabel","confirmMessage","count","submitHandler","then","response","status","API_RESPONSE_OK","confirmDocumentDelete","hasGxbDocs","doc","isGxbDocument","documentIds","documentIdsLength","warningMessage","showVersionHistoryModal","docData","launchEditMetadataModel","refinedReferenceId","getRefIdForContext","docClassification","res","selectedSourceId","cancelHandler","linkDocToParentContext","isInvalidOrEmptyArray","popoverActions","callback","disabled","resetSearch","Date","getTime","submitSearch","query","handleSort","by","dir","launchDmsUpload","files","hideCompOnBlur","cancelLabel","buttonColors","confirm","cancel","handleUploadModalClose","policyRef","instructionId","dmsFormatter","isDmsFromPiInstruction","handleCheckboxClick","e","stopPropagation","newlySelectedDocs","find","selectedDoc","isFunction","checkLinkedToMultipleContexts","docList","linkedDocList","selectedDocList","forEach","isLinkedToMultipleContexts","documentName","showCheckboxesClick","event","target","checked","handleMultipleDownload","selectedDocIds","docId","handleMutipleUnlinking","handleMutipleDelete","errorText","join","handleMutipleLink","srcApplication","DMS_SHAREPATH_SOURCES","gxb","caseIncidentNotesID","refId","DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE","DMS_TASK_CONTEXT_TYPE_RFI","DMS_TASK_CONTEXT_TYPE_ADHOC","getDocumentClassificationList","docClassificationList","Map","value","getDocClassification","get","Number","uploadModal"],"mappings":";;;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;;AACA,SAASC,YAAT,QAA6B,iBAA7B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,SADF,EAEEC,SAFF,EAGEC,sBAHF,EAIEC,qBAJF,EAKEC,mBALF,EAMEC,aANF,EAOEC,0BAPF,EAQEC,oBARF,EASEC,kBATF,EAUEC,cAVF,EAWEC,SAXF,EAYEC,+BAZF,EAaEC,cAbF,EAcEC,qBAdF,EAeEC,iBAfF,EAgBEC,mBAhBF,EAiBEC,wBAjBF,QAkBO,QAlBP;AAmBA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,SAASC,aAAT,QAA8B,OAA9B;;AAGAC,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,WAAW,EAAEzB,SAAS,CAAC0B,KAAV,CAAgBC,UADV;AAEnBC,EAAAA,UAAU,EAAE5B,SAAS,CAAC6B,IAFH;AAGnBC,EAAAA,SAAS,EAAE9B,SAAS,CAAC6B,IAHF;AAInBE,EAAAA,SAAS,EAAE/B,SAAS,CAAC6B,IAJF;AAKnBG,EAAAA,SAAS,EAAEhC,SAAS,CAAC6B,IALF;AAMnBI,EAAAA,SAAS,EAAEjC,SAAS,CAAC6B,IANF;AAOnBK,EAAAA,cAAc,EAAElC,SAAS,CAAC6B,IAPP;AAQnBM,EAAAA,eAAe,EAAEnC,SAAS,CAAC6B,IARR;AASnBO,EAAAA,OAAO,EAAEpC,SAAS,CAAC6B,IATA;AAUnBQ,EAAAA,sBAAsB,EAAErC,SAAS,CAAC6B,IAVf;AAWnBS,EAAAA,eAAe,EAAEtC,SAAS,CAACuC,MAXR;AAYnBC,EAAAA,OAAO,EAAExC,SAAS,CAACyC,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,EAAkB,QAAlB,EAA4B,MAA5B,EAAoC,MAApC,CAAhB,EAA6Dd,UAZnD;AAanBe,EAAAA,eAAe,EAAE1C,SAAS,CAACyC,KAAV,CAAgBE,MAAM,CAACC,MAAP,CAAcvB,SAAS,CAACwB,8BAAxB,CAAhB,CAbE;AAcnBC,EAAAA,WAAW,EAAE9C,SAAS,CAAC+C,MAAV,CAAiBpB,UAdX;AAenBqB,EAAAA,QAAQ,EAAEhD,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAAC+C,MAA7B,CAApB,CAfS;AAgBnBI,EAAAA,aAAa,EAAEnD,SAAS,CAAC+C,MAhBN;AAiBnBK,EAAAA,uBAAuB,EAAEpD,SAAS,CAACqD,KAAV,CAAgB;AACvCP,IAAAA,WAAW,EAAE9C,SAAS,CAACiD,SAAV,CAAoB,CAACjD,SAAS,CAACkD,MAAX,EAAmBlD,SAAS,CAAC+C,MAA7B,CAApB,EAA0DpB,UADhC;AAEvC2B,IAAAA,WAAW,EAAEtD,SAAS,CAAC+C,MAAV,CAAiBpB;AAFS,GAAhB,CAjBN;AAqBnB4B,EAAAA,aAAa,EAAEvD,SAAS,CAAC+C,MArBN;AAsBnBS,EAAAA,eAAe,EAAExD,SAAS,CAAC+C,MAtBR;AAuBnBU,EAAAA,OAAO,EAAEzD,SAAS,CAACuC,MAvBA;AAwBnBmB,EAAAA,QAAQ,EAAE1D,SAAS,CAACqD,KAAV,CAAgB;AACxBM,IAAAA,uBAAuB,EAAE3D,SAAS,CAAC4D,IADX;AAExBC,IAAAA,YAAY,EAAE7D,SAAS,CAAC4D,IAFA;AAGxBE,IAAAA,oBAAoB,EAAE9D,SAAS,CAAC4D,IAHR;AAIxBG,IAAAA,MAAM,EAAE/D,SAAS,CAAC4D;AAJM,GAAhB;AAxBS,CAArB;AAgCArC,QAAQ,CAACyC,YAAT,GAAwB;AACtBpC,EAAAA,UAAU,EAAE,IADU;AAEtBE,EAAAA,SAAS,EAAE,IAFW;AAGtBC,EAAAA,SAAS,EAAE,IAHW;AAItBC,EAAAA,SAAS,EAAE,IAJW;AAKtBC,EAAAA,SAAS,EAAE,IALW;AAMtBC,EAAAA,cAAc,EAAE,IANM;AAOtBC,EAAAA,eAAe,EAAE,IAPK;AAQtBC,EAAAA,OAAO,EAAE,KARa;AAStBC,EAAAA,sBAAsB,EAAE,KATF;AAUtBkB,EAAAA,aAAa,EAAE,EAVO;AAWtBC,EAAAA,eAAe,EAAE,EAXK;AAYtBlB,EAAAA,eAAe,EAAE;AACf2B,IAAAA,YAAY,EAAE,KADC;AAEfC,IAAAA,sBAAsB,EAAE,KAFT;AAGfC,IAAAA,yBAAyB,EAAE,KAHZ;AAIfC,IAAAA,wBAAwB,EAAEjE,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,0BAAf;AAJX,GAZK;AAkBtB3B,EAAAA,eAAe,EAAErB,SAAS,CAACwB,8BAAV,CAAyCyB;AAlBpC,CAAxB;AAqBA,eAAe,SAAS/C,QAAT,OAqBZ;AAAA;;AAAA;;AAAA,MApBDE,WAoBC,QApBDA,WAoBC;AAAA,MAnBDG,UAmBC,QAnBDA,UAmBC;AAAA,MAlBDE,SAkBC,QAlBDA,SAkBC;AAAA,MAjBDC,SAiBC,QAjBDA,SAiBC;AAAA,MAhBDC,SAgBC,QAhBDA,SAgBC;AAAA,MAfDC,SAeC,QAfDA,SAeC;AAAA,MAdDC,cAcC,QAdDA,cAcC;AAAA,MAbDC,eAaC,QAbDA,eAaC;AAAA,MAZDC,OAYC,QAZDA,OAYC;AAAA,MAXDE,eAWC,QAXDA,eAWC;AAAA,MAVDE,OAUC,QAVDA,OAUC;AAAA,MATDE,eASC,QATDA,eASC;AAAA,MARDI,WAQC,QARDA,WAQC;AAAA,MAPDE,QAOC,QAPDA,QAOC;AAAA,MANDG,aAMC,QANDA,aAMC;AAAA,MALDC,uBAKC,QALDA,uBAKC;AAAA,MAJDM,QAIC,QAJDA,QAIC;AAAA,MAHDrB,sBAGC,QAHDA,sBAGC;AAAA,MAFDkB,aAEC,QAFDA,aAEC;AAAA,MADDC,eACC,QADDA,eACC;AACD,MAAMe,QAAQ,GAAGzE,WAAW,EAA5B;;AADC,kBAG2BF,QAAQ,CAAC,EAAD,CAHnC;AAAA;AAAA,MAGM4E,MAHN;AAAA,MAGcC,SAHd;;AAAA,mBAI+B7E,QAAQ,EAJvC;AAAA;AAAA,MAIM8E,QAJN;AAAA,MAIgBC,WAJhB;;AAAA,mBAKiD/E,QAAQ,CAAC,EAAD,CALzD;AAAA;AAAA,MAKMgF,iBALN;AAAA,MAKyBC,oBALzB;;AAAA,mBAMiDjF,QAAQ,CAAC,EAAD,CANzD;AAAA;AAAA,MAMMkF,iBANN;AAAA,MAMyBC,oBANzB;;AAAA,mBAOqCnF,QAAQ,CAAC,EAAD,CAP7C;AAAA;AAAA,MAOMoF,WAPN;AAAA,MAOmBC,cAPnB;;AAAA,oBAQyCrF,QAAQ,CAAC,KAAD,CARjD;AAAA;AAAA,MAQMsF,aARN;AAAA,MAQqBC,gBARrB;;AAAA,oBASuCvF,QAAQ,CAAC,EAAD,CAT/C;AAAA;AAAA,MASMwF,YATN;AAAA,MASoBC,eATpB;;AAAA,oBAU6BzF,QAAQ,CAACyB,SAAS,CAACiE,2BAAX,CAVrC;AAAA;AAAA,MAUMC,OAVN;AAAA,MAUeC,UAVf;;AAAA,oBAWqC5F,QAAQ,CAACyB,SAAS,CAACoE,yBAAX,CAX7C;AAAA;AAAA,MAWMC,WAXN;AAAA,MAWmBC,cAXnB;;AAYD,MAAMC,0BAA0B,GAAG7F,WAAW,CAACgB,+BAAD,CAA9C;AAEA,MAAM8E,cAAc,GAAG9F,WAAW,CAACY,oBAAD,CAAlC;AACA,MAAMmF,WAAW,GAAG/F,WAAW,CAACiB,cAAD,CAA/B;AACA,MAAM+E,aAAa,GAAGhG,WAAW,CAACmB,iBAAD,CAAjC,CAhBC,CAgBqD;;AAEtD,MAAM8E,YAAY,GAAGhD,QAAQ,GAAGA,QAAH,GAAc3B,SAAS,CAAC4E,mBAArD;;AAlBC,oBAmBuErG,QAAQ,CAACgG,0BAAD,CAnB/E;AAAA;AAAA,MAmBMM,4BAnBN;AAAA,MAmBoCC,+BAnBpC;;AAqBDtG,EAAAA,SAAS,CAAC,YAAM;AACdsG,IAAAA,+BAA+B,CAACP,0BAAD,CAA/B;AACD,GAFQ,EAEN,CAACA,0BAAD,CAFM,CAAT;AAIA,MAAMQ,sBAAsB,GAAG,CAAAL,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEM,QAAf,MAA4BhF,SAAS,CAACiF,UAAtC,IAAoD,CAAAP,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEM,QAAf,MAA4BhF,SAAS,CAACkF,SAAzH;AACA,MAAMC,eAAe,GACnBrG,KAAK,CAACsG,OAAN,CAAcC,YAAd,CAA2BZ,WAA3B,EAAwC,IAAxC,KACAA,WAAW,CAACa,IAAZ,CAAiB,UAACC,IAAD;AAAA,WAAU,CAACvF,SAAS,CAACwF,cAAV,CAAyBC,WAAzB,EAAD,EAAyCC,QAAzC,CAAkDH,IAAI,CAACI,IAAL,CAAUF,WAAV,EAAlD,CAAV;AAAA,GAAjB,CAFF;AAIAjH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAMoH,eAAe,GAAG,SAAlBA,eAAkB,CAACC,IAAD,EAAOC,SAAP,EAAqB;AAC3C,UAAI,CAACA,SAAL,EAAgBA,SAAS,GAAG,EAAZ;;AAChB,WAAK,IAAMC,GAAX,IAAkBF,IAAlB,EAAwB;AACtB,YAAI,OAAOA,IAAI,CAACE,GAAD,CAAX,KAAqB,QAAzB,EAAmCH,eAAe,CAACC,IAAI,CAACE,GAAD,CAAL,EAAYD,SAAZ,CAAf,CAAnC,KACKA,SAAS,CAACE,IAAV,WAAkBH,IAAI,CAACE,GAAD,CAAtB;AACN;;AACD,aAAOD,SAAP;AACD,KAPD;;AASA,QAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChCzC,MAAAA,oBAAoB,CAACpD,WAAD,CAApB;AACAsD,MAAAA,oBAAoB,CAACtD,WAAD,CAApB;AACA,UAAM8F,SAAS,GAAG9F,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAE+F,GAAb,CAAiB,UAACN,IAAD,EAAU;AAC3C,YAAMC,SAAS,GAAGF,eAAe,CAACC,IAAD,CAAjC;AACA,eAAO;AAAEC,UAAAA,SAAS,EAAEA,SAAS,CAACM,QAAV;AAAb,SAAP;AACD,OAHiB,CAAlB;AAIAxC,MAAAA,cAAc,CAACsC,SAAD,CAAd;AACD,KARD;;AAUAD,IAAAA,mBAAmB;AACpB,GArBQ,EAqBN,CAAC7F,WAAD,CArBM,CAAT;AAuBA5B,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI2E,MAAJ,EAAY;AACV,UAAMkD,oBAAoB,GAAG1C,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEwC,GAAb,CAAiB,UAACN,IAAD,EAAOS,KAAP,EAAiB;AAAA;;AAC7D,YAAI,CAAAT,IAAI,SAAJ,IAAAA,IAAI,WAAJ,+BAAAA,IAAI,CAAEC,SAAN,oEAAiBL,WAAjB,GAA+Bc,OAA/B,CAAuCpD,MAAM,CAACsC,WAAP,EAAvC,MAAgE,CAApE,EAAuE,OAAOlC,iBAAiB,CAAC+C,KAAD,CAAxB;AACvE,eAAO,IAAP;AACD,OAH4B,CAA7B;AAIA5C,MAAAA,oBAAoB,CAClB2C,oBADkB,aAClBA,oBADkB,uBAClBA,oBAAoB,CAAEG,MAAtB,CAA6B,UAACX,IAAD,EAAU;AACrC,YAAIA,IAAJ,EAAU,OAAO,IAAP;AACV,eAAO,KAAP;AACD,OAHD,CADkB,CAApB;AAMD,KAXD,MAWOnC,oBAAoB,CAACH,iBAAD,CAApB;AACR,GAbQ,EAaN,CAACJ,MAAD,EAASI,iBAAT,EAA4BI,WAA5B,CAbM,CAAT;AAeA,MAAM8C,kBAAkB,GAAG,CACzBzG,SAAS,CAACwB,8BAAV,CAAyCkF,aADhB,EAEzB1G,SAAS,CAACwB,8BAAV,CAAyCmF,UAFhB,EAGzB3G,SAAS,CAACwB,8BAAV,CAAyCoF,YAHhB,EAIzBlB,QAJyB,CAIhBrE,eAJgB,CAA3B;AAMA7C,EAAAA,SAAS,CAAC,YAAM;AACdkF,IAAAA,oBAAoB,CAACH,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEsD,KAAnB,CAAyB3C,OAAO,GAAGG,WAAnC,EAAgDH,OAAO,GAAGG,WAAV,GAAwBA,WAAxE,CAAD,CAApB;AACD,GAFQ,EAEN,CAACH,OAAD,EAAUG,WAAV,EAAuBd,iBAAvB,CAFM,CAAT;AAIA,MAAMuD,QAAQ,GAAGhI,KAAK,CAACiI,GAAN,CAAUC,0BAAV,CAAqC7F,OAArC,KAAiD,KAAlE;AAEA,MAAM8F,IAAI,IACR;AACEC,IAAAA,EAAE,EAAE,aADN;AAEEC,IAAAA,OAAO,EAAE;AAFX,GADQ,4BAKJ,CAACV,kBAAD,GACA,CACA;AACES,IAAAA,EAAE,EAAE,YADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,6BAAf,CAFT;AAGEqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAHR,GADA,CADA,GAQA,EAbI,IAcR;AAAEL,IAAAA,EAAE,EAAE,cAAN;AAAsBE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAA7B;AAA8EqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAApF,GAdQ,EAeR;AAAEL,IAAAA,EAAE,EAAE,gBAAN;AAAwBE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,iCAAf,CAA/B;AAAkFqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAAxF,GAfQ,sBAgBJ,CAACd,kBAAD,IAAuB,EAACxF,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAE2B,YAAlB,CAAvB,GACA,CACA;AACEsE,IAAAA,EAAE,EAAE,eADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,gCAAf,CAFT;AAGEqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAHR,GADA,CADA,GAQA,EAxBI,IAyBR;AAAEL,IAAAA,EAAE,EAAE,yBAAN;AAAiCE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAAxC;AAAyFqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAA/F,GAzBQ,EA0BR;AACEL,IAAAA,EAAE,EAAE,mBADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,yCAAf,CAFT;AAGEqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAHR,GA1BQ,EA+BR;AAAEL,IAAAA,EAAE,EAAE,aAAN;AAAqBE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAA5B;AAA6EqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,SAAS,EAAE;AAA3B;AAAnF,GA/BQ,EAgCR;AAAEL,IAAAA,EAAE,EAAE,eAAN;AAAuBE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,6BAAf,CAA9B;AAA6EqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAAnF,GAhCQ,EAiCR;AACEL,IAAAA,EAAE,EAAE,iBADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,kCAAf,CAFT;AAGEqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,SAAR;AAAmBC,MAAAA,SAAS,EAAE;AAA9B;AAHR,GAjCQ,sBAsCJ,EAAE,CAAAtG,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE2B,YAAjB,KAAiCkE,QAAnC,IACA,CACA;AACEI,IAAAA,EAAE,EAAE,aADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAFT;AAGEqE,IAAAA,IAAI,EAAE;AAAEC,MAAAA,IAAI,EAAE,MAAR;AAAgBC,MAAAA,SAAS,EAAE;AAA3B,KAHR;AAIEJ,IAAAA,OAAO,EAAE;AAJX,GADA,CADA,GASA,EA/CI,IAgDR;AAAED,IAAAA,EAAE,EAAE,SAAN;AAAiBM,IAAAA,IAAI,EAAE,IAAvB;AAA6BL,IAAAA,OAAO,EAAE;AAAtC,GAhDQ,EAAV;;AAmDA,MAAMM,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCpF,IAAAA,QAAQ,CAACC,uBAAT;AACA0B,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAJD;;AAMA,MAAM4D,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACxD,OAAD,EAAa;AACpCC,IAAAA,UAAU,CAACD,OAAD,CAAV;AACD,GAFD;;AAIA,MAAMyD,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACtD,WAAD,EAAiB;AAC/CF,IAAAA,UAAU,CAACnE,SAAS,CAACiE,2BAAX,CAAV;AACAK,IAAAA,cAAc,CAACD,WAAD,CAAd;AACD,GAHD;;AAKA,MAAMuD,UAAU,GAAG3H,aAAa,CAC9BwD,iBAAiB,IAAI,EADS,EAE9B;AACEoE,IAAAA,IAAI,EAAE3D,OAAO,IAAIlE,SAAS,CAACiE,2BAD7B;AAEE6D,IAAAA,SAAS,EAAEvE,iBAAiB,CAACwE,MAAlB,IAA4B,CAFzC;AAGE1D,IAAAA,WAAW,EAAEA;AAHf,GAF8B,EAO9BqD,gBAP8B,EAQ9BC,uBAR8B,CAAhC;;AAWA,MAAMK,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,IAAD,EAAU;AACtC,QAAMC,aAAa,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE9B,GAAN,CAAU,UAACgC,CAAD,EAAO;AACrC,aAAO;AACLC,QAAAA,UAAU,EAAED,CAAC,CAACC,UADT;AAEL3G,QAAAA,WAAW,EAAEA,WAFR;AAGLQ,QAAAA,WAAW,EAAEd;AAHR,OAAP;AAKD,KANqB,CAAtB;AAOA,QAAMkH,mBAAmB,GAAGH,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEH,MAA3C;AAEA7E,IAAAA,QAAQ,CACNnE,SAAS,CAAC;AACRuJ,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAE3J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAFF;AAGL0F,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE;AACdC,UAAAA,YAAY,EAAE9J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,sCAAf,CADA;AAEd6F,UAAAA,cAAc,EACZR,mBAAmB,KAAK,CAAxB,GACIvJ,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,wCAAf,CADJ,GAEIlE,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,gDAAf,EAAiE;AACjE8F,YAAAA,KAAK,EAAET;AAD0D,WAAjE,CALQ;AAQdU,UAAAA,aAAa,EAAE;AAAA,mBACb7F,QAAQ,CAACjE,sBAAsB,CAACiJ,aAAD,CAAvB,CAAR,CAAgDc,IAAhD,CAAqD,UAACC,QAAD,EAAc;AACjE,kBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqBlJ,SAAS,CAACmJ,eAAnC,EAAoD;AAClD1B,gBAAAA,oBAAoB;AACrB;AACF,aAJD,CADa;AAAA;AARD;AAJX;AAFC,KAAD,CADH,CAAR;AAyBD,GAnCD;;AAqCA,MAAM2B,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACnB,IAAD,EAAU;AACtC;AACA,QAAMoB,UAAU,GAAGtF,YAAY,CAACuB,IAAb,CAAkB,UAACgE,GAAD;AAAA,aAASC,aAAa,CAACD,GAAD,CAAtB;AAAA,KAAlB,CAAnB;AAEA,QAAME,WAAW,GAAGH,UAAU,GAC1BpB,IAD0B,aAC1BA,IAD0B,uBAC1BA,IAAI,CAAEzB,MAAN,CAAa,UAAC8C,GAAD;AAAA,aAAS,CAACC,aAAa,CAACD,GAAD,CAAvB;AAAA,KAAb,EAA2CnD,GAA3C,CAA+C,UAACmD,GAAD;AAAA,aAASA,GAAG,CAAClB,UAAb;AAAA,KAA/C,CAD0B,GAE1BH,IAF0B,aAE1BA,IAF0B,uBAE1BA,IAAI,CAAE9B,GAAN,CAAU,UAACmD,GAAD;AAAA,aAASA,GAAG,CAAClB,UAAb;AAAA,KAAV,CAFJ;AAGA,QAAMqB,iBAAiB,GAAGD,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEzB,MAAvC;AAEA7E,IAAAA,QAAQ,CACNnE,SAAS,CAAC;AACRuJ,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAE3J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAFF;AAGL0F,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE;AACdC,UAAAA,YAAY,EAAE9J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,sCAAf,CADA;AAEd6F,UAAAA,cAAc,EACZY,iBAAiB,KAAK,CAAtB,GACI3K,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,wCAAf,CADJ,GAEIlE,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,gDAAf,EAAiE;AACjE8F,YAAAA,KAAK,EAAEW;AAD0D,WAAjE,CALQ;AAQdC,UAAAA,cAAc,EAAEL,UAAU,GAAGvK,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,8CAAf,CAAH,GAAoE,EARhF;AASd+F,UAAAA,aAAa,EAAE;AAAA,mBACb7F,QAAQ,CAAC/D,mBAAmB,CAACqK,WAAD,CAApB,CAAR,CAA2CR,IAA3C,CAAgD,UAACC,QAAD,EAAc;AAC5D,kBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqBlJ,SAAS,CAACmJ,eAAnC,EAAoD;AAClD1B,gBAAAA,oBAAoB;AACrB;AACF,aAJD,CADa;AAAA;AATD;AAJX;AAFC,KAAD,CADH,CAAR;AA0BD,GAnCD;;AAuCA,MAAMkC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,OAAD,EAAa;AAC3C1G,IAAAA,QAAQ,CACNnE,SAAS,CAAC;AACRuJ,MAAAA,SAAS,EAAE,qBADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,SAAS,EAAE,IADN;AAELC,QAAAA,KAAK,EAAE3J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,+BAAf,CAFF;AAGL0F,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE;AACdiB,UAAAA,OAAO,EAAEA;AADK;AAJX;AAFC,KAAD,CADH,CAAR;AAaD,GAdD;;AAgBA,MAAMC,uBAAuB;AAAA,yEAAG,iBAAOP,GAAP;AAAA;AAAA;AAAA;AAAA;AAAA;AACxBQ,cAAAA,kBADwB,GACHC,kBAAkB,EADf;AAG9B7G,cAAAA,QAAQ,CAAC9D,aAAa,CAAC+B,OAAD,CAAd,CAAR;AAH8B;AAAA,qBAIxB+B,QAAQ,CAAC1D,cAAc,CAAC2B,OAAD,EAAUwD,YAAV,EAAwBlD,WAAxB,CAAf,CAJgB;;AAAA;AAAA;AAAA,qBAKxByB,QAAQ,CAAC3D,kBAAkB,CAAC+J,GAAD,aAACA,GAAD,uBAACA,GAAG,CAAElB,UAAN,EAAkBkB,GAAlB,aAAkBA,GAAlB,uBAAkBA,GAAG,CAAEU,iBAAvB,CAAnB,CAAR,CAAsEhB,IAAtE,CAA2E,UAACiB,GAAD,EAAS;AACxF,oBAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAEf,MAAL,MAAgBlJ,SAAS,CAACmJ,eAA9B,EAA+C;AAC7CjG,kBAAAA,QAAQ,CACNnE,SAAS,CAAC;AACRuJ,oBAAAA,SAAS,EAAE,oBADH;AAERC,oBAAAA,KAAK,EAAE;AACLC,sBAAAA,SAAS,EAAE,IADN;AAELC,sBAAAA,KAAK,EAAE3J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,6BAAf,CAFF;AAGL0F,sBAAAA,QAAQ,EAAE,IAHL;AAILC,sBAAAA,cAAc,EAAE;AACdiB,wBAAAA,OAAO,EAAEN,GADK;AAEdnI,wBAAAA,OAAO,EAAPA,OAFc;AAGdM,wBAAAA,WAAW,EAAEqI,kBAHC;AAIdI,wBAAAA,gBAAgB,EAAEvI,QAJJ;AAKdN,wBAAAA,eAAe,EAAEA,eALH;AAMdU,wBAAAA,uBAAuB,EAAvBA,uBANc;AAOdoI,wBAAAA,aAAa,EAAE,yBAAM;AACnBjH,0BAAAA,QAAQ,CAAClE,SAAS,CAAC,oBAAD,CAAV,CAAR;AACD;AATa;AAJX;AAFC,mBAAD,CADH,CAAR;AAqBD;AACF,eAxBK,CALwB;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,KAAH;;AAAA,oBAAvB6K,uBAAuB;AAAA;AAAA;AAAA,KAA7B;;AAgCA,MAAMO,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACnC,IAAD,EAAU;AACvC,QAAMC,aAAa,GAAGD,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE9B,GAAN,CAAU,UAACmD,GAAD,EAAS;AACvC,aAAO;AACLlB,QAAAA,UAAU,EAAEkB,GAAG,CAAClB,UADX;AAEL3G,QAAAA,WAAW,EAAEU,eAFR;AAGLF,QAAAA,WAAW,EAAEC;AAHR,OAAP;AAKD,KANqB,CAAtB;;AAQA,QAAI,CAACpD,KAAK,CAACsG,OAAN,CAAciF,qBAAd,CAAoCnC,aAApC,CAAL,EAAyD;AACvDhF,MAAAA,QAAQ,CAACnD,wBAAwB,CAACmI,aAAD,CAAzB,CAAR,CAAkDc,IAAlD,CAAuD,UAACC,QAAD,EAAc;AACnE,YAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqBlJ,SAAS,CAACmJ,eAAnC,EAAoD;AAClD1B,UAAAA,oBAAoB;AACrB;AACF,OAJD;AAKD;AACF,GAhBD;;AAkBA,MAAM6C,cAAc,IAClB;AACEpD,IAAAA,EAAE,EAAE,UADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,oCAAf,CAFT;AAGEuH,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAapG,QAAQ,CAAChE,qBAAqB,CAACoK,GAAD,CAAtB,CAArB;AAAA;AAHZ,GADkB,4BAMd3I,SAAS,GACT,CACA;AACEuG,IAAAA,EAAE,EAAE,QADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,kCAAf,CAFT;AAGEwH,IAAAA,QAAQ,EAAEzF,sBAHZ;AAIEwF,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAatB,qBAAqB,CAAC,CAACsB,GAAD,CAAD,CAAlC;AAAA;AAJZ,GADA,CADS,GAST,EAfc,sBAgBd1I,SAAS,GACT,CACA;AACEsG,IAAAA,EAAE,EAAE,QADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,kCAAf,CAFT;AAGEwH,IAAAA,QAAQ,EAAEzF,sBAHZ;AAIEwF,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAaF,qBAAqB,CAAC,CAACE,GAAD,CAAD,CAAlC;AAAA;AAJZ,GADA,CADS,GAST,EAzBc,IA0BlB;AACEpC,IAAAA,EAAE,EAAE,gBADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,0CAAf,CAFT;AAGEuH,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAaK,uBAAuB,CAACL,GAAD,CAApC;AAAA;AAHZ,GA1BkB,sBA+BdxI,eAAe,GACf,CACA;AACEoG,IAAAA,EAAE,EAAE,cADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,wCAAf,CAFT;AAGEwH,IAAAA,QAAQ,EAAEzF,sBAHZ;AAIEwF,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAaO,uBAAuB,CAACP,GAAD,CAApC;AAAA;AAJZ,GADA,CADe,GASf,EAxCc,sBAyCdvI,OAAO,GACP,CACA;AACEmG,IAAAA,EAAE,EAAE,QADN;AAEEE,IAAAA,KAAK,EAAEtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,kCAAf,CAFT;AAGEuH,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAajH,QAAQ,CAACK,MAAT,CAAgB,CAAC4G,GAAD,CAAhB,EAAuB7B,oBAAvB,CAAb;AAAA;AAHZ,GADA,CADO,GAQP,EAjDc,sBAkDdzG,sBAAsB,GACtB,CACA;AACEkG,IAAAA,EAAE,EAAE,qBADN;AAEEE,IAAAA,KAAK,YAAKtI,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,kCAAf,CAAL,cAA2Dd,aAA3D,CAFP;AAGEqI,IAAAA,QAAQ,EAAE;AAAA,UAAGjB,GAAH,SAAGA,GAAH;AAAA,aAAac,sBAAsB,CAAC,CAACd,GAAD,CAAD,CAAnC;AAAA;AAHZ,GADA,CADsB,GAQtB,EA1Dc,EAApB;;AA6DA,MAAMmB,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBnH,IAAAA,WAAW,CAAC,IAAIoH,IAAJ,GAAWC,OAAX,EAAD,CAAX;AACAvH,IAAAA,SAAS,CAAC,EAAD,CAAT;AACD,GAHD;;AAKA,MAAMwH,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9BzH,IAAAA,SAAS,CAACyH,KAAD,CAAT;AACD,GAFD;;AAIA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,GAAL,EAAa;AAC9BzH,IAAAA,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE8D,IAAnB,CAAwBzI,OAAO,CAACE,KAAK,CAACuI,IAAN,CAAWhH,KAAX,CAAiB,SAAjB,EAA4B0K,EAA5B,EAAgCC,GAAhC,CAAD,CAA/B;AACD,GAFD;;AAIA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB;AAAA,WAAM,UAACC,KAAD,EAAW;AACvChI,MAAAA,QAAQ,CAACzD,SAAS,CAAC,gBAAD,CAAV,CAAR;AACA,UAAMqK,kBAAkB,GAAGC,kBAAkB,EAA7C;AAEA7G,MAAAA,QAAQ,CACNnE,SAAS,CAAC;AACRuJ,QAAAA,SAAS,EAAE,kBADH;AAERC,QAAAA,KAAK,EAAE;AACLC,UAAAA,SAAS,EAAE,IADN;AAELC,UAAAA,KAAK,EAAE3J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,uCAAf,CAFF;AAGLmI,UAAAA,cAAc,EAAE,KAHX;AAILzC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,cAAc,EAAE;AACduC,YAAAA,KAAK,EAALA,KADc;AAEd/J,YAAAA,OAAO,EAAPA,OAFc;AAGdM,YAAAA,WAAW,EAAEqI,kBAHC;AAIdnI,YAAAA,QAAQ,EAARA,QAJc;AAKdN,YAAAA,eAAe,EAAfA,eALc;AAMdU,YAAAA,uBAAuB,EAAvBA,uBANc;AAOd6G,YAAAA,YAAY,EAAE9J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,QAAf,CAPA;AAQdoI,YAAAA,WAAW,EAAEtM,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,YAAf,CARC;AASd6F,YAAAA,cAAc,EAAE/J,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,gDAAf,CATF;AAUdqI,YAAAA,YAAY,EAAE;AAAEC,cAAAA,OAAO,EAAE,WAAX;AAAwBC,cAAAA,MAAM,EAAE;AAAhC,aAVA;AAWd9I,YAAAA,oBAAoB,EAAE;AAAA,qBAAM+I,sBAAsB,EAA5B;AAAA;AAXR;AALX;AAFC,OAAD,CADH,CAAR;AAwBD,KA5BuB;AAAA,GAAxB;;AA8BA,MAAMA,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC;AACA,QAAMC,SAAS,GAAG/G,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAE+G,SAAjC;AACA,QAAMC,aAAa,GAAGhH,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEgH,aAArC;;AACA,QAAI,CAAC5M,KAAK,CAAC6M,YAAN,CAAmBC,sBAAnB,CAA0CvK,eAA1C,CAAL,EAAiE;AAC/D;AACA6B,MAAAA,QAAQ,CACNtD,qBAAqB,mBACfmC,uBAAuB,GACvBA,uBADuB;AAGvBN,QAAAA,WAAW,EAAXA,WAHuB;AAIvBQ,QAAAA,WAAW,EAAEd,OAJU;AAKvBE,QAAAA,eAAe,EAAfA,eALuB;AAMvBS,QAAAA,aAAa,EAAbA;AANuB,SAOnB2J,SAAS,IAAIC,aAAb,IAA8B;AAAED,QAAAA,SAAS,EAATA,SAAF;AAAaC,QAAAA,aAAa,EAAbA;AAAb,OAPX,CADR,EADf,CAAR;AAaD;AACF,GApBD;;AAsBA,MAAMG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,CAAD,EAAIxC,GAAJ,EAAY;AACtCwC,IAAAA,CAAC,CAACC,eAAF;AACA,QAAIC,iBAAiB,gCAAOjI,YAAP,IAAqBuF,GAArB,EAArB;;AACA,QAAIvF,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEkI,IAAd,CAAmB,UAAChE,IAAD;AAAA,aAAUA,IAAI,CAACG,UAAL,KAAoBkB,GAAG,CAAClB,UAAlC;AAAA,KAAnB,CAAJ,EAAsE;AACpE4D,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACxF,MAAlB,CAAyB,UAAC0F,WAAD;AAAA,eAAiBA,WAAW,CAAC9D,UAAZ,KAA2BkB,GAAG,CAAClB,UAAhD;AAAA,OAAzB,CAApB;AACD;;AAED,QAAItJ,KAAK,CAACsG,OAAN,CAAc+G,UAAd,CAAyB9J,QAAzB,aAAyBA,QAAzB,uBAAyBA,QAAQ,CAAEG,YAAnC,CAAJ,EAAsD;AACpDH,MAAAA,QAAQ,CAACG,YAAT,CAAsBwJ,iBAAtB;AACD;;AAEDhI,IAAAA,eAAe,CAACgI,iBAAD,CAAf;AACD,GAZD;;AAcA,MAAMI,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACC,OAAD,EAAa;AACjD,QAAMC,aAAa,GAAG,EAAtB;;AACA,QAAIxN,KAAK,CAACsG,OAAN,CAAcC,YAAd,CAA2BgH,OAA3B,EAAoC,IAApC,CAAJ,EAA+C;AAC7C,UAAME,eAAe,sBAAOF,OAAP,CAArB;;AACAE,MAAAA,eAAe,CAACC,OAAhB,CAAwB,UAAClD,GAAD,EAAS;AAC/B,YAAIA,GAAJ,aAAIA,GAAJ,uBAAIA,GAAG,CAAEmD,0BAAT,EAAqC;AACnCH,UAAAA,aAAa,CAACtG,IAAd,CAAmBsD,GAAG,CAACoD,YAAvB;AACD;AACF,OAJD;AAKD;;AACD,WAAOJ,aAAP;AACD,GAXD;;AAaA,MAAMK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA;;AACrC9I,IAAAA,gBAAgB,CAAC8I,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAEC,MAAR,kDAAC,cAAeC,OAAhB,CAAhB;AACD,GAFD;;AAIA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAMC,cAAc,GAAGjJ,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEoC,GAAd,CAAkB,UAAC8G,KAAD;AAAA,aAAWA,KAAK,CAAC7E,UAAjB;AAAA,KAAlB,CAAvB;;AACA,QAAI,CAAArE,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEgE,MAAd,MAAyB,CAA7B,EAAgC;AAC9B7E,MAAAA,QAAQ,CAAC7D,0BAA0B,CAAC2N,cAAD,CAA3B,CAAR;AACA;AACD;;AACD9J,IAAAA,QAAQ,CAAChE,qBAAqB,CAAC6E,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAG,CAAH,CAAb,CAAtB,CAAR;AACD,GAPD;;AASA,MAAMmJ,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnClF,IAAAA,qBAAqB,CAACjE,YAAD,CAArB;AACD,GAFD;;AAIA,MAAMoJ,mBAAmB,GAAG,SAAtBA,mBAAsB,GAAM;AAChC,QAAMb,aAAa,GAAGF,6BAA6B,CAACrI,YAAD,CAAnD;;AACA,QAAIjF,KAAK,CAACsG,OAAN,CAAcC,YAAd,CAA2BiH,aAA3B,EAA0C,IAA1C,CAAJ,EAAqD;AACnD,UAAMc,SAAS,aAAMtO,KAAK,CAAC4C,MAAN,CAAasB,CAAb,CAAe,uCAAf,CAAN,uBAA0EsJ,aAAa,CAACe,IAAd,CAAmB,WAAnB,CAA1E,CAAf;AACAnK,MAAAA,QAAQ,CAACpD,mBAAmB,CAACsN,SAAD,EAAY,OAAZ,CAApB,CAAR;AACD;;AACDhE,IAAAA,qBAAqB,CAACrF,YAAD,CAArB;AACD,GAPD;;AASA,MAAMuJ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AAC9BjL,IAAAA,QAAQ,CAACK,MAAT,CAAgBqB,YAAhB,EAA8B0D,oBAA9B;AACD,GAFD;;AAIA,MAAM8B,aAAa,GAAG,SAAhBA,aAAgB,CAACD,GAAD,EAAS;AAC7B,WAAOA,GAAG,CAACiE,cAAJ,KAAuBvN,SAAS,CAACwN,qBAAV,CAAgCC,GAA9D;AACD,GAFD;;AAIA,MAAM1D,kBAAkB,GAAG,SAArBA,kBAAqB,GAAM;AAAA,QACvBzC,IADuB,GACc9C,cADd,CACvB8C,IADuB;AAAA,QACjBoG,mBADiB,GACclJ,cADd,CACjBkJ,mBADiB;AAAA,QACIC,KADJ,GACcnJ,cADd,CACImJ,KADJ;;AAE/B,QAAIrG,IAAI,KAAKtH,SAAS,CAAC4N,kCAAvB,EAA2D;AACzD,aAAOF,mBAAmB,GAAGC,KAAK,GAAG,GAAR,GAAcD,mBAAjB,GAAuCC,KAAjE;AACD,KAFD,MAEO,IAAIrG,IAAI,KAAKtH,SAAS,CAAC6N,yBAAnB,IAAgDvG,IAAI,KAAKtH,SAAS,CAAC8N,2BAAvE,EAAoG;AACzG,aAAOH,KAAP;AACD,KAFM,MAEA;AACL,aAAOlM,WAAP;AACD;AACF,GATD;;AAWA,MAAMuI,iBAAiB,GAAGlL,KAAH,aAAGA,KAAH,8CAAGA,KAAK,CAAE6M,YAAV,wDAAG,oBAAqBoC,6BAArB,EAA1B;AAEA,MAAMC,qBAAqB,GAAG,IAAIC,GAAJ,CAC5BjE,iBAD4B,aAC5BA,iBAD4B,uBAC5BA,iBAAiB,CAAE7D,GAAnB,CAAuB,UAACZ,IAAD,EAAU;AAC/B,WAAO,CAACA,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAE2B,EAAP,EAAW3B,IAAX,aAAWA,IAAX,uBAAWA,IAAI,CAAE2I,KAAjB,CAAP;AACD,GAFD,CAD4B,CAA9B;;AAMA,MAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACD,KAAD,EAAW;AACtC,WAAOF,qBAAP,aAAOA,qBAAP,uBAAOA,qBAAqB,CAAEI,GAAvB,CAA2BC,MAAM,CAACH,KAAD,CAAjC,CAAP;AACD,GAFD,CAzfC,CA6fD;;;AACA,MAAI,CAAC9N,WAAL,EAAkB,OAAO,IAAP;AAElB,sBACE,QAAC,YAAD;AACE,IAAA,IAAI,EAAE6G,IADR;AAEE,IAAA,SAAS,EAAExD,iBAFb;AAGE,IAAA,UAAU,EAAEmE,UAHd;AAIE,IAAA,cAAc,EAAE0C,cAJlB;AAKE,IAAA,MAAM,EAAEnH,MALV;AAME,IAAA,QAAQ,EAAEE,QANZ;AAOE,IAAA,aAAa,EAAEQ,aAPjB;AAQE,IAAA,UAAU,EAAEtD,UARd;AASE,IAAA,SAAS,EAAEE,SATb;AAUE,IAAA,SAAS,EAAEC,SAVb;AAWE,IAAA,SAAS,EAAEC,SAXb;AAYE,IAAA,SAAS,EAAEC,SAZb;AAaE,IAAA,cAAc,EAAEC,cAblB;AAcE,IAAA,OAAO,EAAEE,OAdX;AAeE,IAAA,eAAe,EAAEE,eAfnB;AAgBE,IAAA,YAAY,EAAE8C,YAhBhB;AAiBE,IAAA,kBAAkB,EAAE0C,kBAjBtB;AAkBE,IAAA,sBAAsB,EAAE1B,sBAlB1B;AAmBE,IAAA,4BAA4B,EAAEF,4BAnBhC;AAoBE,IAAA,eAAe,EAAEM,eApBnB;AAqBE,IAAA,QAAQ,EAAE2B,QArBZ;AAsBE,IAAA,oBAAoB,EAAEqH,oBAtBxB;AAuBE,IAAA,sBAAsB,EAAEnN,sBAvB1B;AAwBE,IAAA,aAAa,EAAEkB,aAxBjB;AAyBE,IAAA,QAAQ,EAAE;AACRuI,MAAAA,WAAW,EAAEA,WADL;AAERG,MAAAA,YAAY,EAAEA,YAFN;AAGRE,MAAAA,UAAU,EAAEA,UAHJ;AAIRwD,MAAAA,WAAW,EAAErD,eAJL;AAKRY,MAAAA,mBAAmB,EAAEA,mBALb;AAMRc,MAAAA,mBAAmB,EAAEA,mBANb;AAORI,MAAAA,sBAAsB,EAAEA,sBAPhB;AAQRG,MAAAA,sBAAsB,EAAEA,sBARhB;AASRC,MAAAA,mBAAmB,EAAEA,mBATb;AAURG,MAAAA,iBAAiB,EAAEA,iBAVX;AAWRlD,MAAAA,sBAAsB,EAAtBA;AAXQ;AAzBZ;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GA9jBuBlK,Q;UAsBLzB,W,EAWkBC,W,EAEZA,W,EACHA,W,EACEA,W,EAkIHuB,a;;;KAvKGC,Q","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { firstBy } from 'thenby';\r\n\r\n// app\r\nimport { DmsTableView } from './DmsTable.view';\r\nimport * as utils from 'utils';\r\nimport {\r\n  showModal,\r\n  hideModal,\r\n  unlinkDmsViewDocuments,\r\n  viewDocumentsDownload,\r\n  viewDocumentsDelete,\r\n  setDmsContext,\r\n  viewDocumentsMultiDownload,\r\n  selectContextSubType,\r\n  getDmsEditMetadata,\r\n  getDmsMetaData,\r\n  addLoader,\r\n  selectDmsFileViewGridDataLoader,\r\n  selectUserRole,\r\n  getViewTableDocuments,\r\n  selectCaseDetails,\r\n  enqueueNotification,\r\n  linkMultipleDmsDocuments,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport { usePagination } from 'hooks';\r\n\r\n\r\nDmsTable.propTypes = {\r\n  columnsData: PropTypes.array.isRequired,\r\n  showHeader: PropTypes.bool,\r\n  canUpload: PropTypes.bool,\r\n  canSearch: PropTypes.bool,\r\n  canUnlink: PropTypes.bool,\r\n  canDelete: PropTypes.bool,\r\n  canMultiSelect: PropTypes.bool,\r\n  canEditMetaData: PropTypes.bool,\r\n  canLink: PropTypes.bool,\r\n  canLinkToParentContext: PropTypes.bool,\r\n  fnolViewOptions: PropTypes.object,\r\n  context: PropTypes.oneOf(['Claim', 'Loss', 'Policy', 'Task', 'Case']).isRequired,\r\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\r\n  referenceId: PropTypes.string.isRequired,\r\n  sourceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n  parentLossRef: PropTypes.string,\r\n  searchParamsAfterUpload: PropTypes.shape({\r\n    referenceId: PropTypes.oneOfType([PropTypes.number, PropTypes.string]).isRequired,\r\n    sectionType: PropTypes.string.isRequired,\r\n  }),\r\n  parentContext: PropTypes.string,\r\n  parentContextId: PropTypes.string,\r\n  refData: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    onUnlinkorDeleteSuccess: PropTypes.func,\r\n    onSelectFile: PropTypes.func,\r\n    onClosingUploadModal: PropTypes.func,\r\n    onLink: PropTypes.func,\r\n  }),\r\n};\r\n\r\nDmsTable.defaultProps = {\r\n  showHeader: true,\r\n  canUpload: true,\r\n  canSearch: true,\r\n  canUnlink: true,\r\n  canDelete: true,\r\n  canMultiSelect: true,\r\n  canEditMetaData: true,\r\n  canLink: false,\r\n  canLinkToParentContext: false,\r\n  parentContext: '',\r\n  parentContextId: '',\r\n  fnolViewOptions: {\r\n    isClaimsFNOL: false,\r\n    isClaimsUploadDisabled: false,\r\n    isDmsDocumentMenuDisabled: false,\r\n    claimsSearchDocumentsTxt: utils.string.t('dms.view.searchDocuments'),\r\n  },\r\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n};\r\n\r\nexport default function DmsTable({\r\n  columnsData,\r\n  showHeader,\r\n  canUpload,\r\n  canSearch,\r\n  canUnlink,\r\n  canDelete,\r\n  canMultiSelect,\r\n  canEditMetaData,\r\n  canLink,\r\n  fnolViewOptions,\r\n  context,\r\n  documentTypeKey,\r\n  referenceId,\r\n  sourceId,\r\n  parentLossRef,\r\n  searchParamsAfterUpload,\r\n  handlers,\r\n  canLinkToParentContext,\r\n  parentContext,\r\n  parentContextId,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const [search, setSearch] = useState('');\r\n  const [resetKey, setResetKey] = useState();\r\n  const [originalTableData, setOriginalTableData] = useState([]);\r\n  const [filteredTableData, setFilteredTableData] = useState([]);\r\n  const [searchIndex, setSearchIndex] = useState([]);\r\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [newPage, setNewPage] = useState(constants.DMS_PAGINATION_DEFAULT_PAGE);\r\n  const [rowsPerPage, setRowsPerPage] = useState(constants.DMS_DEFAULT_ROWS_PER_PAGE);\r\n  const DmsFileViewGridDataLoading = useSelector(selectDmsFileViewGridDataLoader);\r\n\r\n  const contextSubType = useSelector(selectContextSubType);\r\n  const currentUser = useSelector(selectUserRole);\r\n  const ppCaseDetails = useSelector(selectCaseDetails); // TODO will be later coming as props\r\n\r\n  const xbInstanceId = sourceId ? sourceId : constants.DMS_CLAIM_SOURCE_ID;\r\n  const [isDmsFileViewGridDataLoading, setIsDmsFileViewGridDataLoading] = useState(DmsFileViewGridDataLoading);\r\n\r\n  useEffect(() => {\r\n    setIsDmsFileViewGridDataLoading(DmsFileViewGridDataLoading);\r\n  }, [DmsFileViewGridDataLoading]);\r\n\r\n  const isWorkBasketOrAllCases = ppCaseDetails?.taskView === constants.WORKBASKET || ppCaseDetails?.taskView === constants.ALL_CASES;\r\n  const isSeniorManager =\r\n    utils.generic.isValidArray(currentUser, true) &&\r\n    currentUser.some((item) => [constants.SENIOR_MANAGER.toLowerCase()].includes(item.name.toLowerCase()));\r\n\r\n  useEffect(() => {\r\n    const tableDataString = (data, allValues) => {\r\n      if (!allValues) allValues = [];\r\n      for (const key in data) {\r\n        if (typeof data[key] === 'object') tableDataString(data[key], allValues);\r\n        else allValues.push(`${data[key]}' '`);\r\n      }\r\n      return allValues;\r\n    };\r\n\r\n    const setInitialTableData = () => {\r\n      setOriginalTableData(columnsData);\r\n      setFilteredTableData(columnsData);\r\n      const searchInd = columnsData?.map((data) => {\r\n        const allValues = tableDataString(data);\r\n        return { allValues: allValues.toString() };\r\n      });\r\n      setSearchIndex(searchInd);\r\n    };\r\n\r\n    setInitialTableData();\r\n  }, [columnsData]);\r\n\r\n  useEffect(() => {\r\n    if (search) {\r\n      const newFilteredTableData = searchIndex?.map((data, index) => {\r\n        if (data?.allValues?.toLowerCase().indexOf(search.toLowerCase()) >= 0) return originalTableData[index];\r\n        return null;\r\n      });\r\n      setFilteredTableData(\r\n        newFilteredTableData?.filter((data) => {\r\n          if (data) return true;\r\n          return false;\r\n        })\r\n      );\r\n    } else setFilteredTableData(originalTableData);\r\n  }, [search, originalTableData, searchIndex]);\r\n\r\n  const isDmsFromPiRiskRef = [\r\n    constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piEndorsement,\r\n    constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piFABorder,\r\n    constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo,\r\n  ].includes(documentTypeKey);\r\n\r\n  useEffect(() => {\r\n    setFilteredTableData(originalTableData?.slice(newPage * rowsPerPage, newPage * rowsPerPage + rowsPerPage));\r\n  }, [newPage, rowsPerPage, originalTableData]);\r\n\r\n  const isClaims = utils.dms.checkIfClaimsScreenContext(context) || false;\r\n\r\n  const cols = [\r\n    {\r\n      id: 'multiSelect',\r\n      visible: true,\r\n    },\r\n    ...(!isDmsFromPiRiskRef\r\n      ? [\r\n        {\r\n          id: 'folderName',\r\n          label: utils.string.t('dms.view.columns.folderName'),\r\n          sort: { type: 'lexical', direction: 'asc' },\r\n        },\r\n      ]\r\n      : []),\r\n    { id: 'documentName', label: utils.string.t('dms.view.columns.documentName'), sort: { type: 'lexical', direction: 'asc' } },\r\n    { id: 'documentSource', label: utils.string.t('dms.view.columns.documentSource'), sort: { type: 'lexical', direction: 'asc' } },\r\n    ...(!isDmsFromPiRiskRef && !fnolViewOptions?.isClaimsFNOL\r\n      ? [\r\n        {\r\n          id: 'hDriveFolders',\r\n          label: utils.string.t('dms.view.columns.hDriveFolders'),\r\n          sort: { type: 'lexical', direction: 'asc' },\r\n        },\r\n      ]\r\n      : []),\r\n    { id: 'documentTypeDescription', label: utils.string.t('dms.view.columns.documentType'), sort: { type: 'lexical', direction: 'asc' } },\r\n    {\r\n      id: 'docClassification',\r\n      label: utils.string.t('dms.view.columns.documentClassification'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n    },\r\n    { id: 'updatedDate', label: utils.string.t('dms.view.columns.uploadedDate'), sort: { type: 'date', direction: 'asc' } },\r\n    { id: 'createdByName', label: utils.string.t('dms.view.columns.uploadedBy'), sort: { type: 'lexical', direction: 'asc' } },\r\n    {\r\n      id: 'documentVersion',\r\n      label: utils.string.t('dms.view.columns.documentVersion'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n    },\r\n    ...(!(fnolViewOptions?.isClaimsFNOL || isClaims)\r\n      ? [\r\n        {\r\n          id: 'createdDate',\r\n          label: utils.string.t('dms.view.columns.creationDate'),\r\n          sort: { type: 'date', direction: 'asc' },\r\n          visible: true,\r\n        },\r\n      ]\r\n      : []),\r\n    { id: 'actions', menu: true, visible: true },\r\n  ];\r\n\r\n  const resetToDefaultValues = () => {\r\n    handlers.onUnlinkorDeleteSuccess();\r\n    setSelectedDocs([]);\r\n    setIsMultiSelect(false);\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setNewPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setNewPage(constants.DMS_PAGINATION_DEFAULT_PAGE);\r\n    setRowsPerPage(rowsPerPage);\r\n  };\r\n\r\n  const pagination = usePagination(\r\n    filteredTableData || [],\r\n    {\r\n      page: newPage || constants.DMS_PAGINATION_DEFAULT_PAGE,\r\n      rowsTotal: originalTableData.length || 0,\r\n      rowsPerPage: rowsPerPage,\r\n    },\r\n    handleChangePage,\r\n    handleChangeRowsPerPage\r\n  );\r\n\r\n  const confirmDocumentUnlink = (docs) => {\r\n    const requestParams = docs?.map((d) => {\r\n      return {\r\n        documentId: d.documentId,\r\n        referenceId: referenceId,\r\n        sectionType: context,\r\n      };\r\n    });\r\n    const requestParamsLength = requestParams?.length;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.unlinkDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.unlinkDocument.confirmLabel'),\r\n            confirmMessage:\r\n              requestParamsLength === 1\r\n                ? utils.string.t('dms.view.unlinkDocument.confirmMessage')\r\n                : utils.string.t('dms.view.unlinkDocument.confirmMessageForMulti', {\r\n                  count: requestParamsLength,\r\n                }),\r\n            submitHandler: () =>\r\n              dispatch(unlinkDmsViewDocuments(requestParams)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  resetToDefaultValues();\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const confirmDocumentDelete = (docs) => {\r\n    // GXB sharepoint sourced docs cannot be deleted\r\n    const hasGxbDocs = selectedDocs.some((doc) => isGxbDocument(doc));\r\n\r\n    const documentIds = hasGxbDocs\r\n      ? docs?.filter((doc) => !isGxbDocument(doc)).map((doc) => doc.documentId)\r\n      : docs?.map((doc) => doc.documentId);\r\n    const documentIdsLength = documentIds?.length;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.deleteDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\r\n            confirmMessage:\r\n              documentIdsLength === 1\r\n                ? utils.string.t('dms.view.deleteDocument.confirmMessage')\r\n                : utils.string.t('dms.view.deleteDocument.confirmMessageForMulti', {\r\n                  count: documentIdsLength,\r\n                }),\r\n            warningMessage: hasGxbDocs ? utils.string.t('dms.view.deleteDocument.gxbDocsDeleteWarning') : '',\r\n            submitHandler: () =>\r\n              dispatch(viewDocumentsDelete(documentIds)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  resetToDefaultValues();\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n\r\n\r\n  const showVersionHistoryModal = (docData) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_VERSION_HISTORY',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.versionHistory.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            docData: docData,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const launchEditMetadataModel = async (doc) => {\r\n    const refinedReferenceId = getRefIdForContext();\r\n\r\n    dispatch(setDmsContext(context));\r\n    await dispatch(getDmsMetaData(context, xbInstanceId, referenceId));\r\n    await dispatch(getDmsEditMetadata(doc?.documentId, doc?.docClassification)).then((res) => {\r\n      if (res?.status === constants.API_RESPONSE_OK) {\r\n        dispatch(\r\n          showModal({\r\n            component: 'DMS_EDIT_META_DATA',\r\n            props: {\r\n              fullWidth: true,\r\n              title: utils.string.t('dms.view.editMetadata.title'),\r\n              maxWidth: 'xl',\r\n              componentProps: {\r\n                docData: doc,\r\n                context,\r\n                referenceId: refinedReferenceId,\r\n                selectedSourceId: sourceId,\r\n                documentTypeKey: documentTypeKey,\r\n                searchParamsAfterUpload,\r\n                cancelHandler: () => {\r\n                  dispatch(hideModal('DMS_EDIT_META_DATA'));\r\n                },\r\n              },\r\n            },\r\n          })\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const linkDocToParentContext = (docs) => {\r\n    const requestParams = docs?.map((doc) => {\r\n      return {\r\n        documentId: doc.documentId,\r\n        referenceId: parentContextId,\r\n        sectionType: parentContext,\r\n      };\r\n    })\r\n\r\n    if (!utils.generic.isInvalidOrEmptyArray(requestParams)) {\r\n      dispatch(linkMultipleDmsDocuments(requestParams)).then((response) => {\r\n        if (response?.status === constants.API_RESPONSE_OK) {\r\n          resetToDefaultValues();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'download',\r\n      label: utils.string.t('dms.view.popOverMenuItems.download'),\r\n      callback: ({ doc }) => dispatch(viewDocumentsDownload(doc)),\r\n    },\r\n    ...(canUnlink\r\n      ? [\r\n        {\r\n          id: 'unlink',\r\n          label: utils.string.t('dms.view.popOverMenuItems.unlink'),\r\n          disabled: isWorkBasketOrAllCases,\r\n          callback: ({ doc }) => confirmDocumentUnlink([doc]),\r\n        },\r\n      ]\r\n      : []),\r\n    ...(canDelete\r\n      ? [\r\n        {\r\n          id: 'delete',\r\n          label: utils.string.t('dms.view.popOverMenuItems.delete'),\r\n          disabled: isWorkBasketOrAllCases,\r\n          callback: ({ doc }) => confirmDocumentDelete([doc]),\r\n        },\r\n      ]\r\n      : []),\r\n    {\r\n      id: 'versionHistory',\r\n      label: utils.string.t('dms.view.popOverMenuItems.versionHistory'),\r\n      callback: ({ doc }) => showVersionHistoryModal(doc),\r\n    },\r\n    ...(canEditMetaData\r\n      ? [\r\n        {\r\n          id: 'editMetaData',\r\n          label: utils.string.t('dms.view.popOverMenuItems.editMetadata'),\r\n          disabled: isWorkBasketOrAllCases,\r\n          callback: ({ doc }) => launchEditMetadataModel(doc),\r\n        },\r\n      ]\r\n      : []),\r\n    ...(canLink\r\n      ? [\r\n        {\r\n          id: 'LinkTo',\r\n          label: utils.string.t('dms.view.popOverMenuItems.linkTo'),\r\n          callback: ({ doc }) => handlers.onLink([doc], resetToDefaultValues),\r\n        },\r\n      ]\r\n      : []),\r\n    ...(canLinkToParentContext\r\n      ? [\r\n        {\r\n          id: 'LinkToParentContext',\r\n          label: `${utils.string.t('dms.view.popOverMenuItems.linkTo')} ${parentContext}`,\r\n          callback: ({ doc }) => linkDocToParentContext([doc]),\r\n        },\r\n      ]\r\n      : []),\r\n  ];\r\n\r\n  const resetSearch = () => {\r\n    setResetKey(new Date().getTime());\r\n    setSearch('');\r\n  };\r\n\r\n  const submitSearch = (query) => {\r\n    setSearch(query);\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    originalTableData?.sort(firstBy(utils.sort.array('lexical', by, dir)));\r\n  };\r\n\r\n  const launchDmsUpload = () => (files) => {\r\n    dispatch(addLoader('DmsUploadFiles'));\r\n    const refinedReferenceId = getRefIdForContext();\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_UPLOAD_FILES',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.upload.modalItems.uploadDocuments'),\r\n          hideCompOnBlur: false,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            files,\r\n            context,\r\n            referenceId: refinedReferenceId,\r\n            sourceId,\r\n            documentTypeKey,\r\n            searchParamsAfterUpload,\r\n            confirmLabel: utils.string.t('app.ok'),\r\n            cancelLabel: utils.string.t('app.goBack'),\r\n            confirmMessage: utils.string.t('processingInstructions.documentsWillNotBeSaved'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n            onClosingUploadModal: () => handleUploadModalClose(),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleUploadModalClose = () => {\r\n    // Premium Processing Case Details\r\n    const policyRef = ppCaseDetails?.policyRef;\r\n    const instructionId = ppCaseDetails?.instructionId;\r\n    if (!utils.dmsFormatter.isDmsFromPiInstruction(documentTypeKey)) {\r\n      // Refresh DmsTable Data once Upload is done\r\n      dispatch(\r\n        getViewTableDocuments({\r\n          ...(searchParamsAfterUpload\r\n            ? searchParamsAfterUpload\r\n            : {\r\n              referenceId,\r\n              sectionType: context,\r\n              documentTypeKey,\r\n              parentLossRef,\r\n              ...(policyRef && instructionId && { policyRef, instructionId }),\r\n            }),\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleCheckboxClick = (e, doc) => {\r\n    e.stopPropagation();\r\n    let newlySelectedDocs = [...selectedDocs, doc];\r\n    if (selectedDocs?.find((docs) => docs.documentId === doc.documentId)) {\r\n      newlySelectedDocs = newlySelectedDocs.filter((selectedDoc) => selectedDoc.documentId !== doc.documentId);\r\n    }\r\n\r\n    if (utils.generic.isFunction(handlers?.onSelectFile)) {\r\n      handlers.onSelectFile(newlySelectedDocs);\r\n    }\r\n\r\n    setSelectedDocs(newlySelectedDocs);\r\n  };\r\n\r\n  const checkLinkedToMultipleContexts = (docList) => {\r\n    const linkedDocList = [];\r\n    if (utils.generic.isValidArray(docList, true)) {\r\n      const selectedDocList = [...docList];\r\n      selectedDocList.forEach((doc) => {\r\n        if (doc?.isLinkedToMultipleContexts) {\r\n          linkedDocList.push(doc.documentName);\r\n        }\r\n      });\r\n    }\r\n    return linkedDocList;\r\n  };\r\n\r\n  const showCheckboxesClick = (event) => {\r\n    setIsMultiSelect(event?.target?.checked);\r\n  };\r\n\r\n  const handleMultipleDownload = () => {\r\n    const selectedDocIds = selectedDocs?.map((docId) => docId.documentId);\r\n    if (selectedDocs?.length !== 1) {\r\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\r\n      return;\r\n    }\r\n    dispatch(viewDocumentsDownload(selectedDocs?.[0]));\r\n  };\r\n\r\n  const handleMutipleUnlinking = () => {\r\n    confirmDocumentUnlink(selectedDocs);\r\n  };\r\n\r\n  const handleMutipleDelete = () => {\r\n    const linkedDocList = checkLinkedToMultipleContexts(selectedDocs);\r\n    if (utils.generic.isValidArray(linkedDocList, true)) {\r\n      const errorText = `${utils.string.t('dms.view.deleteDocument.deleteWarning')} \\n   -   ${linkedDocList.join('\\n   -   ')}`;\r\n      dispatch(enqueueNotification(errorText, 'error'));\r\n    }\r\n    confirmDocumentDelete(selectedDocs);\r\n  };\r\n\r\n  const handleMutipleLink = () => {\r\n    handlers.onLink(selectedDocs, resetToDefaultValues);\r\n  };\r\n\r\n  const isGxbDocument = (doc) => {\r\n    return doc.srcApplication === constants.DMS_SHAREPATH_SOURCES.gxb;\r\n  };\r\n\r\n  const getRefIdForContext = () => {\r\n    const { type, caseIncidentNotesID, refId } = contextSubType;\r\n    if (type === constants.DMS_TASK_CONTEXT_TYPE_RFI_RESPONSE) {\r\n      return caseIncidentNotesID ? refId + '-' + caseIncidentNotesID : refId;\r\n    } else if (type === constants.DMS_TASK_CONTEXT_TYPE_RFI || type === constants.DMS_TASK_CONTEXT_TYPE_ADHOC) {\r\n      return refId;\r\n    } else {\r\n      return referenceId;\r\n    }\r\n  };\r\n\r\n  const docClassification = utils?.dmsFormatter?.getDocumentClassificationList();\r\n\r\n  const docClassificationList = new Map(\r\n    docClassification?.map((item) => {\r\n      return [item?.id, item?.value];\r\n    })\r\n  );\r\n\r\n  const getDocClassification = (value) => {\r\n    return docClassificationList?.get(Number(value));\r\n  };\r\n\r\n  // abort\r\n  if (!columnsData) return null;\r\n\r\n  return (\r\n    <DmsTableView\r\n      cols={cols}\r\n      documents={filteredTableData}\r\n      pagination={pagination}\r\n      popoverActions={popoverActions}\r\n      search={search}\r\n      resetKey={resetKey}\r\n      isMultiSelect={isMultiSelect}\r\n      showHeader={showHeader}\r\n      canUpload={canUpload}\r\n      canSearch={canSearch}\r\n      canUnlink={canUnlink}\r\n      canDelete={canDelete}\r\n      canMultiSelect={canMultiSelect}\r\n      canLink={canLink}\r\n      fnolViewOptions={fnolViewOptions}\r\n      selectedDocs={selectedDocs}\r\n      isDmsFromPiRiskRef={isDmsFromPiRiskRef}\r\n      isWorkBasketOrAllCases={isWorkBasketOrAllCases}\r\n      isDmsFileViewGridDataLoading={isDmsFileViewGridDataLoading}\r\n      isSeniorManager={isSeniorManager}\r\n      isClaims={isClaims}\r\n      getDocClassification={getDocClassification}\r\n      canLinkToParentContext={canLinkToParentContext}\r\n      parentContext={parentContext}\r\n      handlers={{\r\n        resetSearch: resetSearch,\r\n        submitSearch: submitSearch,\r\n        handleSort: handleSort,\r\n        uploadModal: launchDmsUpload,\r\n        handleCheckboxClick: handleCheckboxClick,\r\n        showCheckboxesClick: showCheckboxesClick,\r\n        handleMultipleDownload: handleMultipleDownload,\r\n        handleMutipleUnlinking: handleMutipleUnlinking,\r\n        handleMutipleDelete: handleMutipleDelete,\r\n        handleMutipleLink: handleMutipleLink,\r\n        linkDocToParentContext\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}