{"ast":null,"code":"import \"core-js/modules/es.object.to-string\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Confirm\\\\Confirm.stories.js\",\n    _this = this;\n\nimport React from 'react';\nimport { Confirm, Modal } from 'components';\nimport { withKnobs, text, button } from '@storybook/addon-knobs';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from 'stores';\nimport merge from 'lodash/merge';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Confirm',\n  component: Confirm,\n  decorators: [withKnobs]\n};\n\nvar getStore = function getStore(obj) {\n  var enhancer = compose(applyMiddleware(thunk));\n  var defaultStore = createStore(reducer, {}, enhancer);\n  var preloadedState = merge(defaultStore.getState(), obj); // return default store if no custom JSON is passed\n\n  if (!obj) {\n    return defaultStore;\n  } // otherwise, return new deeply-merged store with data from JSON obj\n\n\n  return createStore(reducer, preloadedState, enhancer);\n};\n\nexport var Default = function Default() {\n  var confirmCancelTitle = text('Cancel Title', '').toString();\n  var confirmConfirmTitle = text('Confirm Title', '').toString();\n\n  var handler = function handler() {};\n\n  var showModal = button('Show Confirm Modal', handler);\n\n  var onClick = function onClick(text) {\n    console.log(\"[onClick] \".concat(text));\n  };\n\n  var modalVal = {\n    ui: {\n      modal: [{\n        visible: true,\n        type: 'CONFIRM',\n        props: {\n          title: 'Confirm Modal',\n          subtitle: 'This is a confirm dialog modal',\n          fullWidth: true,\n          maxWidth: 'sm',\n          componentProps: {\n            cancelLabel: confirmCancelTitle,\n            confirmLabel: confirmConfirmTitle,\n            cancelHandler: function cancelHandler() {\n              return onClick('Cancel');\n            },\n            submitHandler: function submitHandler() {\n              return onClick('Submit');\n            }\n          }\n        }\n      }]\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: getStore(modalVal),\n    children: /*#__PURE__*/_jsxDEV(Modal, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, _this);\n};\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Confirm\\\\Confirm.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\Confirm\\\\Confirm.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Confirm/Confirm.stories.js"],"names":["React","Confirm","Modal","withKnobs","text","button","applyMiddleware","createStore","compose","Provider","thunk","reducer","merge","title","component","decorators","getStore","obj","enhancer","defaultStore","preloadedState","getState","Default","confirmCancelTitle","toString","confirmConfirmTitle","handler","showModal","onClick","console","log","modalVal","ui","modal","visible","type","props","subtitle","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","cancelHandler","submitHandler"],"mappings":";;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,EAAkBC,KAAlB,QAA+B,YAA/B;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,MAA1B,QAAwC,wBAAxC;AACA,SAASC,eAAT,EAA0BC,WAA1B,EAAuCC,OAAvC,QAAsD,OAAtD;AACA,SAASC,QAAT,QAAyB,aAAzB;AACA,OAAOC,KAAP,MAAkB,aAAlB;AACA,OAAOC,OAAP,MAAoB,QAApB;AACA,OAAOC,KAAP,MAAkB,cAAlB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,SADM;AAEbC,EAAAA,SAAS,EAAEb,OAFE;AAGbc,EAAAA,UAAU,EAAE,CAACZ,SAAD;AAHC,CAAf;;AAMA,IAAMa,QAAQ,GAAG,SAAXA,QAAW,CAACC,GAAD,EAAS;AACxB,MAAMC,QAAQ,GAAGV,OAAO,CAACF,eAAe,CAACI,KAAD,CAAhB,CAAxB;AACA,MAAMS,YAAY,GAAGZ,WAAW,CAACI,OAAD,EAAU,EAAV,EAAcO,QAAd,CAAhC;AACA,MAAME,cAAc,GAAGR,KAAK,CAACO,YAAY,CAACE,QAAb,EAAD,EAA0BJ,GAA1B,CAA5B,CAHwB,CAKxB;;AACA,MAAI,CAACA,GAAL,EAAU;AACR,WAAOE,YAAP;AACD,GARuB,CAUxB;;;AACA,SAAOZ,WAAW,CAACI,OAAD,EAAUS,cAAV,EAA0BF,QAA1B,CAAlB;AACD,CAZD;;AAcA,OAAO,IAAMI,OAAO,GAAG,SAAVA,OAAU,GAAM;AAC3B,MAAMC,kBAAkB,GAAGnB,IAAI,CAAC,cAAD,EAAiB,EAAjB,CAAJ,CAAyBoB,QAAzB,EAA3B;AACA,MAAMC,mBAAmB,GAAGrB,IAAI,CAAC,eAAD,EAAkB,EAAlB,CAAJ,CAA0BoB,QAA1B,EAA5B;;AACA,MAAME,OAAO,GAAG,SAAVA,OAAU,GAAM,CAAE,CAAxB;;AACA,MAAMC,SAAS,GAAGtB,MAAM,CAAC,oBAAD,EAAuBqB,OAAvB,CAAxB;;AAEA,MAAME,OAAO,GAAG,SAAVA,OAAU,CAACxB,IAAD,EAAU;AACxByB,IAAAA,OAAO,CAACC,GAAR,qBAAyB1B,IAAzB;AACD,GAFD;;AAIA,MAAM2B,QAAQ,GAAG;AACfC,IAAAA,EAAE,EAAE;AACFC,MAAAA,KAAK,EAAE,CACL;AACEC,QAAAA,OAAO,EAAE,IADX;AAEEC,QAAAA,IAAI,EAAE,SAFR;AAGEC,QAAAA,KAAK,EAAE;AACLvB,UAAAA,KAAK,EAAE,eADF;AAELwB,UAAAA,QAAQ,EAAE,gCAFL;AAGLC,UAAAA,SAAS,EAAE,IAHN;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,cAAc,EAAE;AACdC,YAAAA,WAAW,EAAElB,kBADC;AAEdmB,YAAAA,YAAY,EAAEjB,mBAFA;AAGdkB,YAAAA,aAAa,EAAE;AAAA,qBAAMf,OAAO,CAAC,QAAD,CAAb;AAAA,aAHD;AAIdgB,YAAAA,aAAa,EAAE;AAAA,qBAAMhB,OAAO,CAAC,QAAD,CAAb;AAAA;AAJD;AALX;AAHT,OADK;AADL;AADW,GAAjB;AAuBA,sBACE,QAAC,QAAD;AAAU,IAAA,KAAK,EAAEZ,QAAQ,CAACe,QAAD,CAAzB;AAAA,2BACE,QAAC,KAAD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,WADF;AAKD,CAtCM;AAAMT,O;KAAAA,O","sourcesContent":["import React from 'react';\r\nimport { Confirm, Modal } from 'components';\r\nimport { withKnobs, text, button } from '@storybook/addon-knobs';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from 'stores';\r\nimport merge from 'lodash/merge';\r\n\r\nexport default {\r\n  title: 'Confirm',\r\n  component: Confirm,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nconst getStore = (obj) => {\r\n  const enhancer = compose(applyMiddleware(thunk));\r\n  const defaultStore = createStore(reducer, {}, enhancer);\r\n  const preloadedState = merge(defaultStore.getState(), obj);\r\n\r\n  // return default store if no custom JSON is passed\r\n  if (!obj) {\r\n    return defaultStore;\r\n  }\r\n\r\n  // otherwise, return new deeply-merged store with data from JSON obj\r\n  return createStore(reducer, preloadedState, enhancer);\r\n};\r\n\r\nexport const Default = () => {\r\n  const confirmCancelTitle = text('Cancel Title', '').toString();\r\n  const confirmConfirmTitle = text('Confirm Title', '').toString();\r\n  const handler = () => {};\r\n  const showModal = button('Show Confirm Modal', handler);\r\n\r\n  const onClick = (text) => {\r\n    console.log(`[onClick] ${text}`);\r\n  };\r\n\r\n  const modalVal = {\r\n    ui: {\r\n      modal: [\r\n        {\r\n          visible: true,\r\n          type: 'CONFIRM',\r\n          props: {\r\n            title: 'Confirm Modal',\r\n            subtitle: 'This is a confirm dialog modal',\r\n            fullWidth: true,\r\n            maxWidth: 'sm',\r\n            componentProps: {\r\n              cancelLabel: confirmCancelTitle,\r\n              confirmLabel: confirmConfirmTitle,\r\n              cancelHandler: () => onClick('Cancel'),\r\n              submitHandler: () => onClick('Submit'),\r\n            },\r\n          },\r\n        },\r\n      ],\r\n    },\r\n  };\r\n\r\n  return (\r\n    <Provider store={getStore(modalVal)}>\r\n      <Modal />\r\n    </Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}