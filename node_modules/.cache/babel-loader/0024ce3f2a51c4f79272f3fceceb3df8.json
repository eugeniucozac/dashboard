{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getInterest = function getInterest() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getInterest'\n    };\n    var state = getState();\n    var policyData = get(state, 'claims.policyData') || '';\n    dispatch(getInterestRequest());\n    dispatch(addLoader('getInterest'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/policy/\".concat(policyData.xbPolicyID, \"/source/\").concat(policyData.xbInstanceID, \"/interests\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getInterestSuccess(data.data));\n      dispatch(removeLoader('getInterest'));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getInterestFailure(err, defaultError));\n      dispatch(removeLoader('getInterest'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getInterestRequest = function getInterestRequest(data) {\n  return {\n    type: 'CLAIMS_SELECT_INTEREST_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getInterestSuccess = function getInterestSuccess(data) {\n  return {\n    type: 'CLAIMS_SELECT_INTEREST_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getInterestFailure = function getInterestFailure(data) {\n  return {\n    type: 'CLAIMS_SELECT_INTEREST_GET_FAILURE',\n    payload: data\n  };\n};\nexport var setInterestValue = function setInterestValue(data) {\n  return {\n    type: 'CLAIMS_SELECT_INTEREST_VALUE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getInterest.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getInterest","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","state","policyData","getInterestRequest","api","token","accessToken","claimService","path","xbPolicyID","xbInstanceID","then","response","handleResponse","data","getInterestSuccess","catch","err","getInterestFailure","handleUnauthorized","type","payload","setInterestValue"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACvD;AADuD,oBAEEA,QAAQ,EAFV;AAAA,QAEvCC,IAFuC,aAE/CC,IAF+C,CAEvCD,IAFuC;AAAA,QAEbE,QAFa,aAE/BC,MAF+B,CAErBC,IAFqB,CAEbF,QAFa;;AAIvD,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,UAAU,GAAGZ,GAAG,CAACW,KAAD,EAAQ,mBAAR,CAAH,IAAmC,EAAtD;AAEAT,IAAAA,QAAQ,CAACW,kBAAkB,EAAnB,CAAR;AACAX,IAAAA,QAAQ,CAACL,SAAS,CAAC,aAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACe,GAAN,CACJd,GADI,CACA;AACHe,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,YAFhB;AAGHC,MAAAA,IAAI,4BAAqBN,UAAU,CAACO,UAAhC,qBAAqDP,UAAU,CAACQ,YAAhE;AAHD,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACe,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdtB,MAAAA,QAAQ,CAACuB,kBAAkB,CAACD,IAAI,CAACA,IAAN,CAAnB,CAAR;AACAtB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,aAAD,CAAb,CAAR;AACA,aAAO0B,IAAI,CAACA,IAAZ;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACdzB,MAAAA,QAAQ,CAAC0B,kBAAkB,CAACD,GAAD,EAAMlB,YAAN,CAAnB,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAAC,aAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACe,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CN,UAA5C;AACA,aAAO+B,GAAP;AACD,KAjBI,CAAP;AAkBD,GAhC0B;AAAA,CAApB;AAkCP,OAAO,IAAMd,kBAAkB,GAAG,SAArBA,kBAAqB,CAACW,IAAD,EAAU;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAU;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,kBAAkB,GAAG,SAArBA,kBAAqB,CAACJ,IAAD,EAAU;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMQ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACR,IAAD,EAAU;AACxC,SAAO;AACLM,IAAAA,IAAI,EAAE,8BADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getInterest = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getInterest',\r\n  };\r\n\r\n  const state = getState();\r\n  const policyData = get(state, 'claims.policyData') || '';\r\n\r\n  dispatch(getInterestRequest());\r\n  dispatch(addLoader('getInterest'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/policy/${policyData.xbPolicyID}/source/${policyData.xbInstanceID}/interests`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getInterestSuccess(data.data));\r\n      dispatch(removeLoader('getInterest'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getInterestFailure(err, defaultError));\r\n      dispatch(removeLoader('getInterest'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getInterestRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SELECT_INTEREST_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getInterestSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SELECT_INTEREST_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getInterestFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SELECT_INTEREST_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const setInterestValue = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SELECT_INTEREST_VALUE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}