{"ast":null,"code":"var _s = $RefreshSig$();\n\nimport { useEffect, useMemo } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport get from 'lodash/get';\nimport auth0Js from 'auth0-js'; // app\n\nimport { showModal, selectHasUserTokenExpired, setTokenExpired, renewAuthentication } from 'stores';\nimport { BRAND_BISHOPSGATE } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nexport default function SessionExpired() {\n  _s();\n\n  var dispatch = useDispatch();\n  var uiBrand = useSelector(function (state) {\n    return get(state, 'ui.brand');\n  });\n  var configVars = useSelector(function (state) {\n    return get(state, 'config.vars', {});\n  });\n  var history = useHistory();\n  var auth0 = useMemo(function () {\n    return new auth0Js.WebAuth({\n      domain: config.auth.domain,\n      clientID: uiBrand === BRAND_BISHOPSGATE ? config.auth.bishopsgate.clientID : config.auth.clientID,\n      audience: get(configVars, 'auth0.audience'),\n      redirectUri: config.auth.redirectAuthentication,\n      responseType: config.auth.responseType,\n      scope: config.auth.scope,\n      leeway: config.auth.leeway\n    });\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var hasUserTokenExpired = useSelector(selectHasUserTokenExpired);\n\n  var launchSessionExpireModal = function launchSessionExpireModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('app.sessionTimeout'),\n        maxWidth: 'xs',\n        hideCompOnBlur: false,\n        componentProps: {\n          confirmLabel: utils.string.t('app.staySignedIn'),\n          confirmMessage: utils.string.t('app.sessionExpire'),\n          hideCancelButton: true,\n          submitHandler: function submitHandler() {\n            dispatch(renewAuthentication(auth0, history));\n          },\n          cancelHandler: function cancelHandler() {\n            dispatch(setTokenExpired(false));\n          }\n        }\n      }\n    }));\n  };\n\n  useEffect(function () {\n    if (hasUserTokenExpired) {\n      launchSessionExpireModal();\n    }\n  }, [hasUserTokenExpired]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return null;\n}\n\n_s(SessionExpired, \"JALjRPBNTSUVFjHUufc0GT3Uac4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useHistory, useSelector];\n});\n\n_c = SessionExpired;\n\nvar _c;\n\n$RefreshReg$(_c, \"SessionExpired\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SessionExpired/SessionExpired.js"],"names":["useEffect","useMemo","useDispatch","useSelector","useHistory","get","auth0Js","showModal","selectHasUserTokenExpired","setTokenExpired","renewAuthentication","BRAND_BISHOPSGATE","utils","config","SessionExpired","dispatch","uiBrand","state","configVars","history","auth0","WebAuth","domain","auth","clientID","bishopsgate","audience","redirectUri","redirectAuthentication","responseType","scope","leeway","hasUserTokenExpired","launchSessionExpireModal","component","props","fullWidth","title","string","t","maxWidth","hideCompOnBlur","componentProps","confirmLabel","confirmMessage","hideCancelButton","submitHandler","cancelHandler"],"mappings":"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","sourcesContent":["import { useEffect, useMemo } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport auth0Js from 'auth0-js';\r\n// app\r\nimport { showModal, selectHasUserTokenExpired, setTokenExpired, renewAuthentication } from 'stores';\r\nimport { BRAND_BISHOPSGATE } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function SessionExpired() {\r\n  const dispatch = useDispatch();\r\n  const uiBrand = useSelector((state) => get(state, 'ui.brand'));\r\n  const configVars = useSelector((state) => get(state, 'config.vars', {}));\r\n  const history = useHistory();\r\n\r\n  const auth0 = useMemo(\r\n    () =>\r\n      new auth0Js.WebAuth({\r\n        domain: config.auth.domain,\r\n        clientID: uiBrand === BRAND_BISHOPSGATE ? config.auth.bishopsgate.clientID : config.auth.clientID,\r\n        audience: get(configVars, 'auth0.audience'),\r\n        redirectUri: config.auth.redirectAuthentication,\r\n        responseType: config.auth.responseType,\r\n        scope: config.auth.scope,\r\n        leeway: config.auth.leeway,\r\n      }),\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const hasUserTokenExpired = useSelector(selectHasUserTokenExpired);\r\n  const launchSessionExpireModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('app.sessionTimeout'),\r\n          maxWidth: 'xs',\r\n          hideCompOnBlur: false,\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.staySignedIn'),\r\n            confirmMessage: utils.string.t('app.sessionExpire'),\r\n            hideCancelButton: true,\r\n            submitHandler: () => {\r\n              dispatch(renewAuthentication(auth0, history));\r\n            },\r\n            cancelHandler: () => {\r\n              dispatch(setTokenExpired(false));\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (hasUserTokenExpired) {\r\n      launchSessionExpireModal();\r\n    }\r\n  }, [hasUserTokenExpired]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}