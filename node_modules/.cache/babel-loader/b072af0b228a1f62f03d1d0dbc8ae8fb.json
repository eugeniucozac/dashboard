{"ast":null,"code":"import { authLogout } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nimport { isEmpty } from 'lodash';\nimport moment from 'moment';\nexport var getSearchLosses = function getSearchLosses() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getSearchLosses'\n    };\n    var prevDirection = get(claims, 'lossesTab.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'lossesTab.query') || '';\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'lossesTab.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var prevSearchBy = get(claims, 'lossesTab.searchBy') || '';\n    var newSearchBy = prevSearchBy === '' && params.hasOwnProperty('searchBy') && params.searchBy === '' ? 'lossName' : params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\n\n    var constructFilters = function constructFilters(filtersObj) {\n      var filteredArray = [];\n\n      for (var key in filtersObj) {\n        var _filtersObj$key;\n\n        var selectedFilterValue = key === 'lossDateFrom' || key === 'lossDateTo' || key === 'firstContactDate' ? moment(new Date(filtersObj[key])).format('DD-MM-YYYY') : filtersObj[key];\n\n        if (((_filtersObj$key = filtersObj[key]) === null || _filtersObj$key === void 0 ? void 0 : _filtersObj$key.length) > 0 && typeof filtersObj[key] !== 'string') {\n          filteredArray.push({\n            column: key,\n            filterValue: selectedFilterValue\n          });\n        } else if (typeof filtersObj[key] === 'string' && filtersObj[key] !== '') {\n          filteredArray.push({\n            column: key,\n            filterValue: [{\n              id: 0,\n              name: selectedFilterValue\n            }]\n          });\n        }\n      }\n\n      return filteredArray;\n    };\n\n    var prevFilterQuery = get(claims, 'lossesTab.filterValues') || {};\n    var newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? constructFilters(params.filterTerm) : constructFilters(prevFilterQuery === null || prevFilterQuery === void 0 ? void 0 : prevFilterQuery.filters);\n    var postBody = {\n      requestType: params === null || params === void 0 ? void 0 : params.requestType,\n      page: params && params.page || 0,\n      pageSize: params && params.size || claims.lossesTab.pageSize,\n      search: newQuery,\n      sortBy: newSortBy,\n      searchBy: newSearchBy,\n      direction: newDirection === null || newDirection === void 0 ? void 0 : newDirection.toUpperCase(),\n      filterSearch: !isEmpty(newFilterQuery) ? newFilterQuery : null,\n      filterLossClaimsCriteria: null\n    };\n    dispatch(getSearchLossesRequest(params));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/loss/search',\n      data: postBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getSearchLossesSuccess(data, params === null || params === void 0 ? void 0 : params.requestType));\n      return data;\n    }).catch(function (err) {\n      dispatch(getSearchLossesFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getSearchLossesRequest = function getSearchLossesRequest(params) {\n  return {\n    type: 'LOSSES_TAB_POST_REQUEST',\n    payload: params\n  };\n};\nexport var getSearchLossesSuccess = function getSearchLossesSuccess(data, requestType) {\n  var requestedItem;\n\n  if (requestType === 'search') {\n    requestedItem = data.data.searchValue;\n  }\n\n  if (requestType === 'filter') {\n    requestedItem = data.data.filterValue;\n  }\n\n  return {\n    type: 'LOSSES_TAB_POST_SUCCESS',\n    payload: {\n      items: requestedItem,\n      //data.data,\n      pagination: data.pagination,\n      requestType: requestType\n    }\n  };\n};\nexport var getSearchLossesFailure = function getSearchLossesFailure(error) {\n  return {\n    type: 'LOSSES_TAB_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getSearchLosses.js"],"names":["authLogout","utils","get","isEmpty","moment","getSearchLosses","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","prevSearchBy","newSearchBy","searchBy","constructFilters","filtersObj","filteredArray","key","selectedFilterValue","Date","format","length","push","column","filterValue","id","name","prevFilterQuery","newFilterQuery","filterTerm","filters","postBody","requestType","page","pageSize","size","lossesTab","search","toUpperCase","filterSearch","filterLossClaimsCriteria","getSearchLossesRequest","api","post","token","accessToken","claimService","path","data","then","response","handleResponse","getSearchLossesSuccess","catch","err","getSearchLossesFailure","handleUnauthorized","type","payload","requestedItem","searchValue","items","pagination","error"],"mappings":"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","sourcesContent":["import { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\nimport { isEmpty } from 'lodash';\r\nimport moment from 'moment';\r\n\r\nexport const getSearchLosses =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}, claims} = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getSearchLosses',\r\n    };\r\n\r\n    const prevDirection = get(claims, 'lossesTab.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const prevQuery = get(claims, 'lossesTab.query') || '';\r\n    const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n    \r\n    const prevSortBy = get(claims, 'lossesTab.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n    const prevSearchBy = get(claims, 'lossesTab.searchBy') || '';\r\n    const newSearchBy = prevSearchBy === '' && params.hasOwnProperty('searchBy') && params.searchBy === '' ? 'lossName' : params.hasOwnProperty('searchBy') ? params.searchBy : prevSearchBy;\r\n    \r\n    const constructFilters = (filtersObj) => {\r\n        const filteredArray = [];\r\n        for (const key in filtersObj) {\r\n            const selectedFilterValue =\r\n            key === 'lossDateFrom' || key === 'lossDateTo' || key === 'firstContactDate' ? moment(new Date(filtersObj[key])).format('DD-MM-YYYY') : filtersObj[key];\r\n            if (filtersObj[key]?.length > 0 && typeof filtersObj[key] !== 'string') {\r\n            filteredArray.push({\r\n                column: key,\r\n                filterValue: selectedFilterValue,\r\n            });\r\n            } else if (typeof filtersObj[key] === 'string' && filtersObj[key] !== '') {\r\n            filteredArray.push({\r\n                column: key,\r\n                filterValue: [{ id: 0, name: selectedFilterValue }],\r\n            });\r\n            }\r\n        }\r\n        return filteredArray;\r\n    };\r\n\r\n    const prevFilterQuery = get(claims, 'lossesTab.filterValues') || {};\r\n    const newFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? constructFilters(params.filterTerm) : constructFilters(prevFilterQuery?.filters);\r\n    \r\n    const postBody = {\r\n      requestType: params?.requestType,\r\n      page: (params && params.page) || 0,\r\n      pageSize: (params && params.size) || claims.lossesTab.pageSize,\r\n      search: newQuery,\r\n      sortBy: newSortBy,\r\n      searchBy: newSearchBy,\r\n      direction: newDirection?.toUpperCase(),\r\n      filterSearch: !isEmpty(newFilterQuery) ? newFilterQuery : null,\r\n      filterLossClaimsCriteria: null,\r\n    };\r\n\r\n    dispatch(getSearchLossesRequest(params));\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: 'api/data/loss/search',\r\n        data: postBody,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => {\r\n        dispatch(getSearchLossesSuccess(data, params?.requestType));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getSearchLossesFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      });\r\n  };\r\n\r\nexport const getSearchLossesRequest = (params) => {\r\n  return {\r\n    type: 'LOSSES_TAB_POST_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getSearchLossesSuccess = (data, requestType) => {\r\n  let requestedItem;\r\n  if(requestType==='search'){\r\n    requestedItem = data.data.searchValue;\r\n  }\r\n  if(requestType==='filter'){\r\n    requestedItem = data.data.filterValue;\r\n  }\r\n  return {\r\n    type: 'LOSSES_TAB_POST_SUCCESS',\r\n    payload: {\r\n      items: requestedItem, //data.data,\r\n      pagination: data.pagination,\r\n      requestType: requestType\r\n    },\r\n  };\r\n};\r\n\r\nexport const getSearchLossesFailure = (error) => {\r\n  return {\r\n    type: 'LOSSES_TAB_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}