{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport * as utils from 'utils';\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal } from 'stores';\nexport var createReportGroupExtended = function createReportGroupExtended(payload) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reportingExtended.actions.createReportGroupExtended',\n      message: 'Data missing for POST request'\n    };\n    dispatch(createReportGroupExtendedRequest(payload));\n    dispatch(addLoader('createReportGroupExtended'));\n\n    if (!payload || typeof payload !== 'object') {\n      dispatch(createReportGroupExtendedFailure(defaultError));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.failure', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('createReportGroupExtended'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.odsService,\n      path: 'reports/group',\n      data: payload\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(createReportGroupExtendedSuccess(data));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.success', 'success'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (report group)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(createReportGroupExtendedFailure(err));\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.failure', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('createReportGroupExtended'));\n    });\n  };\n};\nexport var createReportGroupExtendedRequest = function createReportGroupExtendedRequest(payload) {\n  return {\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_REQUEST',\n    payload: payload\n  };\n};\nexport var createReportGroupExtendedSuccess = function createReportGroupExtendedSuccess(data) {\n  return {\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_SUCCESS',\n    data: data\n  };\n};\nexport var createReportGroupExtendedFailure = function createReportGroupExtendedFailure(error) {\n  return {\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reportingExtended/reportingExtended.actions.createReportGroupExtended.js"],"names":["utils","authLogout","enqueueNotification","addLoader","removeLoader","hideModal","createReportGroupExtended","payload","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","createReportGroupExtendedRequest","createReportGroupExtendedFailure","api","post","token","accessToken","odsService","path","data","then","response","handleResponse","json","handleNewData","createReportGroupExtendedSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","error"],"mappings":"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","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal } from 'stores';\r\n\r\nexport const createReportGroupExtended = (payload) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reportingExtended.actions.createReportGroupExtended',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(createReportGroupExtendedRequest(payload));\r\n  dispatch(addLoader('createReportGroupExtended'));\r\n\r\n  if (!payload || typeof payload !== 'object') {\r\n    dispatch(createReportGroupExtendedFailure(defaultError));\r\n    dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.failure', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('createReportGroupExtended'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.odsService,\r\n      path: 'reports/group',\r\n      data: payload,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(createReportGroupExtendedSuccess(data));\r\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.success', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (report group)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(createReportGroupExtendedFailure(err));\r\n      dispatch(enqueueNotification('reportingExtended.reportingGroup.createReportGrp.failure', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('createReportGroupExtended'));\r\n    });\r\n};\r\n\r\nexport const createReportGroupExtendedRequest = (payload) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createReportGroupExtendedSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_SUCCESS',\r\n    data,\r\n  };\r\n};\r\n\r\nexport const createReportGroupExtendedFailure = (error) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_CREATE_REPORT_GROUP_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}