{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router'; //app\n\nimport { ClaimsTableView } from './LossAction.view';\nimport { useSort } from 'hooks';\nimport * as utils from 'utils';\nimport { showModal, setClaimData, hideModal, setClaimsStepperControl } from 'stores';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTable.prototypes = {\n  claims: PropTypes.object.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.object.isRequired,\n  sort: PropTypes.object.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleCreateClaimFromLoss: PropTypes.func.isRequired\n};\nexport default function ClaimsTable(_ref) {\n  _s();\n\n  var _ref$claims = _ref.claims,\n      claims = _ref$claims === void 0 ? {\n    items: []\n  } : _ref$claims,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      handleSort = _ref.handleSort,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      handleCreateClaim = _ref.handleCreateClaim;\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var handleViewClaimClick = function handleViewClaimClick(claimObj) {\n    dispatch(showModal({\n      component: 'VIEW_CLAIM_INFORMATION',\n      props: {\n        title: \"\".concat(utils.string.t('claims.modals.viewClaimDetails.title'), \" - \").concat(claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference),\n        fullWidth: true,\n        hideCompOnBlur: false,\n        maxWidth: 'xl',\n        disableAutoFocus: true,\n        componentProps: {\n          claimData: claimObj,\n          clickOutSideHandler: function clickOutSideHandler() {\n            return _clickOutSideHandler();\n          }\n        }\n      }\n    }));\n  };\n\n  var _clickOutSideHandler = function _clickOutSideHandler() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('status.alert'),\n        hint: utils.string.t('navigation.title'),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          cancelLabel: utils.string.t('app.no'),\n          confirmLabel: utils.string.t('app.yes'),\n          submitHandler: function submitHandler() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n  };\n\n  var handleEditClaim = function handleEditClaim(data) {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(setClaimData({\n                  lossId: data.lossDetailID,\n                  claimId: data.claimID,\n                  policyRef: data.policyRef,\n                  policyNumber: data.policyRef,\n                  xbInstanceID: data.xbInstanceID,\n                  xbPolicyID: data.xbPolicyID,\n                  divisionID: data.divisionID,\n                  sourceID: data.sourceID,\n                  claimReference: data.claimReference\n                }));\n                _context.next = 3;\n                return dispatch(setClaimsStepperControl(2));\n\n              case 3:\n                _context.next = 5;\n                return history.push(config.routes.claimsFNOL.newLoss);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  };\n\n  return /*#__PURE__*/_jsxDEV(ClaimsTableView, {\n    rows: (claims === null || claims === void 0 ? void 0 : claims.items) || [],\n    sort: sort,\n    pagination: {\n      page: claims.page,\n      rowsTotal: claims.itemsTotal,\n      rowsPerPage: claims.pageSize\n    },\n    cols: cols,\n    columnProps: columnProps,\n    handleSort: handleSort,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    handleViewClaimClick: handleViewClaimClick,\n    handleCreateClaim: handleCreateClaim,\n    handleEditClaim: handleEditClaim\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTable, \"CmbNQon1GCdwPeTNdo7ScXDjer4=\", false, function () {\n  return [useDispatch, useHistory, useSort];\n});\n\n_c = ClaimsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTable.js"],"names":["React","PropTypes","useDispatch","useHistory","ClaimsTableView","useSort","utils","showModal","setClaimData","hideModal","setClaimsStepperControl","config","ClaimsTable","prototypes","claims","object","isRequired","cols","array","columnProps","sort","handleSort","func","handleChangePage","handleChangeRowsPerPage","handleCreateClaimFromLoss","items","colsArr","sortObj","handleCreateClaim","dispatch","history","handleViewClaimClick","claimObj","component","props","title","string","t","claimReference","fullWidth","hideCompOnBlur","maxWidth","disableAutoFocus","componentProps","claimData","clickOutSideHandler","hint","cancelLabel","confirmLabel","submitHandler","handleEditClaim","data","fetchData","lossId","lossDetailID","claimId","claimID","policyRef","policyNumber","xbInstanceID","xbPolicyID","divisionID","sourceID","push","routes","claimsFNOL","newLoss","page","rowsTotal","itemsTotal","rowsPerPage","pageSize"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\n\r\n//app\r\nimport { ClaimsTableView } from './LossAction.view';\r\nimport { useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { showModal, setClaimData, hideModal, setClaimsStepperControl } from 'stores';\r\nimport config from 'config';\r\n\r\nClaimsTable.prototypes = {\r\n  claims: PropTypes.object.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.object.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  handleCreateClaimFromLoss: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function ClaimsTable({\r\n  claims = { items: [] },\r\n  cols: colsArr,\r\n  columnProps,\r\n  sort: sortObj,\r\n  handleSort,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleCreateClaim,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n\r\n  const handleViewClaimClick = (claimObj) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'VIEW_CLAIM_INFORMATION',\r\n        props: {\r\n          title: `${utils.string.t('claims.modals.viewClaimDetails.title')} - ${claimObj?.claimReference}`,\r\n          fullWidth: true,\r\n          hideCompOnBlur: false,\r\n          maxWidth: 'xl',\r\n          disableAutoFocus: true,\r\n          componentProps: { claimData: claimObj, clickOutSideHandler: () => clickOutSideHandler() },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const clickOutSideHandler = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('status.alert'),\r\n          hint: utils.string.t('navigation.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            submitHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditClaim = (data) => {\r\n    async function fetchData() {\r\n      dispatch(\r\n        setClaimData({\r\n          lossId: data.lossDetailID,\r\n          claimId: data.claimID,\r\n          policyRef: data.policyRef,\r\n          policyNumber: data.policyRef,\r\n          xbInstanceID: data.xbInstanceID,\r\n          xbPolicyID: data.xbPolicyID,\r\n          divisionID: data.divisionID,\r\n          sourceID: data.sourceID,\r\n          claimReference: data.claimReference,\r\n        })\r\n      );\r\n      await dispatch(setClaimsStepperControl(2));\r\n      await history.push(config.routes.claimsFNOL.newLoss);\r\n    }\r\n    fetchData();\r\n  };\r\n\r\n  return (\r\n    <ClaimsTableView\r\n      rows={claims?.items || []}\r\n      sort={sort}\r\n      pagination={{\r\n        page: claims.page,\r\n        rowsTotal: claims.itemsTotal,\r\n        rowsPerPage: claims.pageSize,\r\n      }}\r\n      cols={cols}\r\n      columnProps={columnProps}\r\n      handleSort={handleSort}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      handleViewClaimClick={handleViewClaimClick}\r\n      handleCreateClaim={handleCreateClaim}\r\n      handleEditClaim={handleEditClaim}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}