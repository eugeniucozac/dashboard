{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTableRow.view.js\";\nimport React from 'react'; //app\n\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\nimport { TableRowHeader } from 'modules';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport { TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LossActionTableRowView(_ref) {\n  var _this = this;\n\n  var data = _ref.data,\n      columnProps = _ref.columnProps;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRowHeader, {\n      title: \"Claim UA13798A01\",\n      subtitle: \"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\",\n      children: data.claimsItems.map(function (item, idx) {\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          \"data-testid\": \"search-row-\".concat(item.actionId),\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actionId')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.actionId),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              text: \"\".concat(item.actionId, \"7685437547734567\"),\n              color: \"secondary\",\n              onClick: function onClick() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 19,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 18,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('name')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.name),\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: item.name,\n              size: \"small\",\n              type: \"error\",\n              color: \"primary\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 22,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 21,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.description),\n            children: item.description\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 24,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.team),\n            children: item.team\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.assignedTo),\n            children: item.assignedTo\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.createdDate),\n            children: utils.string.t('format.date', {\n              value: {\n                date: item === null || item === void 0 ? void 0 : item.createdDate,\n                format: config.ui.format.date.textTime\n              }\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 33,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDate')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.targetDate),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              children: utils.string.t('format.date', {\n                value: {\n                  date: item === null || item === void 0 ? void 0 : item.targetDate,\n                  format: config.ui.format.date.text\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 38,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.priority),\n            children: item.priority\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 45,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.status),\n            children: (item === null || item === void 0 ? void 0 : item.status) && /*#__PURE__*/_jsxDEV(Status, {\n              size: \"sm\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: item === null || item === void 0 ? void 0 : item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 41\n              }, _this),\n              status: (item === null || item === void 0 ? void 0 : item.status) === 'Completed' ? 'success' : 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 17\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 48,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.insured),\n            children: item.insured\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.division),\n            children: item.division\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, _this)]\n        }, item.claimID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 17,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 15,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = LossActionTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTableRow.view.js"],"names":["React","TableCell","Status","Translate","Chip","Link","TableRowHeader","utils","config","TableRow","Typography","LossActionTableRowView","data","columnProps","claimsItems","map","item","idx","actionId","name","description","team","assignedTo","createdDate","string","t","value","date","format","ui","textTime","targetDate","text","priority","status","insured","division","claimID"],"mappings":"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","sourcesContent":["import React from 'react';\r\n\r\n//app\r\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\r\nimport { TableRowHeader } from 'modules';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport { TableRow, Typography } from '@material-ui/core';\r\n\r\nexport function LossActionTableRowView({ data, columnProps }) {\r\n  return (\r\n    <>\r\n      <TableRowHeader title=\"Claim UA13798A01\" subtitle=\"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\">\r\n        {data.claimsItems.map((item, idx) => (\r\n          <TableRow key={item.claimID} data-testid={`search-row-${item.actionId}`} hover>\r\n            <TableCell {...columnProps('actionId')} data-testid={`row-col-${item.actionId}`}>\r\n              <Link text={`${item.actionId}7685437547734567`} color=\"secondary\" onClick={() => {}} />\r\n            </TableCell>\r\n            <TableCell {...columnProps('name')} data-testid={`row-col-${item.name}`}>\r\n              <Chip label={item.name} size=\"small\" type=\"error\" color=\"primary\" variant=\"outlined\" />\r\n            </TableCell>\r\n            <TableCell {...columnProps('description')} data-testid={`row-col-${item.description}`}>\r\n              {item.description}\r\n            </TableCell>\r\n            <TableCell {...columnProps('team')} data-testid={`row-col-${item.team}`}>\r\n              {item.team}\r\n            </TableCell>\r\n            <TableCell {...columnProps('assignedTo')} data-testid={`row-col-${item.assignedTo}`}>\r\n              {item.assignedTo}\r\n            </TableCell>\r\n            <TableCell {...columnProps('createdDate')} data-testid={`row-col-${item.createdDate}`}>\r\n              {utils.string.t('format.date', {\r\n                value: { date: item?.createdDate, format: config.ui.format.date.textTime },\r\n              })}\r\n            </TableCell>\r\n            <TableCell {...columnProps('targetDate')} data-testid={`row-col-${item.targetDate}`}>\r\n              <Typography variant=\"body2\" color=\"error\">\r\n                {utils.string.t('format.date', {\r\n                  value: { date: item?.targetDate, format: config.ui.format.date.text },\r\n                })}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell {...columnProps('priority')} data-testid={`row-col-${item.priority}`}>\r\n              {item.priority}\r\n            </TableCell>\r\n            <TableCell {...columnProps('status')} data-testid={`row-col-${item.status}`}>\r\n              {item?.status && (\r\n                <Status size=\"sm\" text={<Translate label={item?.status} />} status={item?.status === 'Completed' ? 'success' : 'error'} />\r\n              )}\r\n            </TableCell>\r\n            <TableCell {...columnProps('insured')} data-testid={`row-col-${item.insured}`}>\r\n              {item.insured}\r\n            </TableCell>\r\n            <TableCell {...columnProps('division')} data-testid={`row-col-${item.division}`}>\r\n              {item.division}\r\n            </TableCell>\r\n          </TableRow>\r\n        ))}\r\n      </TableRowHeader>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}