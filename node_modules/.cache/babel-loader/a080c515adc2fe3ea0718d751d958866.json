{"ast":null,"code":"import \"core-js/modules/es.symbol\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _typeof from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/typeof\";\n// app\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nexport var editReportsExtended = function editReportsExtended(reportObj) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var report = reportObj.report,\n        reportId = reportObj.reportId,\n        reportgroupId = reportObj.reportgroupId,\n        sectionId = reportObj.sectionId,\n        workspaceId = reportObj.workspaceId,\n        description = reportObj.description,\n        powerbiReportId = reportObj.powerbiReportId,\n        source = reportObj.source;\n    var defaultError = {\n      file: 'stores/reportingExtended.actions.editReportsExtended',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(editReportsExtendedRequest(reportObj));\n    dispatch(addLoader('editReportsExtended'));\n\n    if (_typeof(reportObj) !== 'object' || !report || !reportId || !source) {\n      dispatch(editReportsExtendedFailure(defaultError));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportsExtended'));\n      return;\n    }\n\n    var body = {\n      title: report,\n      description: description,\n      powerbiReportId: powerbiReportId,\n      reportgroupId: reportgroupId,\n      sectionId: sectionId,\n      src: source,\n      workspaceId: workspaceId\n    };\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.odsService,\n      path: \"reports/group/report/\".concat(reportId),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(editReportsExtendedSuccess(data));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.success', 'success'));\n      return data;\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (reportingExtended.editReportsExtended)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(editReportsExtendedFailure(err));\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('editReportsExtended'));\n    });\n  };\n};\nexport var editReportsExtendedRequest = function editReportsExtendedRequest(reportObj) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_REQUEST',\n    reportObj: reportObj\n  };\n};\nexport var editReportsExtendedSuccess = function editReportsExtendedSuccess(data) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_SUCCESS',\n    payload: data\n  };\n};\nexport var editReportsExtendedFailure = function editReportsExtendedFailure(err) {\n  return {\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reportingExtended/reportingExtended.actions.editReportsExtended.js"],"names":["utils","authLogout","addLoader","enqueueNotification","hideModal","removeLoader","editReportsExtended","reportObj","dispatch","getState","auth","user","endpoint","config","vars","report","reportId","reportgroupId","sectionId","workspaceId","description","powerbiReportId","source","defaultError","file","message","editReportsExtendedRequest","editReportsExtendedFailure","body","title","src","api","patch","token","accessToken","odsService","path","data","then","response","handleResponse","json","handleNewData","editReportsExtendedSuccess","err","errorParams","handleError","handleUnauthorized","type","payload"],"mappings":";;;AAAA;AACA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,mBAAhC,EAAqDC,SAArD,EAAgEC,YAAhE,QAAoF,QAApF;AAEA,OAAO,IAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,SAAD;AAAA,SAAe,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACxE;AADwE,oBAEfA,QAAQ,EAFO;AAAA,QAExDC,IAFwD,aAEhEC,IAFgE,CAExDD,IAFwD;AAAA,QAE9BE,QAF8B,aAEhDC,MAFgD,CAEtCC,IAFsC,CAE9BF,QAF8B;;AAAA,QAIhEG,MAJgE,GAIkCR,SAJlC,CAIhEQ,MAJgE;AAAA,QAIxDC,QAJwD,GAIkCT,SAJlC,CAIxDS,QAJwD;AAAA,QAI9CC,aAJ8C,GAIkCV,SAJlC,CAI9CU,aAJ8C;AAAA,QAI/BC,SAJ+B,GAIkCX,SAJlC,CAI/BW,SAJ+B;AAAA,QAIpBC,WAJoB,GAIkCZ,SAJlC,CAIpBY,WAJoB;AAAA,QAIPC,WAJO,GAIkCb,SAJlC,CAIPa,WAJO;AAAA,QAIMC,eAJN,GAIkCd,SAJlC,CAIMc,eAJN;AAAA,QAIuBC,MAJvB,GAIkCf,SAJlC,CAIuBe,MAJvB;AAMxE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE,sDADa;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAKAjB,IAAAA,QAAQ,CAACkB,0BAA0B,CAACnB,SAAD,CAA3B,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,qBAAD,CAAV,CAAR;;AAEA,QAAI,QAAOK,SAAP,MAAqB,QAArB,IAAiC,CAACQ,MAAlC,IAA4C,CAACC,QAA7C,IAAyD,CAACM,MAA9D,EAAsE;AACpEd,MAAAA,QAAQ,CAACmB,0BAA0B,CAACJ,YAAD,CAA3B,CAAR;AACAf,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,OAAtD,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAI,MAAAA,QAAQ,CAACH,YAAY,CAAC,qBAAD,CAAb,CAAR;AACA;AACD;;AAED,QAAMuB,IAAI,GAAG;AACXC,MAAAA,KAAK,EAAEd,MADI;AAEXK,MAAAA,WAAW,EAAEA,WAFF;AAGXC,MAAAA,eAAe,EAAEA,eAHN;AAIXJ,MAAAA,aAAa,EAAEA,aAJJ;AAKXC,MAAAA,SAAS,EAAEA,SALA;AAMXY,MAAAA,GAAG,EAAER,MANM;AAOXH,MAAAA,WAAW,EAAEA;AAPF,KAAb;AAUA,WAAOnB,KAAK,CAAC+B,GAAN,CACJC,KADI,CACE;AACLC,MAAAA,KAAK,EAAEvB,IAAI,CAACwB,WADP;AAELtB,MAAAA,QAAQ,EAAEA,QAAQ,CAACuB,UAFd;AAGLC,MAAAA,IAAI,iCAA0BpB,QAA1B,CAHC;AAILqB,MAAAA,IAAI,EAAET;AAJD,KADF,EAOJU,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcvC,KAAK,CAAC+B,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUzC,KAAK,CAAC+B,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACd7B,MAAAA,QAAQ,CAACmC,0BAA0B,CAACN,IAAD,CAA3B,CAAR;AACA7B,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,SAAtD,CAApB,CAAR;AACA,aAAOkC,IAAP;AACD,KAbI,WAcE,UAACO,GAAD,EAAS;AACd,UAAMC,WAAW,mCACZtB,YADY;AAEfE,QAAAA,OAAO,EAAE;AAFM,QAAjB;;AAKAzB,MAAAA,KAAK,CAAC+B,GAAN,CAAUe,WAAV,CAAsBF,GAAtB,EAA2BC,WAA3B;AACA7C,MAAAA,KAAK,CAAC+B,GAAN,CAAUgB,kBAAV,CAA6BH,GAA7B,EAAkCpC,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACmB,0BAA0B,CAACiB,GAAD,CAA3B,CAAR;AACApC,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,mDAAD,EAAsD,OAAtD,CAApB,CAAR;AACA,aAAOyC,GAAP;AACD,KAzBI,aA0BI,YAAM;AACbpC,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACAI,MAAAA,QAAQ,CAACH,YAAY,CAAC,qBAAD,CAAb,CAAR;AACD,KA7BI,CAAP;AA8BD,GA9DkC;AAAA,CAA5B;AAgEP,OAAO,IAAMqB,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACnB,SAAD,EAAe;AACvD,SAAO;AACLyC,IAAAA,IAAI,EAAE,wCADD;AAELzC,IAAAA,SAAS,EAATA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMoC,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACN,IAAD,EAAU;AAClD,SAAO;AACLW,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEZ;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMV,0BAA0B,GAAG,SAA7BA,0BAA6B,CAACiB,GAAD,EAAS;AACjD,SAAO;AACLI,IAAAA,IAAI,EAAE,wCADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\n\r\nexport const editReportsExtended = (reportObj) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const { report, reportId, reportgroupId, sectionId, workspaceId, description, powerbiReportId, source } = reportObj;\r\n\r\n  const defaultError = {\r\n    file: 'stores/reportingExtended.actions.editReportsExtended',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  dispatch(editReportsExtendedRequest(reportObj));\r\n  dispatch(addLoader('editReportsExtended'));\r\n\r\n  if (typeof reportObj !== 'object' || !report || !reportId || !source) {\r\n    dispatch(editReportsExtendedFailure(defaultError));\r\n    dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('editReportsExtended'));\r\n    return;\r\n  }\r\n\r\n  const body = {\r\n    title: report,\r\n    description: description,\r\n    powerbiReportId: powerbiReportId,\r\n    reportgroupId: reportgroupId,\r\n    sectionId: sectionId,\r\n    src: source,\r\n    workspaceId: workspaceId,\r\n  };\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.odsService,\r\n      path: `reports/group/report/${reportId}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(editReportsExtendedSuccess(data));\r\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.success', 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API fetch error (reportingExtended.editReportsExtended)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(editReportsExtendedFailure(err));\r\n      dispatch(enqueueNotification('reportingExtended.reporting.editReporting.failure', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editReportsExtended'));\r\n    });\r\n};\r\n\r\nexport const editReportsExtendedRequest = (reportObj) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_REQUEST',\r\n    reportObj,\r\n  };\r\n};\r\n\r\nexport const editReportsExtendedSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editReportsExtendedFailure = (err) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_EDIT_REPORT_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}