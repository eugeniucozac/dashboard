{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ConfirmRFISubmission\\\\ConfirmRFISubmission.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport moment from 'moment';\nimport { ConfirmRFISubmissionView } from './ConfirmRFISubmission.view';\nimport * as utils from 'utils';\nimport { selectCreateRfiInfo, selectPriorities, selectCreateRFIDocs, selectClaimsAssignedToUsers } from 'stores';\nimport config from 'config';\nimport { REMINDER_VALUES } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ConfirmRFISubmission(props) {\n  _s();\n\n  var _useSelector$find, _selectAssignees$item, _selectAssignees$item2, _REMINDER_VALUES$find;\n\n  var createRfiInfo = useSelector(selectCreateRfiInfo);\n  var priorities = (_useSelector$find = useSelector(selectPriorities).find(function (_ref) {\n    var id = _ref.id;\n    return id.toString() === createRfiInfo.priority;\n  })) === null || _useSelector$find === void 0 ? void 0 : _useSelector$find.description;\n  var rfiDocs = useSelector(selectCreateRFIDocs);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var selectedUserFullName = selectAssignees === null || selectAssignees === void 0 ? void 0 : (_selectAssignees$item = selectAssignees.items) === null || _selectAssignees$item === void 0 ? void 0 : (_selectAssignees$item2 = _selectAssignees$item.filter(function (user) {\n    return (user === null || user === void 0 ? void 0 : user.email) === (createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.sendToUser);\n  })[0]) === null || _selectAssignees$item2 === void 0 ? void 0 : _selectAssignees$item2.fullName;\n  var reminder = (_REMINDER_VALUES$find = REMINDER_VALUES.find(function (_ref2) {\n    var id = _ref2.id;\n    return id === createRfiInfo.reminderDate;\n  })) === null || _REMINDER_VALUES$find === void 0 ? void 0 : _REMINDER_VALUES$find.name;\n  var rfiInfo = [{\n    title: utils.string.t('claims.processing.taskDetailsLabels.claimRef'),\n    value: createRfiInfo.claimRef\n  }, {\n    title: utils.string.t('claims.columns.createRFIColumns.queryCode'),\n    value: createRfiInfo.queryCodeDescription\n  }, {\n    title: utils.string.t('claims.columns.createRFIColumns.priority'),\n    value: priorities\n  }, {\n    title: utils.string.t('claims.columns.createRFIColumns.sendTo'),\n    value: selectedUserFullName\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\n    value: createRfiInfo.taskRef\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.description'),\n    value: createRfiInfo.description,\n    fullWidth: true\n  }];\n  var diariseInfo = [{\n    title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n    value: new moment(createRfiInfo.targetDueDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\n    value: reminder\n  }];\n  return /*#__PURE__*/_jsxDEV(ConfirmRFISubmissionView, _objectSpread(_objectSpread({}, props), {}, {\n    rfiInfo: rfiInfo,\n    diariseInfo: diariseInfo,\n    rfiDocs: rfiDocs\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ConfirmRFISubmission, \"mNIm6CaXO5gD47X3qck0rXEK1Fk=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ConfirmRFISubmission;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfirmRFISubmission\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ConfirmRFISubmission/ConfirmRFISubmission.js"],"names":["React","useSelector","moment","ConfirmRFISubmissionView","utils","selectCreateRfiInfo","selectPriorities","selectCreateRFIDocs","selectClaimsAssignedToUsers","config","REMINDER_VALUES","ConfirmRFISubmission","props","createRfiInfo","priorities","find","id","toString","priority","description","rfiDocs","selectAssignees","selectedUserFullName","items","filter","user","email","sendToUser","fullName","reminder","reminderDate","name","rfiInfo","title","string","t","value","claimRef","queryCodeDescription","taskRef","fullWidth","diariseInfo","targetDueDate","format","ui","date","text"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\nimport { ConfirmRFISubmissionView } from './ConfirmRFISubmission.view';\r\nimport * as utils from 'utils';\r\nimport { selectCreateRfiInfo, selectPriorities, selectCreateRFIDocs, selectClaimsAssignedToUsers } from 'stores';\r\nimport config from 'config';\r\nimport { REMINDER_VALUES } from 'consts';\r\n\r\nexport default function ConfirmRFISubmission(props) {\r\n  const createRfiInfo = useSelector(selectCreateRfiInfo);\r\n  const priorities = useSelector(selectPriorities).find(({ id }) => id.toString() === createRfiInfo.priority)?.description;\r\n  const rfiDocs = useSelector(selectCreateRFIDocs);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const selectedUserFullName = selectAssignees?.items?.filter((user) => user?.email === createRfiInfo?.sendToUser)[0]?.fullName;\r\n\r\n  const reminder = REMINDER_VALUES.find(({ id }) => id === createRfiInfo.reminderDate)?.name;\r\n  const rfiInfo = [\r\n    { title: utils.string.t('claims.processing.taskDetailsLabels.claimRef'), value: createRfiInfo.claimRef },\r\n    { title: utils.string.t('claims.columns.createRFIColumns.queryCode'), value: createRfiInfo.queryCodeDescription },\r\n    { title: utils.string.t('claims.columns.createRFIColumns.priority'), value: priorities },\r\n    { title: utils.string.t('claims.columns.createRFIColumns.sendTo'), value: selectedUserFullName },\r\n    { title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'), value: createRfiInfo.taskRef },\r\n    { title: utils.string.t('claims.processing.taskDetailsLabels.description'), value: createRfiInfo.description, fullWidth: true },\r\n  ];\r\n  const diariseInfo = [\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n      value: new moment(createRfiInfo.targetDueDate).format(config.ui.format.date.text),\r\n    },\r\n    { title: utils.string.t('claims.processing.taskDetailsLabels.reminder'), value: reminder },\r\n  ];\r\n  return <ConfirmRFISubmissionView {...props} rfiInfo={rfiInfo} diariseInfo={diariseInfo} rfiDocs={rfiDocs} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}