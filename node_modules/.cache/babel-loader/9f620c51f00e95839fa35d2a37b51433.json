{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsInformation\\\\ClaimsInformation.view.js\";\nimport React, { Fragment } from 'react';\nimport classnames from 'classnames';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './ClaimsInformation.styles';\nimport { Accordion, Info } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsInformationView.propTypes = {\n  title: PropTypes.string.isRequired,\n  details: PropTypes.array.isRequired,\n  editLinkInfo: PropTypes.array.isRequired\n};\nexport function ClaimsInformationView(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      details = _ref.details,\n      editLinkInfo = _ref.editLinkInfo;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsInformation'\n  })();\n  var actions = [_objectSpread({\n    id: 'CL12345'\n  }, editLinkInfo[0])];\n  return /*#__PURE__*/_jsxDEV(\"section\", {\n    className: classes.caseAccordion,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      title: title,\n      actions: actions,\n      children: details && /*#__PURE__*/_jsxDEV(\"section\", {\n        className: classes.info,\n        children: details.length ? details.map(function (claim) {\n          return /*#__PURE__*/_jsxDEV(Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h4\",\n              children: claim.id\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(\"section\", {\n              className: classes.details,\n              children: [/*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.type'),\n                description: claim.type,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.status'),\n                description: claim.status,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 38,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.claimant'),\n                description: claim.team,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.client'),\n                description: claim.insured,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 48,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.policyRiskDetails'),\n                description: \"lorem ipsum lorem\",\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.inceptionDate'),\n                description: claim.inceptionDate,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.expertId'),\n                description: \"ID Number\",\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.expiryDate'),\n                description: claim.expiryDate,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 68,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.adjustorRef'),\n                description: \"Reference Number\",\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(Info, {\n                title: utils.string.t('claims.claimInformation.adjustorName'),\n                description: claim.assignedTo,\n                nestedClasses: {\n                  root: classnames(classes.description)\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 23\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 21\n            }, _this)]\n          }, claim.id, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 19\n          }, _this);\n        }) : utils.string.t('claims.claimInformation.noClaims')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 27,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 24,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsInformation/ClaimsInformation.view.js"],"names":["React","Fragment","classnames","PropTypes","styles","Accordion","Info","utils","makeStyles","Typography","ClaimsInformationView","propTypes","title","string","isRequired","details","array","editLinkInfo","classes","name","actions","id","caseAccordion","info","length","map","claim","t","type","root","description","status","team","insured","inceptionDate","expiryDate","assignedTo"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport classnames from 'classnames';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './ClaimsInformation.styles';\r\nimport { Accordion, Info } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nClaimsInformationView.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  details: PropTypes.array.isRequired,\r\n  editLinkInfo: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function ClaimsInformationView({ title, details, editLinkInfo }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsInformation' })();\r\n  const actions = [{ id: 'CL12345', ...editLinkInfo[0] }];\r\n\r\n  return (\r\n    <section className={classes.caseAccordion}>\r\n      <Accordion title={title} actions={actions}>\r\n        {details && (\r\n          <section className={classes.info}>\r\n            {details.length\r\n              ? details.map((claim) => (\r\n                  <Fragment key={claim.id}>\r\n                    <Typography variant=\"h4\">{claim.id}</Typography>\r\n                    <section className={classes.details}>\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.type')}\r\n                        description={claim.type}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.status')}\r\n                        description={claim.status}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.claimant')}\r\n                        description={claim.team}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.client')}\r\n                        description={claim.insured}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.policyRiskDetails')}\r\n                        description=\"lorem ipsum lorem\"\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.inceptionDate')}\r\n                        description={claim.inceptionDate}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.expertId')}\r\n                        description=\"ID Number\"\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.expiryDate')}\r\n                        description={claim.expiryDate}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.adjustorRef')}\r\n                        description=\"Reference Number\"\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                      <Info\r\n                        title={utils.string.t('claims.claimInformation.adjustorName')}\r\n                        description={claim.assignedTo}\r\n                        nestedClasses={{ root: classnames(classes.description) }}\r\n                      />\r\n                    </section>\r\n                  </Fragment>\r\n                ))\r\n              : utils.string.t('claims.claimInformation.noClaims')}\r\n          </section>\r\n        )}\r\n      </Accordion>\r\n    </section>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}