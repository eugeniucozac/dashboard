{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var putFacilityDetails = function putFacilityDetails() {\n  var formData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  var facilityId = arguments.length > 1 ? arguments[1] : undefined;\n  return function (dispatch, getState) {\n    var _formData$permissionT;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.putFacilityDetails',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(putFacilityRequest({\n      formData: formData,\n      facilityId: facilityId\n    }));\n    dispatch(addLoader('putFacilityDetails'));\n\n    if (!facilityId) {\n      dispatch(putFacilityRatesFailure(defaultError));\n      dispatch(enqueueNotification('notification.generic.request', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('putFacilityDetails'));\n      return;\n    }\n\n    var body = {\n      preBind: formData === null || formData === void 0 ? void 0 : formData.preBind,\n      permissionToBindGroups: formData === null || formData === void 0 ? void 0 : (_formData$permissionT = formData.permissionToBindGroups) === null || _formData$permissionT === void 0 ? void 0 : _formData$permissionT.map(function (prog) {\n        return prog.value;\n      }),\n      notifiedUsers: formData === null || formData === void 0 ? void 0 : formData.notifiedUsers,\n      permissionToDismissIssuesGroups: formData === null || formData === void 0 ? void 0 : formData.permissionToDismissIssuesGroups.map(function (item) {\n        return item.value;\n      })\n    };\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: \"api/v1/facilities/\".concat(facilityId, \"/settings\"),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json);\n    }).then(function (data) {\n      dispatch(putFacilityDetailsSuccess(data));\n      dispatch(enqueueNotification('notification.putFacilityDetails.success', 'success'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (risk.putFacilityDetails)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(putFacilityRatesFailure(err));\n      dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('putFacilityDetails'));\n      return;\n    });\n  };\n};\nexport var putFacilityRequest = function putFacilityRequest(formData) {\n  return {\n    type: 'RISK_FACILITY_PUT_REQUEST',\n    payload: formData\n  };\n};\nexport var putFacilityDetailsSuccess = function putFacilityDetailsSuccess(responseData) {\n  return {\n    type: 'RISK_FACILITY_DETAILS_PUT_SUCCESS',\n    payload: responseData\n  };\n};\nexport var putFacilityRatesFailure = function putFacilityRatesFailure(error) {\n  return {\n    type: 'RISK_FACILITY_PUT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.putFacilityDetails.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","putFacilityDetails","formData","facilityId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","putFacilityRequest","putFacilityRatesFailure","body","preBind","permissionToBindGroups","map","prog","value","notifiedUsers","permissionToDismissIssuesGroups","item","api","put","token","accessToken","path","data","then","response","handleResponse","json","handleResponseJsonObject","putFacilityDetailsSuccess","err","errorParams","handleError","handleUnauthorized","getErrorMessage","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const putFacilityDetails =\r\n  (formData = {}, facilityId) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/risk.actions.putFacilityDetails',\r\n      message: 'Data missing for PUT request',\r\n    };\r\n\r\n    dispatch(putFacilityRequest({ formData, facilityId }));\r\n    dispatch(addLoader('putFacilityDetails'));\r\n\r\n    if (!facilityId) {\r\n      dispatch(putFacilityRatesFailure(defaultError));\r\n      dispatch(enqueueNotification('notification.generic.request', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('putFacilityDetails'));\r\n      return;\r\n    }\r\n\r\n    const body = {\r\n      preBind: formData?.preBind,\r\n      permissionToBindGroups: formData?.permissionToBindGroups?.map((prog) => prog.value),\r\n      notifiedUsers: formData?.notifiedUsers,\r\n      permissionToDismissIssuesGroups: formData?.permissionToDismissIssuesGroups.map((item) => item.value),\r\n    };\r\n\r\n    return utils.api\r\n      .put({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.auth,\r\n        path: `api/v1/facilities/${facilityId}/settings`,\r\n        data: body,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleResponseJsonObject(json))\r\n      .then((data) => {\r\n        dispatch(putFacilityDetailsSuccess(data));\r\n        dispatch(enqueueNotification('notification.putFacilityDetails.success', 'success'));\r\n      })\r\n      .catch((err) => {\r\n        const errorParams = {\r\n          ...defaultError,\r\n          message: 'API post error (risk.putFacilityDetails)',\r\n        };\r\n\r\n        utils.api.handleError(err, errorParams);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(putFacilityRatesFailure(err));\r\n        dispatch(enqueueNotification(utils.api.getErrorMessage(err), 'error'));\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        dispatch(hideModal());\r\n        dispatch(removeLoader('putFacilityDetails'));\r\n        return;\r\n      });\r\n  };\r\n\r\nexport const putFacilityRequest = (formData) => {\r\n  return {\r\n    type: 'RISK_FACILITY_PUT_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const putFacilityDetailsSuccess = (responseData) => {\r\n  return {\r\n    type: 'RISK_FACILITY_DETAILS_PUT_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const putFacilityRatesFailure = (error) => {\r\n  return {\r\n    type: 'RISK_FACILITY_PUT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}