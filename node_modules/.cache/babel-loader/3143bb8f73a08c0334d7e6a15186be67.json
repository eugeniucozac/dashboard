{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DownloadFiles\\\\DownloadFiles.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport { Button, ErrorMessage, FormActions, FormCheckbox, FormContainer, FormFields, FormGrid } from 'components';\nimport * as utils from 'utils';\nimport { useFormActions } from 'hooks';\nimport styles from './DownloadFiles.styles'; // mui\n\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDownloadFilesView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  isValid: PropTypes.func.isRequired,\n  isDownloadAllSelected: PropTypes.func.isRequired,\n  isDownloadUmrSelected: PropTypes.func.isRequired\n};\nexport function DownloadFilesView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      isValid = _ref.isValid,\n      isDownloadAllSelected = _ref.isDownloadAllSelected,\n      isDownloadUmrSelected = _ref.isDownloadUmrSelected;\n  var classes = makeStyles(styles, {\n    name: 'DownloadFiles'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var currentValues = watch({\n    nest: true\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit.handler),\n      \"data-testid\": \"form-download-files\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            width: 1,\n            children: /*#__PURE__*/_jsxDEV(Collapse, {\n              \"in\": formState.isSubmitted && !isValid(currentValues),\n              timeout: 200,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mb: 2,\n                children: /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                  size: \"md\",\n                  bold: true,\n                  error: {\n                    message: utils.string.t('openingMemo.whitespace.downloadNoSelectionError')\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 44,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 43,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 42,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 41,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            style: {\n              paddingBottom: 32\n            },\n            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'downloadAll')), {}, {\n              control: control,\n              register: register,\n              disabled: isDownloadUmrSelected(currentValues),\n              watch: watch,\n              nestedClasses: {\n                title: classes.title\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'downloadUmr')), {}, {\n              control: control,\n              register: register,\n              disabled: isDownloadAllSelected(currentValues),\n              watch: watch,\n              nestedClasses: {\n                title: classes.title\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 39,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !isValid(currentValues),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 38,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 37,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DownloadFilesView, \"rEsf/0HatlzhZh3WyXnubuEh0Yo=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = DownloadFilesView;\nDownloadFilesView.displayName = \"DownloadFilesView\";\nDownloadFilesView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DownloadFilesView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isValid\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isDownloadAllSelected\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isDownloadUmrSelected\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\DownloadFiles\\\\DownloadFiles.view.js\"] = {\n    name: \"DownloadFilesView\",\n    docgenInfo: DownloadFilesView.__docgenInfo,\n    path: \"src\\\\forms\\\\DownloadFiles\\\\DownloadFiles.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DownloadFilesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DownloadFiles/DownloadFiles.view.js"],"names":["React","PropTypes","useForm","yupResolver","Button","ErrorMessage","FormActions","FormCheckbox","FormContainer","FormFields","FormGrid","utils","useFormActions","styles","makeStyles","Box","Collapse","DownloadFilesView","propTypes","fields","array","isRequired","actions","isValid","func","isDownloadAllSelected","isDownloadUmrSelected","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","register","watch","reset","handleSubmit","formState","cancel","submit","currentValues","nest","root","handler","isSubmitted","message","string","t","paddingBottom","getFieldProps","title","label","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport { Button, ErrorMessage, FormActions, FormCheckbox, FormContainer, FormFields, FormGrid } from 'components';\r\nimport * as utils from 'utils';\r\nimport { useFormActions } from 'hooks';\r\nimport styles from './DownloadFiles.styles';\r\n\r\n// mui\r\nimport { makeStyles, Box, Collapse } from '@material-ui/core';\r\n\r\nDownloadFilesView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  isValid: PropTypes.func.isRequired,\r\n  isDownloadAllSelected: PropTypes.func.isRequired,\r\n  isDownloadUmrSelected: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function DownloadFilesView({ fields, actions, isValid, isDownloadAllSelected, isDownloadUmrSelected }) {\r\n  const classes = makeStyles(styles, { name: 'DownloadFiles' })();\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, register, watch, reset, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n  const currentValues = watch({ nest: true });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit.handler)} data-testid=\"form-download-files\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <Box display=\"flex\" width={1}>\r\n              <Collapse in={formState.isSubmitted && !isValid(currentValues)} timeout={200}>\r\n                <Box mb={2}>\r\n                  <ErrorMessage size=\"md\" bold error={{ message: utils.string.t('openingMemo.whitespace.downloadNoSelectionError') }} />\r\n                </Box>\r\n              </Collapse>\r\n            </Box>\r\n\r\n            <FormGrid item xs={12} sm={6} style={{ paddingBottom: 32 }}>\r\n              <FormCheckbox\r\n                {...utils.form.getFieldProps(fields, 'downloadAll')}\r\n                control={control}\r\n                register={register}\r\n                disabled={isDownloadUmrSelected(currentValues)}\r\n                watch={watch}\r\n                nestedClasses={{ title: classes.title }}\r\n              />\r\n            </FormGrid>\r\n\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormCheckbox\r\n                {...utils.form.getFieldProps(fields, 'downloadUmr')}\r\n                control={control}\r\n                register={register}\r\n                disabled={isDownloadAllSelected(currentValues)}\r\n                watch={watch}\r\n                nestedClasses={{ title: classes.title }}\r\n              />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n          {submit && (\r\n            <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting || !isValid(currentValues)} color=\"primary\" />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}