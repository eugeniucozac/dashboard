{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TrafficLights\\\\TrafficLights.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux'; // app\n\nimport styles from './TrafficLights.styles';\nimport { Badge, Tooltip, Translate } from 'components'; // mui\n\nimport { withStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var TrafficLights = /*#__PURE__*/function (_PureComponent) {\n  _inherits(TrafficLights, _PureComponent);\n\n  var _super = _createSuper(TrafficLights);\n\n  function TrafficLights() {\n    _classCallCheck(this, TrafficLights);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(TrafficLights, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          green = _this$props.green,\n          yellow = _this$props.yellow,\n          red = _this$props.red,\n          tooltip = _this$props.tooltip,\n          tooltipContent = _this$props.tooltipContent,\n          tooltipProps = _this$props.tooltipProps,\n          classes = _this$props.classes;\n\n      var badges = /*#__PURE__*/_jsxDEV(\"div\", {\n        children: [/*#__PURE__*/_jsxDEV(Badge, {\n          type: \"success\",\n          standalone: true,\n          badgeContent: green,\n          showZero: true,\n          className: classes.item,\n          \"data-testid\": \"success-badge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          type: \"alert\",\n          standalone: true,\n          badgeContent: yellow,\n          showZero: true,\n          className: classes.item,\n          \"data-testid\": \"alert-badge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 34,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Badge, {\n          type: \"error\",\n          standalone: true,\n          badgeContent: red,\n          showZero: true,\n          className: classes.item,\n          \"data-testid\": \"error-badge\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 7\n      }, this);\n\n      var tooltipText = tooltipContent || /*#__PURE__*/_jsxDEV(Translate, {\n        parseDangerousHtml: true,\n        label: \"placement.generic.trafficLights.tooltip\",\n        options: {\n          quoted: green,\n          pending: yellow,\n          declined: red\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 7\n      }, this);\n\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.root,\n        children: [tooltip && /*#__PURE__*/_jsxDEV(Tooltip, _objectSpread(_objectSpread({\n          title: tooltipText\n        }, tooltipProps), {}, {\n          children: badges\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 51,\n          columnNumber: 11\n        }, this), !tooltip && badges]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return TrafficLights;\n}(PureComponent);\nTrafficLights.propTypes = {\n  green: PropTypes.number,\n  yellow: PropTypes.number,\n  red: PropTypes.number,\n  tooltip: PropTypes.bool,\n  tooltipContent: PropTypes.element,\n  tooltipProps: PropTypes.object\n};\nTrafficLights.defaultProps = {\n  green: 0,\n  yellow: 0,\n  red: 0\n};\nexport default compose(withStyles(styles))(TrafficLights);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TrafficLights/TrafficLights.js"],"names":["React","PureComponent","PropTypes","compose","styles","Badge","Tooltip","Translate","withStyles","TrafficLights","props","green","yellow","red","tooltip","tooltipContent","tooltipProps","classes","badges","item","tooltipText","quoted","pending","declined","root","propTypes","number","bool","element","object","defaultProps"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\n\r\n// app\r\nimport styles from './TrafficLights.styles';\r\nimport { Badge, Tooltip, Translate } from 'components';\r\n\r\n// mui\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nexport class TrafficLights extends PureComponent {\r\n  static propTypes = {\r\n    green: PropTypes.number,\r\n    yellow: PropTypes.number,\r\n    red: PropTypes.number,\r\n    tooltip: PropTypes.bool,\r\n    tooltipContent: PropTypes.element,\r\n    tooltipProps: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    green: 0,\r\n    yellow: 0,\r\n    red: 0,\r\n  };\r\n\r\n  render() {\r\n    const { green, yellow, red, tooltip, tooltipContent, tooltipProps, classes } = this.props;\r\n\r\n    const badges = (\r\n      <div>\r\n        <Badge type=\"success\" standalone badgeContent={green} showZero={true} className={classes.item} data-testid=\"success-badge\" />\r\n        <Badge type=\"alert\" standalone badgeContent={yellow} showZero={true} className={classes.item} data-testid=\"alert-badge\" />\r\n        <Badge type=\"error\" standalone badgeContent={red} showZero={true} className={classes.item} data-testid=\"error-badge\" />\r\n      </div>\r\n    );\r\n\r\n    const tooltipText = tooltipContent || (\r\n      <Translate\r\n        parseDangerousHtml\r\n        label=\"placement.generic.trafficLights.tooltip\"\r\n        options={{ quoted: green, pending: yellow, declined: red }}\r\n      />\r\n    );\r\n\r\n    return (\r\n      <div className={classes.root}>\r\n        {/* with tooltip */}\r\n        {tooltip && (\r\n          <Tooltip title={tooltipText} {...tooltipProps}>\r\n            {badges}\r\n          </Tooltip>\r\n        )}\r\n\r\n        {/* without tooltip */}\r\n        {!tooltip && badges}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(TrafficLights);\r\n"]},"metadata":{},"sourceType":"module"}