{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getRiskList = function getRiskList(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getList'\n    };\n    var state = getState();\n    var prevQuery = get(state, 'risk.list.query') || '';\n    var isNewQuery = params && params.hasOwnProperty('query');\n    var newQuery = isNewQuery ? params.query : prevQuery;\n    var paramsSize = params && params.size || get(state, 'risk.list.pageSize');\n    var paramsOrderBy = params && params.orderBy || get(state, 'risk.list.sortBy');\n    var paramsDirection = params && params.direction || get(state, 'risk.list.sortDirection');\n\n    var endpointParams = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      page: params && params.page || 1\n    }, paramsSize && {\n      size: paramsSize\n    }), paramsOrderBy && {\n      orderBy: paramsOrderBy\n    }), paramsDirection && {\n      direction: paramsDirection\n    }), newQuery && {\n      query: newQuery\n    });\n\n    dispatch(getRiskListRequest(endpointParams));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: 'api/v1/risks',\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json, 'content');\n    }).then(function (data) {\n      dispatch(getRiskListSuccess(data));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getRiskListFailure(err));\n      return err;\n    });\n  };\n};\nexport var updateRiskListItemsStatus = function updateRiskListItemsStatus(id, riskStatus) {\n  return {\n    type: 'RISK_LIST_UPDATE_ITEM_RISK_STATUS',\n    payload: {\n      riskId: id,\n      riskStatus: riskStatus\n    }\n  };\n};\nexport var getRiskListRequest = function getRiskListRequest(params) {\n  return {\n    type: 'RISK_LIST_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getRiskListSuccess = function getRiskListSuccess(data) {\n  return {\n    type: 'RISK_LIST_GET_SUCCESS',\n    payload: {\n      content: data.content,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getRiskListFailure = function getRiskListFailure(error) {\n  return {\n    type: 'RISK_LIST_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getList.js"],"names":["get","authLogout","utils","getRiskList","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","state","prevQuery","isNewQuery","hasOwnProperty","newQuery","query","paramsSize","size","paramsOrderBy","orderBy","paramsDirection","direction","endpointParams","page","getRiskListRequest","api","token","accessToken","path","then","response","handleResponse","json","handleResponseJsonObject","data","getRiskListSuccess","catch","err","handleError","handleUnauthorized","getRiskListFailure","updateRiskListItemsStatus","id","riskStatus","type","payload","riskId","content","pagination","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getRiskList = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getList',\r\n  };\r\n\r\n  const state = getState();\r\n  const prevQuery = get(state, 'risk.list.query') || '';\r\n  const isNewQuery = params && params.hasOwnProperty('query');\r\n  const newQuery = isNewQuery ? params.query : prevQuery;\r\n\r\n  const paramsSize = (params && params.size) || get(state, 'risk.list.pageSize');\r\n  const paramsOrderBy = (params && params.orderBy) || get(state, 'risk.list.sortBy');\r\n  const paramsDirection = (params && params.direction) || get(state, 'risk.list.sortDirection');\r\n\r\n  const endpointParams = {\r\n    page: (params && params.page) || 1,\r\n    ...(paramsSize && { size: paramsSize }),\r\n    ...(paramsOrderBy && { orderBy: paramsOrderBy }),\r\n    ...(paramsDirection && { direction: paramsDirection }),\r\n    ...(newQuery && { query: newQuery }),\r\n  };\r\n\r\n  dispatch(getRiskListRequest(endpointParams));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: 'api/v1/risks',\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleResponseJsonObject(json, 'content'))\r\n    .then((data) => {\r\n      dispatch(getRiskListSuccess(data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getRiskListFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const updateRiskListItemsStatus = (id, riskStatus) => {\r\n  return {\r\n    type: 'RISK_LIST_UPDATE_ITEM_RISK_STATUS',\r\n    payload: {\r\n      riskId: id,\r\n      riskStatus: riskStatus,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getRiskListRequest = (params) => {\r\n  return {\r\n    type: 'RISK_LIST_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getRiskListSuccess = (data) => {\r\n  return {\r\n    type: 'RISK_LIST_GET_SUCCESS',\r\n    payload: {\r\n      content: data.content,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getRiskListFailure = (error) => {\r\n  return {\r\n    type: 'RISK_LIST_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}