{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, enqueueNotification, storeProcessingInstruction } from 'stores';\nimport * as utils from 'utils';\nexport var approveOrRejectInstruction = function approveOrRejectInstruction(id, comments, type) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.submit'\n    };\n\n    if (!id || !comments || !['APPROVE', 'REJECT'].includes(type)) {\n      dispatch(approveInstructionFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Invalid data for approve/reject api'\n      })));\n      return;\n    }\n\n    dispatch(addLoader('approveInstruction'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.ppService,\n      data: {\n        notes: comments,\n        type: type\n      },\n      path: \"instruction/approval/\".concat(id)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var instruction = data.data;\n      dispatch(approveInstructionSuccess(instruction));\n      dispatch(storeProcessingInstruction(instruction));\n      dispatch(enqueueNotification(\"processingInstructions.authorisations.\".concat(type.toLowerCase(), \".notification.success\"), 'success'));\n      return instruction;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (approveInstruction)'\n      }));\n      dispatch(enqueueNotification(\"processingInstructions.authorisations.\".concat(type.toLowerCase(), \".notification.failed\"), 'error'));\n      dispatch(approveInstructionFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('approveInstruction'));\n    });\n  };\n};\nexport var approveInstructionRequest = function approveInstructionRequest(values, instruction) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_APPROVE_REQUEST',\n    payload: {\n      values: values,\n      instruction: instruction\n    }\n  };\n};\nexport var approveInstructionSuccess = function approveInstructionSuccess(json) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_APPROVE_SUCCESS',\n    payload: json\n  };\n};\nexport var approveInstructionFailure = function approveInstructionFailure(error) {\n  return {\n    type: 'PROCESSING_INSTRUCTION_APPROVE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.approveOrRejectInstruction.js"],"names":["addLoader","removeLoader","enqueueNotification","storeProcessingInstruction","utils","approveOrRejectInstruction","id","comments","type","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","includes","approveInstructionFailure","message","api","post","token","accessToken","ppService","data","notes","path","then","response","handleResponse","json","handleNewData","instruction","approveInstructionSuccess","toLowerCase","catch","err","handleError","finally","approveInstructionRequest","values","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, storeProcessingInstruction } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const approveOrRejectInstruction = (id, comments, type) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.submit',\r\n  };\r\n\r\n  if (!id || !comments || !['APPROVE', 'REJECT'].includes(type)) {\r\n    dispatch(approveInstructionFailure({ ...defaultError, message: 'Invalid data for approve/reject api' }));\r\n    return;\r\n  }\r\n\r\n  dispatch(addLoader('approveInstruction'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.ppService,\r\n      data: { notes: comments, type: type },\r\n      path: `instruction/approval/${id}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      const instruction = data.data;\r\n      dispatch(approveInstructionSuccess(instruction));\r\n      dispatch(storeProcessingInstruction(instruction));\r\n      dispatch(enqueueNotification(`processingInstructions.authorisations.${type.toLowerCase()}.notification.success`, 'success'));\r\n      return instruction;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (approveInstruction)' });\r\n      dispatch(enqueueNotification(`processingInstructions.authorisations.${type.toLowerCase()}.notification.failed`, 'error'));\r\n      dispatch(approveInstructionFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('approveInstruction'));\r\n    });\r\n};\r\n\r\nexport const approveInstructionRequest = (values, instruction) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_APPROVE_REQUEST',\r\n    payload: { values, instruction },\r\n  };\r\n};\r\n\r\nexport const approveInstructionSuccess = (json) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_APPROVE_SUCCESS',\r\n    payload: json,\r\n  };\r\n};\r\n\r\nexport const approveInstructionFailure = (error) => {\r\n  return {\r\n    type: 'PROCESSING_INSTRUCTION_APPROVE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}