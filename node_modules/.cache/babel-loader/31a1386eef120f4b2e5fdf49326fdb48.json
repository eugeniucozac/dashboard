{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsAcknowledgement\\\\ClaimsAcknowledgement.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport get from 'lodash/get';\nimport moment from 'moment';\nimport * as utils from 'utils';\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\nimport { selectClaimIdUnderProgress, selectClaimsInformation, selectLossId, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectCatCodes, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections, setClaimData, setClaimsStepperControl, getCatCodes } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function ClaimsAcknowledgement(props) {\n  _s();\n\n  var _get, _useSelector, _policySections$find, _interests$find;\n\n  var claimData = useSelector(selectClaimIdUnderProgress) || props.claimDataFromRef;\n  var claimId = (_get = get(claimData, 'claimID')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var catCodes = useSelector(selectCatCodes);\n\n  var catCodeDescription = function catCodeDescription(id) {\n    var _catCodes$find;\n\n    var description = (_catCodes$find = catCodes.find(function (item) {\n      return Number(item.id) === id;\n    })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n    return \"\".concat(id, \" - \").concat(description);\n  };\n\n  var policySections = useSelector(selectClaimsPolicySections);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? 'Our Share' : '100%',\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  useEffect(function () {\n    dispatch(getLossInformation({\n      lossDetailsId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n      sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n      divisionIdParam: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n      claimRefParam: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      viewLoader: false\n    }));\n    dispatch(getClaimsPreviewInformation({\n      claimId: claimId,\n      claimRefParams: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      sourceIdParams: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n      divisionIDParams: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID),\n      viewLoader: false\n    }));\n    dispatch(getPolicyInformation({\n      viewLoader: false\n    }));\n    dispatch(getPolicySections({\n      viewLoader: false\n    }));\n    dispatch(getCatCodes());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleEditClaim = function handleEditClaim() {\n    function fetchData() {\n      return _fetchData.apply(this, arguments);\n    }\n\n    function _fetchData() {\n      _fetchData = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                dispatch(setClaimData({\n                  lossId: claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID,\n                  claimId: claimId,\n                  policyRef: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  policyNumber: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n                  xbInstanceID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbInstanceID,\n                  xbPolicyID: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.xbPolicyID,\n                  divisionID: claimData === null || claimData === void 0 ? void 0 : claimData.divisionID,\n                  sourceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceID,\n                  claimReference: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference\n                }));\n                _context.next = 3;\n                return dispatch(setClaimsStepperControl(1));\n\n              case 3:\n                _context.next = 5;\n                return history.push(config.routes.claimsFNOL.newLoss);\n\n              case 5:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _fetchData.apply(this, arguments);\n    }\n\n    fetchData();\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: !isNaN(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.catCodesID) && catCodeDescription(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.catCodesID)\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.complexity') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.referral') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No'\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA'\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ClaimsAcknowledgementView, _objectSpread(_objectSpread({}, props), {}, {\n      handleClaim: props === null || props === void 0 ? void 0 : props.handleClaim,\n      handleFinish: props === null || props === void 0 ? void 0 : props.handleFinish,\n      handleStep: props === null || props === void 0 ? void 0 : props.handleStep,\n      handleEditClaim: handleEditClaim,\n      claimsInformation: claimsInformation,\n      lossInfo: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n        return _objectSpread(_objectSpread({}, info), {}, {\n          isLoading: isLossInfoLoading\n        });\n      }),\n      policyInfo: policyInfo,\n      claimInfo: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n        return _objectSpread(_objectSpread({}, info), {}, {\n          isLoading: isClaimInfoLoading\n        });\n      }),\n      underWritingInfo: underWritingInfo,\n      underWritingGroupColumns: underWritingGroupColumns\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 303,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsAcknowledgement, \"FAcbPiaWnc3aWFTTXNgLOZNf8xE=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useDispatch, useHistory];\n});\n\n_c = ClaimsAcknowledgement;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsAcknowledgement\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsAcknowledgement/ClaimsAcknowledgement.js"],"names":["React","useEffect","useSelector","useDispatch","useHistory","get","moment","utils","ClaimsAcknowledgementView","selectClaimIdUnderProgress","selectClaimsInformation","selectLossId","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectCatCodes","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","setClaimData","setClaimsStepperControl","getCatCodes","config","constants","ClaimsAcknowledgement","props","claimData","claimDataFromRef","claimId","claimsInformation","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","catCodes","catCodeDescription","id","description","find","item","Number","policySections","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","origCurrencies","state","countriesList","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","toString","name","dispatch","history","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","lossDetailsId","lossDetailID","sourceIdParams","sourceID","divisionIdParam","divisionID","claimRefParam","claimReference","viewLoader","claimRefParams","divisionIDParams","departmentID","handleEditClaim","fetchData","lossId","policyRef","policyNumber","xbInstanceID","xbPolicyID","push","routes","claimsFNOL","newLoss","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","assignedToName","lossDescription","isNaN","catCodesID","claimInfo","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","location","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","bordereauClaim","bordereauPeriod","claimStatus","policyInfo","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","originalCurrency","settlementCurrencyCode","settlementCountry","underWritingGroupColumns","label","handleClaim","handleFinish","handleStep","map","info"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,UAAT,QAA2B,cAA3B;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,yBAAT,QAA0C,8BAA1C;AACA,SACEC,0BADF,EAEEC,uBAFF,EAGEC,YAHF,EAIEC,6BAJF,EAKEC,2BALF,EAMEC,oBANF,EAOEC,wBAPF,EAQEC,cARF,EASEC,kBATF,EAUEC,uBAVF,EAWEC,oBAXF,EAYEC,yBAZF,EAaEC,iBAbF,EAcEC,4BAdF,EAeEC,0BAfF,EAgBEC,YAhBF,EAiBEC,uBAjBF,EAkBEC,WAlBF,QAmBO,QAnBP;AAoBA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;;;AAEA,eAAe,SAASC,qBAAT,CAA+BC,KAA/B,EAAsC;AAAA;;AAAA;;AACnD,MAAMC,SAAS,GAAG7B,WAAW,CAACO,0BAAD,CAAX,IAA2CqB,KAAK,CAACE,gBAAnE;AACA,MAAMC,OAAO,WAAG5B,GAAG,CAAC0B,SAAD,EAAY,SAAZ,CAAN,uCAAgC,EAA7C;AACA,MAAMG,iBAAiB,GAAGhC,WAAW,CAACQ,uBAAD,CAArC;AACA,MAAMyB,eAAe,GAAGjC,WAAW,CAACS,YAAD,CAAnC;AACA,MAAMyB,iBAAiB,GAAGlC,WAAW,CAACU,6BAAD,CAArC;AACA,MAAMyB,SAAS,mBAAGnC,WAAW,CAACY,oBAAD,CAAd,iDAAG,aAAmCwB,KAArD;AACA,MAAMC,kBAAkB,GAAGrC,WAAW,CAACa,wBAAD,CAAtC;AACA,MAAMyB,iBAAiB,GAAGtC,WAAW,CAACgB,uBAAD,CAArC;AACA,MAAMuB,mBAAmB,GAAGvC,WAAW,CAACkB,yBAAD,CAAvC;AACA,MAAMsB,sBAAsB,GAAGxC,WAAW,CAACoB,4BAAD,CAA1C;AACA,MAAMqB,QAAQ,GAAGzC,WAAW,CAACc,cAAD,CAA5B;;AACA,MAAM4B,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,EAAD,EAAQ;AAAA;;AACjC,QAAIC,WAAW,qBAAGH,QAAQ,CAACI,IAAT,CAAc,UAACC,IAAD;AAAA,aAAUC,MAAM,CAACD,IAAI,CAACH,EAAN,CAAN,KAAoBA,EAA9B;AAAA,KAAd,CAAH,mDAAG,eAAiDC,WAAnE;AACA,qBAAUD,EAAV,gBAAkBC,WAAlB;AACD,GAHD;;AAIA,MAAMI,cAAc,GAAGhD,WAAW,CAACqB,0BAAD,CAAlC;AAEA,MAAM4B,gBAAgB,GAAGvB,SAAS,CAACwB,wBAAV,CAAmCC,OAAnC,CAA2CjB,iBAAiB,CAACkB,UAA7D,IAA2E,CAAC,CAA5E,IAAiF,KAA1G;AACA,MAAMC,cAAc,GAAGrD,WAAW,CAAC,UAACsD,KAAD;AAAA,WAAWnD,GAAG,CAACmD,KAAD,EAAQ,6BAAR,CAAd;AAAA,GAAD,CAAlC;AACA,MAAMC,aAAa,GAAGvD,WAAW,CAAC,UAACsD,KAAD;AAAA,WAAWnD,GAAG,CAACmD,KAAD,EAAQ,6BAAR,CAAd;AAAA,GAAD,CAAjC;AACA,MAAME,gBAAgB,GAAG;AACvBpB,IAAAA,KAAK,EAAEJ,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEyB,8BADH;AAEvBC,IAAAA,SAAS,EAAErB,kBAFY;AAGvBsB,IAAAA,YAAY,EAAE,CAAA3B,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE2B,YAAnB,IAAkC,WAAlC,GAAgD,MAHvC;AAIvBC,IAAAA,YAAY,EAAE5B,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE4B,YAJV;AAKvBC,IAAAA,eAAe,EAAE7B,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE6B,eALb;AAMvBrB,IAAAA,sBAAsB,EAAEA,sBAND;AAOvBsB,IAAAA,iBAAiB,EAAE,CAACb,gBAAD,GACf,IADe,GAEf,EAACjB,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE+B,eAApB,IACE1D,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,SAAf,CADF,GAEEjB,cAFF,aAEEA,cAFF,+CAEEA,cAAc,CAAEH,IAAhB,CAAqB,UAACqB,GAAD;AAAA;;AAAA,aAAS,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,uBAAAA,GAAG,CAAEvB,EAAL,oDAASwB,QAAT,SAAwBnC,iBAAxB,aAAwBA,iBAAxB,gDAAwBA,iBAAiB,CAAE+B,eAA3C,0DAAwB,sBAAoCI,QAApC,EAAxB,CAAT;AAAA,KAArB,CAFF,yDAEE,qBAAuGC;AAXtF,GAAzB;AAcA,MAAMC,QAAQ,GAAGpE,WAAW,EAA5B;AACA,MAAMqE,OAAO,GAAGpE,UAAU,EAA1B;;AAEA,MAAMqE,eAAe,GAAG,SAAlBA,eAAkB,CAACC,YAAD,EAAkB;AAAA;;AACxC,QAAMC,YAAY,GAAGpB,cAAH,aAAGA,cAAH,+CAAGA,cAAc,CAAER,IAAhB,CAAqB,UAAA6B,QAAQ;AAAA;;AAAA,aAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,oCAAAA,QAAQ,CAAEC,UAAV,8EAAsBC,WAAtB,SAAwCJ,YAAxC,aAAwCA,YAAxC,uBAAwCA,YAAY,CAAEI,WAAd,EAAxC,CAAJ;AAAA,KAA7B,CAAH,yDAAG,qBAAuGH,YAA5H;AACA,qBAAUD,YAAV,gBAA4BC,YAA5B;AACD,GAHD;;AAKA,MAAMI,cAAc,GAAG,SAAjBA,cAAiB,CAACC,WAAD,EAAiB;AAAA;;AACtC,QAAMC,WAAW,GAAGxB,aAAH,aAAGA,aAAH,8CAAGA,aAAa,CAAEV,IAAf,CAAoB,UAAAmC,OAAO;AAAA;;AAAA,aAAI,CAAAA,OAAO,SAAP,IAAAA,OAAO,WAAP,oCAAAA,OAAO,CAAEF,WAAT,8EAAsBF,WAAtB,SAAwCE,WAAxC,aAAwCA,WAAxC,uBAAwCA,WAAW,CAAEF,WAAb,EAAxC,CAAJ;AAAA,KAA3B,CAAH,wDAAG,oBAAoGG,WAAxH;AACA,WAAOA,WAAP;AACD,GAHD;;AAIAhF,EAAAA,SAAS,CAAC,YAAM;AACdsE,IAAAA,QAAQ,CAACtD,kBAAkB,CAAC;AAAEkE,MAAAA,aAAa,EAAEpD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEqD,YAA5B;AAA0CC,MAAAA,cAAc,EAAEtD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEuD,QAArE;AAA+EC,MAAAA,eAAe,EAAExD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEyD,UAA3G;AAAuHC,MAAAA,aAAa,EAAE1D,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE2D,cAAjJ;AAAiKC,MAAAA,UAAU,EAAE;AAA7K,KAAD,CAAnB,CAAR;AACApB,IAAAA,QAAQ,CAAC1D,2BAA2B,CAAC;AAAEoB,MAAAA,OAAO,EAAEA,OAAX;AAAoB2D,MAAAA,cAAc,EAAE7D,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE2D,cAA/C;AAA+DL,MAAAA,cAAc,EAAEtD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEuD,QAA1F;AAAoGO,MAAAA,gBAAgB,EAAE,CAAA9D,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEyD,UAAX,MAAyBzD,SAAzB,aAAyBA,SAAzB,uBAAyBA,SAAS,CAAE+D,YAApC,CAAtH;AAAwKH,MAAAA,UAAU,EAAE;AAApL,KAAD,CAA5B,CAAR;AACApB,IAAAA,QAAQ,CAACpD,oBAAoB,CAAC;AAAEwE,MAAAA,UAAU,EAAE;AAAd,KAAD,CAArB,CAAR;AACApB,IAAAA,QAAQ,CAAClD,iBAAiB,CAAC;AAAEsE,MAAAA,UAAU,EAAE;AAAd,KAAD,CAAlB,CAAR;AACApB,IAAAA,QAAQ,CAAC7C,WAAW,EAAZ,CAAR;AAED,GAPQ,EAON,EAPM,CAAT,CA/CmD,CAsD3C;;AAER,MAAMqE,eAAe,GAAG,SAAlBA,eAAkB,GAAM;AAAA,aACbC,SADa;AAAA;AAAA;;AAAA;AAAA,4EAC5B;AAAA;AAAA;AAAA;AAAA;AACEzB,gBAAAA,QAAQ,CACN/C,YAAY,CAAC;AACXyE,kBAAAA,MAAM,EAAElE,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEqD,YADR;AAEXnD,kBAAAA,OAAO,EAAEA,OAFE;AAGXiE,kBAAAA,SAAS,EAAE9D,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE8D,SAHnB;AAIXC,kBAAAA,YAAY,EAAE/D,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE8D,SAJtB;AAKXE,kBAAAA,YAAY,EAAEhE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEgE,YALtB;AAMXC,kBAAAA,UAAU,EAAEjE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEiE,UANpB;AAOXb,kBAAAA,UAAU,EAAEzD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEyD,UAPZ;AAQXF,kBAAAA,QAAQ,EAAEvD,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAEuD,QARV;AASXI,kBAAAA,cAAc,EAAE3D,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE2D;AAThB,iBAAD,CADN,CAAR;AADF;AAAA,uBAcQnB,QAAQ,CAAC9C,uBAAuB,CAAC,CAAD,CAAxB,CAdhB;;AAAA;AAAA;AAAA,uBAeQ+C,OAAO,CAAC8B,IAAR,CAAa3E,MAAM,CAAC4E,MAAP,CAAcC,UAAd,CAAyBC,OAAtC,CAfR;;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OAD4B;AAAA;AAAA;;AAkB5BT,IAAAA,SAAS;AACV,GAnBD;;AAoBA,MAAMU,QAAQ,GAAG,CACf;AAAEC,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,4BAAf,CAAT;AAAuDyC,IAAAA,KAAK,EAAEzE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAE0E;AAA/E,GADe,EAEf;AACEF,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,iCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAAzE,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAE2E,QAAjB,KAA6BxG,MAAM,CAAC6B,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAE2E,QAAlB,CAAN,CAAkCC,MAAlC,CAAyCpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBC,YAA/D;AAFtC,GAFe,EAMf;AACEP,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,+BAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAAzE,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEgF,MAAjB,KAA2B7G,MAAM,CAAC6B,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEgF,MAAlB,CAAN,CAAgCJ,MAAhC,CAAuCpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBC,YAA7D;AAFpC,GANe,EAUf;AAAEP,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,6BAAf,CAAT;AAAwDyC,IAAAA,KAAK,EAAEzE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEiF;AAAhF,GAVe,EAWf;AACET,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,oCAAf,CADT;AAEEyC,IAAAA,KAAK,EACH,CAAAzE,eAAe,SAAf,IAAAA,eAAe,WAAf,YAAAA,eAAe,CAAEkF,gBAAjB,KACA/G,MAAM,CAAC6B,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEkF,gBAAlB,CAAN,CAA0CN,MAA1C,CAAiDpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAvE;AAJJ,GAXe,EAiBf;AAAEX,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,mCAAf,CAAT;AAA8DyC,IAAAA,KAAK,EAAEzE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEoF;AAAtF,GAjBe,EAkBf;AAAEZ,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAAT;AAA2DyC,IAAAA,KAAK,EAAEzE,eAAF,aAAEA,eAAF,uBAAEA,eAAe,CAAEqF;AAAnF,GAlBe,EAmBf;AAAEb,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,gCAAf,CAAT;AAA2DyC,IAAAA,KAAK,EAAE,CAACa,KAAK,CAACtF,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEuF,UAAlB,CAAN,IAAuC9E,kBAAkB,CAACT,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAEuF,UAAlB;AAA3H,GAnBe,CAAjB;AAqBA,MAAMC,SAAS,GAAG,CAChB;AAAEhB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAT;AAA6DyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEwD;AAAvF,GADgB,EAEhB;AACEiB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,+CAAf,CADT;AAEEyC,IAAAA,KAAK,EACH,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE0F,iBAAnB,KAAwCtH,MAAM,CAAC4B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE0F,iBAApB,CAAN,CAA6Cb,MAA7C,CAAoDpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBC,YAA1E;AAH5C,GAFgB,EAOhB;AAAEP,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAT;AAA6DyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE2F;AAAvF,GAPgB,EAQhB;AACElB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,8CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE4F,YAAnB,KAAmCxH,MAAM,CAAC4B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE6F,UAApB,CAAN,CAAsChB,MAAtC,CAA6CpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAnE;AAF5C,GARgB,EAYhB;AACEX,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,4CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE6F,UAAnB,KAAiCzH,MAAM,CAAC4B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE6F,UAApB,CAAN,CAAsChB,MAAtC,CAA6CpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAnE;AAF1C,GAZgB,EAgBhB;AAAEX,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,mDAAf,CAAT;AAA8EyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE8F;AAAxG,GAhBgB,EAiBhB;AAAErB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAT;AAA6DyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE+F;AAAvF,GAjBgB,EAkBhB;AAAEtB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,sCAAf,CAAT;AAAiEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEgG;AAA3F,GAlBgB,EAmBhB;AAAEvB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kCAAf,CAAT;AAA6DyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEiG;AAAvF,GAnBgB,EAoBhB;AACExB,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,sCAAf,CADT;AAEEyC,IAAAA,KAAK,EACH,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEkG,YAAnB,MAAoC,CAApC,GACI7H,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,uCAAf,CADJ,GAEI5D,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,oCAAf;AALR,GApBgB,EA2BhB;AACEwC,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,sCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEkG,YAAnB,MAAoC,CAApC,GAAwClG,iBAAiB,CAACmG,YAA1D,GAAyEnG,iBAAiB,CAACoG;AAFpG,GA3BgB,EAgChB;AAAE3B,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,qCAAf,CAAT;AAAgEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEqG;AAA1F,GAhCgB,EAiChB;AAAE5B,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,oCAAf,IAAuD,GAAhE;AAAqEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEsG;AAA/F,GAjCgB,EAkChB;AAAE7B,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kCAAf,IAAqD,GAA9D;AAAmEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEuG;AAA7F,GAlCgB,EAmChB;AAAE9B,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,qCAAf,IAAwD,GAAjE;AAAsEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEwG;AAAhG,GAnCgB,EAoChB;AACE/B,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,wCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEyG,cAAnB,MAAsC,CAAtC,GAA0C,KAA1C,GAAkD;AAF3D,GApCgB,EAwChB;AACEhC,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,yCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEyG,cAAnB,MAAsC,CAAtC,GAA0CzG,iBAA1C,aAA0CA,iBAA1C,uBAA0CA,iBAAiB,CAAE0G,eAA7D,GAA+E;AAFxF,GAxCgB,EA4ChB;AAAEjC,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,qCAAf,CAAT;AAAgEyC,IAAAA,KAAK,EAAE1E,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE2G;AAA1F,GA5CgB,CAAlB;AA8CA,MAAMC,UAAU,GAAG,CACjB;AACEnC,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,2CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE8D,SAF5B;AAGEtC,IAAAA,SAAS,EAAEnB;AAHb,GADiB,EAMjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,4CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEkB,UAF5B;AAGEM,IAAAA,SAAS,EAAEnB;AAHb,GANiB,EAWjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,0CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE2G,UAF5B;AAGEnF,IAAAA,SAAS,EAAEnB;AAHb,GAXiB,EAgBjB;AAAEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,yCAAf,CAAT;AAAoEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE4G,OAA9F;AAAuGpF,IAAAA,SAAS,EAAEnB;AAAlH,GAhBiB,EAiBjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,0CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE6G,QAF5B;AAGErF,IAAAA,SAAS,EAAEnB;AAHb,GAjBiB,EAsBjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,yCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE8G,UAF5B;AAGEtF,IAAAA,SAAS,EAAEnB;AAHb,GAtBiB,EA2BjB;AAAEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,wCAAf,CAAT;AAAmEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAE+G,MAA7F;AAAqGvF,IAAAA,SAAS,EAAEnB;AAAhH,GA3BiB,EA4BjB;AAAEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,yCAAf,CAAT;AAAoEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEgH,OAA9F;AAAuGxF,IAAAA,SAAS,EAAEnB;AAAlH,GA5BiB,EA6BjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,2CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAExE,iBAAF,aAAEA,iBAAF,uBAAEA,iBAAiB,CAAEiH,SAF5B;AAGEzF,IAAAA,SAAS,EAAEnB;AAHb,GA7BiB,EAkCjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,2CAAf,CADT;AAEEyC,IAAAA,KAAK,EACH,CAAAxE,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEkH,aAAnB,KAAoChJ,MAAM,CAAC8B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEkH,aAApB,CAAN,CAAyCvC,MAAzC,CAAgDpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAtE,CAHxC;AAIE1D,IAAAA,SAAS,EAAEnB;AAJb,GAlCiB,EAwCjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,wCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAAxE,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEmH,UAAnB,KAAiCjJ,MAAM,CAAC8B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEmH,UAApB,CAAN,CAAsCxC,MAAtC,CAA6CpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAnE,CAF1C;AAGE1D,IAAAA,SAAS,EAAEnB;AAHb,GAxCiB,EA6CjB;AACEkE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,0CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAEvE,SAAF,aAAEA,SAAF,0CAAEA,SAAS,CAAEU,IAAX,CAAgB,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACwG,gBAAL,KAA0BtH,iBAAiB,CAACsH,gBAAtD;AAAA,KAAhB,CAAF,oDAAE,gBAAyF1G,WAFlG;AAGEc,IAAAA,SAAS,EAAErB;AAHb,GA7CiB,EAkDjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,kDAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEuH,WAAnB,IACH,CAAAvH,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEwH,wBAAnB,KACFpJ,MAAM,CAAC4B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEwH,wBAApB,CAAN,CAAoD3C,MAApD,CAA2DpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAAjF,CAFK,GAGH,IALN;AAME1D,IAAAA,SAAS,EAAErB;AANb,GAlDiB,EA0DjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,+CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEuH,WAAnB,IACH,CAAAvH,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEyH,qBAAnB,KACFrJ,MAAM,CAAC4B,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAEyH,qBAApB,CAAN,CAAiD5C,MAAjD,CAAwDpF,MAAM,CAACqF,EAAP,CAAUD,MAAV,CAAiBE,IAAjB,CAAsBK,uBAA9E,CAFK,GAGH,IALN;AAME1D,IAAAA,SAAS,EAAErB;AANb,GA1DiB,EAkEjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,2CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEuH,WAAnB,IAAiCvH,iBAAjC,aAAiCA,iBAAjC,uBAAiCA,iBAAiB,CAAE0H,iBAApD,GAAwE,IAFjF;AAGEhG,IAAAA,SAAS,EAAErB;AAHb,GAlEiB,EAuEjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,0CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE2H,gBAAnB,KAAuCpF,eAAe,CAACvC,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE2H,gBAApB,CAF/D;AAGEjG,IAAAA,SAAS,EAAErB;AAHb,GAvEiB,EA4EjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,4CAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE4H,sBAAnB,KAA6CrF,eAAe,CAACvC,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE4H,sBAApB,CAFrE;AAGElG,IAAAA,SAAS,EAAErB;AAHb,GA5EiB,EAiFjB;AACEoE,IAAAA,KAAK,EAAEpG,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,iCAAf,CADT;AAEEyC,IAAAA,KAAK,EAAE,CAAA1E,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAE6H,iBAAnB,KAAwChF,cAAc,CAAC7C,iBAAD,aAACA,iBAAD,uBAACA,iBAAiB,CAAE6H,iBAApB,CAF/D;AAGEnG,IAAAA,SAAS,EAAErB;AAHb,GAjFiB,CAAnB;AAuFA,MAAMyH,wBAAwB,GAAG,CAC/B;AACEnH,IAAAA,EAAE,EAAE,UADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,oCAAf;AAFT,GAD+B,EAK/B;AACEtB,IAAAA,EAAE,EAAE,YADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,sCAAf;AAFT,GAL+B,EAS/B;AACEtB,IAAAA,EAAE,EAAE,UADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,oCAAf;AAFT,GAT+B,EAa/B;AACEtB,IAAAA,EAAE,EAAE,aADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,uCAAf;AAFT,GAb+B,EAiB/B;AACEtB,IAAAA,EAAE,EAAE,YADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,sCAAf;AAFT,GAjB+B,EAqB/B;AACEtB,IAAAA,EAAE,EAAE,KADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,+BAAf;AAFT,GArB+B,EAyB/B;AACEtB,IAAAA,EAAE,EAAE,WADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,qCAAf;AAFT,GAzB+B,EA6B/B;AACEtB,IAAAA,EAAE,EAAE,eADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,yCAAf;AAFT,GA7B+B,EAiC/B;AACEtB,IAAAA,EAAE,EAAE,aADN;AAEEoH,IAAAA,KAAK,EAAE1J,KAAK,CAAC2D,MAAN,CAAaC,CAAb,CAAe,uCAAf;AAFT,GAjC+B,CAAjC;AAuCA,sBACE;AAAA,2BACE,QAAC,yBAAD,kCACMrC,KADN;AAGE,MAAA,WAAW,EAAEA,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEoI,WAHtB;AAIE,MAAA,YAAY,EAAEpI,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEqI,YAJvB;AAKE,MAAA,UAAU,EAAErI,KAAF,aAAEA,KAAF,uBAAEA,KAAK,CAAEsI,UALrB;AAME,MAAA,eAAe,EAAErE,eANnB;AAOE,MAAA,iBAAiB,EAAE7D,iBAPrB;AAQE,MAAA,QAAQ,EAAEwE,QAAF,aAAEA,QAAF,uBAAEA,QAAQ,CAAE2D,GAAV,CAAc,UAACC,IAAD;AAAA,+CACnBA,IADmB;AAEtB1G,UAAAA,SAAS,EAAEpB;AAFW;AAAA,OAAd,CARZ;AAYE,MAAA,UAAU,EAAEsG,UAZd;AAaE,MAAA,SAAS,EAAEnB,SAAF,aAAEA,SAAF,uBAAEA,SAAS,CAAE0C,GAAX,CAAe,UAACC,IAAD;AAAA,+CACrBA,IADqB;AAExB1G,UAAAA,SAAS,EAAErB;AAFa;AAAA,OAAf,CAbb;AAiBE,MAAA,gBAAgB,EAAEmB,gBAjBpB;AAkBE,MAAA,wBAAwB,EAAEsG;AAlB5B;AAAA;AAAA;AAAA;AAAA;AADF,mBADF;AAwBD;;GArSuBnI,qB;UACJ3B,W,EAEQA,W,EACFA,W,EACEA,W,EACRA,W,EACSA,W,EACDA,W,EACEA,W,EACGA,W,EACdA,W,EAKMA,W,EAGAA,W,EACDA,W,EAeLC,W,EACDC,U;;;KApCMyB,qB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\nimport * as utils from 'utils';\r\nimport { ClaimsAcknowledgementView } from './ClaimsAcknowledgement.view';\r\nimport {\r\n  selectClaimIdUnderProgress,\r\n  selectClaimsInformation,\r\n  selectLossId,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectCatCodes,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections,\r\n  setClaimData,\r\n  setClaimsStepperControl,\r\n  getCatCodes\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nexport default function ClaimsAcknowledgement(props) {\r\n  const claimData = useSelector(selectClaimIdUnderProgress) || props.claimDataFromRef;\r\n  const claimId = get(claimData, 'claimID') ?? '';\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const catCodeDescription = (id) => {\r\n    let description = catCodes.find((item) => Number(item.id) === id)?.description;\r\n    return `${id} - ${description}`\r\n  }\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder ? 'Our Share' : '100%',\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n        ? utils.string.t('app.all')\r\n        : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(currency => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase())?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`\r\n  }\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find(country => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName\r\n    return countryName\r\n  }\r\n  useEffect(() => {\r\n    dispatch(getLossInformation({ lossDetailsId: claimData?.lossDetailID, sourceIdParams: claimData?.sourceID, divisionIdParam: claimData?.divisionID, claimRefParam: claimData?.claimReference, viewLoader: false }));\r\n    dispatch(getClaimsPreviewInformation({ claimId: claimId, claimRefParams: claimData?.claimReference, sourceIdParams: claimData?.sourceID, divisionIDParams: claimData?.divisionID || claimData?.departmentID, viewLoader: false }));\r\n    dispatch(getPolicyInformation({ viewLoader: false }));\r\n    dispatch(getPolicySections({ viewLoader: false }));\r\n    dispatch(getCatCodes());\r\n\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleEditClaim = () => {\r\n    async function fetchData() {\r\n      dispatch(\r\n        setClaimData({\r\n          lossId: claimData?.lossDetailID,\r\n          claimId: claimId,\r\n          policyRef: policyInformation?.policyRef,\r\n          policyNumber: policyInformation?.policyRef,\r\n          xbInstanceID: policyInformation?.xbInstanceID,\r\n          xbPolicyID: policyInformation?.xbPolicyID,\r\n          divisionID: claimData?.divisionID,\r\n          sourceID: claimData?.sourceID,\r\n          claimReference: claimData?.claimReference,\r\n        })\r\n      );\r\n      await dispatch(setClaimsStepperControl(1));\r\n      await history.push(config.routes.claimsFNOL.newLoss);\r\n    }\r\n    fetchData();\r\n  };\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        lossInformation?.firstContactDate &&\r\n        moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.assignedToName },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: !isNaN(lossInformation?.catCodesID) && catCodeDescription(lossInformation?.catCodesID) },\r\n  ];\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value:\r\n        claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.complexity') + '*', value: claimsInformation?.complexity },\r\n    { title: utils.string.t('claims.claimInformation.referral') + '*', value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse') + '*', value: claimsInformation?.referralResponseDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus'), value: claimsInformation?.claimStatus },\r\n  ];\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value:\r\n        policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n        moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n        moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <ClaimsAcknowledgementView\r\n        {...props}\r\n\r\n        handleClaim={props?.handleClaim}\r\n        handleFinish={props?.handleFinish}\r\n        handleStep={props?.handleStep}\r\n        handleEditClaim={handleEditClaim}\r\n        claimsInformation={claimsInformation}\r\n        lossInfo={lossInfo?.map((info) => ({\r\n          ...info,\r\n          isLoading: isLossInfoLoading,\r\n        }))}\r\n        policyInfo={policyInfo}\r\n        claimInfo={claimInfo?.map((info) => ({\r\n          ...info,\r\n          isLoading: isClaimInfoLoading,\r\n        }))}\r\n        underWritingInfo={underWritingInfo}\r\n        underWritingGroupColumns={underWritingGroupColumns}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}