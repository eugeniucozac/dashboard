{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseNonBureau\\\\PremiumProcessingCaseNonBureau.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport PremiumProcessingCaseNonBureauView from './PremiumProcessingCaseNonBureau.view';\nimport * as utils from 'utils';\nimport { getNonBureauList, selectUser } from 'stores';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseNonBureau.propTypes = {\n  caseDetailsObject: PropTypes.object.isRequired,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseNonBureau(_ref) {\n  _s();\n\n  var _caseDetailsObject$ca, _caseDetailsObject$ca2, _caseDetailsObject$ca3;\n\n  var caseDetailsObject = _ref.caseDetailsObject,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var dispatch = useDispatch();\n  var user = useSelector(selectUser);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openEms = _useState2[0],\n      setOpenEms = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      nonBureauDetails = _useState4[0],\n      setNonBureauDetails = _useState4[1];\n\n  var _useState5 = useState(''),\n      _useState6 = _slicedToArray(_useState5, 2),\n      accountName = _useState6[0],\n      setAccountName = _useState6[1];\n\n  var hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentNbi', ['read', 'create', 'update', 'delete'], user);\n  var hasViewPermission = utils.app.access.feature('premiumProcessing.issueDocumentNbi', ['read'], user);\n  var nonBureauInsurerList = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca === void 0 ? void 0 : (_caseDetailsObject$ca2 = _caseDetailsObject$ca.nonBureauList) === null || _caseDetailsObject$ca2 === void 0 ? void 0 : _caseDetailsObject$ca2.items;\n  var policyId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.policyId) || '';\n  var xbInstanceId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca3 = caseDetailsObject.caseTeamData) === null || _caseDetailsObject$ca3 === void 0 ? void 0 : _caseDetailsObject$ca3.xbInstanceId) || '';\n  var caseIncidentID = caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseId;\n  var caseStageDetails = caseDetailsObject.caseStageDetails;\n  var isCompletedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active;\n  });\n  var isRejectedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active;\n  });\n  useEffect(function () {\n    dispatch(getNonBureauList({\n      caseIncidentID: caseIncidentID,\n      policyId: policyId,\n      xbInstanceId: xbInstanceId\n    }));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var sendEmail = function sendEmail(nonBureauData) {\n    setOpenEms(true);\n    setNonBureauDetails(nonBureauData);\n    setAccountName(nonBureauData === null || nonBureauData === void 0 ? void 0 : nonBureauData.underWriterAccountName);\n  };\n\n  var goBack = function goBack() {\n    dispatch(getNonBureauList({\n      caseIncidentID: caseIncidentID,\n      policyId: policyId,\n      xbInstanceId: xbInstanceId\n    })).then(function (data) {\n      var _data$status;\n\n      if ((data === null || data === void 0 ? void 0 : (_data$status = data.status) === null || _data$status === void 0 ? void 0 : _data$status.toLowerCase()) === constants.API_RESPONSE_OK.toLowerCase()) {\n        setOpenEms(false);\n        setNonBureauDetails({});\n        setAccountName('');\n      }\n    });\n  };\n\n  var columnsData = [{\n    id: 'nonBureauInsurer',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.nonBureauColumns.nonBureauInsurer')\n  }, {\n    id: 'status',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.nonBureauColumns.status')\n  }, {\n    id: 'sentDate',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.nonBureauColumns.sentDate')\n  }, {\n    id: 'emailDocument',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.nonBureauColumns.emailDocument')\n  }];\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseNonBureauView, {\n    accountName: accountName,\n    caseDetailsObject: caseDetailsObject,\n    columnsData: columnsData,\n    nonBureauDetails: nonBureauDetails,\n    openEms: openEms,\n    nonBureauInsurers: nonBureauInsurerList,\n    isSendEmailAllowed: hasEditPermission && !isCompletedStage && !isRejectedStage,\n    hasViewOrEditAccess: hasEditPermission || hasViewPermission,\n    handlers: {\n      sendEmail: sendEmail,\n      goBack: goBack\n    },\n    isNotMyTaskView: isNotMyTaskView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseNonBureau, \"fEtPze/ngd7H2z1N4btLXGfUYe0=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = PremiumProcessingCaseNonBureau;\nPremiumProcessingCaseNonBureau.displayName = \"PremiumProcessingCaseNonBureau\";\nPremiumProcessingCaseNonBureau.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCaseNonBureau\",\n  \"props\": {\n    \"caseDetailsObject\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isNotMyTaskView\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\PremiumProcessingCaseNonBureau\\\\PremiumProcessingCaseNonBureau.js\"] = {\n    name: \"PremiumProcessingCaseNonBureau\",\n    docgenInfo: PremiumProcessingCaseNonBureau.__docgenInfo,\n    path: \"src\\\\modules\\\\PremiumProcessingCaseNonBureau\\\\PremiumProcessingCaseNonBureau.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseNonBureau\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseNonBureau/PremiumProcessingCaseNonBureau.js"],"names":["React","useState","useEffect","useDispatch","useSelector","PropTypes","PremiumProcessingCaseNonBureauView","utils","getNonBureauList","selectUser","constants","PremiumProcessingCaseNonBureau","propTypes","caseDetailsObject","object","isRequired","isNotMyTaskView","bool","dispatch","user","openEms","setOpenEms","nonBureauDetails","setNonBureauDetails","accountName","setAccountName","hasEditPermission","app","access","feature","hasViewPermission","nonBureauInsurerList","caseIssueDocuments","nonBureauList","items","policyId","xbInstanceId","caseTeamData","caseIncidentID","caseId","caseStageDetails","isCompletedStage","some","cs","BPM_STAGE_COMPLETED","includes","bpmStageCode","active","isRejectedStage","BPM_STAGE_REJECTED","sendEmail","nonBureauData","underWriterAccountName","goBack","then","data","status","toLowerCase","API_RESPONSE_OK","columnsData","id","visible","nowrap","label","string","t"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport PremiumProcessingCaseNonBureauView from './PremiumProcessingCaseNonBureau.view';\r\nimport * as utils from 'utils';\r\nimport { getNonBureauList, selectUser } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nPremiumProcessingCaseNonBureau.propTypes = {\r\n  caseDetailsObject: PropTypes.object.isRequired,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\nexport default function PremiumProcessingCaseNonBureau({ caseDetailsObject, isNotMyTaskView }) {\r\n  const dispatch = useDispatch();\r\n  const user = useSelector(selectUser);\r\n\r\n  const [openEms, setOpenEms] = useState(false);\r\n  const [nonBureauDetails, setNonBureauDetails] = useState({});\r\n  const [accountName, setAccountName] = useState('');\r\n\r\n  const hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentNbi', ['read', 'create', 'update', 'delete'], user);\r\n  const hasViewPermission = utils.app.access.feature('premiumProcessing.issueDocumentNbi', ['read'], user);\r\n  const nonBureauInsurerList = caseDetailsObject?.caseIssueDocuments?.nonBureauList?.items;\r\n  const policyId = caseDetailsObject?.policyId || '';\r\n  const xbInstanceId = caseDetailsObject?.caseTeamData?.xbInstanceId || '';\r\n  const caseIncidentID = caseDetailsObject?.caseId;\r\n  const { caseStageDetails } = caseDetailsObject;\r\n  const isCompletedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active);\r\n  const isRejectedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active);\r\n\r\n  useEffect(() => {\r\n    dispatch(getNonBureauList({ caseIncidentID, policyId, xbInstanceId }));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sendEmail = (nonBureauData) => {\r\n    setOpenEms(true);\r\n    setNonBureauDetails(nonBureauData);\r\n    setAccountName(nonBureauData?.underWriterAccountName);\r\n  };\r\n\r\n  const goBack = () => {\r\n    dispatch(getNonBureauList({ caseIncidentID, policyId, xbInstanceId })).then((data) => {\r\n      if (data?.status?.toLowerCase() === constants.API_RESPONSE_OK.toLowerCase()) {\r\n        setOpenEms(false);\r\n        setNonBureauDetails({});\r\n        setAccountName('');\r\n      }\r\n    });\r\n  };\r\n\r\n  const columnsData = [\r\n    {\r\n      id: 'nonBureauInsurer',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.nonBureauColumns.nonBureauInsurer'),\r\n    },\r\n    {\r\n      id: 'status',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.nonBureauColumns.status'),\r\n    },\r\n    {\r\n      id: 'sentDate',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.nonBureauColumns.sentDate'),\r\n    },\r\n    {\r\n      id: 'emailDocument',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.nonBureauColumns.emailDocument'),\r\n    },\r\n  ];\r\n  return (\r\n    <PremiumProcessingCaseNonBureauView\r\n      accountName={accountName}\r\n      caseDetailsObject={caseDetailsObject}\r\n      columnsData={columnsData}\r\n      nonBureauDetails={nonBureauDetails}\r\n      openEms={openEms}\r\n      nonBureauInsurers={nonBureauInsurerList}\r\n      isSendEmailAllowed={hasEditPermission && !isCompletedStage && !isRejectedStage}\r\n      hasViewOrEditAccess={hasEditPermission || hasViewPermission}\r\n      handlers={{ sendEmail, goBack }}\r\n      isNotMyTaskView={isNotMyTaskView}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}