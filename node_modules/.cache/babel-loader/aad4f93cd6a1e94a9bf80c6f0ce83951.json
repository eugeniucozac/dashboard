{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEnterLossInformation\\\\ClaimsEnterLossInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useLayoutEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux'; // app\n\nimport styles from './ClaimsEnterLossInformation.styles';\nimport { ErrorMessage, FormAutocompleteMui, FormContainer, FormLegend, FormFields, FormGrid, FormText, FormDate, FormHidden, Tooltip, Skeleton } from 'components';\nimport { postLossInformation, postEditLossInformation, resetLossData } from 'stores';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEnterLossInformationView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  }),\n  hasLossRef: PropTypes.bool.isRequired,\n  lossInformation: PropTypes.object.isRequired,\n  lossDocsList: PropTypes.array,\n  lossSelected: PropTypes.object.isRequired,\n  formattedCatCodes: PropTypes.array\n};\nexport function ClaimsEnterLossInformationView(props) {\n  _s();\n\n  var fields = props.fields,\n      handleSave = props.handleSave,\n      handleNext = props.handleNext,\n      handleCancel = props.handleCancel,\n      hasLossRef = props.hasLossRef,\n      lossInformation = props.lossInformation,\n      loggedInUser = props.loggedInUser,\n      _handleBack = props.handleBack,\n      lossDocsList = props.lossDocsList,\n      isWarningShow = props.isWarningShow,\n      validation = props.validation,\n      setValidation = props.setValidation,\n      handleFormStatus = props.handleFormStatus,\n      lossProperties = props.lossProperties,\n      lossSelected = props.lossSelected,\n      formattedCatCodes = props.formattedCatCodes;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'ClaimsEnterLossInformation'\n  })({\n    isMobile: media.mobile,\n    isTablet: media.tablet\n  });\n  var dispatch = useDispatch();\n  var lossFocusRef = useRef();\n  var firstUpdate = useRef(true);\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  })),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control,\n      formState = _useForm.formState;\n\n  var formIsDirty = formState.isDirty;\n  useEffect(function () {\n    var _Object$keys, _Object$keys2;\n\n    if (formIsDirty && !((_Object$keys = Object.keys(errors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) {\n      handleFormStatus();\n    }\n\n    if (((_Object$keys2 = Object.keys(errors)) === null || _Object$keys2 === void 0 ? void 0 : _Object$keys2.length) > 0) {\n      var _lossFocusRef$current;\n\n      lossFocusRef === null || lossFocusRef === void 0 ? void 0 : (_lossFocusRef$current = lossFocusRef.current) === null || _lossFocusRef$current === void 0 ? void 0 : _lossFocusRef$current.scrollIntoView();\n    }\n  }, [formIsDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useLayoutEffect(function () {\n    if (firstUpdate.current) {\n      firstUpdate.current = false;\n    } else {\n      // do things after first render\n      formState.isDirty = true;\n    }\n  }, [lossDocsList]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (validation) {\n      if (formIsDirty) {\n        handleSubmit(submitLossInformation)();\n      }\n    }\n\n    setValidation(false);\n    return function () {//console.log('resetLossData');\n      //dispatch(resetLossData());\n    };\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var onSaveLoss = function onSaveLoss() {\n    handleSubmit(handleSave)();\n    handleSubmit(submitLossInformation)();\n  };\n\n  var submitLossInformation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if ((lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDetailID) && (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.isInflighLoss) !== 1) {\n                dispatch(postEditLossInformation(values)).then(function (response) {\n                  var _response$data;\n\n                  if (typeof (response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.lossDetailID) === 'number') {\n                    validation ? handleNext() : handleSave();\n                  }\n                });\n              } else if ((lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.isInflighLoss) === 1) {\n                handleNext();\n              } else {\n                dispatch(postLossInformation(values)).then(function (response) {\n                  if (typeof ((response === null || response === void 0 ? void 0 : response.lossDetailID) === 'number')) {\n                    validation ? handleNext() : handleSave();\n                  }\n                });\n              }\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitLossInformation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var firstContactDate = (errors === null || errors === void 0 ? void 0 : errors.firstContactDate) ? _objectSpread(_objectSpread({}, errors === null || errors === void 0 ? void 0 : errors.firstContactDate), {}, {\n    message: ''\n  }) : null;\n  var firstContactTime = (errors === null || errors === void 0 ? void 0 : errors.firstContactTime) ? _objectSpread(_objectSpread({}, errors === null || errors === void 0 ? void 0 : errors.firstContactTime), {}, {\n    message: ''\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1 1 auto\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        ref: lossFocusRef,\n        children: /*#__PURE__*/_jsxDEV(FormLegend, {\n          text: utils.string.t('claims.lossInformation.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 148,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 147,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        \"data-testid\": \"form-lossInformation\",\n        children: /*#__PURE__*/_jsxDEV(FormFields, {\n          type: \"blank\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'lossRef')), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                    error: errors.fromDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 160,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 159,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossName', control)), {}, {\n                    error: errors.lossName\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 163,\n                    columnNumber: 21\n                  }, this), isWarningShow && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    error: {\n                      message: utils.string.t('claims.lossInformation.validation.lossNameWarning')\n                    },\n                    nestedClasses: {\n                      root: classes.warningMessage\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 165,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 162,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossDescription', control)), {}, {\n                    error: errors.lossDescription\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 172,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 171,\n                  columnNumber: 19\n                }, this), utils.generic.isInvalidOrEmptyArray(formattedCatCodes) ? /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 40,\n                  animation: \"wave\",\n                  displayNumber: 1\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 175,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'catCodesID', control)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 178,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 155,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 154,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                    error: errors.toDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: utils.string.t('claims.lossInformation.firstContactTooltipMessage'),\n                    block: true,\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 8,\n                        sm: 12,\n                        md: 8,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstContactDate', control)), {}, {\n                          error: firstContactDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 193,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 4,\n                        sm: 6,\n                        md: 4,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstContactTime', control)), {}, {\n                          error: firstContactTime\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 196,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 195,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        error: (errors === null || errors === void 0 ? void 0 : errors.firstContactDate) || (errors === null || errors === void 0 ? void 0 : errors.firstContactTime),\n                        nestedClasses: {\n                          root: classes.warningMessageDate\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 198,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 191,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, {\n                    name: \"assignToReadonly\",\n                    label: utils.string.t('claims.lossInformation.assignedTo'),\n                    value: loggedInUser.fullName,\n                    muiComponentProps: {\n                      readOnly: true,\n                      disabled: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'assignedTo', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 216,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 153,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 151,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: lossInformation,\n          refIdName: constants.DMS_CONTEXT_LOSS_ID,\n          dmsContext: constants.DMS_CONTEXT_LOSS,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          isTabView: false,\n          fnolViewOptions: {\n            isClaimsFNOL: true,\n            isClaimsUploadDisabled: !hasLossRef,\n            claimsUploadWarningMsg: !hasLossRef ? utils.string.t('claims.lossInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.lossInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.lossInformation.dms.uploadDocuments')\n          },\n          docList: lossDocsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 224,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, _objectSpread(_objectSpread({}, props), {}, {\n        handleSave: onSaveLoss,\n        next: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isNextDiabled) || false,\n        handleNextSubmit: function handleNextSubmit() {\n          return setValidation(true);\n        },\n        save: !(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss),\n        handleBack: function handleBack() {\n          _handleBack(0);\n        },\n        handleCancel: handleCancel\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 242,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 241,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsEnterLossInformationView, \"X5dGB0KIwbUIzfUzzVdcR5HBMJ0=\", false, function () {\n  return [useMedia, useDispatch, useForm];\n});\n\n_c = ClaimsEnterLossInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEnterLossInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEnterLossInformation/ClaimsEnterLossInformation.view.js"],"names":["React","useEffect","useLayoutEffect","useRef","PropTypes","useForm","yupResolver","useDispatch","styles","ErrorMessage","FormAutocompleteMui","FormContainer","FormLegend","FormFields","FormGrid","FormText","FormDate","FormHidden","Tooltip","Skeleton","postLossInformation","postEditLossInformation","resetLossData","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","useMedia","utils","constants","makeStyles","Box","ClaimsEnterLossInformationView","propTypes","fields","array","isRequired","isAllStepsCompleted","bool","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","nestedClasses","shape","root","string","hasLossRef","lossInformation","object","lossDocsList","lossSelected","formattedCatCodes","props","loggedInUser","isWarningShow","validation","setValidation","handleFormStatus","lossProperties","media","classes","name","isMobile","mobile","isTablet","tablet","dispatch","lossFocusRef","firstUpdate","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","context","handleSubmit","errors","control","formState","formIsDirty","isDirty","Object","keys","length","current","scrollIntoView","submitLossInformation","onSaveLoss","values","lossDetailID","isInflighLoss","then","response","data","firstContactDate","message","firstContactTime","container","t","getFieldProps","fromDate","lossName","warningMessage","lossDescription","generic","isInvalidOrEmptyArray","toDate","lossTime","warningMessageDate","fullName","readOnly","disabled","DMS_CONTEXT_LOSS_ID","DMS_CONTEXT_LOSS","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","isClaimsFNOL","isClaimsUploadDisabled","claimsUploadWarningMsg","claimsSearchDocumentsTxt","uploadDocumentsTitle","isNextDiabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useLayoutEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport styles from './ClaimsEnterLossInformation.styles';\r\nimport {\r\n  ErrorMessage,\r\n  FormAutocompleteMui,\r\n  FormContainer,\r\n  FormLegend,\r\n  FormFields,\r\n  FormGrid,\r\n  FormText,\r\n  FormDate,\r\n  FormHidden,\r\n  Tooltip,\r\n  Skeleton,\r\n} from 'components';\r\nimport { postLossInformation, postEditLossInformation, resetLossData } from 'stores';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nClaimsEnterLossInformationView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n  hasLossRef: PropTypes.bool.isRequired,\r\n  lossInformation: PropTypes.object.isRequired,\r\n  lossDocsList: PropTypes.array,\r\n  lossSelected: PropTypes.object.isRequired,\r\n  formattedCatCodes: PropTypes.array,\r\n};\r\n\r\nexport function ClaimsEnterLossInformationView(props) {\r\n  const {\r\n    fields,\r\n    handleSave,\r\n    handleNext,\r\n    handleCancel,\r\n    hasLossRef,\r\n    lossInformation,\r\n    loggedInUser,\r\n    handleBack,\r\n    lossDocsList,\r\n    isWarningShow,\r\n    validation,\r\n    setValidation,\r\n    handleFormStatus,\r\n    lossProperties,\r\n    lossSelected,\r\n    formattedCatCodes,\r\n  } = props;\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'ClaimsEnterLossInformation' })({ isMobile: media.mobile, isTablet: media.tablet });\r\n\r\n  const dispatch = useDispatch();\r\n  const lossFocusRef = useRef();\r\n  const firstUpdate = useRef(true);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { handleSubmit, errors, control, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n  });\r\n\r\n  const formIsDirty = formState.isDirty;\r\n\r\n  useEffect(() => {\r\n    if (formIsDirty && !Object.keys(errors)?.length > 0) {\r\n      handleFormStatus();\r\n    }\r\n    if (Object.keys(errors)?.length > 0) {\r\n      lossFocusRef?.current?.scrollIntoView();\r\n    }\r\n  }, [formIsDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useLayoutEffect(() => {\r\n    if (firstUpdate.current) {\r\n      firstUpdate.current = false;\r\n    } else {\r\n      // do things after first render\r\n      formState.isDirty = true;\r\n    }\r\n  }, [lossDocsList]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (validation) {\r\n      if (formIsDirty) {\r\n        handleSubmit(submitLossInformation)();\r\n      }\r\n    }\r\n    setValidation(false);\r\n    return () => {\r\n      //console.log('resetLossData');\r\n      //dispatch(resetLossData());\r\n    };\r\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSaveLoss = () => {\r\n    handleSubmit(handleSave)();\r\n    handleSubmit(submitLossInformation)();\r\n  };\r\n\r\n  const submitLossInformation = async (values) => {\r\n    if (lossInformation?.lossDetailID && lossInformation?.isInflighLoss !== 1) {\r\n      dispatch(postEditLossInformation(values)).then((response) => {\r\n        if (typeof response?.data?.lossDetailID === 'number') {\r\n          validation ? handleNext() : handleSave();\r\n        }\r\n      });\r\n    } else if (lossInformation?.isInflighLoss === 1) {\r\n      handleNext();\r\n    } else {\r\n      dispatch(postLossInformation(values)).then((response) => {\r\n        if (typeof (response?.lossDetailID === 'number')) {\r\n          validation ? handleNext() : handleSave();\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const firstContactDate = errors?.firstContactDate ? { ...errors?.firstContactDate, message: '' } : null;\r\n  const firstContactTime = errors?.firstContactTime ? { ...errors?.firstContactTime, message: '' } : null;\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box flex=\"1 1 auto\" className={classes.container}>\r\n        <Box mt={4} ref={lossFocusRef}>\r\n          <FormLegend text={utils.string.t('claims.lossInformation.title')} />\r\n        </Box>\r\n\r\n        <FormContainer data-testid=\"form-lossInformation\">\r\n          <FormFields type=\"blank\">\r\n            <FormGrid container spacing={3}>\r\n              <FormGrid item xs={12} sm={8}>\r\n                <FormGrid container spacing={3}>\r\n                  <FormGrid item xs={6}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossRef')} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'fromDate', control)} error={errors.fromDate} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossName', control)} error={errors.lossName} />\r\n                    {isWarningShow && (\r\n                      <ErrorMessage\r\n                        error={{ message: utils.string.t('claims.lossInformation.validation.lossNameWarning') }}\r\n                        nestedClasses={{ root: classes.warningMessage }}\r\n                      />\r\n                    )}\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossDescription', control)} error={errors.lossDescription} />\r\n                  </FormGrid>\r\n                  {utils.generic.isInvalidOrEmptyArray(formattedCatCodes) ? (\r\n                    <Skeleton height={40} animation=\"wave\" displayNumber={1} />\r\n                  ) : (\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'catCodesID', control)} />\r\n                    </FormGrid>\r\n                  )}\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container spacing={3}>\r\n                  <FormGrid item xs={12}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'toDate', control)} error={errors.toDate} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <Tooltip title={utils.string.t('claims.lossInformation.firstContactTooltipMessage')} block placement=\"bottom\">\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={8} sm={12} md={8}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'firstContactDate', control)} error={firstContactDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={4} sm={6} md={4} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'firstContactTime', control)} error={firstContactTime} />\r\n                        </FormGrid>\r\n                        <ErrorMessage\r\n                          error={errors?.firstContactDate || errors?.firstContactTime}\r\n                          nestedClasses={{ root: classes.warningMessageDate }}\r\n                        />\r\n                      </FormGrid>\r\n                    </Tooltip>\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText\r\n                      name=\"assignToReadonly\"\r\n                      label={utils.string.t('claims.lossInformation.assignedTo')}\r\n                      value={loggedInUser.fullName}\r\n                      muiComponentProps={{\r\n                        readOnly: true,\r\n                        disabled: true,\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormHidden {...utils.form.getFieldProps(fields, 'assignedTo', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormFields>\r\n        </FormContainer>\r\n\r\n        <Box mt={6}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={lossInformation}\r\n            refIdName={constants.DMS_CONTEXT_LOSS_ID}\r\n            dmsContext={constants.DMS_CONTEXT_LOSS}\r\n            documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n            isTabView={false}\r\n            fnolViewOptions={{\r\n              isClaimsFNOL: true,\r\n              isClaimsUploadDisabled: !hasLossRef,\r\n              claimsUploadWarningMsg: !hasLossRef ? utils.string.t('claims.lossInformation.dms.fileUploadWarning') : '',\r\n              claimsSearchDocumentsTxt: utils.string.t('claims.lossInformation.dms.searchDocuments'),\r\n              uploadDocumentsTitle: utils.string.t('claims.lossInformation.dms.uploadDocuments'),\r\n            }}\r\n            docList={lossDocsList}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box flex=\"0 1 auto\">\r\n        <RegisterNewLossFixedBottomBar\r\n          {...props}\r\n          handleSave={onSaveLoss}\r\n          next={lossProperties?.isNextDiabled || false}\r\n          handleNextSubmit={() => setValidation(true)}\r\n          save={!lossSelected?.isInflighLoss}\r\n          handleBack={() => {\r\n            handleBack(0);\r\n          }}\r\n          handleCancel={handleCancel}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}