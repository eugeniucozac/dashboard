{"ast":null,"code":"import \"core-js/modules/es.array.filter\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\ChartKey\\\\ChartKey.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './ChartKey.styles';\nimport { Avatar, Button } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Collapse, Switch } from '@material-ui/core';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartKeyView.propTypes = {\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    avatarText: PropTypes.string,\n    checked: PropTypes.bool\n  })).isRequired,\n  hint: PropTypes.string,\n  title: PropTypes.string,\n  collapsed: PropTypes.bool.isRequired,\n  setCollapsed: PropTypes.func.isRequired,\n  handleToggle: PropTypes.func,\n  handleToggleAll: PropTypes.func,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  }),\n  colorMode: PropTypes.oneOf(['light', 'dark']).isRequired,\n  size: PropTypes.oneOf(['xsmall', 'small']).isRequired,\n  avatarSize: PropTypes.number,\n  allowCollapse: PropTypes.bool.isRequired,\n  handleAvatarClick: PropTypes.func,\n  testid: PropTypes.string,\n  noBorder: PropTypes.bool\n};\nexport function ChartKeyView(_ref) {\n  var _this = this;\n\n  var items = _ref.items,\n      hint = _ref.hint,\n      title = _ref.title,\n      collapsed = _ref.collapsed,\n      setCollapsed = _ref.setCollapsed,\n      handleToggle = _ref.handleToggle,\n      handleToggleAll = _ref.handleToggleAll,\n      colorMode = _ref.colorMode,\n      size = _ref.size,\n      avatarSize = _ref.avatarSize,\n      nestedClasses = _ref.nestedClasses,\n      allowCollapse = _ref.allowCollapse,\n      onAvatarClick = _ref.onAvatarClick,\n      testid = _ref.testid,\n      noBorder = _ref.noBorder;\n  var classes = makeStyles(styles, {\n    name: 'ChartKey'\n  })({\n    noBorder: noBorder,\n    colorMode: colorMode,\n    collapsed: collapsed,\n    size: size,\n    avatarSize: avatarSize,\n    hasSwitch: utils.generic.isFunction(handleToggle),\n    hasAvatar: items.filter(function (item) {\n      return item.color || item.avatarText;\n    }).length\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(classes.root, nestedClasses.root),\n    \"data-testid\": \"chartkey\".concat(testid ? \"-\".concat(testid) : ''),\n    children: [title && (allowCollapse ? /*#__PURE__*/_jsxDEV(Button, {\n      text: title,\n      size: size,\n      iconPosition: \"right\",\n      nestedClasses: {\n        btn: classes.button,\n        icon: classes.buttonIcon,\n        label: classes.buttonTitle\n      },\n      variant: \"text\",\n      icon: KeyboardArrowDownIcon,\n      onClick: function onClick() {\n        return setCollapsed(!collapsed);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(Collapse, {\n      \"in\": !collapsed,\n      children: /*#__PURE__*/_jsxDEV(\"ul\", {\n        className: classes.list,\n        children: [utils.generic.isFunction(handleToggleAll) && items.length > 1 && /*#__PURE__*/_jsxDEV(\"li\", {\n          className: classes.selectAllLi,\n          children: [/*#__PURE__*/_jsxDEV(\"span\", {\n            className: classes.selectAll,\n            children: utils.string.t('app.selectAll')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n            color: colorMode === 'light' ? 'primary' : 'secondary',\n            size: \"small\",\n            checked: items.length === items.filter(function (item) {\n              return item.checked;\n            }).length,\n            className: classes[\"switch\"],\n            onClick: function onClick(e) {\n              return handleToggleAll(e.target.checked);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 91,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 13\n        }, this), items.map(function (listItem, index) {\n          return /*#__PURE__*/_jsxDEV(\"li\", {\n            children: [(listItem.color || listItem.avatarText) && /*#__PURE__*/_jsxDEV(Avatar, {\n              onAvatarClick: utils.generic.isFunction(onAvatarClick) ? function (e) {\n                return onAvatarClick(e, listItem);\n              } : undefined,\n              avatarClasses: classes.avatar,\n              text: listItem.avatarText || ' ',\n              size: avatarSize,\n              bg: listItem.color\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 103,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n              className: classes.itemName,\n              children: listItem.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 15\n            }, _this), utils.generic.isFunction(handleToggle) && /*#__PURE__*/_jsxDEV(Switch, {\n              color: colorMode === 'light' ? 'primary' : 'secondary',\n              size: \"small\",\n              checked: listItem.checked,\n              className: classes[\"switch\"],\n              onClick: function onClick(e) {\n                return handleToggle(listItem.id, e.target.checked, listItem);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 17\n            }, _this)]\n          }, index, true, {\n            fileName: _jsxFileName,\n            lineNumber: 101,\n            columnNumber: 13\n          }, _this);\n        })]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), hint && !collapsed && /*#__PURE__*/_jsxDEV(\"p\", {\n      className: classes.hint,\n      children: hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 30\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 70,\n    columnNumber: 5\n  }, this);\n}\n_c = ChartKeyView;\nChartKeyView.displayName = \"ChartKeyView\";\nChartKeyView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ChartKeyView\",\n  \"props\": {\n    \"items\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"color\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"avatarText\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"checked\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"collapsed\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"setCollapsed\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleToggle\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleToggleAll\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"colorMode\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'light'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'dark'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'xsmall'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'small'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"avatarSize\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowCollapse\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleAvatarClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"testid\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"noBorder\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\ChartKey\\\\ChartKey.view.js\"] = {\n    name: \"ChartKeyView\",\n    docgenInfo: ChartKeyView.__docgenInfo,\n    path: \"src\\\\components\\\\ChartKey\\\\ChartKey.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartKeyView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/ChartKey/ChartKey.view.js"],"names":["React","PropTypes","classnames","styles","Avatar","Button","utils","makeStyles","Collapse","Switch","KeyboardArrowDownIcon","ChartKeyView","propTypes","items","arrayOf","shape","id","oneOfType","string","number","label","isRequired","color","avatarText","checked","bool","hint","title","collapsed","setCollapsed","func","handleToggle","handleToggleAll","nestedClasses","root","colorMode","oneOf","size","avatarSize","allowCollapse","handleAvatarClick","testid","noBorder","onAvatarClick","classes","name","hasSwitch","generic","isFunction","hasAvatar","filter","item","length","btn","button","icon","buttonIcon","buttonTitle","list","selectAllLi","selectAll","t","e","target","map","listItem","index","undefined","avatar","itemName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ChartKey.styles';\r\nimport { Avatar, Button } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Collapse, Switch } from '@material-ui/core';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nChartKeyView.propTypes = {\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      label: PropTypes.string.isRequired,\r\n      color: PropTypes.string,\r\n      avatarText: PropTypes.string,\r\n      checked: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n  hint: PropTypes.string,\r\n  title: PropTypes.string,\r\n  collapsed: PropTypes.bool.isRequired,\r\n  setCollapsed: PropTypes.func.isRequired,\r\n  handleToggle: PropTypes.func,\r\n  handleToggleAll: PropTypes.func,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n  colorMode: PropTypes.oneOf(['light', 'dark']).isRequired,\r\n  size: PropTypes.oneOf(['xsmall', 'small']).isRequired,\r\n  avatarSize: PropTypes.number,\r\n  allowCollapse: PropTypes.bool.isRequired,\r\n  handleAvatarClick: PropTypes.func,\r\n  testid: PropTypes.string,\r\n  noBorder: PropTypes.bool,\r\n};\r\n\r\nexport function ChartKeyView({\r\n  items,\r\n  hint,\r\n  title,\r\n  collapsed,\r\n  setCollapsed,\r\n  handleToggle,\r\n  handleToggleAll,\r\n  colorMode,\r\n  size,\r\n  avatarSize,\r\n  nestedClasses,\r\n  allowCollapse,\r\n  onAvatarClick,\r\n  testid,\r\n  noBorder,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ChartKey' })({\r\n    noBorder,\r\n    colorMode,\r\n    collapsed,\r\n    size,\r\n    avatarSize,\r\n    hasSwitch: utils.generic.isFunction(handleToggle),\r\n    hasAvatar: items.filter((item) => item.color || item.avatarText).length,\r\n  });\r\n\r\n  return (\r\n    <div className={classnames(classes.root, nestedClasses.root)} data-testid={`chartkey${testid ? `-${testid}` : ''}`}>\r\n      {title &&\r\n        (allowCollapse ? (\r\n          <Button\r\n            text={title}\r\n            size={size}\r\n            iconPosition=\"right\"\r\n            nestedClasses={{ btn: classes.button, icon: classes.buttonIcon, label: classes.buttonTitle }}\r\n            variant=\"text\"\r\n            icon={KeyboardArrowDownIcon}\r\n            onClick={() => setCollapsed(!collapsed)}\r\n          />\r\n        ) : (\r\n          <div className={classes.title}>{title}</div>\r\n        ))}\r\n\r\n      <Collapse in={!collapsed}>\r\n        <ul className={classes.list}>\r\n          {utils.generic.isFunction(handleToggleAll) && items.length > 1 && (\r\n            <li className={classes.selectAllLi}>\r\n              <span className={classes.selectAll}>{utils.string.t('app.selectAll')}</span>\r\n              <Switch\r\n                color={colorMode === 'light' ? 'primary' : 'secondary'}\r\n                size=\"small\"\r\n                checked={items.length === items.filter((item) => item.checked).length}\r\n                className={classes.switch}\r\n                onClick={(e) => handleToggleAll(e.target.checked)}\r\n              />\r\n            </li>\r\n          )}\r\n          {items.map((listItem, index) => (\r\n            <li key={index}>\r\n              {(listItem.color || listItem.avatarText) && (\r\n                <Avatar\r\n                  onAvatarClick={utils.generic.isFunction(onAvatarClick) ? (e) => onAvatarClick(e, listItem) : undefined}\r\n                  avatarClasses={classes.avatar}\r\n                  text={listItem.avatarText || ' '}\r\n                  size={avatarSize}\r\n                  bg={listItem.color}\r\n                />\r\n              )}\r\n              <span className={classes.itemName}>{listItem.label}</span>\r\n              {utils.generic.isFunction(handleToggle) && (\r\n                <Switch\r\n                  color={colorMode === 'light' ? 'primary' : 'secondary'}\r\n                  size=\"small\"\r\n                  checked={listItem.checked}\r\n                  className={classes.switch}\r\n                  onClick={(e) => handleToggle(listItem.id, e.target.checked, listItem)}\r\n                />\r\n              )}\r\n            </li>\r\n          ))}\r\n        </ul>\r\n      </Collapse>\r\n\r\n      {hint && !collapsed && <p className={classes.hint}>{hint}</p>}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}