{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LayerMarketTableRow\\\\LayerMarketTableRow.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport round from 'lodash/round'; // app\n\nimport styles from './LayerMarketTableRow.styles';\nimport { Avatar, PopoverMenu, Status, LayerComment, Restricted, TableCell, TableCheckbox, Translate, StatusIcon } from 'components';\nimport { selectRefDataStatusesMarketQuote, selectFormattedAccountStatusList, selectIsBroker } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Box, TableRow, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLayerMarketTableRow.propTypes = {\n  layer: PropTypes.object,\n  market: PropTypes.object.isRequired,\n  capacities: PropTypes.array,\n  isChecked: PropTypes.bool,\n  isSelected: PropTypes.bool,\n  showPremium: PropTypes.bool,\n  showWritten: PropTypes.bool,\n  showSigned: PropTypes.bool,\n  showStatus: PropTypes.bool,\n  showBulkSelect: PropTypes.bool,\n  showUnderwriterGroup: PropTypes.bool,\n  popoverItems: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  })),\n  handlers: PropTypes.shape({\n    bulkSelectMarket: PropTypes.func,\n    toggleMarket: PropTypes.func\n  }).isRequired\n};\nLayerMarketTableRow.defaultProps = {\n  printView: false\n};\nexport function LayerMarketTableRow(_ref) {\n  _s();\n\n  var _classesRow, _marketClasses;\n\n  var layer = _ref.layer,\n      market = _ref.market,\n      _ref$capacities = _ref.capacities,\n      capacities = _ref$capacities === void 0 ? [] : _ref$capacities,\n      isChecked = _ref.isChecked,\n      isSelected = _ref.isSelected,\n      comments = _ref.comments,\n      showPremium = _ref.showPremium,\n      showWritten = _ref.showWritten,\n      showSigned = _ref.showSigned,\n      showStatus = _ref.showStatus,\n      showBulkSelect = _ref.showBulkSelect,\n      showUnderwriterGroup = _ref.showUnderwriterGroup,\n      popoverItems = _ref.popoverItems,\n      printView = _ref.printView,\n      handlers = _ref.handlers;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCommentsOpen = _useState2[0],\n      setIsCommentsOpen = _useState2[1];\n\n  var classes = makeStyles(styles, {\n    name: 'LayerMarketTableRow'\n  })();\n  var referenceDataStatusesPolicyMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\n  var referenceDataAccountStatuses = useSelector(selectFormattedAccountStatusList);\n  var percentage = round(utils.market.getLineSize(market), config.ui.format.percent.decimal);\n  var underwriters = get(market, 'underwriter') || {};\n  var underwritersName = utils.user.fullname(underwriters);\n  var underwriterGroup = showUnderwriterGroup && utils.market.getUnderwriterGroup(market);\n  var signedPercentage = round(utils.market.getLineSize(market, true), config.ui.format.percent.decimal);\n  var marketName = utils.market.getName(market);\n  var marketStatus = utils.referenceData.status.getLabelById(referenceDataStatusesPolicyMarketQuote, market.statusId);\n  var marketPremium = market.premium;\n  var currency = utils.market.getCurrency(market);\n  var marketWritten = percentage;\n  var marketSigned = signedPercentage;\n  var marketCapacityId = get(market, 'market.capacityTypeId');\n  var marketCapacity = capacities.find(function (c) {\n    return c.id === marketCapacityId;\n  }) || {};\n  var hasComments = comments.hasComments,\n      newComments = comments.newComments;\n  var isSelectable = utils.generic.isFunction(handlers.bulkSelectMarket);\n  var hasStatus = !!(market.market && market.market.statusId);\n  var userIsBorker = useSelector(selectIsBroker);\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n  var marketClasses = (_marketClasses = {}, _defineProperty(_marketClasses, classes.market, true), _defineProperty(_marketClasses, classes.marketWithoutStatus, !hasStatus), _marketClasses);\n\n  var handleAddComments = function handleAddComments() {\n    setIsCommentsOpen(true);\n  };\n\n  var handleAddCommentClose = function handleAddCommentClose() {\n    setIsCommentsOpen(false);\n  };\n\n  var popoverItemsWithComments = [].concat(_toConsumableArray(popoverItems), [{\n    id: 'addComments',\n    label: utils.string.t('placement.generic.addComments'),\n    callback: handleAddComments\n  }]);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    onDoubleClick: function onDoubleClick() {\n      return userIsBorker && handlers.editLayerMarket({\n        title: marketName,\n        layer: layer,\n        layerMarket: market\n      });\n    },\n    hover: true,\n    className: classnames(classesRow),\n    \"data-testid\": \"market-row\",\n    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n      minimal: true,\n      \"data-testid\": \"market-main-cell\",\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames(marketClasses),\n        children: [!printView && isSelectable && showBulkSelect && /*#__PURE__*/_jsxDEV(Restricted, {\n          include: [constants.ROLE_BROKER],\n          children: /*#__PURE__*/_jsxDEV(TableCheckbox, {\n            checked: isChecked,\n            handleClick: handlers.bulkSelectMarket(layer.id, market.id),\n            nestedClasses: {\n              root: classes.checkbox\n            },\n            \"data-testid\": \"market-row-checkbox\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n          include: [constants.ROLE_BROKER],\n          children: hasStatus && /*#__PURE__*/_jsxDEV(StatusIcon, {\n            translationPath: \"statusMarket\",\n            list: referenceDataAccountStatuses,\n            id: market.market.statusId\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 143,\n            columnNumber: 27\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.marketDetails,\n          children: [marketName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.marketName,\n            \"data-testid\": \"market-name\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              display: \"flex\",\n              alignItems: \"center\",\n              position: \"relative\",\n              children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                children: [underwriterGroup && /*#__PURE__*/_jsxDEV(\"span\", {\n                  title: utils.string.t('placement.bound.underwriterGroup', {\n                    group: underwriterGroup\n                  }),\n                  className: classes.marketUnderwriterGroup,\n                  children: [\"[\", underwriterGroup, \"]\"]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 152,\n                  columnNumber: 23\n                }, this), marketName]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 19\n              }, this), marketCapacity && marketCapacity.color && /*#__PURE__*/_jsxDEV(Box, {\n                ml: 0.5,\n                mb: underwritersName ? '-1px' : '-2px',\n                children: /*#__PURE__*/_jsxDEV(Avatar, {\n                  text: \" \",\n                  size: 10,\n                  bg: marketCapacity.color,\n                  title: marketCapacity.name\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 17\n            }, this), market.isLeader && /*#__PURE__*/_jsxDEV(Status, {\n              size: \"xs\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"placement.generic.lead\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 27\n              }, this),\n              status: \"light\",\n              nestedClasses: {\n                root: classes.marketTag\n              },\n              \"data-testid\": \"market-generic-lead\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 19\n            }, this), market.lineToStand && /*#__PURE__*/_jsxDEV(Status, {\n              size: \"xs\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"placement.generic.lineToStand\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 179,\n                columnNumber: 27\n              }, this),\n              status: \"light\",\n              nestedClasses: {\n                root: classes.marketTag\n              },\n              \"data-testid\": \"market-line-to-stand-cell\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 148,\n            columnNumber: 15\n          }, this), underwritersName && /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classes.marketContact,\n            children: underwritersName\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 187,\n            columnNumber: 34\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 131,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 130,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-umr-cell\",\n      children: market.uniqueMarketReference\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 192,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-section-cell\",\n      children: market.section\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), showPremium && /*#__PURE__*/_jsxDEV(TableCell, {\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-premium-cell\",\n      children: /*#__PURE__*/_jsxDEV(Translate, {\n        label: \"format.currency\",\n        options: {\n          value: {\n            number: marketPremium,\n            currency: marketPremium ? currency : '',\n            \"default\": '-'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 202,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 201,\n      columnNumber: 9\n    }, this), showWritten && /*#__PURE__*/_jsxDEV(TableCell, {\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-written-cell\",\n      children: /*#__PURE__*/_jsxDEV(Translate, {\n        label: \"format.percent\",\n        options: {\n          value: {\n            number: marketWritten,\n            \"default\": '-'\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 211,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 210,\n      columnNumber: 9\n    }, this), showSigned && /*#__PURE__*/_jsxDEV(TableCell, {\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-signed-cell\",\n      children: /*#__PURE__*/_jsxDEV(Translate, {\n        label: \"format.percent\",\n        options: {\n          value: {\n            number: marketSigned\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 217,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 216,\n      columnNumber: 9\n    }, this), showStatus && /*#__PURE__*/_jsxDEV(TableCell, {\n      compact: true,\n      narrow: true,\n      nowrap: true,\n      center: true,\n      \"data-testid\": \"market-status-cell\",\n      children: marketStatus && /*#__PURE__*/_jsxDEV(Status, {\n        size: \"xs\",\n        text: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"status.\".concat(marketStatus)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 223,\n          columnNumber: 52\n        }, this),\n        status: marketStatus\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 223,\n        columnNumber: 28\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 222,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      compact: true,\n      center: true,\n      \"data-testid\": \"market-comments-cell\",\n      children: /*#__PURE__*/_jsxDEV(LayerComment, {\n        newComments: newComments,\n        hasComments: hasComments,\n        isOpen: isCommentsOpen,\n        handleAddCommentClose: handleAddCommentClose,\n        commentsOptions: {\n          id: \"placement/\".concat(layer.placementId, \"/layerMarket/\").concat(market.id)\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 228,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 227,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, {\n      menu: true,\n      \"data-testid\": \"market-menu-cell\",\n      children: !printView && popoverItems && popoverItems.length > 0 && /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER],\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          id: \"structuring-table-row\",\n          data: {\n            title: marketName,\n            layer: layer,\n            layerMarket: market\n          },\n          items: popoverItemsWithComments\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 239,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 117,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LayerMarketTableRow, \"ft+9xUXExSogtWakVhoVY7h1AU8=\", false, function () {\n  return [useSelector, useSelector, useSelector];\n});\n\n_c = LayerMarketTableRow;\nLayerMarketTableRow.displayName = \"LayerMarketTableRow\";\nLayerMarketTableRow.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LayerMarketTableRow\",\n  \"props\": {\n    \"capacities\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"printView\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"layer\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"market\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isChecked\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showPremium\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showWritten\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showSigned\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showStatus\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showBulkSelect\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showUnderwriterGroup\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"popoverItems\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"callback\": {\n              \"name\": \"func\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"bulkSelectMarket\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"toggleMarket\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default LayerMarketTableRow;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\LayerMarketTableRow\\\\LayerMarketTableRow.js\"] = {\n    name: \"LayerMarketTableRow\",\n    docgenInfo: LayerMarketTableRow.__docgenInfo,\n    path: \"src\\\\modules\\\\LayerMarketTableRow\\\\LayerMarketTableRow.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LayerMarketTableRow\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LayerMarketTableRow/LayerMarketTableRow.js"],"names":["React","useState","PropTypes","useSelector","classnames","get","round","styles","Avatar","PopoverMenu","Status","LayerComment","Restricted","TableCell","TableCheckbox","Translate","StatusIcon","selectRefDataStatusesMarketQuote","selectFormattedAccountStatusList","selectIsBroker","constants","utils","config","Box","TableRow","makeStyles","LayerMarketTableRow","propTypes","layer","object","market","isRequired","capacities","array","isChecked","bool","isSelected","showPremium","showWritten","showSigned","showStatus","showBulkSelect","showUnderwriterGroup","popoverItems","arrayOf","shape","id","string","label","callback","func","handlers","bulkSelectMarket","toggleMarket","defaultProps","printView","comments","isCommentsOpen","setIsCommentsOpen","classes","name","referenceDataStatusesPolicyMarketQuote","referenceDataAccountStatuses","percentage","getLineSize","ui","format","percent","decimal","underwriters","underwritersName","user","fullname","underwriterGroup","getUnderwriterGroup","signedPercentage","marketName","getName","marketStatus","referenceData","status","getLabelById","statusId","marketPremium","premium","currency","getCurrency","marketWritten","marketSigned","marketCapacityId","marketCapacity","find","c","hasComments","newComments","isSelectable","generic","isFunction","hasStatus","userIsBorker","classesRow","row","rowSelected","marketClasses","marketWithoutStatus","handleAddComments","handleAddCommentClose","popoverItemsWithComments","t","editLayerMarket","title","layerMarket","ROLE_BROKER","root","checkbox","marketDetails","group","marketUnderwriterGroup","color","isLeader","marketTag","lineToStand","marketContact","uniqueMarketReference","section","value","number","placementId","length"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\nimport round from 'lodash/round';\r\n\r\n// app\r\nimport styles from './LayerMarketTableRow.styles';\r\nimport { Avatar, PopoverMenu, Status, LayerComment, Restricted, TableCell, TableCheckbox, Translate, StatusIcon } from 'components';\r\nimport { selectRefDataStatusesMarketQuote, selectFormattedAccountStatusList, selectIsBroker } from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, TableRow, makeStyles } from '@material-ui/core';\r\n\r\nLayerMarketTableRow.propTypes = {\r\n  layer: PropTypes.object,\r\n  market: PropTypes.object.isRequired,\r\n  capacities: PropTypes.array,\r\n  isChecked: PropTypes.bool,\r\n  isSelected: PropTypes.bool,\r\n  showPremium: PropTypes.bool,\r\n  showWritten: PropTypes.bool,\r\n  showSigned: PropTypes.bool,\r\n  showStatus: PropTypes.bool,\r\n  showBulkSelect: PropTypes.bool,\r\n  showUnderwriterGroup: PropTypes.bool,\r\n  popoverItems: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      callback: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n  handlers: PropTypes.shape({\r\n    bulkSelectMarket: PropTypes.func,\r\n    toggleMarket: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nLayerMarketTableRow.defaultProps = {\r\n  printView: false,\r\n};\r\n\r\nexport function LayerMarketTableRow({\r\n  layer,\r\n  market,\r\n  capacities = [],\r\n  isChecked,\r\n  isSelected,\r\n  comments,\r\n  showPremium,\r\n  showWritten,\r\n  showSigned,\r\n  showStatus,\r\n  showBulkSelect,\r\n  showUnderwriterGroup,\r\n  popoverItems,\r\n  printView,\r\n  handlers,\r\n}) {\r\n  const [isCommentsOpen, setIsCommentsOpen] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'LayerMarketTableRow' })();\r\n  const referenceDataStatusesPolicyMarketQuote = useSelector(selectRefDataStatusesMarketQuote);\r\n  const referenceDataAccountStatuses = useSelector(selectFormattedAccountStatusList);\r\n  const percentage = round(utils.market.getLineSize(market), config.ui.format.percent.decimal);\r\n  const underwriters = get(market, 'underwriter') || {};\r\n  const underwritersName = utils.user.fullname(underwriters);\r\n  const underwriterGroup = showUnderwriterGroup && utils.market.getUnderwriterGroup(market);\r\n  const signedPercentage = round(utils.market.getLineSize(market, true), config.ui.format.percent.decimal);\r\n  const marketName = utils.market.getName(market);\r\n  const marketStatus = utils.referenceData.status.getLabelById(referenceDataStatusesPolicyMarketQuote, market.statusId);\r\n  const marketPremium = market.premium;\r\n  const currency = utils.market.getCurrency(market);\r\n  const marketWritten = percentage;\r\n  const marketSigned = signedPercentage;\r\n  const marketCapacityId = get(market, 'market.capacityTypeId');\r\n  const marketCapacity = capacities.find((c) => c.id === marketCapacityId) || {};\r\n\r\n  const { hasComments, newComments } = comments;\r\n\r\n  const isSelectable = utils.generic.isFunction(handlers.bulkSelectMarket);\r\n  const hasStatus = !!(market.market && market.market.statusId);\r\n  const userIsBorker = useSelector(selectIsBroker);\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  const marketClasses = {\r\n    [classes.market]: true,\r\n    [classes.marketWithoutStatus]: !hasStatus,\r\n  };\r\n\r\n  const handleAddComments = () => {\r\n    setIsCommentsOpen(true);\r\n  };\r\n\r\n  const handleAddCommentClose = () => {\r\n    setIsCommentsOpen(false);\r\n  };\r\n\r\n  const popoverItemsWithComments = [\r\n    ...popoverItems,\r\n    {\r\n      id: 'addComments',\r\n      label: utils.string.t('placement.generic.addComments'),\r\n      callback: handleAddComments,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <TableRow\r\n      onDoubleClick={() =>\r\n        userIsBorker &&\r\n        handlers.editLayerMarket({\r\n          title: marketName,\r\n          layer: layer,\r\n          layerMarket: market,\r\n        })\r\n      }\r\n      hover\r\n      className={classnames(classesRow)}\r\n      data-testid=\"market-row\"\r\n    >\r\n      <TableCell minimal data-testid=\"market-main-cell\">\r\n        <div className={classnames(marketClasses)}>\r\n          {!printView && isSelectable && showBulkSelect && (\r\n            <Restricted include={[constants.ROLE_BROKER]}>\r\n              <TableCheckbox\r\n                checked={isChecked}\r\n                handleClick={handlers.bulkSelectMarket(layer.id, market.id)}\r\n                nestedClasses={{ root: classes.checkbox }}\r\n                data-testid=\"market-row-checkbox\"\r\n              />\r\n            </Restricted>\r\n          )}\r\n          <Restricted include={[constants.ROLE_BROKER]}>\r\n            {hasStatus && <StatusIcon translationPath=\"statusMarket\" list={referenceDataAccountStatuses} id={market.market.statusId} />}\r\n          </Restricted>\r\n\r\n          <div className={classes.marketDetails}>\r\n            {marketName && (\r\n              <div className={classes.marketName} data-testid=\"market-name\">\r\n                <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\r\n                  <span>\r\n                    {underwriterGroup && (\r\n                      <span\r\n                        title={utils.string.t('placement.bound.underwriterGroup', { group: underwriterGroup })}\r\n                        className={classes.marketUnderwriterGroup}\r\n                      >\r\n                        [{underwriterGroup}]\r\n                      </span>\r\n                    )}\r\n                    {marketName}\r\n                  </span>\r\n                  {marketCapacity && marketCapacity.color && (\r\n                    <Box ml={0.5} mb={underwritersName ? '-1px' : '-2px'}>\r\n                      <Avatar text=\" \" size={10} bg={marketCapacity.color} title={marketCapacity.name} />\r\n                    </Box>\r\n                  )}\r\n                </Box>\r\n                {market.isLeader && (\r\n                  <Status\r\n                    size=\"xs\"\r\n                    text={<Translate label=\"placement.generic.lead\" />}\r\n                    status=\"light\"\r\n                    nestedClasses={{ root: classes.marketTag }}\r\n                    data-testid=\"market-generic-lead\"\r\n                  />\r\n                )}\r\n                {market.lineToStand && (\r\n                  <Status\r\n                    size=\"xs\"\r\n                    text={<Translate label=\"placement.generic.lineToStand\" />}\r\n                    status=\"light\"\r\n                    nestedClasses={{ root: classes.marketTag }}\r\n                    data-testid=\"market-line-to-stand-cell\"\r\n                  />\r\n                )}\r\n              </div>\r\n            )}\r\n            {underwritersName && <div className={classes.marketContact}>{underwritersName}</div>}\r\n          </div>\r\n        </div>\r\n      </TableCell>\r\n\r\n      <TableCell narrow nowrap center data-testid=\"market-umr-cell\">\r\n        {market.uniqueMarketReference}\r\n      </TableCell>\r\n\r\n      <TableCell narrow nowrap center data-testid=\"market-section-cell\">\r\n        {market.section}\r\n      </TableCell>\r\n\r\n      {showPremium && (\r\n        <TableCell narrow nowrap center data-testid=\"market-premium-cell\">\r\n          <Translate\r\n            label=\"format.currency\"\r\n            options={{ value: { number: marketPremium, currency: marketPremium ? currency : '', default: '-' } }}\r\n          />\r\n        </TableCell>\r\n      )}\r\n\r\n      {showWritten && (\r\n        <TableCell narrow nowrap center data-testid=\"market-written-cell\">\r\n          <Translate label=\"format.percent\" options={{ value: { number: marketWritten, default: '-' } }} />\r\n        </TableCell>\r\n      )}\r\n\r\n      {showSigned && (\r\n        <TableCell narrow nowrap center data-testid=\"market-signed-cell\">\r\n          <Translate label=\"format.percent\" options={{ value: { number: marketSigned } }} />\r\n        </TableCell>\r\n      )}\r\n\r\n      {showStatus && (\r\n        <TableCell compact narrow nowrap center data-testid=\"market-status-cell\">\r\n          {marketStatus && <Status size=\"xs\" text={<Translate label={`status.${marketStatus}`} />} status={marketStatus} />}\r\n        </TableCell>\r\n      )}\r\n\r\n      <TableCell compact center data-testid=\"market-comments-cell\">\r\n        <LayerComment\r\n          newComments={newComments}\r\n          hasComments={hasComments}\r\n          isOpen={isCommentsOpen}\r\n          handleAddCommentClose={handleAddCommentClose}\r\n          commentsOptions={{\r\n            id: `placement/${layer.placementId}/layerMarket/${market.id}`,\r\n          }}\r\n        />\r\n      </TableCell>\r\n\r\n      <TableCell menu data-testid=\"market-menu-cell\">\r\n        {!printView && popoverItems && popoverItems.length > 0 && (\r\n          <Restricted include={[constants.ROLE_BROKER]}>\r\n            <PopoverMenu\r\n              id=\"structuring-table-row\"\r\n              data={{\r\n                title: marketName,\r\n                layer: layer,\r\n                layerMarket: market,\r\n              }}\r\n              items={popoverItemsWithComments}\r\n            />\r\n          </Restricted>\r\n        )}\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n\r\nexport default LayerMarketTableRow;\r\n"]},"metadata":{},"sourceType":"module"}