{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { RegisterNewLossFixedBottomBar, ClaimsEnterLossInformation, LinkSearchPolicy, RegisterClaimCardInformation, ClaimsAcknowledgement, ClaimsManageDocuments } from 'modules';\nimport { selectCatCodes, getCatCodes, getPriorityLevels, getLossQualifiers } from 'stores';\nimport styles from './ClaimsRegisterNewLoss.style';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLossView.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n  setActiveStep: PropTypes.func.isRequired,\n  handleStep: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  progress: PropTypes.number.isRequired,\n  isFormsEdited: PropTypes.array.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  handleFormStatus: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  setFormEditedStatus: PropTypes.func.isRequired,\n  setSaveStatus: PropTypes.func.isRequired,\n  saveStatus: PropTypes.number.isRequired\n};\nexport default function ClaimsRegisterNewLossView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeStep = _ref.activeStep,\n      setActiveStep = _ref.setActiveStep,\n      handleStep = _ref.handleStep,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      isFormsEdited = _ref.isFormsEdited,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleNext = _ref.handleNext,\n      handleFormStatus = _ref.handleFormStatus,\n      _handleBack = _ref.handleBack,\n      _handleSave = _ref.handleSave,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      setSaveStatus = _ref.setSaveStatus,\n      launchFinishModal = _ref.launchFinishModal,\n      lossProperties = _ref.lossProperties,\n      claimProperties = _ref.claimProperties;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsRegisterNewLoss'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var catCodes = useSelector(selectCatCodes);\n  var dispatch = useDispatch();\n\n  var getAllReferentialData = function getAllReferentialData() {\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\n      dispatch(getCatCodes());\n    }\n  };\n\n  useEffect(function () {\n    getAllReferentialData();\n    dispatch(getLossQualifiers());\n    dispatch(getPriorityLevels());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isStepCompleted = function isStepCompleted(index) {\n    var _isFormsEdited$index;\n\n    return (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.isSubmitted) === true;\n  };\n\n  var stepContent = function stepContent(index) {\n    var _isFormsEdited$index2, _isFormsEdited$index3, _isFormsEdited$index4, _isFormsEdited$index5;\n\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleNext: function handleNext() {\n            return _handleNext(index);\n          },\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          activeStep: activeStep,\n          lastStep: false,\n          context: constants.DMS_CONTEXT_LOSS,\n          saveStatus: saveStatus,\n          handleBack: _handleBack,\n          handleFormStatus: handleFormStatus,\n          lossProperties: lossProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(LinkSearchPolicy, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isFormsEdited: isFormsEdited,\n          setFormEditedStatus: setFormEditedStatus,\n          activeStep: activeStep,\n          setActiveStep: setActiveStep,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleBack: _handleBack,\n          handleSave: _handleSave,\n          handleNext: _handleNext,\n          save: (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus,\n          index: index,\n          saveStatus: saveStatus,\n          setSaveStatus: setSaveStatus,\n          handleFormStatus: handleFormStatus,\n          claimProperties: claimProperties\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 101,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(RegisterClaimCardInformation, {\n          activeStep: activeStep,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleBack: _handleBack,\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          handleNext: _handleNext,\n          save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus,\n          index: index,\n          handleFormStatus: handleFormStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 122,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(ClaimsManageDocuments, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleNext: function handleNext() {\n            return _handleNext(index);\n          },\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          activeStep: activeStep,\n          lastStep: false,\n          context: constants.DMS_CONTEXT_LOSS,\n          saveStatus: saveStatus,\n          handleBack: _handleBack,\n          handleFormStatus: handleFormStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {\n          lastStep: true,\n          activeStep: activeStep,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleBack: function handleBack() {\n            _handleBack(index);\n          },\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          handleFinish: function handleFinish() {\n            return launchFinishModal();\n          },\n          save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus,\n          handleStep: handleStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 154,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n          activeStep: activeStep,\n          onSave: function onSave() {},\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          handleNextSubmit: function handleNextSubmit() {\n            return _handleNext(index);\n          },\n          save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 171,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  var isNextSteppedAllowed = function isNextSteppedAllowed(step) {\n    if (activeStep < step) {\n      var _isFormsEdited$active, _isFormsEdited$active2, _isFormsEdited, _isFormsEdited2;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active = isFormsEdited[activeStep]) === null || _isFormsEdited$active === void 0 ? void 0 : _isFormsEdited$active['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active2 = isFormsEdited[activeStep]) === null || _isFormsEdited$active2 === void 0 ? void 0 : _isFormsEdited$active2['isSubmitted']) && !(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited = isFormsEdited[step - 1]) === null || _isFormsEdited === void 0 ? void 0 : _isFormsEdited['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited2 = isFormsEdited[step - 1]) === null || _isFormsEdited2 === void 0 ? void 0 : _isFormsEdited2['isSubmitted'])) {\n        return true;\n      }\n    } else if (activeStep > step) {\n      return true;\n    } else {\n      return false;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      \"data-testid\": \"LinearStepper\",\n      classes: {\n        root: classes.stepper\n      },\n      children: steps.map(function (label, index) {\n        var stepProps = {};\n\n        if (isStepCompleted(index)) {\n          stepProps.completed = index === activeStep ? false : true;\n        }\n\n        return /*#__PURE__*/_jsxDEV(Step, _objectSpread(_objectSpread({\n          onClick: function onClick() {\n            return handleStep(index);\n          }\n        }, stepProps), {}, {\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: isNextSteppedAllowed(index) ? classes.iconContainerCompleted : classes.iconContainer\n              }\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 212,\n            columnNumber: 15\n          }, _this)\n        }), label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 211,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 7\n    }, this), stepContent(activeStep)]\n  }, void 0, true);\n}\n\n_s(ClaimsRegisterNewLossView, \"YbLziJw2LdO/CPiC0DaBWXSulxQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ClaimsRegisterNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.view.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","RegisterNewLossFixedBottomBar","ClaimsEnterLossInformation","LinkSearchPolicy","RegisterClaimCardInformation","ClaimsAcknowledgement","ClaimsManageDocuments","selectCatCodes","getCatCodes","getPriorityLevels","getLossQualifiers","styles","utils","constants","LinearProgress","Stepper","Step","StepLabel","makeStyles","ClaimsRegisterNewLossView","propTypes","activeStep","number","isRequired","setActiveStep","func","handleStep","steps","array","progress","isFormsEdited","isAllStepsCompleted","bool","handleFormStatus","handleNext","handleBack","handleSave","setFormEditedStatus","setSaveStatus","saveStatus","launchFinishModal","lossProperties","claimProperties","classes","name","policyRef","setPolicyRef","catCodes","dispatch","getAllReferentialData","generic","isInvalidOrEmptyArray","isStepCompleted","index","isSubmitted","stepContent","DMS_CONTEXT_LOSS","formEditedStatus","isNextSteppedAllowed","step","root","stepper","map","label","stepProps","completed","iconContainerCompleted","iconContainer","linearProgress"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport {\r\n  RegisterNewLossFixedBottomBar,\r\n  ClaimsEnterLossInformation,\r\n  LinkSearchPolicy,\r\n  RegisterClaimCardInformation,\r\n  ClaimsAcknowledgement,\r\n  ClaimsManageDocuments,\r\n} from 'modules';\r\nimport { selectCatCodes, getCatCodes, getPriorityLevels, getLossQualifiers } from 'stores';\r\nimport styles from './ClaimsRegisterNewLoss.style';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\r\n\r\nClaimsRegisterNewLossView.propTypes = {\r\n  activeStep: PropTypes.number.isRequired,\r\n  setActiveStep: PropTypes.func.isRequired,\r\n  handleStep: PropTypes.func.isRequired,\r\n  steps: PropTypes.array.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  isFormsEdited: PropTypes.array.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  setFormEditedStatus: PropTypes.func.isRequired,\r\n  setSaveStatus: PropTypes.func.isRequired,\r\n  saveStatus: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function ClaimsRegisterNewLossView({\r\n  activeStep,\r\n  setActiveStep,\r\n  handleStep,\r\n  steps,\r\n  progress,\r\n  isFormsEdited,\r\n  isAllStepsCompleted,\r\n  handleNext,\r\n  handleFormStatus,\r\n  handleBack,\r\n  handleSave,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  setSaveStatus,\r\n  launchFinishModal,\r\n  lossProperties,\r\n  claimProperties,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsRegisterNewLoss' })();\r\n\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const dispatch = useDispatch();\r\n\r\n  const getAllReferentialData = () => {\r\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\r\n      dispatch(getCatCodes());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllReferentialData();\r\n    dispatch(getLossQualifiers());\r\n    dispatch(getPriorityLevels());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isStepCompleted = (index) => {\r\n    return isFormsEdited?.[index]?.isSubmitted === true;\r\n  };\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleNext={() => handleNext(index)}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            activeStep={activeStep}\r\n            lastStep={false}\r\n            context={constants.DMS_CONTEXT_LOSS}\r\n            saveStatus={saveStatus}\r\n            handleBack={handleBack}\r\n            handleFormStatus={handleFormStatus}\r\n            lossProperties={lossProperties}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <LinkSearchPolicy\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isFormsEdited={isFormsEdited}\r\n            setFormEditedStatus={setFormEditedStatus}\r\n            activeStep={activeStep}\r\n            setActiveStep={setActiveStep}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleBack={handleBack}\r\n            handleSave={handleSave}\r\n            handleNext={handleNext}\r\n            save={isFormsEdited[index]?.formEditedStatus}\r\n            index={index}\r\n            saveStatus={saveStatus}\r\n            setSaveStatus={setSaveStatus}\r\n            handleFormStatus={handleFormStatus}\r\n            claimProperties={claimProperties}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <RegisterClaimCardInformation\r\n            activeStep={activeStep}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleBack={handleBack}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            handleNext={handleNext}\r\n            save={isFormsEdited?.[index]?.formEditedStatus}\r\n            index={index}\r\n            handleFormStatus={handleFormStatus}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ClaimsManageDocuments\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleNext={() => handleNext(index)}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            activeStep={activeStep}\r\n            lastStep={false}\r\n            context={constants.DMS_CONTEXT_LOSS}\r\n            saveStatus={saveStatus}\r\n            handleBack={handleBack}\r\n            handleFormStatus={handleFormStatus}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <ClaimsAcknowledgement\r\n            lastStep={true}\r\n            activeStep={activeStep}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleBack={() => {\r\n              handleBack(index);\r\n            }}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            handleFinish={() => launchFinishModal()}\r\n            save={isFormsEdited?.[index]?.formEditedStatus}\r\n            handleStep={handleStep}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <RegisterNewLossFixedBottomBar\r\n            activeStep={activeStep}\r\n            onSave={() => {}}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            handleNextSubmit={() => handleNext(index)}\r\n            save={isFormsEdited?.[index]?.formEditedStatus}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  const isNextSteppedAllowed = (step) => {\r\n    if (activeStep < step) {\r\n      if (\r\n        !isFormsEdited?.[activeStep]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[activeStep]?.['isSubmitted'] &&\r\n        !isFormsEdited?.[step - 1]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[step - 1]?.['isSubmitted']\r\n      ) {\r\n        return true;\r\n      }\r\n    } else if (activeStep > step) {\r\n      return true;\r\n    } else {\r\n      return false;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Stepper alternativeLabel activeStep={activeStep} data-testid=\"LinearStepper\" classes={{ root: classes.stepper }}>\r\n        {steps.map((label, index) => {\r\n          const stepProps = {};\r\n          if (isStepCompleted(index)) {\r\n            stepProps.completed = index === activeStep ? false : true;\r\n          }\r\n          return (\r\n            <Step key={label} onClick={() => handleStep(index)} {...stepProps}>\r\n              <StepLabel\r\n                StepIconProps={{\r\n                  classes: {\r\n                    root: isNextSteppedAllowed(index) ? classes.iconContainerCompleted : classes.iconContainer,\r\n                  },\r\n                }}\r\n              >\r\n                {label}\r\n              </StepLabel>\r\n            </Step>\r\n          );\r\n        })}\r\n      </Stepper>\r\n\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      {stepContent(activeStep)}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}