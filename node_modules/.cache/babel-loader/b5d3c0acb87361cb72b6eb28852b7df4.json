{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsPreviewDashboard\\\\ClaimsPreviewDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useHistory, useLocation } from 'react-router';\nimport get from 'lodash/get';\nimport moment from 'moment'; // app\n\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\nimport { selectClaimsInformation, selectLossInformation, selectClaimsPolicyInformation, getClaimsPreviewInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectRefDataCatCodesList, getLossInformation, selectLossInfoIsLoading, getPolicyInformation, selectPolicyInfoIsLoading, getPolicySections, selectPolicySectionIsLoading, selectClaimsPolicySections, setClaimsStepperControl, selectClaimsTabSelectedClaimData, getViewTableDocuments, getBpmClaimDetails, selectBpmClaimInformation } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Edit } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsPreviewDashboard(props) {\n  _s();\n\n  var _get, _claimsInformation$cl, _useSelector, _useSelector2, _catCodes$find, _claimsInformation$ba, _policySections$find, _interests$find, _useState3;\n\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var history = useHistory();\n  var claimData = props.claimDataFromRef;\n  var claimId = (_get = get(claimData, 'claimId')) !== null && _get !== void 0 ? _get : '';\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var claimStatus = (_claimsInformation$cl = claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus) !== null && _claimsInformation$cl !== void 0 ? _claimsInformation$cl : '';\n  var lossId = ((_useSelector = useSelector(selectClaimsTabSelectedClaimData)) === null || _useSelector === void 0 ? void 0 : _useSelector.lossDetailID) || '';\n  var lossInformation = useSelector(selectLossInformation);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector2 = useSelector(selectClaimsInterest)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var catCodes = useSelector(selectRefDataCatCodesList);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.catCodesID) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.catCodeDescription;\n  var isInflightLoss = (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.isInflighLoss) === 1;\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n\n  var _useSelector3 = useSelector(selectBpmClaimInformation),\n      _useSelector3$data = _useSelector3.data,\n      bpmClaimInfo = _useSelector3$data === void 0 ? {} : _useSelector3$data,\n      _useSelector3$isLoadi = _useSelector3.isLoading,\n      isBpmClaimInfoLoading = _useSelector3$isLoadi === void 0 ? false : _useSelector3$isLoadi;\n\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$ba = claimsInformation.basisOfOrder) === null || _claimsInformation$ba === void 0 ? void 0 : _claimsInformation$ba.toString()) === '0' ? utils.string.t('claims.typeOfSettlement.ourShare') : utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  useEffect(function () {\n    if (claimData) {\n      dispatch(getClaimsPreviewInformation({\n        claimId: claimId.toString() || (claimData === null || claimData === void 0 ? void 0 : claimData.claimID),\n        claimRefParams: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        sourceIdParams: (claimData === null || claimData === void 0 ? void 0 : claimData.sourceId) || (claimData === null || claimData === void 0 ? void 0 : claimData.sourceID),\n        divisionIDParams: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionId) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID) || (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID),\n        viewLoader: false\n      }));\n      dispatch(getLossInformation({\n        lossDetailsId: lossId || (claimData === null || claimData === void 0 ? void 0 : claimData.lossDetailID),\n        sourceIdParams: (claimData === null || claimData === void 0 ? void 0 : claimData.sourceId) || (claimData === null || claimData === void 0 ? void 0 : claimData.sourceID),\n        divisionIdParam: (claimData === null || claimData === void 0 ? void 0 : claimData.divisionId) || (claimData === null || claimData === void 0 ? void 0 : claimData.departmentID) || (claimData === null || claimData === void 0 ? void 0 : claimData.divisionID),\n        claimRefParam: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n        viewLoader: false\n      }));\n      dispatch(getBpmClaimDetails({\n        claimId: claimId || (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimID),\n        viewLoader: false\n      }));\n      dispatch(getPolicyInformation({\n        xbPolicyID: claimData === null || claimData === void 0 ? void 0 : claimData.policyId,\n        xbInstanceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        viewLoader: false\n      }));\n      dispatch(getPolicySections({\n        xbPolicyID: claimData === null || claimData === void 0 ? void 0 : claimData.policyId,\n        xbInstanceID: claimData === null || claimData === void 0 ? void 0 : claimData.sourceId,\n        viewLoader: false\n      }));\n    }\n  }, [claimData, lossId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleEditClaim = function handleEditClaim() {\n    dispatch(getViewTableDocuments({\n      referenceId: claimData === null || claimData === void 0 ? void 0 : claimData.claimReference,\n      sectionType: constants.DMS_CONTEXT_CLAIM\n    }));\n    dispatch(setClaimsStepperControl(1));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        linkPolicy: {\n          isSearchTerm: '',\n          claimObj: claimData\n        },\n        redirectUrl: location === null || location === void 0 ? void 0 : location.pathname\n      }\n    });\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.dateTime) || (isInflightLoss ? 'NA' : '')\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.assignedToName) || (isInflightLoss ? 'NA' : '')\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.dateTime)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.text)\n  }, {\n    title: utils.string.t('claims.claimInformation.location'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: \"\".concat(utils.string.t('claims.claimInformation.complexityBasis'), '*'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.referral'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }, {\n    title: utils.string.t('claims.claimInformation.workflowStatus'),\n    value: bpmClaimInfo === null || bpmClaimInfo === void 0 ? void 0 : bpmClaimInfo.status,\n    type: 'bpm'\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStage'),\n    value: bpmClaimInfo === null || bpmClaimInfo === void 0 ? void 0 : bpmClaimInfo.claimStage,\n    type: 'bpm'\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.text),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.text),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n\n  var _useState = useState((_useState3 = {}, _defineProperty(_useState3, utils.string.t('claims.lossInformation.title'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.policyTitle'), true), _defineProperty(_useState3, utils.string.t('claims.underWritingGroups.tilteInformation'), true), _defineProperty(_useState3, utils.string.t('claims.claimInformation.title'), true), _useState3)),\n      _useState2 = _slicedToArray(_useState, 2),\n      accordionsExpandStatus = _useState2[0],\n      setAccordiansStatus = _useState2[1];\n\n  var setAccordiansIsExpanded = function setAccordiansIsExpanded(cardName, isExpand) {\n    var accordionsStatus = _objectSpread({}, accordionsExpandStatus);\n\n    accordionsStatus[cardName] = isExpand;\n    setAccordiansStatus(accordionsStatus);\n  };\n\n  var sections = [{\n    title: utils.string.t('claims.claimInformation.title'),\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\n    },\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\n    data: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: (info === null || info === void 0 ? void 0 : info.type) === 'bpm' ? isBpmClaimInfoLoading : isClaimInfoLoading\n      });\n    }),\n    actions: _toConsumableArray(!utils.string.isEqual(claimStatus, constants.STATUS_CLAIMS_DRAFT, {\n      caseSensitive: false\n    }) ? [] : [{\n      id: 'edit',\n      icon: Edit,\n      color: 'primary',\n      disabled: true,\n      onClick: function onClick() {\n        return handleEditClaim(claimsInformation);\n      }\n    }])\n  }, {\n    title: utils.string.t('claims.claimInformation.policyTitle'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\n    },\n    data: policyInfo\n  }, {\n    title: utils.string.t('claims.underWritingGroups.tilteInformation'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.tilteInformation')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.tilteInformation'), isExpanded);\n    },\n    data: underWritingInfo\n  }, {\n    title: utils.string.t('claims.lossInformation.title'),\n    isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\n    handleExpanded: function handleExpanded(isExpanded) {\n      setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\n    },\n    data: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    })\n  }]; // abort\n\n  if (!claimsInformation) return null;\n  return /*#__PURE__*/_jsxDEV(ClaimsPreviewDashboardView, {\n    sections: sections,\n    underWritingGroupColumns: underWritingGroupColumns\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 423,\n    columnNumber: 10\n  }, this);\n}\n\n_s(ClaimsPreviewDashboard, \"LYNtQEgnPiPXjGe33Y5nFkHGE0w=\", false, function () {\n  return [useDispatch, useLocation, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsPreviewDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsPreviewDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsPreviewDashboard/ClaimsPreviewDashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","useHistory","useLocation","get","moment","ClaimsPreviewDashboardView","selectClaimsInformation","selectLossInformation","selectClaimsPolicyInformation","getClaimsPreviewInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectRefDataCatCodesList","getLossInformation","selectLossInfoIsLoading","getPolicyInformation","selectPolicyInfoIsLoading","getPolicySections","selectPolicySectionIsLoading","selectClaimsPolicySections","setClaimsStepperControl","selectClaimsTabSelectedClaimData","getViewTableDocuments","getBpmClaimDetails","selectBpmClaimInformation","constants","utils","config","Edit","ClaimsPreviewDashboard","props","dispatch","location","history","claimData","claimDataFromRef","claimId","claimsInformation","claimStatus","lossId","lossDetailID","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","policySections","origCurrencies","state","countriesList","catCodes","catCode","find","item","Number","catCodesID","catCodeDescription","isInflightLoss","isInflighLoss","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","data","bpmClaimInfo","isLoading","isBpmClaimInfoLoading","underWritingInfo","policyUnderWritingGroupDtoList","basisOfOrder","toString","string","t","movementType","orderPercentage","policySectionInfo","policySectionID","sec","id","name","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","claimID","claimRefParams","claimReference","sourceIdParams","sourceId","sourceID","divisionIDParams","divisionId","departmentID","divisionID","viewLoader","lossDetailsId","divisionIdParam","claimRefParam","xbPolicyID","policyId","xbInstanceID","handleEditClaim","referenceId","sectionType","DMS_CONTEXT_CLAIM","push","pathname","routes","claimsFNOL","newLoss","linkPolicy","isSearchTerm","claimObj","redirectUrl","lossInfo","title","value","lossRef","fromDate","format","ui","date","text","toDate","firstContactDate","dateTime","lossName","lossDescription","assignedToName","claimInfo","claimReceivedDate","claimantName","lossQualifierName","lossFromDate","lossToDate","fgunarrative","beAdjusterID","complexity","adjusterName","nonBEAdjusterName","referralValue","status","type","adjusterReference","referralResponseDescription","priorityDescription","claimStage","policyInfo","policyRef","statusCode","policyNote","inceptionDate","expiryDate","client","insured","bordereauClaim","isBordereau","certificateInceptionDate","slashNumericDateAndTime","certificateExpiryDate","certificateNumber","bordereauPeriod","reInsured","company","division","originalCurrency","settlementCurrencyCode","policyInterestID","description","settlementCountry","underWritingGroupColumns","label","accordionsExpandStatus","setAccordiansStatus","setAccordiansIsExpanded","cardName","isExpand","accordionsStatus","sections","handleExpanded","isExpanded","map","info","actions","isEqual","STATUS_CLAIMS_DRAFT","caseSensitive","icon","color","disabled","onClick"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useHistory, useLocation } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport { ClaimsPreviewDashboardView } from './ClaimsPreviewDashboard.view';\r\nimport {\r\n  selectClaimsInformation,\r\n  selectLossInformation,\r\n  selectClaimsPolicyInformation,\r\n  getClaimsPreviewInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectRefDataCatCodesList,\r\n  getLossInformation,\r\n  selectLossInfoIsLoading,\r\n  getPolicyInformation,\r\n  selectPolicyInfoIsLoading,\r\n  getPolicySections,\r\n  selectPolicySectionIsLoading,\r\n  selectClaimsPolicySections,\r\n  setClaimsStepperControl,\r\n  selectClaimsTabSelectedClaimData,\r\n  getViewTableDocuments,\r\n  getBpmClaimDetails,\r\n  selectBpmClaimInformation,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nexport default function ClaimsPreviewDashboard(props) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n  const history = useHistory();\r\n\r\n  const claimData = props.claimDataFromRef;\r\n  const claimId = get(claimData, 'claimId') ?? '';\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const claimStatus = claimsInformation?.claimStatus ?? '';\r\n  const lossId = useSelector(selectClaimsTabSelectedClaimData)?.lossDetailID || '';\r\n\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n  const catCodes = useSelector(selectRefDataCatCodesList);\r\n  const catCode = catCodes.find((item) => Number(item.catCodesID) === lossInformation.catCodesID)?.catCodeDescription;\r\n\r\n  const isInflightLoss = lossInformation?.isInflighLoss === 1;\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n\r\n  const { data: bpmClaimInfo = {}, isLoading: isBpmClaimInfoLoading = false } = useSelector(selectBpmClaimInformation);\r\n\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder:\r\n      claimsInformation?.basisOfOrder?.toString() === '0'\r\n        ? utils.string.t('claims.typeOfSettlement.ourShare')\r\n        : utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n      ? utils.string.t('app.all')\r\n      : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(\r\n      (currency) => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase()\r\n    )?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`;\r\n  };\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find((country) => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName;\r\n    return countryName;\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (claimData) {\r\n      dispatch(\r\n        getClaimsPreviewInformation({\r\n          claimId: claimId.toString() || claimData?.claimID,\r\n          claimRefParams: claimData?.claimReference,\r\n          sourceIdParams: claimData?.sourceId || claimData?.sourceID,\r\n          divisionIDParams: claimData?.divisionId || claimData?.departmentID || claimData?.divisionID,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(\r\n        getLossInformation({\r\n          lossDetailsId: lossId || claimData?.lossDetailID,\r\n          sourceIdParams: claimData?.sourceId || claimData?.sourceID,\r\n          divisionIdParam: claimData?.divisionId || claimData?.departmentID || claimData?.divisionID,\r\n          claimRefParam: claimData?.claimReference,\r\n          viewLoader: false,\r\n        })\r\n      );\r\n      dispatch(getBpmClaimDetails({ claimId: claimId || claimsInformation?.claimID, viewLoader: false }));\r\n      dispatch(getPolicyInformation({ xbPolicyID: claimData?.policyId, xbInstanceID: claimData?.sourceId, viewLoader: false }));\r\n      dispatch(getPolicySections({ xbPolicyID: claimData?.policyId, xbInstanceID: claimData?.sourceId, viewLoader: false }));\r\n    }\r\n  }, [claimData, lossId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleEditClaim = () => {\r\n    dispatch(getViewTableDocuments({ referenceId: claimData?.claimReference, sectionType: constants.DMS_CONTEXT_CLAIM }));\r\n    dispatch(setClaimsStepperControl(1));\r\n\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        linkPolicy: {\r\n          isSearchTerm: '',\r\n          claimObj: claimData,\r\n        },\r\n        redirectUrl: location?.pathname,\r\n      },\r\n    });\r\n  };\r\n\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        (lossInformation?.firstContactDate && moment(lossInformation?.firstContactDate).format(config.ui.format.date.dateTime)) ||\r\n        (isInflightLoss ? 'NA' : ''),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.assignedToName || (isInflightLoss ? 'NA' : '') },\r\n  ];\r\n\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value: claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.dateTime),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\r\n      value: claimsInformation?.lossQualifierName,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossFromDate).format(config.ui.format.date.text),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.text),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.location'), value: claimsInformation?.location },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.fguNarrative'),\r\n      value: claimsInformation?.fgunarrative,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    {\r\n      title: `${utils.string.t('claims.claimInformation.complexityBasis')}${'*'}`,\r\n      value: claimsInformation?.complexity,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.referral'), value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus'), value: claimsInformation?.claimStatus },\r\n    { title: utils.string.t('claims.claimInformation.workflowStatus'), value: bpmClaimInfo?.status, type: 'bpm' },\r\n\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorRef'),\r\n      value: claimsInformation?.adjusterReference,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.rfiResponse'),\r\n      value: claimsInformation?.referralResponseDescription,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.priority'),\r\n      value: claimsInformation?.priorityDescription,\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimStage'), value: bpmClaimInfo?.claimStage, type: 'bpm' },\r\n  ];\r\n\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value: policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.text),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.text),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n          moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n          moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n\r\n  const [accordionsExpandStatus, setAccordiansStatus] = useState({\r\n    [utils.string.t('claims.lossInformation.title')]: true,\r\n    [utils.string.t('claims.claimInformation.policyTitle')]: true,\r\n    [utils.string.t('claims.underWritingGroups.tilteInformation')]: true,\r\n    [utils.string.t('claims.claimInformation.title')]: true,\r\n  });\r\n\r\n  const setAccordiansIsExpanded = (cardName, isExpand) => {\r\n    const accordionsStatus = { ...accordionsExpandStatus };\r\n    accordionsStatus[cardName] = isExpand;\r\n    setAccordiansStatus(accordionsStatus);\r\n  };\r\n\r\n  const sections = [\r\n    {\r\n      title: utils.string.t('claims.claimInformation.title'),\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.title'), isExpanded);\r\n      },\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.title')],\r\n      data: claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: info?.type === 'bpm' ? isBpmClaimInfoLoading : isClaimInfoLoading,\r\n      })),\r\n      actions: [\r\n        ...(!utils.string.isEqual(claimStatus, constants.STATUS_CLAIMS_DRAFT, { caseSensitive: false })\r\n          ? []\r\n          : [\r\n              {\r\n                id: 'edit',\r\n                icon: Edit,\r\n                color: 'primary',\r\n                disabled: true,\r\n                onClick: () => handleEditClaim(claimsInformation),\r\n              },\r\n            ]),\r\n      ],\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.policyTitle'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.claimInformation.policyTitle')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.claimInformation.policyTitle'), isExpanded);\r\n      },\r\n      data: policyInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.underWritingGroups.tilteInformation'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.underWritingGroups.tilteInformation')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.underWritingGroups.tilteInformation'), isExpanded);\r\n      },\r\n      data: underWritingInfo,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.title'),\r\n      isExpanded: accordionsExpandStatus[utils.string.t('claims.lossInformation.title')],\r\n      handleExpanded: (isExpanded) => {\r\n        setAccordiansIsExpanded(utils.string.t('claims.lossInformation.title'), isExpanded);\r\n      },\r\n      data: lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      })),\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!claimsInformation) return null;\r\n\r\n  return <ClaimsPreviewDashboardView sections={sections} underWritingGroupColumns={underWritingGroupColumns} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}