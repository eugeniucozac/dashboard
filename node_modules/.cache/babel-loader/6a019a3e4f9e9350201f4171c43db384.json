{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; // app\n\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\nimport { showModal, selectLossQualifiers } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformation.prototype = {\n  claimantNames: PropTypes.array.isRequired,\n  claimForm: PropTypes.object,\n  interest: PropTypes.object.isRequired,\n  fields: PropTypes.object.isRequired,\n  complexityValues: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  policyInformation: PropTypes.object.isRequired,\n  isBordereauFlag: PropTypes.bool.isRequired,\n  isComplexFlag: PropTypes.bool.isRequired,\n  existingClaimInfo: PropTypes.object,\n  currencies: PropTypes.array.isRequired,\n  resetKey: PropTypes.number,\n  isBordereauChecked: PropTypes.bool.isRequired\n};\nexport default function RegisterClaimCardInformation(_ref) {\n  _s();\n\n  var claimantNames = _ref.claimantNames,\n      claimForm = _ref.claimForm,\n      interest = _ref.interest,\n      fields = _ref.fields,\n      complexityValues = _ref.complexityValues,\n      referralValues = _ref.referralValues,\n      policyInformation = _ref.policyInformation,\n      isBordereauFlag = _ref.isBordereauFlag,\n      isComplexFlag = _ref.isComplexFlag,\n      existingClaimInfo = _ref.existingClaimInfo,\n      currencies = _ref.currencies,\n      resetKey = _ref.resetKey,\n      isBordereauChecked = _ref.isBordereauChecked;\n  var dispatch = useDispatch();\n  var lossQualifiers = useSelector(selectLossQualifiers);\n\n  var handleSelectInterestLink = function handleSelectInterestLink() {\n    dispatch(showModal({\n      component: 'SELECT_INTEREST',\n      props: {\n        title: 'Select Interest',\n        fullWidth: true,\n        maxWidth: 'md',\n        disableAutoFocus: true\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(RegisterClaimCardInformationView, {\n    resetKey: resetKey,\n    fields: fields,\n    claimForm: claimForm,\n    interest: interest,\n    policyInformation: policyInformation,\n    claimantNames: claimantNames,\n    complexityValues: complexityValues,\n    referralValues: referralValues,\n    isBordereauFlag: isBordereauFlag,\n    isComplexFlag: isComplexFlag,\n    handleSelectInterestLink: handleSelectInterestLink,\n    existingClaimInfo: existingClaimInfo,\n    currencies: currencies,\n    lossQualifiers: lossQualifiers,\n    isBordereauChecked: isBordereauChecked\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterClaimCardInformation, \"o6tDrBoUgj0HUZwWZaTgyX8o3fM=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = RegisterClaimCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.js"],"names":["React","useDispatch","useSelector","PropTypes","RegisterClaimCardInformationView","showModal","selectLossQualifiers","RegisterClaimCardInformation","prototype","claimantNames","array","isRequired","claimForm","object","interest","fields","complexityValues","referralValues","policyInformation","isBordereauFlag","bool","isComplexFlag","existingClaimInfo","currencies","resetKey","number","isBordereauChecked","dispatch","lossQualifiers","handleSelectInterestLink","component","props","title","fullWidth","maxWidth","disableAutoFocus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\r\nimport { showModal, selectLossQualifiers } from 'stores';\r\n\r\nRegisterClaimCardInformation.prototype = {\r\n  claimantNames: PropTypes.array.isRequired,\r\n  claimForm: PropTypes.object,\r\n  interest: PropTypes.object.isRequired,\r\n  fields: PropTypes.object.isRequired,\r\n  complexityValues: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  policyInformation: PropTypes.object.isRequired,\r\n  isBordereauFlag: PropTypes.bool.isRequired,\r\n  isComplexFlag: PropTypes.bool.isRequired,\r\n  existingClaimInfo: PropTypes.object,\r\n  currencies: PropTypes.array.isRequired,\r\n  resetKey: PropTypes.number,\r\n  isBordereauChecked: PropTypes.bool.isRequired,\r\n};\r\nexport default function RegisterClaimCardInformation({\r\n  claimantNames,\r\n  claimForm,\r\n  interest,\r\n  fields,\r\n  complexityValues,\r\n  referralValues,\r\n  policyInformation,\r\n  isBordereauFlag,\r\n  isComplexFlag,\r\n  existingClaimInfo,\r\n  currencies,\r\n  resetKey,\r\n  isBordereauChecked,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n\r\n  const handleSelectInterestLink = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'SELECT_INTEREST',\r\n        props: {\r\n          title: 'Select Interest',\r\n          fullWidth: true,\r\n          maxWidth: 'md',\r\n          disableAutoFocus: true,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <RegisterClaimCardInformationView\r\n      resetKey={resetKey}\r\n      fields={fields}\r\n      claimForm={claimForm}\r\n      interest={interest}\r\n      policyInformation={policyInformation}\r\n      claimantNames={claimantNames}\r\n      complexityValues={complexityValues}\r\n      referralValues={referralValues}\r\n      isBordereauFlag={isBordereauFlag}\r\n      isComplexFlag={isComplexFlag}\r\n      handleSelectInterestLink={handleSelectInterestLink}\r\n      existingClaimInfo={existingClaimInfo}\r\n      currencies={currencies}\r\n      lossQualifiers={lossQualifiers}\r\n      isBordereauChecked={isBordereauChecked}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}