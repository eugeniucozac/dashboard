{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport toNumber from 'lodash/toNumber'; // app\n\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var patchPlacementEditLayer = function patchPlacementEditLayer(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.editLayer',\n      message: 'Data missing for PATCH request'\n    };\n    var layers = get(getState(), 'placement.selected.layers', []);\n    var layer = utils.policies.getById(layers, formData.layerId);\n\n    var getAmount = function getAmount(key, value) {\n      var prevValue = layer[key];\n      var isNewValue = Boolean(formData[key] || prevValue && !formData[key]);\n      return isNewValue ? formData[key] || 'empty' : null;\n    };\n\n    var amount = getAmount('amount', formData.amount);\n    var excess = getAmount('excess', formData.excess);\n    dispatch(patchPlacementEditLayerRequest(formData));\n    dispatch(addLoader('patchPlacementEditLayer'));\n\n    if (!formData || !formData.layerId || !formData.departmentId || !formData.businessTypeId) {\n      dispatch(patchPlacementEditLayerFailure(defaultError));\n      dispatch(enqueueNotification('notification.editLayer.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('patchPlacementEditLayer'));\n      return;\n    } // get the data for PATCH\n\n\n    var body = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, get(formData, 'currency') && {\n      isoCurrencyCode: formData.currency\n    }), get(formData, 'status') && {\n      statusId: formData.status === 'null' || formData.status === '' ? null : toNumber(formData.status)\n    }), get(formData, 'notes') && {\n      notes: formData.notes\n    }), amount && {\n      amount: formData.buydown ? '' : amount === 'empty' ? 0 : toNumber(amount)\n    }), excess && {\n      excess: formData.buydown ? '' : excess === 'empty' ? 0 : toNumber(excess)\n    });\n\n    return utils.api.patch({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placementlayer/\".concat(formData.layerId),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(patchPlacementEditLayerSuccess(data));\n      dispatch(enqueueNotification('notification.editLayer.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('patchPlacementEditLayer'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API patch error (placement.editLayer)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(patchPlacementEditLayerFailure(err));\n      dispatch(enqueueNotification('notification.editLayer.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('patchPlacementEditLayer'));\n      return err;\n    });\n  };\n};\nexport var patchPlacementEditLayerRequest = function patchPlacementEditLayerRequest(data) {\n  return {\n    type: 'PLACEMENT_LAYER_PATCH_REQUEST',\n    payload: data\n  };\n};\nexport var patchPlacementEditLayerSuccess = function patchPlacementEditLayerSuccess(data) {\n  return {\n    type: 'PLACEMENT_LAYER_PATCH_SUCCESS',\n    payload: data\n  };\n};\nexport var patchPlacementEditLayerFailure = function patchPlacementEditLayerFailure(error) {\n  return {\n    type: 'PLACEMENT_LAYER_PATCH_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.editPlacementLayer.js"],"names":["get","toNumber","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","patchPlacementEditLayer","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","layers","layer","policies","getById","layerId","getAmount","key","value","prevValue","isNewValue","Boolean","amount","excess","patchPlacementEditLayerRequest","departmentId","businessTypeId","patchPlacementEditLayerFailure","body","isoCurrencyCode","currency","statusId","status","notes","buydown","api","patch","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","patchPlacementEditLayerSuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport toNumber from 'lodash/toNumber';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const patchPlacementEditLayer = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.editLayer',\r\n    message: 'Data missing for PATCH request',\r\n  };\r\n\r\n  const layers = get(getState(), 'placement.selected.layers', []);\r\n  const layer = utils.policies.getById(layers, formData.layerId);\r\n\r\n  const getAmount = (key, value) => {\r\n    const prevValue = layer[key];\r\n    const isNewValue = Boolean(formData[key] || (prevValue && !formData[key]));\r\n\r\n    return isNewValue ? formData[key] || 'empty' : null;\r\n  };\r\n\r\n  const amount = getAmount('amount', formData.amount);\r\n  const excess = getAmount('excess', formData.excess);\r\n\r\n  dispatch(patchPlacementEditLayerRequest(formData));\r\n  dispatch(addLoader('patchPlacementEditLayer'));\r\n\r\n  if (!formData || !formData.layerId || !formData.departmentId || !formData.businessTypeId) {\r\n    dispatch(patchPlacementEditLayerFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.editLayer.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('patchPlacementEditLayer'));\r\n    return;\r\n  }\r\n\r\n  // get the data for PATCH\r\n  const body = {\r\n    ...(get(formData, 'currency') && { isoCurrencyCode: formData.currency }),\r\n    ...(get(formData, 'status') && { statusId: formData.status === 'null' || formData.status === '' ? null : toNumber(formData.status) }),\r\n    ...(get(formData, 'notes') && { notes: formData.notes }),\r\n    ...(amount && { amount: formData.buydown ? '' : amount === 'empty' ? 0 : toNumber(amount) }),\r\n    ...(excess && { excess: formData.buydown ? '' : excess === 'empty' ? 0 : toNumber(excess) }),\r\n  };\r\n\r\n  return utils.api\r\n    .patch({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placementlayer/${formData.layerId}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(patchPlacementEditLayerSuccess(data));\r\n      dispatch(enqueueNotification('notification.editLayer.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('patchPlacementEditLayer'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API patch error (placement.editLayer)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(patchPlacementEditLayerFailure(err));\r\n      dispatch(enqueueNotification('notification.editLayer.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('patchPlacementEditLayer'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const patchPlacementEditLayerRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_PATCH_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const patchPlacementEditLayerSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_PATCH_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const patchPlacementEditLayerFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_LAYER_PATCH_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}