{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var postBureauInsurerDetails = function postBureauInsurerDetails(payload) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.postBureauInsurerDetails'\n    };\n    dispatch(postBureauInsurerDetailsRequest(payload));\n    dispatch(addLoader('postBureauInsurerDetails'));\n\n    if (!utils.generic.isValidArray(payload, true)) {\n      dispatch(postBureauInsurerDetailsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing parameters'\n      })));\n      dispatch(enqueueNotification('notification.submission.fail', 'error'));\n      dispatch(removeLoader('postBureauInsurerDetails'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'issueDocs/saveIssueDocsDetails',\n      data: payload\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postBureauInsurerDetailsSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.postBureauInsurerDetails)'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      dispatch(postBureauInsurerDetailsFailure(error, {\n        file: 'stores/premiumProcessing.actions.postBureauInsurerDetails'\n      }));\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('postBureauInsurerDetails'));\n    });\n  };\n};\nexport var postBureauInsurerDetailsRequest = function postBureauInsurerDetailsRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_REQUEST',\n    payload: payload\n  };\n};\nexport var postBureauInsurerDetailsSuccess = function postBureauInsurerDetailsSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_SUCCESS',\n    payload: {\n      items: data\n    }\n  };\n};\nexport var postBureauInsurerDetailsFailure = function postBureauInsurerDetailsFailure(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postBureauInsurerDetails.js"],"names":["removeLoader","addLoader","enqueueNotification","authLogout","utils","postBureauInsurerDetails","payload","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","postBureauInsurerDetailsRequest","generic","isValidArray","postBureauInsurerDetailsFailure","message","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","postBureauInsurerDetailsSuccess","catch","error","handleError","handleUnauthorized","finally","type","items"],"mappings":";AAAA,SAASA,YAAT,EAAuBC,SAAvB,EAAkCC,mBAAlC,EAAuDC,UAAvD,QAAyE,QAAzE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMvEA,QAAQ,EAN+D;AAAA,QAEjEC,IAFiE,aAEzEC,IAFyE,CAEjED,IAFiE;AAAA,QAI/DE,QAJ+D,aAGzEC,MAHyE,CAIvEC,IAJuE,CAI/DF,QAJ+D;;AAQ3E,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAGAR,IAAAA,QAAQ,CAACS,+BAA+B,CAACV,OAAD,CAAhC,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,0BAAD,CAAV,CAAR;;AAEA,QAAI,CAACG,KAAK,CAACa,OAAN,CAAcC,YAAd,CAA2BZ,OAA3B,EAAoC,IAApC,CAAL,EAAgD;AAC9CC,MAAAA,QAAQ,CAACY,+BAA+B,iCAAML,YAAN;AAAoBM,QAAAA,OAAO,EAAE;AAA7B,SAAhC,CAAR;AACAb,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,8BAAD,EAAiC,OAAjC,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACP,YAAY,CAAC,0BAAD,CAAb,CAAR;AACA;AACD;;AAED,WAAOI,KAAK,CAACiB,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEd,IAAI,CAACe,WADR;AAEJb,MAAAA,QAAQ,EAAEA,QAAQ,CAACc,UAFf;AAGJC,MAAAA,IAAI,EAAE,gCAHF;AAIJC,MAAAA,IAAI,EAAErB;AAJF,KADD,EAOJsB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAczB,KAAK,CAACiB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU3B,KAAK,CAACiB,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdpB,MAAAA,QAAQ,CAAC0B,+BAA+B,CAACN,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAAhC,CAAR;AACA,aAAOA,IAAP;AACD,KAZI,EAaJO,KAbI,CAaE,UAACC,KAAD,EAAW;AAChB/B,MAAAA,KAAK,CAACiB,GAAN,CAAUe,WAAV,CAAsBD,KAAtB,kCAAkCrB,YAAlC;AAAgDM,QAAAA,OAAO,EAAE;AAAzD;AACAhB,MAAAA,KAAK,CAACiB,GAAN,CAAUgB,kBAAV,CAA6BF,KAA7B,EAAoC5B,QAApC,EAA8CJ,UAA9C;AACAI,MAAAA,QAAQ,CACNY,+BAA+B,CAACgB,KAAD,EAAQ;AACrCpB,QAAAA,IAAI,EAAE;AAD+B,OAAR,CADzB,CAAR;AAKA,aAAOoB,KAAP;AACD,KAtBI,EAuBJG,OAvBI,CAuBI,YAAM;AACb/B,MAAAA,QAAQ,CAACP,YAAY,CAAC,0BAAD,CAAb,CAAR;AACD,KAzBI,CAAP;AA0BD,GA/CuC;AAAA,CAAjC;AAiDP,OAAO,IAAMgB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACV,OAAD,EAAa;AAC1D,SAAO;AACLiC,IAAAA,IAAI,EAAE,gDADD;AAELjC,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAM2B,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACN,IAAD,EAAU;AACvD,SAAO;AACLY,IAAAA,IAAI,EAAE,gDADD;AAELjC,IAAAA,OAAO,EAAE;AAAEkC,MAAAA,KAAK,EAAEb;AAAT;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMR,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACgB,KAAD,EAAW;AACxD,SAAO;AACLI,IAAAA,IAAI,EAAE,gDADD;AAELjC,IAAAA,OAAO,EAAE6B;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { removeLoader, addLoader, enqueueNotification, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postBureauInsurerDetails = (payload) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.postBureauInsurerDetails',\r\n  };\r\n  dispatch(postBureauInsurerDetailsRequest(payload));\r\n  dispatch(addLoader('postBureauInsurerDetails'));\r\n\r\n  if (!utils.generic.isValidArray(payload, true)) {\r\n    dispatch(postBureauInsurerDetailsFailure({ ...defaultError, message: 'Missing parameters' }));\r\n    dispatch(enqueueNotification('notification.submission.fail', 'error'));\r\n    dispatch(removeLoader('postBureauInsurerDetails'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'issueDocs/saveIssueDocsDetails',\r\n      data: payload,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postBureauInsurerDetailsSuccess(data?.data));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.postBureauInsurerDetails)' });\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      dispatch(\r\n        postBureauInsurerDetailsFailure(error, {\r\n          file: 'stores/premiumProcessing.actions.postBureauInsurerDetails',\r\n        })\r\n      );\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postBureauInsurerDetails'));\r\n    });\r\n};\r\n\r\nexport const postBureauInsurerDetailsRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postBureauInsurerDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_SUCCESS',\r\n    payload: { items: data },\r\n  };\r\n};\r\n\r\nexport const postBureauInsurerDetailsFailure = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}