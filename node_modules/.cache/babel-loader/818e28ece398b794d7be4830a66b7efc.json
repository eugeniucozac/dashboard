{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport classnames from 'classnames'; //app\n\nimport styles from './ClaimsComplexityBasisTable.styles';\nimport * as utils from 'utils';\nimport { TableCell, TableHead, Pagination, Empty } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks'; //mui\n\nimport { makeStyles, Grid, TableContainer, Table, TableRow, TableBody, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsComplexityBasisTableView.prototypes = {\n  activeItem: PropTypes.object.isRequired,\n  colsArr: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  sortObj: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    handleSort: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    handleValueSelect: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsComplexityBasisTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeItem = _ref.activeItem,\n      colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsComplexityBasisTable'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handlers.handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(TableContainer, {\n      children: [/*#__PURE__*/_jsxDEV(Table, {\n        \"data-testid\": \"complexity-basis-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort,\n          nestedClasses: {\n            tableHead: classes.tableHead\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: utils.generic.isValidArray(rows, true) && rows.map(function (complexityValue) {\n            var _classesRow;\n\n            var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, (activeItem === null || activeItem === void 0 ? void 0 : activeItem.complexityRulesID) === (complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.complexityRulesID)), _classesRow);\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: (complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.isComplex) ? function () {\n                return handlers.handleValueSelect(complexityValue);\n              } : function () {},\n              className: (complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.isComplex) ? classnames(classesRow) : classes.tableRowDisable,\n              hover: true,\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"row-col-\".concat(complexityValue.complexityRulesValue),\n                className: classes.tableCell,\n                children: complexityValue.complexityRulesValue\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 53,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"row-col-\".concat(complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forCompany),\n                children: [\" \", complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forCompany]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 56,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"row-col-\".concat(complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forDivision),\n                children: [\" \", complexityValue === null || complexityValue === void 0 ? void 0 : complexityValue.forDivision, \" \"]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, _this)]\n            }, complexityValue.complexityRulesID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 47,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this), !utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(Empty, {\n          title: utils.string.t('claims.noMatchFound'),\n          text: utils.string.t('claims.noMatchDetails'),\n          icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 21\n          }, this),\n          padding: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            page: get(paginationObj, 'obj.page'),\n            count: get(paginationObj, 'obj.rowsTotal'),\n            rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n            onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n            onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsComplexityBasisTableView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = ClaimsComplexityBasisTableView;\nClaimsComplexityBasisTableView.displayName = \"ClaimsComplexityBasisTableView\";\nClaimsComplexityBasisTableView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexityBasisTableView\",\n  \"props\": {\n    \"rows\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.view.js\"] = {\n    name: \"ClaimsComplexityBasisTableView\",\n    docgenInfo: ClaimsComplexityBasisTableView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexityBasisTable\\\\ClaimsComplexityBasisTable.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityBasisTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityBasisTable/ClaimsComplexityBasisTable.view.js"],"names":["React","PropTypes","get","classnames","styles","utils","TableCell","TableHead","Pagination","Empty","usePagination","useSort","makeStyles","Grid","TableContainer","Table","TableRow","TableBody","Box","ClaimsComplexityBasisTableView","prototypes","activeItem","object","isRequired","colsArr","array","rows","sortObj","pagination","handlers","shape","handleSort","func","handleChangePage","handleChangeRowsPerPage","handleValueSelect","cols","sort","classes","name","paginationObj","tableHead","generic","isValidArray","map","complexityValue","classesRow","row","rowSelected","complexityRulesID","isComplex","tableRowDisable","complexityRulesValue","tableCell","forCompany","forDivision","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport classnames from 'classnames';\r\n\r\n//app\r\nimport styles from './ClaimsComplexityBasisTable.styles';\r\nimport * as utils from 'utils';\r\nimport { TableCell, TableHead, Pagination, Empty } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Grid, TableContainer, Table, TableRow, TableBody, Box } from '@material-ui/core';\r\n\r\nClaimsComplexityBasisTableView.prototypes = {\r\n  activeItem: PropTypes.object.isRequired,\r\n  colsArr: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  sortObj: PropTypes.object.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleSort: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    handleValueSelect: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\nexport function ClaimsComplexityBasisTableView({ activeItem, cols: colsArr, rows = [], sort: sortObj, pagination, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsComplexityBasisTable' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers.handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\r\n\r\n  return (\r\n    <Box>\r\n      <TableContainer>\r\n        <Table data-testid=\"complexity-basis-table\">\r\n          <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n          <TableBody>\r\n            {utils.generic.isValidArray(rows, true) &&\r\n              rows.map((complexityValue) => {\r\n                const classesRow = {\r\n                  [classes.row]: true,\r\n                  [classes.rowSelected]: activeItem?.complexityRulesID === complexityValue?.complexityRulesID,\r\n                };\r\n                return (\r\n                  <TableRow\r\n                    key={complexityValue.complexityRulesID}\r\n                    onClick={complexityValue?.isComplex ? () => handlers.handleValueSelect(complexityValue) : () => {}}\r\n                    className={complexityValue?.isComplex ? classnames(classesRow) : classes.tableRowDisable}\r\n                    hover\r\n                  >\r\n                    <TableCell data-testid={`row-col-${complexityValue.complexityRulesValue}`} className={classes.tableCell}>\r\n                      {complexityValue.complexityRulesValue}\r\n                    </TableCell>\r\n                    <TableCell data-testid={`row-col-${complexityValue?.forCompany}`}> {complexityValue?.forCompany}</TableCell>\r\n                    <TableCell data-testid={`row-col-${complexityValue?.forDivision}`}> {complexityValue?.forDivision} </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n        {!utils.generic.isValidArray(rows, true) && (\r\n          <Box>\r\n            <Empty\r\n              title={utils.string.t('claims.noMatchFound')}\r\n              text={utils.string.t('claims.noMatchDetails')}\r\n              icon={<IconSearchFile />}\r\n              padding\r\n            />\r\n          </Box>\r\n        )}\r\n        <Grid container>\r\n          <Grid item xs={12}>\r\n            <Pagination\r\n              page={get(paginationObj, 'obj.page')}\r\n              count={get(paginationObj, 'obj.rowsTotal')}\r\n              rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n              onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n              onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </TableContainer>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}