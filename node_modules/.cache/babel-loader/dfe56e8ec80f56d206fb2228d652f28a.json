{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityManagementInsured\\\\ClaimsComplexityManagementInsured.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport get from 'lodash/get'; //app\n\nimport * as utils from 'utils';\nimport styles from './ClaimsComplexityManagementInsured.styles';\nimport { Button, FormCheckbox, TableCell, Overflow, TableHead, Search, Pagination, Empty } from 'components'; //mui\n\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function ClaimsComplexityManagementInsuredView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      control = _ref.control,\n      register = _ref.register,\n      watch = _ref.watch,\n      handleSort = _ref.handleSort,\n      handleSearch = _ref.handleSearch,\n      handleReset = _ref.handleReset,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      complexPolicyFlag = _ref.complexPolicyFlag,\n      selectedInsuredItemsHandler = _ref.selectedInsuredItemsHandler,\n      enableDisableFlag = _ref.enableDisableFlag,\n      claimsSelectedInsured = _ref.claimsSelectedInsured,\n      postSaveComplexInsuredHandler = _ref.postSaveComplexInsuredHandler,\n      resetKey = _ref.resetKey;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsComplexityManagementInsured'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\n  var fields = rows.items && rows.items.length && rows.items.map(function (field) {\n    return {\n      name: field.attributeValue,\n      type: 'checkbox',\n      disabled: complexPolicyFlag ? field.complexityFlag : false,\n      defaultValue: complexPolicyFlag ? field.complexityFlag || enableDisableFlag(field.attributeValue) : false\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        className: classes.searchWrapper,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Enter Insured\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 55,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Search, {\n            text: \"\",\n            placeholder: \"\",\n            minChars: 4,\n            nestedClasses: {\n              root: classes.search\n            },\n            handlers: {\n              search: handleSearch,\n              reset: handleReset\n            }\n          }, resetKey, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            children: \"Enter minimum 4 characters\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          ml: 2,\n          className: classes.tableWrapper,\n          children: rows.items ? rows.items.length ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Overflow, {\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"data-testid\": \"claims-table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: cols,\n                  sorting: sort,\n                  nestedClasses: {\n                    tableHead: classes.tableHead\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  \"data-testid\": \"claims-list\",\n                  children: rows.items.map(function (insured) {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        compact: true,\n                        \"data-testid\": \"row-col-\".concat(insured.attributeValue),\n                        children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, insured.attributeValue)), {}, {\n                          control: control,\n                          register: register,\n                          watch: watch,\n                          muiComponentProps: {\n                            onChange: function onChange(id, checked) {\n                              return complexPolicyFlag ? selectedInsuredItemsHandler(id, checked, insured) : null;\n                            }\n                          }\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 84,\n                          columnNumber: 35\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 83,\n                        columnNumber: 33\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        \"data-testid\": \"row-col-\".concat(insured.insured),\n                        children: insured.insured\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 95,\n                        columnNumber: 33\n                      }, _this)]\n                    }, insured.attributeValue, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 82,\n                      columnNumber: 31\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 21\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(Pagination, {\n                  page: get(paginationObj, 'obj.page'),\n                  count: get(paginationObj, 'obj.rowsTotal'),\n                  rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n                  onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n                  onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 104,\n                  columnNumber: 25\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    mt: 3,\n                    display: \"flex\",\n                    justifyContent: \"flex-end\",\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      text: utils.string.t('claims.complexityRulesManagementDetails.saveAsComplex'),\n                      onClick: function onClick() {\n                        return postSaveComplexInsuredHandler();\n                      },\n                      disabled: (claimsSelectedInsured === null || claimsSelectedInsured === void 0 ? void 0 : claimsSelectedInsured.length) === 0 ? true : false,\n                      color: \"primary\",\n                      size: \"medium\",\n                      nestedClasses: {\n                        btn: classes.actionButton\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 113,\n                      columnNumber: 29\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 112,\n                    columnNumber: 27\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 111,\n                  columnNumber: 25\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 103,\n                columnNumber: 23\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 102,\n              columnNumber: 21\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Empty, {\n              title: utils.string.t('claims.noMatchFound'),\n              text: utils.string.t('claims.noMatchDetails'),\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 29\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 128,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 19\n          }, this) : /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Empty, {\n              title: utils.string.t('claims.noMatchFound'),\n              text: utils.string.t('claims.noMatchDetails'),\n              icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 141,\n                columnNumber: 27\n              }, this),\n              padding: true\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 71,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsComplexityManagementInsuredView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = ClaimsComplexityManagementInsuredView;\nClaimsComplexityManagementInsuredView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsComplexityManagementInsuredView\",\n  \"props\": {\n    \"rows\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsComplexityManagementInsured\\\\ClaimsComplexityManagementInsured.view.js\"] = {\n    name: \"ClaimsComplexityManagementInsuredView\",\n    docgenInfo: ClaimsComplexityManagementInsuredView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsComplexityManagementInsured\\\\ClaimsComplexityManagementInsured.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityManagementInsuredView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityManagementInsured/ClaimsComplexityManagementInsured.view.js"],"names":["React","get","utils","styles","Button","FormCheckbox","TableCell","Overflow","TableHead","Search","Pagination","Empty","makeStyles","Grid","Table","TableRow","TableBody","Typography","Box","usePagination","useSort","ClaimsComplexityManagementInsuredView","colsArr","cols","rows","sortObj","sort","pagination","control","register","watch","handleSort","handleSearch","handleReset","handleChangePage","handleChangeRowsPerPage","complexPolicyFlag","selectedInsuredItemsHandler","enableDisableFlag","claimsSelectedInsured","postSaveComplexInsuredHandler","resetKey","classes","name","paginationObj","fields","items","length","map","field","attributeValue","type","disabled","complexityFlag","defaultValue","searchWrapper","root","search","reset","tableWrapper","tableHead","insured","form","getFieldProps","onChange","id","checked","string","t","btn","actionButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\n\r\nimport styles from './ClaimsComplexityManagementInsured.styles';\r\nimport { Button, FormCheckbox, TableCell, Overflow, TableHead, Search, Pagination, Empty } from 'components';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\r\n\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\nexport function ClaimsComplexityManagementInsuredView({\r\n  cols: colsArr,\r\n  rows = [],\r\n  sort: sortObj,\r\n  pagination,\r\n  control,\r\n  register,\r\n  watch,\r\n  handleSort,\r\n  handleSearch,\r\n  handleReset,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  complexPolicyFlag,\r\n  selectedInsuredItemsHandler,\r\n  enableDisableFlag,\r\n  claimsSelectedInsured,\r\n  postSaveComplexInsuredHandler,\r\n  resetKey,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsComplexityManagementInsured' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  const fields =\r\n    rows.items &&\r\n    rows.items.length &&\r\n    rows.items.map((field) => ({\r\n      name: field.attributeValue,\r\n      type: 'checkbox',\r\n      disabled: complexPolicyFlag ? field.complexityFlag : false,\r\n      defaultValue: complexPolicyFlag ? field.complexityFlag || enableDisableFlag(field.attributeValue) : false,\r\n    }));\r\n\r\n  return (\r\n    <>\r\n      <Grid container>\r\n        <Grid item xs={12} className={classes.searchWrapper}>\r\n          <Box>\r\n            <Typography variant=\"h5\">Enter Insured</Typography>\r\n            <Search\r\n              key={resetKey}\r\n              text=\"\"\r\n              placeholder=\"\"\r\n              minChars={4}\r\n              nestedClasses={{ root: classes.search }}\r\n              handlers={{\r\n                search: handleSearch,\r\n                reset: handleReset,\r\n              }}\r\n            />\r\n            <Typography variant=\"h5\">Enter minimum 4 characters</Typography>\r\n          </Box>\r\n        </Grid>\r\n        {\r\n          <Grid item xs={12}>\r\n            <Box ml={2} className={classes.tableWrapper}>\r\n              {rows.items ? (\r\n                rows.items.length ? (\r\n                  <>\r\n                    <Overflow>\r\n                      <Table data-testid=\"claims-table\">\r\n                        <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                        <TableBody data-testid=\"claims-list\">\r\n                          {rows.items.map((insured) => {\r\n                            return (\r\n                              <TableRow key={insured.attributeValue} hover>\r\n                                <TableCell compact data-testid={`row-col-${insured.attributeValue}`}>\r\n                                  <FormCheckbox\r\n                                    {...utils.form.getFieldProps(fields, insured.attributeValue)}\r\n                                    control={control}\r\n                                    register={register}\r\n                                    watch={watch}\r\n                                    muiComponentProps={{\r\n                                      onChange: (id, checked) =>\r\n                                        complexPolicyFlag ? selectedInsuredItemsHandler(id, checked, insured) : null,\r\n                                    }}\r\n                                  />\r\n                                </TableCell>\r\n                                <TableCell data-testid={`row-col-${insured.insured}`}>{insured.insured}</TableCell>\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                        </TableBody>\r\n                      </Table>\r\n                    </Overflow>\r\n                    <Grid container>\r\n                      <Grid item xs={12}>\r\n                        <Pagination\r\n                          page={get(paginationObj, 'obj.page')}\r\n                          count={get(paginationObj, 'obj.rowsTotal')}\r\n                          rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                          onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                          onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n                        />\r\n                        <Grid item xs={12}>\r\n                          <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n                            <Button\r\n                              text={utils.string.t('claims.complexityRulesManagementDetails.saveAsComplex')}\r\n                              onClick={() => postSaveComplexInsuredHandler()}\r\n                              disabled={claimsSelectedInsured?.length === 0 ? true : false}\r\n                              color=\"primary\"\r\n                              size=\"medium\"\r\n                              nestedClasses={{ btn: classes.actionButton }}\r\n                            />\r\n                          </Box>\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                  </>\r\n                ) : (\r\n                  <Grid item xs={12}>\r\n                    <Empty\r\n                      title={utils.string.t('claims.noMatchFound')}\r\n                      text={utils.string.t('claims.noMatchDetails')}\r\n                      icon={<IconSearchFile />}\r\n                      padding\r\n                    />\r\n                  </Grid>\r\n                )\r\n              ) : (\r\n                <Grid item xs={12}>\r\n                  <Empty\r\n                    title={utils.string.t('claims.noMatchFound')}\r\n                    text={utils.string.t('claims.noMatchDetails')}\r\n                    icon={<IconSearchFile />}\r\n                    padding\r\n                  />\r\n                </Grid>\r\n              )}\r\n            </Box>\r\n          </Grid>\r\n        }\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}