{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormDateFormik\\\\FormDateFormik.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport { Field as FormikField } from 'formik';\nimport { TextField } from 'formik-material-ui';\nimport omit from 'lodash/omit'; // app\n\nimport styles from './FormDateFormik.styles';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { DatePicker } from '@material-ui/pickers';\nimport { withStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var FormDateFormik = /*#__PURE__*/function (_PureComponent) {\n  _inherits(FormDateFormik, _PureComponent);\n\n  var _super = _createSuper(FormDateFormik);\n\n  function FormDateFormik() {\n    var _this;\n\n    _classCallCheck(this, FormDateFormik);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _defineProperty(_assertThisInitialized(_this), \"DatePickerField\", function (_ref) {\n      var _classnames, _classnames2;\n\n      var field = _ref.field,\n          form = _ref.form,\n          other = _objectWithoutProperties(_ref, [\"field\", \"form\"]);\n\n      var _this$props = _this.props,\n          label = _this$props.label,\n          hint = _this$props.hint,\n          placeholder = _this$props.placeholder,\n          plainText = _this$props.plainText,\n          muiComponentProps = _this$props.muiComponentProps,\n          muiPickerProps = _this$props.muiPickerProps,\n          handleUpdate = _this$props.handleUpdate,\n          nestedClasses = _this$props.nestedClasses,\n          classes = _this$props.classes;\n      var value = field.value || null;\n      var variant = plainText ? undefined : 'outlined';\n      var currentError = form.touched[field.name] && form.errors[field.name];\n      var pickerVariant = muiPickerProps.variant || 'dialog';\n\n      var pickerProps = _objectSpread(_objectSpread(_objectSpread({}, omit(muiPickerProps, ['clearable', 'showTodayButton'])), pickerVariant === 'dialog' && {\n        clearable: muiPickerProps.clearable\n      }), pickerVariant === 'dialog' && {\n        showTodayButton: muiPickerProps.showTodayButton\n      });\n\n      return /*#__PURE__*/_jsxDEV(DatePicker, _objectSpread(_objectSpread(_objectSpread({\n        id: field.name,\n        name: field.name,\n        value: value,\n        label: label,\n        helperText: currentError || hint,\n        emptyLabel: typeof placeholder === 'string' ? placeholder : placeholder ? utils.string.t('app.selectDate') : undefined,\n        autoOk: true,\n        inputVariant: variant,\n        onChange: function onChange(value) {\n          return handleUpdate(field.name, value);\n        }\n      }, muiComponentProps), pickerProps), {}, {\n        format: muiPickerProps.format || config.ui.format.date.numeric,\n        error: Boolean(currentError),\n        InputProps: {\n          classes: {\n            root: classnames((_classnames = {}, _defineProperty(_classnames, classes.placeholder, !Boolean(field.value)), _defineProperty(_classnames, classes.dateInputWrapper, plainText), _defineProperty(_classnames, nestedClasses.root, plainText && Boolean(nestedClasses.root)), _classnames)),\n            input: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.dateInput, plainText), _defineProperty(_classnames2, nestedClasses.input, plainText && Boolean(nestedClasses.input)), _classnames2))\n          }\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    });\n\n    return _this;\n  }\n\n  _createClass(FormDateFormik, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props2 = this.props,\n          name = _this$props2.name,\n          type = _this$props2.type,\n          label = _this$props2.label,\n          placeholder = _this$props2.placeholder,\n          hint = _this$props2.hint,\n          muiComponentProps = _this$props2.muiComponentProps,\n          classes = _this$props2.classes;\n\n      if (type === 'datepicker') {\n        return /*#__PURE__*/_jsxDEV(FormikField, {\n          name: name,\n          component: this.DatePickerField\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 88,\n          columnNumber: 14\n        }, this);\n      }\n\n      return /*#__PURE__*/_jsxDEV(FormikField, _objectSpread(_objectSpread({\n        type: \"date\",\n        id: name,\n        name: name,\n        label: label,\n        placeholder: typeof placeholder === 'string' ? placeholder : undefined,\n        helperText: hint\n      }, muiComponentProps), {}, {\n        variant: muiComponentProps.variant || 'outlined',\n        margin: muiComponentProps.margin || 'normal',\n        fullWidth: typeof muiComponentProps.fullWidth !== 'undefined' ? muiComponentProps.fullWidth : true,\n        component: TextField,\n        InputLabelProps: _objectSpread({\n          shrink: true,\n          classes: {\n            root: classes.label\n          }\n        }, muiComponentProps.InputLabelProps)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return FormDateFormik;\n}(PureComponent);\nFormDateFormik.displayName = \"FormDateFormik\";\n\n_defineProperty(FormDateFormik, \"propTypes\", {\n  name: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['date', 'datepicker']).isRequired,\n  label: PropTypes.string,\n  hint: PropTypes.string,\n  placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\n  plainText: PropTypes.bool,\n  muiComponentProps: PropTypes.object,\n  muiPickerProps: PropTypes.object,\n  handleUpdate: PropTypes.func,\n  nestedClasses: PropTypes.object\n});\n\n_defineProperty(FormDateFormik, \"defaultProps\", {\n  placeholder: true,\n  muiComponentProps: {},\n  nestedClasses: {}\n});\n\nFormDateFormik.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"DatePickerField\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ field, form, ...other }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"FormDateFormik\",\n  \"props\": {\n    \"placeholder\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"bool\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"muiComponentProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'date'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'datepicker'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"plainText\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"muiPickerProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleUpdate\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default compose(withStyles(styles))(FormDateFormik);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormDateFormik\\\\FormDateFormik.js\"] = {\n    name: \"FormDateFormik\",\n    docgenInfo: FormDateFormik.__docgenInfo,\n    path: \"src\\\\components\\\\FormDateFormik\\\\FormDateFormik.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormDateFormik/FormDateFormik.js"],"names":["React","PureComponent","PropTypes","compose","classnames","Field","FormikField","TextField","omit","styles","utils","config","DatePicker","withStyles","FormDateFormik","field","form","other","props","label","hint","placeholder","plainText","muiComponentProps","muiPickerProps","handleUpdate","nestedClasses","classes","value","variant","undefined","currentError","touched","name","errors","pickerVariant","pickerProps","clearable","showTodayButton","string","t","format","ui","date","numeric","Boolean","root","dateInputWrapper","input","dateInput","type","DatePickerField","margin","fullWidth","shrink","InputLabelProps","isRequired","oneOf","oneOfType","bool","object","func"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport { Field as FormikField } from 'formik';\r\nimport { TextField } from 'formik-material-ui';\r\nimport omit from 'lodash/omit';\r\n\r\n// app\r\nimport styles from './FormDateFormik.styles';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nexport class FormDateFormik extends PureComponent {\r\n  static propTypes = {\r\n    name: PropTypes.string.isRequired,\r\n    type: PropTypes.oneOf(['date', 'datepicker']).isRequired,\r\n    label: PropTypes.string,\r\n    hint: PropTypes.string,\r\n    placeholder: PropTypes.oneOfType([PropTypes.string, PropTypes.bool]),\r\n    plainText: PropTypes.bool,\r\n    muiComponentProps: PropTypes.object,\r\n    muiPickerProps: PropTypes.object,\r\n    handleUpdate: PropTypes.func,\r\n    nestedClasses: PropTypes.object,\r\n  };\r\n\r\n  static defaultProps = {\r\n    placeholder: true,\r\n    muiComponentProps: {},\r\n    nestedClasses: {},\r\n  };\r\n\r\n  DatePickerField = ({ field, form, ...other }) => {\r\n    const { label, hint, placeholder, plainText, muiComponentProps, muiPickerProps, handleUpdate, nestedClasses, classes } = this.props;\r\n\r\n    const value = field.value || null;\r\n    const variant = plainText ? undefined : 'outlined';\r\n    const currentError = form.touched[field.name] && form.errors[field.name];\r\n    const pickerVariant = muiPickerProps.variant || 'dialog';\r\n\r\n    const pickerProps = {\r\n      ...omit(muiPickerProps, ['clearable', 'showTodayButton']),\r\n      ...(pickerVariant === 'dialog' && { clearable: muiPickerProps.clearable }),\r\n      ...(pickerVariant === 'dialog' && { showTodayButton: muiPickerProps.showTodayButton }),\r\n    };\r\n\r\n    return (\r\n      <DatePicker\r\n        id={field.name}\r\n        name={field.name}\r\n        value={value}\r\n        label={label}\r\n        helperText={currentError || hint}\r\n        emptyLabel={typeof placeholder === 'string' ? placeholder : placeholder ? utils.string.t('app.selectDate') : undefined}\r\n        autoOk\r\n        inputVariant={variant}\r\n        onChange={(value) => handleUpdate(field.name, value)}\r\n        {...muiComponentProps}\r\n        {...pickerProps}\r\n        format={muiPickerProps.format || config.ui.format.date.numeric}\r\n        error={Boolean(currentError)}\r\n        InputProps={{\r\n          classes: {\r\n            root: classnames({\r\n              [classes.placeholder]: !Boolean(field.value),\r\n              [classes.dateInputWrapper]: plainText,\r\n              [nestedClasses.root]: plainText && Boolean(nestedClasses.root),\r\n            }),\r\n            input: classnames({\r\n              [classes.dateInput]: plainText,\r\n              [nestedClasses.input]: plainText && Boolean(nestedClasses.input),\r\n            }),\r\n          },\r\n        }}\r\n      />\r\n    );\r\n  };\r\n\r\n  render() {\r\n    const { name, type, label, placeholder, hint, muiComponentProps, classes } = this.props;\r\n\r\n    if (type === 'datepicker') {\r\n      return <FormikField name={name} component={this.DatePickerField} />;\r\n    }\r\n\r\n    return (\r\n      <FormikField\r\n        type=\"date\"\r\n        id={name}\r\n        name={name}\r\n        label={label}\r\n        placeholder={typeof placeholder === 'string' ? placeholder : undefined}\r\n        helperText={hint}\r\n        {...muiComponentProps}\r\n        variant={muiComponentProps.variant || 'outlined'}\r\n        margin={muiComponentProps.margin || 'normal'}\r\n        fullWidth={typeof muiComponentProps.fullWidth !== 'undefined' ? muiComponentProps.fullWidth : true}\r\n        component={TextField}\r\n        InputLabelProps={{\r\n          shrink: true,\r\n          classes: {\r\n            root: classes.label,\r\n          },\r\n          ...muiComponentProps.InputLabelProps,\r\n        }}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(FormDateFormik);\r\n"]},"metadata":{},"sourceType":"module"}