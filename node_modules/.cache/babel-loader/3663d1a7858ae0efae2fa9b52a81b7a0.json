{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router'; //app\n\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\nimport config from 'config';\nimport { LossDetail, LossAction, ClaimsUploadViewSearchDocs } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl } from 'stores'; //mui\n\nimport { Box, Divider } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLossDashboardView.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  lossSelected: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  handleSelectTab: PropTypes.func\n};\nexport function LossDashboardView(_ref) {\n  _s();\n\n  var tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      lossSelected = _ref.lossSelected,\n      breadcrumbs = _ref.breadcrumbs,\n      handleSelectTab = _ref.handleSelectTab;\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\n\n  var editLossHandler = function editLossHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n    var checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n      var _constants$STATUS_CLA;\n\n      return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA === void 0 ? void 0 : _constants$STATUS_CLA.toUpperCase());\n    })) : false;\n    dispatch(setClaimsStepperControl(0));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n        loss: {\n          isNextDiabled: true,\n          isClaimSubmitted: checkClaimStatus\n        }\n      }\n    });\n  };\n\n  var addClaimHandler = function addClaimHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n    dispatch(setClaimsStepperControl(1));\n    var checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n      var _constants$STATUS_CLA2;\n\n      return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA2 = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA2 === void 0 ? void 0 : _constants$STATUS_CLA2.toUpperCase());\n    })) : false;\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n        loss: {\n          isNextDiabled: false,\n          isClaimSubmitted: checkClaimStatus\n        }\n      }\n    });\n  };\n\n  var createRFIHandler = function createRFIHandler(lossSelected) {};\n\n  var rowActions = [{\n    id: 'editLoss',\n    label: utils.string.t('loss.popOverFunctionMenusList.editLoss'),\n    callback: function callback() {\n      return editLossHandler(lossSelected);\n    }\n  }, {\n    id: 'Create Claim',\n    label: utils.string.t('loss.popOverFunctionMenusList.createClaim'),\n    callback: function callback() {\n      return addClaimHandler(lossSelected);\n    }\n  }, {\n    id: 'Create RFI',\n    label: utils.string.t('loss.popOverFunctionMenusList.createRFI'),\n    callback: function callback() {\n      return createRFIHandler(lossSelected);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"LossDashboard\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: utils.string.t('loss.text', {\n            claimRef: 1234\n          }),\n          icon: DescriptionIcon,\n          testid: \"claim-ref-header\",\n          children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n            variant: \"outlined\",\n            id: \"loss-functions\",\n            size: \"small\",\n            color: \"primary\",\n            text: utils.string.t('loss.popOverFunction'),\n            isButton: true,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            items: rowActions\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handleSelectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 11\n        }, this), selectedTab === 'lossDetail' && /*#__PURE__*/_jsxDEV(LossDetail, {\n          lossObj: lossSelected\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 44\n        }, this), selectedTab === 'lossAction' && /*#__PURE__*/_jsxDEV(LossAction, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 104,\n          columnNumber: 44\n        }, this), selectedTab === 'lossDocs' && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n            refData: lossSelected,\n            refIdName: constants.DMS_CONTEXT_LOSS_ID,\n            dmsContext: constants.DMS_CONTEXT_LOSS,\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LossDashboardView, \"0yXXefaIwkJ8L8hEu1eDmuLr6Iw=\", false, function () {\n  return [useDispatch, useHistory, useSelector];\n});\n\n_c = LossDashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.view.js"],"names":["React","useDispatch","useSelector","PropTypes","useHistory","Breadcrumb","Layout","Tabs","PopoverMenu","SectionHeader","config","LossDetail","LossAction","ClaimsUploadViewSearchDocs","utils","constants","selectClaimAssociateWithLoss","setClaimsStepperControl","Box","Divider","DescriptionIcon","LossDashboardView","propTypes","tabs","array","isRequired","selectedTab","string","lossSelected","object","breadcrumbs","arrayOf","shape","name","label","link","handleSelectTab","func","dispatch","history","claimsAssociateWithLoss","editLossHandler","lossRef","checkClaimStatus","generic","isValidArray","Boolean","find","claim","claimStatus","STATUS_CLAIMS_DRAFT","toUpperCase","push","pathname","routes","claimsFNOL","newLoss","state","redirectUrl","loss","isNextDiabled","isClaimSubmitted","addClaimHandler","createRFIHandler","rowActions","id","t","callback","claimRef","vertical","horizontal","tabName","DMS_CONTEXT_LOSS_ID","DMS_CONTEXT_LOSS","DMS_DOCUMENT_TYPE_SECTION_KEYS","claims"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\n//app\r\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\r\nimport config from 'config';\r\nimport { LossDetail, LossAction, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl } from 'stores';\r\n\r\n//mui\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nLossDashboardView.propTypes = {\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  lossSelected: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  handleSelectTab: PropTypes.func,\r\n};\r\n\r\nexport function LossDashboardView({ tabs, selectedTab, lossSelected, breadcrumbs, handleSelectTab }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\r\n  \r\n  const editLossHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase())) : false;\r\n    dispatch(setClaimsStepperControl(0));\r\n    history.push({pathname:`${config.routes.claimsFNOL.newLoss}`,state:{redirectUrl:`${config.routes.claimsFNOL.loss}/${lossRef}`,loss:{isNextDiabled:true, isClaimSubmitted: checkClaimStatus}}});\r\n  };\r\n\r\n  const addClaimHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    dispatch(setClaimsStepperControl(1));\r\n    const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase())) : false;\r\n    history.push({pathname:`${config.routes.claimsFNOL.newLoss}`,state:{redirectUrl:`${config.routes.claimsFNOL.loss}/${lossRef}`,loss:{isNextDiabled:false, isClaimSubmitted: checkClaimStatus}}});\r\n  };\r\n\r\n  const createRFIHandler = (lossSelected) => {};\r\n  \r\n  const rowActions = [\r\n    {\r\n      id: 'editLoss',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.editLoss'),\r\n      callback: () => editLossHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'Create Claim',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.createClaim'),\r\n      callback: () => addClaimHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'Create RFI',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.createRFI'),\r\n      callback: () => createRFIHandler(lossSelected),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n      <Layout testid=\"LossDashboard\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={utils.string.t('loss.text', {\r\n              claimRef: 1234,\r\n            })}\r\n            icon={DescriptionIcon}\r\n            testid=\"claim-ref-header\"\r\n          >\r\n            <PopoverMenu\r\n              variant=\"outlined\"\r\n              id=\"loss-functions\"\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              text={utils.string.t('loss.popOverFunction')}\r\n              isButton\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              items={rowActions}\r\n            />\r\n          </SectionHeader>\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n          {selectedTab === 'lossDetail' && <LossDetail lossObj={lossSelected} />}\r\n          {selectedTab === 'lossAction' && <LossAction />}\r\n          {selectedTab === 'lossDocs' && (\r\n            <Box mt={2}>\r\n              <ClaimsUploadViewSearchDocs\r\n                refData={lossSelected}\r\n                refIdName={constants.DMS_CONTEXT_LOSS_ID}\r\n                dmsContext={constants.DMS_CONTEXT_LOSS}\r\n                documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claims}\r\n              />\r\n            </Box>\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}