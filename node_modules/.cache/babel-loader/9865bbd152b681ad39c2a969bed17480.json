{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\MarketingMudmap\\\\MarketingMudmap.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './MarketingMudmap.styles';\nimport { Button, ChartKey, Empty, Mudmap, Restricted, StylePicker, Tabs, Tooltip, Translate } from 'components';\nimport { ReactComponent as IconDataChart } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-data-chart.svg\";\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, useTheme, AppBar, Box, Grid, Switch, Toolbar, Typography } from '@material-ui/core';\nimport FullScreenIcon from '@material-ui/icons/Fullscreen';\nimport FullScreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMarketingMudmapView.propTypes = {\n  mudmap: PropTypes.shape({\n    layers: PropTypes.array.isRequired,\n    fullscreen: PropTypes.bool.isRequired,\n    capacities: PropTypes.array.isRequired,\n    dimensions: PropTypes.shape({\n      w: PropTypes.number.isRequired,\n      h: PropTypes.number.isRequired\n    }).isRequired,\n    visibleToCobrokers: PropTypes.bool.isRequired\n  }).isRequired,\n  capacity: PropTypes.object,\n  tabs: PropTypes.array,\n  selectedTab: PropTypes.number,\n  handlers: PropTypes.shape({\n    toggleTab: PropTypes.func.isRequired,\n    toggleMudmapFullscreen: PropTypes.func.isRequired,\n    toggleMudmapForCobrokers: PropTypes.func.isRequired,\n    reorderMudmap: PropTypes.func.isRequired,\n    openColorPicker: PropTypes.func.isRequired,\n    changeColorPicker: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function MarketingMudmapView(_ref) {\n  _s();\n\n  var mudmap = _ref.mudmap,\n      capacity = _ref.capacity,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'MarketingMudmap'\n  })();\n  var theme = useTheme();\n  var hasMudmap = utils.generic.isValidArray(mudmap.layers, true);\n  var currentGroup = Object.values(tabs).find(function (t) {\n    return t.value === selectedTab;\n  }) || {}; // these values are based of CSS properties\n  // they might need to be updated if CSS styles change\n\n  var padding = 32;\n  var margin = 32;\n  var header = theme.mixins.header.height;\n  var buttons = 24;\n  var mudmapRatio = mudmap.fullscreen ? (mudmap.dimensions.h - header - buttons - padding - margin) / (mudmap.dimensions.w - padding) : 0.45;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"placement-marketing-mudmap\",\n    children: [/*#__PURE__*/_jsxDEV(Tabs, {\n      tabs: tabs,\n      onChange: handlers.toggleTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n      include: mudmap.visibleToCobrokers ? [constants.ROLE_BROKER, constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER] : [constants.ROLE_BROKER],\n      children: [hasMudmap && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [mudmap.fullscreen && /*#__PURE__*/_jsxDEV(AppBar, {\n          elevation: 1,\n          \"data-testid\": \"header-mudmap\",\n          classes: {\n            root: classes.appBar\n          },\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            className: classes.mudmapHeader,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 4,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h1\",\n                  className: classes.mudmapTitle,\n                  children: currentGroup.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 74,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                container: true,\n                style: {\n                  justifyContent: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: FullScreenExitIcon,\n                  size: \"medium\",\n                  text: utils.string.t('app.fullscreenExit'),\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handlers.toggleMudmapFullscreen,\n                  \"data-testid\": \"exit-mudmap-fullscreen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 79,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          className: classnames(_defineProperty({}, classes.mudmapFullscreen, mudmap.fullscreen)),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"flex-start\",\n                spacing: 1,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: utils.string.t(mudmap.fullscreen ? 'app.fullscreenExit' : 'app.fullscreen'),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: mudmap.fullscreen ? FullScreenExitIcon : FullScreenIcon,\n                      size: \"xsmall\",\n                      variant: \"outlined\",\n                      onClick: handlers.toggleMudmapFullscreen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 100,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 99,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 98,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n                  include: [constants.ROLE_BROKER],\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Box, {\n                      display: \"flex\",\n                      alignItems: \"center\",\n                      className: classes.toggleCobrokers,\n                      children: [/*#__PURE__*/_jsxDEV(Box, {\n                        ml: 1,\n                        mr: 0.5,\n                        children: /*#__PURE__*/_jsxDEV(Translate, {\n                          variant: \"body2\",\n                          label: \"mudmap.\".concat(mudmap.visibleToCobrokers ? 'visibleCobrokers' : 'hiddenCobrokers')\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 113,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 112,\n                        columnNumber: 27\n                      }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                        color: \"primary\",\n                        size: \"small\",\n                        checked: mudmap.visibleToCobrokers,\n                        onClick: handlers.toggleMudmapForCobrokers(!mudmap.visibleToCobrokers)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 27\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 111,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 110,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 109,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                position: 'relative',\n                width: 160\n              },\n              children: /*#__PURE__*/_jsxDEV(\"div\", {\n                style: {\n                  position: 'absolute',\n                  right: 4,\n                  zIndex: 2\n                },\n                children: [/*#__PURE__*/_jsxDEV(ChartKey, {\n                  isCollapsed: true,\n                  allowCollapse: true,\n                  size: \"xsmall\",\n                  avatarSize: 18,\n                  items: mudmap.capacities.map(function (c) {\n                    return {\n                      id: c.id,\n                      color: c.color,\n                      label: c.name\n                    };\n                  }),\n                  title: utils.string.t('mudmap.capacityType_plural'),\n                  onAvatarClick: handlers.openColorPicker,\n                  nestedClasses: {\n                    root: classes.capacity\n                  },\n                  testid: \"capacity-types\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(StylePicker, {\n                  el: capacity.target,\n                  item: capacity.item,\n                  onUpdate: handlers.changeColorPicker\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 151,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 130,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            mt: 4,\n            mb: mudmap.fullscreen ? 0 : 3,\n            \"data-testid\": \"mudmap-container\",\n            children: /*#__PURE__*/_jsxDEV(Mudmap, {\n              items: mudmap.layers,\n              capacities: mudmap.capacities,\n              fullscreen: mudmap.fullscreen,\n              ratio: mudmapRatio,\n              type: \"written\",\n              handlers: {\n                reorderMudmap: handlers.reorderMudmap\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true), !hasMudmap && /*#__PURE__*/_jsxDEV(Empty, {\n        title: utils.string.t('placement.marketing.mudmapNotAvailable'),\n        text: utils.string.t('placement.marketing.mudmapNotAvailableHint'),\n        icon: /*#__PURE__*/_jsxDEV(IconDataChart, {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 176,\n          columnNumber: 19\n        }, this),\n        padding: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 173,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 59,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarketingMudmapView, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = MarketingMudmapView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketingMudmapView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/MarketingMudmap/MarketingMudmap.view.js"],"names":["React","PropTypes","classnames","styles","Button","ChartKey","Empty","Mudmap","Restricted","StylePicker","Tabs","Tooltip","Translate","constants","utils","makeStyles","useTheme","AppBar","Box","Grid","Switch","Toolbar","Typography","FullScreenIcon","FullScreenExitIcon","MarketingMudmapView","propTypes","mudmap","shape","layers","array","isRequired","fullscreen","bool","capacities","dimensions","w","number","h","visibleToCobrokers","capacity","object","tabs","selectedTab","handlers","toggleTab","func","toggleMudmapFullscreen","toggleMudmapForCobrokers","reorderMudmap","openColorPicker","changeColorPicker","classes","name","theme","hasMudmap","generic","isValidArray","currentGroup","Object","values","find","t","value","padding","margin","header","mixins","height","buttons","mudmapRatio","ROLE_BROKER","ROLE_COBROKER","ROLE_UNDERWRITER","root","appBar","mudmapHeader","mudmapTitle","label","justifyContent","string","mudmapFullscreen","toggleCobrokers","position","width","right","zIndex","map","c","id","color","target","item"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './MarketingMudmap.styles';\r\nimport { Button, ChartKey, Empty, Mudmap, Restricted, StylePicker, Tabs, Tooltip, Translate } from 'components';\r\nimport { ReactComponent as IconDataChart } from '../../assets/svg/line-icon-data-chart.svg';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, useTheme, AppBar, Box, Grid, Switch, Toolbar, Typography } from '@material-ui/core';\r\nimport FullScreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullScreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nMarketingMudmapView.propTypes = {\r\n  mudmap: PropTypes.shape({\r\n    layers: PropTypes.array.isRequired,\r\n    fullscreen: PropTypes.bool.isRequired,\r\n    capacities: PropTypes.array.isRequired,\r\n    dimensions: PropTypes.shape({\r\n      w: PropTypes.number.isRequired,\r\n      h: PropTypes.number.isRequired,\r\n    }).isRequired,\r\n    visibleToCobrokers: PropTypes.bool.isRequired,\r\n  }).isRequired,\r\n  capacity: PropTypes.object,\r\n  tabs: PropTypes.array,\r\n  selectedTab: PropTypes.number,\r\n  handlers: PropTypes.shape({\r\n    toggleTab: PropTypes.func.isRequired,\r\n    toggleMudmapFullscreen: PropTypes.func.isRequired,\r\n    toggleMudmapForCobrokers: PropTypes.func.isRequired,\r\n    reorderMudmap: PropTypes.func.isRequired,\r\n    openColorPicker: PropTypes.func.isRequired,\r\n    changeColorPicker: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function MarketingMudmapView({ mudmap, capacity, tabs, selectedTab, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'MarketingMudmap' })();\r\n  const theme = useTheme();\r\n\r\n  const hasMudmap = utils.generic.isValidArray(mudmap.layers, true);\r\n  const currentGroup = Object.values(tabs).find((t) => t.value === selectedTab) || {};\r\n\r\n  // these values are based of CSS properties\r\n  // they might need to be updated if CSS styles change\r\n  const padding = 32;\r\n  const margin = 32;\r\n  const header = theme.mixins.header.height;\r\n  const buttons = 24;\r\n  const mudmapRatio = mudmap.fullscreen\r\n    ? (mudmap.dimensions.h - header - buttons - padding - margin) / (mudmap.dimensions.w - padding)\r\n    : 0.45;\r\n\r\n  return (\r\n    <Box data-testid=\"placement-marketing-mudmap\">\r\n      <Tabs tabs={tabs} onChange={handlers.toggleTab} />\r\n\r\n      <Restricted\r\n        include={\r\n          mudmap.visibleToCobrokers ? [constants.ROLE_BROKER, constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER] : [constants.ROLE_BROKER]\r\n        }\r\n      >\r\n        {hasMudmap && (\r\n          <>\r\n            {mudmap.fullscreen && (\r\n              <AppBar elevation={1} data-testid=\"header-mudmap\" classes={{ root: classes.appBar }}>\r\n                <Toolbar className={classes.mudmapHeader}>\r\n                  <Grid container spacing={4} justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Grid item xs={8}>\r\n                      <Typography variant=\"h1\" className={classes.mudmapTitle}>\r\n                        {currentGroup.label}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} container style={{ justifyContent: 'flex-end' }}>\r\n                      <Button\r\n                        icon={FullScreenExitIcon}\r\n                        size=\"medium\"\r\n                        text={utils.string.t('app.fullscreenExit')}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handlers.toggleMudmapFullscreen}\r\n                        data-testid=\"exit-mudmap-fullscreen\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Toolbar>\r\n              </AppBar>\r\n            )}\r\n\r\n            <Box mt={2} className={classnames({ [classes.mudmapFullscreen]: mudmap.fullscreen })}>\r\n              <Grid container alignItems=\"flex-start\" justifyContent=\"space-between\" spacing={1}>\r\n                <Grid item>\r\n                  <Grid container alignItems=\"flex-start\" spacing={1}>\r\n                    <Grid item>\r\n                      <Tooltip title={utils.string.t(mudmap.fullscreen ? 'app.fullscreenExit' : 'app.fullscreen')}>\r\n                        <Button\r\n                          icon={mudmap.fullscreen ? FullScreenExitIcon : FullScreenIcon}\r\n                          size=\"xsmall\"\r\n                          variant=\"outlined\"\r\n                          onClick={handlers.toggleMudmapFullscreen}\r\n                        />\r\n                      </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Restricted include={[constants.ROLE_BROKER]}>\r\n                      <Grid item>\r\n                        <Box display=\"flex\" alignItems=\"center\" className={classes.toggleCobrokers}>\r\n                          <Box ml={1} mr={0.5}>\r\n                            <Translate\r\n                              variant=\"body2\"\r\n                              label={`mudmap.${mudmap.visibleToCobrokers ? 'visibleCobrokers' : 'hiddenCobrokers'}`}\r\n                            />\r\n                          </Box>\r\n                          <Switch\r\n                            color=\"primary\"\r\n                            size=\"small\"\r\n                            checked={mudmap.visibleToCobrokers}\r\n                            onClick={handlers.toggleMudmapForCobrokers(!mudmap.visibleToCobrokers)}\r\n                          />\r\n                        </Box>\r\n                      </Grid>\r\n                    </Restricted>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item style={{ position: 'relative', width: 160 }}>\r\n                  <div style={{ position: 'absolute', right: 4, zIndex: 2 }}>\r\n                    <ChartKey\r\n                      isCollapsed\r\n                      allowCollapse\r\n                      size=\"xsmall\"\r\n                      avatarSize={18}\r\n                      items={mudmap.capacities.map((c) => {\r\n                        return {\r\n                          id: c.id,\r\n                          color: c.color,\r\n                          label: c.name,\r\n                        };\r\n                      })}\r\n                      title={utils.string.t('mudmap.capacityType_plural')}\r\n                      onAvatarClick={handlers.openColorPicker}\r\n                      nestedClasses={{\r\n                        root: classes.capacity,\r\n                      }}\r\n                      testid=\"capacity-types\"\r\n                    />\r\n                    <StylePicker el={capacity.target} item={capacity.item} onUpdate={handlers.changeColorPicker} />\r\n                  </div>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Box mt={4} mb={mudmap.fullscreen ? 0 : 3} data-testid=\"mudmap-container\">\r\n                <Mudmap\r\n                  items={mudmap.layers}\r\n                  capacities={mudmap.capacities}\r\n                  fullscreen={mudmap.fullscreen}\r\n                  ratio={mudmapRatio}\r\n                  type=\"written\"\r\n                  handlers={{\r\n                    reorderMudmap: handlers.reorderMudmap,\r\n                  }}\r\n                />\r\n              </Box>\r\n            </Box>\r\n          </>\r\n        )}\r\n\r\n        {!hasMudmap && (\r\n          <Empty\r\n            title={utils.string.t('placement.marketing.mudmapNotAvailable')}\r\n            text={utils.string.t('placement.marketing.mudmapNotAvailableHint')}\r\n            icon={<IconDataChart />}\r\n            padding\r\n          />\r\n        )}\r\n      </Restricted>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}