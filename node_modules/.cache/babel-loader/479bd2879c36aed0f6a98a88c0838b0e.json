{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DmsWidget\\\\DmsFnolWidget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty'; //app\n\nimport { TreeView } from 'components';\nimport { selectDmsDocDetails, selectClaimData, selectLossId, selectClaimAssociateWithLoss, getClaimsAssociateWithLoss, getViewTableDocuments, selectDmsWidgetClaimDocs } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DmsWidget() {\n  _s();\n\n  var _associatedClaims$map, _data$children;\n\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var claimData = useSelector(selectClaimData);\n  var associatedClaims = useSelector(selectClaimAssociateWithLoss);\n  var dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setFilteredData = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchQuery = _useState4[0],\n      setSearchQuery = _useState4[1];\n\n  var currentLossDetailId = get(lossInformation, 'lossDetailID');\n  var currentLossRef = get(lossInformation, 'lossRef');\n  var lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\n  var claimsDocDetails = get(savedDmsDocList, 'claimsDocDetails');\n  var currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\n  useEffect(function () {\n    if (currentLossDetailId) {\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\n    }\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimRefsArray = associatedClaims === null || associatedClaims === void 0 ? void 0 : (_associatedClaims$map = associatedClaims.map(function (item) {\n    return item.claimReference;\n  })) === null || _associatedClaims$map === void 0 ? void 0 : _associatedClaims$map.filter(function (claimref) {\n    return claimref !== currentClaimRef;\n  });\n\n  var createSortedDocs = function createSortedDocs(docs) {\n    return docs === null || docs === void 0 ? void 0 : docs.sort(function (doc1, doc2) {\n      return new Date(doc1 === null || doc1 === void 0 ? void 0 : doc1.createdDate) - new Date(doc2 === null || doc2 === void 0 ? void 0 : doc2.createdDate);\n    });\n  };\n\n  var lossDocuments = !utils.generic.isInvalidOrEmptyArray(lossDocDetails) ? createSortedDocs(lossDocDetails === null || lossDocDetails === void 0 ? void 0 : lossDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  })) : [{\n    label: utils.string.t('dms.widget.loss.noDocMessage')\n  }];\n  var currentClaimDocuments = createSortedDocs(claimsDocDetails === null || claimsDocDetails === void 0 ? void 0 : claimsDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  }));\n  var openedChild = [].concat(_toConsumableArray(lossDocuments), _toConsumableArray(currentClaimRef ? [{\n    id: 'child1',\n    label: currentClaimRef ? \"\".concat(utils.string.t('claims.manageDocumentLabels.claim'), \" \").concat(currentClaimRef) : utils.string.t('dms.widget.claim.noDocMessage'),\n    labelInfo: '',\n    children: currentClaimDocuments\n  }] : [])); //claimRefsArray?.[0]?.claimId --> need to know why this condition exactly\n\n  var closedChild = claimRefsArray.length > 0 ? claimRefsArray === null || claimRefsArray === void 0 ? void 0 : claimRefsArray.map(function (item) {\n    var _dmsWidgetClaimDocs$i;\n\n    return {\n      id: item,\n      label: item ? \"\".concat(utils.string.t('claims.manageDocumentLabels.claim'), \" \").concat(item) : '',\n      labelInfo: '',\n      children: createSortedDocs(dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item]) ? (_dmsWidgetClaimDocs$i = dmsWidgetClaimDocs[item]) === null || _dmsWidgetClaimDocs$i === void 0 ? void 0 : _dmsWidgetClaimDocs$i.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc), {}, {\n          id: doc.documentId,\n          label: doc.documentName,\n          labelInfo: utils.string.t('format.date', {\n            value: {\n              date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n              format: config.ui.format.date.text\n            }\n          })\n        });\n      }) : [{\n        label: utils.string.t('dms.widget.claim.noDocMessage')\n      }])\n    };\n  }) : [];\n  var rootChildren = [].concat(_toConsumableArray(openedChild), _toConsumableArray(closedChild));\n  var data = {\n    id: 'root',\n    label: currentLossRef ? \"\".concat(utils.string.t('claims.manageDocumentLabels.loss'), \" \").concat(currentLossRef) : '',\n    labelInfo: '',\n    children: rootChildren\n  };\n  var arr = [];\n  data === null || data === void 0 ? void 0 : (_data$children = data.children) === null || _data$children === void 0 ? void 0 : _data$children.forEach(function (child) {\n    if (child.labelInfo) {\n      arr.push(child);\n    } else {\n      var _child$children;\n\n      child === null || child === void 0 ? void 0 : (_child$children = child.children) === null || _child$children === void 0 ? void 0 : _child$children.forEach(function (child) {\n        if (child) {\n          arr.push(child);\n        }\n      });\n    }\n  });\n\n  var onClickAccordion = function onClickAccordion(_, nodeIds) {\n    if (nodeIds !== 'root' && nodeIds !== 'child1' && !dmsWidgetClaimDocs.hasOwnProperty(nodeIds)) {\n      dispatch(getViewTableDocuments({\n        dmsWidgetReqParams: [{\n          referenceId: nodeIds,\n          sectionType: 'Claim'\n        }],\n        isFromDmsWidget: true\n      }));\n    }\n  };\n\n  var submitSearch = function submitSearch(query) {\n    var filteredData = createSortedDocs(arr === null || arr === void 0 ? void 0 : arr.filter(function (_ref) {\n      var _ref2;\n\n      var documentName = _ref.documentName,\n          labelInfo = _ref.labelInfo;\n      return !isEmpty((_ref2 = [documentName, labelInfo]) === null || _ref2 === void 0 ? void 0 : _ref2.find(function (item) {\n        var _item$toLowerCase;\n\n        return item === null || item === void 0 ? void 0 : (_item$toLowerCase = item.toLowerCase()) === null || _item$toLowerCase === void 0 ? void 0 : _item$toLowerCase.includes(query === null || query === void 0 ? void 0 : query.toLowerCase());\n      }));\n    }));\n    setSearchQuery(query);\n    setFilteredData(filteredData);\n  };\n\n  var resetSearch = function resetSearch() {\n    setFilteredData([]);\n    setSearchQuery('');\n  };\n\n  var rowClick = function rowClick(e, doc) {\n    e.preventDefault();\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    treeData: data,\n    rootRef: currentLossRef,\n    widgetTitle: utils.string.t('dms.view.documents.title'),\n    columns: [{\n      header: utils.string.t('dms.upload.file'),\n      flex: '0.8',\n      ml: '8px'\n    }, {\n      header: utils.string.t('dms.upload.uploadedOn'),\n      flex: '0.375'\n    }],\n    defaultExpanded: ['child1', 'root'],\n    filteredData: filteredData,\n    searchQuery: searchQuery,\n    handlers: {\n      submitSearch: submitSearch,\n      resetSearch: resetSearch,\n      rowClick: rowClick,\n      onClickAccordion: onClickAccordion\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsWidget, \"be2lupMSsXXHo84+/ZHa+2KsC4Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DmsWidget;\nDmsWidget.displayName = \"DmsWidget\";\nDmsWidget.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DmsWidget\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\DmsWidget\\\\DmsFnolWidget.js\"] = {\n    name: \"DmsWidget\",\n    docgenInfo: DmsWidget.__docgenInfo,\n    path: \"src\\\\modules\\\\DmsWidget\\\\DmsFnolWidget.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsWidget\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DmsWidget/DmsFnolWidget.js"],"names":["React","useEffect","useState","useSelector","useDispatch","get","isEmpty","TreeView","selectDmsDocDetails","selectClaimData","selectLossId","selectClaimAssociateWithLoss","getClaimsAssociateWithLoss","getViewTableDocuments","selectDmsWidgetClaimDocs","config","utils","DmsWidget","dispatch","lossInformation","savedDmsDocList","claimData","associatedClaims","dmsWidgetClaimDocs","filteredData","setFilteredData","searchQuery","setSearchQuery","currentLossDetailId","currentLossRef","lossDocDetails","claimsDocDetails","currentClaimRef","claimRefsArray","map","item","claimReference","filter","claimref","createSortedDocs","docs","sort","doc1","doc2","Date","createdDate","lossDocuments","generic","isInvalidOrEmptyArray","doc","id","documentId","label","documentName","labelInfo","string","t","value","date","format","ui","text","currentClaimDocuments","openedChild","children","closedChild","length","hasOwnProperty","rootChildren","data","arr","forEach","child","push","onClickAccordion","_","nodeIds","dmsWidgetReqParams","referenceId","sectionType","isFromDmsWidget","submitSearch","query","find","toLowerCase","includes","resetSearch","rowClick","e","preventDefault","dms","dmsDocumentViewLauncher","header","flex","ml"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n//app\r\nimport { TreeView } from 'components';\r\nimport {\r\n  selectDmsDocDetails,\r\n  selectClaimData,\r\n  selectLossId,\r\n  selectClaimAssociateWithLoss,\r\n  getClaimsAssociateWithLoss,\r\n  getViewTableDocuments,\r\n  selectDmsWidgetClaimDocs,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nexport default function DmsWidget() {\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const claimData = useSelector(selectClaimData);\r\n  const associatedClaims = useSelector(selectClaimAssociateWithLoss);\r\n  const dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const currentLossDetailId = get(lossInformation, 'lossDetailID');\r\n  const currentLossRef = get(lossInformation, 'lossRef');\r\n  const lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\r\n  const claimsDocDetails = get(savedDmsDocList, 'claimsDocDetails');\r\n  const currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\r\n\r\n  useEffect(() => {\r\n    if (currentLossDetailId) {\r\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\r\n    }\r\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimRefsArray = associatedClaims?.map((item) => item.claimReference)?.filter((claimref) => claimref !== currentClaimRef);\r\n\r\n  const createSortedDocs = (docs) => docs?.sort((doc1, doc2) => new Date(doc1?.createdDate) - new Date(doc2?.createdDate));\r\n\r\n  const lossDocuments = !utils.generic.isInvalidOrEmptyArray(lossDocDetails)\r\n    ? createSortedDocs(\r\n        lossDocDetails?.map((doc) => {\r\n          return {\r\n            ...doc,\r\n            id: doc.documentId,\r\n            label: doc.documentName,\r\n            labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n          };\r\n        })\r\n      )\r\n    : [{ label: utils.string.t('dms.widget.loss.noDocMessage') }];\r\n\r\n  const currentClaimDocuments = createSortedDocs(\r\n    claimsDocDetails?.map((doc) => {\r\n      return {\r\n        ...doc,\r\n        id: doc.documentId,\r\n        label: doc.documentName,\r\n        labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n      };\r\n    })\r\n  );\r\n\r\n  const openedChild = [\r\n    ...lossDocuments,\r\n    ...(currentClaimRef\r\n      ? [\r\n          {\r\n            id: 'child1',\r\n            label: currentClaimRef\r\n              ? `${utils.string.t('claims.manageDocumentLabels.claim')} ${currentClaimRef}`\r\n              : utils.string.t('dms.widget.claim.noDocMessage'),\r\n            labelInfo: '',\r\n            children: currentClaimDocuments,\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  //claimRefsArray?.[0]?.claimId --> need to know why this condition exactly\r\n  const closedChild =\r\n    claimRefsArray.length > 0\r\n      ? claimRefsArray?.map((item) => {\r\n          return {\r\n            id: item,\r\n            label: item ? `${utils.string.t('claims.manageDocumentLabels.claim')} ${item}` : '',\r\n            labelInfo: '',\r\n            children: createSortedDocs(\r\n              dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item])\r\n                ? dmsWidgetClaimDocs[item]?.map((doc) => {\r\n                    return {\r\n                      ...doc,\r\n                      id: doc.documentId,\r\n                      label: doc.documentName,\r\n                      labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n                    };\r\n                  })\r\n                : [{ label: utils.string.t('dms.widget.claim.noDocMessage') }]\r\n            ),\r\n          };\r\n        })\r\n      : [];\r\n\r\n  const rootChildren = [...openedChild, ...closedChild];\r\n\r\n  const data = {\r\n    id: 'root',\r\n    label: currentLossRef ? `${utils.string.t('claims.manageDocumentLabels.loss')} ${currentLossRef}` : '',\r\n    labelInfo: '',\r\n    children: rootChildren,\r\n  };\r\n\r\n  let arr = [];\r\n  data?.children?.forEach((child) => {\r\n    if (child.labelInfo) {\r\n      arr.push(child);\r\n    } else {\r\n      child?.children?.forEach((child) => {\r\n        if (child) {\r\n          arr.push(child);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const onClickAccordion = (_, nodeIds) => {\r\n    if (nodeIds !== 'root' && nodeIds !== 'child1' && !dmsWidgetClaimDocs.hasOwnProperty(nodeIds)) {\r\n      dispatch(getViewTableDocuments({ dmsWidgetReqParams: [{ referenceId: nodeIds, sectionType: 'Claim' }], isFromDmsWidget: true }));\r\n    }\r\n  };\r\n\r\n  const submitSearch = (query) => {\r\n    const filteredData = createSortedDocs(\r\n      arr?.filter(\r\n        ({ documentName, labelInfo }) =>\r\n          !isEmpty([documentName, labelInfo]?.find((item) => item?.toLowerCase()?.includes(query?.toLowerCase())))\r\n      )\r\n    );\r\n    setSearchQuery(query);\r\n    setFilteredData(filteredData);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setFilteredData([]);\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const rowClick = (e, doc) => {\r\n    e.preventDefault();\r\n    const { documentId, documentName } = doc;\r\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\r\n  };\r\n\r\n  return (\r\n    <TreeView\r\n      treeData={data}\r\n      rootRef={currentLossRef}\r\n      widgetTitle={utils.string.t('dms.view.documents.title')}\r\n      columns={[\r\n        { header: utils.string.t('dms.upload.file'), flex: '0.8', ml: '8px' },\r\n        { header: utils.string.t('dms.upload.uploadedOn'), flex: '0.375' },\r\n      ]}\r\n      defaultExpanded={['child1', 'root']}\r\n      filteredData={filteredData}\r\n      searchQuery={searchQuery}\r\n      handlers={{\r\n        submitSearch,\r\n        resetSearch,\r\n        rowClick,\r\n        onClickAccordion,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}