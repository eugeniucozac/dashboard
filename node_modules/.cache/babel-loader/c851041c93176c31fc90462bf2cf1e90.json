{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { ProductsAdminInsuredsView } from './ProductsAdminInsureds.view';\nimport { showModal, getRiskCountries, getInsureds, getReinsureds, getClients, selectRiskCountries, selectPartyInsuredsSorted, selectPartyInsuredsPagination, selectPartyReinsuredsSorted, selectPartyReInsuredsPagination, selectPartyClientsSorted } from 'stores';\nimport { productAdminSchema } from 'schemas';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductsAdminInsureds(_ref) {\n  _s();\n\n  var _ref$reInsured = _ref.reInsured,\n      reInsured = _ref$reInsured === void 0 ? false : _ref$reInsured;\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      schema = _useState2[0],\n      setSchema = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var insureds = useSelector(reInsured ? selectPartyReinsuredsSorted : selectPartyInsuredsSorted);\n  var insuredsLoading = useSelector(function (state) {\n    return state.party.insureds.loading;\n  });\n  var insuredsPagination = useSelector(reInsured ? selectPartyReInsuredsPagination : selectPartyInsuredsPagination);\n  var countries = useSelector(selectRiskCountries);\n  var clients = useSelector(selectPartyClientsSorted);\n  var addLabel = reInsured ? 'products.admin.reInsureds.add' : 'products.admin.insureds.add';\n  var editLabel = reInsured ? 'products.admin.reInsureds.edit' : 'products.admin.insureds.edit';\n  var getData = reInsured ? getReinsureds : getInsureds;\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      }, field.options && {\n        options: field.options.map(function (option) {\n          return _objectSpread(_objectSpread({}, option), {}, {\n            label: utils.string.t(option.label)\n          });\n        })\n      });\n    });\n  };\n\n  useEffect(function () {\n    dispatch(getRiskCountries());\n    dispatch(getClients({\n      size: 1000\n    }));\n    dispatch(getData({\n      size: config.ui.pagination[\"default\"]\n    }));\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!clients) return;\n    setOptions(_objectSpread(_objectSpread({}, options), {}, {\n      clients: clients\n    }));\n  }, [clients] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!insureds) return;\n\n    var _productAdminSchema$g = productAdminSchema.getSchema('insureds'),\n        fields = _productAdminSchema$g.fields,\n        rest = _objectWithoutProperties(_productAdminSchema$g, [\"fields\"]);\n\n    setSchema(_objectSpread(_objectSpread({}, rest), {}, {\n      fields: hydrateLabels(fields),\n      items: insureds,\n      pagination: insuredsPagination\n    }));\n  }, [insureds] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getData({\n      page: newPage + 1\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getData({\n      size: rowsPerPage\n    }));\n  };\n\n  var handleAddInsured = function handleAddInsured(fields) {\n    return function (event) {\n      dispatch(showModal({\n        component: 'ADD_PRODUCTS_INSURED',\n        props: {\n          title: addLabel,\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            fields: fields,\n            reInsured: reInsured\n          }\n        }\n      }));\n    };\n  };\n\n  var handleEditInsured = function handleEditInsured(data) {\n    var fields = data.fields,\n        item = data.item;\n    var address = item.address;\n\n    var insuredItem = _objectSpread(_objectSpread({}, item), address);\n\n    dispatch(showModal({\n      component: 'EDIT_PRODUCTS_INSURED',\n      props: {\n        title: editLabel,\n        fullWidth: true,\n        maxWidth: 'lg',\n        componentProps: {\n          fields: fields,\n          item: insuredItem,\n          id: insuredItem === null || insuredItem === void 0 ? void 0 : insuredItem.id,\n          reInsured: reInsured\n        }\n      }\n    }));\n  };\n\n  var popoverActions = [{\n    id: 'products-admin-edit-insured',\n    label: editLabel,\n    callback: function callback(data) {\n      return handleEditInsured(data);\n    }\n  }];\n  var pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage); // abort\n\n  if (!schema || !schema.items) return null;\n  return /*#__PURE__*/_jsxDEV(ProductsAdminInsuredsView, {\n    schema: schema,\n    loading: insuredsLoading,\n    countries: countries,\n    options: options,\n    pagination: pagination.obj,\n    buttonLabel: addLabel,\n    reInsured: reInsured,\n    popoverActions: popoverActions,\n    handlers: {\n      addInsured: handleAddInsured,\n      changePage: pagination.handlers.handleChangePage,\n      changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsAdminInsureds, \"lgCy0GhMlojmnOMi9IJ0M8Bc5jw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = ProductsAdminInsureds;\nProductsAdminInsureds.displayName = \"ProductsAdminInsureds\";\nProductsAdminInsureds.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProductsAdminInsureds\",\n  \"props\": {\n    \"reInsured\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.js\"] = {\n    name: \"ProductsAdminInsureds\",\n    docgenInfo: ProductsAdminInsureds.__docgenInfo,\n    path: \"src\\\\modules\\\\ProductsAdminInsureds\\\\ProductsAdminInsureds.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminInsureds\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminInsureds/ProductsAdminInsureds.js"],"names":["React","useEffect","useState","useSelector","useDispatch","ProductsAdminInsuredsView","showModal","getRiskCountries","getInsureds","getReinsureds","getClients","selectRiskCountries","selectPartyInsuredsSorted","selectPartyInsuredsPagination","selectPartyReinsuredsSorted","selectPartyReInsuredsPagination","selectPartyClientsSorted","productAdminSchema","usePagination","utils","config","ProductsAdminInsureds","reInsured","dispatch","schema","setSchema","options","setOptions","insureds","insuredsLoading","state","party","loading","insuredsPagination","countries","clients","addLabel","editLabel","getData","hydrateLabels","fields","map","field","label","string","t","option","size","ui","pagination","getSchema","rest","items","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleAddInsured","event","component","props","title","fullWidth","maxWidth","componentProps","handleEditInsured","data","item","address","insuredItem","id","popoverActions","callback","obj","addInsured","changePage","handlers","changeRowsPerPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { ProductsAdminInsuredsView } from './ProductsAdminInsureds.view';\r\nimport {\r\n  showModal,\r\n  getRiskCountries,\r\n  getInsureds,\r\n  getReinsureds,\r\n  getClients,\r\n  selectRiskCountries,\r\n  selectPartyInsuredsSorted,\r\n  selectPartyInsuredsPagination,\r\n  selectPartyReinsuredsSorted,\r\n  selectPartyReInsuredsPagination,\r\n  selectPartyClientsSorted,\r\n} from 'stores';\r\nimport { productAdminSchema } from 'schemas';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function ProductsAdminInsureds({ reInsured = false }) {\r\n  const dispatch = useDispatch();\r\n  const [schema, setSchema] = useState({});\r\n  const [options, setOptions] = useState({});\r\n  const insureds = useSelector(reInsured ? selectPartyReinsuredsSorted : selectPartyInsuredsSorted);\r\n  const insuredsLoading = useSelector((state) => state.party.insureds.loading);\r\n  const insuredsPagination = useSelector(reInsured ? selectPartyReInsuredsPagination : selectPartyInsuredsPagination);\r\n  const countries = useSelector(selectRiskCountries);\r\n  const clients = useSelector(selectPartyClientsSorted);\r\n\r\n  const addLabel = reInsured ? 'products.admin.reInsureds.add' : 'products.admin.insureds.add';\r\n  const editLabel = reInsured ? 'products.admin.reInsureds.edit' : 'products.admin.insureds.edit';\r\n  const getData = reInsured ? getReinsureds : getInsureds;\r\n\r\n  const hydrateLabels = (fields) =>\r\n    fields.map((field) => {\r\n      return {\r\n        ...field,\r\n        label: utils.string.t(field.label),\r\n        ...(field.options && { options: field.options.map((option) => ({ ...option, label: utils.string.t(option.label) })) }),\r\n      };\r\n    });\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getRiskCountries());\r\n      dispatch(getClients({ size: 1000 }));\r\n      dispatch(getData({ size: config.ui.pagination.default }));\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!clients) return;\r\n      setOptions({ ...options, clients });\r\n    },\r\n    [clients] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!insureds) return;\r\n\r\n      const { fields, ...rest } = productAdminSchema.getSchema('insureds');\r\n\r\n      setSchema({\r\n        ...rest,\r\n        fields: hydrateLabels(fields),\r\n        items: insureds,\r\n        pagination: insuredsPagination,\r\n      });\r\n    },\r\n    [insureds] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getData({ page: newPage + 1 }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getData({ size: rowsPerPage }));\r\n  };\r\n\r\n  const handleAddInsured = (fields) => (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_PRODUCTS_INSURED',\r\n        props: {\r\n          title: addLabel,\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            fields,\r\n            reInsured,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleEditInsured = (data) => {\r\n    const { fields, item } = data;\r\n    const { address } = item;\r\n    const insuredItem = { ...item, ...address };\r\n    dispatch(\r\n      showModal({\r\n        component: 'EDIT_PRODUCTS_INSURED',\r\n        props: {\r\n          title: editLabel,\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            fields,\r\n            item: insuredItem,\r\n            id: insuredItem?.id,\r\n            reInsured,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const popoverActions = [\r\n    {\r\n      id: 'products-admin-edit-insured',\r\n      label: editLabel,\r\n      callback: (data) => handleEditInsured(data),\r\n    },\r\n  ];\r\n\r\n  const pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  // abort\r\n  if (!schema || !schema.items) return null;\r\n\r\n  return (\r\n    <ProductsAdminInsuredsView\r\n      schema={schema}\r\n      loading={insuredsLoading}\r\n      countries={countries}\r\n      options={options}\r\n      pagination={pagination.obj}\r\n      buttonLabel={addLabel}\r\n      reInsured={reInsured}\r\n      popoverActions={popoverActions}\r\n      handlers={{\r\n        addInsured: handleAddInsured,\r\n        changePage: pagination.handlers.handleChangePage,\r\n        changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}