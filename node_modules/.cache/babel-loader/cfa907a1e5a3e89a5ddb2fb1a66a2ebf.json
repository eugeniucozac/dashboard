{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DynamicTable\\\\DynamicTable.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { applyMiddleware, createStore, compose } from 'redux';\nimport { Provider } from 'react-redux';\nimport thunk from 'redux-thunk';\nimport reducer from 'stores';\nimport merge from 'lodash/merge';\nimport { Tooltip, Button, DynamicTable } from 'components';\nimport { withKnobs, number } from '@storybook/addon-knobs';\nimport { Box } from '@material-ui/core';\nimport { useForm } from 'react-hook-form';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'DynamicTable',\n  component: DynamicTable,\n  decorators: [withKnobs]\n};\n\nvar getStore = function getStore(obj) {\n  var enhancer = compose(applyMiddleware(thunk));\n  var defaultStore = createStore(reducer, {}, enhancer);\n  var preloadedState = merge(defaultStore.getState(), obj); // return default store if no custom JSON is passed\n\n  if (!obj) {\n    return defaultStore;\n  } // otherwise, return new deeply-merged store with data from JSON obj\n\n\n  return createStore(reducer, preloadedState, enhancer);\n};\n\nvar rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map(function (num) {\n  return {\n    id: num,\n    rowKey: num,\n    name: \"row\".concat(num),\n    cells: [{\n      label: \"Row \".concat(num)\n    }, {\n      type: 'text',\n      name: \"text\".concat(num),\n      value: ''\n    }, {\n      type: 'checkbox',\n      name: \"checkbox\".concat(num),\n      value: false\n    }, {\n      type: 'select',\n      name: \"select\".concat(num),\n      optionsKey: 'placementType',\n      value: ''\n    }, {\n      type: 'datepicker',\n      name: \"datepicker\".concat(num),\n      value: ''\n    }, {\n      type: 'toggle',\n      name: \"toggle\".concat(num),\n      value: null,\n      optionsKey: 'yesNoNa'\n    }]\n  };\n});\nvar columns = [{\n  id: 'name',\n  label: 'Name'\n}, {\n  id: 'text',\n  label: 'Text'\n}, {\n  id: 'checkbox',\n  label: 'Checkbox'\n}, {\n  id: 'select',\n  label: 'Select'\n}, {\n  id: 'datepicker',\n  label: 'Datepicker'\n}, {\n  id: 'toggle',\n  label: 'Toggle'\n}];\nexport var Default = function Default() {\n  _s();\n\n  var defaultValues = utils.form.getInitialValues(rows.reduce(function (acc, cur) {\n    var fields = cur.cells.filter(function (cell) {\n      return cell.type;\n    });\n    return [].concat(_toConsumableArray(acc), _toConsumableArray(fields));\n  }, []));\n  var formProps = useForm({\n    defaultValues: defaultValues\n  });\n  var count = number('Rows', 1, {\n    range: true,\n    min: 1,\n    max: 10,\n    step: 1\n  });\n  return /*#__PURE__*/_jsxDEV(Provider, {\n    store: getStore(),\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      width: \"100%\",\n      children: [/*#__PURE__*/_jsxDEV(DynamicTable, {\n        rows: rows.slice(0, count),\n        columnHeaders: columns,\n        formProps: formProps\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: \"Check console logs for values\",\n        placement: \"top\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          color: \"primary\",\n          size: \"small\",\n          text: \"Submit\",\n          onClick: function onClick() {\n            console.log('[DynamicTable.stories]', formProps.getValues());\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 84,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 83,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 80,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Default, \"O9KmnTFUGOcr6CLiO9algDBSlvo=\", false, function () {\n  return [useForm];\n});\n\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\DynamicTable\\\\DynamicTable.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\DynamicTable\\\\DynamicTable.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DynamicTable/DynamicTable.stories.js"],"names":["React","applyMiddleware","createStore","compose","Provider","thunk","reducer","merge","Tooltip","Button","DynamicTable","withKnobs","number","Box","useForm","utils","title","component","decorators","getStore","obj","enhancer","defaultStore","preloadedState","getState","rows","map","num","id","rowKey","name","cells","label","type","value","optionsKey","columns","Default","defaultValues","form","getInitialValues","reduce","acc","cur","fields","filter","cell","formProps","count","range","min","max","step","slice","console","log","getValues"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { applyMiddleware, createStore, compose } from 'redux';\r\nimport { Provider } from 'react-redux';\r\nimport thunk from 'redux-thunk';\r\nimport reducer from 'stores';\r\nimport merge from 'lodash/merge';\r\nimport { Tooltip, Button, DynamicTable } from 'components';\r\nimport { withKnobs, number } from '@storybook/addon-knobs';\r\nimport { Box } from '@material-ui/core';\r\nimport { useForm } from 'react-hook-form';\r\nimport * as utils from 'utils';\r\n\r\nexport default {\r\n  title: 'DynamicTable',\r\n  component: DynamicTable,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nconst getStore = (obj) => {\r\n  const enhancer = compose(applyMiddleware(thunk));\r\n  const defaultStore = createStore(reducer, {}, enhancer);\r\n  const preloadedState = merge(defaultStore.getState(), obj);\r\n\r\n  // return default store if no custom JSON is passed\r\n  if (!obj) {\r\n    return defaultStore;\r\n  }\r\n\r\n  // otherwise, return new deeply-merged store with data from JSON obj\r\n  return createStore(reducer, preloadedState, enhancer);\r\n};\r\n\r\nconst rows = [1, 2, 3, 4, 5, 6, 7, 8, 9, 10].map((num) => ({\r\n  id: num,\r\n  rowKey: num,\r\n  name: `row${num}`,\r\n  cells: [\r\n    { label: `Row ${num}` },\r\n    { type: 'text', name: `text${num}`, value: '' },\r\n    { type: 'checkbox', name: `checkbox${num}`, value: false },\r\n    {\r\n      type: 'select',\r\n      name: `select${num}`,\r\n      optionsKey: 'placementType',\r\n      value: '',\r\n    },\r\n    { type: 'datepicker', name: `datepicker${num}`, value: '' },\r\n    {\r\n      type: 'toggle',\r\n      name: `toggle${num}`,\r\n      value: null,\r\n      optionsKey: 'yesNoNa',\r\n    },\r\n  ],\r\n}));\r\n\r\nconst columns = [\r\n  { id: 'name', label: 'Name' },\r\n  { id: 'text', label: 'Text' },\r\n  { id: 'checkbox', label: 'Checkbox' },\r\n  { id: 'select', label: 'Select' },\r\n  { id: 'datepicker', label: 'Datepicker' },\r\n  { id: 'toggle', label: 'Toggle' },\r\n];\r\n\r\nexport const Default = () => {\r\n  const defaultValues = utils.form.getInitialValues(\r\n    rows.reduce((acc, cur) => {\r\n      const fields = cur.cells.filter((cell) => cell.type);\r\n      return [...acc, ...fields];\r\n    }, [])\r\n  );\r\n  const formProps = useForm({\r\n    defaultValues,\r\n  });\r\n\r\n  const count = number('Rows', 1, { range: true, min: 1, max: 10, step: 1 });\r\n\r\n  return (\r\n    <Provider store={getStore()}>\r\n      <Box width=\"100%\">\r\n        <DynamicTable rows={rows.slice(0, count)} columnHeaders={columns} formProps={formProps} />\r\n        <Tooltip title=\"Check console logs for values\" placement=\"top\">\r\n          <Button\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            text=\"Submit\"\r\n            onClick={() => {\r\n              console.log('[DynamicTable.stories]', formProps.getValues());\r\n            }}\r\n          />\r\n        </Tooltip>\r\n      </Box>\r\n    </Provider>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}