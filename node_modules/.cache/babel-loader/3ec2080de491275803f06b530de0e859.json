{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport chroma from 'chroma-js';\nvar borderSize = 2;\n\nvar styles = function styles(theme) {\n  var getBgColor = function getBgColor(_ref) {\n    var text = _ref.text,\n        icon = _ref.icon,\n        src = _ref.src,\n        bg = _ref.bg;\n\n    if (bg) {\n      return bg;\n    } else if (text) {\n      return utils.color.random(text);\n    } else if (icon) {\n      return 'white';\n    } else if (src) {\n      return 'transparent';\n    } else {\n      return theme.palette.grey[300];\n    }\n  };\n\n  var hasBorder = function hasBorder(props) {\n    var bgColor = getBgColor(props);\n    return chroma(bgColor === 'transparent' ? theme.palette.grey[300] : bgColor).darken(0.75);\n  };\n\n  return {\n    root: function root(props) {\n      return _objectSpread(_objectSpread({\n        width: props.hasAction ? props.size - borderSize * 2 : props.size,\n        height: props.hasAction ? props.size - borderSize * 2 : props.size,\n        fontSize: \"\".concat(props.size / 24 * 0.6875, \"rem\")\n      }, !!props.icon && {\n        color: theme.palette.text.primary\n      }), {}, {\n        textTransform: 'uppercase',\n        backgroundColor: getBgColor(props),\n        boxSizing: 'content-box',\n        border: props.hasAction ? \"\".concat(borderSize, \"px solid transparent\") : 'none',\n        cursor: props.hasAction ? 'pointer' : 'default',\n        '&:hover': {\n          borderColor: props.hasAction ? hasBorder(props) : 'transparent'\n        },\n        '&:before': {\n          display: props.border ? 'block' : 'none',\n          content: '\"\"',\n          position: 'absolute',\n          top: 0,\n          left: 0,\n          width: '100%',\n          height: '100%',\n          background: 'transparent',\n          border: props.border === true ? \"1px solid \".concat(theme.palette.neutral.main) : props.border,\n          borderRadius: props.variant === 'rounded' ? 4 : props.variant === 'square' ? 0 : '50%',\n          zIndex: 1,\n          boxSizing: 'border-box'\n        }\n      });\n    }\n  };\n};\n\nexport default styles;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Avatar/Avatar.styles.js"],"names":["utils","chroma","borderSize","styles","theme","getBgColor","text","icon","src","bg","color","random","palette","grey","hasBorder","props","bgColor","darken","root","width","hasAction","size","height","fontSize","primary","textTransform","backgroundColor","boxSizing","border","cursor","borderColor","display","content","position","top","left","background","neutral","main","borderRadius","variant","zIndex"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport chroma from 'chroma-js';\r\n\r\nconst borderSize = 2;\r\n\r\nconst styles = (theme) => {\r\n  const getBgColor = ({ text, icon, src, bg }) => {\r\n    if (bg) {\r\n      return bg;\r\n    } else if (text) {\r\n      return utils.color.random(text);\r\n    } else if (icon) {\r\n      return 'white';\r\n    } else if (src) {\r\n      return 'transparent';\r\n    } else {\r\n      return theme.palette.grey[300];\r\n    }\r\n  };\r\n\r\n  const hasBorder = (props) => {\r\n    const bgColor = getBgColor(props);\r\n    return chroma(bgColor === 'transparent' ? theme.palette.grey[300] : bgColor).darken(0.75);\r\n  };\r\n\r\n  return {\r\n    root: (props) => {\r\n      return {\r\n        width: props.hasAction ? props.size - borderSize * 2 : props.size,\r\n        height: props.hasAction ? props.size - borderSize * 2 : props.size,\r\n        fontSize: `${(props.size / 24) * 0.6875}rem`,\r\n        ...(!!props.icon && { color: theme.palette.text.primary }),\r\n        textTransform: 'uppercase',\r\n        backgroundColor: getBgColor(props),\r\n        boxSizing: 'content-box',\r\n        border: props.hasAction ? `${borderSize}px solid transparent` : 'none',\r\n        cursor: props.hasAction ? 'pointer' : 'default',\r\n\r\n        '&:hover': {\r\n          borderColor: props.hasAction ? hasBorder(props) : 'transparent',\r\n        },\r\n\r\n        '&:before': {\r\n          display: props.border ? 'block' : 'none',\r\n          content: '\"\"',\r\n          position: 'absolute',\r\n          top: 0,\r\n          left: 0,\r\n          width: '100%',\r\n          height: '100%',\r\n          background: 'transparent',\r\n          border: props.border === true ? `1px solid ${theme.palette.neutral.main}` : props.border,\r\n          borderRadius: props.variant === 'rounded' ? 4 : props.variant === 'square' ? 0 : '50%',\r\n          zIndex: 1,\r\n          boxSizing: 'border-box',\r\n        },\r\n      };\r\n    },\r\n  };\r\n};\r\n\r\nexport default styles;\r\n"]},"metadata":{},"sourceType":"module"}