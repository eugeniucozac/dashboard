{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\n// app\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nexport var getReportDetailsExtended = function getReportDetailsExtended(reportId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reportingExtended.actions.getReportDetailsExtended'\n    };\n    dispatch(getReportDetailsExtendedRequest(reportId));\n    dispatch(addLoader('getReportDetailsExtended'));\n\n    if (!reportId) {\n      dispatch(getReportDetailsExtendedFailure(defaultError));\n      dispatch(removeLoader('getReportDetailsExtended'));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.odsService,\n      path: \"reports/group/report/\".concat(reportId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getReportDetailsExtendedSuccess(data === null || data === void 0 ? void 0 : data.data));\n    })[\"catch\"](function (err) {\n      var _err$response, _err$response2;\n\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getReportDetailsExtendedFailure(err));\n\n      if ((err === null || err === void 0 ? void 0 : (_err$response = err.response) === null || _err$response === void 0 ? void 0 : _err$response.status) === constants.API_STATUS_NOT_FOUND) {\n        dispatch(getReportDetailsExtendedSuccess({}));\n      } else if ((err === null || err === void 0 ? void 0 : (_err$response2 = err.response) === null || _err$response2 === void 0 ? void 0 : _err$response2.status) === constants.API_STATUS_INTERNAL_SERVER_ERROR) {\n        dispatch(getReportDetailsExtendedSuccess({}));\n        dispatch(enqueueNotification('reportingExtended.reportingDetails.getReport.failure', 'error'));\n      }\n\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getReportDetailsExtended'));\n    });\n  };\n};\nexport var getReportDetailsExtendedRequest = function getReportDetailsExtendedRequest(reportId) {\n  return {\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_REQUEST',\n    reportId: reportId\n  };\n};\nexport var getReportDetailsExtendedSuccess = function getReportDetailsExtendedSuccess(data) {\n  return {\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_SUCCESS',\n    payload: data\n  };\n};\nexport var getReportDetailsExtendedFailure = function getReportDetailsExtendedFailure(err) {\n  return {\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reportingExtended/reportingExtended.actions.getReportDetailsExtended.js"],"names":["utils","constants","addLoader","authLogout","removeLoader","enqueueNotification","getReportDetailsExtended","reportId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getReportDetailsExtendedRequest","getReportDetailsExtendedFailure","api","get","token","accessToken","odsService","path","then","response","handleResponse","json","handleNewData","data","getReportDetailsExtendedSuccess","err","handleError","handleUnauthorized","status","API_STATUS_NOT_FOUND","API_STATUS_INTERNAL_SERVER_ERROR","type","payload"],"mappings":"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","sourcesContent":["// app\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\n\r\nexport const getReportDetailsExtended = (reportId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reportingExtended.actions.getReportDetailsExtended',\r\n  };\r\n\r\n  dispatch(getReportDetailsExtendedRequest(reportId));\r\n  dispatch(addLoader('getReportDetailsExtended'));\r\n\r\n  if (!reportId) {\r\n    dispatch(getReportDetailsExtendedFailure(defaultError));\r\n    dispatch(removeLoader('getReportDetailsExtended'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.odsService,\r\n      path: `reports/group/report/${reportId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getReportDetailsExtendedSuccess(data?.data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getReportDetailsExtendedFailure(err));\r\n      if (err?.response?.status === constants.API_STATUS_NOT_FOUND) {\r\n        dispatch(getReportDetailsExtendedSuccess({}));\r\n      } else if (err?.response?.status === constants.API_STATUS_INTERNAL_SERVER_ERROR) {\r\n        dispatch(getReportDetailsExtendedSuccess({}));\r\n        dispatch(enqueueNotification('reportingExtended.reportingDetails.getReport.failure', 'error'));\r\n      }\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getReportDetailsExtended'));\r\n    });\r\n};\r\n\r\nexport const getReportDetailsExtendedRequest = (reportId) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_REQUEST',\r\n    reportId,\r\n  };\r\n};\r\n\r\nexport const getReportDetailsExtendedSuccess = (data) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getReportDetailsExtendedFailure = (err) => {\r\n  return {\r\n    type: 'REPORTING_EXTENDED_GET_REPORT_DETAILS_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}