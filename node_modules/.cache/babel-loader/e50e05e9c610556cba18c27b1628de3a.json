{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormSwitch\\\\FormSwitch.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { Controller } from 'react-hook-form';\nimport classnames from 'classnames'; // app\n\nimport styles from './FormSwitch.styles';\nimport { ErrorMessage } from 'components'; // mui\n\nimport { makeStyles, FormLabel, Switch, FormControlLabel, FormGroup } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFormSwitchView.propTypes = {\n  control: PropTypes.object,\n  register: PropTypes.func,\n  watch: PropTypes.func,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.bool,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired\n  })),\n  label: PropTypes.string,\n  title: PropTypes.string,\n  hint: PropTypes.string,\n  error: PropTypes.object,\n  handleChange: PropTypes.func,\n  muiComponentProps: PropTypes.object,\n  muiFormGroupProps: PropTypes.object\n};\nFormSwitchView.defaultProps = {\n  color: 'primary',\n  muiComponentProps: {},\n  muiFormGroupProps: {},\n  nestedClasses: {}\n};\nexport function FormSwitchView(_ref) {\n  var _this = this;\n\n  var muiComponentProps = _ref.muiComponentProps,\n      muiFormGroupProps = _ref.muiFormGroupProps,\n      control = _ref.control,\n      register = _ref.register,\n      watch = _ref.watch,\n      options = _ref.options,\n      name = _ref.name,\n      color = _ref.color,\n      value = _ref.value,\n      label = _ref.label,\n      title = _ref.title,\n      hint = _ref.hint,\n      error = _ref.error,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'FormSwitch'\n  })({\n    hasError: Boolean(error)\n  });\n  var hasOptions = options && options.length > 1;\n  var isSingleOption = options && options.length === 1;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(classes.root, _defineProperty({}, nestedClasses.root, Boolean(nestedClasses.root))),\n    children: [title && /*#__PURE__*/_jsxDEV(FormLabel, {\n      component: \"legend\",\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this), hasOptions && control && register && watch && /*#__PURE__*/_jsxDEV(FormGroup, _objectSpread(_objectSpread({}, muiFormGroupProps), {}, {\n      children: options.map(function (option) {\n        return /*#__PURE__*/_jsxDEV(Controller, {\n          control: control,\n          id: name,\n          name: name,\n          render: function render(_ref2) {\n            var _onChange = _ref2.onChange,\n                name = _ref2.name,\n                value = _ref2.value;\n            return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n              control: /*#__PURE__*/_jsxDEV(Switch, _objectSpread(_objectSpread({\n                name: name,\n                onChange: function onChange(e) {\n                  _onChange(e.target.checked);\n                },\n                label: label,\n                checked: value,\n                color: color\n              }, muiComponentProps), {}, {\n                inputProps: _objectSpread(_objectSpread({}, muiComponentProps.inputProps), {}, {\n                  'data-form-type': 'switch'\n                }),\n                disabled: option.disabled,\n                className: classes.checkbox,\n                inputRef: register()\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, _this),\n              disabled: option.disabled,\n              label: option.label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 17\n            }, _this);\n          }\n        }, \"\".concat(name, \"_\").concat(option.value), false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this), (isSingleOption || !hasOptions) && (control ? /*#__PURE__*/_jsxDEV(Controller, {\n      name: name,\n      control: control,\n      render: function render(_ref3) {\n        var _onChange2 = _ref3.onChange,\n            name = _ref3.name,\n            value = _ref3.value;\n        return /*#__PURE__*/_jsxDEV(FormControlLabel, {\n          control: /*#__PURE__*/_jsxDEV(Switch, _objectSpread(_objectSpread({}, muiComponentProps), {}, {\n            onChange: function onChange(e) {\n              _onChange2(e.target.checked);\n\n              if (muiComponentProps && muiComponentProps.onChange) {\n                muiComponentProps.onChange(name, e.target.checked);\n              }\n            },\n            label: label,\n            checked: value,\n            name: name,\n            inputProps: _objectSpread(_objectSpread({}, muiComponentProps.inputProps), {}, {\n              'data-form-type': 'switch'\n            }),\n            color: color\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 15\n        }, _this);\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(FormControlLabel, _objectSpread(_objectSpread({\n      value: value\n    }, isSingleOption && {\n      value: options[0].value\n    }), {}, {\n      control: /*#__PURE__*/_jsxDEV(Switch, {\n        color: color,\n        checked: value,\n        inputProps: {\n          'data-form-type': 'switch'\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 146,\n        columnNumber: 15\n      }, this),\n      label: isSingleOption ? options[0].label : label\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 11\n    }, this)), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n      error: error,\n      hint: hint\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n_c = FormSwitchView;\nFormSwitchView.displayName = \"FormSwitchView\";\nFormSwitchView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"FormSwitchView\",\n  \"props\": {\n    \"color\": {\n      \"defaultValue\": {\n        \"value\": \"'primary'\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"muiComponentProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"muiFormGroupProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"control\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"register\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"watch\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"value\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }, {\n                \"name\": \"bool\"\n              }],\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormSwitch\\\\FormSwitch.view.js\"] = {\n    name: \"FormSwitchView\",\n    docgenInfo: FormSwitchView.__docgenInfo,\n    path: \"src\\\\components\\\\FormSwitch\\\\FormSwitch.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormSwitchView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormSwitch/FormSwitch.view.js"],"names":["React","PropTypes","Controller","classnames","styles","ErrorMessage","makeStyles","FormLabel","Switch","FormControlLabel","FormGroup","FormSwitchView","propTypes","control","object","register","func","watch","name","string","isRequired","value","bool","options","arrayOf","shape","label","oneOfType","number","title","hint","error","handleChange","muiComponentProps","muiFormGroupProps","defaultProps","color","nestedClasses","classes","hasError","Boolean","hasOptions","length","isSingleOption","root","map","option","onChange","e","target","checked","inputProps","disabled","checkbox"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { Controller } from 'react-hook-form';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './FormSwitch.styles';\r\nimport { ErrorMessage } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, FormLabel, Switch, FormControlLabel, FormGroup } from '@material-ui/core';\r\n\r\nFormSwitchView.propTypes = {\r\n  control: PropTypes.object,\r\n  register: PropTypes.func,\r\n  watch: PropTypes.func,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.bool,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number, PropTypes.bool]).isRequired,\r\n    })\r\n  ),\r\n  label: PropTypes.string,\r\n  title: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  error: PropTypes.object,\r\n  handleChange: PropTypes.func,\r\n  muiComponentProps: PropTypes.object,\r\n  muiFormGroupProps: PropTypes.object,\r\n};\r\n\r\nFormSwitchView.defaultProps = {\r\n  color: 'primary',\r\n  muiComponentProps: {},\r\n  muiFormGroupProps: {},\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function FormSwitchView({\r\n  muiComponentProps,\r\n  muiFormGroupProps,\r\n  control,\r\n  register,\r\n  watch,\r\n  options,\r\n  name,\r\n  color,\r\n  value,\r\n  label,\r\n  title,\r\n  hint,\r\n  error,\r\n  nestedClasses,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'FormSwitch' })({\r\n    hasError: Boolean(error),\r\n  });\r\n\r\n  const hasOptions = options && options.length > 1;\r\n  const isSingleOption = options && options.length === 1;\r\n\r\n  return (\r\n    <div className={classnames(classes.root, { [nestedClasses.root]: Boolean(nestedClasses.root) })}>\r\n      {title && (\r\n        <FormLabel component=\"legend\" className={classes.title}>\r\n          {title}\r\n        </FormLabel>\r\n      )}\r\n\r\n      {hasOptions && control && register && watch && (\r\n        <FormGroup {...muiFormGroupProps}>\r\n          {options.map((option) => (\r\n            <Controller\r\n              control={control}\r\n              id={name}\r\n              name={name}\r\n              key={`${name}_${option.value}`}\r\n              render={({ onChange, name, value }) => (\r\n                <FormControlLabel\r\n                  control={\r\n                    <Switch\r\n                      name={name}\r\n                      onChange={(e) => {\r\n                        onChange(e.target.checked);\r\n                      }}\r\n                      label={label}\r\n                      checked={value}\r\n                      color={color}\r\n                      {...muiComponentProps}\r\n                      inputProps={{\r\n                        ...muiComponentProps.inputProps,\r\n                        'data-form-type': 'switch',\r\n                      }}\r\n                      disabled={option.disabled}\r\n                      className={classes.checkbox}\r\n                      inputRef={register()}\r\n                    />\r\n                  }\r\n                  disabled={option.disabled}\r\n                  label={option.label}\r\n                />\r\n              )}\r\n            />\r\n          ))}\r\n        </FormGroup>\r\n      )}\r\n\r\n      {(isSingleOption || !hasOptions) &&\r\n        (control ? (\r\n          <Controller\r\n            name={name}\r\n            control={control}\r\n            render={({ onChange, name, value }) => (\r\n              <FormControlLabel\r\n                control={\r\n                  <Switch\r\n                    {...muiComponentProps}\r\n                    onChange={(e) => {\r\n                      onChange(e.target.checked);\r\n                      if (muiComponentProps && muiComponentProps.onChange) {\r\n                        muiComponentProps.onChange(name, e.target.checked);\r\n                      }\r\n                    }}\r\n                    label={label}\r\n                    checked={value}\r\n                    name={name}\r\n                    inputProps={{\r\n                      ...muiComponentProps.inputProps,\r\n                      'data-form-type': 'switch',\r\n                    }}\r\n                    color={color}\r\n                  />\r\n                }\r\n              />\r\n            )}\r\n          />\r\n        ) : (\r\n          <FormControlLabel\r\n            value={value}\r\n            {...(isSingleOption && {\r\n              value: options[0].value,\r\n            })}\r\n            control={\r\n              <Switch\r\n                color={color}\r\n                checked={value}\r\n                inputProps={{\r\n                  'data-form-type': 'switch',\r\n                }}\r\n              />\r\n            }\r\n            label={isSingleOption ? options[0].label : label}\r\n          />\r\n        ))}\r\n\r\n      <ErrorMessage error={error} hint={hint} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}