{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimRefTasksTable\\\\ClaimRefTasksTable.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'; // app\n\nimport { ClaimRefTasksTableView } from './ClaimRefTasksTable.view';\nimport { selectClaimRefTasksPagination } from 'stores';\nimport { useSort, usePagination } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimRefTasksTable.propTypes = {\n  tasks: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    handleSort: PropTypes.func.isRequired,\n    handleChangePage: PropTypes.func.isRequired,\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\n    selectTask: PropTypes.func.isRequired\n  })\n};\nexport default function ClaimRefTasksTable(_ref) {\n  _s();\n\n  var tasks = _ref.tasks,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      handlers = _ref.handlers;\n  var tasksProcessingPagination = useSelector(selectClaimRefTasksPagination);\n\n  var _useSort = useSort(colsArr, sortObj, handlers.handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var pagination = usePagination((tasks === null || tasks === void 0 ? void 0 : tasks.length) > 0 ? tasks : [], tasksProcessingPagination, handlers.handleChangePage, handlers.handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(ClaimRefTasksTableView, {\n    taskItems: (tasks === null || tasks === void 0 ? void 0 : tasks.length) > 0 ? tasks : [],\n    cols: cols,\n    columnProps: columnProps,\n    sort: sort,\n    handlers: {\n      pagination: pagination,\n      handleSort: handlers.handleSort,\n      selectTask: handlers.selectTask\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimRefTasksTable, \"jXz7xOZXhRsm1UBBWB/hoOVRFLI=\", false, function () {\n  return [useSelector, useSort, usePagination];\n});\n\n_c = ClaimRefTasksTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimRefTasksTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimRefTasksTable/ClaimRefTasksTable.js"],"names":["React","PropTypes","useSelector","ClaimRefTasksTableView","selectClaimRefTasksPagination","useSort","usePagination","ClaimRefTasksTable","propTypes","tasks","array","isRequired","cols","columnProps","func","sort","object","handlers","shape","handleSort","handleChangePage","handleChangeRowsPerPage","selectTask","colsArr","sortObj","tasksProcessingPagination","pagination","length"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,6BAAT,QAA8C,QAA9C;AACA,SAASC,OAAT,EAAkBC,aAAlB,QAAuC,OAAvC;;AAEAC,kBAAkB,CAACC,SAAnB,GAA+B;AAC7BC,EAAAA,KAAK,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADM;AAE7BC,EAAAA,IAAI,EAAEX,SAAS,CAACS,KAAV,CAAgBC,UAFO;AAG7BE,EAAAA,WAAW,EAAEZ,SAAS,CAACa,IAAV,CAAeH,UAHC;AAI7BI,EAAAA,IAAI,EAAEd,SAAS,CAACe,MAAV,CAAiBL,UAJM;AAK7BM,EAAAA,QAAQ,EAAEhB,SAAS,CAACiB,KAAV,CAAgB;AACxBC,IAAAA,UAAU,EAAElB,SAAS,CAACa,IAAV,CAAeH,UADH;AAExBS,IAAAA,gBAAgB,EAAEnB,SAAS,CAACa,IAAV,CAAeH,UAFT;AAGxBU,IAAAA,uBAAuB,EAAEpB,SAAS,CAACa,IAAV,CAAeH,UAHhB;AAIxBW,IAAAA,UAAU,EAAErB,SAAS,CAACa,IAAV,CAAeH;AAJH,GAAhB;AALmB,CAA/B;AAaA,eAAe,SAASJ,kBAAT,OAA4F;AAAA;;AAAA,MAA9DE,KAA8D,QAA9DA,KAA8D;AAAA,MAAjDc,OAAiD,QAAvDX,IAAuD;AAAA,MAAxCC,WAAwC,QAAxCA,WAAwC;AAAA,MAArBW,OAAqB,QAA3BT,IAA2B;AAAA,MAAZE,QAAY,QAAZA,QAAY;AACzG,MAAMQ,yBAAyB,GAAGvB,WAAW,CAACE,6BAAD,CAA7C;;AADyG,iBAElFC,OAAO,CAACkB,OAAD,EAAUC,OAAV,EAAmBP,QAAQ,CAACE,UAA5B,CAF2E;AAAA,MAEjGP,IAFiG,YAEjGA,IAFiG;AAAA,MAE3FG,IAF2F,YAE3FA,IAF2F;;AAGzG,MAAMW,UAAU,GAAGpB,aAAa,CAC9B,CAAAG,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEkB,MAAP,IAAgB,CAAhB,GAAoBlB,KAApB,GAA4B,EADE,EAE9BgB,yBAF8B,EAG9BR,QAAQ,CAACG,gBAHqB,EAI9BH,QAAQ,CAACI,uBAJqB,CAAhC;AAOA,sBACE,QAAC,sBAAD;AACE,IAAA,SAAS,EAAE,CAAAZ,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEkB,MAAP,IAAgB,CAAhB,GAAoBlB,KAApB,GAA4B,EADzC;AAEE,IAAA,IAAI,EAAEG,IAFR;AAGE,IAAA,WAAW,EAAEC,WAHf;AAIE,IAAA,IAAI,EAAEE,IAJR;AAKE,IAAA,QAAQ,EAAE;AACRW,MAAAA,UAAU,EAAEA,UADJ;AAERP,MAAAA,UAAU,EAAEF,QAAQ,CAACE,UAFb;AAGRG,MAAAA,UAAU,EAAEL,QAAQ,CAACK;AAHb;AALZ;AAAA;AAAA;AAAA;AAAA,UADF;AAaD;;GAvBuBf,kB;UACYL,W,EACXG,O,EACJC,a;;;KAHGC,kB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { ClaimRefTasksTableView } from './ClaimRefTasksTable.view';\r\nimport { selectClaimRefTasksPagination } from 'stores';\r\nimport { useSort, usePagination } from 'hooks';\r\n\r\nClaimRefTasksTable.propTypes = {\r\n  tasks: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleSort: PropTypes.func.isRequired,\r\n    handleChangePage: PropTypes.func.isRequired,\r\n    handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    selectTask: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default function ClaimRefTasksTable({ tasks, cols: colsArr, columnProps, sort: sortObj, handlers }) {\r\n  const tasksProcessingPagination = useSelector(selectClaimRefTasksPagination);\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers.handleSort);\r\n  const pagination = usePagination(\r\n    tasks?.length > 0 ? tasks : [],\r\n    tasksProcessingPagination,\r\n    handlers.handleChangePage,\r\n    handlers.handleChangeRowsPerPage\r\n  );\r\n\r\n  return (\r\n    <ClaimRefTasksTableView\r\n      taskItems={tasks?.length > 0 ? tasks : []}\r\n      cols={cols}\r\n      columnProps={columnProps}\r\n      sort={sort}\r\n      handlers={{\r\n        pagination: pagination,\r\n        handleSort: handlers.handleSort,\r\n        selectTask: handlers.selectTask,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}