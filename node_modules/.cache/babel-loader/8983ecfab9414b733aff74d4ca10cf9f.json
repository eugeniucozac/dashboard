{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpeningMemoSummary\\\\OpeningMemoSummary.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './OpeningMemoSummary.styles';\nimport { Button, Approval, ErrorMessage, Summary } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Grid, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nOpeningMemoSummaryView.propTypes = {\n  users: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.number.isRequired,\n    fullName: PropTypes.string.isRequired\n  })),\n  openingMemo: PropTypes.object.isRequired,\n  disableAll: PropTypes.bool.isRequired,\n  disableHandler: PropTypes.bool.isRequired,\n  disableSignatory: PropTypes.bool.isRequired,\n  onChange: PropTypes.func.isRequired,\n  onReset: PropTypes.func.isRequired\n};\nexport function OpeningMemoSummaryView(_ref) {\n  var _this = this;\n\n  var users = _ref.users,\n      openingMemo = _ref.openingMemo,\n      disableAll = _ref.disableAll,\n      disableHandler = _ref.disableHandler,\n      disableSignatory = _ref.disableSignatory,\n      onChange = _ref.onChange,\n      onReset = _ref.onReset;\n  var classes = makeStyles(styles, {\n    name: 'OpeningMemoSummary'\n  })();\n  var showReset = openingMemo.isAccountHandlerApproved || openingMemo.isAuthorisedSignatoryApproved;\n\n  var renderSummaryInfos = function renderSummaryInfos() {\n    return /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      spacing: 3,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        xl: 6,\n        children: [disableAll && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          nestedClasses: {\n            root: classes.error\n          },\n          error: {\n            message: utils.string.t('openingMemo.saveBeforeApproving')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 13\n        }, _this), disableHandler && !disableAll && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          nestedClasses: {\n            root: classes.error\n          },\n          error: {\n            message: utils.string.t('openingMemo.selectSignatoryFirst')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, _this), disableSignatory && !disableAll && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n          nestedClasses: {\n            root: classes.error\n          },\n          error: {\n            message: utils.string.t('openingMemo.selectHandlerFirst')\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Approval, {\n          disabled: disableAll,\n          disableApproval: disableAll || disableHandler,\n          users: users,\n          onChange: onChange,\n          title: utils.string.t('placement.openingMemo.approvers.accountHandler'),\n          user: openingMemo.accountHandler,\n          userKey: \"accountHandler\",\n          approvedDate: openingMemo.accountHandlerApprovalDate,\n          approvedDateKey: \"accountHandlerApprovalDate\",\n          isApproved: openingMemo.isAccountHandlerApproved,\n          isApprovedKey: \"isAccountHandlerApproved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 11\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        xl: 6,\n        children: /*#__PURE__*/_jsxDEV(Approval, {\n          disabled: disableAll,\n          disableApproval: disableAll || disableSignatory,\n          users: users,\n          onChange: onChange,\n          title: utils.string.t('placement.openingMemo.approvers.authorisedSignatory'),\n          user: openingMemo.authorisedSignatory,\n          userKey: \"authorisedSignatory\",\n          approvedDate: openingMemo.authorisedSignatoryApprovalDate,\n          approvedDateKey: \"authorisedSignatoryApprovalDate\",\n          isApproved: openingMemo.isAuthorisedSignatoryApproved,\n          isApprovedKey: \"isAuthorisedSignatoryApproved\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, _this), showReset && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        item: true,\n        xs: 12,\n        justifyContent: \"center\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          variant: \"outlined\",\n          text: utils.string.t('openingMemo.resetApprovals'),\n          size: \"small\",\n          onClick: onReset,\n          \"data-testid\": \"approval-reset-button\",\n          nestedClasses: {\n            btn: classes.reset\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 75,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Summary, {\n      status: utils.string.replaceLowerCase(openingMemo.status),\n      infos: renderSummaryInfos()\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 93,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = OpeningMemoSummaryView;\n\nvar _c;\n\n$RefreshReg$(_c, \"OpeningMemoSummaryView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpeningMemoSummary/OpeningMemoSummary.view.js"],"names":["React","PropTypes","styles","Button","Approval","ErrorMessage","Summary","utils","Grid","makeStyles","OpeningMemoSummaryView","propTypes","users","arrayOf","shape","id","number","isRequired","fullName","string","openingMemo","object","disableAll","bool","disableHandler","disableSignatory","onChange","func","onReset","classes","name","showReset","isAccountHandlerApproved","isAuthorisedSignatoryApproved","renderSummaryInfos","root","error","message","t","accountHandler","accountHandlerApprovalDate","authorisedSignatory","authorisedSignatoryApprovalDate","btn","reset","replaceLowerCase","status"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './OpeningMemoSummary.styles';\r\nimport { Button, Approval, ErrorMessage, Summary } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Grid, makeStyles } from '@material-ui/core';\r\n\r\nOpeningMemoSummaryView.propTypes = {\r\n  users: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.number.isRequired,\r\n      fullName: PropTypes.string.isRequired,\r\n    })\r\n  ),\r\n  openingMemo: PropTypes.object.isRequired,\r\n  disableAll: PropTypes.bool.isRequired,\r\n  disableHandler: PropTypes.bool.isRequired,\r\n  disableSignatory: PropTypes.bool.isRequired,\r\n  onChange: PropTypes.func.isRequired,\r\n  onReset: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function OpeningMemoSummaryView({ users, openingMemo, disableAll, disableHandler, disableSignatory, onChange, onReset }) {\r\n  const classes = makeStyles(styles, { name: 'OpeningMemoSummary' })();\r\n  const showReset = openingMemo.isAccountHandlerApproved || openingMemo.isAuthorisedSignatoryApproved;\r\n\r\n  const renderSummaryInfos = () => {\r\n    return (\r\n      <Grid container spacing={3}>\r\n        <Grid item xs={12} xl={6}>\r\n          {disableAll && (\r\n            <ErrorMessage nestedClasses={{ root: classes.error }} error={{ message: utils.string.t('openingMemo.saveBeforeApproving') }} />\r\n          )}\r\n          {disableHandler && !disableAll && (\r\n            <ErrorMessage nestedClasses={{ root: classes.error }} error={{ message: utils.string.t('openingMemo.selectSignatoryFirst') }} />\r\n          )}\r\n          {disableSignatory && !disableAll && (\r\n            <ErrorMessage nestedClasses={{ root: classes.error }} error={{ message: utils.string.t('openingMemo.selectHandlerFirst') }} />\r\n          )}\r\n          <Approval\r\n            disabled={disableAll}\r\n            disableApproval={disableAll || disableHandler}\r\n            users={users}\r\n            onChange={onChange}\r\n            title={utils.string.t('placement.openingMemo.approvers.accountHandler')}\r\n            user={openingMemo.accountHandler}\r\n            userKey=\"accountHandler\"\r\n            approvedDate={openingMemo.accountHandlerApprovalDate}\r\n            approvedDateKey=\"accountHandlerApprovalDate\"\r\n            isApproved={openingMemo.isAccountHandlerApproved}\r\n            isApprovedKey=\"isAccountHandlerApproved\"\r\n          />\r\n        </Grid>\r\n        <Grid item xs={12} xl={6}>\r\n          <Approval\r\n            disabled={disableAll}\r\n            disableApproval={disableAll || disableSignatory}\r\n            users={users}\r\n            onChange={onChange}\r\n            title={utils.string.t('placement.openingMemo.approvers.authorisedSignatory')}\r\n            user={openingMemo.authorisedSignatory}\r\n            userKey=\"authorisedSignatory\"\r\n            approvedDate={openingMemo.authorisedSignatoryApprovalDate}\r\n            approvedDateKey=\"authorisedSignatoryApprovalDate\"\r\n            isApproved={openingMemo.isAuthorisedSignatoryApproved}\r\n            isApprovedKey=\"isAuthorisedSignatoryApproved\"\r\n          />\r\n        </Grid>\r\n\r\n        {showReset && (\r\n          <Grid container item xs={12} justifyContent=\"center\">\r\n            <Button\r\n              danger\r\n              variant=\"outlined\"\r\n              text={utils.string.t('openingMemo.resetApprovals')}\r\n              size=\"small\"\r\n              onClick={onReset}\r\n              data-testid=\"approval-reset-button\"\r\n              nestedClasses={{ btn: classes.reset }}\r\n            />\r\n          </Grid>\r\n        )}\r\n      </Grid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Summary status={utils.string.replaceLowerCase(openingMemo.status)} infos={renderSummaryInfos()} />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}