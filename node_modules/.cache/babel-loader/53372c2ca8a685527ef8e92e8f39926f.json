{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useHistory, useParams } from 'react-router'; // app\n\nimport { RfiDashboardView } from './RfiDashboard.view';\nimport { selectRfiHistoryList, selectRfiHistoryDocumentList, selectTasksTabGridListSelected, getMultipleContextDocuments, selectorMultipleContextDocs, getClaimsTaskDashboardDetail, selectRfiDashboardDetails, selectIsRfiDashboardDetailsLoading } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RfiDashboard() {\n  _s();\n\n  var history = useHistory();\n  var params = useParams();\n  var dispatch = useDispatch();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  }); // Redux management\n\n  var tasksProcessingSelected = useSelector(selectTasksTabGridListSelected);\n  var rfiHistory = useSelector(selectRfiHistoryList);\n  var rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList);\n  var rfiLinkedDocs = useSelector(selectorMultipleContextDocs);\n  var rfiDashboardDetails = useSelector(selectRfiDashboardDetails);\n  var isRfiDetailsLoading = useSelector(selectIsRfiDashboardDetailsLoading);\n  var hasValidRfiDashboardDetails = utils.generic.isValidObject(rfiDashboardDetails, 'taskRef');\n  var selectedRfi = hasValidRfiDashboardDetails ? rfiDashboardDetails : tasksProcessingSelected[0]; // State management\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'rfiDetails'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dmsDocListParams = _useState4[0],\n      setDmsDocListParams = _useState4[1];\n\n  var rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.refType);\n  var isParentTaskTypeRFI = (selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef) ? utils.claimsRfi.isRfiTask(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef) : false;\n  useEffect(function () {\n    if (!hasValidRfiDashboardDetails && !isRfiDetailsLoading) {\n      dispatch(getClaimsTaskDashboardDetail({\n        query: params === null || params === void 0 ? void 0 : params.id,\n        isRfiTask: true\n      })).then(function (res) {\n        var _res$data, _res$data$searchValue;\n\n        if (!(res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : (_res$data$searchValue = _res$data.searchValue) === null || _res$data$searchValue === void 0 ? void 0 : _res$data$searchValue.length)) {\n          history.replace(config.routes.claimsFNOL.root);\n        }\n      });\n    }\n  }, [hasValidRfiDashboardDetails]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n\n    if (tabName === 'documents') {\n      var _tasksProcessingSelec2;\n\n      var allReferenceIds = [].concat(_toConsumableArray(rfiHistory === null || rfiHistory === void 0 ? void 0 : rfiHistory.map(function (item) {\n        var _tasksProcessingSelec;\n\n        return {\n          referenceId: \"\".concat((_tasksProcessingSelec = tasksProcessingSelected[0]) === null || _tasksProcessingSelec === void 0 ? void 0 : _tasksProcessingSelec.taskId, \"-\").concat(item === null || item === void 0 ? void 0 : item.caseIncidentNotesID),\n          sectionType: constants.DMS_CONTEXT_TASK\n        };\n      })), [utils.generic.isValidArray(tasksProcessingSelected, true) && {\n        referenceId: (_tasksProcessingSelec2 = tasksProcessingSelected[0]) === null || _tasksProcessingSelec2 === void 0 ? void 0 : _tasksProcessingSelec2.taskId,\n        sectionType: constants.DMS_CONTEXT_TASK\n      }]);\n      setDmsDocListParams(allReferenceIds);\n      if (utils.generic.isValidArray(allReferenceIds, true)) dispatch(getMultipleContextDocuments(allReferenceIds));\n    }\n  };\n\n  var tabs = [{\n    value: 'rfiDetails',\n    label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail')\n  }, {\n    value: 'documents',\n    label: utils.string.t('claims.rfiDashboard.tabs.documents')\n  }];\n  var breadcrumbs = [{\n    name: 'claimsProcessing',\n    label: utils.string.t('claims.loss.title'),\n    link: config.routes.claimsFNOL.root\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', {\n      lossRef: selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.lossRef)\n  }].concat(_toConsumableArray(rfiOriginType === 'claim' || rfiOriginType === 'task' ? [{\n    name: 'claim',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\n      claimRef: (selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.claimRef) || (selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.processRef)\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat((selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.claimRef) || (selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.processRef))\n  }] : []), _toConsumableArray(rfiOriginType === 'task' && !isParentTaskTypeRFI ? [{\n    name: 'task',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', {\n      taskRef: selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.task, \"/\").concat(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef)\n  }] : rfiOriginType === 'task' && isParentTaskTypeRFI ? [{\n    name: 'rfiTask',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', {\n      taskRef: selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.rfi, \"/\").concat(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.parentTaskRef)\n  }] : []), [{\n    name: 'rfiTask',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', {\n      taskRef: selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.taskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.rfi, \"/\").concat(selectedRfi === null || selectedRfi === void 0 ? void 0 : selectedRfi.taskRef),\n    active: true,\n    largeFont: true\n  }]); // abort\n\n  if (!selectedRfi) return '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('claims.processing.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 137,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RfiDashboardView, {\n      rfiTask: selectedRfi,\n      rfiOriginType: rfiOriginType,\n      tabs: tabs,\n      rfiHistory: utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory,\n      selectedTab: selectedTab,\n      breadcrumbs: breadcrumbs,\n      handleSelectTab: handleSelectTab,\n      rfiLinkedDocs: rfiLinkedDocs,\n      dmsDocListParams: dmsDocListParams\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 139,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RfiDashboard, \"ZhUsaW52swQtAkpufcE/fMOQuNk=\", false, function () {\n  return [useHistory, useParams, useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RfiDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/RfiDashboard/RfiDashboard.js"],"names":["React","useState","useEffect","useSelector","useDispatch","Helmet","useHistory","useParams","RfiDashboardView","selectRfiHistoryList","selectRfiHistoryDocumentList","selectTasksTabGridListSelected","getMultipleContextDocuments","selectorMultipleContextDocs","getClaimsTaskDashboardDetail","selectRfiDashboardDetails","selectIsRfiDashboardDetailsLoading","utils","config","constants","RfiDashboard","history","params","dispatch","brand","state","ui","tasksProcessingSelected","rfiHistory","rfiHistoryDocList","rfiLinkedDocs","rfiDashboardDetails","isRfiDetailsLoading","hasValidRfiDashboardDetails","generic","isValidObject","selectedRfi","tab","selectedTab","setSelectedTab","dmsDocListParams","setDmsDocListParams","rfiOriginType","claimsRfi","checkRfiOriginType","refType","isParentTaskTypeRFI","parentTaskRef","isRfiTask","query","id","then","res","data","searchValue","length","replace","routes","claimsFNOL","root","handleSelectTab","tabName","allReferenceIds","map","item","referenceId","taskId","caseIncidentNotesID","sectionType","DMS_CONTEXT_TASK","isValidArray","tabs","value","label","string","t","breadcrumbs","name","link","lossRef","loss","claimRef","processRef","claim","taskRef","task","rfi","active","largeFont","app","getAppName"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\n// app\r\nimport { RfiDashboardView } from './RfiDashboard.view';\r\nimport {\r\n  selectRfiHistoryList,\r\n  selectRfiHistoryDocumentList,\r\n  selectTasksTabGridListSelected,\r\n  getMultipleContextDocuments,\r\n  selectorMultipleContextDocs,\r\n  getClaimsTaskDashboardDetail,\r\n  selectRfiDashboardDetails,\r\n  selectIsRfiDashboardDetailsLoading,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nexport default function RfiDashboard() {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const dispatch = useDispatch();\r\n  const brand = useSelector((state) => state.ui.brand);\r\n\r\n  // Redux management\r\n  const tasksProcessingSelected = useSelector(selectTasksTabGridListSelected);\r\n  const rfiHistory = useSelector(selectRfiHistoryList);\r\n  const rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList);\r\n  const rfiLinkedDocs = useSelector(selectorMultipleContextDocs);\r\n  const rfiDashboardDetails = useSelector(selectRfiDashboardDetails);\r\n  const isRfiDetailsLoading = useSelector(selectIsRfiDashboardDetailsLoading);\r\n\r\n  const hasValidRfiDashboardDetails = utils.generic.isValidObject(rfiDashboardDetails, 'taskRef');\r\n  const selectedRfi = hasValidRfiDashboardDetails ? rfiDashboardDetails : tasksProcessingSelected[0];\r\n\r\n  // State management\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'rfiDetails');\r\n  const [dmsDocListParams, setDmsDocListParams] = useState([]);\r\n\r\n  const rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedRfi?.refType);\r\n  const isParentTaskTypeRFI = selectedRfi?.parentTaskRef ? utils.claimsRfi.isRfiTask(selectedRfi?.parentTaskRef) : false;\r\n\r\n  useEffect(() => {\r\n    if (!hasValidRfiDashboardDetails && !isRfiDetailsLoading) {\r\n      dispatch(getClaimsTaskDashboardDetail({ query: params?.id, isRfiTask: true })).then((res) => {\r\n        if (!res?.data?.searchValue?.length) {\r\n          history.replace(config.routes.claimsFNOL.root);\r\n        }\r\n      });\r\n    }\r\n  }, [hasValidRfiDashboardDetails]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n    if (tabName === 'documents') {\r\n      const allReferenceIds = [\r\n        ...rfiHistory?.map((item) => {\r\n          return {\r\n            referenceId: `${tasksProcessingSelected[0]?.taskId}-${item?.caseIncidentNotesID}`,\r\n            sectionType: constants.DMS_CONTEXT_TASK,\r\n          };\r\n        }),\r\n        ...[\r\n          utils.generic.isValidArray(tasksProcessingSelected, true) && {\r\n            referenceId: tasksProcessingSelected[0]?.taskId,\r\n            sectionType: constants.DMS_CONTEXT_TASK,\r\n          },\r\n        ],\r\n      ];\r\n      setDmsDocListParams(allReferenceIds);\r\n      if (utils.generic.isValidArray(allReferenceIds, true)) dispatch(getMultipleContextDocuments(allReferenceIds));\r\n    }\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'rfiDetails', label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail') },\r\n    { value: 'documents', label: utils.string.t('claims.rfiDashboard.tabs.documents') },\r\n  ];\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsProcessing',\r\n      label: utils.string.t('claims.loss.title'),\r\n      link: config.routes.claimsFNOL.root,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', { lossRef: selectedRfi?.lossRef })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${selectedRfi?.lossRef}`,\r\n    },\r\n    ...(rfiOriginType === 'claim' || rfiOriginType === 'task'\r\n      ? [\r\n          {\r\n            name: 'claim',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\r\n              claimRef: selectedRfi?.claimRef || selectedRfi?.processRef,\r\n            })}`,\r\n            link: `${config.routes.claimsFNOL.claim}/${selectedRfi?.claimRef || selectedRfi?.processRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(rfiOriginType === 'task' && !isParentTaskTypeRFI\r\n      ? [\r\n          {\r\n            name: 'task',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', { taskRef: selectedRfi?.parentTaskRef })}`,\r\n            link: `${config.routes.claimsFNOL.task}/${selectedRfi?.parentTaskRef}`,\r\n          },\r\n        ]\r\n      : rfiOriginType === 'task' && isParentTaskTypeRFI\r\n      ? [\r\n          {\r\n            name: 'rfiTask',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', { taskRef: selectedRfi?.parentTaskRef })}`,\r\n            link: `${config.routes.claimsFNOL.rfi}/${selectedRfi?.parentTaskRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'rfiTask',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', { taskRef: selectedRfi?.taskRef })}`,\r\n      link: `${config.routes.claimsFNOL.rfi}/${selectedRfi?.taskRef}`,\r\n      active: true,\r\n      largeFont: true,\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!selectedRfi) return '';\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('claims.processing.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <RfiDashboardView\r\n        rfiTask={selectedRfi}\r\n        rfiOriginType={rfiOriginType}\r\n        tabs={tabs}\r\n        rfiHistory={utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory}\r\n        selectedTab={selectedTab}\r\n        breadcrumbs={breadcrumbs}\r\n        handleSelectTab={handleSelectTab}\r\n        rfiLinkedDocs={rfiLinkedDocs}\r\n        dmsDocListParams={dmsDocListParams}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}