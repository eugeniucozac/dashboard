{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddReferral\\\\AddReferral.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport isEqual from 'lodash/isEqual';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport { AddReferralView } from './AddReferral.view';\nimport { postComplexityAddReferral, showModal, hideModal } from 'stores';\nimport * as utils from 'utils';\nimport { useFormActions } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddReferral() {\n  _s();\n\n  var dispatch = useDispatch();\n  var fields = [{\n    name: 'addReferralValue',\n    type: 'text',\n    value: '',\n    validation: Yup.string().trim().required(utils.string.t('validation.required')).max(75, utils.string.t('validation.string.max'))\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      return hideModal();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.add'),\n    handler: function handler(values) {\n      return dispatch(postComplexityAddReferral(values));\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      watch = _useForm.watch,\n      handleSubmit = _useForm.handleSubmit;\n\n  var _useFormActions = useFormActions(actions),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var formValues = watch();\n  var defaultValuesToString = Object.entries(defaultValues).reduce(function (acc, _ref) {\n    var _ref2 = _slicedToArray(_ref, 2),\n        key = _ref2[0],\n        value = _ref2[1];\n\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, (value === null || value === void 0 ? void 0 : value.toString()) || ''));\n  }, {});\n  var formValuesToString = Object.entries(formValues).reduce(function (acc, _ref3) {\n    var _ref4 = _slicedToArray(_ref3, 2),\n        key = _ref4[0],\n        value = _ref4[1];\n\n    return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, (value === null || value === void 0 ? void 0 : value.toString()) || ''));\n  }, {});\n  var isPageEdited = !isEqual(defaultValuesToString, formValuesToString);\n\n  var cancelModal = function cancelModal() {\n    if (isPageEdited) {\n      dispatch(showModal({\n        component: 'CONFIRM',\n        props: {\n          fullWidth: true,\n          title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\n          maxWidth: 'xs',\n          componentProps: {\n            confirmLabel: utils.string.t('app.yes'),\n            cancelLabel: utils.string.t('app.no'),\n            confirmMessage: utils.string.t('claims.complexityRulesManagementDetails.alertModal.subTitle'),\n            buttonColors: {\n              confirm: 'secondary',\n              cancel: 'primary'\n            },\n            submitHandler: function submitHandler() {\n              dispatch(hideModal());\n            },\n            cancelHandler: function cancelHandler() {},\n            handleClose: function handleClose() {}\n          }\n        }\n      }));\n    } else {\n      dispatch(hideModal());\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddReferralView, {\n    fields: fields,\n    control: control,\n    errors: errors,\n    submit: submit,\n    cancel: cancel,\n    handleSubmit: handleSubmit,\n    cancelModal: cancelModal\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddReferral, \"mHXcjYWRe0RZgWG0FdfipzWi+aw=\", false, function () {\n  return [useDispatch, useForm, useFormActions];\n});\n\n_c = AddReferral;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddReferral\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddReferral/AddReferral.js"],"names":["React","useDispatch","Yup","useForm","isEqual","yupResolver","AddReferralView","postComplexityAddReferral","showModal","hideModal","utils","useFormActions","AddReferral","dispatch","fields","name","type","value","validation","string","trim","required","t","max","actions","label","handler","values","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","watch","handleSubmit","cancel","submit","formValues","defaultValuesToString","Object","entries","reduce","acc","key","toString","formValuesToString","isPageEdited","cancelModal","component","props","fullWidth","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","submitHandler","cancelHandler","handleClose"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport isEqual from 'lodash/isEqual';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport { AddReferralView } from './AddReferral.view';\r\nimport { postComplexityAddReferral, showModal, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { useFormActions } from 'hooks';\r\n\r\nexport default function AddReferral() {\r\n  const dispatch = useDispatch();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'addReferralValue',\r\n      type: 'text',\r\n      value: '',\r\n      validation: Yup.string().trim().required(utils.string.t('validation.required')).max(75, utils.string.t('validation.string.max')),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => hideModal(),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.add'),\r\n      handler: (values) => {\r\n        return dispatch(postComplexityAddReferral(values));\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, watch, handleSubmit } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions);\r\n\r\n  const formValues = watch();\r\n\r\n  const defaultValuesToString = Object.entries(defaultValues).reduce((acc, [key, value]) => {\r\n    return { ...acc, [key]: value?.toString() || '' };\r\n  }, {});\r\n\r\n  const formValuesToString = Object.entries(formValues).reduce((acc, [key, value]) => {\r\n    return { ...acc, [key]: value?.toString() || '' };\r\n  }, {});\r\n\r\n  const isPageEdited = !isEqual(defaultValuesToString, formValuesToString);\r\n\r\n  const cancelModal = () => {\r\n    if (isPageEdited) {\r\n      dispatch(\r\n        showModal({\r\n          component: 'CONFIRM',\r\n          props: {\r\n            fullWidth: true,\r\n            title: utils.string.t('claims.complexityRulesManagementDetails.alertModal.title'),\r\n            maxWidth: 'xs',\r\n            componentProps: {\r\n              confirmLabel: utils.string.t('app.yes'),\r\n              cancelLabel: utils.string.t('app.no'),\r\n              confirmMessage: utils.string.t('claims.complexityRulesManagementDetails.alertModal.subTitle'),\r\n              buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n              submitHandler: () => {\r\n                dispatch(hideModal());\r\n              },\r\n              cancelHandler: () => {},\r\n              handleClose: () => {},\r\n            },\r\n          },\r\n        })\r\n      );\r\n    } else {\r\n      dispatch(hideModal());\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddReferralView\r\n      fields={fields}\r\n      control={control}\r\n      errors={errors}\r\n      submit={submit}\r\n      cancel={cancel}\r\n      handleSubmit={handleSubmit}\r\n      cancelModal={cancelModal}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}