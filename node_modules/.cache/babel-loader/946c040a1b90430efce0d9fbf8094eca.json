{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\SingleSelect\\\\SingleSelect.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nimport styles from './SingleSelect.styles';\nimport { SingleSelectView } from './SingleSelect.view'; //mui\n\nimport CachedIcon from '@material-ui/icons/Cached';\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSingleSelect.defaultProps = {\n  id: PropTypes.string.isRequired,\n  value: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  }),\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.string.isRequired,\n    toolTipTitle: PropTypes.string\n  })).isRequired,\n  placeholder: PropTypes.string,\n  handlers: PropTypes.shape({\n    onClear: PropTypes.func.isRequired,\n    onToggleOption: PropTypes.func.isRequired\n  })\n};\nexport default function SingleSelect(_ref) {\n  _s();\n\n  var id = _ref.id,\n      options = _ref.options,\n      value = _ref.value,\n      placeholder = _ref.placeholder,\n      handlers = _ref.handlers,\n      props = _objectWithoutProperties(_ref, [\"id\", \"options\", \"value\", \"placeholder\", \"handlers\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'SingleSelect'\n  })();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      query = _useState2[0],\n      setQuery = _useState2[1];\n  /** Triggers on key press for searching the list */\n\n\n  var onKeyStroke = function onKeyStroke(value) {\n    setQuery(value);\n  };\n  /** Clear the typed characters on the search textbox value */\n\n\n  var onClear = function onClear(reset) {\n    return function (event) {\n      setQuery('');\n      reset();\n    };\n  };\n  /** Triggering the handler function  to pass selected value from the list to parent component */\n\n\n  var onToggleOption = function onToggleOption(item) {\n    if (utils.generic.isFunction(handlers.onToggleOption)) {\n      handlers.onToggleOption(item);\n    }\n  };\n\n  var field = {\n    name: \"single-select-search-drp-\".concat(id),\n    placeholder: placeholder || '',\n    defaultValue: '',\n    onChange: function onChange(value) {\n      onKeyStroke(value ? value.trim() : '');\n      return value;\n    },\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }; // abort\n\n  if (utils.generic.isInvalidOrEmptyArray(options)) return /*#__PURE__*/_jsxDEV(Typography, {\n    variant: \"body2\",\n    className: classes.loading,\n    children: [utils.string.t('app.loading'), /*#__PURE__*/_jsxDEV(CachedIcon, {\n      className: classes.loadingIcon\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 7\n  }, this);\n  var optionsFiltered = options.filter(function (value) {\n    var name = ((value === null || value === void 0 ? void 0 : value.name) || '').toLowerCase();\n    return query ? name.includes(query.toLowerCase()) : true;\n  });\n  return /*#__PURE__*/_jsxDEV(SingleSelectView, _objectSpread({\n    id: \"single-select-drp-\".concat(id),\n    field: field,\n    query: query,\n    options: optionsFiltered,\n    selectedValue: value ? value : null,\n    handlers: {\n      onClear: onClear,\n      onToggleOption: onToggleOption\n    }\n  }, props), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SingleSelect, \"qO/HZodsWTfJhuzZtdaxiosei2U=\");\n\n_c = SingleSelect;\nSingleSelect.displayName = \"SingleSelect\";\nSingleSelect.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"SingleSelect\",\n  \"props\": {\n    \"id\": {\n      \"defaultValue\": {\n        \"value\": \"PropTypes.string.isRequired\",\n        \"computed\": true\n      },\n      \"required\": false\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"PropTypes.shape({\\r\\n  id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\\r\\n  name: PropTypes.string,\\r\\n})\",\n        \"computed\": true\n      },\n      \"required\": false\n    },\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"PropTypes.arrayOf(\\r\\n  PropTypes.shape({\\r\\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\\r\\n    name: PropTypes.string.isRequired,\\r\\n    toolTipTitle: PropTypes.string,\\r\\n  })\\r\\n).isRequired\",\n        \"computed\": true\n      },\n      \"required\": false\n    },\n    \"placeholder\": {\n      \"defaultValue\": {\n        \"value\": \"PropTypes.string\",\n        \"computed\": true\n      },\n      \"required\": false\n    },\n    \"handlers\": {\n      \"defaultValue\": {\n        \"value\": \"PropTypes.shape({\\r\\n  onClear: PropTypes.func.isRequired,\\r\\n  onToggleOption: PropTypes.func.isRequired,\\r\\n})\",\n        \"computed\": true\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\SingleSelect\\\\SingleSelect.js\"] = {\n    name: \"SingleSelect\",\n    docgenInfo: SingleSelect.__docgenInfo,\n    path: \"src\\\\components\\\\SingleSelect\\\\SingleSelect.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"SingleSelect\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SingleSelect/SingleSelect.js"],"names":["React","useState","PropTypes","utils","styles","SingleSelectView","CachedIcon","makeStyles","Typography","SingleSelect","defaultProps","id","string","isRequired","value","shape","oneOfType","number","name","options","arrayOf","toolTipTitle","placeholder","handlers","onClear","func","onToggleOption","props","classes","query","setQuery","onKeyStroke","reset","event","item","generic","isFunction","field","defaultValue","onChange","trim","muiComponentProps","autoComplete","isInvalidOrEmptyArray","loading","t","loadingIcon","optionsFiltered","filter","toLowerCase","includes"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport styles from './SingleSelect.styles';\r\nimport { SingleSelectView } from './SingleSelect.view';\r\n\r\n//mui\r\nimport CachedIcon from '@material-ui/icons/Cached';\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nSingleSelect.defaultProps = {\r\n  id: PropTypes.string.isRequired,\r\n  value: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    name: PropTypes.string,\r\n  }),\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.string.isRequired,\r\n      toolTipTitle: PropTypes.string,\r\n    })\r\n  ).isRequired,\r\n  placeholder: PropTypes.string,\r\n  handlers: PropTypes.shape({\r\n    onClear: PropTypes.func.isRequired,\r\n    onToggleOption: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default function SingleSelect({ id, options, value, placeholder, handlers, ...props }) {\r\n  const classes = makeStyles(styles, { name: 'SingleSelect' })();\r\n  const [query, setQuery] = useState('');\r\n\r\n  /** Triggers on key press for searching the list */\r\n  const onKeyStroke = (value) => {\r\n    setQuery(value);\r\n  };\r\n\r\n  /** Clear the typed characters on the search textbox value */\r\n  const onClear = (reset) => (event) => {\r\n    setQuery('');\r\n    reset();\r\n  };\r\n\r\n  /** Triggering the handler function  to pass selected value from the list to parent component */\r\n  const onToggleOption = (item) => {\r\n    if (utils.generic.isFunction(handlers.onToggleOption)) {\r\n      handlers.onToggleOption(item);\r\n    }\r\n  };\r\n\r\n  const field = {\r\n    name: `single-select-search-drp-${id}`,\r\n    placeholder: placeholder || '',\r\n    defaultValue: '',\r\n    onChange: (value) => {\r\n      onKeyStroke(value ? value.trim() : '');\r\n      return value;\r\n    },\r\n    muiComponentProps: {\r\n      autoComplete: 'off',\r\n    },\r\n  };\r\n\r\n  // abort\r\n  if (utils.generic.isInvalidOrEmptyArray(options))\r\n    return (\r\n      <Typography variant=\"body2\" className={classes.loading}>\r\n        {utils.string.t('app.loading')}\r\n        <CachedIcon className={classes.loadingIcon} />\r\n      </Typography>\r\n    );\r\n\r\n  const optionsFiltered = options.filter((value) => {\r\n    const name = (value?.name || '').toLowerCase();\r\n    return query ? name.includes(query.toLowerCase()) : true;\r\n  });\r\n  return (\r\n    <SingleSelectView\r\n      id={`single-select-drp-${id}`}\r\n      field={field}\r\n      query={query}\r\n      options={optionsFiltered}\r\n      selectedValue={value ? value : null}\r\n      handlers={{\r\n        onClear,\r\n        onToggleOption,\r\n      }}\r\n      {...props}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}