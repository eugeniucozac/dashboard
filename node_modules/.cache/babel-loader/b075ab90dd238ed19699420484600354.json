{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport { DrawerComponent, DmsWidget } from 'components';\nimport { selectorDmsViewFiles, selectDmsDocDetails, getDmsDocumentList } from 'stores';\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLoss.propTypes = {\n  steps: PropTypes.array.isRequired,\n  stepsForms: PropTypes.array.isRequired,\n  findDirtyForm: PropTypes.func,\n  initialFormStatus: PropTypes.array,\n  currentStep: PropTypes.number\n};\nClaimsRegisterNewLoss.defaultProps = {\n  currentStep: 0,\n  findDirtyForm: function findDirtyForm() {},\n  initialFormStatus: []\n};\nexport default function ClaimsRegisterNewLoss(_ref) {\n  _s();\n\n  var currentStep = _ref.currentStep,\n      steps = _ref.steps,\n      stepsForms = _ref.stepsForms,\n      findDirtyForm = _ref.findDirtyForm,\n      initialFormStatus = _ref.initialFormStatus;\n  var dispatch = useDispatch();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stepFields = _useState2[0],\n      setStepFields = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      saveStatus = _useState10[0],\n      setSaveStatus = _useState10[1];\n\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n\n  var handleStep = function handleStep(step) {\n    if (activeStep < step) {\n      var _isFormsEdited$active, _isFormsEdited$active2, _isFormsEdited, _isFormsEdited2;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active = isFormsEdited[activeStep]) === null || _isFormsEdited$active === void 0 ? void 0 : _isFormsEdited$active[\"formEditedStatus\"]) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active2 = isFormsEdited[activeStep]) === null || _isFormsEdited$active2 === void 0 ? void 0 : _isFormsEdited$active2[\"isSubmitted\"]) && !(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited = isFormsEdited[step - 1]) === null || _isFormsEdited === void 0 ? void 0 : _isFormsEdited[\"formEditedStatus\"]) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited2 = isFormsEdited[step - 1]) === null || _isFormsEdited2 === void 0 ? void 0 : _isFormsEdited2[\"isSubmitted\"])) {\n        setActiveStep(step);\n      }\n    } else if (activeStep > step) {\n      var _isFormsEdited$active3;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active3 = isFormsEdited[activeStep]) === null || _isFormsEdited$active3 === void 0 ? void 0 : _isFormsEdited$active3[\"formEditedStatus\"])) {\n        setActiveStep(step);\n      }\n    }\n  };\n\n  var handleNext = function handleNext() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState === null || formState === void 0 ? void 0 : formState.map(function (form) {\n      var _formState$activeStep;\n\n      if ((form === null || form === void 0 ? void 0 : form.id) > activeStep && (formState === null || formState === void 0 ? void 0 : (_formState$activeStep = formState[activeStep]) === null || _formState$activeStep === void 0 ? void 0 : _formState$activeStep[\"formEditedStatus\"])) {\n        form[\"isSubmitted\"] = false;\n      }\n    });\n    formState[activeStep][\"isSubmitted\"] = true;\n\n    if (activeStep === 0) {\n      var docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.lossDocDetails);\n      dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\n    }\n\n    if (activeStep === 1) {\n      var _docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails);\n\n      dispatch(getDmsDocumentList('LINK_POLICY', _docList));\n    }\n\n    if (activeStep === 2) {\n      var _docList2 = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.claimsDocDetails);\n\n      dispatch(getDmsDocumentList('CLAIM_INFORMATION', _docList2));\n    }\n\n    if (activeStep !== 1) {\n      formState[activeStep][\"formEditedStatus\"] = false;\n      setFormEditedStatus(formState);\n      setActiveStep(activeStep + 1);\n    } else {\n      formState[activeStep][\"formEditedStatus\"] = true;\n      setFormEditedStatus(formState);\n      setSaveStatus(new Date().getTime());\n    }\n  };\n\n  var handleBack = function handleBack() {\n    var _isFormsEdited$active4;\n\n    if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active4 = isFormsEdited[activeStep]) === null || _isFormsEdited$active4 === void 0 ? void 0 : _isFormsEdited$active4[\"formEditedStatus\"])) {\n      setActiveStep(activeStep - 1);\n    }\n  };\n\n  var handleSave = function handleSave() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep][\"formEditedStatus\"] = false;\n    formState[activeStep][\"isSubmitted\"] = true;\n    formState === null || formState === void 0 ? void 0 : formState.map(function (frm) {\n      return (frm === null || frm === void 0 ? void 0 : frm.id) > activeStep ? frm[\"isSubmitted\"] = false : frm[\"isSubmitted\"] = true;\n    });\n    setFormEditedStatus(formState);\n    if (activeStep === 1) setSaveStatus(new Date().getTime());\n  };\n\n  var handleFormStatus = function handleFormStatus() {\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep][\"formEditedStatus\"] = true;\n    formState[activeStep][\"isSubmitted\"] = false;\n    setFormEditedStatus(formState);\n  };\n\n  useEffect(function () {\n    currentStep && setActiveStep(currentStep);\n    setStepFields(steps);\n    setFormEditedStatus(stepsForms);\n    return function () {\n      findDirtyForm(initialFormStatus);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    findDirtyForm(isFormsEdited);\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ClaimsRegisterNewLossView, {\n      activeStep: activeStep,\n      setActiveStep: setActiveStep,\n      steps: steps,\n      progress: progress,\n      handleStep: handleStep,\n      isFormsEdited: isFormsEdited,\n      isAllStepsCompleted: false,\n      handleFormStatus: handleFormStatus,\n      handleNext: handleNext,\n      handleBack: handleBack,\n      handleSave: handleSave,\n      setFormEditedStatus: setFormEditedStatus,\n      saveStatus: saveStatus,\n      setSaveStatus: setSaveStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 13\n    }, this), /*#__PURE__*/_jsxDEV(DrawerComponent, {\n      isDrawerOpen: true,\n      children: /*#__PURE__*/_jsxDEV(DmsWidget, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 17\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 13\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClaimsRegisterNewLoss, \"ocR1JkKDqH+qmnQqz0jGIwv3e+o=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ClaimsRegisterNewLoss;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLoss\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","DrawerComponent","DmsWidget","selectorDmsViewFiles","selectDmsDocDetails","getDmsDocumentList","ClaimsRegisterNewLossView","ClaimsRegisterNewLoss","propTypes","steps","array","isRequired","stepsForms","findDirtyForm","func","initialFormStatus","currentStep","number","defaultProps","dispatch","stepFields","setStepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","saveStatus","setSaveStatus","viewDocumentList","savedDmsDocList","handleStep","step","handleNext","Date","getTime","formState","map","form","id","docList","length","lossDocDetails","linkPolicyDocDetails","claimsDocDetails","handleBack","handleSave","frm","handleFormStatus"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,eAAT,EAA0BC,SAA1B,QAA2C,YAA3C;AACA,SAASC,oBAAT,EAA+BC,mBAA/B,EAAoDC,kBAApD,QAA8E,QAA9E;AACA,OAAOC,yBAAP,MAAsC,8BAAtC;;;AAEAC,qBAAqB,CAACC,SAAtB,GAAkC;AAC9BC,EAAAA,KAAK,EAAEX,SAAS,CAACY,KAAV,CAAgBC,UADO;AAE9BC,EAAAA,UAAU,EAAEd,SAAS,CAACY,KAAV,CAAgBC,UAFE;AAG9BE,EAAAA,aAAa,EAAEf,SAAS,CAACgB,IAHK;AAI9BC,EAAAA,iBAAiB,EAAEjB,SAAS,CAACY,KAJC;AAK9BM,EAAAA,WAAW,EAAElB,SAAS,CAACmB;AALO,CAAlC;AAQAV,qBAAqB,CAACW,YAAtB,GAAqC;AACjCF,EAAAA,WAAW,EAAE,CADoB;AAEjCH,EAAAA,aAAa,EAAE,yBAAM,CAAG,CAFS;AAGjCE,EAAAA,iBAAiB,EAAE;AAHc,CAArC;AAMA,eAAe,SAASR,qBAAT,OAAqG;AAAA;;AAAA,MAApES,WAAoE,QAApEA,WAAoE;AAAA,MAAvDP,KAAuD,QAAvDA,KAAuD;AAAA,MAAhDG,UAAgD,QAAhDA,UAAgD;AAAA,MAApCC,aAAoC,QAApCA,aAAoC;AAAA,MAArBE,iBAAqB,QAArBA,iBAAqB;AAChH,MAAMI,QAAQ,GAAGpB,WAAW,EAA5B;;AADgH,kBAE5EH,QAAQ,CAAC,EAAD,CAFoE;AAAA;AAAA,MAEzGwB,UAFyG;AAAA,MAE7FC,aAF6F;;AAAA,mBAG5EzB,QAAQ,CAAC,CAAD,CAHoE;AAAA;AAAA,MAGzG0B,UAHyG;AAAA,MAG7FC,aAH6F;;AAAA,mBAIhF3B,QAAQ,CAAC,CAAD,CAJwE;AAAA;AAAA,MAIzG4B,QAJyG;AAAA,MAI/FC,WAJ+F;;AAAA,mBAKnE7B,QAAQ,CAAC,EAAD,CAL2D;AAAA;AAAA,MAKzG8B,aALyG;AAAA,MAK1FC,mBAL0F;;AAAA,mBAM5E/B,QAAQ,EANoE;AAAA;AAAA,MAMzGgC,UANyG;AAAA,MAM7FC,aAN6F;;AAOhH,MAAMC,gBAAgB,GAAG9B,WAAW,CAACG,oBAAD,CAApC;AACA,MAAM4B,eAAe,GAAG/B,WAAW,CAACI,mBAAD,CAAnC;;AAEA,MAAM4B,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AACzB,QAAIX,UAAU,GAAGW,IAAjB,EAAuB;AAAA;;AACnB,UAAI,EAACP,aAAD,aAACA,aAAD,gDAACA,aAAa,CAAGJ,UAAH,CAAd,0DAAC,sBAA8B,kBAA9B,CAAD,MACGI,aADH,aACGA,aADH,iDACGA,aAAa,CAAGJ,UAAH,CADhB,2DACG,uBAA8B,aAA9B,CADH,KAGC,EAACI,aAAD,aAACA,aAAD,yCAACA,aAAa,CAAGO,IAAI,GAAG,CAAV,CAAd,mDAAC,eAA4B,kBAA5B,CAAD,MAAoDP,aAApD,aAAoDA,aAApD,0CAAoDA,aAAa,CAAGO,IAAI,GAAG,CAAV,CAAjE,oDAAoD,gBAA4B,aAA5B,CAApD,CAHL,EAIE;AACEV,QAAAA,aAAa,CAACU,IAAD,CAAb;AACH;AACJ,KARD,MASK,IAAIX,UAAU,GAAGW,IAAjB,EAAuB;AAAA;;AACxB,UAAI,EAACP,aAAD,aAACA,aAAD,iDAACA,aAAa,CAAGJ,UAAH,CAAd,2DAAC,uBAA8B,kBAA9B,CAAD,CAAJ,EAAwD;AACpDC,QAAAA,aAAa,CAACU,IAAD,CAAb;AACH;AACJ;AAEJ,GAhBD;;AAkBA,MAAMC,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBL,IAAAA,aAAa,CAAC,IAAIM,IAAJ,GAAWC,OAAX,EAAD,CAAb;AACA,QAAMC,SAAS,GAAGX,aAAa,CAACY,GAAd,CAAkB,UAACC,IAAD;AAAA,+BAAgBA,IAAhB;AAAA,KAAlB,CAAlB;AACAF,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,GAAX,CAAe,UAAAC,IAAI,EAAI;AAAA;;AACnB,UAAI,CAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,YAAAA,IAAI,CAAEC,EAAN,IAAWlB,UAAX,KAAyBe,SAAzB,aAAyBA,SAAzB,gDAAyBA,SAAS,CAAGf,UAAH,CAAlC,0DAAyB,sBAA0B,kBAA1B,CAAzB,CAAJ,EAA4E;AACxEiB,QAAAA,IAAI,CAAC,aAAD,CAAJ,GAAsB,KAAtB;AACH;AACJ,KAJD;AAKAF,IAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,aAAtB,IAAuC,IAAvC;;AACA,QAAIA,UAAU,KAAK,CAAnB,EAAsB;AAClB,UAAMmB,OAAO,GAAGX,gBAAgB,CAACY,MAAjB,GAA0B,CAA1B,sBAAkCZ,gBAAlC,uBAA0DC,eAA1D,aAA0DA,eAA1D,uBAA0DA,eAAe,CAAEY,cAA3E,CAAhB;AACAxB,MAAAA,QAAQ,CAACd,kBAAkB,CAAC,kBAAD,EAAqBoC,OAArB,CAAnB,CAAR;AACH;;AACD,QAAInB,UAAU,KAAK,CAAnB,EAAsB;AAClB,UAAMmB,QAAO,GAAGX,gBAAgB,CAACY,MAAjB,GAA0B,CAA1B,sBAAkCZ,gBAAlC,uBAA0DC,eAA1D,aAA0DA,eAA1D,uBAA0DA,eAAe,CAAEa,oBAA3E,CAAhB;;AACAzB,MAAAA,QAAQ,CAACd,kBAAkB,CAAC,aAAD,EAAgBoC,QAAhB,CAAnB,CAAR;AACH;;AACD,QAAInB,UAAU,KAAK,CAAnB,EAAsB;AAClB,UAAMmB,SAAO,GAAGX,gBAAgB,CAACY,MAAjB,GAA0B,CAA1B,sBAAkCZ,gBAAlC,uBAA0DC,eAA1D,aAA0DA,eAA1D,uBAA0DA,eAAe,CAAEc,gBAA3E,CAAhB;;AACA1B,MAAAA,QAAQ,CAACd,kBAAkB,CAAC,mBAAD,EAAsBoC,SAAtB,CAAnB,CAAR;AACH;;AACD,QAAInB,UAAU,KAAK,CAAnB,EAAsB;AAClBe,MAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,kBAAtB,IAA4C,KAA5C;AACAK,MAAAA,mBAAmB,CAACU,SAAD,CAAnB;AACAd,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH,KAJD,MAIO;AACHe,MAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,kBAAtB,IAA4C,IAA5C;AACAK,MAAAA,mBAAmB,CAACU,SAAD,CAAnB;AACAR,MAAAA,aAAa,CAAC,IAAIM,IAAJ,GAAWC,OAAX,EAAD,CAAb;AACH;AACJ,GA9BD;;AAgCA,MAAMU,UAAU,GAAG,SAAbA,UAAa,GAAM;AAAA;;AACrB,QAAI,EAACpB,aAAD,aAACA,aAAD,iDAACA,aAAa,CAAGJ,UAAH,CAAd,2DAAC,uBAA8B,kBAA9B,CAAD,CAAJ,EAAwD;AACpDC,MAAAA,aAAa,CAACD,UAAU,GAAG,CAAd,CAAb;AACH;AACJ,GAJD;;AAMA,MAAMyB,UAAU,GAAG,SAAbA,UAAa,GAAM;AACrBlB,IAAAA,aAAa,CAAC,IAAIM,IAAJ,GAAWC,OAAX,EAAD,CAAb;AACA,QAAMC,SAAS,GAAGX,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEY,GAAf,CAAmB,UAACC,IAAD;AAAA,+BAAgBA,IAAhB;AAAA,KAAnB,CAAlB;AACAF,IAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,kBAAtB,IAA4C,KAA5C;AACAe,IAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,aAAtB,IAAuC,IAAvC;AACAe,IAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAEC,GAAX,CAAe,UAAAU,GAAG;AAAA,aAAI,CAAAA,GAAG,SAAH,IAAAA,GAAG,WAAH,YAAAA,GAAG,CAAER,EAAL,IAAUlB,UAAV,GAAuB0B,GAAG,CAAC,aAAD,CAAH,GAAqB,KAA5C,GAAoDA,GAAG,CAAC,aAAD,CAAH,GAAqB,IAA7E;AAAA,KAAlB;AACArB,IAAAA,mBAAmB,CAACU,SAAD,CAAnB;AACA,QAAIf,UAAU,KAAK,CAAnB,EACIO,aAAa,CAAC,IAAIM,IAAJ,GAAWC,OAAX,EAAD,CAAb;AACP,GATD;;AAWA,MAAMa,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC3B,QAAMZ,SAAS,GAAGX,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEY,GAAf,CAAmB,UAACC,IAAD;AAAA,+BAAgBA,IAAhB;AAAA,KAAnB,CAAlB;AACAF,IAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,kBAAtB,IAA4C,IAA5C;AACAe,IAAAA,SAAS,CAACf,UAAD,CAAT,CAAsB,aAAtB,IAAuC,KAAvC;AACAK,IAAAA,mBAAmB,CAACU,SAAD,CAAnB;AACH,GALD;;AAMAxC,EAAAA,SAAS,CAAC,YAAM;AACZmB,IAAAA,WAAW,IAAIO,aAAa,CAACP,WAAD,CAA5B;AACAK,IAAAA,aAAa,CAACZ,KAAD,CAAb;AACAkB,IAAAA,mBAAmB,CAACf,UAAD,CAAnB;AACA,WAAO,YAAM;AACTC,MAAAA,aAAa,CAACE,iBAAD,CAAb;AACH,KAFD;AAGH,GAPQ,EAON,EAPM,CAAT,CAnFgH,CA0FvG;;AAETlB,EAAAA,SAAS,CAAC,YAAM;AACZ4B,IAAAA,WAAW,CAACH,UAAU,GAAIA,UAAU,GAAGF,UAAU,CAACsB,MAAzB,GAAmC,GAAtC,GAA4C,CAAvD,CAAX;AACH,GAFQ,EAEN,CAACpB,UAAD,CAFM,CAAT,CA5FgH,CA8F9F;;AAElBzB,EAAAA,SAAS,CAAC,YAAM;AACZgB,IAAAA,aAAa,CAACa,aAAD,CAAb;AACH,GAFQ,EAEN,CAACA,aAAD,CAFM,CAAT,CAhGgH,CAkG5F;;AAEpB,sBACI;AAAA,4BACI,QAAC,yBAAD;AACI,MAAA,UAAU,EAAEJ,UADhB;AAEI,MAAA,aAAa,EAAEC,aAFnB;AAGI,MAAA,KAAK,EAAEd,KAHX;AAII,MAAA,QAAQ,EAAEe,QAJd;AAKI,MAAA,UAAU,EAAEQ,UALhB;AAMI,MAAA,aAAa,EAAEN,aANnB;AAOI,MAAA,mBAAmB,EAAE,KAPzB;AAQI,MAAA,gBAAgB,EAAEuB,gBARtB;AASI,MAAA,UAAU,EAAEf,UAThB;AAUI,MAAA,UAAU,EAAEY,UAVhB;AAWI,MAAA,UAAU,EAAEC,UAXhB;AAYI,MAAA,mBAAmB,EAAEpB,mBAZzB;AAaI,MAAA,UAAU,EAAEC,UAbhB;AAcI,MAAA,aAAa,EAAEC;AAdnB;AAAA;AAAA;AAAA;AAAA,YADJ,eAiBI,QAAC,eAAD;AAAiB,MAAA,YAAY,MAA7B;AAAA,6BACI,QAAC,SAAD;AAAA;AAAA;AAAA;AAAA;AADJ;AAAA;AAAA;AAAA;AAAA,YAjBJ;AAAA,kBADJ;AAuBH;;GA3HuBtB,qB;UACHR,W,EAMQC,W,EACDA,W;;;KARJO,qB;AA2HvB","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport { DrawerComponent, DmsWidget } from 'components';\r\nimport { selectorDmsViewFiles, selectDmsDocDetails, getDmsDocumentList } from 'stores';\r\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\r\n\r\nClaimsRegisterNewLoss.propTypes = {\r\n    steps: PropTypes.array.isRequired,\r\n    stepsForms: PropTypes.array.isRequired,\r\n    findDirtyForm: PropTypes.func,\r\n    initialFormStatus: PropTypes.array,\r\n    currentStep: PropTypes.number\r\n};\r\n\r\nClaimsRegisterNewLoss.defaultProps = {\r\n    currentStep: 0,\r\n    findDirtyForm: () => { },\r\n    initialFormStatus: []\r\n}\r\n\r\nexport default function ClaimsRegisterNewLoss({ currentStep, steps, stepsForms, findDirtyForm, initialFormStatus }) {\r\n    const dispatch = useDispatch();\r\n    const [stepFields, setStepFields] = useState([]);\r\n    const [activeStep, setActiveStep] = useState(0);\r\n    const [progress, setProgress] = useState(0);\r\n    const [isFormsEdited, setFormEditedStatus] = useState([])\r\n    const [saveStatus, setSaveStatus] = useState();\r\n    const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n    const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n\r\n    const handleStep = (step) => {\r\n        if (activeStep < step) {\r\n            if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]\r\n                && isFormsEdited?.[activeStep]?.[\"isSubmitted\"]\r\n                &&\r\n                (!isFormsEdited?.[step - 1]?.[\"formEditedStatus\"] && isFormsEdited?.[step - 1]?.[\"isSubmitted\"])\r\n            ) {\r\n                setActiveStep(step);\r\n            }\r\n        }\r\n        else if (activeStep > step) {\r\n            if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]) {\r\n                setActiveStep(step);\r\n            }\r\n        }\r\n\r\n    };\r\n\r\n    const handleNext = () => {\r\n        setSaveStatus(new Date().getTime());\r\n        const formState = isFormsEdited.map((form) => ({ ...form }))\r\n        formState?.map(form => {\r\n            if (form?.id > activeStep && formState?.[activeStep]?.[\"formEditedStatus\"]) {\r\n                form[\"isSubmitted\"] = false\r\n            }\r\n        })\r\n        formState[activeStep][\"isSubmitted\"] = true;\r\n        if (activeStep === 0) {\r\n            const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.lossDocDetails];\r\n            dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\r\n        }\r\n        if (activeStep === 1) {\r\n            const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.linkPolicyDocDetails];\r\n            dispatch(getDmsDocumentList('LINK_POLICY', docList));\r\n        }\r\n        if (activeStep === 2) {\r\n            const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.claimsDocDetails];\r\n            dispatch(getDmsDocumentList('CLAIM_INFORMATION', docList));\r\n        }\r\n        if (activeStep !== 1) {\r\n            formState[activeStep][\"formEditedStatus\"] = false;\r\n            setFormEditedStatus(formState);\r\n            setActiveStep(activeStep + 1);\r\n        } else {\r\n            formState[activeStep][\"formEditedStatus\"] = true;\r\n            setFormEditedStatus(formState);\r\n            setSaveStatus(new Date().getTime());\r\n        }\r\n    }\r\n\r\n    const handleBack = () => {\r\n        if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]) {\r\n            setActiveStep(activeStep - 1)\r\n        }\r\n    }\r\n\r\n    const handleSave = () => {\r\n        setSaveStatus(new Date().getTime());\r\n        const formState = isFormsEdited?.map((form) => ({ ...form }))\r\n        formState[activeStep][\"formEditedStatus\"] = false;\r\n        formState[activeStep][\"isSubmitted\"] = true;\r\n        formState?.map(frm => frm?.id > activeStep ? frm[\"isSubmitted\"] = false : frm[\"isSubmitted\"] = true)\r\n        setFormEditedStatus(formState)\r\n        if (activeStep === 1)\r\n            setSaveStatus(new Date().getTime());\r\n    }\r\n\r\n    const handleFormStatus = () => {\r\n        const formState = isFormsEdited?.map((form) => ({ ...form }))\r\n        formState[activeStep][\"formEditedStatus\"] = true;\r\n        formState[activeStep][\"isSubmitted\"] = false;\r\n        setFormEditedStatus(formState)\r\n    }\r\n    useEffect(() => {\r\n        currentStep && setActiveStep(currentStep)\r\n        setStepFields(steps);\r\n        setFormEditedStatus(stepsForms)\r\n        return () => {\r\n            findDirtyForm(initialFormStatus)\r\n        };\r\n    }, []);  // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n    }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    useEffect(() => {\r\n        findDirtyForm(isFormsEdited)\r\n    }, [isFormsEdited]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n    return (\r\n        <>\r\n            <ClaimsRegisterNewLossView\r\n                activeStep={activeStep}\r\n                setActiveStep={setActiveStep}\r\n                steps={steps}\r\n                progress={progress}\r\n                handleStep={handleStep}\r\n                isFormsEdited={isFormsEdited}\r\n                isAllStepsCompleted={false}\r\n                handleFormStatus={handleFormStatus}\r\n                handleNext={handleNext}\r\n                handleBack={handleBack}\r\n                handleSave={handleSave}\r\n                setFormEditedStatus={setFormEditedStatus}\r\n                saveStatus={saveStatus}\r\n                setSaveStatus={setSaveStatus}\r\n            />\r\n            <DrawerComponent isDrawerOpen>\r\n                <DmsWidget />\r\n            </DrawerComponent>\r\n        </>\r\n    );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}