{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseBureau\\\\PremiumProcessingCaseBureau.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch } from 'react-redux';\nimport * as classnames from 'classnames'; //app\n\nimport styles from './PremiumProcessingCaseBureau.styles';\nimport { useFlexiColumns } from 'hooks';\nimport { TableCell, TableHead, FormDate, FormText, MultiSelect, SelectPopover, Button, PreventNavigation } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { hideModal, deleteBureauInsurerDetails } from 'stores';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles, Table, TableBody, TableRow, TableContainer, Box, Grid } from '@material-ui/core';\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseBureauView.propTypes = {\n  columnsData: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.node.isRequired\n  })).isRequired,\n  handlers: PropTypes.shape({\n    handleInputChange: PropTypes.func.isRequired,\n    handleDatePickerUpdate: PropTypes.func.isRequired,\n    toggleMultiSelectOption: PropTypes.func.isRequired,\n    getSelectedBureauLabel: PropTypes.func.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    showAlert: PropTypes.func.isRequired,\n    handleCancel: PropTypes.func.isRequired,\n    handleRemoveRow: PropTypes.func.isRequired\n  }).isRequired,\n  bureauInsurersDetails: PropTypes.object.isRequired,\n  bureauList: PropTypes.array.isRequired,\n  hasEditPermission: PropTypes.bool.isRequired,\n  isCompletedStage: PropTypes.bool,\n  isRejectedStage: PropTypes.bool,\n  taskId: PropTypes.string.isRequired,\n  isEdited: PropTypes.bool.isRequired,\n  isDuplicateWorkRefNo: PropTypes.string,\n  isDuplicateWorkRefNoInDb: PropTypes.array,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseBureauView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var columnsData = _ref.columnsData,\n      bureauInsurersDetails = _ref.bureauInsurersDetails,\n      hasEditPermission = _ref.hasEditPermission,\n      bureauList = _ref.bureauList,\n      handlers = _ref.handlers,\n      taskId = _ref.taskId,\n      isEdited = _ref.isEdited,\n      isDuplicateWorkRefNo = _ref.isDuplicateWorkRefNo,\n      isDuplicateWorkRefNoInDb = _ref.isDuplicateWorkRefNoInDb,\n      isCompletedStage = _ref.isCompletedStage,\n      isRejectedStage = _ref.isRejectedStage,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCaseBureau'\n  })();\n\n  var _useFlexiColumns = useFlexiColumns(columnsData),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps;\n\n  var defaultValues = utils.form.getInitialValues([]);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      allowedUrls = _useState2[0],\n      setAllowedUrls = _useState2[1];\n\n  useEffect(function () {\n    if (taskId) {\n      setAllowedUrls([\"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_CASE_DETAILS), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_DOCUMENTS), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_NOTES), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_RFI), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_HISTORY), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_BUREAU), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_NON_BUREAU), \"\".concat(config.routes.premiumProcessing.case, \"/\").concat(taskId, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS, \"/\").concat(constants.PREMIUM_PROCESSING_TAB_CLIENT)]);\n    }\n  }, [taskId]);\n\n  var addRow = function addRow(insurer, index) {\n    var _bureauInsurersDetail, _bureauInsurersDetail3, _bureauInsurersDetail4, _bureauInsurersDetail5, _bureauInsurersDetail6, _bureauInsurersDetail7, _bureauInsurersDetail8, _bureauInsurersDetail9, _bureauInsurersDetail10, _bureauInsurersDetail11, _bureauInsurersDetail12, _bureauInsurersDetail13, _bureauInsurersDetail14, _bureauInsurersDetail15, _bureauInsurersDetail16;\n\n    if (index === 'increment') {\n      index = Object.keys(bureauInsurersDetails).length - 1;\n    }\n\n    var isDuplicateEnteredWorkPackageRef = (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail = bureauInsurersDetails[index]) === null || _bureauInsurersDetail === void 0 ? void 0 : _bureauInsurersDetail.workPackageRefNumber) === isDuplicateWorkRefNo;\n    var isDuplicateInDbWorkPackageRef = isDuplicateWorkRefNoInDb === null || isDuplicateWorkRefNoInDb === void 0 ? void 0 : isDuplicateWorkRefNoInDb.find(function (workPackage) {\n      var _bureauInsurersDetail2;\n\n      return workPackage.toLowerCase() === (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail2 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail2 === void 0 ? void 0 : _bureauInsurersDetail2.workPackageRefNumber.toLowerCase());\n    });\n    var date = (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail3 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail3 === void 0 ? void 0 : _bureauInsurersDetail3.date) || null;\n    return /*#__PURE__*/_jsxDEV(TableRow, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('workPackageRefNumber')), {}, {\n        children: /*#__PURE__*/_jsxDEV(FormText, {\n          id: index,\n          name: index,\n          value: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail4 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail4 === void 0 ? void 0 : _bureauInsurersDetail4.workPackageRefNumber) || '',\n          muiComponentProps: {\n            onChange: handlers.handleInputChange,\n            fullWidth: false,\n            value: insurer.workPackageRefNumber,\n            InputProps: {\n              readOnly: !hasEditPermission || isCompletedStage || isRejectedStage\n            },\n            inputProps: {\n              maxLength: 30\n            }\n          },\n          error: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail5 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail5 === void 0 ? void 0 : _bureauInsurersDetail5.error) && !(bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail6 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail6 === void 0 ? void 0 : _bureauInsurersDetail6.workPackageRefNumber) ? {} : undefined || isDuplicateEnteredWorkPackageRef || isDuplicateInDbWorkPackageRef\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n        children: /*#__PURE__*/_jsxDEV(CheckCircleOutlineIcon, {\n          className: insurer.status ? classes.enabled : classes.disabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('date')), {}, {\n        children: /*#__PURE__*/_jsxDEV(FormDate, {\n          control: control,\n          type: \"datepicker\",\n          id: index,\n          name: index,\n          placeholder: utils.string.t('premiumProcessing.bureauColumns.selectDate'),\n          value: date,\n          plainText: true,\n          defaultValue: date,\n          muiComponentProps: {\n            fullWidth: false,\n            disabled: !hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView\n          },\n          handlers: {\n            toggelDatePicker: handlers.handleDatePickerUpdate\n          },\n          muiPickerProps: {\n            disableToolbar: true,\n            variant: 'inline',\n            format: config.ui.format.date.slashNumeric\n          },\n          nestedClasses: {\n            input: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail7 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail7 === void 0 ? void 0 : _bureauInsurersDetail7.error) && (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail8 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail8 === void 0 ? void 0 : _bureauInsurersDetail8.date) === '' ? classnames(classes.error) : {}\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 124,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('bureau')), {}, {\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          display: \"flex\",\n          children: /*#__PURE__*/_jsxDEV(SelectPopover, {\n            id: index,\n            buttonDisabled: !hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView,\n            text: handlers.getSelectedBureauLabel(index) || utils.string.t('premiumProcessing.bureauColumns.selectBureau'),\n            buttonText: utils.string.t('premiumProcessing.bureauColumns.selectBureau'),\n            showSubmitButton: false,\n            buttonVariant: 'text',\n            handlers: {\n              onTogglePopOver: function onTogglePopOver() {},\n              onToggleOption: function onToggleOption() {}\n            },\n            error: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail9 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail9 === void 0 ? void 0 : _bureauInsurersDetail9.error) && !(bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail10 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail10 === void 0 ? void 0 : _bureauInsurersDetail10.selectedBureau.length) ? {\n              message: ''\n            } : null,\n            children: /*#__PURE__*/_jsxDEV(MultiSelect, {\n              options: bureauList,\n              id: index,\n              handlers: {\n                toggleOption: handlers.toggleMultiSelectOption(index)\n              },\n              selectedItems: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail11 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail11 === void 0 ? void 0 : _bureauInsurersDetail11.selectedBureau) || []\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 11\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 150,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n        children: (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail12 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail12 === void 0 ? void 0 : _bureauInsurersDetail12.selectedBureau) && (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail13 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail13 === void 0 ? void 0 : _bureauInsurersDetail13.selectedBureau.length) || (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail14 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail14 === void 0 ? void 0 : _bureauInsurersDetail14.workPackageRefNumber) || (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail15 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail15 === void 0 ? void 0 : _bureauInsurersDetail15.date) && (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail16 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail16 === void 0 ? void 0 : _bureauInsurersDetail16.date.length) ? /*#__PURE__*/_jsxDEV(Button, {\n          danger: true,\n          disabled: !hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView,\n          icon: HighlightOffIcon,\n          variant: \"text\",\n          size: \"small\",\n          tooltip: {\n            title: utils.string.t('app.remove')\n          },\n          onClick: function onClick() {\n            handlers.showAlert(function () {\n              var _bureauInsurersDetail17;\n\n              if ((_bureauInsurersDetail17 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail17 === void 0 ? void 0 : _bureauInsurersDetail17.caseIncidentIssueDocsId) {\n                dispatch(deleteBureauInsurerDetails(bureauInsurersDetails[index].caseIncidentIssueDocsId)).then(function (response) {\n                  if (response.status === constants.API_RESPONSE_OK) {\n                    handlers.handleRemoveRow(index);\n                  }\n\n                  dispatch(hideModal());\n                });\n              } else {\n                handlers.handleRemoveRow(index);\n                dispatch(hideModal());\n              }\n            }, function () {}, utils.string.t('premiumProcessing.bureauColumns.alertPopupOnRemove'));\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 182,\n          columnNumber: 13\n        }, _this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 178,\n        columnNumber: 9\n      }, _this)]\n    }, index, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableContainer, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: columnsArray\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 219,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: Object.keys(bureauInsurersDetails).map(function (key) {\n            return addRow(bureauInsurersDetails[key], key);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 220,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 218,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 217,\n      columnNumber: 7\n    }, this), (Object.keys(bureauInsurersDetails).length > 1 || isEdited) && hasEditPermission && /*#__PURE__*/_jsxDEV(Grid, {\n      className: classes.cancelSaveButton,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1  auto\",\n          textAlign: \"right\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.cancel'),\n            color: \"primary\",\n            size: \"small\",\n            variant: \"text\",\n            onClick: handlers.handleCancel,\n            disabled: isCompletedStage || isRejectedStage || isNotMyTaskView\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 231,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          size: \"small\",\n          variant: \"outlined\",\n          color: \"primary\",\n          text: utils.string.t('app.save'),\n          onClick: handlers.handleSubmit,\n          disabled: isCompletedStage || isRejectedStage || isNotMyTaskView\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 240,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 229,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(PreventNavigation, {\n        dirty: isEdited,\n        allowedUrls: allowedUrls\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 249,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 228,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(PremiumProcessingCaseBureauView, \"r4igh2puXsbGK1tlCqm1kfnPNRk=\", false, function () {\n  return [useDispatch, useFlexiColumns, useForm];\n});\n\n_c = PremiumProcessingCaseBureauView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseBureauView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseBureau/PremiumProcessingCaseBureau.view.js"],"names":["React","useEffect","useState","PropTypes","useForm","useDispatch","classnames","styles","useFlexiColumns","TableCell","TableHead","FormDate","FormText","MultiSelect","SelectPopover","Button","PreventNavigation","utils","config","hideModal","deleteBureauInsurerDetails","constants","makeStyles","Table","TableBody","TableRow","TableContainer","Box","Grid","CheckCircleOutlineIcon","HighlightOffIcon","PremiumProcessingCaseBureauView","propTypes","columnsData","arrayOf","shape","id","string","isRequired","label","node","handlers","handleInputChange","func","handleDatePickerUpdate","toggleMultiSelectOption","getSelectedBureauLabel","handleSubmit","showAlert","handleCancel","handleRemoveRow","bureauInsurersDetails","object","bureauList","array","hasEditPermission","bool","isCompletedStage","isRejectedStage","taskId","isEdited","isDuplicateWorkRefNo","isDuplicateWorkRefNoInDb","isNotMyTaskView","dispatch","classes","name","columnsArray","columns","columnProps","defaultValues","form","getInitialValues","control","allowedUrls","setAllowedUrls","routes","premiumProcessing","case","PREMIUM_PROCESSING_TAB_CASE_DETAILS","PREMIUM_PROCESSING_TAB_DOCUMENTS","PREMIUM_PROCESSING_TAB_NOTES","PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS","PREMIUM_PROCESSING_TAB_RFI","PREMIUM_PROCESSING_TAB_HISTORY","PREMIUM_PROCESSING_TAB_BUREAU","PREMIUM_PROCESSING_TAB_NON_BUREAU","PREMIUM_PROCESSING_TAB_CLIENT","addRow","insurer","index","Object","keys","length","isDuplicateEnteredWorkPackageRef","workPackageRefNumber","isDuplicateInDbWorkPackageRef","find","workPackage","toLowerCase","date","onChange","fullWidth","value","InputProps","readOnly","inputProps","maxLength","error","undefined","status","enabled","disabled","t","toggelDatePicker","disableToolbar","variant","format","ui","slashNumeric","input","onTogglePopOver","onToggleOption","selectedBureau","message","toggleOption","title","caseIncidentIssueDocsId","then","response","API_RESPONSE_OK","map","key","cancelSaveButton"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch } from 'react-redux';\r\nimport * as classnames from 'classnames';\r\n//app\r\nimport styles from './PremiumProcessingCaseBureau.styles';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport { TableCell, TableHead, FormDate, FormText, MultiSelect, SelectPopover, Button, PreventNavigation } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { hideModal, deleteBureauInsurerDetails } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { makeStyles, Table, TableBody, TableRow, TableContainer, Box, Grid } from '@material-ui/core';\r\nimport CheckCircleOutlineIcon from '@material-ui/icons/CheckCircleOutline';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\n\r\nPremiumProcessingCaseBureauView.propTypes = {\r\n  columnsData: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.node.isRequired,\r\n    })\r\n  ).isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleInputChange: PropTypes.func.isRequired,\r\n    handleDatePickerUpdate: PropTypes.func.isRequired,\r\n    toggleMultiSelectOption: PropTypes.func.isRequired,\r\n    getSelectedBureauLabel: PropTypes.func.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    showAlert: PropTypes.func.isRequired,\r\n    handleCancel: PropTypes.func.isRequired,\r\n    handleRemoveRow: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  bureauInsurersDetails: PropTypes.object.isRequired,\r\n  bureauList: PropTypes.array.isRequired,\r\n  hasEditPermission: PropTypes.bool.isRequired,\r\n  isCompletedStage: PropTypes.bool,\r\n  isRejectedStage: PropTypes.bool,\r\n  taskId: PropTypes.string.isRequired,\r\n  isEdited: PropTypes.bool.isRequired,\r\n  isDuplicateWorkRefNo: PropTypes.string,\r\n  isDuplicateWorkRefNoInDb: PropTypes.array,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseBureauView({\r\n  columnsData,\r\n  bureauInsurersDetails,\r\n  hasEditPermission,\r\n  bureauList,\r\n  handlers,\r\n  taskId,\r\n  isEdited,\r\n  isDuplicateWorkRefNo,\r\n  isDuplicateWorkRefNoInDb,\r\n  isCompletedStage,\r\n  isRejectedStage,\r\n  isNotMyTaskView,\r\n}) {\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCaseBureau' })();\r\n  const { columns: columnsArray, columnProps } = useFlexiColumns(columnsData);\r\n  const defaultValues = utils.form.getInitialValues([]);\r\n  const { control } = useForm({ defaultValues });\r\n  const [allowedUrls, setAllowedUrls] = useState([]);\r\n\r\n  useEffect(() => {\r\n    if (taskId) {\r\n      setAllowedUrls([\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_CASE_DETAILS}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_DOCUMENTS}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_NOTES}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_RFI}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_HISTORY}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS}/${constants.PREMIUM_PROCESSING_TAB_BUREAU}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS}/${constants.PREMIUM_PROCESSING_TAB_NON_BUREAU}`,\r\n        `${config.routes.premiumProcessing.case}/${taskId}/${constants.PREMIUM_PROCESSING_TAB_ISSUE_DOCUMENTS}/${constants.PREMIUM_PROCESSING_TAB_CLIENT}`,\r\n      ]);\r\n    }\r\n  }, [taskId]);\r\n\r\n  const addRow = (insurer, index) => {\r\n    if (index === 'increment') {\r\n      index = Object.keys(bureauInsurersDetails).length - 1;\r\n    }\r\n    const isDuplicateEnteredWorkPackageRef = bureauInsurersDetails?.[index]?.workPackageRefNumber === isDuplicateWorkRefNo;\r\n    const isDuplicateInDbWorkPackageRef = isDuplicateWorkRefNoInDb?.find((workPackage) => {\r\n      return workPackage.toLowerCase() === bureauInsurersDetails?.[index]?.workPackageRefNumber.toLowerCase();\r\n    });\r\n    const date = bureauInsurersDetails?.[index]?.date || null;\r\n    return (\r\n      <TableRow key={index}>\r\n        <TableCell {...columnProps('workPackageRefNumber')}>\r\n          <FormText\r\n            id={index}\r\n            name={index}\r\n            value={bureauInsurersDetails?.[index]?.workPackageRefNumber || ''}\r\n            muiComponentProps={{\r\n              onChange: handlers.handleInputChange,\r\n              fullWidth: false,\r\n              value: insurer.workPackageRefNumber,\r\n              InputProps: {\r\n                readOnly: !hasEditPermission || isCompletedStage || isRejectedStage,\r\n              },\r\n              inputProps: {\r\n                maxLength: 30,\r\n              },\r\n            }}\r\n            error={\r\n              bureauInsurersDetails?.[index]?.error && !bureauInsurersDetails?.[index]?.workPackageRefNumber\r\n                ? {}\r\n                : undefined || isDuplicateEnteredWorkPackageRef || isDuplicateInDbWorkPackageRef\r\n            }\r\n          />\r\n        </TableCell>\r\n        <TableCell {...columnProps('status')}>\r\n          <CheckCircleOutlineIcon className={insurer.status ? classes.enabled : classes.disabled} />\r\n        </TableCell>\r\n        <TableCell {...columnProps('date')}>\r\n          <FormDate\r\n            control={control}\r\n            type=\"datepicker\"\r\n            id={index}\r\n            name={index}\r\n            placeholder={utils.string.t('premiumProcessing.bureauColumns.selectDate')}\r\n            value={date}\r\n            plainText\r\n            defaultValue={date}\r\n            muiComponentProps={{\r\n              fullWidth: false,\r\n              disabled: !hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView,\r\n            }}\r\n            handlers={{\r\n              toggelDatePicker: handlers.handleDatePickerUpdate,\r\n            }}\r\n            muiPickerProps={{\r\n              disableToolbar: true,\r\n              variant: 'inline',\r\n              format: config.ui.format.date.slashNumeric,\r\n            }}\r\n            nestedClasses={{\r\n              input: bureauInsurersDetails?.[index]?.error && bureauInsurersDetails?.[index]?.date === '' ? classnames(classes.error) : {},\r\n            }}\r\n          />\r\n        </TableCell>\r\n        <TableCell {...columnProps('bureau')}>\r\n          <Box display=\"flex\">\r\n            <SelectPopover\r\n              id={index}\r\n              buttonDisabled={!hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView}\r\n              text={handlers.getSelectedBureauLabel(index) || utils.string.t('premiumProcessing.bureauColumns.selectBureau')}\r\n              buttonText={utils.string.t('premiumProcessing.bureauColumns.selectBureau')}\r\n              showSubmitButton={false}\r\n              buttonVariant={'text'}\r\n              handlers={{\r\n                onTogglePopOver: () => {},\r\n                onToggleOption: () => {},\r\n              }}\r\n              error={\r\n                bureauInsurersDetails?.[index]?.error && !bureauInsurersDetails?.[index]?.selectedBureau.length ? { message: '' } : null\r\n              }\r\n            >\r\n              <MultiSelect\r\n                options={bureauList}\r\n                id={index}\r\n                handlers={{\r\n                  toggleOption: handlers.toggleMultiSelectOption(index),\r\n                }}\r\n                selectedItems={bureauInsurersDetails?.[index]?.selectedBureau || []}\r\n              />\r\n            </SelectPopover>\r\n          </Box>\r\n        </TableCell>\r\n        <TableCell>\r\n          {(bureauInsurersDetails?.[index]?.selectedBureau && bureauInsurersDetails?.[index]?.selectedBureau.length) ||\r\n          bureauInsurersDetails?.[index]?.workPackageRefNumber ||\r\n          (bureauInsurersDetails?.[index]?.date && bureauInsurersDetails?.[index]?.date.length) ? (\r\n            <Button\r\n              danger\r\n              disabled={!hasEditPermission || isCompletedStage || isRejectedStage || isNotMyTaskView}\r\n              icon={HighlightOffIcon}\r\n              variant=\"text\"\r\n              size=\"small\"\r\n              tooltip={{ title: utils.string.t('app.remove') }}\r\n              onClick={() => {\r\n                handlers.showAlert(\r\n                  () => {\r\n                    if (bureauInsurersDetails[index]?.caseIncidentIssueDocsId) {\r\n                      dispatch(deleteBureauInsurerDetails(bureauInsurersDetails[index].caseIncidentIssueDocsId)).then((response) => {\r\n                        if (response.status === constants.API_RESPONSE_OK) {\r\n                          handlers.handleRemoveRow(index);\r\n                        }\r\n                        dispatch(hideModal());\r\n                      });\r\n                    } else {\r\n                      handlers.handleRemoveRow(index);\r\n                      dispatch(hideModal());\r\n                    }\r\n                  },\r\n                  () => {},\r\n                  utils.string.t('premiumProcessing.bureauColumns.alertPopupOnRemove')\r\n                );\r\n              }}\r\n            />\r\n          ) : null}\r\n        </TableCell>\r\n      </TableRow>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableContainer>\r\n        <Table size=\"small\">\r\n          <TableHead columns={columnsArray} />\r\n          <TableBody>\r\n            {Object.keys(bureauInsurersDetails).map((key) => {\r\n              return addRow(bureauInsurersDetails[key], key);\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </TableContainer>\r\n      {(Object.keys(bureauInsurersDetails).length > 1 || isEdited) && hasEditPermission && (\r\n        <Grid className={classes.cancelSaveButton}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Box flex=\"1  auto\" textAlign=\"right\">\r\n              <Button\r\n                text={utils.string.t('app.cancel')}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                variant=\"text\"\r\n                onClick={handlers.handleCancel}\r\n                disabled={isCompletedStage || isRejectedStage || isNotMyTaskView}\r\n              />\r\n            </Box>\r\n            <Button\r\n              size=\"small\"\r\n              variant=\"outlined\"\r\n              color=\"primary\"\r\n              text={utils.string.t('app.save')}\r\n              onClick={handlers.handleSubmit}\r\n              disabled={isCompletedStage || isRejectedStage || isNotMyTaskView}\r\n            />\r\n          </Box>\r\n          <PreventNavigation dirty={isEdited} allowedUrls={allowedUrls} />\r\n        </Grid>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}