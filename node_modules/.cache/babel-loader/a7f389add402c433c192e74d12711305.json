{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PremiumProcessingCheckSigning\\\\PremiumProcessingCheckSigning.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './PremiumProcessingCheckSigning.styles';\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormAutocomplete, FormText, FormDate } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCheckSigningView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array\n};\nexport function PremiumProcessingCheckSigningView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCheckSigning'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'workPackageReference')), {}, {\n              control: control,\n              error: errors.workPackageReference\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bureauList')), {}, {\n              control: control,\n              error: errors.bureauList,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'riskReferenceId')), {}, {\n              control: control,\n              error: errors.riskReferenceId\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'packageSubmittedOn', control)), {}, {\n              error: errors.packageSubmittedOn\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 62,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'department')), {}, {\n              control: control,\n              error: errors.department\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 65,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'gxbInstance')), {}, {\n              control: control,\n              error: errors.gxbInstance\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: cancel.label,\n        variant: \"outlined\",\n        size: \"medium\",\n        disabled: formState.isSubmitting,\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 11\n      }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting,\n        onClick: handleSubmit(submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 79,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCheckSigningView, \"l3JGHYrt4GM2+thEnM6bTG48j84=\", false, function () {\n  return [useForm];\n});\n\n_c = PremiumProcessingCheckSigningView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCheckSigningView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PremiumProcessingCheckSigning/PremiumProcessingCheckSigning.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormContainer","FormFields","FormActions","FormGrid","FormAutocomplete","FormText","FormDate","utils","makeStyles","PremiumProcessingCheckSigningView","propTypes","fields","array","actions","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","handleSubmit","formState","setValue","cancel","find","action","submit","onSubmit","data","generic","isFunction","handler","root","getFieldProps","workPackageReference","bureauList","id","value","riskReferenceId","packageSubmittedOn","department","gxbInstance","label","isSubmitting"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCheckSigning.styles';\r\nimport { Button, FormContainer, FormFields, FormActions, FormGrid, FormAutocomplete, FormText, FormDate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPremiumProcessingCheckSigningView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n};\r\n\r\nexport function PremiumProcessingCheckSigningView({ fields, actions }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCheckSigning' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)}>\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText\r\n                {...utils.form.getFieldProps(fields, 'workPackageReference')}\r\n                control={control}\r\n                error={errors.workPackageReference}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormAutocomplete\r\n                {...utils.form.getFieldProps(fields, 'bureauList')}\r\n                control={control}\r\n                error={errors.bureauList}\r\n                handleUpdate={(id, value) => {\r\n                  setValue(id, value);\r\n                }}\r\n              />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'riskReferenceId')} control={control} error={errors.riskReferenceId} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormDate {...utils.form.getFieldProps(fields, 'packageSubmittedOn', control)} error={errors.packageSubmittedOn} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'department')} control={control} error={errors.department} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'gxbInstance')} control={control} error={errors.gxbInstance} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {cancel && (\r\n          <Button text={cancel.label} variant=\"outlined\" size=\"medium\" disabled={formState.isSubmitting} onClick={cancel.handler} />\r\n        )}\r\n        {submit && (\r\n          <Button\r\n            text={submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting}\r\n            onClick={handleSubmit(submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}