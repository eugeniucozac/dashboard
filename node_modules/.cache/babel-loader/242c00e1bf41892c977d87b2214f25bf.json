{"ast":null,"code":"import isEmpty from 'lodash/isEmpty';\nimport isNumber from 'lodash/isNumber';\nimport pick from 'lodash/pick';\nimport trim from 'lodash/trim'; // app\n\nimport * as utils from 'utils';\nvar utilsMarket = {\n  getId: function getId(market) {\n    if (!market || !market.market) return '';\n    return market.market.id || utilsMarket.getName(market);\n  },\n  getName: function getName(market) {\n    if (!market || !market.market) return '';\n    return market.market.edgeName || market.market.name || '';\n  },\n  getNotes: function getNotes(market) {\n    if (!market || !market.subjectivities) return '';\n    return market.subjectivities || '';\n  },\n  getUnderwriterGroup: function getUnderwriterGroup(market) {\n    if (!market || !market.underwriterGroup) return '';\n    return trim(market.underwriterGroup);\n  },\n  getAddress: function getAddress(address) {\n    if (!utils.generic.isValidObject(address) || isEmpty(address)) return;\n    var props = pick(address, ['addressLine1', 'addressLine2', 'addressLine3', 'addressLine4', 'postCode', 'country']);\n    return Object.values(props).map(function (prop) {\n      return trim(prop, ',');\n    }).filter(function (prop) {\n      return !!prop;\n    }).join(', ');\n  },\n  getCurrency: function getCurrency(market) {\n    if (!market || !market.isoCode) return false;\n    return trim(market.isoCode);\n  },\n  // TODO added on 17/11/2020: remove this when B/E have removed settlementIsoCode\n  // TODO added on 17/11/2020: replace with getCurrency\n  getSettlementIsoCode: function getSettlementIsoCode(market) {\n    if (!market || !market.settlementIsoCode) return '---';\n    return trim(market.settlementIsoCode);\n  },\n  getPremium: function getPremium(market) {\n    var falsyReturnsZero = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n    if (!market) return falsyReturnsZero ? 0 : null;\n    return isNumber(market.premium) ? market.premium : falsyReturnsZero ? 0 : null;\n  },\n  // TODO added on 17/11/2020: this should be removed if market(s) have support for \"getLineSizeByCurrency\"\n  getLineSize: function getLineSize(market) {\n    var isSigned = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n    if (!market) return 0;\n    var value = isSigned ? market.orderPercentage : market.writtenLinePercentage;\n    return isNumber(value) ? value : 0;\n  },\n  // TODO added on 17/11/2020: until markets have currency code, this method is useless\n  // getLineSizeByCurrency: (market, currency, isSigned = false) => {\n  //   if (!market || !currency || currency !== utilsMarket.getCurrency(market)) return 0;\n  //\n  //   return utilsMarket.getLineSize(market, isSigned);\n  // },\n  getLineSizeBySettlementCurrency: function getLineSizeBySettlementCurrency(market, currency) {\n    var isSigned = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : false;\n    if (!market || currency !== utilsMarket.getSettlementIsoCode(market)) return 0;\n    return utilsMarket.getLineSize(market, isSigned);\n  },\n  setSigned: function setSigned(market, signed) {\n    if (!market || !utils.generic.isValidObject(market) || signed === undefined) return market;\n    market.orderPercentage = signed;\n    return market;\n  },\n  isLineToStand: function isLineToStand(market) {\n    return !!(market && market.lineToStand === true);\n  },\n  isLeader: function isLeader(market) {\n    return !!(market && market.isLeader === true);\n  }\n};\nexport default utilsMarket;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/market/market.js"],"names":["isEmpty","isNumber","pick","trim","utils","utilsMarket","getId","market","id","getName","edgeName","name","getNotes","subjectivities","getUnderwriterGroup","underwriterGroup","getAddress","address","generic","isValidObject","props","Object","values","map","prop","filter","join","getCurrency","isoCode","getSettlementIsoCode","settlementIsoCode","getPremium","falsyReturnsZero","premium","getLineSize","isSigned","value","orderPercentage","writtenLinePercentage","getLineSizeBySettlementCurrency","currency","setSigned","signed","undefined","isLineToStand","lineToStand","isLeader"],"mappings":"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","sourcesContent":["import isEmpty from 'lodash/isEmpty';\r\nimport isNumber from 'lodash/isNumber';\r\nimport pick from 'lodash/pick';\r\nimport trim from 'lodash/trim';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\n\r\nconst utilsMarket = {\r\n  getId: (market) => {\r\n    if (!market || !market.market) return '';\r\n    return market.market.id || utilsMarket.getName(market);\r\n  },\r\n\r\n  getName: (market) => {\r\n    if (!market || !market.market) return '';\r\n    return market.market.edgeName || market.market.name || '';\r\n  },\r\n\r\n  getNotes: (market) => {\r\n    if (!market || !market.subjectivities) return '';\r\n    return market.subjectivities || '';\r\n  },\r\n\r\n  getUnderwriterGroup: (market) => {\r\n    if (!market || !market.underwriterGroup) return '';\r\n    return trim(market.underwriterGroup);\r\n  },\r\n\r\n  getAddress: (address) => {\r\n    if (!utils.generic.isValidObject(address) || isEmpty(address)) return;\r\n    const props = pick(address, ['addressLine1', 'addressLine2', 'addressLine3', 'addressLine4', 'postCode', 'country']);\r\n    return Object.values(props)\r\n      .map((prop) => trim(prop, ','))\r\n      .filter((prop) => !!prop)\r\n      .join(', ');\r\n  },\r\n\r\n  getCurrency: (market) => {\r\n    if (!market || !market.isoCode) return false;\r\n    return trim(market.isoCode);\r\n  },\r\n\r\n  // TODO added on 17/11/2020: remove this when B/E have removed settlementIsoCode\r\n  // TODO added on 17/11/2020: replace with getCurrency\r\n  getSettlementIsoCode: (market) => {\r\n    if (!market || !market.settlementIsoCode) return '---';\r\n    return trim(market.settlementIsoCode);\r\n  },\r\n\r\n  getPremium: (market, falsyReturnsZero = true) => {\r\n    if (!market) return falsyReturnsZero ? 0 : null;\r\n    return isNumber(market.premium) ? market.premium : falsyReturnsZero ? 0 : null;\r\n  },\r\n\r\n  // TODO added on 17/11/2020: this should be removed if market(s) have support for \"getLineSizeByCurrency\"\r\n  getLineSize: (market, isSigned = false) => {\r\n    if (!market) return 0;\r\n\r\n    const value = isSigned ? market.orderPercentage : market.writtenLinePercentage;\r\n    return isNumber(value) ? value : 0;\r\n  },\r\n\r\n  // TODO added on 17/11/2020: until markets have currency code, this method is useless\r\n  // getLineSizeByCurrency: (market, currency, isSigned = false) => {\r\n  //   if (!market || !currency || currency !== utilsMarket.getCurrency(market)) return 0;\r\n  //\r\n  //   return utilsMarket.getLineSize(market, isSigned);\r\n  // },\r\n\r\n  getLineSizeBySettlementCurrency: (market, currency, isSigned = false) => {\r\n    if (!market || currency !== utilsMarket.getSettlementIsoCode(market)) return 0;\r\n\r\n    return utilsMarket.getLineSize(market, isSigned);\r\n  },\r\n\r\n  setSigned: (market, signed) => {\r\n    if (!market || !utils.generic.isValidObject(market) || signed === undefined) return market;\r\n\r\n    market.orderPercentage = signed;\r\n    return market;\r\n  },\r\n\r\n  isLineToStand: (market) => {\r\n    return !!(market && market.lineToStand === true);\r\n  },\r\n\r\n  isLeader: (market) => {\r\n    return !!(market && market.isLeader === true);\r\n  },\r\n};\r\n\r\nexport default utilsMarket;\r\n"]},"metadata":{},"sourceType":"module"}