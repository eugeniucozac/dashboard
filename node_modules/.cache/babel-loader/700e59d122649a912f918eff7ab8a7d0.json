{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef, useCallback } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport classnames from 'classnames'; // app\n\nimport { PolicyDocumentsSearchView } from './PolicyDocumentsSearch.view';\nimport styles from './PolicyDocumentsSearch.styles';\nimport { OptionDetail } from 'components';\nimport { hideModal, searchDepartmentsByXbInstance, selectFileUploadData, searchInsureds, searchRiskIds, getFileUploadDocuments, fileUploadLinkDownload, selectRefDataXbInstances, selectRefDataXbInstancesDepartments } from 'stores';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPolicyDocumentsSearch.propTypes = {\n  maxResultsWarning: PropTypes.number\n};\nPolicyDocumentsSearch.defaultProps = {\n  maxResultsWarning: 100\n};\nexport default function PolicyDocumentsSearch(_ref) {\n  _s();\n\n  var _this = this,\n      _classnames;\n\n  var maxResultsWarning = _ref.maxResultsWarning;\n  var classes = makeStyles(styles, {\n    name: 'PolicyDocumentsSearch'\n  })();\n  var dispatch = useDispatch();\n  var riskFieldRef = useRef(null); // const claimFieldRef = useRef(null);\n\n  var defaultPagination = {\n    page: 1,\n    size: config.ui.pagination[\"default\"],\n    direction: 'asc',\n    orderBy: 'documentName',\n    totalElements: 0,\n    totalPages: 0\n  };\n  var fileUploadData = useSelector(selectFileUploadData);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      filesFetched = _useState2[0],\n      setFilesFetched = _useState2[1];\n\n  var _useState3 = useState([]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      filesList = _useState4[0],\n      setFilesList = _useState4[1];\n\n  var _useState5 = useState(defaultPagination),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filesPagination = _useState6[0],\n      setFilesPagination = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      formData = _useState8[0],\n      setFormData = _useState8[1];\n\n  var _useState9 = useState('risk'),\n      _useState10 = _slicedToArray(_useState9, 1),\n      searchReferenceType = _useState10[0];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      resetKey = _useState12[0],\n      setResetKey = _useState12[1];\n\n  var _useState13 = useState(),\n      _useState14 = _slicedToArray(_useState13, 2),\n      xbInstance = _useState14[0],\n      setXbInstance = _useState14[1];\n\n  var _useState15 = useState(false),\n      _useState16 = _slicedToArray(_useState15, 2),\n      xbInstanceDepartmentsLoading = _useState16[0],\n      setXbInstanceDepartmentsLoading = _useState16[1];\n\n  var refDataXbInstances = useSelector(selectRefDataXbInstances);\n  var refDataXbInstanceDepartments = useSelector(selectRefDataXbInstancesDepartments(xbInstance));\n\n  var handleChangePage = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(newPage) {\n      var json;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getFileUploadDocuments(formData, _objectSpread(_objectSpread({}, filesPagination), {}, {\n                page: newPage + 1\n              })));\n\n            case 2:\n              json = _context.sent;\n              updateState(json);\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChangePage(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleChangeRowsPerPage = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(rowsPerPage) {\n      var json;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              _context2.next = 2;\n              return dispatch(getFileUploadDocuments(formData, _objectSpread(_objectSpread({}, filesPagination), {}, {\n                size: rowsPerPage,\n                page: 1\n              })));\n\n            case 2:\n              json = _context2.sent;\n              updateState(json);\n\n            case 4:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function handleChangeRowsPerPage(_x2) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var handleLinkDownload = function handleLinkDownload(file) {\n    dispatch(fileUploadLinkDownload(file));\n  };\n\n  var updateState = useCallback(function (json) {\n    if (json) {\n      setFilesList(json.data || []);\n      setFilesPagination(_objectSpread(_objectSpread({}, filesPagination), json.pagination));\n    }\n  }, [filesPagination]);\n  var paginationObj = {\n    page: filesPagination.page - 1,\n    rowsTotal: filesPagination.totalElements,\n    rowsPerPage: filesPagination.size\n  };\n  var pagination = usePagination(filesList, paginationObj, handleChangePage, handleChangeRowsPerPage);\n  var fetchPolicyRefs = useCallback( /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(type, searchTerm) {\n      var refs;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              if (!(searchTerm.length >= 4)) {\n                _context3.next = 9;\n                break;\n              }\n\n              _context3.next = 3;\n              return dispatch(searchRiskIds(searchTerm));\n\n            case 3:\n              refs = _context3.sent;\n\n              if (!utils.generic.isValidArray(refs)) {\n                _context3.next = 8;\n                break;\n              }\n\n              return _context3.abrupt(\"return\", refs);\n\n            case 8:\n              return _context3.abrupt(\"return\", []);\n\n            case 9:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function (_x3, _x4) {\n      return _ref4.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var fetchInsureds = useCallback( /*#__PURE__*/function () {\n    var _ref5 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee4(type, searchTerm) {\n      return _regeneratorRuntime.wrap(function _callee4$(_context4) {\n        while (1) {\n          switch (_context4.prev = _context4.next) {\n            case 0:\n              if (!(searchTerm.length >= 4)) {\n                _context4.next = 2;\n                break;\n              }\n\n              return _context4.abrupt(\"return\", dispatch(searchInsureds(searchTerm)));\n\n            case 2:\n            case \"end\":\n              return _context4.stop();\n          }\n        }\n      }, _callee4);\n    }));\n\n    return function (_x5, _x6) {\n      return _ref5.apply(this, arguments);\n    };\n  }(), [dispatch]);\n  var searchDocuments = useCallback( /*#__PURE__*/function () {\n    var _ref6 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee5(formData) {\n      var json;\n      return _regeneratorRuntime.wrap(function _callee5$(_context5) {\n        while (1) {\n          switch (_context5.prev = _context5.next) {\n            case 0:\n              _context5.next = 2;\n              return dispatch(getFileUploadDocuments(formData, _objectSpread(_objectSpread({}, filesPagination), {}, {\n                page: 1\n              })));\n\n            case 2:\n              json = _context5.sent;\n\n              if (json) {\n                updateState(json);\n                setFilesFetched(true);\n                setFormData(formData);\n              }\n\n            case 4:\n            case \"end\":\n              return _context5.stop();\n          }\n        }\n      }, _callee5);\n    }));\n\n    return function (_x7) {\n      return _ref6.apply(this, arguments);\n    };\n  }(), [dispatch, filesPagination, updateState]);\n  var searchXbInstanceDepartments = useCallback( /*#__PURE__*/function () {\n    var _ref7 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee6(xbInstance) {\n      return _regeneratorRuntime.wrap(function _callee6$(_context6) {\n        while (1) {\n          switch (_context6.prev = _context6.next) {\n            case 0:\n              _context6.next = 2;\n              return dispatch(searchDepartmentsByXbInstance(xbInstance));\n\n            case 2:\n              setXbInstanceDepartmentsLoading(false);\n\n            case 3:\n            case \"end\":\n              return _context6.stop();\n          }\n        }\n      }, _callee6);\n    }));\n\n    return function (_x8) {\n      return _ref7.apply(this, arguments);\n    };\n  }(), [dispatch]);\n\n  var searchCancel = function searchCancel() {\n    dispatch(hideModal());\n  };\n\n  var searchReset = function searchReset() {\n    setFilesFetched(false);\n    setFilesList([]);\n    setFilesPagination(defaultPagination);\n    setFormData();\n    setXbInstance(null);\n    setResetKey(new Date().getTime());\n  };\n\n  var getOptionTooltip = function getOptionTooltip(_ref8) {\n    var xbInstance = _ref8.xbInstance,\n        xbInstanceId = _ref8.xbInstanceId;\n    if (!xbInstance || !xbInstanceId) return;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      children: [utils.string.t('fileUpload.xbInstance'), \": \", xbInstance]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 158,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var renderOption = function renderOption(item) {\n    return /*#__PURE__*/_jsxDEV(OptionDetail, {\n      label: item.policyRef,\n      sublabel: item.insuredName,\n      detail: getOptionTooltip(item)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 12\n    }, _this);\n  };\n\n  var fields = [{\n    name: 'riskReference',\n    type: 'autocompletemui',\n    label: utils.string.t('fileUpload.fields.riskRef.label'),\n    hint: utils.string.t('fileUpload.hint', {\n      count: 4\n    }),\n    value: null,\n    options: [],\n    optionKey: 'policyID',\n    optionLabel: 'policyRef',\n    optionsFetch: {\n      type: 'risk',\n      handler: fetchPolicyRefs\n    },\n    muiComponentProps: {\n      ref: riskFieldRef,\n      fullWidth: true,\n      noOptionsText: utils.string.t('fileUpload.noRiskOptions'),\n      // disabled: searchReferenceType !== 'risk',\n      renderOption: renderOption,\n      classes: {\n        root: classes.searchField,\n        inputRoot: classnames((_classnames = {}, _defineProperty(_classnames, classes.searchFieldInput, true), _defineProperty(_classnames, classes.searchFieldInputDisabled, searchReferenceType !== 'risk'), _classnames))\n      },\n      inputProps: {\n        maxLength: 25 // onFocus: () => {\n        //   handleFieldFocus('risk');\n        // },\n\n      }\n    }\n  }, {\n    name: 'insuredName',\n    type: 'autocompletemui',\n    label: utils.string.t('fileUpload.fields.insuredName.label'),\n    hint: utils.string.t('fileUpload.hint', {\n      count: 4\n    }),\n    value: null,\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    optionsFetch: {\n      type: 'insured',\n      handler: fetchInsureds\n    },\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 25\n      }\n    }\n  }, {\n    name: 'documentType',\n    type: 'autocompletemui',\n    label: utils.string.t('fileUpload.fields.documentType.label'),\n    value: null,\n    // documentType options should be taken from new refData API instead of custom fileUpload GUI API\n    // this can only happen once fileUpload is available for Extended Edge users\n    options: (fileUploadData === null || fileUploadData === void 0 ? void 0 : fileUploadData.DocumentType) || [],\n    optionKey: 'id',\n    optionLabel: 'value'\n  }, {\n    name: 'xbInstance',\n    type: 'autocompletemui',\n    label: utils.string.t('fileUpload.fields.xbInstance.label'),\n    value: null,\n    options: refDataXbInstances,\n    optionKey: 'id',\n    optionLabel: 'value',\n    callback: function callback(event, data) {\n      var _selectedXbInstance$d;\n\n      var selectedXbInstance = refDataXbInstances.find(function (xbi) {\n        return (data === null || data === void 0 ? void 0 : data.id) === (xbi === null || xbi === void 0 ? void 0 : xbi.id);\n      });\n      var xbInstanceHasDepts = (selectedXbInstance === null || selectedXbInstance === void 0 ? void 0 : (_selectedXbInstance$d = selectedXbInstance.departments) === null || _selectedXbInstance$d === void 0 ? void 0 : _selectedXbInstance$d.length) > 0;\n\n      if (data && xbInstanceHasDepts) {\n        setXbInstance(data.id);\n      } else if (data && !xbInstanceHasDepts) {\n        setXbInstanceDepartmentsLoading(true);\n        searchXbInstanceDepartments(data);\n        setXbInstance(data.id);\n      } else if (data === null) {\n        setXbInstance(null);\n      }\n    }\n  }, {\n    name: 'department',\n    type: 'autocompletemui',\n    label: utils.string.t('fileUpload.fields.department.label'),\n    placeholder: xbInstanceDepartmentsLoading ? utils.string.t('app.loading') : '',\n    value: null,\n    options: refDataXbInstanceDepartments,\n    optionKey: 'id',\n    optionLabel: 'value',\n    muiComponentProps: {\n      disabled: utils.generic.isInvalidOrEmptyArray(refDataXbInstanceDepartments)\n    }\n  }, {\n    name: 'inceptionYear',\n    type: 'datepicker',\n    label: utils.string.t('fileUpload.fields.inceptionYear.label'),\n    placeholder: utils.string.t('fileUpload.fields.inceptionYear.placeholder'),\n    value: null,\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('fileUpload.fields.inceptionYear.helperText')\n    },\n    muiPickerProps: {\n      views: ['year'],\n      format: 'YYYY',\n      clearable: true\n    }\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t(filesFetched ? 'app.reset' : 'app.cancel'),\n    handler: filesFetched ? function () {\n      return searchReset();\n    } : function () {\n      return searchCancel();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('fileUpload.searchDocuments'),\n    handler: function handler(data) {\n      searchDocuments(data);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(PolicyDocumentsSearchView, {\n    files: filesList,\n    pagination: pagination.obj,\n    maxResultsWarning: maxResultsWarning,\n    fetched: filesFetched,\n    fields: fields,\n    actions: actions,\n    searchReferenceType: searchReferenceType,\n    handlers: {\n      changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n      changePage: pagination.handlers.handleChangePage,\n      download: handleLinkDownload\n    }\n  }, resetKey, false, {\n    fileName: _jsxFileName,\n    lineNumber: 306,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PolicyDocumentsSearch, \"3Ap5xu4mAUjgGF0EC5K/p/iQf8s=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = PolicyDocumentsSearch;\nPolicyDocumentsSearch.displayName = \"PolicyDocumentsSearch\";\nPolicyDocumentsSearch.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PolicyDocumentsSearch\",\n  \"props\": {\n    \"maxResultsWarning\": {\n      \"defaultValue\": {\n        \"value\": \"100\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.js\"] = {\n    name: \"PolicyDocumentsSearch\",\n    docgenInfo: PolicyDocumentsSearch.__docgenInfo,\n    path: \"src\\\\forms\\\\PolicyDocumentsSearch\\\\PolicyDocumentsSearch.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PolicyDocumentsSearch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PolicyDocumentsSearch/PolicyDocumentsSearch.js"],"names":["React","useState","useRef","useCallback","PropTypes","useDispatch","useSelector","classnames","PolicyDocumentsSearchView","styles","OptionDetail","hideModal","searchDepartmentsByXbInstance","selectFileUploadData","searchInsureds","searchRiskIds","getFileUploadDocuments","fileUploadLinkDownload","selectRefDataXbInstances","selectRefDataXbInstancesDepartments","usePagination","utils","config","makeStyles","PolicyDocumentsSearch","propTypes","maxResultsWarning","number","defaultProps","classes","name","dispatch","riskFieldRef","defaultPagination","page","size","ui","pagination","direction","orderBy","totalElements","totalPages","fileUploadData","filesFetched","setFilesFetched","filesList","setFilesList","filesPagination","setFilesPagination","formData","setFormData","searchReferenceType","resetKey","setResetKey","xbInstance","setXbInstance","xbInstanceDepartmentsLoading","setXbInstanceDepartmentsLoading","refDataXbInstances","refDataXbInstanceDepartments","handleChangePage","newPage","json","updateState","handleChangeRowsPerPage","rowsPerPage","handleLinkDownload","file","data","paginationObj","rowsTotal","fetchPolicyRefs","type","searchTerm","length","refs","generic","isValidArray","fetchInsureds","searchDocuments","searchXbInstanceDepartments","searchCancel","searchReset","Date","getTime","getOptionTooltip","xbInstanceId","string","t","renderOption","item","policyRef","insuredName","fields","label","hint","count","value","options","optionKey","optionLabel","optionsFetch","handler","muiComponentProps","ref","fullWidth","noOptionsText","root","searchField","inputRoot","searchFieldInput","searchFieldInputDisabled","inputProps","maxLength","DocumentType","callback","event","selectedXbInstance","find","xbi","id","xbInstanceHasDepts","departments","placeholder","disabled","isInvalidOrEmptyArray","helperText","muiPickerProps","views","format","clearable","actions","obj","changeRowsPerPage","handlers","changePage","download"],"mappings":"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","sourcesContent":["import React, { useState, useRef, useCallback } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport { PolicyDocumentsSearchView } from './PolicyDocumentsSearch.view';\r\nimport styles from './PolicyDocumentsSearch.styles';\r\nimport { OptionDetail } from 'components';\r\nimport {\r\n  hideModal,\r\n  searchDepartmentsByXbInstance,\r\n  selectFileUploadData,\r\n  searchInsureds,\r\n  searchRiskIds,\r\n  getFileUploadDocuments,\r\n  fileUploadLinkDownload,\r\n  selectRefDataXbInstances,\r\n  selectRefDataXbInstancesDepartments,\r\n} from 'stores';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPolicyDocumentsSearch.propTypes = {\r\n  maxResultsWarning: PropTypes.number,\r\n};\r\n\r\nPolicyDocumentsSearch.defaultProps = {\r\n  maxResultsWarning: 100,\r\n};\r\n\r\nexport default function PolicyDocumentsSearch({ maxResultsWarning }) {\r\n  const classes = makeStyles(styles, { name: 'PolicyDocumentsSearch' })();\r\n  const dispatch = useDispatch();\r\n  const riskFieldRef = useRef(null);\r\n  // const claimFieldRef = useRef(null);\r\n\r\n  const defaultPagination = {\r\n    page: 1,\r\n    size: config.ui.pagination.default,\r\n    direction: 'asc',\r\n    orderBy: 'documentName',\r\n    totalElements: 0,\r\n    totalPages: 0,\r\n  };\r\n\r\n  const fileUploadData = useSelector(selectFileUploadData);\r\n  const [filesFetched, setFilesFetched] = useState(false);\r\n  const [filesList, setFilesList] = useState([]);\r\n  const [filesPagination, setFilesPagination] = useState(defaultPagination);\r\n  const [formData, setFormData] = useState();\r\n  const [searchReferenceType] = useState('risk');\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const [xbInstance, setXbInstance] = useState();\r\n  const [xbInstanceDepartmentsLoading, setXbInstanceDepartmentsLoading] = useState(false);\r\n  const refDataXbInstances = useSelector(selectRefDataXbInstances);\r\n  const refDataXbInstanceDepartments = useSelector(selectRefDataXbInstancesDepartments(xbInstance));\r\n\r\n  const handleChangePage = async (newPage) => {\r\n    const json = await dispatch(getFileUploadDocuments(formData, { ...filesPagination, page: newPage + 1 }));\r\n    updateState(json);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = async (rowsPerPage) => {\r\n    const json = await dispatch(getFileUploadDocuments(formData, { ...filesPagination, size: rowsPerPage, page: 1 }));\r\n    updateState(json);\r\n  };\r\n\r\n  const handleLinkDownload = (file) => {\r\n    dispatch(fileUploadLinkDownload(file));\r\n  };\r\n\r\n  const updateState = useCallback(\r\n    (json) => {\r\n      if (json) {\r\n        setFilesList(json.data || []);\r\n        setFilesPagination({ ...filesPagination, ...json.pagination });\r\n      }\r\n    },\r\n    [filesPagination]\r\n  );\r\n\r\n  const paginationObj = {\r\n    page: filesPagination.page - 1,\r\n    rowsTotal: filesPagination.totalElements,\r\n    rowsPerPage: filesPagination.size,\r\n  };\r\n\r\n  const pagination = usePagination(filesList, paginationObj, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  const fetchPolicyRefs = useCallback(\r\n    async (type, searchTerm) => {\r\n      if (searchTerm.length >= 4) {\r\n        const refs = await dispatch(searchRiskIds(searchTerm));\r\n\r\n        if (utils.generic.isValidArray(refs)) {\r\n          return refs;\r\n        } else {\r\n          return [];\r\n        }\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const fetchInsureds = useCallback(\r\n    async (type, searchTerm) => {\r\n      if (searchTerm.length >= 4) {\r\n        return dispatch(searchInsureds(searchTerm));\r\n      }\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const searchDocuments = useCallback(\r\n    async (formData) => {\r\n      const json = await dispatch(getFileUploadDocuments(formData, { ...filesPagination, page: 1 }));\r\n\r\n      if (json) {\r\n        updateState(json);\r\n        setFilesFetched(true);\r\n        setFormData(formData);\r\n      }\r\n    },\r\n    [dispatch, filesPagination, updateState]\r\n  );\r\n\r\n  const searchXbInstanceDepartments = useCallback(\r\n    async (xbInstance) => {\r\n      await dispatch(searchDepartmentsByXbInstance(xbInstance));\r\n      setXbInstanceDepartmentsLoading(false);\r\n    },\r\n    [dispatch]\r\n  );\r\n\r\n  const searchCancel = () => {\r\n    dispatch(hideModal());\r\n  };\r\n\r\n  const searchReset = () => {\r\n    setFilesFetched(false);\r\n    setFilesList([]);\r\n    setFilesPagination(defaultPagination);\r\n    setFormData();\r\n    setXbInstance(null);\r\n    setResetKey(new Date().getTime());\r\n  };\r\n\r\n  const getOptionTooltip = ({ xbInstance, xbInstanceId }) => {\r\n    if (!xbInstance || !xbInstanceId) return;\r\n\r\n    return (\r\n      <span>\r\n        {utils.string.t('fileUpload.xbInstance')}: {xbInstance}\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const renderOption = (item) => {\r\n    return <OptionDetail label={item.policyRef} sublabel={item.insuredName} detail={getOptionTooltip(item)} />;\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'riskReference',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('fileUpload.fields.riskRef.label'),\r\n      hint: utils.string.t('fileUpload.hint', { count: 4 }),\r\n      value: null,\r\n      options: [],\r\n      optionKey: 'policyID',\r\n      optionLabel: 'policyRef',\r\n      optionsFetch: {\r\n        type: 'risk',\r\n        handler: fetchPolicyRefs,\r\n      },\r\n      muiComponentProps: {\r\n        ref: riskFieldRef,\r\n        fullWidth: true,\r\n        noOptionsText: utils.string.t('fileUpload.noRiskOptions'),\r\n        // disabled: searchReferenceType !== 'risk',\r\n        renderOption,\r\n        classes: {\r\n          root: classes.searchField,\r\n          inputRoot: classnames({\r\n            [classes.searchFieldInput]: true,\r\n            [classes.searchFieldInputDisabled]: searchReferenceType !== 'risk',\r\n          }),\r\n        },\r\n        inputProps: {\r\n          maxLength: 25,\r\n          // onFocus: () => {\r\n          //   handleFieldFocus('risk');\r\n          // },\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'insuredName',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('fileUpload.fields.insuredName.label'),\r\n      hint: utils.string.t('fileUpload.hint', { count: 4 }),\r\n      value: null,\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      optionsFetch: {\r\n        type: 'insured',\r\n        handler: fetchInsureds,\r\n      },\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 25,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'documentType',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('fileUpload.fields.documentType.label'),\r\n      value: null,\r\n      // documentType options should be taken from new refData API instead of custom fileUpload GUI API\r\n      // this can only happen once fileUpload is available for Extended Edge users\r\n      options: fileUploadData?.DocumentType || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n    },\r\n    {\r\n      name: 'xbInstance',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('fileUpload.fields.xbInstance.label'),\r\n      value: null,\r\n      options: refDataXbInstances,\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      callback: (event, data) => {\r\n        const selectedXbInstance = refDataXbInstances.find((xbi) => {\r\n          return data?.id === xbi?.id;\r\n        });\r\n\r\n        const xbInstanceHasDepts = selectedXbInstance?.departments?.length > 0;\r\n\r\n        if (data && xbInstanceHasDepts) {\r\n          setXbInstance(data.id);\r\n        } else if (data && !xbInstanceHasDepts) {\r\n          setXbInstanceDepartmentsLoading(true);\r\n          searchXbInstanceDepartments(data);\r\n          setXbInstance(data.id);\r\n        } else if (data === null) {\r\n          setXbInstance(null);\r\n        }\r\n      },\r\n    },\r\n    {\r\n      name: 'department',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('fileUpload.fields.department.label'),\r\n      placeholder: xbInstanceDepartmentsLoading ? utils.string.t('app.loading') : '',\r\n      value: null,\r\n      options: refDataXbInstanceDepartments,\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      muiComponentProps: {\r\n        disabled: utils.generic.isInvalidOrEmptyArray(refDataXbInstanceDepartments),\r\n      },\r\n    },\r\n    {\r\n      name: 'inceptionYear',\r\n      type: 'datepicker',\r\n      label: utils.string.t('fileUpload.fields.inceptionYear.label'),\r\n      placeholder: utils.string.t('fileUpload.fields.inceptionYear.placeholder'),\r\n      value: null,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('fileUpload.fields.inceptionYear.helperText'),\r\n      },\r\n      muiPickerProps: {\r\n        views: ['year'],\r\n        format: 'YYYY',\r\n        clearable: true,\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t(filesFetched ? 'app.reset' : 'app.cancel'),\r\n      handler: filesFetched ? () => searchReset() : () => searchCancel(),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('fileUpload.searchDocuments'),\r\n      handler: (data) => {\r\n        searchDocuments(data);\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PolicyDocumentsSearchView\r\n      key={resetKey}\r\n      files={filesList}\r\n      pagination={pagination.obj}\r\n      maxResultsWarning={maxResultsWarning}\r\n      fetched={filesFetched}\r\n      fields={fields}\r\n      actions={actions}\r\n      searchReferenceType={searchReferenceType}\r\n      handlers={{\r\n        changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\r\n        changePage: pagination.handlers.handleChangePage,\r\n        download: handleLinkDownload,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}