{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityReferralValuesTable\\\\ClaimsComplexityReferralValuesTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; //app\n\nimport * as utils from 'utils';\nimport { ClaimsComplexityReferralValuesTableView } from './ClaimsComplexityReferralValuesTable.view';\nimport { getComplexityReferralValues } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsComplexityReferralValuesTable.prototypes = {\n  complexityReferralValues: PropTypes.object.isRequired,\n  handleEditComplexityRule: PropTypes.func.isRequired\n};\nexport default function ClaimsComplexityReferralValuesTable(_ref) {\n  _s();\n\n  var complexityReferralValues = _ref.complexityReferralValues,\n      handleEditComplexityRule = _ref.handleEditComplexityRule;\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeItem = _useState2[0],\n      setActiveItem = _useState2[1];\n\n  var columns = [{\n    id: 'createdDate',\n    label: utils.string.t('claims.complexityRulesManagementDetails.referralValues'),\n    sort: {\n      type: '',\n      direction: 'asc'\n    }\n  }, {\n    id: 'forCompany',\n    label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forCompany')\n  }, {\n    id: 'forDivision',\n    label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forDivision')\n  }];\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getComplexityReferralValues({\n      page: newPage\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getComplexityReferralValues({\n      size: rowsPerPage\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getComplexityReferralValues({\n      sortBy: by,\n      direction: dir.toUpperCase()\n    }));\n    setActiveItem({});\n    handleEditComplexityRule({});\n  };\n\n  var handleValueSelect = function handleValueSelect(val) {\n    setActiveItem(val);\n    handleEditComplexityRule(val);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ClaimsComplexityReferralValuesTableView, {\n      activeItem: activeItem,\n      cols: columns,\n      rows: complexityReferralValues,\n      sort: _objectSpread(_objectSpread({}, complexityReferralValues.sort), {}, {\n        direction: complexityReferralValues.sort.direction.toLowerCase(),\n        type: 'id'\n      }),\n      pagination: {\n        page: complexityReferralValues.page,\n        rowsTotal: complexityReferralValues.itemsTotal,\n        rowsPerPage: complexityReferralValues.pageSize\n      },\n      handleSort: handleSort,\n      handleChangePage: handleChangePage,\n      handleChangeRowsPerPage: handleChangeRowsPerPage,\n      handleValueSelect: handleValueSelect\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ClaimsComplexityReferralValuesTable, \"V34LCib2YTUOGTGweM8ULpApyGE=\", false, function () {\n  return [useDispatch];\n});\n\n_c = ClaimsComplexityReferralValuesTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityReferralValuesTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityReferralValuesTable/ClaimsComplexityReferralValuesTable.js"],"names":["React","useState","PropTypes","useDispatch","utils","ClaimsComplexityReferralValuesTableView","getComplexityReferralValues","ClaimsComplexityReferralValuesTable","prototypes","complexityReferralValues","object","isRequired","handleEditComplexityRule","func","dispatch","activeItem","setActiveItem","columns","id","label","string","t","sort","type","direction","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","size","handleSort","by","dir","sortBy","toUpperCase","handleValueSelect","val","toLowerCase","rowsTotal","itemsTotal","pageSize"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { ClaimsComplexityReferralValuesTableView } from './ClaimsComplexityReferralValuesTable.view';\r\nimport { getComplexityReferralValues } from 'stores';\r\n\r\nClaimsComplexityReferralValuesTable.prototypes = {\r\n  complexityReferralValues: PropTypes.object.isRequired,\r\n  handleEditComplexityRule: PropTypes.func.isRequired,\r\n};\r\nexport default function ClaimsComplexityReferralValuesTable({ complexityReferralValues, handleEditComplexityRule }) {\r\n  const dispatch = useDispatch();\r\n  const [activeItem, setActiveItem] = useState({});\r\n\r\n  const columns = [\r\n    {\r\n      id: 'createdDate',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.referralValues'),\r\n      sort: { type: '', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'forCompany',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forCompany'),\r\n    },\r\n    {\r\n      id: 'forDivision',\r\n      label: utils.string.t('claims.complexityRulesManagementDetails.complexityBasisValues.forDivision'),\r\n    },\r\n  ];\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getComplexityReferralValues({ page: newPage }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getComplexityReferralValues({ size: rowsPerPage }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getComplexityReferralValues({ sortBy: by, direction: dir.toUpperCase() }));\r\n    setActiveItem({});\r\n    handleEditComplexityRule({});\r\n  };\r\n\r\n  const handleValueSelect = (val) => {\r\n    setActiveItem(val);\r\n    handleEditComplexityRule(val);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ClaimsComplexityReferralValuesTableView\r\n        activeItem={activeItem}\r\n        cols={columns}\r\n        rows={complexityReferralValues}\r\n        sort={{\r\n          ...complexityReferralValues.sort,\r\n          direction: complexityReferralValues.sort.direction.toLowerCase(),\r\n          type: 'id',\r\n        }}\r\n        pagination={{\r\n          page: complexityReferralValues.page,\r\n          rowsTotal: complexityReferralValues.itemsTotal,\r\n          rowsPerPage: complexityReferralValues.pageSize,\r\n        }}\r\n        handleSort={handleSort}\r\n        handleChangePage={handleChangePage}\r\n        handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n        handleValueSelect={handleValueSelect}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}