{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossesTab\\\\LossesTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types'; //app\n\nimport { LossesTabView } from './LossesTab.view';\nimport { useFlexiColumns } from 'hooks';\nimport { getSearchLosses, selectClaimsStatuses, resetClaimLossFilters, getStatuses, selectLossesData, getLossesTabData, selectLossesTblData, selectLossesFilterData, getLossesTableFilterValues, resetSelectedLossItem } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossesTab.prototypes = {\n  handleCreateClaim: PropTypes.func.isRequired\n};\nexport default function LossesTab(_ref) {\n  _s();\n\n  var handleCreateClaim = _ref.handleCreateClaim;\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchorEl = _useState4[0],\n      setAnchorEl = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      initialLoad = _useState6[0],\n      setInitialLoad = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isTblLoader = _useState8[0],\n      setIsTblLoader = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      emptyData = _useState10[0],\n      setEmptyData = _useState10[1];\n\n  var _useState11 = useState(),\n      _useState12 = _slicedToArray(_useState11, 2),\n      resetKey = _useState12[0],\n      setResetKey = _useState12[1];\n\n  var claimsStatuses = useSelector(selectClaimsStatuses);\n  var lossesData = useSelector(selectLossesData);\n  var lossesTblData = useSelector(selectLossesTblData);\n  var lossesFilterData = useSelector(selectLossesFilterData);\n  var defaultFormFields = [{\n    name: 'lossFromDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'lossToDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'firstContactDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(defaultFormFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var lossDateFrom = watch('lossFromDate');\n  var tableFilterFields = [{\n    id: 'lossFromDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateFrom'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossFromDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'lossToDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateTo'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossToDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        minDate: lossDateFrom !== null && lossDateFrom !== void 0 ? lossDateFrom : undefined,\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'firstContactDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'firstContactDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'catCodeDescription',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (lossesFilterData === null || lossesFilterData === void 0 ? void 0 : lossesFilterData.catCode) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"catCodeDescription\",\n      search: true,\n      options: (lossesFilterData === null || lossesFilterData === void 0 ? void 0 : lossesFilterData.catCode) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 152,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'lossStatus',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.lossStatus'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (lossesFilterData === null || lossesFilterData === void 0 ? void 0 : lossesFilterData.lossStatus) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"lossStatus\",\n      search: true,\n      options: (lossesFilterData === null || lossesFilterData === void 0 ? void 0 : lossesFilterData.lossStatus) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 16\n    }, this)\n  }];\n  var searchOptions = [{\n    id: 'lossRef',\n    name: utils.string.t('claims.columns.claimsList.lossRef')\n  }, {\n    id: 'lossName',\n    name: utils.string.t('claims.columns.claimsList.lossName')\n  }, {\n    id: 'lossDescription',\n    name: utils.string.t('claims.columns.claimsList.lossDetails')\n  }, {\n    id: 'catCodeDescription',\n    name: utils.string.t('claims.columns.claimsList.catCodesID')\n  }];\n\n  var handleSearch = function handleSearch(queryObject) {\n    if (queryObject.search && (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText) !== queryObject.search) {\n      setIsTblLoader(true);\n      setValue('lossFromDate', null);\n      setValue('lossToDate', null);\n      setValue('firstContactDate', null);\n      setResetKey(new Date().getTime());\n      dispatch(getLossesTableFilterValues({\n        filtersValues: {}\n      }));\n      setSearchTerm(queryObject.search);\n      dispatch(resetSelectedLossItem());\n      dispatch(getLossesTabData({\n        searchText: queryObject.search,\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy\n      }));\n      dispatch(getSearchLosses({\n        term: queryObject.search,\n        filterTerm: '',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n        requestType: 'filter'\n      }));\n      dispatch(getSearchLosses({\n        term: queryObject.search,\n        direction: 'desc',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n        requestType: 'search',\n        size: lossesData === null || lossesData === void 0 ? void 0 : lossesData.pageSize\n      })).then(function (resp) {\n        var _resp$json, _resp$json2;\n\n        if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json = resp.json) === null || _resp$json === void 0 ? void 0 : _resp$json.statusCode) === 500) setIsTblLoader(false);\n        if (resp.status === 'OK') setEmptyData(false);\n        if ((resp === null || resp === void 0 ? void 0 : (_resp$json2 = resp.json) === null || _resp$json2 === void 0 ? void 0 : _resp$json2.statusCode) === 500) setEmptyData(true);\n      });\n    } else if (!initialLoad) {\n      setInitialLoad(true);\n    }\n  };\n\n  var onResetSearch = function onResetSearch() {\n    setIsTblLoader(true);\n    setValue('lossFromDate', null);\n    setValue('lossToDate', null);\n    setValue('firstContactDate', null);\n    setResetKey(new Date().getTime());\n    dispatch(resetSelectedLossItem());\n    dispatch(getLossesTabData({\n      searchText: '',\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy\n    }));\n    dispatch(getSearchLosses({\n      term: '',\n      filterTerm: '',\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'filter'\n    }));\n    dispatch(getSearchLosses({\n      term: '',\n      direction: 'desc',\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json3, _resp$json4;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json3 = resp.json) === null || _resp$json3 === void 0 ? void 0 : _resp$json3.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json4 = resp.json) === null || _resp$json4 === void 0 ? void 0 : _resp$json4.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    setIsTblLoader(true);\n    dispatch(resetSelectedLossItem());\n    dispatch(getSearchLosses({\n      page: newPage,\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json5, _resp$json6;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json5 = resp.json) === null || _resp$json5 === void 0 ? void 0 : _resp$json5.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json6 = resp.json) === null || _resp$json6 === void 0 ? void 0 : _resp$json6.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var onResetFilter = function onResetFilter() {\n    setIsTblLoader(true);\n    reset();\n    dispatch(resetClaimLossFilters());\n    dispatch(resetSelectedLossItem());\n    dispatch(getLossesTableFilterValues({\n      filtersValues: {}\n    }));\n    dispatch(getSearchLosses({\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      filterTerm: '',\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'filter'\n    }));\n    dispatch(getSearchLosses({\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      filterTerm: '',\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json7, _resp$json8;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json7 = resp.json) === null || _resp$json7 === void 0 ? void 0 : _resp$json7.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json8 = resp.json) === null || _resp$json8 === void 0 ? void 0 : _resp$json8.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleSearchFilter = function handleSearchFilter(data) {\n    var filters = data.filters;\n    setIsTblLoader(true);\n    dispatch(getLossesTableFilterValues({\n      filters: filters\n    }));\n    dispatch(resetSelectedLossItem());\n    dispatch(getSearchLosses({\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      filterTerm: filters,\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'filter'\n    }));\n    dispatch(getSearchLosses({\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      filterTerm: filters,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json9, _resp$json10;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json9 = resp.json) === null || _resp$json9 === void 0 ? void 0 : _resp$json9.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json10 = resp.json) === null || _resp$json10 === void 0 ? void 0 : _resp$json10.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setIsTblLoader(true);\n    dispatch(resetSelectedLossItem());\n    dispatch(getSearchLosses({\n      size: rowsPerPage,\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json11, _resp$json12;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json11 = resp.json) === null || _resp$json11 === void 0 ? void 0 : _resp$json11.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json12 = resp.json) === null || _resp$json12 === void 0 ? void 0 : _resp$json12.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    setIsTblLoader(true);\n    dispatch(resetSelectedLossItem());\n    dispatch(getSearchLosses({\n      sortBy: by,\n      direction: dir.toUpperCase(),\n      term: searchTerm || (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText),\n      searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n      requestType: 'search'\n    })).then(function (resp) {\n      var _resp$json13, _resp$json14;\n\n      if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json13 = resp.json) === null || _resp$json13 === void 0 ? void 0 : _resp$json13.statusCode) === 500) setIsTblLoader(false);\n      if (resp.status === 'OK') setEmptyData(false);\n      if ((resp === null || resp === void 0 ? void 0 : (_resp$json14 = resp.json) === null || _resp$json14 === void 0 ? void 0 : _resp$json14.statusCode) === 500) setEmptyData(true);\n    });\n  };\n\n  useEffect(function () {\n    if (!initialLoad && utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\n      dispatch(getStatuses());\n      dispatch(getLossesTabData({\n        searchText: '',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy\n      }));\n      dispatch(getSearchLosses({\n        term: '',\n        filterTerm: '',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n        requestType: 'filter'\n      }));\n      dispatch(resetSelectedLossItem());\n      dispatch(getSearchLosses({\n        term: '',\n        direction: 'desc',\n        searchBy: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy,\n        requestType: 'search'\n      })).then(function (resp) {\n        var _resp$json15, _resp$json16;\n\n        if (resp.status === 'OK' || (resp === null || resp === void 0 ? void 0 : (_resp$json15 = resp.json) === null || _resp$json15 === void 0 ? void 0 : _resp$json15.statusCode) === 500) setIsTblLoader(false);\n        if (resp.status === 'OK') setEmptyData(false);\n        if ((resp === null || resp === void 0 ? void 0 : (_resp$json16 = resp.json) === null || _resp$json16 === void 0 ? void 0 : _resp$json16.statusCode) === 500) setEmptyData(true);\n      });\n      setInitialLoad(!initialLoad);\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var columns = [{\n    id: 'lossRef',\n    label: utils.string.t('claims.columns.claimsList.reference'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'lossName',\n    label: utils.string.t('claims.columns.claimsList.lossName'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'lossDetails',\n    label: utils.string.t('claims.columns.claimsList.lossDetails'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateFrom',\n    label: utils.string.t('claims.columns.claimsList.dateFrom'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateTo',\n    label: utils.string.t('claims.columns.claimsList.dateTo'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'firstContactDateTime',\n    label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'catCodesID',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'lossStatus',\n    label: utils.string.t('claims.columns.claimsList.lossStatus'),\n    visible: true,\n    nowrap: true\n  }];\n  var searchField = [{\n    name: 'searchBy',\n    type: 'autocompletemui',\n    options: searchOptions,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy) !== '' ? searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.id) === (lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchBy);\n    }) : (searchOptions === null || searchOptions === void 0 ? void 0 : searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.name) === utils.string.t('claims.columns.claimsList.lossName');\n    })) || null,\n    callback: function callback(evt, value) {\n      dispatch(getLossesTabData({\n        searchBy: value === null || value === void 0 ? void 0 : value.id\n      }));\n    }\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      isTableHidden = _useFlexiColumns.isTableHidden,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(LossesTabView, {\n    lossesData: lossesData,\n    tableData: lossesTblData,\n    searchTerm: lossesData === null || lossesData === void 0 ? void 0 : lossesData.searchText,\n    searchField: searchField,\n    isSearchByNull: !Boolean(searchField[0].value),\n    sort: _objectSpread(_objectSpread({}, lossesData === null || lossesData === void 0 ? void 0 : lossesData.sort), {}, {\n      type: 'numeric'\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    isTableHidden: isTableHidden,\n    handleSearch: handleSearch,\n    handleSort: handleSort,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    handleSearchFilter: handleSearchFilter,\n    handleCreateClaim: handleCreateClaim,\n    tableFilterFields: tableFilterFields,\n    onResetFilter: onResetFilter,\n    onResetSearch: onResetSearch,\n    toggleColumn: toggleColumn,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    isTblLoader: isTblLoader,\n    emptyData: emptyData,\n    resetKey: resetKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 404,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossesTab, \"03Ao33CBZbdC1EhLaAVyf09pYdo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = LossesTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossesTab\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossesTab/LossesTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","PropTypes","LossesTabView","useFlexiColumns","getSearchLosses","selectClaimsStatuses","resetClaimLossFilters","getStatuses","selectLossesData","getLossesTabData","selectLossesTblData","selectLossesFilterData","getLossesTableFilterValues","resetSelectedLossItem","MultiSelect","FormDate","utils","LossesTab","prototypes","handleCreateClaim","func","isRequired","dispatch","searchTerm","setSearchTerm","anchorEl","setAnchorEl","initialLoad","setInitialLoad","isTblLoader","setIsTblLoader","emptyData","setEmptyData","resetKey","setResetKey","claimsStatuses","lossesData","lossesTblData","lossesFilterData","defaultFormFields","name","type","value","defaultValues","form","getInitialValues","control","reset","watch","setValue","lossDateFrom","tableFilterFields","id","label","string","t","content","getFieldProps","fullWidth","margin","clearable","variant","format","placeholder","minDate","undefined","options","catCode","lossStatus","searchOptions","handleSearch","queryObject","search","searchText","Date","getTime","filtersValues","searchBy","term","filterTerm","requestType","direction","size","pageSize","then","resp","status","json","statusCode","onResetSearch","handleChangePage","newPage","page","onResetFilter","handleSearchFilter","data","filters","handleChangeRowsPerPage","rowsPerPage","handleSort","by","dir","sortBy","toUpperCase","generic","isInvalidOrEmptyArray","columns","nowrap","visible","searchField","optionKey","optionLabel","find","item","callback","evt","columnsArray","isTableHidden","columnProps","toggleColumn","Boolean","sort"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { LossesTabView } from './LossesTab.view';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport {\r\n  getSearchLosses,\r\n  selectClaimsStatuses,\r\n  resetClaimLossFilters,\r\n  getStatuses,\r\n  selectLossesData,\r\n  getLossesTabData,\r\n  selectLossesTblData,\r\n  selectLossesFilterData,\r\n  getLossesTableFilterValues,\r\n  resetSelectedLossItem,\r\n} from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nLossesTab.prototypes = {\r\n  handleCreateClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function LossesTab({ handleCreateClaim }) {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [initialLoad, setInitialLoad] = useState(false);\r\n  const [isTblLoader, setIsTblLoader] = useState(false);\r\n  const [emptyData, setEmptyData] = useState(false);\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const claimsStatuses = useSelector(selectClaimsStatuses);\r\n  const lossesData = useSelector(selectLossesData);\r\n  const lossesTblData = useSelector(selectLossesTblData);\r\n  const lossesFilterData = useSelector(selectLossesFilterData);\r\n\r\n  const defaultFormFields = [\r\n    {\r\n      name: 'lossFromDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'lossToDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'firstContactDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(defaultFormFields);\r\n  const { control, reset, watch, setValue } = useForm({ defaultValues });\r\n  const lossDateFrom = watch('lossFromDate');\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'lossFromDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateFrom'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossFromDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateTo'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossToDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            minDate: lossDateFrom ?? undefined,\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'firstContactDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'firstContactDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'catCodeDescription',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossesFilterData?.catCode || [],\r\n      content: <MultiSelect id=\"catCodeDescription\" search options={lossesFilterData?.catCode || []} />,\r\n    },\r\n    {\r\n      id: 'lossStatus',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.lossStatus'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: lossesFilterData?.lossStatus || [],\r\n      content: <MultiSelect id=\"lossStatus\" search options={lossesFilterData?.lossStatus || []} />,\r\n    },\r\n  ];\r\n\r\n  const searchOptions = [\r\n    { id: 'lossRef', name: utils.string.t('claims.columns.claimsList.lossRef') },\r\n    { id: 'lossName', name: utils.string.t('claims.columns.claimsList.lossName') },\r\n    { id: 'lossDescription', name: utils.string.t('claims.columns.claimsList.lossDetails') },\r\n    { id: 'catCodeDescription', name: utils.string.t('claims.columns.claimsList.catCodesID') },\r\n  ];\r\n\r\n  const handleSearch = (queryObject) => {\r\n    if (queryObject.search && lossesData?.searchText !== queryObject.search) {\r\n      setIsTblLoader(true);\r\n      setValue('lossFromDate', null);\r\n      setValue('lossToDate', null);\r\n      setValue('firstContactDate', null);\r\n      setResetKey(new Date().getTime());\r\n      dispatch(getLossesTableFilterValues({ filtersValues: {} }));\r\n      setSearchTerm(queryObject.search);\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(getLossesTabData({ searchText: queryObject.search, searchBy: lossesData?.searchBy }));\r\n      dispatch(getSearchLosses({ term: queryObject.search, filterTerm: '', searchBy: lossesData?.searchBy, requestType: 'filter' }));\r\n      dispatch(\r\n        getSearchLosses({\r\n          term: queryObject.search,\r\n          direction: 'desc',\r\n          searchBy: lossesData?.searchBy,\r\n          requestType: 'search',\r\n          size: lossesData?.pageSize,\r\n        })\r\n      ).then((resp) => {\r\n        if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n        if (resp.status === 'OK') setEmptyData(false);\r\n        if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n      });\r\n    } else if (!initialLoad) {\r\n      setInitialLoad(true);\r\n    }\r\n  };\r\n\r\n  const onResetSearch = () => {\r\n    setIsTblLoader(true);\r\n    setValue('lossFromDate', null);\r\n    setValue('lossToDate', null);\r\n    setValue('firstContactDate', null);\r\n    setResetKey(new Date().getTime());\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(getLossesTabData({ searchText: '', searchBy: lossesData?.searchBy }));\r\n    dispatch(getSearchLosses({ term: '', filterTerm: '', searchBy: lossesData?.searchBy, requestType: 'filter' }));\r\n    dispatch(getSearchLosses({ term: '', direction: 'desc', searchBy: lossesData?.searchBy, requestType: 'search' })).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setIsTblLoader(true);\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(\r\n      getSearchLosses({ page: newPage, term: searchTerm || lossesData?.searchText, searchBy: lossesData?.searchBy, requestType: 'search' })\r\n    ).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    setIsTblLoader(true);\r\n    reset();\r\n    dispatch(resetClaimLossFilters());\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(getLossesTableFilterValues({ filtersValues: {} }));\r\n    dispatch(\r\n      getSearchLosses({\r\n        term: searchTerm || lossesData?.searchText,\r\n        filterTerm: '',\r\n        searchBy: lossesData?.searchBy,\r\n        requestType: 'filter',\r\n      })\r\n    );\r\n    dispatch(\r\n      getSearchLosses({ term: searchTerm || lossesData?.searchText, filterTerm: '', searchBy: lossesData?.searchBy, requestType: 'search' })\r\n    ).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleSearchFilter = (data) => {\r\n    const { filters } = data;\r\n    setIsTblLoader(true);\r\n    dispatch(getLossesTableFilterValues({ filters }));\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(\r\n      getSearchLosses({\r\n        term: searchTerm || lossesData?.searchText,\r\n        filterTerm: filters,\r\n        searchBy: lossesData?.searchBy,\r\n        requestType: 'filter',\r\n      })\r\n    );\r\n    dispatch(\r\n      getSearchLosses({\r\n        term: searchTerm || lossesData?.searchText,\r\n        searchBy: lossesData?.searchBy,\r\n        filterTerm: filters,\r\n        requestType: 'search',\r\n      })\r\n    ).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setIsTblLoader(true);\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(\r\n      getSearchLosses({\r\n        size: rowsPerPage,\r\n        term: searchTerm || lossesData?.searchText,\r\n        searchBy: lossesData?.searchBy,\r\n        requestType: 'search',\r\n      })\r\n    ).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    setIsTblLoader(true);\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(\r\n      getSearchLosses({\r\n        sortBy: by,\r\n        direction: dir.toUpperCase(),\r\n        term: searchTerm || lossesData?.searchText,\r\n        searchBy: lossesData?.searchBy,\r\n        requestType: 'search',\r\n      })\r\n    ).then((resp) => {\r\n      if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n      if (resp.status === 'OK') setEmptyData(false);\r\n      if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n    });\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!initialLoad && utils.generic.isInvalidOrEmptyArray(claimsStatuses)) {\r\n        dispatch(getStatuses());\r\n        dispatch(getLossesTabData({ searchText: '', searchBy: lossesData?.searchBy }));\r\n        dispatch(getSearchLosses({ term: '', filterTerm: '', searchBy: lossesData?.searchBy, requestType: 'filter' }));\r\n        dispatch(resetSelectedLossItem());\r\n        dispatch(getSearchLosses({ term: '', direction: 'desc', searchBy: lossesData?.searchBy, requestType: 'search' })).then((resp) => {\r\n          if (resp.status === 'OK' || resp?.json?.statusCode === 500) setIsTblLoader(false);\r\n          if (resp.status === 'OK') setEmptyData(false);\r\n          if (resp?.json?.statusCode === 500) setEmptyData(true);\r\n        });\r\n        setInitialLoad(!initialLoad);\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const columns = [\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.columns.claimsList.reference'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossName',\r\n      label: utils.string.t('claims.columns.claimsList.lossName'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossDetails',\r\n      label: utils.string.t('claims.columns.claimsList.lossDetails'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateFrom',\r\n      label: utils.string.t('claims.columns.claimsList.dateFrom'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateTo',\r\n      label: utils.string.t('claims.columns.claimsList.dateTo'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'firstContactDateTime',\r\n      label: utils.string.t('claims.columns.claimsList.firstContactDateTime'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'catCodesID',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossStatus',\r\n      label: utils.string.t('claims.columns.claimsList.lossStatus'),\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n  ];\r\n\r\n  const searchField = [\r\n    {\r\n      name: 'searchBy',\r\n      type: 'autocompletemui',\r\n      options: searchOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value:\r\n        lossesData?.searchBy !== ''\r\n          ? searchOptions?.find((item) => item?.id === lossesData?.searchBy)\r\n          : searchOptions?.find((item) => item?.name === utils.string.t('claims.columns.claimsList.lossName')) || null,\r\n      callback: (evt, value) => {\r\n        dispatch(getLossesTabData({ searchBy: value?.id }));\r\n      },\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, isTableHidden, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <LossesTabView\r\n      lossesData={lossesData}\r\n      tableData={lossesTblData}\r\n      searchTerm={lossesData?.searchText}\r\n      searchField={searchField}\r\n      isSearchByNull={!Boolean(searchField[0].value)}\r\n      sort={{\r\n        ...lossesData?.sort,\r\n        type: 'numeric',\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      isTableHidden={isTableHidden}\r\n      handleSearch={handleSearch}\r\n      handleSort={handleSort}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      handleSearchFilter={handleSearchFilter}\r\n      handleCreateClaim={handleCreateClaim}\r\n      tableFilterFields={tableFilterFields}\r\n      onResetFilter={onResetFilter}\r\n      onResetSearch={onResetSearch}\r\n      toggleColumn={toggleColumn}\r\n      anchorEl={anchorEl}\r\n      setAnchorEl={setAnchorEl}\r\n      isTblLoader={isTblLoader}\r\n      emptyData={emptyData}\r\n      resetKey={resetKey}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}