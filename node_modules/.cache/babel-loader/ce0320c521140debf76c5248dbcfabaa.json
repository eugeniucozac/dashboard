{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ReportingGroupUser\\\\ReportingGroupUser.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Overflow, SectionHeader, TableCell, TableHead, FilterBar, PopoverMenu, Summary } from 'components';\nimport * as utils from 'utils';\nimport { ReportGroupSearchUsers } from 'modules';\nimport styles from './ReportingGroupUser.styles'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReportingGroupUserView.propTypes = {\n  groupTitle: PropTypes.string.isRequired,\n  groupId: PropTypes.string.isRequired,\n  list: PropTypes.array.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  popoverActions: PropTypes.array.isRequired,\n  searchVal: PropTypes.string,\n  isBack: PropTypes.bool\n};\nexport function ReportingGroupUserView(_ref) {\n  var _this = this;\n\n  var groupTitle = _ref.groupTitle,\n      groupId = _ref.groupId,\n      list = _ref.list,\n      fields = _ref.fields,\n      actions = _ref.actions,\n      popoverActions = _ref.popoverActions,\n      searchVal = _ref.searchVal,\n      isBack = _ref.isBack;\n  var classes = makeStyles(styles, {\n    name: 'ReportingGroupUser'\n  })();\n  var cols = [{\n    id: 'fullname',\n    label: utils.string.t('admin.fullName')\n  }, {\n    id: 'emailAddress',\n    label: utils.string.t('admin.emailAddress')\n  }];\n  return /*#__PURE__*/_jsxDEV(Summary, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: \"\".concat(groupTitle, \" \").concat(utils.string.t('reporting.access')),\n      testid: \"reporting_header\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FilterBar, {\n          id: \"userFilter\",\n          fields: fields,\n          actions: actions,\n          \"data-testid\": \"filter-bar\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), !searchVal || isBack ? /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 44,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"user-list\",\n          children: list && list.length > 0 && list.map(function (user) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              hover: true,\n              \"data-testid\": \"user-\".concat(user.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-fullname\",\n                children: user.fullName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"user-emailId\",\n                children: user.emailId\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nestedClasses: {\n                  root: classes.dataCellLast\n                },\n                menu: true,\n                \"data-testid\": \"user-menu\",\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"admin-user-table-popover\",\n                  data: {\n                    user: user\n                  },\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 58,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 23\n              }, _this)]\n            }, user.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(ReportGroupSearchUsers, {\n      searchVal: searchVal,\n      groupId: groupId\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 67,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ReportingGroupUserView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportingGroupUserView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ReportingGroupUser/ReportingGroupUser.view.js"],"names":["React","PropTypes","Overflow","SectionHeader","TableCell","TableHead","FilterBar","PopoverMenu","Summary","utils","ReportGroupSearchUsers","styles","makeStyles","Table","TableRow","TableBody","Grid","ReportingGroupUserView","propTypes","groupTitle","string","isRequired","groupId","list","array","handleDelete","func","fields","actions","popoverActions","searchVal","isBack","bool","classes","name","cols","id","label","t","length","map","user","fullName","emailId","root","dataCellLast"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Overflow, SectionHeader, TableCell, TableHead, FilterBar, PopoverMenu, Summary } from 'components';\r\nimport * as utils from 'utils';\r\nimport { ReportGroupSearchUsers } from 'modules';\r\nimport styles from './ReportingGroupUser.styles';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody, Grid } from '@material-ui/core';\r\n\r\nReportingGroupUserView.propTypes = {\r\n  groupTitle: PropTypes.string.isRequired,\r\n  groupId: PropTypes.string.isRequired,\r\n  list: PropTypes.array.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  popoverActions: PropTypes.array.isRequired,\r\n  searchVal: PropTypes.string,\r\n  isBack: PropTypes.bool,\r\n};\r\n\r\nexport function ReportingGroupUserView({ groupTitle, groupId, list, fields, actions, popoverActions, searchVal, isBack }) {\r\n  const classes = makeStyles(styles, { name: 'ReportingGroupUser' })();\r\n\r\n  const cols = [\r\n    { id: 'fullname', label: utils.string.t('admin.fullName') },\r\n    { id: 'emailAddress', label: utils.string.t('admin.emailAddress') },\r\n  ];\r\n\r\n  return (\r\n    <Summary>\r\n      <SectionHeader title={`${groupTitle} ${utils.string.t('reporting.access')}`} testid=\"reporting_header\"></SectionHeader>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <FilterBar id=\"userFilter\" fields={fields} actions={actions} data-testid=\"filter-bar\" />\r\n        </Grid>\r\n      </Grid>\r\n      {!searchVal || isBack ? (\r\n        <Overflow>\r\n          <Table size=\"small\">\r\n            <TableHead columns={cols} />\r\n            <TableBody data-testid=\"user-list\">\r\n              {list &&\r\n                list.length > 0 &&\r\n                list.map((user) => {\r\n                  return (\r\n                    <TableRow key={user.id} hover data-testid={`user-${user.id}`}>\r\n                      <TableCell nowrap data-testid=\"user-fullname\">\r\n                        {user.fullName}\r\n                      </TableCell>\r\n                      <TableCell nowrap data-testid=\"user-emailId\">\r\n                        {user.emailId}\r\n                      </TableCell>\r\n                      <TableCell nestedClasses={{ root: classes.dataCellLast }} menu data-testid=\"user-menu\">\r\n                        <PopoverMenu id=\"admin-user-table-popover\" data={{ user }} items={popoverActions} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          </Table>\r\n        </Overflow>\r\n      ) : (\r\n        <ReportGroupSearchUsers searchVal={searchVal} groupId={groupId} />\r\n      )}\r\n    </Summary>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}