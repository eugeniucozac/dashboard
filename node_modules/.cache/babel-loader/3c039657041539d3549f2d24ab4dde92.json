{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsAuthorisation\\\\ProcessingInstructionsAuthorisation.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory } from 'react-router';\nimport get from 'lodash/get';\nimport uniqBy from 'lodash/uniqBy'; //app\n\nimport ProcessingInstructionsAuthorisationView from './ProcessingInstructionsAuthorisation.view';\nimport { updateProcessingInstruction, getUsersForRole, selectUsersInRoles, selectUser, showModal, submitProcessingInstruction, enqueueNotification, approveOrRejectInstruction, hideModal, uploadGeneratedPiPdfToGxb, storeResetAllState, selectPiProducingBrokers, selectPiAccountExecutives, sendEmailNotification, initiateCase, selectRefDataNewDocumentTypesByContextSource, getMetaDataForPdf, updateReferenceDocumentCountLoading, getRiskReferenceDocumentsCount } from 'stores';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { savePDF } from 'modules';\nimport styles from './ProcessingInstructionsAuthorisation.styles'; //mui\n\nimport { Box, makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsAuthorisation.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired\n  }).isRequired,\n  checkListMandatoryDataStatus: PropTypes.bool.isRequired,\n  processingInstructionMandatoryDataStatus: PropTypes.bool.isRequired\n};\nexport default function ProcessingInstructionsAuthorisation(_ref) {\n  _s();\n\n  var _riskReferences$reduc,\n      _utils$processingInst,\n      _utils$processingInst2,\n      _this = this,\n      _instruction$details$,\n      _instruction$details6,\n      _instruction$details$2,\n      _instruction$details7;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      childRef = _ref.childRef,\n      checkListMandatoryDataStatus = _ref.checkListMandatoryDataStatus,\n      processingInstructionMandatoryDataStatus = _ref.processingInstructionMandatoryDataStatus;\n  var classes = makeStyles(styles)();\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var user = useSelector(selectUser);\n  var users = useSelector(selectUsersInRoles);\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {};\n  var producingBrokerValues = useSelector(selectPiProducingBrokers);\n  var accountExecutiveValues = useSelector(selectPiAccountExecutives);\n  var retainedBrokerageAmountForPdf = useSelector(function (state) {\n    return get(state, 'processingInstructions.retainedBrokerageAmountForPdf');\n  });\n  var totalAmountForPdf = useSelector(function (state) {\n    return get(state, 'processingInstructions.totalAmountForPdf');\n  });\n  var businessProcesses = useSelector(function (state) {\n    return get(state, 'referenceData.businessProcesses');\n  });\n  var isResetAllSelected = useSelector(function (state) {\n    return get(state, 'processingInstructions.isResetAllSelected');\n  });\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultValues = _useState2[0],\n      setDefaultValues = _useState2[1];\n\n  var isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n\n  var _useState3 = useState(isSubmittedAuthorisedSignatory),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isReadyToSubmit = _useState4[0],\n      setIsReadyToSubmit = _useState4[1];\n\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var isEditAllowed = userHasWritePermission && (isDraft || isRejectedDraft || isReopened || isResetAllSelected);\n  var isReadOnly = !isEditAllowed;\n  var refDataCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  }) || [];\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var faBorderProcessType = isBordereau || isFeeAndAmendment;\n  var riskReferences = instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences;\n  var leadRef = riskReferences === null || riskReferences === void 0 ? void 0 : riskReferences.find(function (r) {\n    return r.leadPolicy;\n  });\n  var gxbRiskRefFECs = utils.generic.isValidArray(riskReferences, true) ? (riskReferences === null || riskReferences === void 0 ? void 0 : (_riskReferences$reduc = riskReferences.reduce(function (acc, curr) {\n    var _curr$gxbAttributeDef, _curr$gxbAttributeDef2, _curr$gxbAttributeDef3;\n\n    return [].concat(_toConsumableArray(acc), _toConsumableArray((_curr$gxbAttributeDef = curr === null || curr === void 0 ? void 0 : (_curr$gxbAttributeDef2 = curr.gxbAttributeDefaultValues) === null || _curr$gxbAttributeDef2 === void 0 ? void 0 : (_curr$gxbAttributeDef3 = _curr$gxbAttributeDef2.workFlowFrontEndContacts) === null || _curr$gxbAttributeDef3 === void 0 ? void 0 : _curr$gxbAttributeDef3.filter(function (gxbFecs) {\n      return gxbFecs === null || gxbFecs === void 0 ? void 0 : gxbFecs.gxbUseId;\n    })) !== null && _curr$gxbAttributeDef !== void 0 ? _curr$gxbAttributeDef : []));\n  }, [])) === null || _riskReferences$reduc === void 0 ? void 0 : _riskReferences$reduc.map(function (fec) {\n    return {\n      id: fec === null || fec === void 0 ? void 0 : fec.gxbUseId,\n      name: \"\".concat(fec === null || fec === void 0 ? void 0 : fec.name, \" - \").concat(fec === null || fec === void 0 ? void 0 : fec.emailId)\n    };\n  })) || [] : [];\n\n  var handleResetAll = function handleResetAll() {\n    dispatch(storeResetAllState(true));\n  }; // check the documents are uploaded or not in the risk reference and details steps\n\n\n  var isAllowPremiumTaxValidation = ((_utils$processingInst = utils.processingInstructions.getFinancialField(instruction, 'premiumTaxCalculationSheetAttached')) === null || _utils$processingInst === void 0 ? void 0 : _utils$processingInst.numberValue) === 1 ? true : false;\n  var isAllowSignedLinesValidation = ((_utils$processingInst2 = utils.processingInstructions.getFinancialField(instruction, 'signedLinesCalculationSheetAttached')) === null || _utils$processingInst2 === void 0 ? void 0 : _utils$processingInst2.numberValue) === 1 ? true : false;\n  var isNoPremiumTaxDocumentExist = !(documents === null || documents === void 0 ? void 0 : documents.premiumTaxDocument) ? true : false;\n  var isNoSignedLinesDocumentExist = !(documents === null || documents === void 0 ? void 0 : documents.signedLinesDocument) ? true : false;\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isAnyRiskRefHavingNoDocument = _useState6[0],\n      setIsAnyRiskRefHavingNoDocument = _useState6[1];\n\n  useEffect(function () {\n    dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD, constants.AUTHORISED_SIGNATORY]));\n  }, [dispatch]);\n  useEffect(function () {\n    if (!isSubmittedProcessing && !isSubmittedAuthorisedSignatory && utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n      var _documents$riskRefere;\n\n      dispatch(updateReferenceDocumentCountLoading(true));\n      var referenceList = documents === null || documents === void 0 ? void 0 : (_documents$riskRefere = documents.riskReferences) === null || _documents$riskRefere === void 0 ? void 0 : _documents$riskRefere.map(function (refData) {\n        return {\n          endorsementId: refData.endorsementId,\n          endorsementNumber: refData.endorsementNumber,\n          riskRefId: refData.riskRefId,\n          xbInstanceId: refData.xbInstanceId,\n          xbPolicyId: refData.xbPolicyId\n        };\n      });\n      var documentTypeValue = isEndorsement ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription : faBorderProcessType ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then(function (response) {\n        if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n          var _response$data;\n\n          setIsAnyRiskRefHavingNoDocument(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.some(function (a) {\n            return a.documentCount === 0;\n          }));\n        }\n      });\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var filterUsersByRole = function filterUsersByRole(roleNames) {\n    return riskReferences === null || riskReferences === void 0 ? void 0 : riskReferences.reduce(function (acc, cur) {\n      var _users$filter, _users$filter$filter;\n\n      var groupDepartXbInstanceIds = \"\".concat(cur === null || cur === void 0 ? void 0 : cur.departmentId, \"-\").concat(cur === null || cur === void 0 ? void 0 : cur.xbInstanceId);\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(users === null || users === void 0 ? void 0 : (_users$filter = users.filter(function (u) {\n        return roleNames === null || roleNames === void 0 ? void 0 : roleNames.includes(u === null || u === void 0 ? void 0 : u.userRole);\n      })) === null || _users$filter === void 0 ? void 0 : (_users$filter$filter = _users$filter.filter(function (u) {\n        var _u$departmentId, _u$departmentId$split, _u$departmentId$split2;\n\n        return u === null || u === void 0 ? void 0 : (_u$departmentId = u.departmentId) === null || _u$departmentId === void 0 ? void 0 : (_u$departmentId$split = _u$departmentId.split(',')) === null || _u$departmentId$split === void 0 ? void 0 : (_u$departmentId$split2 = _u$departmentId$split.map(function (x) {\n          return x === null || x === void 0 ? void 0 : x.trim();\n        })) === null || _u$departmentId$split2 === void 0 ? void 0 : _u$departmentId$split2.includes(groupDepartXbInstanceIds);\n      })) === null || _users$filter$filter === void 0 ? void 0 : _users$filter$filter.map(function (u) {\n        return {\n          id: u === null || u === void 0 ? void 0 : u.userId,\n          name: \"\".concat(u === null || u === void 0 ? void 0 : u.fullName, \" - \").concat(u === null || u === void 0 ? void 0 : u.emailId)\n        };\n      })));\n    }, []);\n  };\n\n  var inRolesFrontEndContacts = uniqBy(filterUsersByRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD]), 'id');\n  var operationsLeads = uniqBy(filterUsersByRole([constants.AUTHORISED_SIGNATORY]), 'id');\n  var frontEndContacts = utils.generic.isValidArray(gxbRiskRefFECs, true) ? gxbRiskRefFECs : inRolesFrontEndContacts;\n\n  var getFrontEndContactEmailId = function getFrontEndContactEmailId() {\n    var _instruction$details, _frontEndContacts$fin;\n\n    var fecId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.frontEndContactId;\n    var fecEmailId = frontEndContacts === null || frontEndContacts === void 0 ? void 0 : (_frontEndContacts$fin = frontEndContacts.find(function (fec) {\n      return fec.id === fecId;\n    })) === null || _frontEndContacts$fin === void 0 ? void 0 : _frontEndContacts$fin.name;\n    return fecEmailId.substring(fecEmailId.indexOf('-') + 2);\n  };\n\n  var getSavedFrontEndContactName = function getSavedFrontEndContactName() {\n    var _instruction$details2, _frontEndContacts$fin2;\n\n    var fecId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details2 = instruction.details) === null || _instruction$details2 === void 0 ? void 0 : _instruction$details2.frontEndContactId;\n    var fecName = frontEndContacts === null || frontEndContacts === void 0 ? void 0 : (_frontEndContacts$fin2 = frontEndContacts.find(function (fec) {\n      return fec.id === fecId;\n    })) === null || _frontEndContacts$fin2 === void 0 ? void 0 : _frontEndContacts$fin2.name;\n    return fecName;\n  };\n\n  var getSelectedFrontEndContactName = function getSelectedFrontEndContactName(fecId) {\n    var _frontEndContacts$fin3;\n\n    var selectedFecName = frontEndContacts === null || frontEndContacts === void 0 ? void 0 : (_frontEndContacts$fin3 = frontEndContacts.find(function (fec) {\n      return fec.id === fecId;\n    })) === null || _frontEndContacts$fin3 === void 0 ? void 0 : _frontEndContacts$fin3.name;\n    return selectedFecName.substring(0, selectedFecName.indexOf('-') - 1);\n  };\n\n  var getAuthorizedSignatoryName = function getAuthorizedSignatoryName() {\n    var _instruction$details3, _operationsLeads$find;\n\n    var asId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details3 = instruction.details) === null || _instruction$details3 === void 0 ? void 0 : _instruction$details3.authorisedSignatoryId;\n    var asName = operationsLeads === null || operationsLeads === void 0 ? void 0 : (_operationsLeads$find = operationsLeads.find(function (as) {\n      return as.id === asId;\n    })) === null || _operationsLeads$find === void 0 ? void 0 : _operationsLeads$find.name;\n    return asName;\n  };\n\n  var getAccountExecutiveName = function getAccountExecutiveName() {\n    var _instruction$details4, _accountExecutiveValu;\n\n    var accountExecutiveId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details4 = instruction.details) === null || _instruction$details4 === void 0 ? void 0 : _instruction$details4.accountExecutiveId;\n    var accountExecutiveName = accountExecutiveValues === null || accountExecutiveValues === void 0 ? void 0 : (_accountExecutiveValu = accountExecutiveValues.find(function (a) {\n      return a.id === accountExecutiveId;\n    })) === null || _accountExecutiveValu === void 0 ? void 0 : _accountExecutiveValu.value;\n    return accountExecutiveName;\n  };\n\n  var getProducingBrokerName = function getProducingBrokerName() {\n    var _instruction$details5, _producingBrokerValue;\n\n    var producingBrokerId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details5 = instruction.details) === null || _instruction$details5 === void 0 ? void 0 : _instruction$details5.producingBrokerId;\n    var producingBrokerName = producingBrokerValues === null || producingBrokerValues === void 0 ? void 0 : (_producingBrokerValue = producingBrokerValues.find(function (p) {\n      return p.id === producingBrokerId;\n    })) === null || _producingBrokerValue === void 0 ? void 0 : _producingBrokerValue.value;\n    return producingBrokerName;\n  };\n\n  var handleCancel = function handleCancel() {\n    var _childRef$current, _childRef$current$pro;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current = childRef.current) === null || _childRef$current === void 0 ? void 0 : (_childRef$current$pro = _childRef$current.props) === null || _childRef$current$pro === void 0 ? void 0 : _childRef$current$pro.resetFunc;\n\n    if (utils.generic.isFunction(reset)) {\n      reset(defaultValues, {\n        keepDirty: false\n      });\n    }\n  };\n\n  var getFecEmailId = function getFecEmailId(fecId) {\n    var _frontEndContacts$fin4, _fecEmailId$split$;\n\n    var fecEmailId = frontEndContacts === null || frontEndContacts === void 0 ? void 0 : (_frontEndContacts$fin4 = frontEndContacts.find(function (fec) {\n      return (fec === null || fec === void 0 ? void 0 : fec.id) === fecId;\n    })) === null || _frontEndContacts$fin4 === void 0 ? void 0 : _frontEndContacts$fin4.name;\n    return (fecEmailId === null || fecEmailId === void 0 ? void 0 : (_fecEmailId$split$ = fecEmailId.split('-')[1]) === null || _fecEmailId$split$ === void 0 ? void 0 : _fecEmailId$split$.trim()) || '';\n  };\n\n  var handleSave = function handleSave() {\n    var _childRef$current2, _childRef$current2$pr;\n\n    var formValues = childRef === null || childRef === void 0 ? void 0 : (_childRef$current2 = childRef.current) === null || _childRef$current2 === void 0 ? void 0 : (_childRef$current2$pr = _childRef$current2.props) === null || _childRef$current2$pr === void 0 ? void 0 : _childRef$current2$pr.values;\n\n    var updatedInstruction = _objectSpread(_objectSpread({}, instruction), {}, {\n      details: _objectSpread(_objectSpread({}, instruction.details), {}, {\n        frontEndContact: getSelectedFrontEndContactName(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContact),\n        frontEndContactId: formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContact,\n        frontEndContactEmail: getFecEmailId(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContact),\n        authorisedSignatoryId: formValues.authorisedSignatory\n      })\n    });\n\n    dispatch(updateProcessingInstruction(updatedInstruction));\n  };\n\n  var mandatoryDocumentsNotUploaded = function mandatoryDocumentsNotUploaded() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.documentsValidationTitle,\n              children: [\"$\", utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 241,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(\"ul\", {\n              children: [isAnyRiskRefHavingNoDocument && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: utils.string.t('processingInstructions.mandatoryDocuments.signedSlipDocumentsUploaded')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, _this), isAllowPremiumTaxValidation && isNoPremiumTaxDocumentExist && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: utils.string.t('processingInstructions.mandatoryDocuments.premiumTaxDocumentsUploaded')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 249,\n                columnNumber: 21\n              }, _this), isAllowSignedLinesValidation && isNoSignedLinesDocumentExist && /*#__PURE__*/_jsxDEV(\"li\", {\n                children: utils.string.t('processingInstructions.mandatoryDocuments.marketSignedLinesDocumentUploaded')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 252,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 244,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 240,\n            columnNumber: 15\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (isAllowPremiumTaxValidation && isNoPremiumTaxDocumentExist || isAllowSignedLinesValidation && isNoSignedLinesDocumentExist || isAnyRiskRefHavingNoDocument) {\n      mandatoryDocumentsNotUploaded();\n    } else {\n      var _childRef$current3, _childRef$current3$pr, _businessProcesses$fi;\n\n      var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current3 = childRef.current) === null || _childRef$current3 === void 0 ? void 0 : (_childRef$current3$pr = _childRef$current3.props) === null || _childRef$current3$pr === void 0 ? void 0 : _childRef$current3$pr.values) || {};\n      var businessProcess = businessProcesses === null || businessProcesses === void 0 ? void 0 : (_businessProcesses$fi = businessProcesses.find(function (bp) {\n        return bp.businessProcessID === instruction.businessProcessId;\n      })) === null || _businessProcesses$fi === void 0 ? void 0 : _businessProcesses$fi.businessProcessName;\n\n      var updatedInstruction = _objectSpread(_objectSpread({}, instruction), {}, {\n        businessProcess: businessProcess,\n        details: _objectSpread(_objectSpread({}, instruction.details), {}, {\n          frontEndContactId: formValues.frontEndContact,\n          authorisedSignatoryId: formValues.authorisedSignatory\n        })\n      });\n\n      dispatch(submitProcessingInstruction(updatedInstruction)).then(function (res) {\n        if ((res === null || res === void 0 ? void 0 : res.status) === constants.API_RESPONSE_OK) {\n          history.push('/processing-instructions');\n          dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\n        }\n      });\n    }\n  };\n\n  var getUncheckedWarningMessage = function getUncheckedWarningMessage() {\n    var _instruction$checklis, _instruction$financia;\n\n    var isAuthorizedSignatoryCheckedAll = (instruction === null || instruction === void 0 ? void 0 : (_instruction$checklis = instruction.checklist) === null || _instruction$checklis === void 0 ? void 0 : _instruction$checklis.every(function (item) {\n      return item.authorisedSignatory;\n    })) && (instruction === null || instruction === void 0 ? void 0 : (_instruction$financia = instruction.financialChecklist) === null || _instruction$financia === void 0 ? void 0 : _instruction$financia.every(function (item) {\n      return item.approvedByAuthorisedSignatory;\n    }));\n    return !isAuthorizedSignatoryCheckedAll ? utils.string.t('processingInstructions.authorisations.warningText') : '';\n  };\n\n  var documentTypesBeforeFilter = useSelector(selectRefDataNewDocumentTypesByContextSource(constants.DMS_CONTEXT_INSTRUCTION, constants.PI_GENERATE_PDF_SUBMIT.sourceID));\n  var documentTypesAfterFilter = documentTypesBeforeFilter === null || documentTypesBeforeFilter === void 0 ? void 0 : documentTypesBeforeFilter.filter(function (type) {\n    return type.documentTypeDescription === constants.PI_GENERATE_PDF_SUBMIT.documentTypeDescription && type.sectionKey === constants.PI_GENERATE_PDF_SUBMIT.sectionKey && type.sourceID === constants.PI_GENERATE_PDF_SUBMIT.sourceID;\n  });\n\n  var handleUploadProcessingInstruction = function handleUploadProcessingInstruction() {\n    var pdf = savePDF({\n      processingInstruction: instruction,\n      departmentName: leadRef === null || leadRef === void 0 ? void 0 : leadRef.departmentName,\n      frontEndContactName: getSavedFrontEndContactName(),\n      authorizedSignatoryName: getAuthorizedSignatoryName(),\n      accountExecutiveName: getAccountExecutiveName(),\n      producingBrokerName: getProducingBrokerName(),\n      retainedBrokerageAmountForPdf: retainedBrokerageAmountForPdf,\n      totalAmountForPdf: totalAmountForPdf,\n      refDataCurrencies: refDataCurrencies\n    });\n    dispatch(getMetaDataForPdf({\n      leadRef: leadRef,\n      instruction: instruction\n    })).then(function (data) {\n      if ((data === null || data === void 0 ? void 0 : data.status) === constants.API_RESPONSE_OK) {\n        dispatch(uploadGeneratedPiPdfToGxb({\n          pdf: pdf,\n          riskRef: leadRef,\n          documentTypesAfterFilter: documentTypesAfterFilter,\n          instruction: instruction,\n          metaData: data === null || data === void 0 ? void 0 : data.data\n        })).then(function (res) {\n          var _res$data, _res$response, _res$response2;\n\n          if ((res === null || res === void 0 ? void 0 : (_res$data = res.data) === null || _res$data === void 0 ? void 0 : _res$data.length) === 0 || (res === null || res === void 0 ? void 0 : (_res$response = res.response) === null || _res$response === void 0 ? void 0 : _res$response.status) === constants.API_STATUS_INTERNAL_SERVER_ERROR || (res === null || res === void 0 ? void 0 : (_res$response2 = res.response) === null || _res$response2 === void 0 ? void 0 : _res$response2.status) === constants.API_STATUS_NOT_FOUND) {\n            dispatch(sendEmailNotification({\n              instruction: instruction,\n              frontEndContactEmail: getFrontEndContactEmailId(),\n              frontEndContactName: getSavedFrontEndContactName()\n            }));\n          }\n        });\n      }\n    });\n  };\n\n  var handleApprove = function handleApprove() {\n    var instructionType = utils.string.t(\"processingInstructions.type.\".concat(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId));\n    dispatch(showModal({\n      component: 'CONFIRM_WITH_COMMENT',\n      props: {\n        title: utils.string.t('processingInstructions.authorisations.approve.title'),\n        width: 'sm',\n        maxWidth: 'sm',\n        componentProps: {\n          confirmLabel: utils.string.t('app.approve'),\n          cancelLabel: utils.string.t('app.cancel'),\n          warningMessage: getUncheckedWarningMessage(),\n          confirmMessage: utils.string.t('processingInstructions.authorisations.approve.text', {\n            instructionType: instructionType\n          }),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'primary'\n          },\n          commentLabel: utils.string.t('processingInstructions.authorisations.approve.commentLabel'),\n          commentProps: {\n            multiline: true,\n            rows: 5,\n            rowsMax: 6,\n            inputProps: {\n              maxLength: 2000\n            }\n          },\n          confirmHandler: function confirmHandler(comment) {\n            dispatch(hideModal());\n            handleUploadProcessingInstruction();\n            dispatch(approveOrRejectInstruction(instruction.id, comment, 'APPROVE')).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.PI_STATUS_SUBMITTED_PROCESSING_LABEL) {\n                var _businessProcesses$fi2;\n\n                var businessProcess = businessProcesses === null || businessProcesses === void 0 ? void 0 : (_businessProcesses$fi2 = businessProcesses.find(function (bp) {\n                  return bp.businessProcessID === instruction.businessProcessId;\n                })) === null || _businessProcesses$fi2 === void 0 ? void 0 : _businessProcesses$fi2.businessProcessName;\n                dispatch(initiateCase(_objectSpread(_objectSpread({}, instruction), {}, {\n                  businessProcess: businessProcess\n                })));\n              }\n            });\n          },\n          cancelHandler: function cancelHandler() {\n            dispatch(hideModal());\n          },\n          closeHandler: function closeHandler() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n  };\n\n  var handleReject = function handleReject() {\n    var instructionType = utils.string.t(\"processingInstructions.type.\".concat(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId));\n    dispatch(showModal({\n      component: 'CONFIRM_WITH_COMMENT',\n      props: {\n        title: utils.string.t('processingInstructions.authorisations.reject.title'),\n        width: 'sm',\n        maxWidth: 'sm',\n        componentProps: {\n          confirmLabel: utils.string.t('app.reject'),\n          cancelLabel: utils.string.t('app.cancel'),\n          warningMessage: getUncheckedWarningMessage(),\n          confirmMessage: utils.string.t('processingInstructions.authorisations.reject.text', {\n            instructionType: instructionType\n          }),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'primary'\n          },\n          commentLabel: utils.string.t('processingInstructions.authorisations.reject.commentLabel'),\n          commentProps: {\n            multiline: true,\n            rows: 5,\n            rowsMax: 6,\n            inputProps: {\n              maxLength: 2000\n            }\n          },\n          confirmHandler: function confirmHandler(comment) {\n            dispatch(hideModal());\n            dispatch(approveOrRejectInstruction(instruction.id, comment, 'REJECT'));\n          },\n          cancelHandler: function cancelHandler() {\n            dispatch(hideModal());\n          },\n          closeHandler: function closeHandler() {\n            dispatch(hideModal());\n          }\n        }\n      }\n    }));\n  };\n\n  useEffect(function () {\n    var _childRef$current4, _childRef$current4$pr;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current4 = childRef.current) === null || _childRef$current4 === void 0 ? void 0 : (_childRef$current4$pr = _childRef$current4.props) === null || _childRef$current4$pr === void 0 ? void 0 : _childRef$current4$pr.resetFunc;\n\n    var updatedDefaultValues = _objectSpread({}, utils.form.getInitialValues(fields));\n\n    setDefaultValues(updatedDefaultValues);\n\n    if (utils.generic.isFunction(reset)) {\n      reset(updatedDefaultValues, {\n        keepDirty: false\n      });\n    }\n  }, [instruction] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var fields = [{\n    name: 'frontEndContact',\n    type: 'select',\n    options: frontEndContacts,\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('processingInstructions.authorisations.fields.frontEndContact'),\n    value: (_instruction$details$ = instruction === null || instruction === void 0 ? void 0 : (_instruction$details6 = instruction.details) === null || _instruction$details6 === void 0 ? void 0 : _instruction$details6.frontEndContactId) !== null && _instruction$details$ !== void 0 ? _instruction$details$ : '',\n    muiComponentProps: {\n      disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus\n    }\n  }, {\n    name: 'authorisedSignatory',\n    type: 'select',\n    options: operationsLeads,\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('processingInstructions.authorisations.fields.authorisedSignatory'),\n    value: (_instruction$details$2 = instruction === null || instruction === void 0 ? void 0 : (_instruction$details7 = instruction.details) === null || _instruction$details7 === void 0 ? void 0 : _instruction$details7.authorisedSignatoryId) !== null && _instruction$details$2 !== void 0 ? _instruction$details$2 : '',\n    muiComponentProps: {\n      disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus\n    }\n  }, {\n    name: 'readyToSubmit',\n    type: 'checkbox',\n    value: isReadyToSubmit,\n    label: utils.string.t('processingInstructions.authorisations.fields.readyToSubmit'),\n    muiComponentProps: {\n      disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus,\n      onChange: function onChange(name, value) {\n        setIsReadyToSubmit(value);\n      }\n    }\n  }]; // abort\n\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users)) return null;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsAuthorisationView, {\n    instruction: instruction,\n    fields: fields,\n    defaultValues: defaultValues,\n    isReadyToSubmit: isReadyToSubmit,\n    isSubmittedAuthorisedSignatory: isSubmittedAuthorisedSignatory,\n    isReadOnly: isReadOnly,\n    checkListMandatoryDataStatus: checkListMandatoryDataStatus,\n    processingInstructionMandatoryDataStatus: processingInstructionMandatoryDataStatus,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      save: handleSave,\n      cancel: handleCancel,\n      submit: handleSubmit,\n      approve: handleApprove,\n      reject: handleReject,\n      resetAll: handleResetAll\n    }),\n    ref: childRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 499,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsAuthorisation, \"24EPSptrzHKhZ9MOS6kYwIET22U=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsAuthorisation;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsAuthorisation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsAuthorisation/ProcessingInstructionsAuthorisation.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","useHistory","get","uniqBy","ProcessingInstructionsAuthorisationView","updateProcessingInstruction","getUsersForRole","selectUsersInRoles","selectUser","showModal","submitProcessingInstruction","enqueueNotification","approveOrRejectInstruction","hideModal","uploadGeneratedPiPdfToGxb","storeResetAllState","selectPiProducingBrokers","selectPiAccountExecutives","sendEmailNotification","initiateCase","selectRefDataNewDocumentTypesByContextSource","getMetaDataForPdf","updateReferenceDocumentCountLoading","getRiskReferenceDocumentsCount","constants","utils","savePDF","styles","Box","makeStyles","Typography","ProcessingInstructionsAuthorisation","propTypes","instruction","object","isRequired","handlers","shape","back","func","checkListMandatoryDataStatus","bool","processingInstructionMandatoryDataStatus","childRef","classes","dispatch","history","user","users","documents","state","producingBrokerValues","accountExecutiveValues","retainedBrokerageAmountForPdf","totalAmountForPdf","businessProcesses","isResetAllSelected","defaultValues","setDefaultValues","isSubmittedAuthorisedSignatory","processingInstructions","status","statusId","isSubmittedProcessing","isReadyToSubmit","setIsReadyToSubmit","isDraft","isRejectedDraft","isReopened","userHasWritePermission","app","access","feature","isEditAllowed","isReadOnly","refDataCurrencies","isEndorsement","processTypeId","isFeeAndAmendment","isBordereau","faBorderProcessType","riskReferences","leadRef","find","r","leadPolicy","gxbRiskRefFECs","generic","isValidArray","reduce","acc","curr","gxbAttributeDefaultValues","workFlowFrontEndContacts","filter","gxbFecs","gxbUseId","map","fec","id","name","emailId","handleResetAll","isAllowPremiumTaxValidation","getFinancialField","numberValue","isAllowSignedLinesValidation","isNoPremiumTaxDocumentExist","premiumTaxDocument","isNoSignedLinesDocumentExist","signedLinesDocument","isAnyRiskRefHavingNoDocument","setIsAnyRiskRefHavingNoDocument","FRONT_END_CONTACT","OPERATIONS_LEAD","AUTHORISED_SIGNATORY","referenceList","refData","endorsementId","endorsementNumber","riskRefId","xbInstanceId","xbPolicyId","documentTypeValue","PI_ENDORSEMENT_TYPE_DOCUMENT","documentTypeDescription","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","then","response","API_RESPONSE_OK","data","some","a","documentCount","filterUsersByRole","roleNames","cur","groupDepartXbInstanceIds","departmentId","u","includes","userRole","split","x","trim","userId","fullName","inRolesFrontEndContacts","operationsLeads","frontEndContacts","getFrontEndContactEmailId","fecId","details","frontEndContactId","fecEmailId","substring","indexOf","getSavedFrontEndContactName","fecName","getSelectedFrontEndContactName","selectedFecName","getAuthorizedSignatoryName","asId","authorisedSignatoryId","asName","as","getAccountExecutiveName","accountExecutiveId","accountExecutiveName","value","getProducingBrokerName","producingBrokerId","producingBrokerName","p","handleCancel","reset","current","props","resetFunc","isFunction","keepDirty","getFecEmailId","handleSave","formValues","values","updatedInstruction","frontEndContact","frontEndContactEmail","authorisedSignatory","mandatoryDocumentsNotUploaded","component","fullWidth","title","string","t","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","documentsValidationTitle","buttonColors","confirm","submitHandler","handleClose","handleSubmit","businessProcess","bp","businessProcessID","businessProcessId","businessProcessName","res","push","getUncheckedWarningMessage","isAuthorizedSignatoryCheckedAll","checklist","every","item","financialChecklist","approvedByAuthorisedSignatory","documentTypesBeforeFilter","DMS_CONTEXT_INSTRUCTION","PI_GENERATE_PDF_SUBMIT","sourceID","documentTypesAfterFilter","type","sectionKey","handleUploadProcessingInstruction","pdf","processingInstruction","departmentName","frontEndContactName","authorizedSignatoryName","riskRef","metaData","length","API_STATUS_INTERNAL_SERVER_ERROR","API_STATUS_NOT_FOUND","handleApprove","instructionType","width","cancelLabel","warningMessage","cancel","commentLabel","commentProps","multiline","rows","rowsMax","inputProps","maxLength","confirmHandler","comment","PI_STATUS_SUBMITTED_PROCESSING_LABEL","cancelHandler","closeHandler","handleReject","updatedDefaultValues","form","getInitialValues","fields","options","optionKey","optionLabel","label","muiComponentProps","disabled","onChange","isInvalidOrEmptyArray","save","submit","approve","reject","resetAll"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory } from 'react-router';\r\nimport get from 'lodash/get';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\n//app\r\nimport ProcessingInstructionsAuthorisationView from './ProcessingInstructionsAuthorisation.view';\r\nimport {\r\n  updateProcessingInstruction,\r\n  getUsersForRole,\r\n  selectUsersInRoles,\r\n  selectUser,\r\n  showModal,\r\n  submitProcessingInstruction,\r\n  enqueueNotification,\r\n  approveOrRejectInstruction,\r\n  hideModal,\r\n  uploadGeneratedPiPdfToGxb,\r\n  storeResetAllState,\r\n  selectPiProducingBrokers,\r\n  selectPiAccountExecutives,\r\n  sendEmailNotification,\r\n  initiateCase,\r\n  selectRefDataNewDocumentTypesByContextSource,\r\n  getMetaDataForPdf,\r\n  updateReferenceDocumentCountLoading,\r\n  getRiskReferenceDocumentsCount,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport { savePDF } from 'modules';\r\nimport styles from './ProcessingInstructionsAuthorisation.styles';\r\n\r\n//mui\r\nimport { Box, makeStyles, Typography } from '@material-ui/core';\r\n\r\nProcessingInstructionsAuthorisation.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  checkListMandatoryDataStatus: PropTypes.bool.isRequired,\r\n  processingInstructionMandatoryDataStatus: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsAuthorisation({\r\n  instruction,\r\n  handlers,\r\n  childRef,\r\n  checkListMandatoryDataStatus,\r\n  processingInstructionMandatoryDataStatus,\r\n}) {\r\n  const classes = makeStyles(styles)();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const user = useSelector(selectUser);\r\n  const users = useSelector(selectUsersInRoles);\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n  const producingBrokerValues = useSelector(selectPiProducingBrokers);\r\n  const accountExecutiveValues = useSelector(selectPiAccountExecutives);\r\n  const retainedBrokerageAmountForPdf = useSelector((state) => get(state, 'processingInstructions.retainedBrokerageAmountForPdf'));\r\n  const totalAmountForPdf = useSelector((state) => get(state, 'processingInstructions.totalAmountForPdf'));\r\n  const businessProcesses = useSelector((state) => get(state, 'referenceData.businessProcesses'));\r\n  const isResetAllSelected = useSelector((state) => get(state, 'processingInstructions.isResetAllSelected'));\r\n  const [defaultValues, setDefaultValues] = useState();\r\n  const isSubmittedAuthorisedSignatory = utils.processingInstructions.status.isSubmittedAuthorisedSignatory(instruction?.statusId);\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction?.statusId);\r\n\r\n  const [isReadyToSubmit, setIsReadyToSubmit] = useState(isSubmittedAuthorisedSignatory);\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const isEditAllowed = userHasWritePermission && (isDraft || isRejectedDraft || isReopened || isResetAllSelected);\r\n  const isReadOnly = !isEditAllowed;\r\n  const refDataCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes')) || [];\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const faBorderProcessType = isBordereau || isFeeAndAmendment;\r\n\r\n  const riskReferences = instruction?.riskReferences;\r\n  const leadRef = riskReferences?.find((r) => r.leadPolicy);\r\n  const gxbRiskRefFECs = utils.generic.isValidArray(riskReferences, true)\r\n    ? riskReferences\r\n        ?.reduce((acc, curr) => {\r\n          return [...acc, ...(curr?.gxbAttributeDefaultValues?.workFlowFrontEndContacts?.filter((gxbFecs) => gxbFecs?.gxbUseId) ?? [])];\r\n        }, [])\r\n        ?.map((fec) => ({ id: fec?.gxbUseId, name: `${fec?.name} - ${fec?.emailId}` })) || []\r\n    : [];\r\n\r\n  const handleResetAll = () => {\r\n    dispatch(storeResetAllState(true));\r\n  };\r\n  // check the documents are uploaded or not in the risk reference and details steps\r\n  const isAllowPremiumTaxValidation =\r\n    utils.processingInstructions.getFinancialField(instruction, 'premiumTaxCalculationSheetAttached')?.numberValue === 1 ? true : false;\r\n  const isAllowSignedLinesValidation =\r\n    utils.processingInstructions.getFinancialField(instruction, 'signedLinesCalculationSheetAttached')?.numberValue === 1 ? true : false;\r\n  const isNoPremiumTaxDocumentExist = !documents?.premiumTaxDocument ? true : false;\r\n  const isNoSignedLinesDocumentExist = !documents?.signedLinesDocument ? true : false;\r\n\r\n  const [isAnyRiskRefHavingNoDocument, setIsAnyRiskRefHavingNoDocument] = useState(false);\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersForRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD, constants.AUTHORISED_SIGNATORY]));\r\n  }, [dispatch]);\r\n\r\n  useEffect(() => {\r\n    if (!isSubmittedProcessing && !isSubmittedAuthorisedSignatory && utils.generic.isValidArray(documents?.riskReferences, true)) {\r\n      dispatch(updateReferenceDocumentCountLoading(true));\r\n      const referenceList = documents?.riskReferences?.map((refData) => {\r\n        return {\r\n          endorsementId: refData.endorsementId,\r\n          endorsementNumber: refData.endorsementNumber,\r\n          riskRefId: refData.riskRefId,\r\n          xbInstanceId: refData.xbInstanceId,\r\n          xbPolicyId: refData.xbPolicyId,\r\n        };\r\n      });\r\n      const documentTypeValue = isEndorsement\r\n        ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription\r\n        : faBorderProcessType\r\n        ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription\r\n        : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\r\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then((response) => {\r\n        if (response?.status === constants.API_RESPONSE_OK) {\r\n          setIsAnyRiskRefHavingNoDocument(response?.data?.some((a) => a.documentCount === 0));\r\n        }\r\n      });\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const filterUsersByRole = (roleNames) => {\r\n    return riskReferences?.reduce((acc, cur) => {\r\n      const groupDepartXbInstanceIds = `${cur?.departmentId}-${cur?.xbInstanceId}`;\r\n      return [\r\n        ...acc,\r\n        ...users\r\n          ?.filter((u) => roleNames?.includes(u?.userRole))\r\n          ?.filter((u) =>\r\n            u?.departmentId\r\n              ?.split(',')\r\n              ?.map((x) => x?.trim())\r\n              ?.includes(groupDepartXbInstanceIds)\r\n          )\r\n          ?.map((u) => {\r\n            return { id: u?.userId, name: `${u?.fullName} - ${u?.emailId}` };\r\n          }),\r\n      ];\r\n    }, []);\r\n  };\r\n\r\n  const inRolesFrontEndContacts = uniqBy(filterUsersByRole([constants.FRONT_END_CONTACT, constants.OPERATIONS_LEAD]), 'id');\r\n  const operationsLeads = uniqBy(filterUsersByRole([constants.AUTHORISED_SIGNATORY]), 'id');\r\n\r\n  const frontEndContacts = utils.generic.isValidArray(gxbRiskRefFECs, true) ? gxbRiskRefFECs : inRolesFrontEndContacts;\r\n\r\n  const getFrontEndContactEmailId = () => {\r\n    const fecId = instruction?.details?.frontEndContactId;\r\n    const fecEmailId = frontEndContacts?.find((fec) => fec.id === fecId)?.name;\r\n    return fecEmailId.substring(fecEmailId.indexOf('-') + 2);\r\n  };\r\n\r\n  const getSavedFrontEndContactName = () => {\r\n    const fecId = instruction?.details?.frontEndContactId;\r\n    const fecName = frontEndContacts?.find((fec) => fec.id === fecId)?.name;\r\n    return fecName;\r\n  };\r\n\r\n  const getSelectedFrontEndContactName = (fecId) => {\r\n    const selectedFecName = frontEndContacts?.find((fec) => fec.id === fecId)?.name;\r\n    return selectedFecName.substring(0, selectedFecName.indexOf('-') - 1);\r\n  };\r\n\r\n  const getAuthorizedSignatoryName = () => {\r\n    const asId = instruction?.details?.authorisedSignatoryId;\r\n    const asName = operationsLeads?.find((as) => as.id === asId)?.name;\r\n    return asName;\r\n  };\r\n\r\n  const getAccountExecutiveName = () => {\r\n    const accountExecutiveId = instruction?.details?.accountExecutiveId;\r\n    const accountExecutiveName = accountExecutiveValues?.find((a) => a.id === accountExecutiveId)?.value;\r\n    return accountExecutiveName;\r\n  };\r\n\r\n  const getProducingBrokerName = () => {\r\n    const producingBrokerId = instruction?.details?.producingBrokerId;\r\n    const producingBrokerName = producingBrokerValues?.find((p) => p.id === producingBrokerId)?.value;\r\n    return producingBrokerName;\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const reset = childRef?.current?.props?.resetFunc;\r\n\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset(defaultValues, { keepDirty: false });\r\n    }\r\n  };\r\n\r\n  const getFecEmailId = (fecId) => {\r\n    const fecEmailId = frontEndContacts?.find((fec) => fec?.id === fecId)?.name;\r\n    return fecEmailId?.split('-')[1]?.trim() || '';\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formValues = childRef?.current?.props?.values;\r\n\r\n    const updatedInstruction = {\r\n      ...instruction,\r\n      details: {\r\n        ...instruction.details,\r\n        frontEndContact: getSelectedFrontEndContactName(formValues?.frontEndContact),\r\n        frontEndContactId: formValues?.frontEndContact,\r\n        frontEndContactEmail: getFecEmailId(formValues?.frontEndContact),\r\n        authorisedSignatoryId: formValues.authorisedSignatory,\r\n      },\r\n    };\r\n\r\n    dispatch(updateProcessingInstruction(updatedInstruction));\r\n  };\r\n\r\n  const mandatoryDocumentsNotUploaded = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessage: (\r\n              <Box>\r\n                <Typography className={classes.documentsValidationTitle}>\r\n                  ${utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')}\r\n                </Typography>\r\n                <ul>\r\n                  {isAnyRiskRefHavingNoDocument && (\r\n                    <li>{utils.string.t('processingInstructions.mandatoryDocuments.signedSlipDocumentsUploaded')}</li>\r\n                  )}\r\n                  {isAllowPremiumTaxValidation && isNoPremiumTaxDocumentExist && (\r\n                    <li>{utils.string.t('processingInstructions.mandatoryDocuments.premiumTaxDocumentsUploaded')}</li>\r\n                  )}\r\n                  {isAllowSignedLinesValidation && isNoSignedLinesDocumentExist && (\r\n                    <li>{utils.string.t('processingInstructions.mandatoryDocuments.marketSignedLinesDocumentUploaded')}</li>\r\n                  )}\r\n                </ul>\r\n              </Box>\r\n            ),\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (\r\n      (isAllowPremiumTaxValidation && isNoPremiumTaxDocumentExist) ||\r\n      (isAllowSignedLinesValidation && isNoSignedLinesDocumentExist) ||\r\n      isAnyRiskRefHavingNoDocument\r\n    ) {\r\n      mandatoryDocumentsNotUploaded();\r\n    } else {\r\n      const formValues = childRef?.current?.props?.values || {};\r\n      const businessProcess = businessProcesses?.find((bp) => bp.businessProcessID === instruction.businessProcessId)?.businessProcessName;\r\n\r\n      const updatedInstruction = {\r\n        ...instruction,\r\n        businessProcess,\r\n        details: {\r\n          ...instruction.details,\r\n          frontEndContactId: formValues.frontEndContact,\r\n          authorisedSignatoryId: formValues.authorisedSignatory,\r\n        },\r\n      };\r\n\r\n      dispatch(submitProcessingInstruction(updatedInstruction)).then((res) => {\r\n        if (res?.status === constants.API_RESPONSE_OK) {\r\n          history.push('/processing-instructions');\r\n          dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const getUncheckedWarningMessage = () => {\r\n    const isAuthorizedSignatoryCheckedAll =\r\n      instruction?.checklist?.every((item) => item.authorisedSignatory) &&\r\n      instruction?.financialChecklist?.every((item) => item.approvedByAuthorisedSignatory);\r\n    return !isAuthorizedSignatoryCheckedAll ? utils.string.t('processingInstructions.authorisations.warningText') : '';\r\n  };\r\n\r\n  const documentTypesBeforeFilter = useSelector(\r\n    selectRefDataNewDocumentTypesByContextSource(constants.DMS_CONTEXT_INSTRUCTION, constants.PI_GENERATE_PDF_SUBMIT.sourceID)\r\n  );\r\n\r\n  const documentTypesAfterFilter = documentTypesBeforeFilter?.filter(\r\n    (type) =>\r\n      type.documentTypeDescription === constants.PI_GENERATE_PDF_SUBMIT.documentTypeDescription &&\r\n      type.sectionKey === constants.PI_GENERATE_PDF_SUBMIT.sectionKey &&\r\n      type.sourceID === constants.PI_GENERATE_PDF_SUBMIT.sourceID\r\n  );\r\n\r\n  const handleUploadProcessingInstruction = () => {\r\n    const pdf = savePDF({\r\n      processingInstruction: instruction,\r\n      departmentName: leadRef?.departmentName,\r\n      frontEndContactName: getSavedFrontEndContactName(),\r\n      authorizedSignatoryName: getAuthorizedSignatoryName(),\r\n      accountExecutiveName: getAccountExecutiveName(),\r\n      producingBrokerName: getProducingBrokerName(),\r\n      retainedBrokerageAmountForPdf: retainedBrokerageAmountForPdf,\r\n      totalAmountForPdf: totalAmountForPdf,\r\n      refDataCurrencies: refDataCurrencies,\r\n    });\r\n\r\n    dispatch(getMetaDataForPdf({ leadRef, instruction })).then((data) => {\r\n      if (data?.status === constants.API_RESPONSE_OK) {\r\n        dispatch(uploadGeneratedPiPdfToGxb({ pdf, riskRef: leadRef, documentTypesAfterFilter, instruction, metaData: data?.data })).then(\r\n          (res) => {\r\n            if (\r\n              res?.data?.length === 0 ||\r\n              res?.response?.status === constants.API_STATUS_INTERNAL_SERVER_ERROR ||\r\n              res?.response?.status === constants.API_STATUS_NOT_FOUND\r\n            ) {\r\n              dispatch(\r\n                sendEmailNotification({\r\n                  instruction,\r\n                  frontEndContactEmail: getFrontEndContactEmailId(),\r\n                  frontEndContactName: getSavedFrontEndContactName(),\r\n                })\r\n              );\r\n            }\r\n          }\r\n        );\r\n      }\r\n    });\r\n  };\r\n\r\n  const handleApprove = () => {\r\n    const instructionType = utils.string.t(`processingInstructions.type.${instruction?.processTypeId}`);\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM_WITH_COMMENT',\r\n        props: {\r\n          title: utils.string.t('processingInstructions.authorisations.approve.title'),\r\n          width: 'sm',\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.approve'),\r\n            cancelLabel: utils.string.t('app.cancel'),\r\n            warningMessage: getUncheckedWarningMessage(),\r\n            confirmMessage: utils.string.t('processingInstructions.authorisations.approve.text', { instructionType: instructionType }),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n            commentLabel: utils.string.t('processingInstructions.authorisations.approve.commentLabel'),\r\n            commentProps: {\r\n              multiline: true,\r\n              rows: 5,\r\n              rowsMax: 6,\r\n              inputProps: {\r\n                maxLength: 2000,\r\n              },\r\n            },\r\n            confirmHandler: (comment) => {\r\n              dispatch(hideModal());\r\n              handleUploadProcessingInstruction();\r\n              dispatch(approveOrRejectInstruction(instruction.id, comment, 'APPROVE')).then((response) => {\r\n                if (response?.status === constants.PI_STATUS_SUBMITTED_PROCESSING_LABEL) {\r\n                  const businessProcess = businessProcesses?.find(\r\n                    (bp) => bp.businessProcessID === instruction.businessProcessId\r\n                  )?.businessProcessName;\r\n                  dispatch(initiateCase({ ...instruction, businessProcess }));\r\n                }\r\n              });\r\n            },\r\n            cancelHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n            closeHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleReject = () => {\r\n    const instructionType = utils.string.t(`processingInstructions.type.${instruction?.processTypeId}`);\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM_WITH_COMMENT',\r\n        props: {\r\n          title: utils.string.t('processingInstructions.authorisations.reject.title'),\r\n          width: 'sm',\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.reject'),\r\n            cancelLabel: utils.string.t('app.cancel'),\r\n            warningMessage: getUncheckedWarningMessage(),\r\n            confirmMessage: utils.string.t('processingInstructions.authorisations.reject.text', { instructionType: instructionType }),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n            commentLabel: utils.string.t('processingInstructions.authorisations.reject.commentLabel'),\r\n            commentProps: {\r\n              multiline: true,\r\n              rows: 5,\r\n              rowsMax: 6,\r\n              inputProps: {\r\n                maxLength: 2000,\r\n              },\r\n            },\r\n            confirmHandler: (comment) => {\r\n              dispatch(hideModal());\r\n              dispatch(approveOrRejectInstruction(instruction.id, comment, 'REJECT'));\r\n            },\r\n            cancelHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n            closeHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      const reset = childRef?.current?.props?.resetFunc;\r\n      const updatedDefaultValues = {\r\n        ...utils.form.getInitialValues(fields),\r\n      };\r\n\r\n      setDefaultValues(updatedDefaultValues);\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset(updatedDefaultValues, {\r\n          keepDirty: false,\r\n        });\r\n      }\r\n    },\r\n    [instruction] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const fields = [\r\n    {\r\n      name: 'frontEndContact',\r\n      type: 'select',\r\n      options: frontEndContacts,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('processingInstructions.authorisations.fields.frontEndContact'),\r\n      value: instruction?.details?.frontEndContactId ?? '',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus,\r\n      },\r\n    },\r\n    {\r\n      name: 'authorisedSignatory',\r\n      type: 'select',\r\n      options: operationsLeads,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('processingInstructions.authorisations.fields.authorisedSignatory'),\r\n      value: instruction?.details?.authorisedSignatoryId ?? '',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus,\r\n      },\r\n    },\r\n    {\r\n      name: 'readyToSubmit',\r\n      type: 'checkbox',\r\n      value: isReadyToSubmit,\r\n      label: utils.string.t('processingInstructions.authorisations.fields.readyToSubmit'),\r\n      muiComponentProps: {\r\n        disabled: isReadOnly || checkListMandatoryDataStatus || processingInstructionMandatoryDataStatus,\r\n        onChange: (name, value) => {\r\n          setIsReadyToSubmit(value);\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users)) return null;\r\n\r\n  return (\r\n    <ProcessingInstructionsAuthorisationView\r\n      instruction={instruction}\r\n      fields={fields}\r\n      defaultValues={defaultValues}\r\n      isReadyToSubmit={isReadyToSubmit}\r\n      isSubmittedAuthorisedSignatory={isSubmittedAuthorisedSignatory}\r\n      isReadOnly={isReadOnly}\r\n      checkListMandatoryDataStatus={checkListMandatoryDataStatus}\r\n      processingInstructionMandatoryDataStatus={processingInstructionMandatoryDataStatus}\r\n      handlers={{\r\n        ...handlers,\r\n        save: handleSave,\r\n        cancel: handleCancel,\r\n        submit: handleSubmit,\r\n        approve: handleApprove,\r\n        reject: handleReject,\r\n        resetAll: handleResetAll,\r\n      }}\r\n      ref={childRef}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}