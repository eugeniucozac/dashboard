{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nexport var changePlacementMarket = function changePlacementMarket(placementMarketId, formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.changePlacementMarket',\n      message: 'Data missing for POST request'\n    };\n    dispatch(changePlacementMarketRequest(formData));\n    dispatch(addLoader('changePlacementMarket'));\n\n    if (!formData || !formData.placementId || !get(formData, 'markets.id') || !placementMarketId) {\n      dispatch(changePlacementMarketFailure(defaultError));\n      dispatch(enqueueNotification('notification.changePlacementMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('changePlacementMarket'));\n      return;\n    }\n\n    var id = placementMarketId;\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placementMarket/\".concat(id, \"/change-market\"),\n      data: {\n        marketId: get(formData, 'markets.id')\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(changePlacementMarketSuccess(data));\n      dispatch(enqueueNotification('notification.changePlacementMarket.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('changePlacementMarket'));\n      return data;\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (placement.changePlacementMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(changePlacementMarketFailure(err));\n\n      if (err.status === 'error') {\n        dispatch(enqueueNotification('notification.changePlacementMarket.alreadyExist', 'warning'));\n      } else {\n        dispatch(enqueueNotification('notification.changePlacementMarket.fail', 'error'));\n      }\n\n      dispatch(hideModal());\n      dispatch(removeLoader('changePlacementMarket'));\n      return err;\n    });\n  };\n};\nexport var changePlacementMarketRequest = function changePlacementMarketRequest(data) {\n  return {\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_REQUEST',\n    payload: data\n  };\n};\nexport var changePlacementMarketSuccess = function changePlacementMarketSuccess(data) {\n  return {\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_SUCCESS',\n    payload: data\n  };\n};\nexport var changePlacementMarketFailure = function changePlacementMarketFailure(error) {\n  return {\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.updateChangeMarket.js"],"names":["get","utils","authLogout","addLoader","enqueueNotification","hideModal","removeLoader","changePlacementMarket","placementMarketId","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","changePlacementMarketRequest","placementId","changePlacementMarketFailure","id","api","put","token","accessToken","edge","path","data","marketId","then","response","handleResponse","json","handleData","changePlacementMarketSuccess","err","errorParams","handleError","handleUnauthorized","status","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\n\r\nexport const changePlacementMarket = (placementMarketId, formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.changePlacementMarket',\r\n    message: 'Data missing for POST request',\r\n  };\r\n  dispatch(changePlacementMarketRequest(formData));\r\n  dispatch(addLoader('changePlacementMarket'));\r\n\r\n  if (!formData || !formData.placementId || !get(formData, 'markets.id') || !placementMarketId) {\r\n    dispatch(changePlacementMarketFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.changePlacementMarket.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('changePlacementMarket'));\r\n    return;\r\n  }\r\n\r\n  const id = placementMarketId;\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placementMarket/${id}/change-market`,\r\n      data: {\r\n        marketId: get(formData, 'markets.id'),\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(changePlacementMarketSuccess(data));\r\n      dispatch(enqueueNotification('notification.changePlacementMarket.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('changePlacementMarket'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (placement.changePlacementMarket)',\r\n      };\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(changePlacementMarketFailure(err));\r\n      if (err.status === 'error') {\r\n        dispatch(enqueueNotification('notification.changePlacementMarket.alreadyExist', 'warning'));\r\n      } else {\r\n        dispatch(enqueueNotification('notification.changePlacementMarket.fail', 'error'));\r\n      }\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('changePlacementMarket'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const changePlacementMarketRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const changePlacementMarketSuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const changePlacementMarketFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_MARKET_CHANGE_PUT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}