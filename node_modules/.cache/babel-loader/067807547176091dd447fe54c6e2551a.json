{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PlacementPDF\\\\PlacementPDF.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef, useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport { useReactToPrint } from 'react-to-print';\nimport PropTypes from 'prop-types'; // app\n\nimport { PlacementPDFView } from './PlacementPDF.view';\nimport * as utils from 'utils';\nimport { getCommentsByPlacement } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPlacementPDF.propTypes = {\n  handleClose: PropTypes.func,\n  component: PropTypes.func\n};\nexport function PlacementPDF(_ref) {\n  _s();\n\n  var handleClose = _ref.handleClose,\n      component = _ref.component,\n      componentProps = _objectWithoutProperties(_ref, [\"handleClose\", \"component\"]);\n\n  var dispatch = useDispatch();\n  var componentRef = useRef();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isRenderingPDF = _useState2[0],\n      setIsRenderingPDF = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isGenerating = _useState4[0],\n      setIsGenerating = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      commentsFetched = _useState6[0],\n      setCommentsFetched = _useState6[1];\n\n  useEffect(function () {\n    if (!componentProps || !componentProps.placement) return;\n\n    var fetchAllComments = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(getCommentsByPlacement(\"placement/\".concat(componentProps.placement.id, \"/policyMarket\")));\n\n              case 2:\n                setCommentsFetched(true);\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchAllComments() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchAllComments();\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var generatePDF = useReactToPrint({\n    content: function content() {\n      return componentRef.current;\n    },\n    onBeforePrint: function onBeforePrint() {\n      return handleCancel();\n    }\n  });\n\n  var handleSubmit = function handleSubmit() {\n    return new Promise(function (resolve) {\n      setIsGenerating(true);\n      setTimeout(function () {\n        setIsRenderingPDF(true);\n        generatePDF();\n        resolve();\n      }, 0);\n    });\n  };\n\n  var fields = [{\n    type: 'textarea',\n    label: utils.string.t('placement.sheet.introduction'),\n    value: '',\n    name: 'introduction',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 2,\n      maxRows: 6\n    }\n  }, {\n    type: 'checkbox',\n    label: utils.string.t('placement.sheet.displayMudmapOnPDF'),\n    value: true,\n    name: 'showMudmap'\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.download'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(PlacementPDFView, {\n    fields: fields,\n    actions: actions,\n    component: component,\n    componentProps: componentProps,\n    componentRef: componentRef,\n    isRenderingPDF: isRenderingPDF,\n    showLoader: !commentsFetched || isGenerating\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 92,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlacementPDF, \"n0Y/CN5X0HZdjU8rowIj3d66ZUE=\", false, function () {\n  return [useDispatch, useReactToPrint];\n});\n\n_c = PlacementPDF;\nPlacementPDF.displayName = \"PlacementPDF\";\nPlacementPDF.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PlacementPDF\",\n  \"props\": {\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"component\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default PlacementPDF;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PlacementPDF\\\\PlacementPDF.js\"] = {\n    name: \"PlacementPDF\",\n    docgenInfo: PlacementPDF.__docgenInfo,\n    path: \"src\\\\forms\\\\PlacementPDF\\\\PlacementPDF.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacementPDF\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PlacementPDF/PlacementPDF.js"],"names":["React","useRef","useState","useEffect","useDispatch","useReactToPrint","PropTypes","PlacementPDFView","utils","getCommentsByPlacement","PlacementPDF","propTypes","handleClose","func","component","componentProps","dispatch","componentRef","isRenderingPDF","setIsRenderingPDF","isGenerating","setIsGenerating","commentsFetched","setCommentsFetched","placement","fetchAllComments","id","handleCancel","generic","isFunction","generatePDF","content","current","onBeforePrint","handleSubmit","Promise","resolve","setTimeout","fields","type","label","string","t","value","name","muiComponentProps","multiline","minRows","maxRows","actions","handler"],"mappings":"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","sourcesContent":["import React, { useRef, useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useReactToPrint } from 'react-to-print';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { PlacementPDFView } from './PlacementPDF.view';\r\nimport * as utils from 'utils';\r\nimport { getCommentsByPlacement } from 'stores';\r\n\r\nPlacementPDF.propTypes = {\r\n  handleClose: PropTypes.func,\r\n  component: PropTypes.func,\r\n};\r\n\r\nexport function PlacementPDF({ handleClose, component, ...componentProps }) {\r\n  const dispatch = useDispatch();\r\n  const componentRef = useRef();\r\n  const [isRenderingPDF, setIsRenderingPDF] = useState(false);\r\n  const [isGenerating, setIsGenerating] = useState(false);\r\n  const [commentsFetched, setCommentsFetched] = useState(false);\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!componentProps || !componentProps.placement) return;\r\n      const fetchAllComments = async () => {\r\n        await dispatch(getCommentsByPlacement(`placement/${componentProps.placement.id}/policyMarket`));\r\n        setCommentsFetched(true);\r\n      };\r\n      fetchAllComments();\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const generatePDF = useReactToPrint({\r\n    content: () => componentRef.current,\r\n    onBeforePrint: () => handleCancel(),\r\n  });\r\n\r\n  const handleSubmit = () => {\r\n    return new Promise((resolve) => {\r\n      setIsGenerating(true);\r\n\r\n      setTimeout(() => {\r\n        setIsRenderingPDF(true);\r\n        generatePDF();\r\n        resolve();\r\n      }, 0);\r\n    });\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      type: 'textarea',\r\n      label: utils.string.t('placement.sheet.introduction'),\r\n      value: '',\r\n      name: 'introduction',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 2,\r\n        maxRows: 6,\r\n      },\r\n    },\r\n    {\r\n      type: 'checkbox',\r\n      label: utils.string.t('placement.sheet.displayMudmapOnPDF'),\r\n      value: true,\r\n      name: 'showMudmap',\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.download'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <PlacementPDFView\r\n      fields={fields}\r\n      actions={actions}\r\n      component={component}\r\n      componentProps={componentProps}\r\n      componentRef={componentRef}\r\n      isRenderingPDF={isRenderingPDF}\r\n      showLoader={!commentsFetched || isGenerating}\r\n    />\r\n  );\r\n}\r\n\r\nexport default PlacementPDF;\r\n"]},"metadata":{},"sourceType":"module"}