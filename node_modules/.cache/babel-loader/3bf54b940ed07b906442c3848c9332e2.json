{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimDashboard\\\\ClaimDashboard.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\nimport { ClaimsPreviewDashboard } from 'modules';\nimport * as utils from 'utils'; //mui\n\nimport { Divider } from '@material-ui/core';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimDashboardView.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  handleSelectTab: PropTypes.func,\n  popoverItems: PropTypes.array.isRequired,\n  claimObj: PropTypes.object.isRequired,\n  claimRefFromLossObj: PropTypes.shape({\n    claimID: PropTypes.string,\n    claimRef: PropTypes.string,\n    lossRef: PropTypes.string,\n    sourceId: PropTypes.string,\n    policyId: PropTypes.string\n  }),\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  setCheckPage: PropTypes.func,\n  checkRedirectLocation: PropTypes.bool.isRequired\n};\nexport function ClaimDashboardView(_ref) {\n  var tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      handleSelectTab = _ref.handleSelectTab,\n      popoverItems = _ref.popoverItems,\n      claimObj = _ref.claimObj,\n      breadcrumbs = _ref.breadcrumbs,\n      setCheckPage = _ref.setCheckPage,\n      checkRedirectLocation = _ref.checkRedirectLocation,\n      claimRefFromLossObj = _ref.claimRefFromLossObj;\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"ClaimDashboard\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: utils.string.t('claims.claimRef.text', {\n            claimRef: !checkRedirectLocation ? claimObj === null || claimObj === void 0 ? void 0 : claimObj.claimReference : claimRefFromLossObj.claimRef\n          }),\n          icon: DescriptionIcon,\n          testid: \"claim-ref-header\",\n          children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n            variant: \"outlined\",\n            id: \"claims-functions\",\n            size: \"small\",\n            color: \"primary\",\n            text: utils.string.t('claims.claimRef.popOverFunction'),\n            isButton: true,\n            anchorOrigin: {\n              vertical: 'bottom',\n              horizontal: 'right'\n            },\n            transformOrigin: {\n              vertical: 'top',\n              horizontal: 'right'\n            },\n            items: popoverItems\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 54,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handleSelectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this), selectedTab === 'claimRefDetail' && /*#__PURE__*/_jsxDEV(ClaimsPreviewDashboard, {\n          claimDataFromRef: !checkRedirectLocation ? claimObj : claimRefFromLossObj\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 82,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 53,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = ClaimDashboardView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimDashboard/ClaimDashboard.view.js"],"names":["React","PropTypes","Breadcrumb","Layout","Tabs","PopoverMenu","SectionHeader","ClaimsPreviewDashboard","utils","Divider","DescriptionIcon","ClaimDashboardView","propTypes","tabs","array","isRequired","selectedTab","string","handleSelectTab","func","popoverItems","claimObj","object","claimRefFromLossObj","shape","claimID","claimRef","lossRef","sourceId","policyId","breadcrumbs","arrayOf","name","label","link","setCheckPage","checkRedirectLocation","bool","t","claimReference","vertical","horizontal","tabName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\r\nimport { ClaimsPreviewDashboard } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n//mui\r\nimport { Divider } from '@material-ui/core';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nClaimDashboardView.propTypes = {\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  handleSelectTab: PropTypes.func,\r\n  popoverItems: PropTypes.array.isRequired,\r\n  claimObj: PropTypes.object.isRequired,\r\n  claimRefFromLossObj: PropTypes.shape({\r\n    claimID: PropTypes.string,\r\n    claimRef: PropTypes.string,\r\n    lossRef: PropTypes.string,\r\n    sourceId: PropTypes.string,\r\n    policyId: PropTypes.string,\r\n  }),\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  setCheckPage: PropTypes.func,\r\n  checkRedirectLocation: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function ClaimDashboardView({\r\n  tabs,\r\n  selectedTab,\r\n  handleSelectTab,\r\n  popoverItems,\r\n  claimObj,\r\n  breadcrumbs,\r\n  setCheckPage,\r\n  checkRedirectLocation,\r\n  claimRefFromLossObj,\r\n}) {\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n      <Layout testid=\"ClaimDashboard\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={utils.string.t('claims.claimRef.text', {\r\n              claimRef: !checkRedirectLocation ? claimObj?.claimReference : claimRefFromLossObj.claimRef,\r\n            })}\r\n            icon={DescriptionIcon}\r\n            testid=\"claim-ref-header\"\r\n          >\r\n            <PopoverMenu\r\n              variant=\"outlined\"\r\n              id=\"claims-functions\"\r\n              size=\"small\"\r\n              color=\"primary\"\r\n              text={utils.string.t('claims.claimRef.popOverFunction')}\r\n              isButton\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              items={popoverItems}\r\n            />\r\n          </SectionHeader>\r\n\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n          {selectedTab === 'claimRefDetail' && (\r\n            <ClaimsPreviewDashboard claimDataFromRef={!checkRedirectLocation ? claimObj : claimRefFromLossObj} />\r\n          )}\r\n        </Layout>\r\n      </Layout>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}