{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormAutocompleteMui\\\\FormAutocompleteMui.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useMemo } from 'react';\nimport PropTypes from 'prop-types';\nimport debounce from 'lodash/debounce'; // app\n\nimport { FormAutocompleteMuiView } from './FormAutocompleteMui.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nFormAutocompleteMui.propTypes = {\n  control: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\n  optionKey: PropTypes.string.isRequired,\n  optionLabel: PropTypes.string.isRequired,\n  optionsCreatable: PropTypes.bool,\n  optionsFetch: PropTypes.object,\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  hint: PropTypes.string,\n  error: PropTypes.shape({\n    message: PropTypes.string,\n    type: PropTypes.string\n  }),\n  muiComponentProps: PropTypes.object,\n  targetField: PropTypes.string,\n  callback: PropTypes.func,\n  showLoading: PropTypes.bool\n};\nFormAutocompleteMui.defaultProps = {\n  muiComponentProps: {},\n  options: [],\n  optionKey: 'value',\n  optionLabel: 'label',\n  value: null,\n  defaultValue: null,\n  showLoading: true,\n  nestedClasses: {}\n};\nexport default function FormAutocompleteMui(_ref) {\n  _s();\n\n  var control = _ref.control,\n      setValue = _ref.setValue,\n      name = _ref.name,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      options = _ref.options,\n      optionKey = _ref.optionKey,\n      optionLabel = _ref.optionLabel,\n      optionsCreatable = _ref.optionsCreatable,\n      optionsFetch = _ref.optionsFetch,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      hint = _ref.hint,\n      error = _ref.error,\n      disabled = _ref.disabled,\n      muiComponentProps = _ref.muiComponentProps,\n      targetField = _ref.targetField,\n      callback = _ref.callback,\n      showLoading = _ref.showLoading,\n      showCreate = _ref.showCreate,\n      nestedClasses = _ref.nestedClasses;\n  var fieldProps = {\n    optionLabel: optionLabel,\n    label: label,\n    showCreate: showCreate,\n    placeholder: placeholder,\n    error: error,\n    disabled: disabled || (muiComponentProps === null || muiComponentProps === void 0 ? void 0 : muiComponentProps.disabled),\n    helperText: hint,\n    muiComponentProps: muiComponentProps,\n    targetField: targetField,\n    callback: callback,\n    showLoading: showLoading\n  };\n\n  var _useState = useState(value || defaultValue),\n      _useState2 = _slicedToArray(_useState, 2),\n      componentValue = _useState2[0],\n      setComponentValue = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      componentInputValue = _useState4[0],\n      setComponentInputValue = _useState4[1];\n\n  var _useState5 = useState(options || []),\n      _useState6 = _slicedToArray(_useState5, 2),\n      componentOptions = _useState6[0],\n      setComponentOptions = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fetching = _useState8[0],\n      setFetching = _useState8[1];\n\n  useEffect(function () {\n    setComponentOptions(options);\n  }, [options]);\n  var fetch = useMemo(function () {\n    return (// debounce to prevent too many fetches on every keystrokes\n      debounce(function (request, callback) {\n        // check if the component support async fetch (optionsFetch)\n        if (utils.generic.isFunction(optionsFetch === null || optionsFetch === void 0 ? void 0 : optionsFetch.handler)) {\n          setFetching(true);\n          optionsFetch.handler(optionsFetch.type, request.input).then(function (results) {\n            // check if the component has a custom filter method\n            // if yes, filter the results before returning them\n            // if no, return the results to callback method\n            setFetching(false);\n\n            if (utils.generic.isFunction(optionsFetch === null || optionsFetch === void 0 ? void 0 : optionsFetch.filter)) {\n              callback(optionsFetch.filter(results));\n            } else {\n              callback(results);\n            }\n          });\n        }\n      }, 250)\n    );\n  }, [optionsFetch]);\n  useEffect(function () {\n    var active = true; // abort if component doesn't support async fetch for options\n\n    if (!optionsFetch) {\n      return;\n    }\n\n    if (componentInputValue === '') {\n      setComponentOptions(componentValue ? [componentValue] : []);\n      return;\n    } // after selecting an option - to prevent another fetch\n\n\n    if (componentInputValue === (componentValue === null || componentValue === void 0 ? void 0 : componentValue[optionLabel])) {\n      setComponentOptions([]);\n      return;\n    }\n\n    fetch({\n      input: componentInputValue,\n      value: componentValue\n    }, function (results) {\n      if (active) {\n        var newOptions = [];\n\n        if (results) {\n          newOptions = _toConsumableArray(results);\n        }\n\n        setComponentOptions(newOptions);\n      }\n    });\n    return function () {\n      active = false;\n    };\n  }, [componentValue, componentInputValue, fetch, optionsFetch, optionLabel]);\n  return /*#__PURE__*/_jsxDEV(FormAutocompleteMuiView, {\n    control: control,\n    setValue: setValue,\n    name: name,\n    nestedClasses: nestedClasses,\n    value: componentValue,\n    fieldProps: fieldProps,\n    options: componentOptions,\n    showSpinner: showLoading && fetching,\n    filterOptions: fieldProps.filterOptions,\n    onChange: function onChange(event, newValue) {\n      if (typeof newValue === 'string') {\n        var _setComponentValue;\n\n        setComponentValue((_setComponentValue = {}, _defineProperty(_setComponentValue, optionKey, newValue), _defineProperty(_setComponentValue, optionLabel, newValue), _setComponentValue));\n      } else if (optionsCreatable && newValue && newValue.created && newValue[optionKey]) {\n        var _setComponentValue2;\n\n        // Create a new value from the user input\n        setComponentValue((_setComponentValue2 = {}, _defineProperty(_setComponentValue2, optionKey, newValue[optionKey]), _defineProperty(_setComponentValue2, optionLabel, newValue[optionKey]), _setComponentValue2));\n      } else {\n        setComponentValue(newValue);\n      }\n\n      setComponentOptions(componentOptions);\n    },\n    onInputChange: function onInputChange(event, newInputValue) {\n      setComponentInputValue(newInputValue);\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 149,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FormAutocompleteMui, \"wIG/gkiWkQTXG/v0PoSmNC/45aw=\");\n\n_c = FormAutocompleteMui;\nFormAutocompleteMui.displayName = \"FormAutocompleteMui\";\nFormAutocompleteMui.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"FormAutocompleteMui\",\n  \"props\": {\n    \"muiComponentProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"object\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"optionKey\": {\n      \"defaultValue\": {\n        \"value\": \"'value'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"optionLabel\": {\n      \"defaultValue\": {\n        \"value\": \"'label'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"array\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"defaultValue\": {\n      \"defaultValue\": {\n        \"value\": \"null\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"array\"\n        }, {\n          \"name\": \"object\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showLoading\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"control\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"optionsCreatable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"optionsFetch\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"message\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"type\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"targetField\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"callback\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormAutocompleteMui\\\\FormAutocompleteMui.js\"] = {\n    name: \"FormAutocompleteMui\",\n    docgenInfo: FormAutocompleteMui.__docgenInfo,\n    path: \"src\\\\components\\\\FormAutocompleteMui\\\\FormAutocompleteMui.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormAutocompleteMui\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormAutocompleteMui/FormAutocompleteMui.js"],"names":["React","useState","useEffect","useMemo","PropTypes","debounce","FormAutocompleteMuiView","utils","FormAutocompleteMui","propTypes","control","object","name","string","isRequired","options","arrayOf","optionKey","optionLabel","optionsCreatable","bool","optionsFetch","value","oneOfType","array","defaultValue","label","placeholder","hint","error","shape","message","type","muiComponentProps","targetField","callback","func","showLoading","defaultProps","nestedClasses","setValue","disabled","showCreate","fieldProps","helperText","componentValue","setComponentValue","componentInputValue","setComponentInputValue","componentOptions","setComponentOptions","fetching","setFetching","fetch","request","generic","isFunction","handler","input","then","results","filter","active","newOptions","filterOptions","event","newValue","created","newInputValue"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useMemo } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport debounce from 'lodash/debounce';\r\n\r\n// app\r\nimport { FormAutocompleteMuiView } from './FormAutocompleteMui.view';\r\nimport * as utils from 'utils';\r\n\r\nFormAutocompleteMui.propTypes = {\r\n  control: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  options: PropTypes.arrayOf(PropTypes.object).isRequired,\r\n  optionKey: PropTypes.string.isRequired,\r\n  optionLabel: PropTypes.string.isRequired,\r\n  optionsCreatable: PropTypes.bool,\r\n  optionsFetch: PropTypes.object,\r\n  value: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  defaultValue: PropTypes.oneOfType([PropTypes.array, PropTypes.object]),\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  hint: PropTypes.string,\r\n  error: PropTypes.shape({\r\n    message: PropTypes.string,\r\n    type: PropTypes.string,\r\n  }),\r\n  muiComponentProps: PropTypes.object,\r\n  targetField: PropTypes.string,\r\n  callback: PropTypes.func,\r\n  showLoading: PropTypes.bool,\r\n};\r\n\r\nFormAutocompleteMui.defaultProps = {\r\n  muiComponentProps: {},\r\n  options: [],\r\n  optionKey: 'value',\r\n  optionLabel: 'label',\r\n  value: null,\r\n  defaultValue: null,\r\n  showLoading: true,\r\n  nestedClasses: {},\r\n};\r\n\r\nexport default function FormAutocompleteMui({\r\n  control,\r\n  setValue,\r\n  name,\r\n  value,\r\n  defaultValue,\r\n  options,\r\n  optionKey,\r\n  optionLabel,\r\n  optionsCreatable,\r\n  optionsFetch,\r\n  label,\r\n  placeholder,\r\n  hint,\r\n  error,\r\n  disabled,\r\n  muiComponentProps,\r\n  targetField,\r\n  callback,\r\n  showLoading,\r\n  showCreate,\r\n  nestedClasses,\r\n}) {\r\n  const fieldProps = {\r\n    optionLabel,\r\n    label,\r\n    showCreate,\r\n    placeholder,\r\n    error,\r\n    disabled: disabled || muiComponentProps?.disabled,\r\n    helperText: hint,\r\n    muiComponentProps,\r\n    targetField,\r\n    callback,\r\n    showLoading,\r\n  };\r\n\r\n  const [componentValue, setComponentValue] = useState(value || defaultValue);\r\n  const [componentInputValue, setComponentInputValue] = useState('');\r\n  const [componentOptions, setComponentOptions] = useState(options || []);\r\n  const [fetching, setFetching] = useState(false);\r\n\r\n  useEffect(() => {\r\n    setComponentOptions(options);\r\n  }, [options]);\r\n\r\n  const fetch = useMemo(\r\n    () =>\r\n      // debounce to prevent too many fetches on every keystrokes\r\n      debounce((request, callback) => {\r\n        // check if the component support async fetch (optionsFetch)\r\n        if (utils.generic.isFunction(optionsFetch?.handler)) {\r\n          setFetching(true);\r\n          optionsFetch.handler(optionsFetch.type, request.input).then((results) => {\r\n            // check if the component has a custom filter method\r\n            // if yes, filter the results before returning them\r\n            // if no, return the results to callback method\r\n            setFetching(false);\r\n            if (utils.generic.isFunction(optionsFetch?.filter)) {\r\n              callback(optionsFetch.filter(results));\r\n            } else {\r\n              callback(results);\r\n            }\r\n          });\r\n        }\r\n      }, 250),\r\n    [optionsFetch]\r\n  );\r\n\r\n  useEffect(() => {\r\n    let active = true;\r\n\r\n    // abort if component doesn't support async fetch for options\r\n    if (!optionsFetch) {\r\n      return;\r\n    }\r\n\r\n    if (componentInputValue === '') {\r\n      setComponentOptions(componentValue ? [componentValue] : []);\r\n      return;\r\n    }\r\n\r\n    // after selecting an option - to prevent another fetch\r\n    if (componentInputValue === componentValue?.[optionLabel]) {\r\n      setComponentOptions([]);\r\n      return;\r\n    }\r\n\r\n    fetch({ input: componentInputValue, value: componentValue }, (results) => {\r\n      if (active) {\r\n        let newOptions = [];\r\n\r\n        if (results) {\r\n          newOptions = [...results];\r\n        }\r\n\r\n        setComponentOptions(newOptions);\r\n      }\r\n    });\r\n\r\n    return () => {\r\n      active = false;\r\n    };\r\n  }, [componentValue, componentInputValue, fetch, optionsFetch, optionLabel]);\r\n\r\n  return (\r\n    <FormAutocompleteMuiView\r\n      control={control}\r\n      setValue={setValue}\r\n      name={name}\r\n      nestedClasses={nestedClasses}\r\n      value={componentValue}\r\n      fieldProps={fieldProps}\r\n      options={componentOptions}\r\n      showSpinner={showLoading && fetching}\r\n      filterOptions={fieldProps.filterOptions}\r\n      onChange={(event, newValue) => {\r\n        if (typeof newValue === 'string') {\r\n          setComponentValue({\r\n            [optionKey]: newValue,\r\n            [optionLabel]: newValue,\r\n          });\r\n        } else if (optionsCreatable && newValue && newValue.created && newValue[optionKey]) {\r\n          // Create a new value from the user input\r\n          setComponentValue({\r\n            [optionKey]: newValue[optionKey],\r\n            [optionLabel]: newValue[optionKey],\r\n          });\r\n        } else {\r\n          setComponentValue(newValue);\r\n        }\r\n\r\n        setComponentOptions(componentOptions);\r\n      }}\r\n      onInputChange={(event, newInputValue) => {\r\n        setComponentInputValue(newInputValue);\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}