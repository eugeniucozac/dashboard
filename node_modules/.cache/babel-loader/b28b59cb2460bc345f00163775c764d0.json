{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport has from 'lodash/has'; // app\n\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var putPlacementEditPolicy = function putPlacementEditPolicy(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var policies = get(getState(), 'placement.selected.policies', []);\n    var policy_id = formData.id;\n    var policy = utils.policies.getById(policies, policy_id);\n    var defaultError = {\n      file: 'stores/placement.actions.editPolicy',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(putPlacementEditPolicyRequest(formData));\n    dispatch(addLoader('putPlacementEditPolicy'));\n\n    if (!formData || !formData.id || !formData.departmentId || !formData.businessTypeId) {\n      dispatch(putPlacementEditPolicyFailure(defaultError));\n      dispatch(enqueueNotification('notification.editPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('putPlacementEditPolicy'));\n      return;\n    } // get the data for PUT\n\n\n    var body = {\n      parentPlacementId: get(getState(), 'placement.selected.id'),\n      sourceSystemId: get(getState(), 'placement.selected.sourceSystemId'),\n      departmentId: get(formData, 'departmentId'),\n      businessTypeId: get(formData, 'businessTypeId'),\n      isoCurrencyCode: has(formData, 'currency') ? formData.currency : policy.isoCurrencyCode,\n      statusId: has(formData, 'status') ? formData.status === 'null' || formData.status === '' ? null : formData.status : policy.statusId,\n      notes: has(formData, 'notes') ? formData.notes : policy.notes,\n      amount: formData.buydown ? '' : parseFloat(has(formData, 'amount') ? formData.amount : policy.amount),\n      excess: formData.buydown ? '' : parseFloat(has(formData, 'excess') ? formData.excess : policy.excess)\n    };\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/policy/\".concat(formData.id),\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(putPlacementEditPolicySuccess(data));\n      dispatch(enqueueNotification('notification.editPolicy.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('putPlacementEditPolicy'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API put error (placement.editPolicy)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(putPlacementEditPolicyFailure(err));\n      dispatch(enqueueNotification('notification.editPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('putPlacementEditPolicy'));\n      return err;\n    });\n  };\n};\nexport var putPlacementEditPolicyRequest = function putPlacementEditPolicyRequest(data) {\n  return {\n    type: 'PLACEMENT_EDIT_POLICY_PUT_REQUEST',\n    payload: data\n  };\n};\nexport var putPlacementEditPolicySuccess = function putPlacementEditPolicySuccess(data) {\n  return {\n    type: 'PLACEMENT_POLICY_PUT_SUCCESS',\n    payload: data\n  };\n};\nexport var putPlacementEditPolicyFailure = function putPlacementEditPolicyFailure(error) {\n  return {\n    type: 'PLACEMENT_EDIT_POLICY_PUT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.editPolicy.js"],"names":["get","has","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","putPlacementEditPolicy","formData","dispatch","getState","auth","user","endpoint","config","vars","policies","policy_id","id","policy","getById","defaultError","file","message","putPlacementEditPolicyRequest","departmentId","businessTypeId","putPlacementEditPolicyFailure","body","parentPlacementId","sourceSystemId","isoCurrencyCode","currency","statusId","status","notes","amount","buydown","parseFloat","excess","api","put","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","putPlacementEditPolicySuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport has from 'lodash/has';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const putPlacementEditPolicy = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const policies = get(getState(), 'placement.selected.policies', []);\r\n  const policy_id = formData.id;\r\n  const policy = utils.policies.getById(policies, policy_id);\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.editPolicy',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  dispatch(putPlacementEditPolicyRequest(formData));\r\n  dispatch(addLoader('putPlacementEditPolicy'));\r\n\r\n  if (!formData || !formData.id || !formData.departmentId || !formData.businessTypeId) {\r\n    dispatch(putPlacementEditPolicyFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.editPolicy.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('putPlacementEditPolicy'));\r\n    return;\r\n  }\r\n\r\n  // get the data for PUT\r\n  const body = {\r\n    parentPlacementId: get(getState(), 'placement.selected.id'),\r\n    sourceSystemId: get(getState(), 'placement.selected.sourceSystemId'),\r\n    departmentId: get(formData, 'departmentId'),\r\n    businessTypeId: get(formData, 'businessTypeId'),\r\n    isoCurrencyCode: has(formData, 'currency') ? formData.currency : policy.isoCurrencyCode,\r\n    statusId: has(formData, 'status') ? (formData.status === 'null' || formData.status === '' ? null : formData.status) : policy.statusId,\r\n    notes: has(formData, 'notes') ? formData.notes : policy.notes,\r\n    amount: formData.buydown ? '' : parseFloat(has(formData, 'amount') ? formData.amount : policy.amount),\r\n    excess: formData.buydown ? '' : parseFloat(has(formData, 'excess') ? formData.excess : policy.excess),\r\n  };\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/policy/${formData.id}`,\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(putPlacementEditPolicySuccess(data));\r\n      dispatch(enqueueNotification('notification.editPolicy.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('putPlacementEditPolicy'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API put error (placement.editPolicy)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(putPlacementEditPolicyFailure(err));\r\n      dispatch(enqueueNotification('notification.editPolicy.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('putPlacementEditPolicy'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const putPlacementEditPolicyRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_POLICY_PUT_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const putPlacementEditPolicySuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_PUT_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const putPlacementEditPolicyFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_EDIT_POLICY_PUT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}