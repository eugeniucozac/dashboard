{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Info\\\\Info.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { InfoView } from './Info.view';\nimport { useHistory } from 'react-router';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nInfo.propTypes = {\n  avatarText: PropTypes.string,\n  avatarImage: PropTypes.string,\n  avatarIcon: PropTypes.object,\n  avatarBg: PropTypes.string,\n  avatarBorder: PropTypes.bool,\n  avatarSize: PropTypes.number,\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  title: PropTypes.node,\n  content: PropTypes.node,\n  subtitle: PropTypes.node,\n  description: PropTypes.node,\n  ellipsis: PropTypes.bool,\n  verticalAlign: PropTypes.bool,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    avatar: PropTypes.string,\n    details: PropTypes.string,\n    content: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  }),\n  'data-testid': PropTypes.string,\n  link: PropTypes.string,\n  tooltip: PropTypes.string\n};\nInfo.defaultProps = {\n  size: 'sm',\n  nestedClasses: {},\n  tooltip: ''\n};\nexport function Info(_ref) {\n  _s();\n\n  var avatarText = _ref.avatarText,\n      avatarImage = _ref.avatarImage,\n      avatarIcon = _ref.avatarIcon,\n      avatarBg = _ref.avatarBg,\n      avatarBorder = _ref.avatarBorder,\n      avatarSize = _ref.avatarSize,\n      size = _ref.size,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      content = _ref.content,\n      description = _ref.description,\n      ellipsis = _ref.ellipsis,\n      verticalAlign = _ref.verticalAlign,\n      nestedClasses = _ref.nestedClasses,\n      link = _ref.link,\n      tooltip = _ref.tooltip,\n      dataTestId = _ref['data-testid'];\n  var history = useHistory();\n\n  var handleLinkClick = function handleLinkClick() {\n    if (!link) return;\n    history.push(link);\n  };\n\n  return /*#__PURE__*/_jsxDEV(InfoView, {\n    handleLinkClick: handleLinkClick,\n    avatarText: avatarText,\n    avatarImage: avatarImage,\n    avatarIcon: avatarIcon,\n    avatarBg: avatarBg,\n    avatarBorder: avatarBorder,\n    avatarSize: avatarSize,\n    size: size,\n    title: title,\n    subtitle: subtitle,\n    content: content,\n    description: description,\n    ellipsis: ellipsis,\n    verticalAlign: verticalAlign,\n    nestedClasses: nestedClasses,\n    link: link,\n    dataTestId: dataTestId,\n    tooltip: tooltip\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 68,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Info, \"9cZfZ04734qoCGIctmKX7+sX6eU=\", false, function () {\n  return [useHistory];\n});\n\n_c = Info;\nexport default Info;\n\nvar _c;\n\n$RefreshReg$(_c, \"Info\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Info/Info.js"],"names":["React","PropTypes","InfoView","useHistory","Info","propTypes","avatarText","string","avatarImage","avatarIcon","object","avatarBg","avatarBorder","bool","avatarSize","number","size","oneOf","title","node","content","subtitle","description","ellipsis","verticalAlign","nestedClasses","shape","root","avatar","details","link","tooltip","defaultProps","dataTestId","history","handleLinkClick","push"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { InfoView } from './Info.view';\r\nimport { useHistory } from 'react-router';\r\n\r\nInfo.propTypes = {\r\n  avatarText: PropTypes.string,\r\n  avatarImage: PropTypes.string,\r\n  avatarIcon: PropTypes.object,\r\n  avatarBg: PropTypes.string,\r\n  avatarBorder: PropTypes.bool,\r\n  avatarSize: PropTypes.number,\r\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n  title: PropTypes.node,\r\n  content: PropTypes.node,\r\n  subtitle: PropTypes.node,\r\n  description: PropTypes.node,\r\n  ellipsis: PropTypes.bool,\r\n  verticalAlign: PropTypes.bool,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    details: PropTypes.string,\r\n    content: PropTypes.string,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n  }),\r\n  'data-testid': PropTypes.string,\r\n  link: PropTypes.string,\r\n  tooltip: PropTypes.string,\r\n};\r\n\r\nInfo.defaultProps = {\r\n  size: 'sm',\r\n  nestedClasses: {},\r\n  tooltip: '',\r\n};\r\n\r\nexport function Info({\r\n  avatarText,\r\n  avatarImage,\r\n  avatarIcon,\r\n  avatarBg,\r\n  avatarBorder,\r\n  avatarSize,\r\n  size,\r\n  title,\r\n  subtitle,\r\n  content,\r\n  description,\r\n  ellipsis,\r\n  verticalAlign,\r\n  nestedClasses,\r\n  link,\r\n  tooltip,\r\n  'data-testid': dataTestId,\r\n}) {\r\n  const history = useHistory();\r\n\r\n  const handleLinkClick = () => {\r\n    if (!link) return;\r\n    history.push(link);\r\n  };\r\n\r\n  return (\r\n    <InfoView\r\n      handleLinkClick={handleLinkClick}\r\n      avatarText={avatarText}\r\n      avatarImage={avatarImage}\r\n      avatarIcon={avatarIcon}\r\n      avatarBg={avatarBg}\r\n      avatarBorder={avatarBorder}\r\n      avatarSize={avatarSize}\r\n      size={size}\r\n      title={title}\r\n      subtitle={subtitle}\r\n      content={content}\r\n      description={description}\r\n      ellipsis={ellipsis}\r\n      verticalAlign={verticalAlign}\r\n      nestedClasses={nestedClasses}\r\n      link={link}\r\n      dataTestId={dataTestId}\r\n      tooltip={tooltip}\r\n    />\r\n  );\r\n}\r\n\r\nexport default Info;\r\n"]},"metadata":{},"sourceType":"module"}