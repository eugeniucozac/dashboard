{"ast":null,"code":"// app\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getInsured = function getInsured(id) {\n  var reInsured = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/party.actions.getInsured'\n    };\n    dispatch(getInsuredRequest());\n\n    if (!id) {\n      dispatch(getInsuredFailure(defaultError));\n      return;\n    }\n\n    var path = reInsured ? \"api/v1/reinsured/\".concat(id) : \"api/v1/insured/\".concat(id);\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: path\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getInsuredSuccess(data));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getInsuredFailure(err));\n      return err;\n    });\n  };\n};\nexport var getInsuredRequest = function getInsuredRequest() {\n  return {\n    type: 'INSURED_DETAIL_GET_REQUEST'\n  };\n};\nexport var getInsuredSuccess = function getInsuredSuccess(payload) {\n  return {\n    type: 'INSURED_DETAIL_GET_SUCCESS',\n    payload: payload\n  };\n};\nexport var getInsuredFailure = function getInsuredFailure(error) {\n  return {\n    type: 'INSURED_DETAIL_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/party/party.actions.getInsured.js"],"names":["authLogout","utils","getInsured","id","reInsured","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getInsuredRequest","getInsuredFailure","path","api","get","token","accessToken","then","response","handleResponse","data","getInsuredSuccess","err","handleError","handleUnauthorized","type","payload","error"],"mappings":"AAAA;AACA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,UAAU,GACrB,SADWA,UACX,CAACC,EAAD;AAAA,MAAKC,SAAL,uEAAiB,KAAjB;AAAA,SACA,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACtB;AADsB,oBAEmCA,QAAQ,EAF3C;AAAA,QAENC,IAFM,aAEdC,IAFc,CAEND,IAFM;AAAA,QAEoBE,QAFpB,aAEEC,MAFF,CAEYC,IAFZ,CAEoBF,QAFpB;;AAItB,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,iBAAiB,EAAlB,CAAR;;AAEA,QAAI,CAACX,EAAL,EAAS;AACPE,MAAAA,QAAQ,CAACU,iBAAiB,CAACH,YAAD,CAAlB,CAAR;AACA;AACD;;AAED,QAAMI,IAAI,GAAGZ,SAAS,8BAAuBD,EAAvB,6BAAgDA,EAAhD,CAAtB;AAEA,WAAOF,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHS,MAAAA,IAAI,EAAJA;AAHG,KADA,EAMJK,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACgB,GAAN,CAAUM,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,iBAAiB,CAACD,IAAD,CAAlB,CAAR;AACA,aAAOA,IAAP;AACD,KAVI,WAWE,UAACE,GAAD,EAAS;AACdzB,MAAAA,KAAK,CAACgB,GAAN,CAAUU,WAAV,CAAsBD,GAAtB,EAA2Bd,YAA3B;AACAX,MAAAA,KAAK,CAACgB,GAAN,CAAUW,kBAAV,CAA6BF,GAA7B,EAAkCrB,QAAlC,EAA4CL,UAA5C;AACAK,MAAAA,QAAQ,CAACU,iBAAiB,CAACW,GAAD,CAAlB,CAAR;AACA,aAAOA,GAAP;AACD,KAhBI,CAAP;AAiBD,GAnCD;AAAA,CADK;AAsCP,OAAO,IAAMZ,iBAAiB,GAAG,SAApBA,iBAAoB,GAAM;AACrC,SAAO;AACLe,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMJ,iBAAiB,GAAG,SAApBA,iBAAoB,CAACK,OAAD,EAAa;AAC5C,SAAO;AACLD,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,OAAO,EAAEA;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMf,iBAAiB,GAAG,SAApBA,iBAAoB,CAACgB,KAAD,EAAW;AAC1C,SAAO;AACLF,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getInsured =\r\n  (id, reInsured = false) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/party.actions.getInsured',\r\n    };\r\n\r\n    dispatch(getInsuredRequest());\r\n\r\n    if (!id) {\r\n      dispatch(getInsuredFailure(defaultError));\r\n      return;\r\n    }\r\n\r\n    const path = reInsured ? `api/v1/reinsured/${id}` : `api/v1/insured/${id}`;\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.auth,\r\n        path,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => {\r\n        dispatch(getInsuredSuccess(data));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, defaultError);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(getInsuredFailure(err));\r\n        return err;\r\n      });\r\n  };\r\n\r\nexport const getInsuredRequest = () => {\r\n  return {\r\n    type: 'INSURED_DETAIL_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getInsuredSuccess = (payload) => {\r\n  return {\r\n    type: 'INSURED_DETAIL_GET_SUCCESS',\r\n    payload: payload,\r\n  };\r\n};\r\n\r\nexport const getInsuredFailure = (error) => {\r\n  return {\r\n    type: 'INSURED_DETAIL_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}