{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var createUser = function createUser(newUser) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    dispatch(createUserRequest(newUser));\n    dispatch(addLoader('createUser'));\n    var defaultError = {\n      file: 'stores/admin.actions.createUser'\n    };\n    var rolesKeys = utils.user.getRolesString().map(function (role) {\n      return role.value;\n    });\n\n    if (!utils.generic.isValidObject(newUser) || !rolesKeys.includes(newUser.role)) {\n      if (!rolesKeys.includes(newUser.role)) defaultError.message = 'Invalid role type';\n      dispatch(createUserFailure(defaultError));\n      dispatch(enqueueNotification('notification.admin.userPostFail', 'error'));\n      dispatch(removeLoader('createUser'));\n      dispatch(hideModal());\n      return;\n    }\n\n    var departments = newUser.departments,\n        offices = newUser.offices,\n        rest = _objectWithoutProperties(newUser, [\"departments\", \"offices\"]);\n\n    var isCoBroker = utils.user.isCobroker(newUser);\n\n    var data = _objectSpread(_objectSpread(_objectSpread({}, rest), departments && {\n      departmentIds: departments.map(function (department) {\n        return department.id;\n      })\n    }), isCoBroker && offices && {\n      clientOfficeIds: offices.map(function (client) {\n        return client.id;\n      })\n    });\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/user/',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(createUserSuccess(data));\n      dispatch(enqueueNotification('notification.admin.userPostSuccess', 'success'));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(createUserFailure(err));\n      dispatch(enqueueNotification('notification.admin.userPostFail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('createUser'));\n      dispatch(hideModal());\n    });\n  };\n};\nexport var createUserRequest = function createUserRequest(payload) {\n  return {\n    type: 'ADMIN_USER_CREATE_REQUEST',\n    payload: payload\n  };\n};\nexport var createUserSuccess = function createUserSuccess(payload) {\n  return {\n    type: 'ADMIN_USER_CREATE_SUCCESS',\n    payload: payload\n  };\n};\nexport var createUserFailure = function createUserFailure(error) {\n  return {\n    type: 'ADMIN_USER_CREATE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/admin/admin.actions.createUser.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","hideModal","utils","createUser","newUser","dispatch","getState","auth","user","endpoint","config","vars","createUserRequest","defaultError","file","rolesKeys","getRolesString","map","role","value","generic","isValidObject","includes","message","createUserFailure","departments","offices","rest","isCoBroker","isCobroker","data","departmentIds","department","id","clientOfficeIds","client","api","post","token","accessToken","edge","path","then","response","handleResponse","json","handleData","createUserSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","error"],"mappings":";;AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,mBAA9C,EAAmEC,SAAnE,QAAoF,QAApF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,OAAD;AAAA,SAAa,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7D;AAD6D,oBAEJA,QAAQ,EAFJ;AAAA,QAE7CC,IAF6C,aAErDC,IAFqD,CAE7CD,IAF6C;AAAA,QAEnBE,QAFmB,aAErCC,MAFqC,CAE3BC,IAF2B,CAEnBF,QAFmB;;AAI7DJ,IAAAA,QAAQ,CAACO,iBAAiB,CAACR,OAAD,CAAlB,CAAR;AACAC,IAAAA,QAAQ,CAACR,SAAS,CAAC,YAAD,CAAV,CAAR;AAEA,QAAMgB,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,SAAS,GAAGb,KAAK,CAACM,IAAN,CAAWQ,cAAX,GAA4BC,GAA5B,CAAgC,UAACC,IAAD;AAAA,aAAUA,IAAI,CAACC,KAAf;AAAA,KAAhC,CAAlB;;AAEA,QAAI,CAACjB,KAAK,CAACkB,OAAN,CAAcC,aAAd,CAA4BjB,OAA5B,CAAD,IAAyC,CAACW,SAAS,CAACO,QAAV,CAAmBlB,OAAO,CAACc,IAA3B,CAA9C,EAAgF;AAC9E,UAAI,CAACH,SAAS,CAACO,QAAV,CAAmBlB,OAAO,CAACc,IAA3B,CAAL,EAAuCL,YAAY,CAACU,OAAb,GAAuB,mBAAvB;AAEvClB,MAAAA,QAAQ,CAACmB,iBAAiB,CAACX,YAAD,CAAlB,CAAR;AACAR,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,iCAAD,EAAoC,OAApC,CAApB,CAAR;AACAK,MAAAA,QAAQ,CAACN,YAAY,CAAC,YAAD,CAAb,CAAR;AACAM,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACA;AACD;;AArB4D,QAuBrDwB,WAvBqD,GAuBnBrB,OAvBmB,CAuBrDqB,WAvBqD;AAAA,QAuBxCC,OAvBwC,GAuBnBtB,OAvBmB,CAuBxCsB,OAvBwC;AAAA,QAuB5BC,IAvB4B,4BAuBnBvB,OAvBmB;;AAyB7D,QAAMwB,UAAU,GAAG1B,KAAK,CAACM,IAAN,CAAWqB,UAAX,CAAsBzB,OAAtB,CAAnB;;AAEA,QAAM0B,IAAI,iDACLH,IADK,GAEJF,WAAW,IAAI;AAAEM,MAAAA,aAAa,EAAEN,WAAW,CAACR,GAAZ,CAAgB,UAACe,UAAD;AAAA,eAAgBA,UAAU,CAACC,EAA3B;AAAA,OAAhB;AAAjB,KAFX,GAGJL,UAAU,IAAIF,OAAd,IAAyB;AAAEQ,MAAAA,eAAe,EAAER,OAAO,CAACT,GAAR,CAAY,UAACkB,MAAD;AAAA,eAAYA,MAAM,CAACF,EAAnB;AAAA,OAAZ;AAAnB,KAHrB,CAAV;;AAMA,WAAO/B,KAAK,CAACkC,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAE/B,IAAI,CAACgC,WADR;AAEJ9B,MAAAA,QAAQ,EAAEA,QAAQ,CAAC+B,IAFf;AAGJC,MAAAA,IAAI,EAAE,WAHF;AAIJX,MAAAA,IAAI,EAAJA;AAJI,KADD,EAOJY,IAPI,CAOC,UAACC,QAAD;AAAA,aAAczC,KAAK,CAACkC,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU3C,KAAK,CAACkC,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACZ,IAAD,EAAU;AACdzB,MAAAA,QAAQ,CAAC0C,iBAAiB,CAACjB,IAAD,CAAlB,CAAR;AACAzB,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,oCAAD,EAAuC,SAAvC,CAApB,CAAR;AACD,KAZI,EAaJgD,KAbI,CAaE,UAACC,GAAD,EAAS;AACd/C,MAAAA,KAAK,CAACkC,GAAN,CAAUc,WAAV,CAAsBD,GAAtB,EAA2BpC,YAA3B;AACAX,MAAAA,KAAK,CAACkC,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkC5C,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACmB,iBAAiB,CAACyB,GAAD,CAAlB,CAAR;AACA5C,MAAAA,QAAQ,CAACL,mBAAmB,CAAC,iCAAD,EAAoC,OAApC,CAApB,CAAR;AACA,aAAOiD,GAAP;AACD,KAnBI,EAoBJG,OApBI,CAoBI,YAAM;AACb/C,MAAAA,QAAQ,CAACN,YAAY,CAAC,YAAD,CAAb,CAAR;AACAM,MAAAA,QAAQ,CAACJ,SAAS,EAAV,CAAR;AACD,KAvBI,CAAP;AAwBD,GAzDyB;AAAA,CAAnB;AA2DP,OAAO,IAAMW,iBAAiB,GAAG,SAApBA,iBAAoB,CAACyC,OAAD,EAAa;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMN,iBAAiB,GAAG,SAApBA,iBAAoB,CAACM,OAAD,EAAa;AAC5C,SAAO;AACLC,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAM7B,iBAAiB,GAAG,SAApBA,iBAAoB,CAAC+B,KAAD,EAAW;AAC1C,SAAO;AACLD,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const createUser = (newUser) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  dispatch(createUserRequest(newUser));\r\n  dispatch(addLoader('createUser'));\r\n\r\n  const defaultError = {\r\n    file: 'stores/admin.actions.createUser',\r\n  };\r\n\r\n  const rolesKeys = utils.user.getRolesString().map((role) => role.value);\r\n\r\n  if (!utils.generic.isValidObject(newUser) || !rolesKeys.includes(newUser.role)) {\r\n    if (!rolesKeys.includes(newUser.role)) defaultError.message = 'Invalid role type';\r\n\r\n    dispatch(createUserFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.admin.userPostFail', 'error'));\r\n    dispatch(removeLoader('createUser'));\r\n    dispatch(hideModal());\r\n    return;\r\n  }\r\n\r\n  const { departments, offices, ...rest } = newUser;\r\n\r\n  const isCoBroker = utils.user.isCobroker(newUser);\r\n\r\n  const data = {\r\n    ...rest,\r\n    ...(departments && { departmentIds: departments.map((department) => department.id) }),\r\n    ...(isCoBroker && offices && { clientOfficeIds: offices.map((client) => client.id) }),\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/user/',\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(createUserSuccess(data));\r\n      dispatch(enqueueNotification('notification.admin.userPostSuccess', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(createUserFailure(err));\r\n      dispatch(enqueueNotification('notification.admin.userPostFail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('createUser'));\r\n      dispatch(hideModal());\r\n    });\r\n};\r\n\r\nexport const createUserRequest = (payload) => {\r\n  return {\r\n    type: 'ADMIN_USER_CREATE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createUserSuccess = (payload) => {\r\n  return {\r\n    type: 'ADMIN_USER_CREATE_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const createUserFailure = (error) => {\r\n  return {\r\n    type: 'ADMIN_USER_CREATE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}