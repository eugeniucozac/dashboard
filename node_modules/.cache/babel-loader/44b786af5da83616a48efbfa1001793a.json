{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\OpportunitySearch\\\\OpportunitySearch.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport get from 'lodash/get'; // app\n\nimport { OpportunitySearchView } from './OpportunitySearch.view';\nimport { getTripAddresses, getTripLeads, resetTripLeads } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpportunitySearch() {\n  _s();\n\n  var dispatch = useDispatch();\n  var fields = [{\n    name: 'addresses',\n    type: 'autocomplete',\n    value: [],\n    options: [],\n    optionKey: 'id',\n    optionLabel: 'outputAddress',\n    innerComponentProps: {\n      allowEmpty: true,\n      async: {\n        handler: function handler(type, term) {\n          return dispatch(getTripAddresses(term));\n        },\n        type: 'addresses'\n      }\n    },\n    callback: function callback(value) {\n      var lat = (value ? get(value, '[0].lat') : null) || null;\n      var lng = (value ? get(value, '[0].lng') : null) || null;\n\n      if (lat && lng) {\n        dispatch(getTripLeads(lat, lng));\n      } else {\n        dispatch(resetTripLeads());\n      }\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(OpportunitySearchView, {\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 10\n  }, this);\n}\n\n_s(OpportunitySearch, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = OpportunitySearch;\nOpportunitySearch.displayName = \"OpportunitySearch\";\nOpportunitySearch.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"OpportunitySearch\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\OpportunitySearch\\\\OpportunitySearch.js\"] = {\n    name: \"OpportunitySearch\",\n    docgenInfo: OpportunitySearch.__docgenInfo,\n    path: \"src\\\\forms\\\\OpportunitySearch\\\\OpportunitySearch.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OpportunitySearch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/OpportunitySearch/OpportunitySearch.js"],"names":["React","useDispatch","get","OpportunitySearchView","getTripAddresses","getTripLeads","resetTripLeads","OpportunitySearch","dispatch","fields","name","type","value","options","optionKey","optionLabel","innerComponentProps","allowEmpty","async","handler","term","callback","lat","lng"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,SAASC,qBAAT,QAAsC,0BAAtC;AACA,SAASC,gBAAT,EAA2BC,YAA3B,EAAyCC,cAAzC,QAA+D,QAA/D;;AAEA,eAAe,SAASC,iBAAT,GAA6B;AAAA;;AAC1C,MAAMC,QAAQ,GAAGP,WAAW,EAA5B;AAEA,MAAMQ,MAAM,GAAG,CACb;AACEC,IAAAA,IAAI,EAAE,WADR;AAEEC,IAAAA,IAAI,EAAE,cAFR;AAGEC,IAAAA,KAAK,EAAE,EAHT;AAIEC,IAAAA,OAAO,EAAE,EAJX;AAKEC,IAAAA,SAAS,EAAE,IALb;AAMEC,IAAAA,WAAW,EAAE,eANf;AAOEC,IAAAA,mBAAmB,EAAE;AACnBC,MAAAA,UAAU,EAAE,IADO;AAEnBC,MAAAA,KAAK,EAAE;AACLC,QAAAA,OAAO,EAAE,iBAACR,IAAD,EAAOS,IAAP;AAAA,iBAAgBZ,QAAQ,CAACJ,gBAAgB,CAACgB,IAAD,CAAjB,CAAxB;AAAA,SADJ;AAELT,QAAAA,IAAI,EAAE;AAFD;AAFY,KAPvB;AAcEU,IAAAA,QAAQ,EAAE,kBAACT,KAAD,EAAW;AACnB,UAAMU,GAAG,GAAG,CAACV,KAAK,GAAGV,GAAG,CAACU,KAAD,EAAQ,SAAR,CAAN,GAA2B,IAAjC,KAA0C,IAAtD;AACA,UAAMW,GAAG,GAAG,CAACX,KAAK,GAAGV,GAAG,CAACU,KAAD,EAAQ,SAAR,CAAN,GAA2B,IAAjC,KAA0C,IAAtD;;AAEA,UAAIU,GAAG,IAAIC,GAAX,EAAgB;AACdf,QAAAA,QAAQ,CAACH,YAAY,CAACiB,GAAD,EAAMC,GAAN,CAAb,CAAR;AACD,OAFD,MAEO;AACLf,QAAAA,QAAQ,CAACF,cAAc,EAAf,CAAR;AACD;AACF;AAvBH,GADa,CAAf;AA4BA,sBAAO,QAAC,qBAAD;AAAuB,IAAA,MAAM,EAAEG;AAA/B;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAhCuBF,iB;UACLN,W;;;KADKM,iB;AAAAA,iB","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { OpportunitySearchView } from './OpportunitySearch.view';\r\nimport { getTripAddresses, getTripLeads, resetTripLeads } from 'stores';\r\n\r\nexport default function OpportunitySearch() {\r\n  const dispatch = useDispatch();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'addresses',\r\n      type: 'autocomplete',\r\n      value: [],\r\n      options: [],\r\n      optionKey: 'id',\r\n      optionLabel: 'outputAddress',\r\n      innerComponentProps: {\r\n        allowEmpty: true,\r\n        async: {\r\n          handler: (type, term) => dispatch(getTripAddresses(term)),\r\n          type: 'addresses',\r\n        },\r\n      },\r\n      callback: (value) => {\r\n        const lat = (value ? get(value, '[0].lat') : null) || null;\r\n        const lng = (value ? get(value, '[0].lng') : null) || null;\r\n\r\n        if (lat && lng) {\r\n          dispatch(getTripLeads(lat, lng));\r\n        } else {\r\n          dispatch(resetTripLeads());\r\n        }\r\n      },\r\n    },\r\n  ];\r\n\r\n  return <OpportunitySearchView fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}