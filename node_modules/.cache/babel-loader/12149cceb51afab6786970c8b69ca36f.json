{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PlacementPDF\\\\PlacementPDF.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport { Button, FormCheckbox, FormGrid, FormContainer, FormFields, FormActions, FormText, Loader } from 'components';\nimport * as utils from 'utils';\nimport styles from './PlacementPDF.styles'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPlacementPDFView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  isRenderingPDF: PropTypes.bool.isRequired,\n  showLoader: PropTypes.bool.isRequired,\n  component: PropTypes.func.isRequired,\n  componentProps: PropTypes.object.isRequired,\n  componentRef: PropTypes.object.isRequired\n};\nexport function PlacementPDFView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions,\n      component = _ref.component,\n      componentProps = _ref.componentProps,\n      componentRef = _ref.componentRef,\n      isRenderingPDF = _ref.isRenderingPDF,\n      showLoader = _ref.showLoader;\n  var Component = component;\n  var classes = makeStyles(styles, {\n    name: 'PlacementPDF'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      getValues = _useForm.getValues,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onCancel = function onCancel() {\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\n    reset();\n  };\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [showLoader && /*#__PURE__*/_jsxDEV(Loader, {\n      visible: showLoader,\n      absolute: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 22\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      \"data-testid\": \"form-placement-pdf\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'introduction')), {}, {\n              control: control\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'showMudmap')), {}, {\n              control: control\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 58,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: onCancel\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 7\n    }, this), isRenderingPDF && /*#__PURE__*/_jsxDEV(\"div\", {\n      ref: componentRef,\n      className: classes.printComponent,\n      children: /*#__PURE__*/_jsxDEV(Component, _objectSpread(_objectSpread({}, componentProps), {}, {\n        formValues: getValues()\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PlacementPDFView, \"kPR8LmhswVR0iLbDFMNtK4naRo4=\", false, function () {\n  return [useForm];\n});\n\n_c = PlacementPDFView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PlacementPDFView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PlacementPDF/PlacementPDF.view.js"],"names":["React","PropTypes","useForm","yupResolver","Button","FormCheckbox","FormGrid","FormContainer","FormFields","FormActions","FormText","Loader","utils","styles","makeStyles","PlacementPDFView","propTypes","fields","array","isRequired","actions","isRenderingPDF","bool","showLoader","component","func","componentProps","object","componentRef","Component","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","getValues","reset","handleSubmit","formState","cancel","find","action","submit","onCancel","generic","isFunction","handler","onSubmit","data","getFieldProps","label","isSubmitting","printComponent"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport { Button, FormCheckbox, FormGrid, FormContainer, FormFields, FormActions, FormText, Loader } from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './PlacementPDF.styles';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPlacementPDFView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  isRenderingPDF: PropTypes.bool.isRequired,\r\n  showLoader: PropTypes.bool.isRequired,\r\n  component: PropTypes.func.isRequired,\r\n  componentProps: PropTypes.object.isRequired,\r\n  componentRef: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function PlacementPDFView({ fields, actions, component, componentProps, componentRef, isRenderingPDF, showLoader }) {\r\n  const Component = component;\r\n  const classes = makeStyles(styles, { name: 'PlacementPDF' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, getValues, reset, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onCancel = () => {\r\n    cancel && utils.generic.isFunction(cancel.handler) && cancel.handler();\r\n    reset();\r\n  };\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      {showLoader && <Loader visible={showLoader} absolute />}\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} data-testid=\"form-placement-pdf\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'introduction')} control={control} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormCheckbox {...utils.form.getFieldProps(fields, 'showMudmap')} control={control} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={onCancel} />}\r\n          {submit && <Button text={submit.label} type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" />}\r\n        </FormActions>\r\n      </FormContainer>\r\n      {isRenderingPDF && (\r\n        <div ref={componentRef} className={classes.printComponent}>\r\n          <Component {...componentProps} formValues={getValues()} />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}