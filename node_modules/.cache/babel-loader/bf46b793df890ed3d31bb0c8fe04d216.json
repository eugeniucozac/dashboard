{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Nav\\\\Nav.js\";\nimport React, { PureComponent, Fragment } from 'react';\nimport { connect } from 'react-redux';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './Nav.styles';\nimport { Menu, HeaderNav } from 'components';\nimport { expandNav, collapseNav } from 'stores';\nimport { media } from 'utils'; // mui\n\nimport { withStyles, withTheme, AppBar, Toolbar, Hidden, Drawer, SwipeableDrawer } from '@material-ui/core'; // state\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar mapStateToProps = function mapStateToProps(state) {\n  return {\n    uiNavExpanded: get(state, 'ui.nav.expanded')\n  };\n}; // dispatch\n\n\nvar mapDispatchToProps = {\n  expandNav: expandNav,\n  collapseNav: collapseNav\n};\nexport var Nav = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Nav, _PureComponent);\n\n  var _super = _createSuper(Nav);\n\n  function Nav() {\n    var _this;\n\n    _classCallCheck(this, Nav);\n\n    for (var _len = arguments.length, args = new Array(_len), _key = 0; _key < _len; _key++) {\n      args[_key] = arguments[_key];\n    }\n\n    _this = _super.call.apply(_super, [this].concat(args));\n\n    _this.handleWindowResize = function (event) {\n      // listener event is executed on object like this (for mobile):\n      // window.matchMedia((max-width: 600px))\n      if (event.matches) {\n        _this.props.collapseNav();\n      }\n    };\n\n    _this.toggleNav = function () {\n      if (_this.props.uiNavExpanded) {\n        _this.props.collapseNav();\n      } else {\n        _this.props.expandNav();\n      }\n    };\n\n    return _this;\n  }\n\n  _createClass(Nav, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      var _this$props = this.props,\n          theme = _this$props.theme,\n          expandNav = _this$props.expandNav,\n          collapseNav = _this$props.collapseNav; // check if user set his preference to localStorage\n\n      var navPreferenceSaved = JSON.parse(localStorage.getItem('edge-nav-expanded') || '{}');\n      var isNavExpanded = typeof navPreferenceSaved === 'boolean' ? navPreferenceSaved : false;\n\n      if (isNavExpanded && media.up.sm(theme)) {\n        expandNav();\n      } else {\n        collapseNav();\n      }\n\n      media.match.mobile(theme).addListener(this.handleWindowResize);\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      media.match.mobile(this.props.theme).removeListener(this.handleWindowResize);\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _drawerOpenCloseClass;\n\n      var _this$props2 = this.props,\n          uiNavExpanded = _this$props2.uiNavExpanded,\n          classes = _this$props2.classes;\n      var drawerOpenCloseClasses = (_drawerOpenCloseClass = {}, _defineProperty(_drawerOpenCloseClass, classes.drawerOpen, uiNavExpanded), _defineProperty(_drawerOpenCloseClass, classes.drawerClose, !uiNavExpanded), _drawerOpenCloseClass);\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Hidden, {\n          smUp: true,\n          children: /*#__PURE__*/_jsxDEV(SwipeableDrawer, {\n            open: uiNavExpanded,\n            onClose: this.toggleNav,\n            onOpen: this.toggleNav,\n            paper: classes.paper,\n            \"data-testid\": \"nav-swipeable-drawer\",\n            children: [/*#__PURE__*/_jsxDEV(AppBar, {\n              position: \"sticky\",\n              elevation: 1,\n              children: /*#__PURE__*/_jsxDEV(Toolbar, {\n                className: classes.mobileToolbar,\n                children: /*#__PURE__*/_jsxDEV(HeaderNav, {\n                  showFloatingButton: false,\n                  showMagnifierButton: false\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 17\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 15\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 90,\n              columnNumber: 13\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 76,\n          columnNumber: 9\n        }, this), /*#__PURE__*/_jsxDEV(Hidden, {\n          xsDown: true,\n          children: /*#__PURE__*/_jsxDEV(Drawer, {\n            variant: \"permanent\",\n            className: classnames(classes.drawer, drawerOpenCloseClasses),\n            classes: {\n              paper: classnames(classes.paper, drawerOpenCloseClasses)\n            },\n            open: uiNavExpanded,\n            \"data-testid\": \"nav-drawer\",\n            children: /*#__PURE__*/_jsxDEV(Menu, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 105,\n              columnNumber: 13\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 11\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 9\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Nav;\n}(PureComponent);\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withTheme)(Nav);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Nav/Nav.js"],"names":["React","PureComponent","Fragment","connect","compose","classnames","get","styles","Menu","HeaderNav","expandNav","collapseNav","media","withStyles","withTheme","AppBar","Toolbar","Hidden","Drawer","SwipeableDrawer","mapStateToProps","state","uiNavExpanded","mapDispatchToProps","Nav","handleWindowResize","event","matches","props","toggleNav","theme","navPreferenceSaved","JSON","parse","localStorage","getItem","isNavExpanded","up","sm","match","mobile","addListener","removeListener","classes","drawerOpenCloseClasses","drawerOpen","drawerClose","paper","mobileToolbar","drawer"],"mappings":"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","sourcesContent":["import React, { PureComponent, Fragment } from 'react';\r\nimport { connect } from 'react-redux';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './Nav.styles';\r\nimport { Menu, HeaderNav } from 'components';\r\nimport { expandNav, collapseNav } from 'stores';\r\nimport { media } from 'utils';\r\n\r\n// mui\r\nimport { withStyles, withTheme, AppBar, Toolbar, Hidden, Drawer, SwipeableDrawer } from '@material-ui/core';\r\n\r\n// state\r\nconst mapStateToProps = (state) => ({\r\n  uiNavExpanded: get(state, 'ui.nav.expanded'),\r\n});\r\n\r\n// dispatch\r\nconst mapDispatchToProps = {\r\n  expandNav,\r\n  collapseNav,\r\n};\r\n\r\nexport class Nav extends PureComponent {\r\n  componentWillMount() {\r\n    const { theme, expandNav, collapseNav } = this.props;\r\n\r\n    // check if user set his preference to localStorage\r\n    const navPreferenceSaved = JSON.parse(localStorage.getItem('edge-nav-expanded') || '{}');\r\n    const isNavExpanded = typeof navPreferenceSaved === 'boolean' ? navPreferenceSaved : false;\r\n\r\n    if (isNavExpanded && media.up.sm(theme)) {\r\n      expandNav();\r\n    } else {\r\n      collapseNav();\r\n    }\r\n\r\n    media.match.mobile(theme).addListener(this.handleWindowResize);\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    media.match.mobile(this.props.theme).removeListener(this.handleWindowResize);\r\n  }\r\n\r\n  handleWindowResize = (event) => {\r\n    // listener event is executed on object like this (for mobile):\r\n    // window.matchMedia((max-width: 600px))\r\n\r\n    if (event.matches) {\r\n      this.props.collapseNav();\r\n    }\r\n  };\r\n\r\n  toggleNav = () => {\r\n    if (this.props.uiNavExpanded) {\r\n      this.props.collapseNav();\r\n    } else {\r\n      this.props.expandNav();\r\n    }\r\n  };\r\n\r\n  render() {\r\n    const { uiNavExpanded, classes } = this.props;\r\n\r\n    const drawerOpenCloseClasses = {\r\n      [classes.drawerOpen]: uiNavExpanded,\r\n      [classes.drawerClose]: !uiNavExpanded,\r\n    };\r\n\r\n    return (\r\n      <Fragment>\r\n        {/* Mobile Swipeable Drawer */}\r\n        <Hidden smUp>\r\n          <SwipeableDrawer\r\n            open={uiNavExpanded}\r\n            onClose={this.toggleNav}\r\n            onOpen={this.toggleNav}\r\n            paper={classes.paper}\r\n            data-testid=\"nav-swipeable-drawer\"\r\n          >\r\n            <AppBar position=\"sticky\" elevation={1}>\r\n              <Toolbar className={classes.mobileToolbar}>\r\n                <HeaderNav showFloatingButton={false} showMagnifierButton={false} />\r\n              </Toolbar>\r\n            </AppBar>\r\n\r\n            <Menu />\r\n          </SwipeableDrawer>\r\n        </Hidden>\r\n\r\n        {/* Tablet/Desktop Drawer */}\r\n        <Hidden xsDown>\r\n          <Drawer\r\n            variant=\"permanent\"\r\n            className={classnames(classes.drawer, drawerOpenCloseClasses)}\r\n            classes={{\r\n              paper: classnames(classes.paper, drawerOpenCloseClasses),\r\n            }}\r\n            open={uiNavExpanded}\r\n            data-testid=\"nav-drawer\"\r\n          >\r\n            <Menu />\r\n          </Drawer>\r\n        </Hidden>\r\n      </Fragment>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(connect(mapStateToProps, mapDispatchToProps), withStyles(styles), withTheme)(Nav);\r\n"]},"metadata":{},"sourceType":"module"}