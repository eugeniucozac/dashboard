{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\CreateAdhocConfirm\\\\CreateAdhocConfirm.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport { CreateAdhocTaskFooter } from 'modules';\nimport { FormLegend } from 'components';\nimport styles from './CreateAdhocConfirm.style';\nimport * as utils from 'utils';\nimport { DetailsCard } from 'modules'; //mui\n\nimport { makeStyles, Box, Grid, Typography } from '@material-ui/core';\nimport { Edit } from '@material-ui/icons';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nCreateAdhocConfirmView.propTypes = {\n  adHocTaskInfo: PropTypes.array.isRequired,\n  handleCancel: PropTypes.object.isRequired,\n  submitTask: PropTypes.func.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleStep: PropTypes.func.isRequired,\n  adhocDocuments: PropTypes.func.isRequired\n};\n\nfunction CreateAdhocConfirmView(props) {\n  var _this = this,\n      _props$adHocTaskInfo,\n      _props$adHocTaskInfo2,\n      _props$adHocTaskInfo3,\n      _props$adHocTaskInfo4;\n\n  var classes = makeStyles(styles, {\n    name: 'ConfrmCreateAdhock'\n  })();\n  var adhocDocuments = props.adhocDocuments;\n\n  var renderInfoCards = function renderInfoCards(items) {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: items === null || items === void 0 ? void 0 : items.map(function (info) {\n        return /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 6,\n          sm: 4,\n          md: 3,\n          children: /*#__PURE__*/_jsxDEV(DetailsCard, {\n            title: info === null || info === void 0 ? void 0 : info.title,\n            details: info === null || info === void 0 ? void 0 : info.value,\n            isLoading: info === null || info === void 0 ? void 0 : info.isLoading,\n            nestedClasses: {\n              title: classes.detailsCardTitle,\n              text: classes.detailsCardText\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 13\n          }, _this)\n        }, info === null || info === void 0 ? void 0 : info.title, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      overflow: \"hidden\",\n      display: \"flex\",\n      flexDirection: \"column\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        flex: \"1 1 auto\",\n        className: classes.container,\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.spacingContainer,\n          children: [/*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.processing.taskDetailsLabels.adHocInfo')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderInfoCards(props === null || props === void 0 ? void 0 : (_props$adHocTaskInfo = props.adHocTaskInfo) === null || _props$adHocTaskInfo === void 0 ? void 0 : _props$adHocTaskInfo.rowOne)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 51,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderInfoCards(props === null || props === void 0 ? void 0 : (_props$adHocTaskInfo2 = props.adHocTaskInfo) === null || _props$adHocTaskInfo2 === void 0 ? void 0 : _props$adHocTaskInfo2.rowTwo)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderInfoCards(props === null || props === void 0 ? void 0 : (_props$adHocTaskInfo3 = props.adHocTaskInfo) === null || _props$adHocTaskInfo3 === void 0 ? void 0 : _props$adHocTaskInfo3.rowThree)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 57,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.processing.taskDetailsLabels.diarise')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 60,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: renderInfoCards(props === null || props === void 0 ? void 0 : (_props$adHocTaskInfo4 = props.adHocTaskInfo) === null || _props$adHocTaskInfo4 === void 0 ? void 0 : _props$adHocTaskInfo4.rowDiarise)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 49,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          alignItems: \"center\",\n          className: classes.gutterBottom,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              className: classes.confirmTitles,\n              children: utils.string.t('claims.processing.taskDetailsLabels.documents')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 67,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 66,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.confirmTitles,\n              variant: \"h6\",\n              onClick: function onClick() {\n                return props.handleStep(props.activeStep - 1);\n              },\n              children: /*#__PURE__*/_jsxDEV(Edit, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 71,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.spacingContainer,\n          children: [!utils.generic.isInvalidOrEmptyArray(adhocDocuments) && /*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.fileTitle,\n            variant: \"h4\",\n            children: utils.string.t('claims.processing.taskDetailsLabels.fileName')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 15\n          }, this), !utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? adhocDocuments === null || adhocDocuments === void 0 ? void 0 : adhocDocuments.map(function (item) {\n            return /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: item === null || item === void 0 ? void 0 : item.fileName\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 24\n            }, _this);\n          }) : /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            justifyContent: \"center\",\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('claims.processing.taskDetailsLabels.noDocumentsAttached')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        flex: \"0 1 auto\",\n        children: /*#__PURE__*/_jsxDEV(CreateAdhocTaskFooter, {\n          lastStep: true,\n          handleSubmit: props === null || props === void 0 ? void 0 : props.submitTask,\n          handleCancel: props === null || props === void 0 ? void 0 : props.handleCancel,\n          handleBack: props === null || props === void 0 ? void 0 : props.handleBack,\n          activeStep: props === null || props === void 0 ? void 0 : props.activeStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 97,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 47,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_c = CreateAdhocConfirmView;\nexport default CreateAdhocConfirmView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdhocConfirmView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/CreateAdhocConfirm/CreateAdhocConfirm.view.js"],"names":["React","PropTypes","CreateAdhocTaskFooter","FormLegend","styles","utils","DetailsCard","makeStyles","Box","Grid","Typography","Edit","CreateAdhocConfirmView","propTypes","adHocTaskInfo","array","isRequired","handleCancel","object","submitTask","func","activeStep","number","handleBack","handleStep","adhocDocuments","props","classes","name","renderInfoCards","items","map","info","title","value","isLoading","detailsCardTitle","text","detailsCardText","container","spacingContainer","string","t","rowOne","rowTwo","rowThree","rowDiarise","gutterBottom","confirmTitles","generic","isInvalidOrEmptyArray","fileTitle","item","subTitle","fileName"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { CreateAdhocTaskFooter } from 'modules';\r\nimport { FormLegend } from 'components';\r\nimport styles from './CreateAdhocConfirm.style';\r\nimport * as utils from 'utils';\r\nimport { DetailsCard } from 'modules';\r\n\r\n//mui\r\nimport { makeStyles, Box, Grid, Typography } from '@material-ui/core';\r\nimport { Edit } from '@material-ui/icons';\r\n\r\nCreateAdhocConfirmView.propTypes = {\r\n  adHocTaskInfo: PropTypes.array.isRequired,\r\n  handleCancel: PropTypes.object.isRequired,\r\n  submitTask: PropTypes.func.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleStep: PropTypes.func.isRequired,\r\n  adhocDocuments: PropTypes.func.isRequired,\r\n};\r\n\r\nfunction CreateAdhocConfirmView(props) {\r\n  const classes = makeStyles(styles, { name: 'ConfrmCreateAdhock' })();\r\n  const { adhocDocuments } = props;\r\n\r\n  const renderInfoCards = (items) => {\r\n    return (\r\n      <>\r\n        {items?.map((info) => (\r\n          <Grid item xs={6} sm={4} md={3} key={info?.title}>\r\n            <DetailsCard\r\n              title={info?.title}\r\n              details={info?.value}\r\n              isLoading={info?.isLoading}\r\n              nestedClasses={{ title: classes.detailsCardTitle, text: classes.detailsCardText }}\r\n            />\r\n          </Grid>\r\n        ))}\r\n      </>\r\n    );\r\n  };\r\n  return (\r\n    <>\r\n      <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n        <Box flex=\"1 1 auto\" className={classes.container}>\r\n          <div className={classes.spacingContainer}>\r\n            <FormLegend text={utils.string.t('claims.processing.taskDetailsLabels.adHocInfo')} />\r\n            <Grid container spacing={2}>\r\n              {renderInfoCards(props?.adHocTaskInfo?.rowOne)}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              {renderInfoCards(props?.adHocTaskInfo?.rowTwo)}\r\n            </Grid>\r\n            <Grid container spacing={2}>\r\n              {renderInfoCards(props?.adHocTaskInfo?.rowThree)}\r\n            </Grid>\r\n            <FormLegend text={utils.string.t('claims.processing.taskDetailsLabels.diarise')} />\r\n            <Grid container spacing={2}>\r\n              {renderInfoCards(props?.adHocTaskInfo?.rowDiarise)}\r\n            </Grid>\r\n          </div>\r\n          <Grid container alignItems=\"center\" className={classes.gutterBottom}>\r\n            <Grid item xs>\r\n              <Typography variant=\"body2\" className={classes.confirmTitles}>\r\n                {utils.string.t('claims.processing.taskDetailsLabels.documents')}\r\n              </Typography>\r\n            </Grid>\r\n            <Grid item>\r\n              <Typography className={classes.confirmTitles} variant=\"h6\" onClick={() => props.handleStep(props.activeStep - 1)}>\r\n                <Edit />\r\n              </Typography>\r\n            </Grid>\r\n          </Grid>\r\n          <div className={classes.spacingContainer}>\r\n            {!utils.generic.isInvalidOrEmptyArray(adhocDocuments) && (\r\n              <Typography className={classes.fileTitle} variant=\"h4\">\r\n                {utils.string.t('claims.processing.taskDetailsLabels.fileName')}\r\n              </Typography>\r\n            )}\r\n            {!utils.generic.isInvalidOrEmptyArray(adhocDocuments) ? (\r\n              adhocDocuments?.map((item) => {\r\n                return <Typography className={classes.subTitle}>{item?.fileName}</Typography>;\r\n              })\r\n            ) : (\r\n              <Grid container spacing={2} justifyContent=\"center\" alignItems=\"center\">\r\n                <Typography className={classes.subTitle}>\r\n                  {utils.string.t('claims.processing.taskDetailsLabels.noDocumentsAttached')}\r\n                </Typography>\r\n              </Grid>\r\n            )}\r\n          </div>\r\n        </Box>\r\n        <Box flex=\"0 1 auto\">\r\n          <CreateAdhocTaskFooter\r\n            lastStep={true}\r\n            handleSubmit={props?.submitTask}\r\n            handleCancel={props?.handleCancel}\r\n            handleBack={props?.handleBack}\r\n            activeStep={props?.activeStep}\r\n          />\r\n        </Box>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default CreateAdhocConfirmView;\r\n"]},"metadata":{},"sourceType":"module"}