{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, enqueueNotification, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var postSaveRFI = function postSaveRFI(rfiData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postSaveRFI'\n    };\n    dispatch(postSaveRFIRequest(rfiData));\n    dispatch(addLoader('postSaveRFI'));\n\n    if (!rfiData) {\n      dispatch(postSaveRFIFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing requests params'\n      })));\n      dispatch(removeLoader('postSaveRFI'));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'api/workflow/process/sendClaimRFI',\n      data: rfiData\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postSaveRFISuccess(data.data));\n      dispatch(enqueueNotification(utils.string.t('claims.processing.notification.createRfiSuccess'), 'success'));\n      return data;\n    })[\"catch\"](function (error) {\n      dispatch(postSaveRFIFailure(error, defaultError));\n      dispatch(enqueueNotification(utils.string.t('claims.processing.notification.createRfiFailure'), 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('postSaveRFI'));\n    });\n  };\n};\nexport var postSaveRFIRequest = function postSaveRFIRequest(rfiData) {\n  return {\n    type: 'CLAIMS_SAVE_RFI_POST_REQUEST',\n    payload: rfiData\n  };\n};\nexport var postSaveRFISuccess = function postSaveRFISuccess(data) {\n  return {\n    type: 'CLAIMS_SAVE_RFI_POST_SUCCESS',\n    payload: data\n  };\n};\nexport var postSaveRFIFailure = function postSaveRFIFailure(error) {\n  return {\n    type: 'CLAIMS_SAVE_RFI_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postSaveRFI.js"],"names":["addLoader","removeLoader","enqueueNotification","authLogout","utils","postSaveRFI","rfiData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","postSaveRFIRequest","postSaveRFIFailure","message","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","postSaveRFISuccess","string","t","error","handleUnauthorized","type","payload"],"mappings":"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","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postSaveRFI = (rfiData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postSaveRFI',\r\n  };\r\n\r\n  dispatch(postSaveRFIRequest(rfiData));\r\n  dispatch(addLoader('postSaveRFI'));\r\n\r\n  if (!rfiData) {\r\n    dispatch(postSaveRFIFailure({ ...defaultError, message: 'Missing requests params' }));\r\n    dispatch(removeLoader('postSaveRFI'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'api/workflow/process/sendClaimRFI',\r\n      data: rfiData,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postSaveRFISuccess(data.data));\r\n      dispatch(enqueueNotification(utils.string.t('claims.processing.notification.createRfiSuccess'), 'success'));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(postSaveRFIFailure(error, defaultError));\r\n      dispatch(enqueueNotification(utils.string.t('claims.processing.notification.createRfiFailure'), 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postSaveRFI'));\r\n    });\r\n};\r\n\r\nexport const postSaveRFIRequest = (rfiData) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_RFI_POST_REQUEST',\r\n    payload: rfiData,\r\n  };\r\n};\r\n\r\nexport const postSaveRFISuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_RFI_POST_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postSaveRFIFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_RFI_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}