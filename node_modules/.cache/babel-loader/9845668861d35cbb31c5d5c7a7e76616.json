{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossAction\\\\LossAction.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nimport { TableFilters, TableToolbar } from 'components';\nimport styles from './LossAction.styles';\nimport { useMedia } from 'hooks';\nimport LossActionTable from '../LossActionTable/LossActionTable'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossActionView.propTypes = {\n  items: PropTypes.object.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  handlers: PropTypes.shape({\n    search: PropTypes.func,\n    resetFilter: PropTypes.func,\n    searchFilter: PropTypes.func,\n    resetSearch: PropTypes.func\n  }),\n  searchTerm: PropTypes.string\n};\nexport function LossActionView(_ref) {\n  _s();\n\n  var items = _ref.items,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      handlers = _ref.handlers,\n      searchTerm = _ref.searchTerm;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'LossAction'\n  })({\n    isMobile: media.mobile\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"loss-action\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchPlaceholder: utils.string.t('claims.processing.searchBarPlaceholder'),\n        searchMinChars: 3,\n        nestedClasses: {\n          searchMaxWidth: classes.searchMaxWidth\n        },\n        filtersArray: tableFilterFields,\n        isFetchingFilters: isFetchingFilters,\n        handlers: {\n          onSearch: handlers.search,\n          onResetFilter: handlers.resetFilter,\n          onFilter: function onFilter(values) {\n            return handlers.searchFilter(values);\n          },\n          onResetSearch: handlers.resetSearch\n        },\n        searchTerm: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LossActionTable, {\n      lossActions: items,\n      cols: columnsArray,\n      columnProps: columnProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 52,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossActionView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = LossActionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossAction/LossAction.view.js"],"names":["React","PropTypes","utils","TableFilters","TableToolbar","styles","useMedia","LossActionTable","makeStyles","Box","LossActionView","propTypes","items","object","isRequired","columnsArray","array","columnProps","func","tableFilterFields","isFetchingFilters","bool","handlers","shape","search","resetFilter","searchFilter","resetSearch","searchTerm","string","media","classes","name","isMobile","mobile","t","searchMaxWidth","onSearch","onResetFilter","onFilter","values","onResetSearch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { TableFilters, TableToolbar } from 'components';\r\nimport styles from './LossAction.styles';\r\nimport { useMedia } from 'hooks';\r\nimport LossActionTable from '../LossActionTable/LossActionTable';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nLossActionView.propTypes = {\r\n  items: PropTypes.object.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func,\r\n    resetFilter: PropTypes.func,\r\n    searchFilter: PropTypes.func,\r\n    resetSearch: PropTypes.func,\r\n  }),\r\n  searchTerm: PropTypes.string,\r\n};\r\n\r\nexport function LossActionView({ items, columnsArray, columnProps, tableFilterFields, isFetchingFilters, handlers, searchTerm }) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'LossAction' })({ isMobile: media.mobile });\r\n\r\n  return (\r\n    <Box mt={3} data-testid=\"loss-action\">\r\n      <TableToolbar>\r\n        <TableFilters\r\n          search\r\n          searchPlaceholder={utils.string.t('claims.processing.searchBarPlaceholder')}\r\n          searchMinChars={3}\r\n          nestedClasses={{ searchMaxWidth: classes.searchMaxWidth }}\r\n          filtersArray={tableFilterFields}\r\n          isFetchingFilters={isFetchingFilters}\r\n          handlers={{\r\n            onSearch: handlers.search,\r\n            onResetFilter: handlers.resetFilter,\r\n            onFilter: (values) => handlers.searchFilter(values),\r\n            onResetSearch: handlers.resetSearch,\r\n          }}\r\n          searchTerm={searchTerm}\r\n        />\r\n      </TableToolbar>\r\n      <LossActionTable lossActions={items} cols={columnsArray} columnProps={columnProps} />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}