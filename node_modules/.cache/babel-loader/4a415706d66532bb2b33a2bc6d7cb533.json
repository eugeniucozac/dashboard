{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceMailList.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './EmailManagementService.styles';\nimport { PopoverMenu, Warning } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nEmailManagementServiceMailListView.propTypes = {\n  emsInboxList: PropTypes.array.isRequired,\n  selectedMail: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    showMailBodyContent: PropTypes.func.isRequired\n  })\n};\n\nfunction EmailManagementServiceMailListView(_ref) {\n  var _this = this;\n\n  var emsInboxList = _ref.emsInboxList,\n      selectedMail = _ref.selectedMail,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'EmailManagementService'\n  })();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(PopoverMenu, {\n      disabled: true,\n      text: utils.string.t('ems.sent'),\n      iconPosition: 'left',\n      icon: ExpandMoreIcon,\n      id: \"view-menu-list\",\n      items: [{\n        id: 1,\n        label: utils.string.t('ems.sent')\n      }]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 28,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.mailListBody,\n      children: [utils.generic.isValidArray(emsInboxList, true) && emsInboxList.map(function (mail) {\n        var _classnames;\n\n        var checked = utils.generic.isValidObject(selectedMail) ? Boolean((selectedMail === null || selectedMail === void 0 ? void 0 : selectedMail.id) === (mail === null || mail === void 0 ? void 0 : mail.id)) : false;\n        return /*#__PURE__*/_jsxDEV(Box, {\n          className: classnames((_classnames = {}, _defineProperty(_classnames, classes.mailList, true), _defineProperty(_classnames, classes.mailSelected, checked), _classnames)),\n          onClick: function onClick() {\n            return handlers.showMailBodyContent(mail === null || mail === void 0 ? void 0 : mail.id);\n          },\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            wrap: \"nowrap\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 8,\n              zeroMinWidth: true,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                noWrap: true,\n                className: classes.mailListHeader1,\n                children: utils.string.t('ems.noReply')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 51,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                noWrap: true,\n                className: classes.mailListHeader2,\n                children: mail === null || mail === void 0 ? void 0 : mail.subject\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 54,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                noWrap: true,\n                className: classes.mailListHeader3,\n                children: mail === null || mail === void 0 ? void 0 : mail.text\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 57,\n                columnNumber: 21\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.date,\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: String(mail === null || mail === void 0 ? void 0 : mail.dateSent),\n                    format: config.ui.format.date.text\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 17\n          }, _this)\n        }, mail === null || mail === void 0 ? void 0 : mail.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 15\n        }, _this);\n      }), !utils.generic.isValidArray(emsInboxList, true) && /*#__PURE__*/_jsxDEV(Warning, {\n        text: utils.string.t('ems.noMailsFound'),\n        type: \"info\",\n        align: \"center\",\n        size: \"medium\",\n        icon: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_c = EmailManagementServiceMailListView;\nEmailManagementServiceMailListView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EmailManagementServiceMailListView\",\n  \"props\": {\n    \"emsInboxList\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedMail\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"showMailBodyContent\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default EmailManagementServiceMailListView;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceMailList.view.js\"] = {\n    name: \"EmailManagementServiceMailListView\",\n    docgenInfo: EmailManagementServiceMailListView.__docgenInfo,\n    path: \"src\\\\components\\\\EmailManagementService\\\\EmailManagementServiceMailList.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EmailManagementServiceMailListView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/EmailManagementService/EmailManagementServiceMailList.view.js"],"names":["React","PropTypes","classnames","styles","PopoverMenu","Warning","utils","config","makeStyles","Grid","Box","Typography","ExpandMoreIcon","EmailManagementServiceMailListView","propTypes","emsInboxList","array","isRequired","selectedMail","object","handlers","shape","showMailBodyContent","func","classes","name","string","t","id","label","mailListBody","generic","isValidArray","map","mail","checked","isValidObject","Boolean","mailList","mailSelected","mailListHeader1","mailListHeader2","subject","mailListHeader3","text","date","value","String","dateSent","format","ui"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './EmailManagementService.styles';\r\nimport { PopoverMenu, Warning } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Grid, Box, Typography } from '@material-ui/core';\r\nimport ExpandMoreIcon from '@material-ui/icons/ExpandMore';\r\n\r\nEmailManagementServiceMailListView.propTypes = {\r\n  emsInboxList: PropTypes.array.isRequired,\r\n  selectedMail: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    showMailBodyContent: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nfunction EmailManagementServiceMailListView({ emsInboxList, selectedMail, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'EmailManagementService' })();\r\n\r\n  return (\r\n    <>\r\n      <PopoverMenu\r\n        disabled\r\n        text={utils.string.t('ems.sent')}\r\n        iconPosition={'left'}\r\n        icon={ExpandMoreIcon}\r\n        id=\"view-menu-list\"\r\n        items={[{ id: 1, label: utils.string.t('ems.sent') }]}\r\n      />\r\n      <Box className={classes.mailListBody}>\r\n        {utils.generic.isValidArray(emsInboxList, true) &&\r\n          emsInboxList.map((mail) => {\r\n            const checked = utils.generic.isValidObject(selectedMail) ? Boolean(selectedMail?.id === mail?.id) : false;\r\n            return (\r\n              <Box\r\n                key={mail?.id}\r\n                className={classnames({\r\n                  [classes.mailList]: true,\r\n                  [classes.mailSelected]: checked,\r\n                })}\r\n                onClick={() => handlers.showMailBodyContent(mail?.id)}\r\n              >\r\n                <Grid container wrap=\"nowrap\" spacing={1}>\r\n                  <Grid item xs={8} zeroMinWidth>\r\n                    <Typography noWrap className={classes.mailListHeader1}>\r\n                      {utils.string.t('ems.noReply')}\r\n                    </Typography>\r\n                    <Typography noWrap className={classes.mailListHeader2}>\r\n                      {mail?.subject}\r\n                    </Typography>\r\n                    <Typography noWrap className={classes.mailListHeader3}>\r\n                      {mail?.text}\r\n                    </Typography>\r\n                  </Grid>\r\n                  <Grid item xs={4}>\r\n                    <Typography className={classes.date}>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: String(mail?.dateSent), format: config.ui.format.date.text },\r\n                      })}\r\n                    </Typography>\r\n                  </Grid>\r\n                </Grid>\r\n              </Box>\r\n            );\r\n          })}\r\n        {!utils.generic.isValidArray(emsInboxList, true) && (\r\n          <Warning text={utils.string.t('ems.noMailsFound')} type=\"info\" align=\"center\" size=\"medium\" icon />\r\n        )}\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n\r\nexport default EmailManagementServiceMailListView;\r\n"]},"metadata":{},"sourceType":"module"}