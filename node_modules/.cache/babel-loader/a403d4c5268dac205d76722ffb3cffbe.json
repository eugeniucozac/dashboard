{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\ChartKey\\\\ChartKey.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nimport { ChartKeyView } from './ChartKey.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChartKey.propTypes = {\n  onToggle: PropTypes.func,\n  onToggleAll: PropTypes.func,\n  title: PropTypes.string,\n  colorMode: PropTypes.oneOf(['light', 'dark']),\n  size: PropTypes.oneOf(['xsmall', 'small']),\n  items: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    label: PropTypes.string.isRequired,\n    color: PropTypes.string,\n    avatarText: PropTypes.string,\n    checked: PropTypes.bool\n  })).isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  }),\n  isCollapsed: PropTypes.bool,\n  allowCollapse: PropTypes.bool,\n  avatarSize: PropTypes.number,\n  onAvatarClick: PropTypes.func,\n  hint: PropTypes.string,\n  testid: PropTypes.string\n};\nChartKey.defaultProps = {\n  nestedClasses: {},\n  isCollapsed: false,\n  allowCollapse: false,\n  colorMode: 'light',\n  size: 'small',\n  avatarSize: 15,\n  noBorder: false\n};\nexport function ChartKey(_ref) {\n  _s();\n\n  var items = _ref.items,\n      title = _ref.title,\n      onToggle = _ref.onToggle,\n      colorMode = _ref.colorMode,\n      size = _ref.size,\n      avatarSize = _ref.avatarSize,\n      nestedClasses = _ref.nestedClasses,\n      isCollapsed = _ref.isCollapsed,\n      allowCollapse = _ref.allowCollapse,\n      onToggleAll = _ref.onToggleAll,\n      onAvatarClick = _ref.onAvatarClick,\n      hint = _ref.hint,\n      testid = _ref.testid,\n      noBorder = _ref.noBorder;\n\n  var _useState = useState(isCollapsed),\n      _useState2 = _slicedToArray(_useState, 2),\n      collapsed = _useState2[0],\n      setCollapsed = _useState2[1];\n\n  if (!utils.generic.isValidArray(items, true)) return null;\n  return /*#__PURE__*/_jsxDEV(ChartKeyView, {\n    handleToggle: onToggle,\n    handleToggleAll: onToggleAll,\n    items: items,\n    title: title,\n    collapsed: collapsed,\n    setCollapsed: setCollapsed,\n    colorMode: colorMode,\n    size: size,\n    avatarSize: avatarSize,\n    nestedClasses: nestedClasses,\n    allowCollapse: allowCollapse,\n    onAvatarClick: onAvatarClick,\n    hint: hint,\n    testid: testid,\n    noBorder: noBorder\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 65,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChartKey, \"9ywoe7lNsn7hDxXznmGjMp/agHo=\");\n\n_c = ChartKey;\nChartKey.displayName = \"ChartKey\";\nChartKey.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ChartKey\",\n  \"props\": {\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isCollapsed\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowCollapse\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"colorMode\": {\n      \"defaultValue\": {\n        \"value\": \"'light'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'light'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'dark'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"size\": {\n      \"defaultValue\": {\n        \"value\": \"'small'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'xsmall'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'small'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"avatarSize\": {\n      \"defaultValue\": {\n        \"value\": \"15\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"noBorder\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"onToggle\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onToggleAll\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"items\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"color\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"avatarText\": {\n              \"name\": \"string\",\n              \"required\": false\n            },\n            \"checked\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"onAvatarClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"testid\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ChartKey;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\ChartKey\\\\ChartKey.js\"] = {\n    name: \"ChartKey\",\n    docgenInfo: ChartKey.__docgenInfo,\n    path: \"src\\\\components\\\\ChartKey\\\\ChartKey.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ChartKey\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/ChartKey/ChartKey.js"],"names":["React","useState","PropTypes","utils","ChartKeyView","ChartKey","propTypes","onToggle","func","onToggleAll","title","string","colorMode","oneOf","size","items","arrayOf","shape","id","oneOfType","number","label","isRequired","color","avatarText","checked","bool","nestedClasses","root","isCollapsed","allowCollapse","avatarSize","onAvatarClick","hint","testid","defaultProps","noBorder","collapsed","setCollapsed","generic","isValidArray"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,QAA6B,iBAA7B;;AAEAC,QAAQ,CAACC,SAAT,GAAqB;AACnBC,EAAAA,QAAQ,EAAEL,SAAS,CAACM,IADD;AAEnBC,EAAAA,WAAW,EAAEP,SAAS,CAACM,IAFJ;AAGnBE,EAAAA,KAAK,EAAER,SAAS,CAACS,MAHE;AAInBC,EAAAA,SAAS,EAAEV,SAAS,CAACW,KAAV,CAAgB,CAAC,OAAD,EAAU,MAAV,CAAhB,CAJQ;AAKnBC,EAAAA,IAAI,EAAEZ,SAAS,CAACW,KAAV,CAAgB,CAAC,QAAD,EAAW,OAAX,CAAhB,CALa;AAMnBE,EAAAA,KAAK,EAAEb,SAAS,CAACc,OAAV,CACLd,SAAS,CAACe,KAAV,CAAgB;AACdC,IAAAA,EAAE,EAAEhB,SAAS,CAACiB,SAAV,CAAoB,CAACjB,SAAS,CAACS,MAAX,EAAmBT,SAAS,CAACkB,MAA7B,CAApB,CADU;AAEdC,IAAAA,KAAK,EAAEnB,SAAS,CAACS,MAAV,CAAiBW,UAFV;AAGdC,IAAAA,KAAK,EAAErB,SAAS,CAACS,MAHH;AAIda,IAAAA,UAAU,EAAEtB,SAAS,CAACS,MAJR;AAKdc,IAAAA,OAAO,EAAEvB,SAAS,CAACwB;AALL,GAAhB,CADK,EAQLJ,UAdiB;AAenBK,EAAAA,aAAa,EAAEzB,SAAS,CAACe,KAAV,CAAgB;AAC7BW,IAAAA,IAAI,EAAE1B,SAAS,CAACS;AADa,GAAhB,CAfI;AAkBnBkB,EAAAA,WAAW,EAAE3B,SAAS,CAACwB,IAlBJ;AAmBnBI,EAAAA,aAAa,EAAE5B,SAAS,CAACwB,IAnBN;AAoBnBK,EAAAA,UAAU,EAAE7B,SAAS,CAACkB,MApBH;AAqBnBY,EAAAA,aAAa,EAAE9B,SAAS,CAACM,IArBN;AAsBnByB,EAAAA,IAAI,EAAE/B,SAAS,CAACS,MAtBG;AAuBnBuB,EAAAA,MAAM,EAAEhC,SAAS,CAACS;AAvBC,CAArB;AA0BAN,QAAQ,CAAC8B,YAAT,GAAwB;AACtBR,EAAAA,aAAa,EAAE,EADO;AAEtBE,EAAAA,WAAW,EAAE,KAFS;AAGtBC,EAAAA,aAAa,EAAE,KAHO;AAItBlB,EAAAA,SAAS,EAAE,OAJW;AAKtBE,EAAAA,IAAI,EAAE,OALgB;AAMtBiB,EAAAA,UAAU,EAAE,EANU;AAOtBK,EAAAA,QAAQ,EAAE;AAPY,CAAxB;AAUA,OAAO,SAAS/B,QAAT,OAeJ;AAAA;;AAAA,MAdDU,KAcC,QAdDA,KAcC;AAAA,MAbDL,KAaC,QAbDA,KAaC;AAAA,MAZDH,QAYC,QAZDA,QAYC;AAAA,MAXDK,SAWC,QAXDA,SAWC;AAAA,MAVDE,IAUC,QAVDA,IAUC;AAAA,MATDiB,UASC,QATDA,UASC;AAAA,MARDJ,aAQC,QARDA,aAQC;AAAA,MAPDE,WAOC,QAPDA,WAOC;AAAA,MANDC,aAMC,QANDA,aAMC;AAAA,MALDrB,WAKC,QALDA,WAKC;AAAA,MAJDuB,aAIC,QAJDA,aAIC;AAAA,MAHDC,IAGC,QAHDA,IAGC;AAAA,MAFDC,MAEC,QAFDA,MAEC;AAAA,MADDE,QACC,QADDA,QACC;;AAAA,kBACiCnC,QAAQ,CAAC4B,WAAD,CADzC;AAAA;AAAA,MACMQ,SADN;AAAA,MACiBC,YADjB;;AAGD,MAAI,CAACnC,KAAK,CAACoC,OAAN,CAAcC,YAAd,CAA2BzB,KAA3B,EAAkC,IAAlC,CAAL,EAA8C,OAAO,IAAP;AAE9C,sBACE,QAAC,YAAD;AACE,IAAA,YAAY,EAAER,QADhB;AAEE,IAAA,eAAe,EAAEE,WAFnB;AAGE,IAAA,KAAK,EAAEM,KAHT;AAIE,IAAA,KAAK,EAAEL,KAJT;AAKE,IAAA,SAAS,EAAE2B,SALb;AAME,IAAA,YAAY,EAAEC,YANhB;AAOE,IAAA,SAAS,EAAE1B,SAPb;AAQE,IAAA,IAAI,EAAEE,IARR;AASE,IAAA,UAAU,EAAEiB,UATd;AAUE,IAAA,aAAa,EAAEJ,aAVjB;AAWE,IAAA,aAAa,EAAEG,aAXjB;AAYE,IAAA,aAAa,EAAEE,aAZjB;AAaE,IAAA,IAAI,EAAEC,IAbR;AAcE,IAAA,MAAM,EAAEC,MAdV;AAeE,IAAA,QAAQ,EAAEE;AAfZ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GAvCe/B,Q;;KAAAA,Q;AAAAA,Q;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AAyChB,eAAeA,QAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { ChartKeyView } from './ChartKey.view';\r\n\r\nChartKey.propTypes = {\r\n  onToggle: PropTypes.func,\r\n  onToggleAll: PropTypes.func,\r\n  title: PropTypes.string,\r\n  colorMode: PropTypes.oneOf(['light', 'dark']),\r\n  size: PropTypes.oneOf(['xsmall', 'small']),\r\n  items: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      label: PropTypes.string.isRequired,\r\n      color: PropTypes.string,\r\n      avatarText: PropTypes.string,\r\n      checked: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n  isCollapsed: PropTypes.bool,\r\n  allowCollapse: PropTypes.bool,\r\n  avatarSize: PropTypes.number,\r\n  onAvatarClick: PropTypes.func,\r\n  hint: PropTypes.string,\r\n  testid: PropTypes.string,\r\n};\r\n\r\nChartKey.defaultProps = {\r\n  nestedClasses: {},\r\n  isCollapsed: false,\r\n  allowCollapse: false,\r\n  colorMode: 'light',\r\n  size: 'small',\r\n  avatarSize: 15,\r\n  noBorder: false,\r\n};\r\n\r\nexport function ChartKey({\r\n  items,\r\n  title,\r\n  onToggle,\r\n  colorMode,\r\n  size,\r\n  avatarSize,\r\n  nestedClasses,\r\n  isCollapsed,\r\n  allowCollapse,\r\n  onToggleAll,\r\n  onAvatarClick,\r\n  hint,\r\n  testid,\r\n  noBorder,\r\n}) {\r\n  const [collapsed, setCollapsed] = useState(isCollapsed);\r\n\r\n  if (!utils.generic.isValidArray(items, true)) return null;\r\n\r\n  return (\r\n    <ChartKeyView\r\n      handleToggle={onToggle}\r\n      handleToggleAll={onToggleAll}\r\n      items={items}\r\n      title={title}\r\n      collapsed={collapsed}\r\n      setCollapsed={setCollapsed}\r\n      colorMode={colorMode}\r\n      size={size}\r\n      avatarSize={avatarSize}\r\n      nestedClasses={nestedClasses}\r\n      allowCollapse={allowCollapse}\r\n      onAvatarClick={onAvatarClick}\r\n      hint={hint}\r\n      testid={testid}\r\n      noBorder={noBorder}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ChartKey;\r\n"]},"metadata":{},"sourceType":"module"}