{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PremiumProcessingCheckSigningReject\\\\PremiumProcessingCheckSigningReject.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './PremiumProcessingCheckSigningReject.styles';\nimport { Button, FormContainer, FormSelect, FormActions, FormGrid, FormCheckbox, FormText, Translate, FormDate, FormAutocomplete } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Divider } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCheckSigningRejectView.propTypes = {\n  fields: PropTypes.array,\n  actions: PropTypes.array\n};\nexport function PremiumProcessingCheckSigningRejectView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      actions = _ref.actions;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCheckSigningReject'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      watch = _useForm.watch,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  var CheckBoxValue = watch('checkBoxMessage');\n  var cancel = actions && actions.find(function (action) {\n    return action.name === 'cancel';\n  });\n  var submit = actions && actions.find(function (action) {\n    return action.name === 'submit';\n  });\n\n  var onSubmit = function onSubmit(data) {\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(onSubmit),\n      nestedClasses: {\n        root: classes.leftMargin\n      },\n      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Translate, {\n          variant: \"h5\",\n          label: \"premiumProcessing.checkSigningReject.rejectMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n        item: true,\n        xs: 4,\n        children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'chooseReason')), {}, {\n          error: errors.chooseReason,\n          control: control\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'checkBoxMessage', control)), {}, {\n        nestedClasses: {\n          root: classes.checkboxAlignment\n        }\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this), CheckBoxValue && /*#__PURE__*/_jsxDEV(FormContainer, {\n        className: classes.bottomMargin,\n        children: [/*#__PURE__*/_jsxDEV(Translate, {\n          variant: \"h5\",\n          label: \"premiumProcessing.checkSigningReject.textMessage\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 3,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'workPackageReference')), {}, {\n              control: control,\n              error: errors.workPackageReference\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bureauList')), {}, {\n              control: control,\n              error: errors.bureauList,\n              handleUpdate: function handleUpdate(id, value) {\n                setValue(id, value);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 75,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 74,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 4,\n            children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'packageSubmittedDate', control)), {}, {\n              error: errors.packageSubmittedDate\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 85,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 84,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: cancel.label,\n        variant: \"outlined\",\n        size: \"medium\",\n        disabled: formState.isSubmitting,\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 11\n      }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: !CheckBoxValue ? utils.string.t('premiumProcessing.checkSigningReject.rejectCase') : submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting,\n        onClick: handleSubmit(submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 96,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCheckSigningRejectView, \"8t/3eNFysnogZf8LyHkgiUi1S7k=\", false, function () {\n  return [useForm];\n});\n\n_c = PremiumProcessingCheckSigningRejectView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCheckSigningRejectView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PremiumProcessingCheckSigningReject/PremiumProcessingCheckSigningReject.view.js"],"names":["React","PropTypes","useForm","yupResolver","styles","Button","FormContainer","FormSelect","FormActions","FormGrid","FormCheckbox","FormText","Translate","FormDate","FormAutocomplete","utils","makeStyles","Divider","PremiumProcessingCheckSigningRejectView","propTypes","fields","array","actions","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","errors","watch","handleSubmit","formState","setValue","CheckBoxValue","cancel","find","action","submit","onSubmit","data","generic","isFunction","handler","root","leftMargin","getFieldProps","chooseReason","checkboxAlignment","bottomMargin","workPackageReference","bureauList","id","value","packageSubmittedDate","label","isSubmitting","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './PremiumProcessingCheckSigningReject.styles';\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormSelect,\r\n  FormActions,\r\n  FormGrid,\r\n  FormCheckbox,\r\n  FormText,\r\n  Translate,\r\n  FormDate,\r\n  FormAutocomplete,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Divider } from '@material-ui/core';\r\n\r\nPremiumProcessingCheckSigningRejectView.propTypes = {\r\n  fields: PropTypes.array,\r\n  actions: PropTypes.array,\r\n};\r\n\r\nexport function PremiumProcessingCheckSigningRejectView({ fields, actions }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCheckSigningReject' })();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, errors, watch, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const CheckBoxValue = watch('checkBoxMessage');\r\n  const cancel = actions && actions.find((action) => action.name === 'cancel');\r\n  const submit = actions && actions.find((action) => action.name === 'submit');\r\n\r\n  const onSubmit = (data) => {\r\n    return submit && utils.generic.isFunction(submit.handler) && submit.handler(data);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(onSubmit)} nestedClasses={{ root: classes.leftMargin }}>\r\n        <FormGrid item xs={12}>\r\n          <Translate variant=\"h5\" label=\"premiumProcessing.checkSigningReject.rejectMessage\" />\r\n        </FormGrid>\r\n        <FormGrid item xs={4}>\r\n          <FormSelect {...utils.form.getFieldProps(fields, 'chooseReason')} error={errors.chooseReason} control={control} />\r\n        </FormGrid>\r\n        <Divider />\r\n        <FormCheckbox\r\n          {...utils.form.getFieldProps(fields, 'checkBoxMessage', control)}\r\n          nestedClasses={{ root: classes.checkboxAlignment }}\r\n        />\r\n\r\n        {CheckBoxValue && (\r\n          <FormContainer className={classes.bottomMargin}>\r\n            <Translate variant=\"h5\" label=\"premiumProcessing.checkSigningReject.textMessage\" />\r\n            <FormGrid container spacing={3}>\r\n              <FormGrid item xs={4}>\r\n                <FormText\r\n                  {...utils.form.getFieldProps(fields, 'workPackageReference')}\r\n                  control={control}\r\n                  error={errors.workPackageReference}\r\n                />\r\n              </FormGrid>\r\n              <FormGrid item xs={4}>\r\n                <FormAutocomplete\r\n                  {...utils.form.getFieldProps(fields, 'bureauList')}\r\n                  control={control}\r\n                  error={errors.bureauList}\r\n                  handleUpdate={(id, value) => {\r\n                    setValue(id, value);\r\n                  }}\r\n                />\r\n              </FormGrid>\r\n              <FormGrid item xs={4}>\r\n                <FormDate {...utils.form.getFieldProps(fields, 'packageSubmittedDate', control)} error={errors.packageSubmittedDate} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormContainer>\r\n        )}\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {cancel && (\r\n          <Button text={cancel.label} variant=\"outlined\" size=\"medium\" disabled={formState.isSubmitting} onClick={cancel.handler} />\r\n        )}\r\n        {submit && (\r\n          <Button\r\n            text={!CheckBoxValue ? utils.string.t('premiumProcessing.checkSigningReject.rejectCase') : submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting}\r\n            onClick={handleSubmit(submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}