{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TableFilters\\\\TableFilters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy'; // app\n\nimport { TableFiltersView } from './TableFilters.view';\nimport { PopoverFilter } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTableFilters.propTypes = {\n  clearFilterKey: PropTypes.string,\n  searchBy: PropTypes.node,\n  search: PropTypes.bool,\n  searchAdvanced: PropTypes.node,\n  searchAdvancedExpanded: PropTypes.object,\n  searchMinChars: PropTypes.number,\n  searchPlaceholder: PropTypes.string,\n  isFetchingFilters: PropTypes.bool,\n  filters: PropTypes.bool,\n  filtersDisabled: PropTypes.bool,\n  filtersExpanded: PropTypes.bool,\n  filtersArray: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any,\n    text: PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      count: PropTypes.number\n    }),\n    placeholder: PropTypes.string,\n    content: PropTypes.node.isRequired,\n    maxHeight: PropTypes.number\n  })),\n  columns: PropTypes.bool,\n  columnsArray: PropTypes.array,\n  handlers: PropTypes.shape({\n    onSearch: PropTypes.func,\n    onFilter: PropTypes.func,\n    onResetFilter: PropTypes.func,\n    onToggleColumn: PropTypes.func,\n    onResetSearch: PropTypes.func,\n    onFilterExpand: PropTypes.func\n  }),\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    searchMaxWidth: PropTypes.string,\n    searchLeft: PropTypes.string,\n    searchBox: PropTypes.string\n  }),\n  searchTerm: PropTypes.string,\n  searchByTerm: PropTypes.string\n};\nTableFilters.defaultProps = {\n  search: true,\n  filters: true,\n  isFetchingFilters: false,\n  columns: false,\n  handlers: {},\n  nestedClasses: {},\n  searchMinChars: 1,\n  searchTerm: ''\n};\nexport function TableFilters(_ref) {\n  _s();\n\n  var _this = this;\n\n  var isFetchingFilters = _ref.isFetchingFilters,\n      _ref$filtersArray = _ref.filtersArray,\n      filtersArray = _ref$filtersArray === void 0 ? [] : _ref$filtersArray,\n      clearFilterKey = _ref.clearFilterKey,\n      columnsArray = _ref.columnsArray,\n      handlers = _ref.handlers,\n      searchAdvanced = _ref.searchAdvanced,\n      searchAdvancedExpanded = _ref.searchAdvancedExpanded,\n      searchPlaceholder = _ref.searchPlaceholder,\n      searchTerm = _ref.searchTerm,\n      searchByTerm = _ref.searchByTerm,\n      props = _objectWithoutProperties(_ref, [\"isFetchingFilters\", \"filtersArray\", \"clearFilterKey\", \"columnsArray\", \"handlers\", \"searchAdvanced\", \"searchAdvancedExpanded\", \"searchPlaceholder\", \"searchTerm\", \"searchByTerm\"]);\n\n  var isMounted = useRef(false);\n  var previousFilters = useRef(false);\n\n  var getFiltersObject = function getFiltersObject(filtersFieldsArray) {\n    return filtersFieldsArray.reduce(function (acc, cur) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.id, cur.value));\n    }, {});\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchByChanged = _useState6[0],\n      setSearchByChanged = _useState6[1]; // when search & searchBy combination has changed after search submit\n\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      advancedSearchExpanded = _useState8[0],\n      setAdvancedSearchExpanded = _useState8[1];\n\n  var _useState9 = useState(false),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filtersExpanded = _useState10[0],\n      setFiltersExpanded = _useState10[1];\n\n  var _useState11 = useState(getFiltersObject(filtersArray)),\n      _useState12 = _slicedToArray(_useState11, 2),\n      filtersFieldsObject = _useState12[0],\n      setFiltersFieldsObject = _useState12[1];\n\n  var _useState13 = useState(false),\n      _useState14 = _slicedToArray(_useState13, 2),\n      columnsExpanded = _useState14[0],\n      setColumnsExpanded = _useState14[1]; // save the original filters\n\n\n  useEffect(function () {\n    previousFilters.current = getFiltersObject(filtersArray);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // when the search (string) state has changed, we call the onSearch handler (to trigger API fetch)\n\n  useEffect(function () {\n    if (isMounted.current) {\n      triggerNewSearch();\n    } else {\n      isMounted.current = true;\n    }\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (searchByChanged) {\n      triggerNewSearch();\n    }\n  }, [searchByChanged]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setSearch(searchTerm);\n    setSearchByChanged(false);\n  }, [searchTerm]);\n  useEffect(function () {\n    if ((searchAdvancedExpanded === null || searchAdvancedExpanded === void 0 ? void 0 : searchAdvancedExpanded.isOpen) !== advancedSearchExpanded) {\n      setAdvancedSearchExpanded(searchAdvancedExpanded === null || searchAdvancedExpanded === void 0 ? void 0 : searchAdvancedExpanded.isOpen);\n    }\n  }, [searchAdvancedExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var triggerNewSearch = function triggerNewSearch() {\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onSearch)) {\n      handlers.onSearch({\n        search: search,\n        searchBy: searchByTerm,\n        filters: filtersFieldsObject\n      });\n      setSearchByChanged(false);\n    }\n  };\n\n  var toggleMultiSelectOption = function toggleMultiSelectOption(field, value) {\n    var fieldObj = filtersArray.find(function (f) {\n      return f.id === field;\n    });\n\n    if (field && value) {\n      var _fieldObj$content, _fieldObj$content$pro, _fieldObj$content$pro2;\n\n      var currentField = (filtersFieldsObject === null || filtersFieldsObject === void 0 ? void 0 : filtersFieldsObject[field]) || [];\n      var isValueAlreadySelected = currentField.some(function (i) {\n        return i.id === value.id;\n      });\n\n      var newFilters = _objectSpread(_objectSpread({}, filtersFieldsObject), {}, _defineProperty({}, field, isValueAlreadySelected ? currentField.filter(function (i) {\n        return i.id !== value.id;\n      }) : [].concat(_toConsumableArray(currentField), [value])));\n\n      setFiltersFieldsObject(newFilters);\n\n      if (utils.generic.isFunction(fieldObj === null || fieldObj === void 0 ? void 0 : (_fieldObj$content = fieldObj.content) === null || _fieldObj$content === void 0 ? void 0 : (_fieldObj$content$pro = _fieldObj$content.props) === null || _fieldObj$content$pro === void 0 ? void 0 : (_fieldObj$content$pro2 = _fieldObj$content$pro.handlers) === null || _fieldObj$content$pro2 === void 0 ? void 0 : _fieldObj$content$pro2.toggleOption)) {\n        fieldObj.content.props.handlers.toggleOption(field, value);\n      }\n    }\n  };\n\n  var selectedDatePicker = function selectedDatePicker(field, value) {\n    var fieldObj = filtersArray.find(function (f) {\n      return f.id === field;\n    });\n\n    if (field && value) {\n      var _fieldObj$content2, _fieldObj$content2$pr, _fieldObj$content2$pr2;\n\n      var newFilters = _objectSpread(_objectSpread({}, filtersFieldsObject), {}, _defineProperty({}, field, value));\n\n      setFiltersFieldsObject(newFilters);\n\n      if (utils.generic.isFunction(fieldObj === null || fieldObj === void 0 ? void 0 : (_fieldObj$content2 = fieldObj.content) === null || _fieldObj$content2 === void 0 ? void 0 : (_fieldObj$content2$pr = _fieldObj$content2.props) === null || _fieldObj$content2$pr === void 0 ? void 0 : (_fieldObj$content2$pr2 = _fieldObj$content2$pr.handlers) === null || _fieldObj$content2$pr2 === void 0 ? void 0 : _fieldObj$content2$pr2.toggelDatePicker)) {\n        fieldObj.content.props.handlers.toggelDatePicker(field, value);\n      }\n    }\n  };\n\n  var toggleFilters = function toggleFilters() {\n    setFiltersExpanded(!filtersExpanded);\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onFilterExpand)) {\n      handlers === null || handlers === void 0 ? void 0 : handlers.onFilterExpand(!filtersExpanded);\n    }\n  }; // when the filters have changed, we call the onFilter handler (to trigger API fetch)\n\n\n  var submitFilters = function submitFilters() {\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onFilter)) {\n      previousFilters.current = filtersFieldsObject;\n      handlers.onFilter({\n        search: search,\n        filters: filtersFieldsObject\n      });\n    }\n  };\n\n  var clearFilters = function clearFilters() {\n    var newFieldsObject = Object.keys(filtersFieldsObject).reduce(function (acc, key) {\n      var returnObject = {};\n      returnObject = Array.isArray(filtersFieldsObject[key]) ? _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, [])) : _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, ''));\n      return returnObject;\n    }, {});\n    setFiltersFieldsObject(newFieldsObject);\n    previousFilters.current = newFieldsObject;\n  };\n\n  var resetFilters = function resetFilters() {\n    clearFilters();\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onResetFilter)) {\n      handlers.onResetFilter();\n    }\n  };\n\n  useEffect(function () {\n    if (clearFilterKey) clearFilters();\n  }, [clearFilterKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isFiltersModified = function isFiltersModified() {\n    var previous = previousFilters.current;\n    var current = filtersFieldsObject;\n    return isEqual(Object.entries(previous || {}).reduce(function (acc, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          name = _ref3[0],\n          value = _ref3[1];\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, sortBy(value, 'id')));\n    }, {}), Object.entries(current).reduce(function (acc, _ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          name = _ref5[0],\n          value = _ref5[1];\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, sortBy(value, 'id')));\n    }, {}));\n  };\n\n  var fields = filtersArray.map(function (field) {\n    var _field$content, _field$content$props;\n\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, field), field.type === 'multiSelect' && {\n      value: filtersFieldsObject[field.id]\n    }), field.type === 'multiSelectAsync' && {\n      value: filtersFieldsObject[field.id]\n    }), field.type === 'datepicker' && {\n      value: filtersFieldsObject[field.id]\n    }), {}, {\n      handlers: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, field.handlers), (_field$content = field.content) === null || _field$content === void 0 ? void 0 : (_field$content$props = _field$content.props) === null || _field$content$props === void 0 ? void 0 : _field$content$props.handlers), field.type === 'multiSelect' && {\n        toggleOption: toggleMultiSelectOption\n      }), field.type === 'multiSelectAsync' && {\n        toggleOption: toggleMultiSelectOption\n      }), field.type === 'datepicker' && {\n        toggelDatePicker: selectedDatePicker\n      })\n    });\n  });\n\n  var toggleColumns = function toggleColumns(column) {\n    handlers.onToggleColumn(column);\n  };\n\n  var toggleColumnsExpanded = function toggleColumnsExpanded() {\n    setColumnsExpanded(!columnsExpanded);\n  };\n\n  var columnsFiltered = function columnsFiltered(columns) {\n    if (utils.generic.isInvalidOrEmptyArray(columns)) return []; // remove columns which should not be part of the flexi column list\n\n    return columns.filter(function (col) {\n      return !col.menu;\n    });\n  }; // when the search form is submitted, we update the internal state which will trigger a useEffect re-render\n\n\n  var submitSearch = function submitSearch(queryTerm, queryByTerm) {\n    setSearch(queryTerm);\n    if (queryByTerm) setSearchByChanged(true);\n  }; // resetKey is used to reset the <Search /> submit button which sometimes remains active\n\n\n  var resetSearch = function resetSearch() {\n    setSearch('');\n    setSearchByChanged(false);\n    setResetKey(new Date().getTime());\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onResetSearch)) {\n      handlers.onResetSearch();\n    }\n  };\n\n  var toggleAdvancedSearch = function toggleAdvancedSearch(isOpen) {\n    setAdvancedSearchExpanded(typeof isOpen === 'boolean' ? isOpen : !advancedSearchExpanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableFiltersView, _objectSpread(_objectSpread({}, props), {}, {\n    resetKey: resetKey,\n    search: searchAdvanced ? false : props.search,\n    searchQuery: search,\n    searchPlaceholder: searchPlaceholder,\n    searchByTerm: searchByTerm ? searchByTerm : !(props === null || props === void 0 ? void 0 : props.searchBy) ? '' : null,\n    searchAdvanced: searchAdvanced,\n    searchAdvancedExpanded: advancedSearchExpanded,\n    isFetchingFilters: isFetchingFilters,\n    filtersExpanded: filtersExpanded,\n    filtersSubmitDisabled: isFiltersModified(),\n    filtersArray: fields,\n    columnsArray: columnsFiltered(columnsArray),\n    columnsExpanded: columnsExpanded,\n    handlers: {\n      toggleFilters: toggleFilters,\n      resetFilters: resetFilters,\n      submitFilters: submitFilters,\n      toggleColumns: toggleColumns,\n      toggleColumnsExpanded: toggleColumnsExpanded,\n      toggleAdvancedSearch: toggleAdvancedSearch,\n      submitSearch: submitSearch,\n      resetSearch: resetSearch\n    },\n    children: utils.generic.isValidArray(fields, true) ? fields.map(function (field) {\n      var _field$content2, _field$content2$props, _field$content2$props2;\n\n      return /*#__PURE__*/_jsxDEV(PopoverFilter, _objectSpread(_objectSpread({}, field), {}, {\n        disabled: field.disabled || !field.content || field.type === 'multiSelect' && utils.generic.isInvalidOrEmptyArray(field.options) || field.type === 'multiSelectAsync' && !((_field$content2 = field.content) === null || _field$content2 === void 0 ? void 0 : (_field$content2$props = _field$content2.props) === null || _field$content2$props === void 0 ? void 0 : (_field$content2$props2 = _field$content2$props.handlers) === null || _field$content2$props2 === void 0 ? void 0 : _field$content2$props2.fetch)\n      }), field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 15\n      }, _this);\n    }) : null\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 278,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableFilters, \"QHutoiGTNjbByBIoAeDIT02WQaA=\");\n\n_c = TableFilters;\nexport default TableFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableFilters\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TableFilters/TableFilters.js"],"names":["React","useState","useEffect","useRef","PropTypes","isEqual","sortBy","TableFiltersView","PopoverFilter","utils","TableFilters","propTypes","clearFilterKey","string","searchBy","node","search","bool","searchAdvanced","searchAdvancedExpanded","object","searchMinChars","number","searchPlaceholder","isFetchingFilters","filters","filtersDisabled","filtersExpanded","filtersArray","arrayOf","shape","id","isRequired","type","oneOf","label","value","any","text","count","placeholder","content","maxHeight","columns","columnsArray","array","handlers","onSearch","func","onFilter","onResetFilter","onToggleColumn","onResetSearch","onFilterExpand","nestedClasses","root","searchMaxWidth","searchLeft","searchBox","searchTerm","searchByTerm","defaultProps","props","isMounted","previousFilters","getFiltersObject","filtersFieldsArray","reduce","acc","cur","resetKey","setResetKey","setSearch","searchByChanged","setSearchByChanged","advancedSearchExpanded","setAdvancedSearchExpanded","setFiltersExpanded","filtersFieldsObject","setFiltersFieldsObject","columnsExpanded","setColumnsExpanded","current","triggerNewSearch","isOpen","generic","isFunction","toggleMultiSelectOption","field","fieldObj","find","f","currentField","isValueAlreadySelected","some","i","newFilters","filter","toggleOption","selectedDatePicker","toggelDatePicker","toggleFilters","submitFilters","clearFilters","newFieldsObject","Object","keys","key","returnObject","Array","isArray","resetFilters","isFiltersModified","previous","entries","name","fields","map","toggleColumns","column","toggleColumnsExpanded","columnsFiltered","isInvalidOrEmptyArray","col","menu","submitSearch","queryTerm","queryByTerm","resetSearch","Date","getTime","toggleAdvancedSearch","isValidArray","disabled","options","fetch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isEqual from 'lodash/isEqual';\r\nimport sortBy from 'lodash/sortBy';\r\n\r\n// app\r\nimport { TableFiltersView } from './TableFilters.view';\r\nimport { PopoverFilter } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nTableFilters.propTypes = {\r\n  clearFilterKey: PropTypes.string,\r\n  searchBy: PropTypes.node,\r\n  search: PropTypes.bool,\r\n  searchAdvanced: PropTypes.node,\r\n  searchAdvancedExpanded: PropTypes.object,\r\n  searchMinChars: PropTypes.number,\r\n  searchPlaceholder: PropTypes.string,\r\n  isFetchingFilters: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filtersDisabled: PropTypes.bool,\r\n  filtersExpanded: PropTypes.bool,\r\n  filtersArray: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any,\r\n      text: PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        count: PropTypes.number,\r\n      }),\r\n      placeholder: PropTypes.string,\r\n      content: PropTypes.node.isRequired,\r\n      maxHeight: PropTypes.number,\r\n    })\r\n  ),\r\n  columns: PropTypes.bool,\r\n  columnsArray: PropTypes.array,\r\n  handlers: PropTypes.shape({\r\n    onSearch: PropTypes.func,\r\n    onFilter: PropTypes.func,\r\n    onResetFilter: PropTypes.func,\r\n    onToggleColumn: PropTypes.func,\r\n    onResetSearch: PropTypes.func,\r\n    onFilterExpand: PropTypes.func,\r\n  }),\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    searchMaxWidth: PropTypes.string,\r\n    searchLeft: PropTypes.string,\r\n    searchBox: PropTypes.string,\r\n  }),\r\n  searchTerm: PropTypes.string,\r\n  searchByTerm: PropTypes.string,\r\n};\r\n\r\nTableFilters.defaultProps = {\r\n  search: true,\r\n  filters: true,\r\n  isFetchingFilters: false,\r\n  columns: false,\r\n  handlers: {},\r\n  nestedClasses: {},\r\n  searchMinChars: 1,\r\n  searchTerm: '',\r\n};\r\n\r\nexport function TableFilters({\r\n  isFetchingFilters,\r\n  filtersArray = [],\r\n  clearFilterKey,\r\n  columnsArray,\r\n  handlers,\r\n  searchAdvanced,\r\n  searchAdvancedExpanded,\r\n  searchPlaceholder,\r\n  searchTerm,\r\n  searchByTerm,\r\n  ...props\r\n}) {\r\n  const isMounted = useRef(false);\r\n  const previousFilters = useRef(false);\r\n\r\n  const getFiltersObject = (filtersFieldsArray) => {\r\n    return filtersFieldsArray.reduce((acc, cur) => {\r\n      return {\r\n        ...acc,\r\n        [cur.id]: cur.value,\r\n      };\r\n    }, {});\r\n  };\r\n\r\n  const [resetKey, setResetKey] = useState();\r\n  const [search, setSearch] = useState('');\r\n  const [searchByChanged, setSearchByChanged] = useState(false); // when search & searchBy combination has changed after search submit\r\n  const [advancedSearchExpanded, setAdvancedSearchExpanded] = useState(false);\r\n  const [filtersExpanded, setFiltersExpanded] = useState(false);\r\n  const [filtersFieldsObject, setFiltersFieldsObject] = useState(getFiltersObject(filtersArray));\r\n  const [columnsExpanded, setColumnsExpanded] = useState(false);\r\n\r\n  // save the original filters\r\n  useEffect(() => {\r\n    previousFilters.current = getFiltersObject(filtersArray);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // when the search (string) state has changed, we call the onSearch handler (to trigger API fetch)\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      triggerNewSearch();\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (searchByChanged) {\r\n      triggerNewSearch();\r\n    }\r\n  }, [searchByChanged]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setSearch(searchTerm);\r\n    setSearchByChanged(false);\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (searchAdvancedExpanded?.isOpen !== advancedSearchExpanded) {\r\n      setAdvancedSearchExpanded(searchAdvancedExpanded?.isOpen);\r\n    }\r\n  }, [searchAdvancedExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const triggerNewSearch = () => {\r\n    if (utils.generic.isFunction(handlers?.onSearch)) {\r\n      handlers.onSearch({ search, searchBy: searchByTerm, filters: filtersFieldsObject });\r\n      setSearchByChanged(false);\r\n    }\r\n  };\r\n\r\n  const toggleMultiSelectOption = (field, value) => {\r\n    const fieldObj = filtersArray.find((f) => f.id === field);\r\n\r\n    if (field && value) {\r\n      const currentField = filtersFieldsObject?.[field] || [];\r\n      const isValueAlreadySelected = currentField.some((i) => i.id === value.id);\r\n      const newFilters = {\r\n        ...filtersFieldsObject,\r\n        [field]: isValueAlreadySelected ? currentField.filter((i) => i.id !== value.id) : [...currentField, value],\r\n      };\r\n\r\n      setFiltersFieldsObject(newFilters);\r\n\r\n      if (utils.generic.isFunction(fieldObj?.content?.props?.handlers?.toggleOption)) {\r\n        fieldObj.content.props.handlers.toggleOption(field, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectedDatePicker = (field, value) => {\r\n    const fieldObj = filtersArray.find((f) => f.id === field);\r\n    if (field && value) {\r\n      const newFilters = {\r\n        ...filtersFieldsObject,\r\n        [field]: value,\r\n      };\r\n      setFiltersFieldsObject(newFilters);\r\n      if (utils.generic.isFunction(fieldObj?.content?.props?.handlers?.toggelDatePicker)) {\r\n        fieldObj.content.props.handlers.toggelDatePicker(field, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleFilters = () => {\r\n    setFiltersExpanded(!filtersExpanded);\r\n    if (utils.generic.isFunction(handlers?.onFilterExpand)) {\r\n      handlers?.onFilterExpand(!filtersExpanded);\r\n    }\r\n  };\r\n\r\n  // when the filters have changed, we call the onFilter handler (to trigger API fetch)\r\n  const submitFilters = () => {\r\n    if (utils.generic.isFunction(handlers?.onFilter)) {\r\n      previousFilters.current = filtersFieldsObject;\r\n      handlers.onFilter({ search, filters: filtersFieldsObject });\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    const newFieldsObject = Object.keys(filtersFieldsObject).reduce((acc, key) => {\r\n      let returnObject = {};\r\n      returnObject = Array.isArray(filtersFieldsObject[key]) ? { ...acc, [key]: [] } : { ...acc, [key]: '' };\r\n      return returnObject;\r\n    }, {});\r\n\r\n    setFiltersFieldsObject(newFieldsObject);\r\n    previousFilters.current = newFieldsObject;\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    clearFilters();\r\n    if (utils.generic.isFunction(handlers?.onResetFilter)) {\r\n      handlers.onResetFilter();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clearFilterKey) clearFilters();\r\n  }, [clearFilterKey]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isFiltersModified = () => {\r\n    const previous = previousFilters.current;\r\n    const current = filtersFieldsObject;\r\n\r\n    return isEqual(\r\n      Object.entries(previous || {}).reduce((acc, [name, value]) => {\r\n        return { ...acc, [name]: sortBy(value, 'id') };\r\n      }, {}),\r\n      Object.entries(current).reduce((acc, [name, value]) => {\r\n        return { ...acc, [name]: sortBy(value, 'id') };\r\n      }, {})\r\n    );\r\n  };\r\n\r\n  const fields = filtersArray.map((field) => {\r\n    return {\r\n      ...field,\r\n      ...(field.type === 'multiSelect' && { value: filtersFieldsObject[field.id] }),\r\n      ...(field.type === 'multiSelectAsync' && { value: filtersFieldsObject[field.id] }),\r\n      ...(field.type === 'datepicker' && { value: filtersFieldsObject[field.id] }),\r\n      handlers: {\r\n        ...field.handlers,\r\n        ...field.content?.props?.handlers,\r\n        ...(field.type === 'multiSelect' && { toggleOption: toggleMultiSelectOption }),\r\n        ...(field.type === 'multiSelectAsync' && { toggleOption: toggleMultiSelectOption }),\r\n        ...(field.type === 'datepicker' && { toggelDatePicker: selectedDatePicker }),\r\n      },\r\n    };\r\n  });\r\n\r\n  const toggleColumns = (column) => {\r\n    handlers.onToggleColumn(column);\r\n  };\r\n\r\n  const toggleColumnsExpanded = () => {\r\n    setColumnsExpanded(!columnsExpanded);\r\n  };\r\n\r\n  const columnsFiltered = (columns) => {\r\n    if (utils.generic.isInvalidOrEmptyArray(columns)) return [];\r\n\r\n    // remove columns which should not be part of the flexi column list\r\n    return columns.filter((col) => {\r\n      return !col.menu;\r\n    });\r\n  };\r\n\r\n  // when the search form is submitted, we update the internal state which will trigger a useEffect re-render\r\n  const submitSearch = (queryTerm, queryByTerm) => {\r\n    setSearch(queryTerm);\r\n    if (queryByTerm) setSearchByChanged(true);\r\n  };\r\n\r\n  // resetKey is used to reset the <Search /> submit button which sometimes remains active\r\n  const resetSearch = () => {\r\n    setSearch('');\r\n    setSearchByChanged(false);\r\n    setResetKey(new Date().getTime());\r\n    if (utils.generic.isFunction(handlers?.onResetSearch)) {\r\n      handlers.onResetSearch();\r\n    }\r\n  };\r\n\r\n  const toggleAdvancedSearch = (isOpen) => {\r\n    setAdvancedSearchExpanded(typeof isOpen === 'boolean' ? isOpen : !advancedSearchExpanded);\r\n  };\r\n\r\n  return (\r\n    <TableFiltersView\r\n      {...props}\r\n      resetKey={resetKey}\r\n      search={searchAdvanced ? false : props.search}\r\n      searchQuery={search}\r\n      searchPlaceholder={searchPlaceholder}\r\n      searchByTerm={searchByTerm ? searchByTerm : !props?.searchBy ? '' : null}\r\n      searchAdvanced={searchAdvanced}\r\n      searchAdvancedExpanded={advancedSearchExpanded}\r\n      isFetchingFilters={isFetchingFilters}\r\n      filtersExpanded={filtersExpanded}\r\n      filtersSubmitDisabled={isFiltersModified()}\r\n      filtersArray={fields}\r\n      columnsArray={columnsFiltered(columnsArray)}\r\n      columnsExpanded={columnsExpanded}\r\n      handlers={{\r\n        toggleFilters,\r\n        resetFilters,\r\n        submitFilters,\r\n        toggleColumns,\r\n        toggleColumnsExpanded,\r\n        toggleAdvancedSearch,\r\n        submitSearch,\r\n        resetSearch,\r\n      }}\r\n    >\r\n      {utils.generic.isValidArray(fields, true)\r\n        ? fields.map((field) => {\r\n            return (\r\n              <PopoverFilter\r\n                key={field.id}\r\n                {...field}\r\n                disabled={\r\n                  field.disabled ||\r\n                  !field.content ||\r\n                  (field.type === 'multiSelect' && utils.generic.isInvalidOrEmptyArray(field.options)) ||\r\n                  (field.type === 'multiSelectAsync' && !field.content?.props?.handlers?.fetch)\r\n                }\r\n              />\r\n            );\r\n          })\r\n        : null}\r\n    </TableFiltersView>\r\n  );\r\n}\r\n\r\nexport default TableFilters;\r\n"]},"metadata":{},"sourceType":"module"}