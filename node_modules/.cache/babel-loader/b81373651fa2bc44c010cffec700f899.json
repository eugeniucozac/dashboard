{"ast":null,"code":"import \"core-js/modules/es.promise\";\nimport * as utils from 'utils';\nexport var getRefDataRoles = function getRefDataRoles(groupIds) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    if (!groupIds) return Promise.resolve([]);\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: 'user/refData/roles',\n      params: {\n        groupIds: groupIds\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getRolesSuccess(json.data));\n      return json.data;\n    })[\"catch\"](function (error) {\n      dispatch(getRolesError(error, {\n        file: 'stores/administration.actions.refData.getRoles'\n      }));\n      return error;\n    });\n  };\n};\nexport var getRolesSuccess = function getRolesSuccess(roles) {\n  return {\n    type: 'ADMINISTRATION_REF_DATA_ROLES',\n    payload: roles\n  };\n};\nexport var getRolesError = function getRolesError(error) {\n  return {\n    type: 'ADMINISTRATION_REF_DATA_ROLES_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/administration/administration.actions.refData.getRefDataRoles.js"],"names":["utils","getRefDataRoles","groupIds","dispatch","getState","auth","user","endpoint","config","vars","Promise","resolve","api","get","token","accessToken","authService","path","params","then","response","handleResponse","data","handleNewData","json","getRolesSuccess","error","getRolesError","file","roles","type","payload"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,QAAD;AAAA,SAAc,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAM/DA,QAAQ,EANuD;AAAA,QAEzDC,IAFyD,aAEjEC,IAFiE,CAEzDD,IAFyD;AAAA,QAIvDE,QAJuD,aAGjEC,MAHiE,CAI/DC,IAJ+D,CAIvDF,QAJuD;;AAQnE,QAAI,CAACL,QAAL,EAAe,OAAOQ,OAAO,CAACC,OAAR,CAAgB,EAAhB,CAAP;AAEf,WAAOX,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAET,IAAI,CAACU,WADT;AAEHR,MAAAA,QAAQ,EAAEA,QAAQ,CAACS,WAFhB;AAGHC,MAAAA,IAAI,EAAE,oBAHH;AAIHC,MAAAA,MAAM,EAAE;AAAEhB,QAAAA,QAAQ,EAAEA;AAAZ;AAJL,KADA,EAOJiB,IAPI,CAOC,UAACC,QAAD;AAAA,aAAcpB,KAAK,CAACY,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUtB,KAAK,CAACY,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,eAAe,CAACD,IAAI,CAACF,IAAN,CAAhB,CAAR;AACA,aAAOE,IAAI,CAACF,IAAZ;AACD,KAZI,WAaE,UAACI,KAAD,EAAW;AAChBvB,MAAAA,QAAQ,CACNwB,aAAa,CAACD,KAAD,EAAQ;AACnBE,QAAAA,IAAI,EAAE;AADa,OAAR,CADP,CAAR;AAKA,aAAOF,KAAP;AACD,KApBI,CAAP;AAqBD,GA/B8B;AAAA,CAAxB;AAiCP,OAAO,IAAMD,eAAe,GAAG,SAAlBA,eAAkB,CAACI,KAAD,EAAW;AACxC,SAAO;AACLC,IAAAA,IAAI,EAAE,+BADD;AAELC,IAAAA,OAAO,EAAEF;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMF,aAAa,GAAG,SAAhBA,aAAgB,CAACD,KAAD,EAAW;AACtC,SAAO;AACLI,IAAAA,IAAI,EAAE,qCADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\n\r\nexport const getRefDataRoles = (groupIds) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  if (!groupIds) return Promise.resolve([]);\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: 'user/refData/roles',\r\n      params: { groupIds: groupIds },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => utils.api.handleNewData(data))\r\n    .then((json) => {\r\n      dispatch(getRolesSuccess(json.data));\r\n      return json.data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        getRolesError(error, {\r\n          file: 'stores/administration.actions.refData.getRoles',\r\n        })\r\n      );\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const getRolesSuccess = (roles) => {\r\n  return {\r\n    type: 'ADMINISTRATION_REF_DATA_ROLES',\r\n    payload: roles,\r\n  };\r\n};\r\n\r\nexport const getRolesError = (error) => {\r\n  return {\r\n    type: 'ADMINISTRATION_REF_DATA_ROLES_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}