{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ChangePriority\\\\ChangePriority.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; //app\n\nimport { ChangePriorityView } from './ChangePriority.view';\nimport { getPriorityLevels, selectPriorities, selectClaimsAssignedToUsers, showModal, getUsersByOrg, resetClaimsAssignedToUsers, selectUserEmail, postSaveTaskProcessingAssignees } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nChangePriority.propTypes = {\n  task: PropTypes.array,\n  handlers: PropTypes.shape({\n    cancelHandler: PropTypes.func,\n    submitHandler: PropTypes.func\n  })\n};\nexport default function ChangePriority(_ref) {\n  _s();\n\n  var _selectAssignees$item,\n      _this = this;\n\n  var task = _ref.task,\n      handlers = _ref.handlers;\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities);\n  var selectAssignees = useSelector(selectClaimsAssignedToUsers);\n  var userEmail = useSelector(selectUserEmail);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCrossTeamAssignTo = _useState2[0],\n      setCrossTeamAssignTo = _useState2[1];\n\n  var firstTask = (task === null || task === void 0 ? void 0 : task.length) ? task[0] : {};\n  var assignedToUsers = selectAssignees === null || selectAssignees === void 0 ? void 0 : (_selectAssignees$item = selectAssignees.items) === null || _selectAssignees$item === void 0 ? void 0 : _selectAssignees$item.filter(function (user) {\n    return user.email !== userEmail;\n  });\n  var newTeam = (firstTask === null || firstTask === void 0 ? void 0 : firstTask.team) || constants.ORGANIZATIONS.mphasis.name;\n\n  var getTeamByLabel = function getTeamByLabel(label) {\n    var options = Object.values(constants.ORGANIZATIONS);\n    var team = options === null || options === void 0 ? void 0 : options.find(function (o) {\n      return o.label === label;\n    });\n    return team || null;\n  };\n\n  var fields = [{\n    name: 'priority',\n    type: 'autocompletemui',\n    options: priorities || [],\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().required(utils.string.t('validation.required')),\n    value: (priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref2) {\n      var description = _ref2.description;\n      return description === (firstTask === null || firstTask === void 0 ? void 0 : firstTask.priority);\n    })) || (priorities === null || priorities === void 0 ? void 0 : priorities[0])\n  }, {\n    name: 'team',\n    type: 'autocompletemui',\n    options: [_objectSpread({}, constants.ORGANIZATIONS.mphasis), _objectSpread({}, constants.ORGANIZATIONS.ardonagh)],\n    optionKey: 'id',\n    optionLabel: 'label',\n    value: getTeamByLabel(firstTask === null || firstTask === void 0 ? void 0 : firstTask.team),\n    validation: Yup.object().required(utils.string.t('validation.required')),\n    callback: function callback(event, value) {\n      var _value$name, _firstTask$team;\n\n      setCrossTeamAssignTo((value === null || value === void 0 ? void 0 : (_value$name = value.name) === null || _value$name === void 0 ? void 0 : _value$name.toLowerCase()) !== (firstTask === null || firstTask === void 0 ? void 0 : (_firstTask$team = firstTask.team) === null || _firstTask$team === void 0 ? void 0 : _firstTask$team.toLowerCase()));\n    }\n  }, {\n    name: 'sendTo',\n    type: 'autocompletemui',\n    options: !isCrossTeamAssignTo ? assignedToUsers : [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    validation: !isCrossTeamAssignTo && Yup.object().nullable().required(utils.string.t('claims.processing.bulkAssign.validation.chooseAssignee'))\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 500\n      },\n      multiline: true,\n      rows: 3,\n      rowsMax: 5\n    },\n    validation: isCrossTeamAssignTo && Yup.string().min(1, utils.string.t('validation.required')).max(500, utils.string.t('validation.string.max')).required(utils.string.t('validation.required'))\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState; // On click of cancel button\n\n\n  var launchConfirmModal = function launchConfirmModal() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('navigation.alert'),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h5\",\n            color: \"secondary\",\n            children: utils.string.t('claims.notes.notifications.alertPopup')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 121,\n            columnNumber: 15\n          }, _this),\n          submitHandler: function submitHandler() {\n            handlers.cancelHandler();\n          },\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      launchConfirmModal();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.set'),\n    handler: function handler(values) {\n      handleChangePriority(values);\n    }\n  }];\n\n  var handleChangePriority = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              data = task === null || task === void 0 ? void 0 : task.map(function (ele) {\n                var _values$sendTo, _values$priority, _values$team;\n\n                return {\n                  assignTo: values === null || values === void 0 ? void 0 : (_values$sendTo = values.sendTo) === null || _values$sendTo === void 0 ? void 0 : _values$sendTo.email,\n                  caseIncidentID: ele.caseIncidentID,\n                  notesDescription: values === null || values === void 0 ? void 0 : values.notes,\n                  priority: values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id,\n                  processId: ele.processId,\n                  taskId: ele.taskId,\n                  team: values === null || values === void 0 ? void 0 : (_values$team = values.team) === null || _values$team === void 0 ? void 0 : _values$team.label\n                };\n              });\n              _context.next = 3;\n              return dispatch(postSaveTaskProcessingAssignees(data));\n\n            case 3:\n              if (handlers.submitHandler) {\n                handlers.submitHandler();\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleChangePriority(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(priorities)) {\n      dispatch(getPriorityLevels());\n    }\n\n    dispatch(resetClaimsAssignedToUsers());\n    dispatch(getUsersByOrg(newTeam, task, 'addAssignee'));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!(priorities === null || priorities === void 0 ? void 0 : priorities.length)) return null;\n  return /*#__PURE__*/_jsxDEV(ChangePriorityView, {\n    actions: actions,\n    fields: fields,\n    control: control,\n    reset: reset,\n    handleSubmit: handleSubmit,\n    formState: formState,\n    errors: errors\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ChangePriority, \"Hn1a4zFoWzF8aGhAm/4v1iyKYxQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = ChangePriority;\n\nvar _c;\n\n$RefreshReg$(_c, \"ChangePriority\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ChangePriority/ChangePriority.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","useForm","yupResolver","ChangePriorityView","getPriorityLevels","selectPriorities","selectClaimsAssignedToUsers","showModal","getUsersByOrg","resetClaimsAssignedToUsers","selectUserEmail","postSaveTaskProcessingAssignees","utils","constants","Typography","ChangePriority","propTypes","task","array","handlers","shape","cancelHandler","func","submitHandler","dispatch","priorities","selectAssignees","userEmail","isCrossTeamAssignTo","setCrossTeamAssignTo","firstTask","length","assignedToUsers","items","filter","user","email","newTeam","team","ORGANIZATIONS","mphasis","name","getTeamByLabel","label","options","Object","values","find","o","fields","type","optionKey","optionLabel","validation","object","required","string","t","value","description","priority","ardonagh","callback","event","toLowerCase","nullable","muiComponentProps","inputProps","maxLength","multiline","rows","rowsMax","min","max","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","launchConfirmModal","component","props","title","fullWidth","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","handleClose","actions","handler","handleChangePriority","data","map","ele","assignTo","sendTo","caseIncidentID","notesDescription","notes","id","processId","taskId","generic","isInvalidOrEmptyArray"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n//app\r\nimport { ChangePriorityView } from './ChangePriority.view';\r\nimport {\r\n  getPriorityLevels,\r\n  selectPriorities,\r\n  selectClaimsAssignedToUsers,\r\n  showModal,\r\n  getUsersByOrg,\r\n  resetClaimsAssignedToUsers,\r\n  selectUserEmail,\r\n  postSaveTaskProcessingAssignees,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Typography } from '@material-ui/core';\r\n\r\nChangePriority.propTypes = {\r\n  task: PropTypes.array,\r\n  handlers: PropTypes.shape({\r\n    cancelHandler: PropTypes.func,\r\n    submitHandler: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport default function ChangePriority({ task, handlers }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const priorities = useSelector(selectPriorities);\r\n  const selectAssignees = useSelector(selectClaimsAssignedToUsers);\r\n  const userEmail = useSelector(selectUserEmail);\r\n  const [isCrossTeamAssignTo, setCrossTeamAssignTo] = useState(false);\r\n  const firstTask = task?.length ? task[0] : {};\r\n  const assignedToUsers = selectAssignees?.items?.filter((user) => user.email !== userEmail);\r\n  const newTeam = firstTask?.team || constants.ORGANIZATIONS.mphasis.name;\r\n\r\n  const getTeamByLabel = (label) => {\r\n    const options = Object.values(constants.ORGANIZATIONS);\r\n    const team = options?.find((o) => o.label === label);\r\n    return team || null;\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n      value: priorities?.find(({ description }) => description === firstTask?.priority) || priorities?.[0],\r\n    },\r\n    {\r\n      name: 'team',\r\n      type: 'autocompletemui',\r\n      options: [{ ...constants.ORGANIZATIONS.mphasis }, { ...constants.ORGANIZATIONS.ardonagh }],\r\n      optionKey: 'id',\r\n      optionLabel: 'label',\r\n      value: getTeamByLabel(firstTask?.team),\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n      callback: (event, value) => {\r\n        setCrossTeamAssignTo(value?.name?.toLowerCase() !== firstTask?.team?.toLowerCase());\r\n      },\r\n    },\r\n    {\r\n      name: 'sendTo',\r\n      type: 'autocompletemui',\r\n      options: !isCrossTeamAssignTo ? assignedToUsers : [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      validation:\r\n        !isCrossTeamAssignTo && Yup.object().nullable().required(utils.string.t('claims.processing.bulkAssign.validation.chooseAssignee')),\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 500 },\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 5,\r\n      },\r\n      validation:\r\n        isCrossTeamAssignTo &&\r\n        Yup.string()\r\n          .min(1, utils.string.t('validation.required'))\r\n          .max(500, utils.string.t('validation.string.max'))\r\n          .required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  // On click of cancel button\r\n  const launchConfirmModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('navigation.alert'),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: (\r\n              <Typography variant=\"h5\" color=\"secondary\">\r\n                {utils.string.t('claims.notes.notifications.alertPopup')}\r\n              </Typography>\r\n            ),\r\n            submitHandler: () => {\r\n              handlers.cancelHandler();\r\n            },\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        launchConfirmModal();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.set'),\r\n      handler: (values) => {\r\n        handleChangePriority(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleChangePriority = async (values) => {\r\n    const data = task?.map((ele) => {\r\n      return {\r\n        assignTo: values?.sendTo?.email,\r\n        caseIncidentID: ele.caseIncidentID,\r\n        notesDescription: values?.notes,\r\n        priority: values?.priority?.id,\r\n        processId: ele.processId,\r\n        taskId: ele.taskId,\r\n        team: values?.team?.label,\r\n      };\r\n    });\r\n    await dispatch(postSaveTaskProcessingAssignees(data));\r\n    if (handlers.submitHandler) {\r\n      handlers.submitHandler();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isInvalidOrEmptyArray(priorities)) {\r\n      dispatch(getPriorityLevels());\r\n    }\r\n    dispatch(resetClaimsAssignedToUsers());\r\n    dispatch(getUsersByOrg(newTeam, task, 'addAssignee'));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (!priorities?.length) return null;\r\n\r\n  return (\r\n    <ChangePriorityView\r\n      actions={actions}\r\n      fields={fields}\r\n      control={control}\r\n      reset={reset}\r\n      handleSubmit={handleSubmit}\r\n      formState={formState}\r\n      errors={errors}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}