{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ModellingTable\\\\ModellingTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport toNumber from 'lodash/toNumber'; // app\n\nimport { ModellingTableView } from './ModellingTable.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nModellingTable.propTypes = {\n  popoverActions: PropTypes.array,\n  modellingList: PropTypes.array.isRequired,\n  handleDoubleClickRow: PropTypes.func,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  })\n};\nModellingTable.defaultProps = {\n  popoverActions: []\n};\nexport function ModellingTable(_ref) {\n  _s();\n\n  var popoverActions = _ref.popoverActions,\n      modellingList = _ref.modellingList,\n      sort = _ref.sort;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedId = _useState2[0],\n      setSelectedId = _useState2[1];\n\n  var document = useSelector(function (state) {\n    return state.document.selected;\n  });\n  useEffect(function () {\n    setSelectedId(toNumber(document.modellingId));\n  }, [document]);\n  var cols = [{\n    id: 'id',\n    label: utils.string.t('placement.modelling.id')\n  }, {\n    id: 'insured',\n    label: utils.string.t('placement.modelling.insured')\n  }, {\n    id: 'dueDate',\n    label: utils.string.t('placement.modelling.dueDate')\n  }, {\n    id: 'notes',\n    label: utils.string.t('placement.modelling.notes')\n  }, {\n    id: 'status',\n    label: utils.string.t('app.status')\n  }].concat(_toConsumableArray(popoverActions.length > 0 ? [{\n    id: 'actions'\n  }] : []));\n\n  var handleClickRow = function handleClickRow(id) {\n    setSelectedId(id);\n  };\n\n  return /*#__PURE__*/_jsxDEV(ModellingTableView, {\n    modellingList: modellingList,\n    sort: sort,\n    selectedId: selectedId,\n    handleClickRow: handleClickRow,\n    cols: cols,\n    popoverActions: popoverActions\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 47,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ModellingTable, \"nzeKiBwcL6FCZDaiIIUIUYoPbQE=\", false, function () {\n  return [useSelector];\n});\n\n_c = ModellingTable;\nModellingTable.displayName = \"ModellingTable\";\nModellingTable.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ModellingTable\",\n  \"props\": {\n    \"popoverActions\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"modellingList\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleDoubleClickRow\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"by\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"type\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"direction\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default ModellingTable;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ModellingTable\\\\ModellingTable.js\"] = {\n    name: \"ModellingTable\",\n    docgenInfo: ModellingTable.__docgenInfo,\n    path: \"src\\\\modules\\\\ModellingTable\\\\ModellingTable.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ModellingTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ModellingTable/ModellingTable.js"],"names":["React","useState","useEffect","useSelector","PropTypes","toNumber","ModellingTableView","utils","ModellingTable","propTypes","popoverActions","array","modellingList","isRequired","handleDoubleClickRow","func","sort","shape","by","string","type","direction","defaultProps","selectedId","setSelectedId","document","state","selected","modellingId","cols","id","label","t","length","handleClickRow"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport toNumber from 'lodash/toNumber';\r\n\r\n// app\r\nimport { ModellingTableView } from './ModellingTable.view';\r\nimport * as utils from 'utils';\r\n\r\nModellingTable.propTypes = {\r\n  popoverActions: PropTypes.array,\r\n  modellingList: PropTypes.array.isRequired,\r\n  handleDoubleClickRow: PropTypes.func,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nModellingTable.defaultProps = {\r\n  popoverActions: [],\r\n};\r\n\r\nexport function ModellingTable({ popoverActions, modellingList, sort }) {\r\n  const [selectedId, setSelectedId] = useState();\r\n  const document = useSelector((state) => state.document.selected);\r\n\r\n  useEffect(() => {\r\n    setSelectedId(toNumber(document.modellingId));\r\n  }, [document]);\r\n\r\n  const cols = [\r\n    { id: 'id', label: utils.string.t('placement.modelling.id') },\r\n    { id: 'insured', label: utils.string.t('placement.modelling.insured') },\r\n    { id: 'dueDate', label: utils.string.t('placement.modelling.dueDate') },\r\n    { id: 'notes', label: utils.string.t('placement.modelling.notes') },\r\n    { id: 'status', label: utils.string.t('app.status') },\r\n    ...(popoverActions.length > 0 ? [{ id: 'actions' }] : []),\r\n  ];\r\n\r\n  const handleClickRow = (id) => {\r\n    setSelectedId(id);\r\n  };\r\n\r\n  return (\r\n    <ModellingTableView\r\n      modellingList={modellingList}\r\n      sort={sort}\r\n      selectedId={selectedId}\r\n      handleClickRow={handleClickRow}\r\n      cols={cols}\r\n      popoverActions={popoverActions}\r\n    />\r\n  );\r\n}\r\n\r\nexport default ModellingTable;\r\n"]},"metadata":{},"sourceType":"module"}