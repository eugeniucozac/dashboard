{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport { Empty, Overflow, TableHead, Pagination, TableCell, Skeleton } from 'components';\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { useSort } from 'hooks';\nimport * as utils from 'utils';\nimport { useSelector } from 'react-redux';\nimport { selectClaimsTabData } from 'stores'; // mui\n\nimport { Table, TableBody, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableView.prototype = {\n  claims: PropTypes.array.isRequired,\n  claimsSelected: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.shape({\n      handleChangePage: PropTypes.func.isRequired,\n      handleChangeRowsPerPage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  handlers: PropTypes.shape({\n    bulkAssignClaims: PropTypes.func.isRequired,\n    clickClaim: PropTypes.func.isRequired,\n    handleCreateAdHocTaskModal: PropTypes.func.isRequired,\n    handleCreateRFIModal: PropTypes.func.isRequired,\n    handleReassignClaim: PropTypes.func.isRequired,\n    handleReturnClaimToTeamQueue: PropTypes.func.isRequired,\n    handleSetClaimPriority: PropTypes.func.isRequired,\n    handleReOpenClaim: PropTypes.func.isRequired,\n    selectClaim: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableView(_ref) {\n  _s();\n\n  var _claimsTabData$tableD,\n      _this = this;\n\n  var claims = _ref.claims,\n      claimsSelected = _ref.claimsSelected,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers;\n\n  var _useSort = useSort(colsArr, sortObj, handlers.sort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var hasNotSearchClaims = !claims;\n  var hasClaims = utils.generic.isValidArray(claims, true);\n  var claimsTabData = useSelector(selectClaimsTabData);\n  var isClaimsLoading = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD = claimsTabData.tableDetails) === null || _claimsTabData$tableD === void 0 ? void 0 : _claimsTabData$tableD.isloadingTable;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-tab-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 58,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"claims-list-body\",\n          children: [isClaimsLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: cols.length,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 40,\n                animation: \"wave\",\n                displayNumber: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 15\n          }, this), hasClaims && !isClaimsLoading && claims.map(function (claim) {\n            return /*#__PURE__*/_jsxDEV(ClaimsTabTableRow, {\n              claim: claim,\n              isSelected: Boolean(claimsSelected.map(function (c) {\n                return c.processID;\n              }).includes(claim.processID)),\n              columnProps: columnProps,\n              handlers: {\n                clickClaim: handlers.clickClaim,\n                createRFI: handlers.handleCreateRFIModal,\n                createTask: handlers.handleCreateAdHocTaskModal,\n                selectClaim: handlers.selectClaim,\n                setClaimPriority: handlers.handleSetClaimPriority,\n                reAssign: handlers.handleReassignClaim,\n                returnClaimToTeamQueue: handlers.handleReturnClaimToTeamQueue,\n                reOpenClaim: handlers.handleReOpenClaim\n              }\n            }, claim.processID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), hasNotSearchClaims ? /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.searchLossAndClaims'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 75\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this) : hasClaims ? /*#__PURE__*/_jsxDEV(Pagination, {\n      page: get(pagination, 'obj.page'),\n      count: get(pagination, 'obj.rowsTotal'),\n      rowsPerPage: get(pagination, 'obj.rowsPerPage'),\n      onChangePage: get(pagination, 'handlers.handleChangePage'),\n      onChangeRowsPerPage: get(pagination, 'handlers.handleChangeRowsPerPage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : !isClaimsLoading && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 68\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTabTableView, \"IE0OJ0lFFRbnsf0nw9ObZ+zEtwI=\", false, function () {\n  return [useSort, useSelector];\n});\n\n_c = ClaimsTabTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTable.view.js"],"names":["React","PropTypes","get","Empty","Overflow","TableHead","Pagination","TableCell","Skeleton","ClaimsTabTableRow","useSort","utils","useSelector","selectClaimsTabData","Table","TableBody","Box","TableRow","ClaimsTabTableView","prototype","claims","array","isRequired","claimsSelected","cols","columnProps","func","sort","object","pagination","shape","obj","handlers","handleChangePage","handleChangeRowsPerPage","bulkAssignClaims","clickClaim","handleCreateAdHocTaskModal","handleCreateRFIModal","handleReassignClaim","handleReturnClaimToTeamQueue","handleSetClaimPriority","handleReOpenClaim","selectClaim","colsArr","sortObj","hasNotSearchClaims","hasClaims","generic","isValidArray","claimsTabData","isClaimsLoading","tableDetails","isloadingTable","length","map","claim","Boolean","c","processID","includes","createRFI","createTask","setClaimPriority","reAssign","returnClaimToTeamQueue","reOpenClaim","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { Empty, Overflow, TableHead, Pagination, TableCell, Skeleton } from 'components';\r\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectClaimsTabData } from 'stores';\r\n\r\n\r\n// mui\r\nimport { Table, TableBody, Box, TableRow } from '@material-ui/core';\r\n\r\nClaimsTabTableView.prototype = {\r\n  claims: PropTypes.array.isRequired,\r\n  claimsSelected: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.shape({\r\n      handleChangePage: PropTypes.func.isRequired,\r\n      handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    bulkAssignClaims: PropTypes.func.isRequired,\r\n    clickClaim: PropTypes.func.isRequired,\r\n    handleCreateAdHocTaskModal: PropTypes.func.isRequired,\r\n    handleCreateRFIModal: PropTypes.func.isRequired,\r\n    handleReassignClaim: PropTypes.func.isRequired,\r\n    handleReturnClaimToTeamQueue: PropTypes.func.isRequired,\r\n    handleSetClaimPriority: PropTypes.func.isRequired,\r\n    handleReOpenClaim: PropTypes.func.isRequired,\r\n    selectClaim: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableView({ claims, claimsSelected, cols: colsArr, columnProps, sort: sortObj, pagination, handlers }) {\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers.sort);\r\n\r\n  const hasNotSearchClaims = !claims;\r\n  const hasClaims = utils.generic.isValidArray(claims, true);\r\n\r\n  const claimsTabData = useSelector(selectClaimsTabData);\r\n  const isClaimsLoading = claimsTabData?.tableDetails?.isloadingTable;\r\n\r\n  return (\r\n    <Box data-testid=\"claims-tab-table\">\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody data-testid=\"claims-list-body\">\r\n            {isClaimsLoading && \r\n              <TableRow>\r\n                <TableCell colSpan={cols.length}>\r\n                  <Skeleton height={40} animation=\"wave\" displayNumber={10} />\r\n                </TableCell>\r\n              </TableRow>\r\n            }  \r\n            {hasClaims && !isClaimsLoading &&\r\n              claims.map((claim) => {\r\n                return (\r\n                  <ClaimsTabTableRow\r\n                    key={claim.processID}\r\n                    claim={claim}\r\n                    isSelected={Boolean(claimsSelected.map((c) => c.processID).includes(claim.processID))}\r\n                    columnProps={columnProps}\r\n                    handlers={{\r\n                      clickClaim: handlers.clickClaim,\r\n                      createRFI: handlers.handleCreateRFIModal,\r\n                      createTask: handlers.handleCreateAdHocTaskModal,\r\n                      selectClaim: handlers.selectClaim,\r\n                      setClaimPriority: handlers.handleSetClaimPriority,\r\n                      reAssign: handlers.handleReassignClaim,\r\n                      returnClaimToTeamQueue: handlers.handleReturnClaimToTeamQueue,\r\n                      reOpenClaim: handlers.handleReOpenClaim,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {hasNotSearchClaims ? (\r\n        <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n      ) : hasClaims ? (\r\n        <Pagination\r\n          page={get(pagination, 'obj.page')}\r\n          count={get(pagination, 'obj.rowsTotal')}\r\n          rowsPerPage={get(pagination, 'obj.rowsPerPage')}\r\n          onChangePage={get(pagination, 'handlers.handleChangePage')}\r\n          onChangeRowsPerPage={get(pagination, 'handlers.handleChangeRowsPerPage')}\r\n        />\r\n      ) :\r\n      !isClaimsLoading &&\r\n      (\r\n        <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n      )\r\n      }\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}