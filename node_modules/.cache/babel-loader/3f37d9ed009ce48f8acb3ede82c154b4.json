{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getClaimDetails = function getClaimDetails(params) {\n  return function (dispatch, getState) {\n    var _params$viewLoader;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimDetails'\n    };\n    var xbPolicyId = get(claims, 'policyData.xbPolicyID') || '';\n    var xbInstanceId = get(claims, 'policyData.xbInstanceID') || '';\n    var lossDetailsId = get(claims, 'lossInformation.lossDetailID') || '';\n    var viewLoader = (_params$viewLoader = params === null || params === void 0 ? void 0 : params.viewLoader) !== null && _params$viewLoader !== void 0 ? _params$viewLoader : false;\n    dispatch(getClaimDetailsRequest());\n    viewLoader && dispatch(addLoader('getClaimDetails'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/new-claim?xbPolicyID=\".concat(xbPolicyId, \"&xbInstanceID=\").concat(xbInstanceId, \"&lossDetailsId=\").concat(lossDetailsId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getClaimDetailsSuccess(data.data));\n      viewLoader && dispatch(removeLoader('getClaimDetails'));\n      return data;\n    }).catch(function (err) {\n      dispatch(getClaimDetailsFailure(err, defaultError));\n      viewLoader && dispatch(removeLoader('getClaimDetails'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getClaimDetailsRequest = function getClaimDetailsRequest(data) {\n  return {\n    type: 'CLAIMS_DETAILS_REQUEST',\n    payload: data\n  };\n};\nexport var getClaimDetailsSuccess = function getClaimDetailsSuccess(data) {\n  return {\n    type: 'CLAIMS_DETAILS_SUCCESS',\n    payload: data\n  };\n};\nexport var getClaimDetailsFailure = function getClaimDetailsFailure(data) {\n  return {\n    type: 'CLAIMS_DETAILS_ERROR',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimDetails.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getClaimDetails","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","xbPolicyId","xbInstanceId","lossDetailsId","viewLoader","getClaimDetailsRequest","api","token","accessToken","claimService","path","then","response","handleResponse","data","getClaimDetailsSuccess","catch","err","getClaimDetailsFailure","handleUnauthorized","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA;;AACjE;AADiE,oBAEAA,QAAQ,EAFR;AAAA,QAEjDC,IAFiD,aAEzDC,IAFyD,CAEjDD,IAFiD;AAAA,QAEvBE,QAFuB,aAEzCC,MAFyC,CAE/BC,IAF+B,CAEvBF,QAFuB;AAAA,QAEVG,MAFU,aAEVA,MAFU;;AAIjE,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,UAAU,GAAGb,GAAG,CAACU,MAAD,EAAS,uBAAT,CAAH,IAAwC,EAA3D;AACA,QAAMI,YAAY,GAAGd,GAAG,CAACU,MAAD,EAAS,yBAAT,CAAH,IAA0C,EAA/D;AACA,QAAMK,aAAa,GAAGf,GAAG,CAACU,MAAD,EAAS,8BAAT,CAAH,IAA+C,EAArE;AACA,QAAMM,UAAU,yBAAGd,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEc,UAAX,mEAAyB,KAAzC;AAEAb,IAAAA,QAAQ,CAACc,sBAAsB,EAAvB,CAAR;AACAD,IAAAA,UAAU,IAAIb,QAAQ,CAACN,SAAS,CAAC,iBAAD,CAAV,CAAtB;AAEA,WAAOE,KAAK,CAACmB,GAAN,CACJlB,GADI,CACA;AACHmB,MAAAA,KAAK,EAAEd,IAAI,CAACe,WADT;AAEHb,MAAAA,QAAQ,EAAEA,QAAQ,CAACc,YAFhB;AAGHC,MAAAA,IAAI,iDAA0CT,UAA1C,2BAAqEC,YAArE,4BAAmGC,aAAnG;AAHD,KADA,EAMJQ,IANI,CAMC,UAACC,QAAD;AAAA,aAAczB,KAAK,CAACmB,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,sBAAsB,CAACD,IAAI,CAACA,IAAN,CAAvB,CAAR;AACAV,MAAAA,UAAU,IAAIb,QAAQ,CAACL,YAAY,CAAC,iBAAD,CAAb,CAAtB;AACA,aAAO4B,IAAP;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACd1B,MAAAA,QAAQ,CAAC2B,sBAAsB,CAACD,GAAD,EAAMlB,YAAN,CAAvB,CAAR;AACAK,MAAAA,UAAU,IAAIb,QAAQ,CAACL,YAAY,CAAC,iBAAD,CAAb,CAAtB;AACAC,MAAAA,KAAK,CAACmB,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkC1B,QAAlC,EAA4CP,UAA5C;AACA,aAAOiC,GAAP;AACD,KAjBI,CAAP;AAkBD,GAlC8B;AAAA,CAAxB;AAoCP,OAAO,IAAMZ,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACS,IAAD,EAAU;AAC9C,SAAO;AACLM,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACD,IAAD,EAAU;AAC9C,SAAO;AACLM,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACJ,IAAD,EAAU;AAC9C,SAAO;AACLM,IAAAA,IAAI,EAAE,sBADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getClaimDetails = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}, claims} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getClaimDetails',\r\n  };\r\n\r\n  const xbPolicyId = get(claims, 'policyData.xbPolicyID') || '';\r\n  const xbInstanceId = get(claims, 'policyData.xbInstanceID') || '';\r\n  const lossDetailsId = get(claims, 'lossInformation.lossDetailID') || '';\r\n  const viewLoader = params?.viewLoader ?? false;\r\n\r\n  dispatch(getClaimDetailsRequest());\r\n  viewLoader && dispatch(addLoader('getClaimDetails'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/new-claim?xbPolicyID=${xbPolicyId}&xbInstanceID=${xbInstanceId}&lossDetailsId=${lossDetailsId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getClaimDetailsSuccess(data.data));\r\n      viewLoader && dispatch(removeLoader('getClaimDetails'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getClaimDetailsFailure(err, defaultError));\r\n      viewLoader && dispatch(removeLoader('getClaimDetails'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getClaimDetailsRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getClaimDetailsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getClaimDetailsFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_ERROR',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}