{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsAuthorisation\\\\ProcessingInstructionsAuthorisation.view.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\n// react\nimport React, { forwardRef } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types';\nimport config from 'config'; // app\n\nimport styles from './ProcessingInstructionsAuthorisation.styles';\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\nimport { AccessControl, Button, FormSelect, FormCheckbox, FormContainer, FormFields, FormGrid, SaveBar, PreventNavigation } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Typography, Divider } from '@material-ui/core';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\nimport BlockIcon from '@material-ui/icons/Block';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProcessingInstructionsAuthorisationView = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  var _formState$dirtyField, _formState$dirtyField2, _instruction$notes, _instruction$details;\n\n  _s();\n\n  var instruction = _ref.instruction,\n      fields = _ref.fields,\n      defaultValues = _ref.defaultValues,\n      isReadyToSubmit = _ref.isReadyToSubmit,\n      isSubmittedAuthorisedSignatory = _ref.isSubmittedAuthorisedSignatory,\n      isReadOnly = _ref.isReadOnly,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles)();\n  var classesParent = makeStyles(stylesParent)();\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var updatedDate = instruction === null || instruction === void 0 ? void 0 : instruction.updatedDate;\n  var submittedDate = instruction === null || instruction === void 0 ? void 0 : instruction.submittedDate;\n  var reopenedDate = instruction === null || instruction === void 0 ? void 0 : instruction.reopenedDate;\n  var submittedStatus = (instruction === null || instruction === void 0 ? void 0 : instruction.statusId) === constants.PI_STATUS_SUBMITTED_PROCESSING;\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      formState = _useForm.formState;\n\n  var formValues = watch();\n  var isPageEdited = (formState === null || formState === void 0 ? void 0 : (_formState$dirtyField = formState.dirtyFields) === null || _formState$dirtyField === void 0 ? void 0 : _formState$dirtyField.frontEndContact) || (formState === null || formState === void 0 ? void 0 : (_formState$dirtyField2 = formState.dirtyFields) === null || _formState$dirtyField2 === void 0 ? void 0 : _formState$dirtyField2.authorisedSignatory) ? true : false;\n  var isReady = !isPageEdited && isReadyToSubmit && (formValues === null || formValues === void 0 ? void 0 : formValues.authorisedSignatory) && (formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContact);\n  var gridProps = {\n    xs: 12,\n    sm: 6\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"processing-instructions-authorisation\",\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-addUser\",\n      ref: ref,\n      values: formValues,\n      resetFunc: reset,\n      nestedClasses: {\n        root: classes.root\n      },\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n            item: true\n          }, gridProps), {}, {\n            children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'frontEndContact', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 17\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 56,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n            item: true\n          }, gridProps), {}, {\n            children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'authorisedSignatory', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 60,\n              columnNumber: 17\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 55,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(AccessControl, {\n          feature: \"processingInstructions.processingInstructions\",\n          permissions: ['create', 'update'],\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n              item: true\n            }, gridProps), {}, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mt: 1,\n                mb: 5,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread({}, utils.form.getFieldProps(fields, 'readyToSubmit')), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 67,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, _this)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, _this), isSubmittedAuthorisedSignatory && isReadOnly && /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n              item: true\n            }, gridProps), {}, {\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mt: 1,\n                mb: 5,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  text: utils.string.t('processingInstructions.authorisations.resetAll'),\n                  onClick: handlers.resetAll,\n                  color: \"primary\",\n                  size: \"small\",\n                  variant: \"outlined\",\n                  nestedClasses: {\n                    btn: classesParent.button\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 73,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 21\n              }, _this)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n        item: true\n      }, gridProps), {}, {\n        children: (instruction === null || instruction === void 0 ? void 0 : (_instruction$notes = instruction.notes) === null || _instruction$notes === void 0 ? void 0 : _instruction$notes.length) > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          \"data-testid\": \"notes\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('processingInstructions.authorisations.notes.heading')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 17\n          }, _this), instruction.notes.map(function (note, idx) {\n            var _instruction$notes2;\n\n            return /*#__PURE__*/_jsxDEV(Box, {\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                py: 2,\n                children: [/*#__PURE__*/_jsxDEV(Box, {\n                  mb: 1,\n                  display: \"flex\",\n                  alignItems: \"center\",\n                  children: [/*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.noteStatus,\n                    children: [utils.string.t('app.status'), \": \", note.type]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 102,\n                    columnNumber: 27\n                  }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    ml: 0.5,\n                    children: [note.type === 'Approved' && /*#__PURE__*/_jsxDEV(CheckCircleIcon, {\n                      className: classes.approved\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 106,\n                      columnNumber: 58\n                    }, _this), note.type === 'Rejected' && /*#__PURE__*/_jsxDEV(BlockIcon, {\n                      className: classes.rejected\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 107,\n                      columnNumber: 58\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 105,\n                    columnNumber: 27\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 101,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(Box, {\n                  pb: 2,\n                  children: /*#__PURE__*/_jsxDEV(Typography, {\n                    className: classes.notes,\n                    children: note.notes\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 111,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 25\n                }, _this), /*#__PURE__*/_jsxDEV(Typography, {\n                  className: classes.noteUpdatedBy,\n                  children: utils.string.t('processingInstructions.authorisations.notes.updatedByInfo', {\n                    user: note.userName,\n                    date: utils.string.t('format.date', {\n                      value: {\n                        date: note.createdDate,\n                        format: 'D MMM YYYY, h:mm A'\n                      }\n                    })\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 113,\n                  columnNumber: 25\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 23\n              }, _this), idx !== (instruction === null || instruction === void 0 ? void 0 : (_instruction$notes2 = instruction.notes) === null || _instruction$notes2 === void 0 ? void 0 : _instruction$notes2.length) - 1 && /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 121,\n                columnNumber: 66\n              }, _this)]\n            }, note.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 21\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 15\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n        item: true\n      }, gridProps), {}, {\n        children: submittedStatus && reopenedDate && /*#__PURE__*/_jsxDEV(Box, {\n          \"data-testid\": \"updated-pi-details\",\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.heading')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 131,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 135,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            py: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pb: 2.5,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.noteStatus,\n                children: utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.updatedBy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pb: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: instruction.updatedByName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.noteUpdatedBy,\n                children: utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.submittedAuthorisedSignatoryText', {\n                  date: utils.string.t('format.date', {\n                    value: {\n                      date: updatedDate,\n                      format: 'D MMM YYYY, h:mm A'\n                    }\n                  })\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 137,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 158,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            py: 2,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pb: 2.5,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.noteStatus,\n                children: utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.approvedBy')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pb: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                children: instruction === null || instruction === void 0 ? void 0 : (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.authorisedSignatoryName\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.noteUpdatedBy,\n                children: utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.approvedAuthorisedSignatoryText', {\n                  date: utils.string.t('format.date', {\n                    value: {\n                      date: submittedDate,\n                      format: 'D MMM YYYY, h:mm A'\n                    }\n                  })\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 171,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 170,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 160,\n            columnNumber: 17\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 130,\n          columnNumber: 15\n        }, _this)\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(SaveBar, {\n      show: true,\n      nestedClasses: {\n        root: classesParent.saveBar\n      },\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.back'),\n            onClick: handlers.back,\n            disabled: isPageEdited,\n            size: \"small\",\n            color: \"primary\",\n            variant: \"outlined\",\n            icon: NavigateBeforeIcon,\n            iconPosition: \"left\",\n            nestedClasses: {\n              btn: classesParent.button\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 188,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"right\",\n          children: [isPageEdited && !isReady && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.cancel'),\n              onClick: handlers.cancel,\n              color: \"primary\",\n              size: \"small\",\n              variant: \"text\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 204,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.save'),\n              onClick: handlers.save,\n              color: \"secondary\",\n              variant: \"outlined\",\n              size: \"small\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(AccessControl, {\n            feature: \"processingInstructions.processingInstructions\",\n            permissions: ['create', 'update'],\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('processingInstructions.authorisations.submit'),\n              onClick: handlers.submit,\n              disabled: !isReady || isReadOnly,\n              color: \"primary\",\n              size: \"small\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 222,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(AccessControl, {\n            feature: \"processingInstructions.approveRejectProcessingInstruction\",\n            permissions: ['create', 'update'],\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Button, {\n                text: utils.string.t('app.reject'),\n                onClick: handlers.reject,\n                color: \"primary\",\n                size: \"small\",\n                disabled: !isSubmittedAuthorisedSignatory,\n                nestedClasses: {\n                  btn: classesParent.button\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 234,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(Button, {\n                text: utils.string.t('app.approve'),\n                onClick: handlers.approve,\n                color: \"primary\",\n                size: \"small\",\n                disabled: !isSubmittedAuthorisedSignatory,\n                nestedClasses: {\n                  btn: classesParent.button\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 242,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 232,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 11\n      }, _this), /*#__PURE__*/_jsxDEV(PreventNavigation, {\n        dirty: isPageEdited,\n        allowedUrls: [\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/\")]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 254,\n        columnNumber: 11\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 186,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 7\n  }, _this);\n}, \"M6dqfkFdSsX73PUneKfzg2krHgE=\", false, function () {\n  return [useForm];\n}));\n_c2 = ProcessingInstructionsAuthorisationView;\nProcessingInstructionsAuthorisationView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  defaultValues: PropTypes.object.isRequired,\n  isReadyToSubmit: PropTypes.bool,\n  isSubmittedAuthorisedSignatory: PropTypes.bool,\n  isReadOnly: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n    save: PropTypes.func.isRequired,\n    submit: PropTypes.func.isRequired,\n    approve: PropTypes.func.isRequired,\n    reject: PropTypes.func.isRequired,\n    resetAll: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default ProcessingInstructionsAuthorisationView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProcessingInstructionsAuthorisationView$forwardRef\");\n$RefreshReg$(_c2, \"ProcessingInstructionsAuthorisationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsAuthorisation/ProcessingInstructionsAuthorisation.view.js"],"names":["React","forwardRef","useForm","yupResolver","PropTypes","config","styles","stylesParent","AccessControl","Button","FormSelect","FormCheckbox","FormContainer","FormFields","FormGrid","SaveBar","PreventNavigation","utils","makeStyles","Box","Typography","Divider","NavigateBeforeIcon","CheckCircleIcon","BlockIcon","constants","ProcessingInstructionsAuthorisationView","ref","instruction","fields","defaultValues","isReadyToSubmit","isSubmittedAuthorisedSignatory","isReadOnly","handlers","classes","classesParent","validationSchema","form","getValidationSchema","updatedDate","submittedDate","reopenedDate","submittedStatus","statusId","PI_STATUS_SUBMITTED_PROCESSING","resolver","control","errors","reset","watch","formState","formValues","isPageEdited","dirtyFields","frontEndContact","authorisedSignatory","isReady","gridProps","xs","sm","root","getFieldProps","string","t","resetAll","btn","button","notes","length","subTitle","map","note","idx","noteStatus","type","approved","rejected","noteUpdatedBy","user","userName","date","value","createdDate","format","id","updatedByName","details","authorisedSignatoryName","saveBar","back","cancel","save","submit","reject","approve","routes","processingInstructions","steps","propTypes","array","isRequired","object","bool","shape","func"],"mappings":";;;;;;AAAA;AACA,OAAOA,KAAP,IAAgBC,UAAhB,QAAkC,OAAlC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,OAAOC,MAAP,MAAmB,QAAnB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,8CAAnB;AACA,OAAOC,YAAP,MAAyB,4EAAzB;AACA,SACEC,aADF,EAEEC,MAFF,EAGEC,UAHF,EAIEC,YAJF,EAKEC,aALF,EAMEC,UANF,EAOEC,QAPF,EAQEC,OARF,EASEC,iBATF,QAUO,YAVP;AAWA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,UAA1B,EAAsCC,OAAtC,QAAqD,mBAArD;AACA,OAAOC,kBAAP,MAA+B,mCAA/B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;;;AAEA,IAAMC,uCAAuC,gBAAGzB,UAAU,SACxD,gBAAgH0B,GAAhH,EAAwH;AAAA;;AAAA;;AAAA,MAArHC,WAAqH,QAArHA,WAAqH;AAAA,MAAxGC,MAAwG,QAAxGA,MAAwG;AAAA,MAAhGC,aAAgG,QAAhGA,aAAgG;AAAA,MAAjFC,eAAiF,QAAjFA,eAAiF;AAAA,MAAhEC,8BAAgE,QAAhEA,8BAAgE;AAAA,MAAhCC,UAAgC,QAAhCA,UAAgC;AAAA,MAApBC,QAAoB,QAApBA,QAAoB;AACtH,MAAMC,OAAO,GAAGjB,UAAU,CAACZ,MAAD,CAAV,EAAhB;AACA,MAAM8B,aAAa,GAAGlB,UAAU,CAACX,YAAD,CAAV,EAAtB;AACA,MAAM8B,gBAAgB,GAAGpB,KAAK,CAACqB,IAAN,CAAWC,mBAAX,CAA+BV,MAA/B,CAAzB;AACA,MAAMW,WAAW,GAAGZ,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEY,WAAjC;AACA,MAAMC,aAAa,GAAGb,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEa,aAAnC;AACA,MAAMC,YAAY,GAAGd,WAAH,aAAGA,WAAH,uBAAGA,WAAW,CAAEc,YAAlC;AACA,MAAMC,eAAe,GAAG,CAAAf,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAEgB,QAAb,MAA0BnB,SAAS,CAACoB,8BAA5D;;AAPsH,iBAQjE3C,OAAO;AAC1D4B,IAAAA,aAAa,EAAbA;AAD0D,KAEtDO,gBAAgB,IAAI;AAAES,IAAAA,QAAQ,EAAE3C,WAAW,CAACkC,gBAAD;AAAvB,GAFkC,EAR0D;AAAA,MAQ9GU,OAR8G,YAQ9GA,OAR8G;AAAA,MAQrGC,MARqG,YAQrGA,MARqG;AAAA,MAQ7FC,KAR6F,YAQ7FA,KAR6F;AAAA,MAQtFC,KARsF,YAQtFA,KARsF;AAAA,MAQ/EC,SAR+E,YAQ/EA,SAR+E;;AAatH,MAAMC,UAAU,GAAGF,KAAK,EAAxB;AACA,MAAMG,YAAY,GAAG,CAAAF,SAAS,SAAT,IAAAA,SAAS,WAAT,qCAAAA,SAAS,CAAEG,WAAX,gFAAwBC,eAAxB,MAA2CJ,SAA3C,aAA2CA,SAA3C,iDAA2CA,SAAS,CAAEG,WAAtD,2DAA2C,uBAAwBE,mBAAnE,IAAyF,IAAzF,GAAgG,KAArH;AACA,MAAMC,OAAO,GAAG,CAACJ,YAAD,IAAiBtB,eAAjB,KAAoCqB,UAApC,aAAoCA,UAApC,uBAAoCA,UAAU,CAAEI,mBAAhD,MAAuEJ,UAAvE,aAAuEA,UAAvE,uBAAuEA,UAAU,CAAEG,eAAnF,CAAhB;AAEA,MAAMG,SAAS,GAAG;AAAEC,IAAAA,EAAE,EAAE,EAAN;AAAUC,IAAAA,EAAE,EAAE;AAAd,GAAlB;AAEA,sBACE;AAAK,mBAAY,uCAAjB;AAAA,4BACE,QAAC,aAAD;AAAe,qBAAY,cAA3B;AAA0C,MAAA,GAAG,EAAEjC,GAA/C;AAAoD,MAAA,MAAM,EAAEyB,UAA5D;AAAwE,MAAA,SAAS,EAAEH,KAAnF;AAA0F,MAAA,aAAa,EAAE;AAAEY,QAAAA,IAAI,EAAE1B,OAAO,CAAC0B;AAAhB,OAAzG;AAAA,6BACE,QAAC,UAAD;AAAA,gCACE,QAAC,QAAD;AAAU,UAAA,SAAS,MAAnB;AAAA,kCACE,QAAC,QAAD;AAAU,YAAA,IAAI;AAAd,aAAmBH,SAAnB;AAAA,mCACE,QAAC,UAAD,oBAAgBzC,KAAK,CAACqB,IAAN,CAAWwB,aAAX,CAAyBjC,MAAzB,EAAiC,iBAAjC,EAAoDkB,OAApD,EAA6DC,MAA7D,CAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBADF,eAIE,QAAC,QAAD;AAAU,YAAA,IAAI;AAAd,aAAmBU,SAAnB;AAAA,mCACE,QAAC,UAAD,oBAAgBzC,KAAK,CAACqB,IAAN,CAAWwB,aAAX,CAAyBjC,MAAzB,EAAiC,qBAAjC,EAAwDkB,OAAxD,EAAiEC,MAAjE,CAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBAJF;AAAA;AAAA;AAAA;AAAA;AAAA,iBADF,eASE,QAAC,aAAD;AAAe,UAAA,OAAO,EAAC,+CAAvB;AAAuE,UAAA,WAAW,EAAE,CAAC,QAAD,EAAW,QAAX,CAApF;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAA,oCACE,QAAC,QAAD;AAAU,cAAA,IAAI;AAAd,eAAmBU,SAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAY,gBAAA,EAAE,EAAE,CAAhB;AAAA,uCACE,QAAC,YAAD,oBAAkBzC,KAAK,CAACqB,IAAN,CAAWwB,aAAX,CAAyBjC,MAAzB,EAAiC,eAAjC,CAAlB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,EAMGG,8BAA8B,IAAIC,UAAlC,iBACC,QAAC,QAAD;AAAU,cAAA,IAAI;AAAd,eAAmByB,SAAnB;AAAA,qCACE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAY,gBAAA,EAAE,EAAE,CAAhB;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,IAAI,EAAEzC,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,gDAAf,CADR;AAEE,kBAAA,OAAO,EAAE9B,QAAQ,CAAC+B,QAFpB;AAGE,kBAAA,KAAK,EAAC,SAHR;AAIE,kBAAA,IAAI,EAAC,OAJP;AAKE,kBAAA,OAAO,EAAC,UALV;AAME,kBAAA,aAAa,EAAE;AAAEC,oBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAPJ;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBATF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,aADF,eAoCE,QAAC,QAAD;AAAU,MAAA,SAAS,MAAnB;AAAA,8BACE,QAAC,QAAD;AAAU,QAAA,IAAI;AAAd,SAAmBT,SAAnB;AAAA,kBACG,CAAA9B,WAAW,SAAX,IAAAA,WAAW,WAAX,kCAAAA,WAAW,CAAEwC,KAAb,0EAAoBC,MAApB,IAA6B,CAA7B,iBACC,QAAC,GAAD;AAAK,yBAAY,OAAjB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAElC,OAAO,CAACmC,QAA/B;AAAA,sBACGrD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,qDAAf;AADH;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBALF,EAMGpC,WAAW,CAACwC,KAAZ,CAAkBG,GAAlB,CAAsB,UAACC,IAAD,EAAOC,GAAP,EAAe;AAAA;;AACpC,gCACE,QAAC,GAAD;AAAA,sCACE,QAAC,GAAD;AAAK,gBAAA,EAAE,EAAE,CAAT;AAAA,wCACE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,CAAT;AAAY,kBAAA,OAAO,EAAC,MAApB;AAA2B,kBAAA,UAAU,EAAC,QAAtC;AAAA,0CACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAEtC,OAAO,CAACuC,UAA/B;AAAA,+BACGzD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,YAAf,CADH,QACmCQ,IAAI,CAACG,IADxC;AAAA;AAAA;AAAA;AAAA;AAAA,2BADF,eAIE,QAAC,GAAD;AAAK,oBAAA,OAAO,EAAC,MAAb;AAAoB,oBAAA,UAAU,EAAC,QAA/B;AAAwC,oBAAA,EAAE,EAAE,GAA5C;AAAA,+BACGH,IAAI,CAACG,IAAL,KAAc,UAAd,iBAA4B,QAAC,eAAD;AAAiB,sBAAA,SAAS,EAAExC,OAAO,CAACyC;AAApC;AAAA;AAAA;AAAA;AAAA,6BAD/B,EAEGJ,IAAI,CAACG,IAAL,KAAc,UAAd,iBAA4B,QAAC,SAAD;AAAW,sBAAA,SAAS,EAAExC,OAAO,CAAC0C;AAA9B;AAAA;AAAA;AAAA;AAAA,6BAF/B;AAAA;AAAA;AAAA;AAAA;AAAA,2BAJF;AAAA;AAAA;AAAA;AAAA;AAAA,yBADF,eAUE,QAAC,GAAD;AAAK,kBAAA,EAAE,EAAE,CAAT;AAAA,yCACE,QAAC,UAAD;AAAY,oBAAA,SAAS,EAAE1C,OAAO,CAACiC,KAA/B;AAAA,8BAAuCI,IAAI,CAACJ;AAA5C;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBAVF,eAaE,QAAC,UAAD;AAAY,kBAAA,SAAS,EAAEjC,OAAO,CAAC2C,aAA/B;AAAA,4BACG7D,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,2DAAf,EAA4E;AAC3Ee,oBAAAA,IAAI,EAAEP,IAAI,CAACQ,QADgE;AAE3EC,oBAAAA,IAAI,EAAEhE,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEkB,sBAAAA,KAAK,EAAE;AAAED,wBAAAA,IAAI,EAAET,IAAI,CAACW,WAAb;AAA0BC,wBAAAA,MAAM,EAAE;AAAlC;AAAT,qBAA9B;AAFqE,mBAA5E;AADH;AAAA;AAAA;AAAA;AAAA,yBAbF;AAAA;AAAA;AAAA;AAAA;AAAA,uBADF,EAsBGX,GAAG,KAAK,CAAA7C,WAAW,SAAX,IAAAA,WAAW,WAAX,mCAAAA,WAAW,CAAEwC,KAAb,4EAAoBC,MAApB,IAA6B,CAArC,iBAA0C,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,uBAtB7C;AAAA,eAAUG,IAAI,CAACa,EAAf;AAAA;AAAA;AAAA;AAAA,qBADF;AA0BD,WA3BA,CANH;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,eADF,eAwCE,QAAC,QAAD;AAAU,QAAA,IAAI;AAAd,SAAmB3B,SAAnB;AAAA,kBACGf,eAAe,IAAID,YAAnB,iBACC,QAAC,GAAD;AAAK,yBAAY,oBAAjB;AAAA,kCACE,QAAC,UAAD;AAAY,YAAA,SAAS,EAAEP,OAAO,CAACmC,QAA/B;AAAA,sBACGrD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,4EAAf;AADH;AAAA;AAAA;AAAA;AAAA,mBADF,eAKE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBALF,eAOE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,GAAT;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAE7B,OAAO,CAACuC,UAA/B;AAAA,0BACGzD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,8EAAf;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAME,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,UAAD;AAAA,0BAAapC,WAAW,CAAC0D;AAAzB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBANF,eASE,QAAC,GAAD;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEnD,OAAO,CAAC2C,aAA/B;AAAA,0BACG7D,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CACC,qGADD,EAEC;AACEiB,kBAAAA,IAAI,EAAEhE,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEkB,oBAAAA,KAAK,EAAE;AAAED,sBAAAA,IAAI,EAAEzC,WAAR;AAAqB4C,sBAAAA,MAAM,EAAE;AAA7B;AAAT,mBAA9B;AADR,iBAFD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA;AAAA;AAAA;AAAA;AAAA,mBAPF,eA4BE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,mBA5BF,eA8BE,QAAC,GAAD;AAAK,YAAA,EAAE,EAAE,CAAT;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,GAAT;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAEjD,OAAO,CAACuC,UAA/B;AAAA,0BACGzD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,+EAAf;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAOE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAA,qCACE,QAAC,UAAD;AAAA,0BAAapC,WAAb,aAAaA,WAAb,+CAAaA,WAAW,CAAE2D,OAA1B,yDAAa,qBAAsBC;AAAnC;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAPF,eAUE,QAAC,GAAD;AAAA,qCACE,QAAC,UAAD;AAAY,gBAAA,SAAS,EAAErD,OAAO,CAAC2C,aAA/B;AAAA,0BACG7D,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CACC,oGADD,EAEC;AACEiB,kBAAAA,IAAI,EAAEhE,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEkB,oBAAAA,KAAK,EAAE;AAAED,sBAAAA,IAAI,EAAExC,aAAR;AAAuB2C,sBAAAA,MAAM,EAAE;AAA/B;AAAT,mBAA9B;AADR,iBAFD;AADH;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBAVF;AAAA;AAAA;AAAA;AAAA;AAAA,mBA9BF;AAAA;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,eAxCF;AAAA;AAAA;AAAA;AAAA;AAAA,aApCF,eAsIE,QAAC,OAAD;AAAS,MAAA,IAAI,MAAb;AAAc,MAAA,aAAa,EAAE;AAAEvB,QAAAA,IAAI,EAAEzB,aAAa,CAACqD;AAAtB,OAA7B;AAAA,8BACE,QAAC,GAAD;AAAK,QAAA,OAAO,EAAC,MAAb;AAAoB,QAAA,cAAc,EAAC,eAAnC;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,UAAV;AAAqB,UAAA,SAAS,EAAC,MAA/B;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAExE,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,UAAf,CADR;AAEE,YAAA,OAAO,EAAE9B,QAAQ,CAACwD,IAFpB;AAGE,YAAA,QAAQ,EAAErC,YAHZ;AAIE,YAAA,IAAI,EAAC,OAJP;AAKE,YAAA,KAAK,EAAC,SALR;AAME,YAAA,OAAO,EAAC,UANV;AAOE,YAAA,IAAI,EAAE/B,kBAPR;AAQE,YAAA,YAAY,EAAC,MARf;AASE,YAAA,aAAa,EAAE;AAAE4C,cAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AATjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,iBADF,eAcE,QAAC,GAAD;AAAK,UAAA,IAAI,EAAC,UAAV;AAAqB,UAAA,SAAS,EAAC,OAA/B;AAAA,qBACGd,YAAY,IAAI,CAACI,OAAjB,iBACC;AAAA,oCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAExC,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,YAAf,CADR;AAEE,cAAA,OAAO,EAAE9B,QAAQ,CAACyD,MAFpB;AAGE,cAAA,KAAK,EAAC,SAHR;AAIE,cAAA,IAAI,EAAC,OAJP;AAKE,cAAA,OAAO,EAAC,MALV;AAME,cAAA,aAAa,EAAE;AAAEzB,gBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA,qBADF,eASE,QAAC,MAAD;AACE,cAAA,IAAI,EAAElD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,UAAf,CADR;AAEE,cAAA,OAAO,EAAE9B,QAAQ,CAAC0D,IAFpB;AAGE,cAAA,KAAK,EAAC,WAHR;AAIE,cAAA,OAAO,EAAC,UAJV;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,aAAa,EAAE;AAAE1B,gBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA,qBATF;AAAA,0BAFJ,eAqBE,QAAC,aAAD;AAAe,YAAA,OAAO,EAAC,+CAAvB;AAAuE,YAAA,WAAW,EAAE,CAAC,QAAD,EAAW,QAAX,CAApF;AAAA,mCACE,QAAC,MAAD;AACE,cAAA,IAAI,EAAElD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,8CAAf,CADR;AAEE,cAAA,OAAO,EAAE9B,QAAQ,CAAC2D,MAFpB;AAGE,cAAA,QAAQ,EAAE,CAACpC,OAAD,IAAYxB,UAHxB;AAIE,cAAA,KAAK,EAAC,SAJR;AAKE,cAAA,IAAI,EAAC,OALP;AAME,cAAA,aAAa,EAAE;AAAEiC,gBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBArBF,eA+BE,QAAC,aAAD;AAAe,YAAA,OAAO,EAAC,2DAAvB;AAAmF,YAAA,WAAW,EAAE,CAAC,QAAD,EAAW,QAAX,CAAhG;AAAA,mCACE;AAAA,sCACE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAElD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,YAAf,CADR;AAEE,gBAAA,OAAO,EAAE9B,QAAQ,CAAC4D,MAFpB;AAGE,gBAAA,KAAK,EAAC,SAHR;AAIE,gBAAA,IAAI,EAAC,OAJP;AAKE,gBAAA,QAAQ,EAAE,CAAC9D,8BALb;AAME,gBAAA,aAAa,EAAE;AAAEkC,kBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA,uBADF,eASE,QAAC,MAAD;AACE,gBAAA,IAAI,EAAElD,KAAK,CAAC8C,MAAN,CAAaC,CAAb,CAAe,aAAf,CADR;AAEE,gBAAA,OAAO,EAAE9B,QAAQ,CAAC6D,OAFpB;AAGE,gBAAA,KAAK,EAAC,SAHR;AAIE,gBAAA,IAAI,EAAC,OAJP;AAKE,gBAAA,QAAQ,EAAE,CAAC/D,8BALb;AAME,gBAAA,aAAa,EAAE;AAAEkC,kBAAAA,GAAG,EAAE9B,aAAa,CAAC+B;AAArB;AANjB;AAAA;AAAA;AAAA;AAAA,uBATF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,mBA/BF;AAAA;AAAA;AAAA;AAAA;AAAA,iBAdF;AAAA;AAAA;AAAA;AAAA;AAAA,eADF,eAoEE,QAAC,iBAAD;AAAmB,QAAA,KAAK,EAAEd,YAA1B;AAAwC,QAAA,WAAW,EAAE,WAAIhD,MAAM,CAAC2F,MAAP,CAAcC,sBAAd,CAAqCC,KAAzC,cAAkDtE,WAAlD,aAAkDA,WAAlD,uBAAkDA,WAAW,CAAEyD,EAA/D;AAArD;AAAA;AAAA;AAAA;AAAA,eApEF;AAAA;AAAA;AAAA;AAAA;AAAA,aAtIF;AAAA;AAAA;AAAA;AAAA;AAAA,WADF;AA+MD,CAnOuD;AAAA,UASDnF,OATC;AAAA,GAA1D;MAAMwB,uC;AAsONA,uCAAuC,CAACyE,SAAxC,GAAoD;AAClDtE,EAAAA,MAAM,EAAEzB,SAAS,CAACgG,KAAV,CAAgBC,UAD0B;AAElDvE,EAAAA,aAAa,EAAE1B,SAAS,CAACkG,MAAV,CAAiBD,UAFkB;AAGlDtE,EAAAA,eAAe,EAAE3B,SAAS,CAACmG,IAHuB;AAIlDvE,EAAAA,8BAA8B,EAAE5B,SAAS,CAACmG,IAJQ;AAKlDtE,EAAAA,UAAU,EAAE7B,SAAS,CAACmG,IAAV,CAAeF,UALuB;AAMlDnE,EAAAA,QAAQ,EAAE9B,SAAS,CAACoG,KAAV,CAAgB;AACxBd,IAAAA,IAAI,EAAEtF,SAAS,CAACqG,IAAV,CAAeJ,UADG;AAExBV,IAAAA,MAAM,EAAEvF,SAAS,CAACqG,IAAV,CAAeJ,UAFC;AAGxBT,IAAAA,IAAI,EAAExF,SAAS,CAACqG,IAAV,CAAeJ,UAHG;AAIxBR,IAAAA,MAAM,EAAEzF,SAAS,CAACqG,IAAV,CAAeJ,UAJC;AAKxBN,IAAAA,OAAO,EAAE3F,SAAS,CAACqG,IAAV,CAAeJ,UALA;AAMxBP,IAAAA,MAAM,EAAE1F,SAAS,CAACqG,IAAV,CAAeJ,UANC;AAOxBpC,IAAAA,QAAQ,EAAE7D,SAAS,CAACqG,IAAV,CAAeJ;AAPD,GAAhB,EAQPA;AAd+C,CAApD;AAiBA,eAAe3E,uCAAf","sourcesContent":["// react\r\nimport React, { forwardRef } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport PropTypes from 'prop-types';\r\nimport config from 'config';\r\n\r\n// app\r\nimport styles from './ProcessingInstructionsAuthorisation.styles';\r\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\r\nimport {\r\n  AccessControl,\r\n  Button,\r\n  FormSelect,\r\n  FormCheckbox,\r\n  FormContainer,\r\n  FormFields,\r\n  FormGrid,\r\n  SaveBar,\r\n  PreventNavigation,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Typography, Divider } from '@material-ui/core';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\nimport CheckCircleIcon from '@material-ui/icons/CheckCircle';\r\nimport BlockIcon from '@material-ui/icons/Block';\r\nimport * as constants from 'consts';\r\n\r\nconst ProcessingInstructionsAuthorisationView = forwardRef(\r\n  ({ instruction, fields, defaultValues, isReadyToSubmit, isSubmittedAuthorisedSignatory, isReadOnly, handlers }, ref) => {\r\n    const classes = makeStyles(styles)();\r\n    const classesParent = makeStyles(stylesParent)();\r\n    const validationSchema = utils.form.getValidationSchema(fields);\r\n    const updatedDate = instruction?.updatedDate;\r\n    const submittedDate = instruction?.submittedDate;\r\n    const reopenedDate = instruction?.reopenedDate;\r\n    const submittedStatus = instruction?.statusId === constants.PI_STATUS_SUBMITTED_PROCESSING;\r\n    const { control, errors, reset, watch, formState } = useForm({\r\n      defaultValues,\r\n      ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n    });\r\n\r\n    const formValues = watch();\r\n    const isPageEdited = formState?.dirtyFields?.frontEndContact || formState?.dirtyFields?.authorisedSignatory ? true : false;\r\n    const isReady = !isPageEdited && isReadyToSubmit && formValues?.authorisedSignatory && formValues?.frontEndContact;\r\n\r\n    const gridProps = { xs: 12, sm: 6 };\r\n\r\n    return (\r\n      <div data-testid=\"processing-instructions-authorisation\">\r\n        <FormContainer data-testid=\"form-addUser\" ref={ref} values={formValues} resetFunc={reset} nestedClasses={{ root: classes.root }}>\r\n          <FormFields>\r\n            <FormGrid container>\r\n              <FormGrid item {...gridProps}>\r\n                <FormSelect {...utils.form.getFieldProps(fields, 'frontEndContact', control, errors)} />\r\n              </FormGrid>\r\n              <FormGrid item {...gridProps}>\r\n                <FormSelect {...utils.form.getFieldProps(fields, 'authorisedSignatory', control, errors)} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <AccessControl feature=\"processingInstructions.processingInstructions\" permissions={['create', 'update']}>\r\n              <FormGrid container>\r\n                <FormGrid item {...gridProps}>\r\n                  <Box mt={1} mb={5}>\r\n                    <FormCheckbox {...utils.form.getFieldProps(fields, 'readyToSubmit')} />\r\n                  </Box>\r\n                </FormGrid>\r\n                {isSubmittedAuthorisedSignatory && isReadOnly && (\r\n                  <FormGrid item {...gridProps}>\r\n                    <Box mt={1} mb={5}>\r\n                      <Button\r\n                        text={utils.string.t('processingInstructions.authorisations.resetAll')}\r\n                        onClick={handlers.resetAll}\r\n                        color=\"primary\"\r\n                        size=\"small\"\r\n                        variant=\"outlined\"\r\n                        nestedClasses={{ btn: classesParent.button }}\r\n                      />\r\n                    </Box>\r\n                  </FormGrid>\r\n                )}\r\n              </FormGrid>\r\n            </AccessControl>\r\n          </FormFields>\r\n        </FormContainer>\r\n        <FormGrid container>\r\n          <FormGrid item {...gridProps}>\r\n            {instruction?.notes?.length > 0 && (\r\n              <Box data-testid=\"notes\">\r\n                <Typography className={classes.subTitle}>\r\n                  {utils.string.t('processingInstructions.authorisations.notes.heading')}\r\n                </Typography>\r\n\r\n                <Divider />\r\n                {instruction.notes.map((note, idx) => {\r\n                  return (\r\n                    <Box key={note.id}>\r\n                      <Box py={2}>\r\n                        <Box mb={1} display=\"flex\" alignItems=\"center\">\r\n                          <Typography className={classes.noteStatus}>\r\n                            {utils.string.t('app.status')}: {note.type}\r\n                          </Typography>\r\n                          <Box display=\"flex\" alignItems=\"center\" ml={0.5}>\r\n                            {note.type === 'Approved' && <CheckCircleIcon className={classes.approved} />}\r\n                            {note.type === 'Rejected' && <BlockIcon className={classes.rejected} />}\r\n                          </Box>\r\n                        </Box>\r\n                        <Box pb={2}>\r\n                          <Typography className={classes.notes}>{note.notes}</Typography>\r\n                        </Box>\r\n                        <Typography className={classes.noteUpdatedBy}>\r\n                          {utils.string.t('processingInstructions.authorisations.notes.updatedByInfo', {\r\n                            user: note.userName,\r\n                            date: utils.string.t('format.date', { value: { date: note.createdDate, format: 'D MMM YYYY, h:mm A' } }),\r\n                          })}\r\n                        </Typography>\r\n                      </Box>\r\n\r\n                      {idx !== instruction?.notes?.length - 1 && <Divider />}\r\n                    </Box>\r\n                  );\r\n                })}\r\n              </Box>\r\n            )}\r\n          </FormGrid>\r\n          <FormGrid item {...gridProps}>\r\n            {submittedStatus && reopenedDate && (\r\n              <Box data-testid=\"updated-pi-details\">\r\n                <Typography className={classes.subTitle}>\r\n                  {utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.heading')}\r\n                </Typography>\r\n\r\n                <Divider />\r\n\r\n                <Box py={2}>\r\n                  <Box pb={2.5}>\r\n                    <Typography className={classes.noteStatus}>\r\n                      {utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.updatedBy')}\r\n                    </Typography>\r\n                  </Box>\r\n                  <Box pb={2}>\r\n                    <Typography>{instruction.updatedByName}</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography className={classes.noteUpdatedBy}>\r\n                      {utils.string.t(\r\n                        'processingInstructions.authorisations.updatedProcessingInstruction.submittedAuthorisedSignatoryText',\r\n                        {\r\n                          date: utils.string.t('format.date', { value: { date: updatedDate, format: 'D MMM YYYY, h:mm A' } }),\r\n                        }\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n\r\n                <Divider />\r\n\r\n                <Box py={2}>\r\n                  <Box pb={2.5}>\r\n                    <Typography className={classes.noteStatus}>\r\n                      {utils.string.t('processingInstructions.authorisations.updatedProcessingInstruction.approvedBy')}\r\n                    </Typography>\r\n                  </Box>\r\n\r\n                  <Box pb={2}>\r\n                    <Typography>{instruction?.details?.authorisedSignatoryName}</Typography>\r\n                  </Box>\r\n                  <Box>\r\n                    <Typography className={classes.noteUpdatedBy}>\r\n                      {utils.string.t(\r\n                        'processingInstructions.authorisations.updatedProcessingInstruction.approvedAuthorisedSignatoryText',\r\n                        {\r\n                          date: utils.string.t('format.date', { value: { date: submittedDate, format: 'D MMM YYYY, h:mm A' } }),\r\n                        }\r\n                      )}\r\n                    </Typography>\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            )}\r\n          </FormGrid>\r\n        </FormGrid>\r\n\r\n        <SaveBar show nestedClasses={{ root: classesParent.saveBar }}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Box flex=\"1 1 auto\" textAlign=\"left\">\r\n              <Button\r\n                text={utils.string.t('app.back')}\r\n                onClick={handlers.back}\r\n                disabled={isPageEdited}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                icon={NavigateBeforeIcon}\r\n                iconPosition=\"left\"\r\n                nestedClasses={{ btn: classesParent.button }}\r\n              />\r\n            </Box>\r\n            <Box flex=\"1 1 auto\" textAlign=\"right\">\r\n              {isPageEdited && !isReady && (\r\n                <>\r\n                  <Button\r\n                    text={utils.string.t('app.cancel')}\r\n                    onClick={handlers.cancel}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"text\"\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                  <Button\r\n                    text={utils.string.t('app.save')}\r\n                    onClick={handlers.save}\r\n                    color=\"secondary\"\r\n                    variant=\"outlined\"\r\n                    size=\"small\"\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                </>\r\n              )}\r\n              <AccessControl feature=\"processingInstructions.processingInstructions\" permissions={['create', 'update']}>\r\n                <Button\r\n                  text={utils.string.t('processingInstructions.authorisations.submit')}\r\n                  onClick={handlers.submit}\r\n                  disabled={!isReady || isReadOnly}\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  nestedClasses={{ btn: classesParent.button }}\r\n                />\r\n              </AccessControl>\r\n              <AccessControl feature=\"processingInstructions.approveRejectProcessingInstruction\" permissions={['create', 'update']}>\r\n                <>\r\n                  <Button\r\n                    text={utils.string.t('app.reject')}\r\n                    onClick={handlers.reject}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disabled={!isSubmittedAuthorisedSignatory}\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                  <Button\r\n                    text={utils.string.t('app.approve')}\r\n                    onClick={handlers.approve}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    disabled={!isSubmittedAuthorisedSignatory}\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                </>\r\n              </AccessControl>\r\n            </Box>\r\n          </Box>\r\n          <PreventNavigation dirty={isPageEdited} allowedUrls={[`${config.routes.processingInstructions.steps}/${instruction?.id}/`]} />\r\n        </SaveBar>\r\n      </div>\r\n    );\r\n  }\r\n);\r\n\r\nProcessingInstructionsAuthorisationView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  defaultValues: PropTypes.object.isRequired,\r\n  isReadyToSubmit: PropTypes.bool,\r\n  isSubmittedAuthorisedSignatory: PropTypes.bool,\r\n  isReadOnly: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    save: PropTypes.func.isRequired,\r\n    submit: PropTypes.func.isRequired,\r\n    approve: PropTypes.func.isRequired,\r\n    reject: PropTypes.func.isRequired,\r\n    resetAll: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default ProcessingInstructionsAuthorisationView;\r\n"]},"metadata":{},"sourceType":"module"}