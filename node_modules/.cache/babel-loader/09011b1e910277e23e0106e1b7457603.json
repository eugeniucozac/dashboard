{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, enqueueNotification, removeLoader, hideModal } from 'stores';\nexport var premiumProcessingCheckSigningRejectCreateCase = function premiumProcessingCheckSigningRejectCreateCase(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.postCheckSigningRejectCreateCase'\n    };\n    var selectedCasesData = params === null || params === void 0 ? void 0 : params.selectedCases[0];\n\n    var _params$checkSignData = params === null || params === void 0 ? void 0 : params.checkSignData,\n        workPackageReference = _params$checkSignData.workPackageReference,\n        expectedResponseDate = _params$checkSignData.expectedResponseDate,\n        bureauList = _params$checkSignData.bureauList;\n\n    var selectedBureauList = bureauList.map(function (list) {\n      return list.id;\n    });\n    var requestBody = {\n      caseId: selectedCasesData === null || selectedCasesData === void 0 ? void 0 : selectedCasesData.caseId,\n      workPackageReference: workPackageReference,\n      expectedResponseDt: expectedResponseDate,\n      riskReferenceId: selectedCasesData === null || selectedCasesData === void 0 ? void 0 : selectedCasesData.policyRef,\n      department: selectedCasesData === null || selectedCasesData === void 0 ? void 0 : selectedCasesData.departmentName,\n      gxbInstance: selectedCasesData === null || selectedCasesData === void 0 ? void 0 : selectedCasesData.xbInstanceId,\n      bureauList: selectedBureauList\n    };\n    dispatch(premiumProcessingCheckSigningRejectCreateCaseRequest(requestBody));\n    dispatch(addLoader('premiumProcessingCheckSigningRejectCreateCase'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'checksigning/task/rejectAndCreateNewCase',\n      data: requestBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(premiumProcessingCheckSigningRejectCreateCaseSuccess(data === null || data === void 0 ? void 0 : data.data));\n      dispatch(enqueueNotification('premiumProcessing.checkSigningReject.rejectCreateCase', 'success'));\n      dispatch(hideModal());\n      return data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.premiumProcessingCheckSigningRejectCreateCase)'\n      }));\n      dispatch(premiumProcessingCheckSigningRejectCreateCaseError(error));\n      dispatch(enqueueNotification('premiumProcessing.checkSigningReject.rejectFailureMessage', 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    }).finally(function () {\n      dispatch(removeLoader('premiumProcessingCheckSigningRejectCreateCase'));\n      dispatch(hideModal());\n    });\n  };\n};\nexport var premiumProcessingCheckSigningRejectCreateCaseRequest = function premiumProcessingCheckSigningRejectCreateCaseRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_REQUEST',\n    payload: payload\n  };\n};\nexport var premiumProcessingCheckSigningRejectCreateCaseSuccess = function premiumProcessingCheckSigningRejectCreateCaseSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_SUCCESS',\n    payload: data\n  };\n};\nexport var premiumProcessingCheckSigningRejectCreateCaseError = function premiumProcessingCheckSigningRejectCreateCaseError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postCheckSigningRejectCreateCase.js"],"names":["utils","authLogout","addLoader","enqueueNotification","removeLoader","hideModal","premiumProcessingCheckSigningRejectCreateCase","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","selectedCasesData","selectedCases","checkSignData","workPackageReference","expectedResponseDate","bureauList","selectedBureauList","map","list","id","requestBody","caseId","expectedResponseDt","riskReferenceId","policyRef","department","departmentName","gxbInstance","xbInstanceId","premiumProcessingCheckSigningRejectCreateCaseRequest","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","premiumProcessingCheckSigningRejectCreateCaseSuccess","catch","error","handleError","message","premiumProcessingCheckSigningRejectCreateCaseError","handleUnauthorized","finally","payload","type"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader, hideModal } from 'stores';\r\n\r\nexport const premiumProcessingCheckSigningRejectCreateCase = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.postCheckSigningRejectCreateCase',\r\n  };\r\n\r\n  const selectedCasesData = params?.selectedCases[0];\r\n  const { workPackageReference, expectedResponseDate, bureauList } = params?.checkSignData;\r\n  const selectedBureauList = bureauList.map((list) => list.id);\r\n  const requestBody = {\r\n    caseId: selectedCasesData?.caseId,\r\n    workPackageReference: workPackageReference,\r\n    expectedResponseDt: expectedResponseDate,\r\n    riskReferenceId: selectedCasesData?.policyRef,\r\n    department: selectedCasesData?.departmentName,\r\n    gxbInstance: selectedCasesData?.xbInstanceId,\r\n    bureauList: selectedBureauList,\r\n  };\r\n\r\n  dispatch(premiumProcessingCheckSigningRejectCreateCaseRequest(requestBody));\r\n  dispatch(addLoader('premiumProcessingCheckSigningRejectCreateCase'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'checksigning/task/rejectAndCreateNewCase',\r\n      data: requestBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(premiumProcessingCheckSigningRejectCreateCaseSuccess(data?.data));\r\n      dispatch(enqueueNotification('premiumProcessing.checkSigningReject.rejectCreateCase', 'success'));\r\n      dispatch(hideModal());\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, {\r\n        ...defaultError,\r\n        message: 'API fetch error (premiumProcessing.premiumProcessingCheckSigningRejectCreateCase)',\r\n      });\r\n      dispatch(premiumProcessingCheckSigningRejectCreateCaseError(error));\r\n      dispatch(enqueueNotification('premiumProcessing.checkSigningReject.rejectFailureMessage', 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('premiumProcessingCheckSigningRejectCreateCase'));\r\n      dispatch(hideModal());\r\n    });\r\n};\r\n\r\nexport const premiumProcessingCheckSigningRejectCreateCaseRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingCheckSigningRejectCreateCaseSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const premiumProcessingCheckSigningRejectCreateCaseError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}