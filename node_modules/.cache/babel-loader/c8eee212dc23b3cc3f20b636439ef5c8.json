{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddRisk\\\\AddRisk.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classnames from 'classnames';\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport omit from 'lodash/omit';\nimport pick from 'lodash/pick';\nimport isString from 'lodash/isString';\nimport startCase from 'lodash/startCase'; // app\n\nimport styles from './AddRisk.styles';\nimport { Button, FormActions, FormContainer, FormAutocomplete, FormAutocompleteMui, FormCheckbox, FormDate, FormFields, FormGrid, FormHidden, FormLegend, FormRadio, FormSelect, FormText, FormToggle, Tabs, Translate } from 'components';\nimport { AddRiskColumn, AddRiskObject, AddRiskObjectAddress, AddRiskFormField, AddRiskRow } from 'modules';\nimport * as utils from 'utils';\nimport { RISK_DEFINITION_GENERAL, RISK_DEFINITION_PARTY, RISK_DEFINITION_EFFECTIVE } from 'consts'; // mui\n\nimport { Box, Divider, Grid, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nAddRiskView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  defaultValues: PropTypes.object.isRequired,\n  validationSchema: PropTypes.object.isRequired,\n  isTablet: PropTypes.bool.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  handlePostRisk: PropTypes.func.isRequired\n};\nexport function AddRiskView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fields = _ref.fields,\n      defaultValues = _ref.defaultValues,\n      validationSchema = _ref.validationSchema,\n      isTablet = _ref.isTablet,\n      handleClose = _ref.handleClose,\n      handlePostRisk = _ref.handlePostRisk;\n  var classes = makeStyles(styles, {\n    name: 'AddRisk'\n  })();\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      setValue = _useForm.setValue,\n      trigger = _useForm.trigger,\n      formState = _useForm.formState;\n\n  var conditionalErrors = Object.entries(errors).filter(function (e) {\n    return e[1].type === 'is-conditional-group' || e[1].type === 'is-conditional-field';\n  }).map(function (e) {\n    return e[0];\n  }).sort(); // This is a workaround to force a form validation.\n  // Apparently, this is a performance feature of React-Hook-Form, to minimize re-renders,\n  // but when field validation is processed for a group or related fields, those dependant\n  // fields/errors are not validated.\n  //\n  // For example, if within a group of 3 fields (A, B, C) at least one is required and you try\n  // to submit, all 3 fields will have an error - which is correct. But if the user fills field A,\n  // that error would disappear, but fields B and C would still incorrectly display an error.\n  //\n  // This forces a form validation and clears the errors which should have been cleared onChange.\n\n  useEffect(function () {\n    if (formState.isSubmitted) {\n      trigger();\n    }\n  }, [conditionalErrors.join('|')] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var groups = utils.risk.getGroups(fields);\n  var generalFields = pick(groups, [RISK_DEFINITION_GENERAL]);\n  var partyFields = pick(groups, [RISK_DEFINITION_PARTY]);\n  var effectiveFields = pick(groups, [RISK_DEFINITION_EFFECTIVE]);\n  var otherFields = omit(groups, [RISK_DEFINITION_GENERAL, RISK_DEFINITION_PARTY, RISK_DEFINITION_EFFECTIVE]);\n  var hasGeneralFields = utils.generic.isValidObject(generalFields, RISK_DEFINITION_GENERAL);\n  var hasPartyFields = utils.generic.isValidObject(partyFields, RISK_DEFINITION_PARTY);\n  var hasEffectiveFields = utils.generic.isValidObject(effectiveFields, RISK_DEFINITION_EFFECTIVE);\n  var hasGenericPolicyFields = hasGeneralFields || hasPartyFields || hasEffectiveFields;\n  var hasSpecificPolicyFields = utils.generic.isValidArray(Object.entries(otherFields), true);\n  var fieldMap = {\n    text: FormText,\n    number: FormText,\n    datepicker: FormDate,\n    select: FormSelect,\n    autocomplete: FormAutocomplete,\n    autocompletemui: FormAutocompleteMui,\n    radio: FormRadio,\n    checkbox: FormCheckbox,\n    toggle: FormToggle,\n    hidden: FormHidden,\n    label: FormLegend\n  };\n  var objectMap = {\n    address: AddRiskObjectAddress,\n    object: AddRiskObject\n  };\n\n  var tabsErrors = function tabsErrors(fields) {\n    return Object.keys(errors).filter(function (error) {\n      return fields.map(function (field) {\n        return field.name;\n      }).includes(error);\n    }).length;\n  };\n\n  var tabs = Object.entries(otherFields).map(function (group) {\n    return {\n      value: group[0],\n      label: utils.string.startCase(group[0]),\n      errors: tabsErrors(group[1])\n    };\n  });\n  var tabsOptions = {\n    swipeable: true,\n    compact: true,\n    componentProps: {\n      enableMouseEvents: false\n    },\n    nestedClasses: {\n      tabs: {\n        content: classes.tabsContent\n      }\n    }\n  };\n\n  var renderTabs = function renderTabs(groups) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return Object.entries(groups).map(function (group, index) {\n      var groupName = startCase(group[0]);\n      var groupFields = group[1];\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.content,\n        children: renderFields(groupFields, options)\n      }, \"\".concat(index, \"-\").concat(groupName), false, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 9\n      }, _this);\n    });\n  };\n\n  var renderFields = function renderFields(fieldsArray) {\n    var options = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    return /*#__PURE__*/_jsxDEV(FormGrid, {\n      container: true,\n      spacing: 4,\n      children: fieldsArray.map(function (field, idx) {\n        var condition = utils.risk.getCondition(field, fields);\n        var isValid = !condition || condition && utils.risk.isConditionValid(condition, watch(condition.name));\n        var hasLegend = isString(field.header);\n        var gridField = field.gridSize || get(options, 'gridSize') || {};\n        var gridDefault = {\n          xs: 12,\n          sm: 6,\n          md: 4,\n          lg: 3,\n          xl: 2\n        };\n        var gridDefaultValues = Object.values(gridDefault);\n        var gridArray = Object.entries(gridDefault).reduce(function (acc, _ref2, index) {\n          var _ref3 = _slicedToArray(_ref2, 2),\n              prop = _ref3[0],\n              item = _ref3[1];\n\n          var value = gridField[prop];\n          var hasCustomValue = has(gridField, prop);\n          return hasCustomValue ? _toConsumableArray(acc.fill(value, index, acc.length)) : acc;\n        }, _toConsumableArray(gridDefaultValues));\n        var grid = {\n          xs: gridArray[0],\n          sm: gridArray[1],\n          md: gridArray[2],\n          lg: gridArray[3],\n          xl: gridArray[4]\n        };\n        var classesHighlight = classnames(_defineProperty({}, classes.highlight, condition)); // grid spacer\n\n        if (utils.risk.isGridSpacer(field)) {\n          return /*#__PURE__*/_createElement(FormGrid, _objectSpread(_objectSpread({\n            item: true,\n            xs: 12\n          }, field.gridSize), {}, {\n            nestedClasses: {\n              root: classes.spacer\n            },\n            key: \"\".concat(field.group, \"-spacer-\").concat(idx),\n            \"data-testid\": \"spacer-\".concat(field.group, \"-\").concat(idx),\n            __self: _this,\n            __source: {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 15\n            }\n          }), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 17\n          }, _this));\n        } // column\n\n\n        if (utils.risk.isArrayColumn(field)) {\n          return isValid && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(AddRiskColumn, {\n              field: field,\n              formProps: {\n                control: control,\n                register: register,\n                watch: watch,\n                errors: errors,\n                setValue: setValue,\n                trigger: trigger\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 201,\n              columnNumber: 19\n            }, _this)\n          }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n            fileName: _jsxFileName,\n            lineNumber: 200,\n            columnNumber: 17\n          }, _this);\n        } // row\n\n\n        if (utils.risk.isArrayTable(field)) {\n          return isValid && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mb: 5,\n              children: /*#__PURE__*/_jsxDEV(AddRiskRow, {\n                field: field,\n                formProps: {\n                  control: control,\n                  register: register,\n                  watch: watch,\n                  errors: errors,\n                  setValue: setValue,\n                  trigger: trigger\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, _this)\n          }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n            fileName: _jsxFileName,\n            lineNumber: 211,\n            columnNumber: 17\n          }, _this);\n        } // object\n\n\n        if (utils.risk.isObject(field)) {\n          var ObjectComponent = objectMap[field.type];\n          return isValid && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(ObjectComponent, {\n              field: field,\n              formProps: {\n                control: control,\n                register: register,\n                watch: watch,\n                errors: errors,\n                setValue: setValue,\n                trigger: trigger\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 19\n            }, _this)\n          }, \"\".concat(field.group, \"-\").concat(field.name), false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 17\n          }, _this);\n        } // abort\n\n\n        if (!fieldMap[field.type]) return null; // field\n\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [hasLegend && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            nestedClasses: {\n              root: classes.legend\n            },\n            children: /*#__PURE__*/_jsxDEV(FormLegend, {\n              text: field.header\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 240,\n              columnNumber: 19\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 239,\n            columnNumber: 17\n          }, _this), isValid && /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n            item: true,\n            xs: 12\n          }, grid), {}, {\n            children: /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classesHighlight,\n              children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                field: field,\n                formProps: {\n                  control: control,\n                  register: register,\n                  watch: watch,\n                  errors: errors,\n                  setValue: setValue,\n                  trigger: trigger\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 246,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 245,\n              columnNumber: 19\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 244,\n            columnNumber: 17\n          }, _this)]\n        }, \"\".concat(field.group, \"-\").concat(field.name), true, {\n          fileName: _jsxFileName,\n          lineNumber: 237,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 149,\n      columnNumber: 7\n    }, _this);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(handlePostRisk),\n      autoComplete: \"off\",\n      \"data-testid\": \"risk-form\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          spacing: isTablet ? 6 : 8,\n          \"data-testid\": \"grid-container\",\n          children: [hasGenericPolicyFields && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            \"data-testid\": \"grid-generic\",\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 6,\n              children: [hasGeneralFields && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: hasPartyFields ? hasEffectiveFields ? 4 : 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(Tabs, _objectSpread(_objectSpread({\n                  tabs: [{\n                    value: 'tab1',\n                    label: utils.string.t('risks.groups.general'),\n                    errors: tabsErrors(Object.values(generalFields).flat())\n                  }]\n                }, tabsOptions), {}, {\n                  children: renderTabs(generalFields, {\n                    gridSize: {\n                      xs: 12,\n                      xl: 4\n                    }\n                  })\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 267,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 266,\n                columnNumber: 21\n              }, this), hasPartyFields && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: hasGeneralFields ? hasEffectiveFields ? 4 : 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(Tabs, _objectSpread(_objectSpread({\n                  tabs: [{\n                    value: 'tab2',\n                    label: utils.string.t('risks.groups.partys'),\n                    errors: tabsErrors(Object.values(partyFields).flat())\n                  }]\n                }, tabsOptions), {}, {\n                  children: renderTabs(partyFields, {\n                    gridSize: {\n                      xs: 12,\n                      lg: 6\n                    }\n                  })\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 284,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 283,\n                columnNumber: 21\n              }, this), hasEffectiveFields && /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                sm: hasPartyFields ? hasGeneralFields ? 4 : 6 : 12,\n                children: /*#__PURE__*/_jsxDEV(Tabs, _objectSpread(_objectSpread({\n                  tabs: [{\n                    value: 'tab3',\n                    label: utils.string.t('risks.groups.effective'),\n                    errors: tabsErrors(Object.values(effectiveFields).flat())\n                  }]\n                }, tabsOptions), {}, {\n                  children: renderTabs(effectiveFields, {\n                    gridSize: {\n                      xs: 12,\n                      lg: 6\n                    }\n                  })\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 301,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 300,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 264,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 263,\n            columnNumber: 15\n          }, this), hasGenericPolicyFields && hasSpecificPolicyFields && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            \"data-testid\": \"grid-divider\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: -0.5,\n              mb: 2,\n              children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 322,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 321,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 320,\n            columnNumber: 15\n          }, this), hasSpecificPolicyFields && /*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            \"data-testid\": \"grid-specific\",\n            children: /*#__PURE__*/_jsxDEV(Tabs, _objectSpread(_objectSpread({\n              tabs: tabs\n            }, tabsOptions), {}, {\n              children: renderTabs(otherFields)\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 329,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 328,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 261,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 260,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"app.cancel\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 338,\n            columnNumber: 25\n          }, this),\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: handleClose\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 338,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"app.submit\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 339,\n            columnNumber: 25\n          }, this),\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 339,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 337,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 258,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRiskView, \"1J+godLHeazaA8OYIZlY4MEEDwg=\", false, function () {\n  return [useForm];\n});\n\n_c = AddRiskView;\nAddRiskView.displayName = \"AddRiskView\";\nAddRiskView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddRiskView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"defaultValues\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"validationSchema\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isTablet\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlePostRisk\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddRisk\\\\AddRisk.view.js\"] = {\n    name: \"AddRiskView\",\n    docgenInfo: AddRiskView.__docgenInfo,\n    path: \"src\\\\forms\\\\AddRisk\\\\AddRisk.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddRisk/AddRisk.view.js"],"names":["React","useEffect","Fragment","PropTypes","useForm","yupResolver","classnames","get","has","omit","pick","isString","startCase","styles","Button","FormActions","FormContainer","FormAutocomplete","FormAutocompleteMui","FormCheckbox","FormDate","FormFields","FormGrid","FormHidden","FormLegend","FormRadio","FormSelect","FormText","FormToggle","Tabs","Translate","AddRiskColumn","AddRiskObject","AddRiskObjectAddress","AddRiskFormField","AddRiskRow","utils","RISK_DEFINITION_GENERAL","RISK_DEFINITION_PARTY","RISK_DEFINITION_EFFECTIVE","Box","Divider","Grid","makeStyles","AddRiskView","propTypes","fields","array","isRequired","defaultValues","object","validationSchema","isTablet","bool","handleClose","func","handlePostRisk","classes","name","resolver","control","register","watch","errors","handleSubmit","setValue","trigger","formState","conditionalErrors","Object","entries","filter","e","type","map","sort","isSubmitted","join","groups","risk","getGroups","generalFields","partyFields","effectiveFields","otherFields","hasGeneralFields","generic","isValidObject","hasPartyFields","hasEffectiveFields","hasGenericPolicyFields","hasSpecificPolicyFields","isValidArray","fieldMap","text","number","datepicker","select","autocomplete","autocompletemui","radio","checkbox","toggle","hidden","label","objectMap","address","tabsErrors","keys","error","field","includes","length","tabs","group","value","string","tabsOptions","swipeable","compact","componentProps","enableMouseEvents","nestedClasses","content","tabsContent","renderTabs","options","index","groupName","groupFields","renderFields","fieldsArray","idx","condition","getCondition","isValid","isConditionValid","hasLegend","header","gridField","gridSize","gridDefault","xs","sm","md","lg","xl","gridDefaultValues","values","gridArray","reduce","acc","prop","item","hasCustomValue","fill","grid","classesHighlight","highlight","isGridSpacer","root","spacer","isArrayColumn","isArrayTable","isObject","ObjectComponent","legend","t","flat","isSubmitting"],"mappings":"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","sourcesContent":["import React, { useEffect, Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\nimport has from 'lodash/has';\r\nimport omit from 'lodash/omit';\r\nimport pick from 'lodash/pick';\r\nimport isString from 'lodash/isString';\r\nimport startCase from 'lodash/startCase';\r\n\r\n// app\r\nimport styles from './AddRisk.styles';\r\nimport {\r\n  Button,\r\n  FormActions,\r\n  FormContainer,\r\n  FormAutocomplete,\r\n  FormAutocompleteMui,\r\n  FormCheckbox,\r\n  FormDate,\r\n  FormFields,\r\n  FormGrid,\r\n  FormHidden,\r\n  FormLegend,\r\n  FormRadio,\r\n  FormSelect,\r\n  FormText,\r\n  FormToggle,\r\n  Tabs,\r\n  Translate,\r\n} from 'components';\r\nimport { AddRiskColumn, AddRiskObject, AddRiskObjectAddress, AddRiskFormField, AddRiskRow } from 'modules';\r\nimport * as utils from 'utils';\r\nimport { RISK_DEFINITION_GENERAL, RISK_DEFINITION_PARTY, RISK_DEFINITION_EFFECTIVE } from 'consts';\r\n\r\n// mui\r\nimport { Box, Divider, Grid, makeStyles } from '@material-ui/core';\r\n\r\nAddRiskView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  defaultValues: PropTypes.object.isRequired,\r\n  validationSchema: PropTypes.object.isRequired,\r\n  isTablet: PropTypes.bool.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  handlePostRisk: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function AddRiskView({ fields, defaultValues, validationSchema, isTablet, handleClose, handlePostRisk }) {\r\n  const classes = makeStyles(styles, { name: 'AddRisk' })();\r\n  const { control, register, watch, errors, handleSubmit, setValue, trigger, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const conditionalErrors = Object.entries(errors)\r\n    .filter((e) => e[1].type === 'is-conditional-group' || e[1].type === 'is-conditional-field')\r\n    .map((e) => e[0])\r\n    .sort();\r\n\r\n  // This is a workaround to force a form validation.\r\n  // Apparently, this is a performance feature of React-Hook-Form, to minimize re-renders,\r\n  // but when field validation is processed for a group or related fields, those dependant\r\n  // fields/errors are not validated.\r\n  //\r\n  // For example, if within a group of 3 fields (A, B, C) at least one is required and you try\r\n  // to submit, all 3 fields will have an error - which is correct. But if the user fills field A,\r\n  // that error would disappear, but fields B and C would still incorrectly display an error.\r\n  //\r\n  // This forces a form validation and clears the errors which should have been cleared onChange.\r\n  useEffect(\r\n    () => {\r\n      if (formState.isSubmitted) {\r\n        trigger();\r\n      }\r\n    },\r\n    [conditionalErrors.join('|')] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const groups = utils.risk.getGroups(fields);\r\n\r\n  const generalFields = pick(groups, [RISK_DEFINITION_GENERAL]);\r\n  const partyFields = pick(groups, [RISK_DEFINITION_PARTY]);\r\n  const effectiveFields = pick(groups, [RISK_DEFINITION_EFFECTIVE]);\r\n  const otherFields = omit(groups, [RISK_DEFINITION_GENERAL, RISK_DEFINITION_PARTY, RISK_DEFINITION_EFFECTIVE]);\r\n\r\n  const hasGeneralFields = utils.generic.isValidObject(generalFields, RISK_DEFINITION_GENERAL);\r\n  const hasPartyFields = utils.generic.isValidObject(partyFields, RISK_DEFINITION_PARTY);\r\n  const hasEffectiveFields = utils.generic.isValidObject(effectiveFields, RISK_DEFINITION_EFFECTIVE);\r\n  const hasGenericPolicyFields = hasGeneralFields || hasPartyFields || hasEffectiveFields;\r\n  const hasSpecificPolicyFields = utils.generic.isValidArray(Object.entries(otherFields), true);\r\n\r\n  const fieldMap = {\r\n    text: FormText,\r\n    number: FormText,\r\n    datepicker: FormDate,\r\n    select: FormSelect,\r\n    autocomplete: FormAutocomplete,\r\n    autocompletemui: FormAutocompleteMui,\r\n    radio: FormRadio,\r\n    checkbox: FormCheckbox,\r\n    toggle: FormToggle,\r\n    hidden: FormHidden,\r\n    label: FormLegend,\r\n  };\r\n\r\n  const objectMap = {\r\n    address: AddRiskObjectAddress,\r\n    object: AddRiskObject,\r\n  };\r\n\r\n  const tabsErrors = (fields) => {\r\n    return Object.keys(errors).filter((error) => fields.map((field) => field.name).includes(error)).length;\r\n  };\r\n\r\n  const tabs = Object.entries(otherFields).map((group) => {\r\n    return { value: group[0], label: utils.string.startCase(group[0]), errors: tabsErrors(group[1]) };\r\n  });\r\n\r\n  const tabsOptions = {\r\n    swipeable: true,\r\n    compact: true,\r\n    componentProps: {\r\n      enableMouseEvents: false,\r\n    },\r\n    nestedClasses: {\r\n      tabs: {\r\n        content: classes.tabsContent,\r\n      },\r\n    },\r\n  };\r\n\r\n  const renderTabs = (groups, options = {}) => {\r\n    return Object.entries(groups).map((group, index) => {\r\n      const groupName = startCase(group[0]);\r\n      const groupFields = group[1];\r\n\r\n      return (\r\n        <div className={classes.content} key={`${index}-${groupName}`}>\r\n          {renderFields(groupFields, options)}\r\n        </div>\r\n      );\r\n    });\r\n  };\r\n\r\n  const renderFields = (fieldsArray, options = {}) => {\r\n    return (\r\n      <FormGrid container spacing={4}>\r\n        {fieldsArray.map((field, idx) => {\r\n          const condition = utils.risk.getCondition(field, fields);\r\n          const isValid = !condition || (condition && utils.risk.isConditionValid(condition, watch(condition.name)));\r\n          const hasLegend = isString(field.header);\r\n\r\n          const gridField = field.gridSize || get(options, 'gridSize') || {};\r\n          const gridDefault = { xs: 12, sm: 6, md: 4, lg: 3, xl: 2 };\r\n          const gridDefaultValues = Object.values(gridDefault);\r\n          const gridArray = Object.entries(gridDefault).reduce(\r\n            (acc, [prop, item], index) => {\r\n              const value = gridField[prop];\r\n              const hasCustomValue = has(gridField, prop);\r\n\r\n              return hasCustomValue ? [...acc.fill(value, index, acc.length)] : acc;\r\n            },\r\n            [...gridDefaultValues]\r\n          );\r\n\r\n          const grid = {\r\n            xs: gridArray[0],\r\n            sm: gridArray[1],\r\n            md: gridArray[2],\r\n            lg: gridArray[3],\r\n            xl: gridArray[4],\r\n          };\r\n\r\n          const classesHighlight = classnames({\r\n            [classes.highlight]: condition,\r\n          });\r\n\r\n          // grid spacer\r\n          if (utils.risk.isGridSpacer(field)) {\r\n            return (\r\n              <FormGrid\r\n                item\r\n                xs={12}\r\n                {...field.gridSize}\r\n                nestedClasses={{ root: classes.spacer }}\r\n                key={`${field.group}-spacer-${idx}`}\r\n                data-testid={`spacer-${field.group}-${idx}`}\r\n              >\r\n                <span />\r\n              </FormGrid>\r\n            );\r\n          }\r\n\r\n          // column\r\n          if (utils.risk.isArrayColumn(field)) {\r\n            return (\r\n              isValid && (\r\n                <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n                  <AddRiskColumn field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n                </FormGrid>\r\n              )\r\n            );\r\n          }\r\n\r\n          // row\r\n          if (utils.risk.isArrayTable(field)) {\r\n            return (\r\n              isValid && (\r\n                <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n                  <Box mb={5}>\r\n                    <AddRiskRow field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n                  </Box>\r\n                </FormGrid>\r\n              )\r\n            );\r\n          }\r\n\r\n          // object\r\n          if (utils.risk.isObject(field)) {\r\n            const ObjectComponent = objectMap[field.type];\r\n            return (\r\n              isValid && (\r\n                <FormGrid item xs={12} key={`${field.group}-${field.name}`}>\r\n                  <ObjectComponent field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n                </FormGrid>\r\n              )\r\n            );\r\n          }\r\n\r\n          // abort\r\n          if (!fieldMap[field.type]) return null;\r\n\r\n          // field\r\n          return (\r\n            <Fragment key={`${field.group}-${field.name}`}>\r\n              {hasLegend && (\r\n                <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                  <FormLegend text={field.header} />\r\n                </FormGrid>\r\n              )}\r\n              {isValid && (\r\n                <FormGrid item xs={12} {...grid}>\r\n                  <div className={classesHighlight}>\r\n                    <AddRiskFormField field={field} formProps={{ control, register, watch, errors, setValue, trigger }} />\r\n                  </div>\r\n                </FormGrid>\r\n              )}\r\n            </Fragment>\r\n          );\r\n        })}\r\n      </FormGrid>\r\n    );\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(handlePostRisk)} autoComplete=\"off\" data-testid=\"risk-form\">\r\n        <FormFields type=\"dialog\">\r\n          <Grid container spacing={isTablet ? 6 : 8} data-testid=\"grid-container\">\r\n            {hasGenericPolicyFields && (\r\n              <Grid item xs={12} data-testid=\"grid-generic\">\r\n                <Grid container spacing={6}>\r\n                  {hasGeneralFields && (\r\n                    <Grid item xs={12} sm={hasPartyFields ? (hasEffectiveFields ? 4 : 6) : 12}>\r\n                      <Tabs\r\n                        tabs={[\r\n                          {\r\n                            value: 'tab1',\r\n                            label: utils.string.t('risks.groups.general'),\r\n                            errors: tabsErrors(Object.values(generalFields).flat()),\r\n                          },\r\n                        ]}\r\n                        {...tabsOptions}\r\n                      >\r\n                        {renderTabs(generalFields, { gridSize: { xs: 12, xl: 4 } })}\r\n                      </Tabs>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {hasPartyFields && (\r\n                    <Grid item xs={12} sm={hasGeneralFields ? (hasEffectiveFields ? 4 : 6) : 12}>\r\n                      <Tabs\r\n                        tabs={[\r\n                          {\r\n                            value: 'tab2',\r\n                            label: utils.string.t('risks.groups.partys'),\r\n                            errors: tabsErrors(Object.values(partyFields).flat()),\r\n                          },\r\n                        ]}\r\n                        {...tabsOptions}\r\n                      >\r\n                        {renderTabs(partyFields, { gridSize: { xs: 12, lg: 6 } })}\r\n                      </Tabs>\r\n                    </Grid>\r\n                  )}\r\n\r\n                  {hasEffectiveFields && (\r\n                    <Grid item xs={12} sm={hasPartyFields ? (hasGeneralFields ? 4 : 6) : 12}>\r\n                      <Tabs\r\n                        tabs={[\r\n                          {\r\n                            value: 'tab3',\r\n                            label: utils.string.t('risks.groups.effective'),\r\n                            errors: tabsErrors(Object.values(effectiveFields).flat()),\r\n                          },\r\n                        ]}\r\n                        {...tabsOptions}\r\n                      >\r\n                        {renderTabs(effectiveFields, { gridSize: { xs: 12, lg: 6 } })}\r\n                      </Tabs>\r\n                    </Grid>\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n\r\n            {hasGenericPolicyFields && hasSpecificPolicyFields && (\r\n              <Grid item xs={12} data-testid=\"grid-divider\">\r\n                <Box mt={-0.5} mb={2}>\r\n                  <Divider />\r\n                </Box>\r\n              </Grid>\r\n            )}\r\n\r\n            {hasSpecificPolicyFields && (\r\n              <Grid item xs={12} data-testid=\"grid-specific\">\r\n                <Tabs tabs={tabs} {...tabsOptions}>\r\n                  {renderTabs(otherFields)}\r\n                </Tabs>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          <Button text={<Translate label=\"app.cancel\" />} variant=\"text\" disabled={formState.isSubmitting} onClick={handleClose} />\r\n          <Button text={<Translate label=\"app.submit\" />} type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" />\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}