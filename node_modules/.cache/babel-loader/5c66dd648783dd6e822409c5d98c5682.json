{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RfiResponseDms\\\\RfiResponseDms.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport * as utils from 'utils';\nimport { Accordion } from 'components';\nimport { ClaimsUploadViewSearchDocs } from 'modules';\nimport styles from './RfiResponseDms.styles';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles } from '@material-ui/core';\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRfiResponseDmsView.prototype = {\n  task: PropTypes.object,\n  expanded: PropTypes.bool,\n  toggleDmsSection: PropTypes.func,\n  viewOptions: PropTypes.shape({\n    disabled: PropTypes.bool,\n    upload: PropTypes.bool,\n    search: PropTypes.bool,\n    unlink: PropTypes.bool,\n    delete: PropTypes.bool\n  }).isRequired\n};\nexport function RfiResponseDmsView(_ref) {\n  var task = _ref.task,\n      expanded = _ref.expanded,\n      toggleDmsSection = _ref.toggleDmsSection,\n      viewOptions = _ref.viewOptions;\n  var classes = makeStyles(styles, {\n    name: 'RfiResponseDms'\n  })({\n    expanded: expanded\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(Accordion, {\n      icon: false,\n      expanded: expanded,\n      actions: [{\n        id: 'manageDocs',\n        text: viewOptions.readOnly ? utils.string.t('dms.wrapper.viewDocuments') : utils.string.t('dms.wrapper.manageDocuments'),\n        icon: KeyboardArrowUpIcon,\n        iconPosition: 'left',\n        color: 'primary',\n        onClick: toggleDmsSection,\n        nestedClasses: {\n          link: classes.toggleBtnLink,\n          icon: classes.toggleBtnIcon\n        }\n      }],\n      children: /*#__PURE__*/_jsxDEV(\"div\", {\n        container: true,\n        className: classes.dmsWrapper,\n        children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: task,\n          refIdName: constants.DMS_CONTEXT_TASK_ID,\n          dmsContext: constants.DMS_CONTEXT_TASK,\n          viewOptions: {\n            upload: viewOptions.upload\n          },\n          searchOptions: {\n            disabled: true\n          },\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 52,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 51,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 33,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 32,\n    columnNumber: 5\n  }, this);\n}\n_c = RfiResponseDmsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiResponseDmsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RfiResponseDms/RfiResponseDms.view.js"],"names":["React","PropTypes","utils","Accordion","ClaimsUploadViewSearchDocs","styles","constants","makeStyles","KeyboardArrowUpIcon","RfiResponseDmsView","prototype","task","object","expanded","bool","toggleDmsSection","func","viewOptions","shape","disabled","upload","search","unlink","delete","isRequired","classes","name","root","id","text","readOnly","string","t","icon","iconPosition","color","onClick","nestedClasses","link","toggleBtnLink","toggleBtnIcon","dmsWrapper","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","type","claims"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Accordion } from 'components';\r\nimport { ClaimsUploadViewSearchDocs } from 'modules';\r\nimport styles from './RfiResponseDms.styles';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport KeyboardArrowUpIcon from '@material-ui/icons/KeyboardArrowUp';\r\n\r\nRfiResponseDmsView.prototype = {\r\n  task: PropTypes.object,\r\n  expanded: PropTypes.bool,\r\n  toggleDmsSection: PropTypes.func,\r\n  viewOptions: PropTypes.shape({\r\n    disabled: PropTypes.bool,\r\n    upload: PropTypes.bool,\r\n    search: PropTypes.bool,\r\n    unlink: PropTypes.bool,\r\n    delete: PropTypes.bool,\r\n  }).isRequired,\r\n};\r\n\r\nexport function RfiResponseDmsView({ task, expanded, toggleDmsSection, viewOptions }) {\r\n  const classes = makeStyles(styles, { name: 'RfiResponseDms' })({ expanded });\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <Accordion\r\n        icon={false}\r\n        expanded={expanded}\r\n        actions={[\r\n          {\r\n            id: 'manageDocs',\r\n            text: viewOptions.readOnly ? utils.string.t('dms.wrapper.viewDocuments') : utils.string.t('dms.wrapper.manageDocuments'),\r\n            icon: KeyboardArrowUpIcon,\r\n            iconPosition: 'left',\r\n            color: 'primary',\r\n            onClick: toggleDmsSection,\r\n            nestedClasses: {\r\n              link: classes.toggleBtnLink,\r\n              icon: classes.toggleBtnIcon,\r\n            },\r\n          },\r\n        ]}\r\n      >\r\n        <div container className={classes.dmsWrapper}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={task}\r\n            refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n            dmsContext={constants.DMS_CONTEXT_TASK}\r\n            viewOptions={{\r\n              upload: viewOptions.upload,\r\n            }}\r\n            searchOptions={{\r\n              disabled: true,\r\n            }}\r\n            documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n          />\r\n        </div>\r\n      </Accordion>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}