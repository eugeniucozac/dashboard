{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditQuoteBind\\\\MultiStepForm.js\",\n    _s = $RefreshSig$();\n\n/* eslint-disable react-hooks/exhaustive-deps */\nimport React, { useState, useEffect } from 'react';\nimport { FormProvider, useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory } from 'react-router';\nimport capitalize from 'lodash/capitalize';\nimport startCase from 'lodash/startCase';\nimport * as utils from 'utils';\nimport { makeStyles } from '@material-ui/core/styles';\nimport Box from '@material-ui/core/Box';\nimport Stepper from '@material-ui/core/Stepper';\nimport Step from '@material-ui/core/Step';\nimport StepLabel from '@material-ui/core/StepLabel';\nimport Button from '@material-ui/core/Button';\nimport LinearProgress from '@material-ui/core/LinearProgress';\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport styles from './AddEditQuoteBind.style';\nimport { FormActions, FormFields, Translate, RiskData } from 'components';\nimport RenderStep from './RenderStep';\nimport FormSkeleton from './FormSkeleton';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\n\nfunction getSteps(steps) {\n  return steps.map(function (step) {\n    return capitalize(step);\n  });\n}\n\nexport default function MultiStepForm(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fields = _ref.fields,\n      isReQuote = _ref.isReQuote,\n      defaultValues = _ref.defaultValues,\n      riskDataValues = _ref.riskDataValues,\n      handleSubmit = _ref.handleSubmit,\n      definitionsFields = _ref.definitionsFields,\n      hasCountryOfOrigin = _ref.hasCountryOfOrigin,\n      isLoading = _ref.isLoading,\n      productType = _ref.productType,\n      handleDraftSave = _ref.handleDraftSave,\n      fullScreen = _ref.fullScreen;\n  var classes = makeStyles(styles, {\n    name: 'MultiStepForm'\n  })({\n    fullScreen: fullScreen\n  });\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      activeStep = _useState2[0],\n      setActiveStep = _useState2[1];\n\n  var _useState3 = useState({}),\n      _useState4 = _slicedToArray(_useState3, 2),\n      completed = _useState4[0],\n      setCompleted = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stepFields = _useState6[0],\n      setStepFields = _useState6[1];\n\n  var _useState7 = useState(0),\n      _useState8 = _slicedToArray(_useState7, 2),\n      progress = _useState8[0],\n      setProgress = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      validationSchema = _useState10[0],\n      setValidationSchema = _useState10[1];\n\n  var history = useHistory();\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]);\n  var methods = useForm({\n    shouldUnregister: false,\n    defaultValues: defaultValues,\n    resolver: yupResolver(utils.form.getValidationSchema(validationSchema)),\n    mode: 'onChange'\n  });\n  var groups = utils.risk.getGroups(fields);\n  var groupsTitles = Object.entries(groups).map(function (group, index) {\n    return startCase(group[0]);\n  });\n  var groupsIDs = Object.entries(groups).map(function (group, index) {\n    return group[0];\n  });\n  var steps = [].concat(_toConsumableArray(getSteps(groupsTitles)), [utils.string.t('risks.addRiskConfirmation')]);\n  useEffect(function () {\n    var fieldGroups = _objectSpread({}, groups);\n\n    var fieldGroupsArray = Object.entries(fieldGroups).map(function (group, index) {\n      return group;\n    });\n    setStepFields(fieldGroupsArray);\n  }, [fields]);\n  useEffect(function () {\n    var validateFields = fields.filter(function (field) {\n      var condition = utils.risk.getCondition(field, fields);\n      var isValid = !condition || condition && utils.risk.isConditionValid(condition, methods.watch(condition.name));\n      return isValid ? true : false;\n    });\n    if ((validationSchema === null || validationSchema === void 0 ? void 0 : validationSchema.length) !== (validateFields === null || validateFields === void 0 ? void 0 : validateFields.length)) setValidationSchema(validateFields);\n  }, [methods.formState]);\n\n  var totalSteps = function totalSteps() {\n    return steps.length;\n  };\n\n  var completedSteps = function completedSteps() {\n    return Object.keys(completed).length;\n  };\n\n  var isLastStep = function isLastStep() {\n    return activeStep === totalSteps() - 1;\n  };\n\n  var allStepsCompleted = function allStepsCompleted() {\n    return completedSteps() === totalSteps() - 1;\n  };\n\n  var handleStep = function handleStep(step) {\n    return function () {\n      setActiveStep(step);\n    };\n  };\n\n  var handleComplete = function handleComplete() {\n    var newCompleted = completed;\n    newCompleted[activeStep] = true;\n    setCompleted(newCompleted);\n  };\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var schemaFields, validateFields, isStepValid, newActiveStep;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              schemaFields = stepFields[activeStep] ? stepFields[activeStep][1] : [];\n              validateFields = schemaFields.filter(function (field) {\n                var condition = utils.risk.getCondition(field, fields);\n                var isValid = !condition || condition && utils.risk.isConditionValid(condition, methods.watch(condition.name));\n                return isValid ? true : false;\n              }).map(function (field) {\n                return field.name;\n              }).filter(function (field) {\n                return field ? true : false;\n              });\n              _context.next = 4;\n              return methods.trigger(validateFields);\n\n            case 4:\n              isStepValid = _context.sent;\n\n              if (isStepValid) {\n                handleComplete();\n                newActiveStep = isLastStep() && !allStepsCompleted() ? // It's the last step, but not all steps have been completed,\n                // find the first step that has been completed\n                steps.findIndex(function (step, i) {\n                  return !(i in completed);\n                }) : activeStep + 1;\n                setActiveStep(newActiveStep);\n              }\n\n            case 6:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNext() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var onSave = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n      var data;\n      return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n        while (1) {\n          switch (_context2.prev = _context2.next) {\n            case 0:\n              data = methods.getValues();\n\n              if (data.clientId && utils.generic.isValidObject(data.clientId)) {\n                handleDraftSave(data);\n              } else {\n                methods.trigger('clientId', {\n                  shouldFocus: true\n                });\n              }\n\n            case 2:\n            case \"end\":\n              return _context2.stop();\n          }\n        }\n      }, _callee2);\n    }));\n\n    return function onSave() {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var onSubmit = /*#__PURE__*/function () {\n    var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee3(data) {\n      var res;\n      return _regeneratorRuntime.wrap(function _callee3$(_context3) {\n        while (1) {\n          switch (_context3.prev = _context3.next) {\n            case 0:\n              _context3.next = 2;\n              return handleSubmit(data);\n\n            case 2:\n              res = _context3.sent;\n              !isReQuote && history.push(\"\".concat(config.routes.quoteBind.riskDetails, \"/\").concat(res === null || res === void 0 ? void 0 : res.id));\n\n            case 4:\n            case \"end\":\n              return _context3.stop();\n          }\n        }\n      }, _callee3);\n    }));\n\n    return function onSubmit(_x) {\n      return _ref4.apply(this, arguments);\n    };\n  }();\n\n  var onError = function onError(errors, e) {\n    return console.log(errors, e);\n  };\n\n  function getStepContent(step, fieldsArray) {\n    var _fieldsArray$;\n\n    return ((_fieldsArray$ = fieldsArray[1]) === null || _fieldsArray$ === void 0 ? void 0 : _fieldsArray$.length) ? /*#__PURE__*/_jsxDEV(RenderStep, {\n      fieldsArray: fieldsArray[1],\n      fields: fields,\n      definitionsFields: definitionsFields,\n      classes: classes,\n      options: {\n        gridSize: {\n          xs: 12,\n          md: 4,\n          xl: 4\n        }\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 169,\n      columnNumber: 7\n    }, this) : null;\n  }\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        p: 4,\n        children: /*#__PURE__*/_jsxDEV(Skeleton, {\n          height: 58,\n          variant: \"rect\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 184,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 183,\n        columnNumber: 11\n      }, this)\n    }, void 0, false) : /*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      children: steps.map(function (label, index) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          onClick: handleStep(index),\n          completed: completed[index],\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: classes.iconContainer\n              }\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 191,\n            columnNumber: 15\n          }, _this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 190,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 188,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 203,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormProvider, _objectSpread(_objectSpread({}, methods), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: /*#__PURE__*/_jsxDEV(\"form\", {\n          children: /*#__PURE__*/_jsxDEV(\"div\", {\n            type: \"dialog\",\n            autoComplete: \"off\",\n            \"data-testid\": \"risk-form\",\n            children: [/*#__PURE__*/_jsxDEV(FormFields, {\n              type: \"dialog\",\n              nestedClasses: {\n                root: isLastStep() ? classes.summary : classes.formContent\n              },\n              children: isLoading ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: /*#__PURE__*/_jsxDEV(FormSkeleton, {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false) : /*#__PURE__*/_jsxDEV(_Fragment, {\n                children: stepFields[activeStep] ? getStepContent(activeStep, stepFields[activeStep]) : isLastStep() ? /*#__PURE__*/_jsxDEV(RiskData, {\n                  handleStep: handleStep,\n                  groups: groupsIDs,\n                  definitionsFields: fields,\n                  riskDataValues: riskDataValues,\n                  isReQuote: isReQuote\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 23\n                }, this) : null\n              }, void 0, false)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 208,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n              type: \"dialog\",\n              children: [!isReQuote ? /*#__PURE__*/_jsxDEV(Button, {\n                onClick: onSave,\n                color: \"secondary\",\n                variant: \"contained\",\n                children: utils.string.t('app.saveDraft')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 231,\n                columnNumber: 19\n              }, this) : null, /*#__PURE__*/_jsxDEV(Button, {\n                disabled: activeStep === 0,\n                onClick: handleBack,\n                className: classes.button,\n                children: utils.string.t('app.backToPrevious')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 235,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Button, {\n                variant: \"contained\",\n                disabled: methods.formState.isSubmitting,\n                color: \"primary\",\n                onClick: function onClick() {\n                  return isLastStep() && methods.formState.isValid ? methods.handleSubmit(onSubmit, onError)() : handleNext();\n                },\n                children: isLastStep() && methods.formState.isValid ? /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"app.submit\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 244,\n                  columnNumber: 64\n                }, this) : \"Next\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 238,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 229,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 207,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 206,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 205,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 204,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 180,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiStepForm, \"8b/U2HR91PytbSKJ6aZiyArsyig=\", false, function () {\n  return [useHistory, useForm];\n});\n\n_c = MultiStepForm;\nMultiStepForm.displayName = \"MultiStepForm\";\nMultiStepForm.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MultiStepForm\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditQuoteBind\\\\MultiStepForm.js\"] = {\n    name: \"MultiStepForm\",\n    docgenInfo: MultiStepForm.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditQuoteBind\\\\MultiStepForm.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiStepForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditQuoteBind/MultiStepForm.js"],"names":["React","useState","useEffect","FormProvider","useForm","yupResolver","useHistory","capitalize","startCase","utils","makeStyles","Box","Stepper","Step","StepLabel","Button","LinearProgress","Skeleton","styles","FormActions","FormFields","Translate","RiskData","RenderStep","FormSkeleton","config","getSteps","steps","map","step","MultiStepForm","fields","isReQuote","defaultValues","riskDataValues","handleSubmit","definitionsFields","hasCountryOfOrigin","isLoading","productType","handleDraftSave","fullScreen","classes","name","activeStep","setActiveStep","completed","setCompleted","stepFields","setStepFields","progress","setProgress","validationSchema","setValidationSchema","history","length","methods","shouldUnregister","resolver","form","getValidationSchema","mode","groups","risk","getGroups","groupsTitles","Object","entries","group","index","groupsIDs","string","t","fieldGroups","fieldGroupsArray","validateFields","filter","field","condition","getCondition","isValid","isConditionValid","watch","formState","totalSteps","completedSteps","keys","isLastStep","allStepsCompleted","handleStep","handleComplete","newCompleted","handleNext","schemaFields","trigger","isStepValid","newActiveStep","findIndex","i","handleBack","prevActiveStep","onSave","data","getValues","clientId","generic","isValidObject","shouldFocus","onSubmit","res","push","routes","quoteBind","riskDetails","id","onError","errors","e","console","log","getStepContent","fieldsArray","gridSize","xs","md","xl","root","label","iconContainer","linearProgress","summary","formContent","button","isSubmitting"],"mappings":"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","sourcesContent":["/* eslint-disable react-hooks/exhaustive-deps */\r\nimport React, { useState, useEffect } from 'react';\r\nimport { FormProvider, useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory } from 'react-router';\r\n\r\nimport capitalize from 'lodash/capitalize';\r\nimport startCase from 'lodash/startCase';\r\n\r\nimport * as utils from 'utils';\r\n\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport Box from '@material-ui/core/Box';\r\nimport Stepper from '@material-ui/core/Stepper';\r\nimport Step from '@material-ui/core/Step';\r\nimport StepLabel from '@material-ui/core/StepLabel';\r\nimport Button from '@material-ui/core/Button';\r\nimport LinearProgress from '@material-ui/core/LinearProgress';\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\n\r\nimport styles from './AddEditQuoteBind.style';\r\nimport { FormActions, FormFields, Translate, RiskData } from 'components';\r\n\r\nimport RenderStep from './RenderStep';\r\nimport FormSkeleton from './FormSkeleton';\r\n\r\nimport config from 'config';\r\n\r\nfunction getSteps(steps) {\r\n  return steps.map((step) => capitalize(step));\r\n}\r\n\r\nexport default function MultiStepForm({\r\n  fields,\r\n  isReQuote,\r\n  defaultValues,\r\n  riskDataValues,\r\n  handleSubmit,\r\n  definitionsFields,\r\n  hasCountryOfOrigin,\r\n  isLoading,\r\n  productType,\r\n  handleDraftSave,\r\n  fullScreen,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'MultiStepForm' })({ fullScreen });\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [completed, setCompleted] = useState({});\r\n  const [stepFields, setStepFields] = useState([]);\r\n  const [progress, setProgress] = useState(0);\r\n  const [validationSchema, setValidationSchema] = useState([]);\r\n  const history = useHistory();\r\n\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep]);\r\n\r\n  const methods = useForm({\r\n    shouldUnregister: false,\r\n    defaultValues,\r\n    resolver: yupResolver(utils.form.getValidationSchema(validationSchema)),\r\n    mode: 'onChange',\r\n  });\r\n\r\n  const groups = utils.risk.getGroups(fields);\r\n  const groupsTitles = Object.entries(groups).map((group, index) => {\r\n    return startCase(group[0]);\r\n  });\r\n\r\n  const groupsIDs = Object.entries(groups).map((group, index) => {\r\n    return group[0];\r\n  });\r\n\r\n  const steps = [...getSteps(groupsTitles), utils.string.t('risks.addRiskConfirmation')];\r\n\r\n  useEffect(() => {\r\n    const fieldGroups = { ...groups };\r\n    const fieldGroupsArray = Object.entries(fieldGroups).map((group, index) => group);\r\n    setStepFields(fieldGroupsArray);\r\n  }, [fields]);\r\n\r\n  useEffect(() => {\r\n    const validateFields = fields.filter((field) => {\r\n      const condition = utils.risk.getCondition(field, fields);\r\n      const isValid = !condition || (condition && utils.risk.isConditionValid(condition, methods.watch(condition.name)));\r\n\r\n      return isValid ? true : false;\r\n    });\r\n\r\n    if (validationSchema?.length !== validateFields?.length) setValidationSchema(validateFields);\r\n  }, [methods.formState]);\r\n\r\n  const totalSteps = () => {\r\n    return steps.length;\r\n  };\r\n\r\n  const completedSteps = () => {\r\n    return Object.keys(completed).length;\r\n  };\r\n\r\n  const isLastStep = () => {\r\n    return activeStep === totalSteps() - 1;\r\n  };\r\n\r\n  const allStepsCompleted = () => {\r\n    return completedSteps() === totalSteps() - 1;\r\n  };\r\n\r\n  const handleStep = (step) => () => {\r\n    setActiveStep(step);\r\n  };\r\n\r\n  const handleComplete = () => {\r\n    const newCompleted = completed;\r\n    newCompleted[activeStep] = true;\r\n    setCompleted(newCompleted);\r\n  };\r\n\r\n  const handleNext = async () => {\r\n    const schemaFields = stepFields[activeStep] ? stepFields[activeStep][1] : [];\r\n\r\n    const validateFields = schemaFields\r\n      .filter((field) => {\r\n        const condition = utils.risk.getCondition(field, fields);\r\n        const isValid = !condition || (condition && utils.risk.isConditionValid(condition, methods.watch(condition.name)));\r\n\r\n        return isValid ? true : false;\r\n      })\r\n      .map((field) => field.name)\r\n      .filter((field) => (field ? true : false));\r\n\r\n    const isStepValid = await methods.trigger(validateFields);\r\n\r\n    if (isStepValid) {\r\n      handleComplete();\r\n\r\n      const newActiveStep =\r\n        isLastStep() && !allStepsCompleted()\r\n          ? // It's the last step, but not all steps have been completed,\r\n            // find the first step that has been completed\r\n            steps.findIndex((step, i) => !(i in completed))\r\n          : activeStep + 1;\r\n      setActiveStep(newActiveStep);\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const onSave = async () => {\r\n    const data = methods.getValues();\r\n    if (data.clientId && utils.generic.isValidObject(data.clientId)) {\r\n      handleDraftSave(data);\r\n    } else {\r\n      methods.trigger('clientId', { shouldFocus: true });\r\n    }\r\n  };\r\n\r\n  const onSubmit = async (data) => {\r\n    const res = await handleSubmit(data);\r\n    !isReQuote && history.push(`${config.routes.quoteBind.riskDetails}/${res?.id}`);\r\n  };\r\n\r\n  const onError = (errors, e) => console.log(errors, e);\r\n\r\n  function getStepContent(step, fieldsArray) {\r\n    return fieldsArray[1]?.length ? (\r\n      <RenderStep\r\n        fieldsArray={fieldsArray[1]}\r\n        fields={fields}\r\n        definitionsFields={definitionsFields}\r\n        classes={classes}\r\n        options={{ gridSize: { xs: 12, md: 4, xl: 4 } }}\r\n      />\r\n    ) : null;\r\n  }\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      {isLoading ? (\r\n        <>\r\n          <Box p={4}>\r\n            <Skeleton height={58} variant=\"rect\" />\r\n          </Box>\r\n        </>\r\n      ) : (\r\n        <Stepper alternativeLabel activeStep={activeStep}>\r\n          {steps.map((label, index) => (\r\n            <Step key={label} onClick={handleStep(index)} completed={completed[index]}>\r\n              <StepLabel\r\n                StepIconProps={{\r\n                  classes: { root: classes.iconContainer },\r\n                }}\r\n              >\r\n                {label}\r\n              </StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      )}\r\n\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      <FormProvider {...methods}>\r\n        <Box>\r\n          <form>\r\n            <div type=\"dialog\" autoComplete=\"off\" data-testid=\"risk-form\">\r\n              <FormFields type=\"dialog\" nestedClasses={{ root: isLastStep() ? classes.summary : classes.formContent }}>\r\n                {isLoading ? (\r\n                  <>\r\n                    <FormSkeleton />\r\n                  </>\r\n                ) : (\r\n                  <>\r\n                    {stepFields[activeStep] ? (\r\n                      getStepContent(activeStep, stepFields[activeStep])\r\n                    ) : isLastStep() ? (\r\n                      <RiskData\r\n                        handleStep={handleStep}\r\n                        groups={groupsIDs}\r\n                        definitionsFields={fields}\r\n                        riskDataValues={riskDataValues}\r\n                        isReQuote={isReQuote}\r\n                      />\r\n                    ) : null}\r\n                  </>\r\n                )}\r\n              </FormFields>\r\n              <FormActions type=\"dialog\">\r\n                {!isReQuote ? (\r\n                  <Button onClick={onSave} color=\"secondary\" variant=\"contained\">\r\n                    {utils.string.t('app.saveDraft')}\r\n                  </Button>\r\n                ) : null}\r\n                <Button disabled={activeStep === 0} onClick={handleBack} className={classes.button}>\r\n                  {utils.string.t('app.backToPrevious')}\r\n                </Button>\r\n                <Button\r\n                  variant=\"contained\"\r\n                  disabled={methods.formState.isSubmitting}\r\n                  color=\"primary\"\r\n                  onClick={() => (isLastStep() && methods.formState.isValid ? methods.handleSubmit(onSubmit, onError)() : handleNext())}\r\n                >\r\n                  {isLastStep() && methods.formState.isValid ? <Translate label=\"app.submit\" /> : `Next`}\r\n                </Button>\r\n              </FormActions>\r\n            </div>\r\n          </form>\r\n        </Box>\r\n      </FormProvider>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}