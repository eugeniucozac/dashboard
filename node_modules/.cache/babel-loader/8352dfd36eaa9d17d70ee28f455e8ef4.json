{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment'; // app\n\nimport styles from './LinkClaimPolicy.styles';\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\nimport { FormGrid } from 'components';\nimport { getInterest, getClaimDetails, getPolicyInsures, getPolicyClients, getPolicySections, selectClaimsPolicySections, selectClaimsInterestItems, selectClaimPolicyInsures, selectSectionEnabledUG, selectClaimsUnderwritingGroups, selectClaimPolicyClients, selectAllClaimDetails, postClaimDetailsInformation, postEditClaimDetailsInformation, selectLinkPoliciesData, getLinkPoliciesData, selectRefDataNewCountriesList, selectClaimsInterest, selectIsClaimPolicyClientsLoading, selectPolicySectionIsLoading, selectisClaimPolicyInsuresLoading, selectClaimsInformation, selectRefDataSettlementCurrency, selectRefDataBaseCurrency } from 'stores';\nimport * as utils from 'utils';\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts'; //mui\n\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedClaimPolicy(_ref) {\n  _s();\n\n  var _interest,\n      _settlementCurriencie,\n      _useSelector,\n      _countriesList,\n      _originalCurrencies,\n      _linkPoliciesData$dat7,\n      _isFormsEdited$index2,\n      _isFormsEdited$index3,\n      _isFormsEdited$index4,\n      _isFormsEdited$index5,\n      _isFormsEdited$index6,\n      _linkPoliciesData$dat8,\n      _interest2,\n      _interest3,\n      _linkPoliciesData$dat9,\n      _isFormsEdited$index7,\n      _linkPoliciesData$dat10,\n      _linkPoliciesData$dat11,\n      _linkPoliciesData$dat12,\n      _this = this;\n\n  var policyData = _ref.policyData,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      setSelectedPolicyRender = _ref.setSelectedPolicyRender,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      setActiveStep = _ref.setActiveStep,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      sectionEnabledValidationFlag = _ref.sectionEnabledValidationFlag,\n      claimInfo = _ref.claimInfo,\n      handleFormStatus = _ref.handleFormStatus,\n      selectNextPolicy = _ref.selectNextPolicy,\n      setSelectNextPolicy = _ref.setSelectNextPolicy;\n  var classes = makeStyles(styles, {\n    name: 'LinkClaimPolicy'\n  })();\n  var dispatch = useDispatch();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      uwResetKey = _useState2[0],\n      setUWResetKey = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      stepper = _useState4[0],\n      setStepper = _useState4[1];\n\n  var interest = useSelector(selectClaimsInterestItems);\n  interest = utils.generic.isValidArray(interest) ? (_interest = interest) === null || _interest === void 0 ? void 0 : _interest.map(function (intrst) {\n    return _objectSpread(_objectSpread({}, intrst), {}, {\n      description: \"\".concat(intrst.code, \" - \").concat(intrst.description)\n    });\n  }) : null;\n  var allSettlementCurriencies = useSelector(selectRefDataSettlementCurrency);\n  var settlementCurriencies = utils.referenceData.settlementCurrencyTypes.getAllById(allSettlementCurriencies, policyData === null || policyData === void 0 ? void 0 : policyData.xbInstanceID);\n  settlementCurriencies = utils.generic.isValidArray(settlementCurriencies) ? (_settlementCurriencie = settlementCurriencies) === null || _settlementCurriencie === void 0 ? void 0 : _settlementCurriencie.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      currencyName: \"\".concat(currency.currencyCd, \" - \").concat(currency.currencyName)\n    });\n  }) : null;\n  var allClaimDetails = useSelector(selectAllClaimDetails);\n  var underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var claimPolicyInsures = useSelector(selectClaimPolicyInsures);\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var claimPolicyClients = useSelector(selectClaimPolicyClients);\n  var isInterestLoading = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.isLoading;\n  var isPoliciesClientsLoading = useSelector(selectIsClaimPolicyClientsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var isInsuredLoading = useSelector(selectisClaimPolicyInsuresLoading);\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var countriesList = useSelector(selectRefDataNewCountriesList);\n  countriesList = utils.generic.isValidArray(countriesList) ? (_countriesList = countriesList) === null || _countriesList === void 0 ? void 0 : _countriesList.map(function (country) {\n    return _objectSpread(_objectSpread({}, country), {}, {\n      countryName: \"\".concat(country.countryCode, \" - \").concat(country.countryName)\n    });\n  }) : null;\n  var linkPoliciesData = useSelector(selectLinkPoliciesData);\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  var allOriginalCurrencies = useSelector(selectRefDataBaseCurrency);\n  var originalCurrencies = utils.referenceData.baseCurrenyTypes.getAllById(allOriginalCurrencies, policyData === null || policyData === void 0 ? void 0 : policyData.xbInstanceID);\n  originalCurrencies = utils.generic.isValidArray(originalCurrencies) ? (_originalCurrencies = originalCurrencies) === null || _originalCurrencies === void 0 ? void 0 : _originalCurrencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      currencyName: \"\".concat(currency.currencyCd, \" - \").concat(currency.currencyName)\n    });\n  }) : null;\n  useEffect(function () {\n    if (selectedPolicyRender !== '') {\n      dispatch(getInterest({\n        viewLoader: false\n      }));\n      dispatch(getPolicyInsures({\n        viewLoader: false\n      }));\n      isSectionEnabled && dispatch(getPolicySections({\n        viewLoader: false\n      }));\n      dispatch(getPolicyClients({\n        viewLoader: false\n      })).then(function (response) {\n        if (utils.generic.isValidArray(response)) {\n          dispatch(getLinkPoliciesData({\n            loader: true,\n            fieldLoader: false\n          }));\n          setUWResetKey(new Date().getTime());\n        }\n      });\n      dispatch(getClaimDetails());\n    }\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var sectionAllOption = (policyData === null || policyData === void 0 ? void 0 : policyData.policyType) === CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyInfo = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n\n  var postSaveHandler = function postSaveHandler(postData) {\n    if (!(claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID)) {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formState[index]['formEditedStatus'] = false;\n          formState[index]['isSubmitted'] = false;\n          setFormEditedStatus(formState);\n          setValidation(false);\n        }\n      });\n    } else {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formState[index]['formEditedStatus'] = false;\n          formState[index]['isSubmitted'] = false;\n          setFormEditedStatus(formState);\n          setValidation(false);\n        }\n      });\n    }\n  };\n\n  var postEditSaveHandler = function postEditSaveHandler(postData) {\n    utils.dms.resetDmsFiles(dispatch);\n\n    if (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID) {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formState[index]['formEditedStatus'] = false;\n          formState[index]['isSubmitted'] = true;\n          setFormEditedStatus(formState);\n          typeof (response === null || response === void 0 ? void 0 : response.claimReference) === 'string' && setActiveStep(index + 1);\n          setValidation(true);\n          setSelectedPolicyRender('');\n        }\n      });\n    } else {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n          formState[index]['formEditedStatus'] = false;\n          formState[index]['isSubmitted'] = true;\n          setFormEditedStatus(formState);\n          typeof (response === null || response === void 0 ? void 0 : response.claimReference) === 'string' && setActiveStep(index + 1);\n          setValidation(true);\n          setSelectedPolicyRender('');\n        }\n      });\n    }\n  };\n\n  var postSaveNextHanlder = function postSaveNextHanlder(postData) {\n    if (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID) {\n      var policyUpdated = true;\n      dispatch(postEditClaimDetailsInformation(postData, policyUpdated)).then(function (response) {\n        if (response) {\n          var _isFormsEdited$index;\n\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n            return _objectSpread({}, form);\n          });\n\n          if ((_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) {\n            formState[index]['formEditedStatus'] = false;\n            formState[index]['isSubmitted'] = false;\n            setFormEditedStatus(formState);\n            typeof (response === null || response === void 0 ? void 0 : response.claimReference) === 'string' && setActiveStep(index + 1);\n            setValidation(true);\n            setSelectNextPolicy(false);\n          } else {\n            formState[index]['formEditedStatus'] = false;\n            formState[index]['isSubmitted'] = true;\n            setFormEditedStatus(formState);\n            setValidation(true);\n            setSelectedPolicyRender('');\n            setSelectNextPolicy(false);\n          }\n        }\n      });\n    }\n  };\n\n  var clientValue = function clientValue(claimPolicyClients) {\n    var _linkPoliciesData$dat;\n\n    return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat = linkPoliciesData.data) === null || _linkPoliciesData$dat === void 0 ? void 0 : _linkPoliciesData$dat.client) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.find(function (clmPolicyclnt) {\n      return clmPolicyclnt.id === linkPoliciesData.data.client.id;\n    }) : (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.clientID) ? claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.find(function (clmPolicyclnt) {\n      var _claimInfo$clientID;\n\n      return clmPolicyclnt.id === (claimInfo === null || claimInfo === void 0 ? void 0 : (_claimInfo$clientID = claimInfo.clientID) === null || _claimInfo$clientID === void 0 ? void 0 : _claimInfo$clientID.toString());\n    }) : (claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.length) === 1 ? claimPolicyClients[0] : null;\n  };\n\n  var countryCodeValue = function countryCodeValue(countriesList) {\n    var _linkPoliciesData$dat2;\n\n    return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat2 = linkPoliciesData.data) === null || _linkPoliciesData$dat2 === void 0 ? void 0 : _linkPoliciesData$dat2.countryCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? countriesList === null || countriesList === void 0 ? void 0 : countriesList.find(function (country) {\n      return country.countryCode === linkPoliciesData.data.countryCode.countryCode;\n    }) : (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.settlementCountry) ? countriesList === null || countriesList === void 0 ? void 0 : countriesList.find(function (country) {\n      return country.countryCode === claimInfo.settlementCountry;\n    }) : null;\n  };\n\n  var originalCurrencyValue = function originalCurrencyValue() {\n    var _linkPoliciesData$dat3, _originalCurrencies2, _originalCurrencies3, _originalCurrencies4;\n\n    return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat3 = linkPoliciesData.data) === null || _linkPoliciesData$dat3 === void 0 ? void 0 : _linkPoliciesData$dat3.originalCurrencyCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_originalCurrencies2 = originalCurrencies) === null || _originalCurrencies2 === void 0 ? void 0 : _originalCurrencies2.find(function (currency) {\n      var _linkPoliciesData$dat4, _linkPoliciesData$dat5;\n\n      return currency.currencyCd === (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat4 = linkPoliciesData.data) === null || _linkPoliciesData$dat4 === void 0 ? void 0 : (_linkPoliciesData$dat5 = _linkPoliciesData$dat4.originalCurrencyCode) === null || _linkPoliciesData$dat5 === void 0 ? void 0 : _linkPoliciesData$dat5.currencyCd);\n    }) : (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.originalCurrency) ? (_originalCurrencies3 = originalCurrencies) === null || _originalCurrencies3 === void 0 ? void 0 : _originalCurrencies3.find(function (currency) {\n      return (currency === null || currency === void 0 ? void 0 : currency.currencyCd) === (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.originalCurrency);\n    }) : (_originalCurrencies4 = originalCurrencies) === null || _originalCurrencies4 === void 0 ? void 0 : _originalCurrencies4.find(function (currency) {\n      return (currency === null || currency === void 0 ? void 0 : currency.currencyCd) === (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.originalCurrency);\n    });\n  };\n\n  var settlementCurrencyValue = function settlementCurrencyValue() {\n    var _linkPoliciesData$dat6, _settlementCurriencie2, _settlementCurriencie3, _settlementCurriencie4;\n\n    return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat6 = linkPoliciesData.data) === null || _linkPoliciesData$dat6 === void 0 ? void 0 : _linkPoliciesData$dat6.originalCurrencyCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_settlementCurriencie2 = settlementCurriencies) === null || _settlementCurriencie2 === void 0 ? void 0 : _settlementCurriencie2.find(function (currency) {\n      return currency.currencyCd === linkPoliciesData.data.settlementCurrencyCode.currencyCd;\n    }) : (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.settlementCurrencyCode) ? (_settlementCurriencie3 = settlementCurriencies) === null || _settlementCurriencie3 === void 0 ? void 0 : _settlementCurriencie3.find(function (currency) {\n      return (currency === null || currency === void 0 ? void 0 : currency.currencyCd) === (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.settlementCurrencyCode);\n    }) : (_settlementCurriencie4 = settlementCurriencies) === null || _settlementCurriencie4 === void 0 ? void 0 : _settlementCurriencie4.find(function (currency) {\n      return (currency === null || currency === void 0 ? void 0 : currency.currencyCd) === (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.settlementCurrencyCode);\n    });\n  };\n\n  var fields = [{\n    name: 'insured',\n    type: 'autocompletemui',\n    options: claimPolicyInsures || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('claims.claimInformation.insured'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat7 = linkPoliciesData.data) === null || _linkPoliciesData$dat7 === void 0 ? void 0 : _linkPoliciesData$dat7.insured) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.find(function (clmPolicy) {\n      return clmPolicy.id === linkPoliciesData.data.insured.id;\n    }) : (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.insuredID) ? claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.find(function (clmPolicy) {\n      var _claimInfo$insuredID;\n\n      return clmPolicy.id === (claimInfo === null || claimInfo === void 0 ? void 0 : (_claimInfo$insuredID = claimInfo.insuredID) === null || _claimInfo$insuredID === void 0 ? void 0 : _claimInfo$insuredID.toString());\n    }) : (claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.length) === 1 ? claimPolicyInsures[0] : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'client',\n    type: 'autocompletemui',\n    options: claimPolicyClients || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('claims.claimInformation.client'),\n    value: clientValue(claimPolicyClients),\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'countryCode',\n    type: 'autocompletemui',\n    options: countriesList || [],\n    optionKey: 'countryCode',\n    optionLabel: 'countryName',\n    label: utils.string.t('claims.claimInformation.country'),\n    value: countryCodeValue(countriesList),\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'originalCurrencyCode',\n    type: 'autocompletemui',\n    options: originalCurrencies || [],\n    optionKey: 'currencyCd',\n    optionLabel: 'currencyName',\n    label: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: originalCurrencyValue(),\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'settlementCurrencyCode',\n    type: 'autocompletemui',\n    options: settlementCurriencies || [],\n    optionKey: 'currencyCd',\n    optionLabel: 'currencyName',\n    label: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: settlementCurrencyValue(),\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'interest',\n    type: 'autocompletemui',\n    options: interest,\n    label: utils.string.t('claims.claimInformation.interest'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat8 = linkPoliciesData.data) === null || _linkPoliciesData$dat8 === void 0 ? void 0 : _linkPoliciesData$dat8.interest) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_interest2 = interest) === null || _interest2 === void 0 ? void 0 : _interest2.find(function (intrst) {\n      return intrst.xbPolicyID === linkPoliciesData.data.interest.xbPolicyID;\n    }) : ((_interest3 = interest) === null || _interest3 === void 0 ? void 0 : _interest3.length) === 1 ? interest[0] : null,\n    optionKey: 'xbPolicyID',\n    optionLabel: 'description'\n  }, {\n    name: 'movementType',\n    type: 'toggle',\n    label: '',\n    value: linkPoliciesData.data.movementType || claimsInformation.movementType || 'Advice',\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.advice'),\n      value: 'Advice'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.settlement'),\n      value: 'Settlement'\n    }]\n  }, {\n    name: 'order',\n    type: 'radio',\n    defaultValue: '100',\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n      value: '100'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.ourShare'),\n      value: '0'\n    }]\n  }, {\n    name: 'orderPercentage',\n    type: 'number',\n    defaultValue: underWritingGroups.percentageOfSelected || '0',\n    value: underWritingGroups.percentageOfSelected || '0',\n    muiComponentProps: {\n      disabled: true\n    },\n    validation: Yup.number().min(0, utils.string.t('claims.typeOfSettlement.errorMin')).max(100, utils.string.t('claims.typeOfSettlement.error'))\n  }].concat(_toConsumableArray(isBordereauFlag ? [{\n    name: 'certificateNumber',\n    type: 'text',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateNumber) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat9 = linkPoliciesData.data) === null || _linkPoliciesData$dat9 === void 0 ? void 0 : _linkPoliciesData$dat9.certificateNumber) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index7 = isFormsEdited[index]) === null || _isFormsEdited$index7 === void 0 ? void 0 : _isFormsEdited$index7.formEditedStatus) ? Yup.string().nullable().required(utils.string.t('validation.required')).max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }) : false\n  }, {\n    type: 'datepicker',\n    name: 'certificateInceptionDate',\n    value: (policyData === null || policyData === void 0 ? void 0 : policyData.inceptionDate) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat10 = linkPoliciesData.data) === null || _linkPoliciesData$dat10 === void 0 ? void 0 : _linkPoliciesData$dat10.certificateInceptionDate),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().nullable().test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\n      return value && this.options.parent.certificateExpiryDate ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'certificateExpiryDate',\n    value: (policyData === null || policyData === void 0 ? void 0 : policyData.expiryDate) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat11 = linkPoliciesData.data) === null || _linkPoliciesData$dat11 === void 0 ? void 0 : _linkPoliciesData$dat11.certificateExpiryDate),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().nullable().test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\n      return value && this.options.parent.certificateInceptionDate ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }] : []), _toConsumableArray(isSectionEnabled ? [{\n    name: 'ugSections',\n    type: 'autocompletemui',\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat12 = linkPoliciesData.data) === null || _linkPoliciesData$dat12 === void 0 ? void 0 : _linkPoliciesData$dat12.ugSections) || null,\n    options: policyInfo,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: sectionEnabledValidationFlag ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }] : []));\n\n  if (isPoliciesClientsLoading || isInterestLoading || isPolicySectionLoading || isInsuredLoading) {\n    return /*#__PURE__*/_jsxDEV(FormGrid, {\n      container: true,\n      spacing: 4,\n      children: _toConsumableArray(new Array(2)).map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 30,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 458,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 457,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 463,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 464,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 462,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 467,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 468,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 466,\n                columnNumber: 17\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 471,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 472,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 470,\n                columnNumber: 17\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 461,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 460,\n            columnNumber: 13\n          }, _this)]\n        }, \"skeleton-\".concat(index), true, {\n          fileName: _jsxFileName,\n          lineNumber: 456,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 454,\n      columnNumber: 7\n    }, this);\n  }\n\n  return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) !== '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm) !== '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.loader) && /*#__PURE__*/_jsxDEV(LinkClaimPolicyView, {\n    fields: fields,\n    policyData: policyData,\n    claimPolicyInsures: claimPolicyInsures,\n    allClaimDetails: allClaimDetails,\n    originalCurrencyValue: originalCurrencyValue,\n    settlementCurrencyValue: settlementCurrencyValue,\n    interest: interest,\n    uwResetKey: uwResetKey,\n    hasClaimRef: false,\n    underWritingGroups: underWritingGroups,\n    claimPolicyClients: claimPolicyClients,\n    isBordereauFlag: isBordereauFlag,\n    validation: validation,\n    setValidation: setValidation,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    setFormEditedStatus: setFormEditedStatus,\n    postSaveHandler: postSaveHandler,\n    postEditSaveHandler: postEditSaveHandler,\n    saveStatus: saveStatus,\n    selectedPolicyRender: selectedPolicyRender,\n    handleFormStatus: handleFormStatus,\n    stepper: stepper,\n    setStepper: setStepper,\n    selectNextPolicy: selectNextPolicy,\n    postSaveNextHanlder: postSaveNextHanlder,\n    fieldsLoader: {\n      isPoliciesClientsLoading: isPoliciesClientsLoading,\n      isInterestLoading: isInterestLoading,\n      isPolicySectionLoading: isPolicySectionLoading,\n      isInsuredLoading: isInsuredLoading\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 486,\n    columnNumber: 7\n  }, this);\n}\n\n_s(SelectedClaimPolicy, \"Mp66gz+/sjcYBmsV+JRZezLNSLE=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SelectedClaimPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedClaimPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.js"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","Yup","moment","styles","LinkClaimPolicyView","FormGrid","getInterest","getClaimDetails","getPolicyInsures","getPolicyClients","getPolicySections","selectClaimsPolicySections","selectClaimsInterestItems","selectClaimPolicyInsures","selectSectionEnabledUG","selectClaimsUnderwritingGroups","selectClaimPolicyClients","selectAllClaimDetails","postClaimDetailsInformation","postEditClaimDetailsInformation","selectLinkPoliciesData","getLinkPoliciesData","selectRefDataNewCountriesList","selectClaimsInterest","selectIsClaimPolicyClientsLoading","selectPolicySectionIsLoading","selectisClaimPolicyInsuresLoading","selectClaimsInformation","selectRefDataSettlementCurrency","selectRefDataBaseCurrency","utils","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","Skeleton","makeStyles","SelectedClaimPolicy","policyData","selectedPolicyRender","setSelectedPolicyRender","validation","setValidation","setActiveStep","index","isFormsEdited","setFormEditedStatus","saveStatus","sectionEnabledValidationFlag","claimInfo","handleFormStatus","selectNextPolicy","setSelectNextPolicy","classes","name","dispatch","uwResetKey","setUWResetKey","stepper","setStepper","interest","generic","isValidArray","map","intrst","description","code","allSettlementCurriencies","settlementCurriencies","referenceData","settlementCurrencyTypes","getAllById","xbInstanceID","currency","currencyName","currencyCd","allClaimDetails","underWritingGroups","policySections","claimPolicyInsures","isSectionEnabled","claimPolicyClients","isInterestLoading","isLoading","isPoliciesClientsLoading","isPolicySectionLoading","isInsuredLoading","claimsInformation","countriesList","country","countryName","countryCode","linkPoliciesData","isBordereauFlag","isBordereau","allOriginalCurrencies","originalCurrencies","baseCurrenyTypes","viewLoader","then","response","loader","fieldLoader","Date","getTime","sectionAllOption","policyType","id","string","t","policyInfo","postSaveHandler","postData","claimID","data","formState","form","postEditSaveHandler","dms","resetDmsFiles","claimReference","postSaveNextHanlder","policyUpdated","formEditedStatus","clientValue","client","find","clmPolicyclnt","clientID","toString","length","countryCodeValue","settlementCountry","originalCurrencyValue","originalCurrencyCode","originalCurrency","settlementCurrencyValue","settlementCurrencyCode","fields","type","options","optionKey","optionLabel","label","value","insured","clmPolicy","insuredID","object","nullable","required","when","schema","xbPolicyID","movementType","defaultValue","muiFormGroupProps","row","root","radioLabel","percentageOfSelected","muiComponentProps","disabled","number","min","max","certificateNumber","formInput","inceptionDate","certificateInceptionDate","fullWidth","date","test","parent","certificateExpiryDate","isSameOrBefore","outputFormat","expiryDate","isSameOrAfter","ugSections","Array","item","searchBy","searchTerm"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './LinkClaimPolicy.styles';\r\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\r\nimport { FormGrid } from 'components';\r\nimport {\r\n  getInterest,\r\n  getClaimDetails,\r\n  getPolicyInsures,\r\n  getPolicyClients,\r\n  getPolicySections,\r\n  selectClaimsPolicySections,\r\n  selectClaimsInterestItems,\r\n  selectClaimPolicyInsures,\r\n  selectSectionEnabledUG,\r\n  selectClaimsUnderwritingGroups,\r\n  selectClaimPolicyClients,\r\n  selectAllClaimDetails,\r\n  postClaimDetailsInformation,\r\n  postEditClaimDetailsInformation,\r\n  selectLinkPoliciesData,\r\n  getLinkPoliciesData,\r\n  selectRefDataNewCountriesList,\r\n  selectClaimsInterest,\r\n  selectIsClaimPolicyClientsLoading,\r\n  selectPolicySectionIsLoading,\r\n  selectisClaimPolicyInsuresLoading,\r\n  selectClaimsInformation,\r\n  selectRefDataSettlementCurrency,\r\n  selectRefDataBaseCurrency,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts';\r\n\r\n//mui\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function SelectedClaimPolicy({\r\n  policyData,\r\n  selectedPolicyRender,\r\n  setSelectedPolicyRender,\r\n  validation,\r\n  setValidation,\r\n  setActiveStep,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  sectionEnabledValidationFlag,\r\n  claimInfo,\r\n  handleFormStatus,\r\n  selectNextPolicy,\r\n  setSelectNextPolicy,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'LinkClaimPolicy' })();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const [stepper, setStepper] = useState(false);\r\n\r\n  let interest = useSelector(selectClaimsInterestItems);\r\n  interest = utils.generic.isValidArray(interest)\r\n    ? interest?.map((intrst) => ({ ...intrst, description: `${intrst.code} - ${intrst.description}` }))\r\n    : null;\r\n\r\n  let allSettlementCurriencies = useSelector(selectRefDataSettlementCurrency);\r\n  let settlementCurriencies = utils.referenceData.settlementCurrencyTypes.getAllById(allSettlementCurriencies, policyData?.xbInstanceID);\r\n\r\n  settlementCurriencies = utils.generic.isValidArray(settlementCurriencies)\r\n    ? settlementCurriencies?.map((currency) => ({ ...currency, currencyName: `${currency.currencyCd} - ${currency.currencyName}` }))\r\n    : null;\r\n  const allClaimDetails = useSelector(selectAllClaimDetails);\r\n  const underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const claimPolicyInsures = useSelector(selectClaimPolicyInsures);\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const claimPolicyClients = useSelector(selectClaimPolicyClients);\r\n  const isInterestLoading = useSelector(selectClaimsInterest)?.isLoading;\r\n  const isPoliciesClientsLoading = useSelector(selectIsClaimPolicyClientsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const isInsuredLoading = useSelector(selectisClaimPolicyInsuresLoading);\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n\r\n  let countriesList = useSelector(selectRefDataNewCountriesList);\r\n  countriesList = utils.generic.isValidArray(countriesList)\r\n    ? countriesList?.map((country) => ({ ...country, countryName: `${country.countryCode} - ${country.countryName}` }))\r\n    : null;\r\n  const linkPoliciesData = useSelector(selectLinkPoliciesData);\r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n\r\n  let allOriginalCurrencies = useSelector(selectRefDataBaseCurrency);\r\n  let originalCurrencies = utils.referenceData.baseCurrenyTypes.getAllById(allOriginalCurrencies, policyData?.xbInstanceID);\r\n  originalCurrencies = utils.generic.isValidArray(originalCurrencies)\r\n    ? originalCurrencies?.map((currency) => ({ ...currency, currencyName: `${currency.currencyCd} - ${currency.currencyName}` }))\r\n    : null;\r\n\r\n  useEffect(() => {\r\n    if (selectedPolicyRender !== '') {\r\n      dispatch(getInterest({ viewLoader: false }));\r\n      dispatch(getPolicyInsures({ viewLoader: false }));\r\n      isSectionEnabled && dispatch(getPolicySections({ viewLoader: false }));\r\n      dispatch(getPolicyClients({ viewLoader: false })).then((response) => {\r\n        if (utils.generic.isValidArray(response)) {\r\n          dispatch(getLinkPoliciesData({ loader: true, fieldLoader: false }));\r\n          setUWResetKey(new Date().getTime());\r\n        }\r\n      });\r\n      dispatch(getClaimDetails());\r\n    }\r\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sectionAllOption =\r\n    policyData?.policyType === CLAIM_SECTION_ENABLED_UG[0]\r\n      ? []\r\n      : [{ id: CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyInfo = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const postSaveHandler = (postData) => {\r\n    if (!claimInfo?.claimID) {\r\n      dispatch(postClaimDetailsInformation(postData)).then((response) => {\r\n        if (response) {\r\n          dispatch(getLinkPoliciesData({ data: postData }));\r\n          const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n          formState[index]['formEditedStatus'] = false;\r\n          formState[index]['isSubmitted'] = false;\r\n          setFormEditedStatus(formState);\r\n          setValidation(false);\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response) => {\r\n        if (response) {\r\n          dispatch(getLinkPoliciesData({ data: postData }));\r\n          const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n          formState[index]['formEditedStatus'] = false;\r\n          formState[index]['isSubmitted'] = false;\r\n          setFormEditedStatus(formState);\r\n          setValidation(false);\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const postEditSaveHandler = (postData) => {\r\n    utils.dms.resetDmsFiles(dispatch);\r\n    if (claimInfo?.claimID) {\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response) => {\r\n        if (response) {\r\n          dispatch(getLinkPoliciesData({ data: postData }));\r\n          const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n          formState[index]['formEditedStatus'] = false;\r\n          formState[index]['isSubmitted'] = true;\r\n          setFormEditedStatus(formState);\r\n          typeof response?.claimReference === 'string' && setActiveStep(index + 1);\r\n          setValidation(true);\r\n          setSelectedPolicyRender('');\r\n        }\r\n      });\r\n    } else {\r\n      dispatch(postClaimDetailsInformation(postData)).then((response) => {\r\n        if (response) {\r\n          dispatch(getLinkPoliciesData({ data: postData }));\r\n          const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n          formState[index]['formEditedStatus'] = false;\r\n          formState[index]['isSubmitted'] = true;\r\n          setFormEditedStatus(formState);\r\n          typeof response?.claimReference === 'string' && setActiveStep(index + 1);\r\n          setValidation(true);\r\n          setSelectedPolicyRender('');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const postSaveNextHanlder = (postData) => {\r\n    if (claimInfo?.claimID) {\r\n      const policyUpdated = true;\r\n      dispatch(postEditClaimDetailsInformation(postData, policyUpdated)).then((response) => {\r\n        if (response) {\r\n          dispatch(getLinkPoliciesData({ data: postData }));\r\n          const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n          if (isFormsEdited[index]?.formEditedStatus) {\r\n            formState[index]['formEditedStatus'] = false;\r\n            formState[index]['isSubmitted'] = false;\r\n            setFormEditedStatus(formState);\r\n            typeof response?.claimReference === 'string' && setActiveStep(index + 1);\r\n            setValidation(true);\r\n            setSelectNextPolicy(false);\r\n          } else {\r\n            formState[index]['formEditedStatus'] = false;\r\n            formState[index]['isSubmitted'] = true;\r\n            setFormEditedStatus(formState);\r\n            setValidation(true);\r\n            setSelectedPolicyRender('');\r\n            setSelectNextPolicy(false);\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const clientValue = (claimPolicyClients) => {\r\n    return linkPoliciesData?.data?.client && !linkPoliciesData?.fieldLoader\r\n      ? claimPolicyClients?.find((clmPolicyclnt) => clmPolicyclnt.id === linkPoliciesData.data.client.id)\r\n      : claimInfo?.clientID\r\n      ? claimPolicyClients?.find((clmPolicyclnt) => clmPolicyclnt.id === claimInfo?.clientID?.toString())\r\n      : claimPolicyClients?.length === 1\r\n      ? claimPolicyClients[0]\r\n      : null;\r\n  };\r\n\r\n  const countryCodeValue = (countriesList) => {\r\n    return linkPoliciesData?.data?.countryCode && !linkPoliciesData?.fieldLoader\r\n      ? countriesList?.find((country) => country.countryCode === linkPoliciesData.data.countryCode.countryCode)\r\n      : claimInfo?.settlementCountry\r\n      ? countriesList?.find((country) => country.countryCode === claimInfo.settlementCountry)\r\n      : null;\r\n  };\r\n  const originalCurrencyValue = () => {\r\n    return linkPoliciesData?.data?.originalCurrencyCode && !linkPoliciesData?.fieldLoader\r\n      ? originalCurrencies?.find((currency) => currency.currencyCd === linkPoliciesData?.data?.originalCurrencyCode?.currencyCd)\r\n      : claimInfo?.originalCurrency\r\n      ? originalCurrencies?.find((currency) => currency?.currencyCd === claimInfo?.originalCurrency)\r\n      : originalCurrencies?.find((currency) => currency?.currencyCd === allClaimDetails?.originalCurrency);\r\n  };\r\n  const settlementCurrencyValue = () => {\r\n    return linkPoliciesData?.data?.originalCurrencyCode && !linkPoliciesData?.fieldLoader\r\n      ? settlementCurriencies?.find((currency) => currency.currencyCd === linkPoliciesData.data.settlementCurrencyCode.currencyCd)\r\n      : claimInfo?.settlementCurrencyCode\r\n      ? settlementCurriencies?.find((currency) => currency?.currencyCd === claimInfo?.settlementCurrencyCode)\r\n      : settlementCurriencies?.find((currency) => currency?.currencyCd === allClaimDetails?.settlementCurrencyCode);\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'insured',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyInsures || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('claims.claimInformation.insured'),\r\n      value:\r\n        linkPoliciesData?.data?.insured && !linkPoliciesData?.fieldLoader\r\n          ? claimPolicyInsures?.find((clmPolicy) => clmPolicy.id === linkPoliciesData.data.insured.id)\r\n          : claimInfo?.insuredID\r\n          ? claimPolicyInsures?.find((clmPolicy) => clmPolicy.id === claimInfo?.insuredID?.toString())\r\n          : claimPolicyInsures?.length === 1\r\n          ? claimPolicyInsures[0]\r\n          : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus\r\n        ? Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable()))\r\n        : false,\r\n    },\r\n    {\r\n      name: 'client',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyClients || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('claims.claimInformation.client'),\r\n      value: clientValue(claimPolicyClients),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus\r\n        ? Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable()))\r\n        : false,\r\n    },\r\n    {\r\n      name: 'countryCode',\r\n      type: 'autocompletemui',\r\n      options: countriesList || [],\r\n      optionKey: 'countryCode',\r\n      optionLabel: 'countryName',\r\n      label: utils.string.t('claims.claimInformation.country'),\r\n      value: countryCodeValue(countriesList),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus\r\n        ? Yup.object().nullable().required(utils.string.t('validation.required'))\r\n        : false,\r\n    },\r\n    {\r\n      name: 'originalCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: originalCurrencies || [],\r\n      optionKey: 'currencyCd',\r\n      optionLabel: 'currencyName',\r\n      label: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: originalCurrencyValue(),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus\r\n        ? Yup.object().nullable().required(utils.string.t('validation.required'))\r\n        : false,\r\n    },\r\n    {\r\n      name: 'settlementCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: settlementCurriencies || [],\r\n      optionKey: 'currencyCd',\r\n      optionLabel: 'currencyName',\r\n      label: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: settlementCurrencyValue(),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus\r\n        ? Yup.object().nullable().required(utils.string.t('validation.required'))\r\n        : false,\r\n    },\r\n    {\r\n      name: 'interest',\r\n      type: 'autocompletemui',\r\n      options: interest,\r\n      label: utils.string.t('claims.claimInformation.interest'),\r\n      value:\r\n        linkPoliciesData?.data?.interest && !linkPoliciesData?.fieldLoader\r\n          ? interest?.find((intrst) => intrst.xbPolicyID === linkPoliciesData.data.interest.xbPolicyID)\r\n          : interest?.length === 1\r\n          ? interest[0]\r\n          : null,\r\n      optionKey: 'xbPolicyID',\r\n      optionLabel: 'description',\r\n    },\r\n    {\r\n      name: 'movementType',\r\n      type: 'toggle',\r\n      label: '',\r\n      value: linkPoliciesData.data.movementType || claimsInformation.movementType || 'Advice',\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.advice'),\r\n          value: 'Advice',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.settlement'),\r\n          value: 'Settlement',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'order',\r\n      type: 'radio',\r\n      defaultValue: '100',\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n          value: '100',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.ourShare'),\r\n          value: '0',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'orderPercentage',\r\n      type: 'number',\r\n      defaultValue: underWritingGroups.percentageOfSelected || '0',\r\n      value: underWritingGroups.percentageOfSelected || '0',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n      validation: Yup.number()\r\n        .min(0, utils.string.t('claims.typeOfSettlement.errorMin'))\r\n        .max(100, utils.string.t('claims.typeOfSettlement.error')),\r\n    },\r\n    ...(isBordereauFlag\r\n      ? [\r\n          {\r\n            name: 'certificateNumber',\r\n            type: 'text',\r\n            value: allClaimDetails?.certificateNumber || linkPoliciesData?.data?.certificateNumber || '',\r\n            muiComponentProps: {\r\n              classes: {\r\n                root: classes.formInput,\r\n              },\r\n            },\r\n            validation: isFormsEdited?.[index]?.formEditedStatus\r\n              ? Yup.string()\r\n                  .nullable()\r\n                  .required(utils.string.t('validation.required'))\r\n                  .max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber'))\r\n                  .when('$validation', (validation, schema) => (validation ? schema : Yup.string()))\r\n              : false,\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateInceptionDate',\r\n            value: policyData?.inceptionDate || linkPoliciesData?.data?.certificateInceptionDate,\r\n            muiComponentProps: {\r\n              fullWidth: true,\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\r\n                return value && this.options.parent.certificateExpiryDate\r\n                  ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateExpiryDate',\r\n            value: policyData?.expiryDate || linkPoliciesData?.data?.certificateExpiryDate,\r\n            muiComponentProps: {\r\n              fullWidth: true,\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\r\n                return value && this.options.parent.certificateInceptionDate\r\n                  ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isSectionEnabled\r\n      ? [\r\n          {\r\n            name: 'ugSections',\r\n            type: 'autocompletemui',\r\n            value: linkPoliciesData?.data?.ugSections || null,\r\n            options: policyInfo,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            validation: sectionEnabledValidationFlag\r\n              ? Yup.object()\r\n                  .nullable()\r\n                  .required(utils.string.t('validation.required'))\r\n                  .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable()))\r\n              : false,\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n  if (isPoliciesClientsLoading || isInterestLoading || isPolicySectionLoading || isInsuredLoading) {\r\n    return (\r\n      <FormGrid container spacing={4}>\r\n        {[...new Array(2)].map((item, index) => (\r\n          <Fragment key={`skeleton-${index}`}>\r\n            <FormGrid item xs={12}>\r\n              <Skeleton height={30} width={100} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container spacing={4}>\r\n                <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </Fragment>\r\n        ))}\r\n      </FormGrid>\r\n    );\r\n  }\r\n\r\n  return (\r\n    linkPoliciesData?.searchBy !== '' &&\r\n    linkPoliciesData?.searchTerm !== '' &&\r\n    linkPoliciesData?.loader && (\r\n      <LinkClaimPolicyView\r\n        fields={fields}\r\n        policyData={policyData}\r\n        claimPolicyInsures={claimPolicyInsures}\r\n        allClaimDetails={allClaimDetails}\r\n        originalCurrencyValue={originalCurrencyValue}\r\n        settlementCurrencyValue={settlementCurrencyValue}\r\n        interest={interest}\r\n        uwResetKey={uwResetKey}\r\n        hasClaimRef={false}\r\n        underWritingGroups={underWritingGroups}\r\n        claimPolicyClients={claimPolicyClients}\r\n        isBordereauFlag={isBordereauFlag}\r\n        validation={validation}\r\n        setValidation={setValidation}\r\n        index={index}\r\n        isFormsEdited={isFormsEdited}\r\n        setFormEditedStatus={setFormEditedStatus}\r\n        postSaveHandler={postSaveHandler}\r\n        postEditSaveHandler={postEditSaveHandler}\r\n        saveStatus={saveStatus}\r\n        selectedPolicyRender={selectedPolicyRender}\r\n        handleFormStatus={handleFormStatus}\r\n        stepper={stepper}\r\n        setStepper={setStepper}\r\n        selectNextPolicy={selectNextPolicy}\r\n        postSaveNextHanlder={postSaveNextHanlder}\r\n        fieldsLoader={{\r\n          isPoliciesClientsLoading: isPoliciesClientsLoading,\r\n          isInterestLoading: isInterestLoading,\r\n          isPolicySectionLoading: isPolicySectionLoading,\r\n          isInsuredLoading: isInsuredLoading,\r\n        }}\r\n      />\r\n    )\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}