{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossNotes\\\\LossNotes.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Button, Empty, Overflow, Pagination, TableActions, TableCell, TableFilters, TableHead, TableToolbar } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Box, Table, TableBody, TableRow } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossNotesView.propTypes = {\n  notes: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  filtersArray: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.object.isRequired\n  }).isRequired,\n  resetKey: PropTypes.number,\n  handlers: PropTypes.shape({\n    addNote: PropTypes.func.isRequired,\n    editNote: PropTypes.func.isRequired,\n    searchSubmit: PropTypes.func.isRequired,\n    resetSubmit: PropTypes.func.isRequired,\n    handleSearchFilter: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function LossNotesView(_ref) {\n  var _this = this;\n\n  var notes = _ref.notes,\n      cols = _ref.cols,\n      columnProps = _ref.columnProps,\n      filtersArray = _ref.filtersArray,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers,\n      resetKey = _ref.resetKey;\n  var hasNotes = (notes === null || notes === void 0 ? void 0 : notes.length) > 0;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: [/*#__PURE__*/_jsxDEV(TableActions, {\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          icon: AddIcon,\n          color: \"primary\",\n          variant: \"contained\",\n          size: \"small\",\n          text: utils.string.t('claims.notes.addNote'),\n          onClick: handlers.addNote\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 9\n      }, this), hasNotes && /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchMinChars: 4,\n        filtersArray: filtersArray,\n        clearFilterKey: resetKey,\n        handlers: {\n          onSearch: handlers.searchSubmit,\n          onResetFilter: handlers.resetSubmit,\n          onFilter: handlers.handleSearchFilter\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 52,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 40,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        \"data-testid\": \"claim-notes-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: hasNotes && notes.map(function (note) {\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              \"data-testid\": \"claim-notes-table-row-\".concat(note.caseIncidentNotesID),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n                nowrap: true,\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: note.createdDate,\n                    format: config.ui.format.date.textTime\n                  }\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 73,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdByName')), {}, {\n                children: note.createdByName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 78,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('noteDetails')), {}, {\n                children: note.notesDescription\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('updatedDate')), {}, {\n                nowrap: true,\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: note.updatedDate,\n                    format: config.ui.format.date.textTime\n                  }\n                })\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('updatedByName')), {}, {\n                children: note.updatedByName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 21\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('menu')), {}, {\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: EditIcon,\n                  onClick: function onClick() {\n                    return handlers.editNote(note);\n                  },\n                  size: \"xsmall\",\n                  tooltip: {\n                    title: utils.string.t('app.update')\n                  },\n                  variant: \"text\",\n                  color: \"default\",\n                  light: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 21\n              }, _this)]\n            }, note.caseIncidentNotesID, true, {\n              fileName: _jsxFileName,\n              lineNumber: 72,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 68,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 66,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), !hasNotes && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.notes.notFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 82\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 104,\n      columnNumber: 21\n    }, this), hasNotes && (pagination === null || pagination === void 0 ? void 0 : pagination.obj) && (pagination === null || pagination === void 0 ? void 0 : pagination.handlers) && /*#__PURE__*/_jsxDEV(Pagination, {\n      page: pagination.obj.page,\n      count: pagination.obj.rowsTotal,\n      rowsPerPage: pagination.obj.rowsPerPage,\n      onChangePage: pagination.handlers.handleChangePage,\n      onChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n      testid: \"claim-notes\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 107,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 39,\n    columnNumber: 5\n  }, this);\n}\n_c = LossNotesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossNotesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossNotes/LossNotes.view.js"],"names":["React","PropTypes","Button","Empty","Overflow","Pagination","TableActions","TableCell","TableFilters","TableHead","TableToolbar","utils","config","Box","Table","TableBody","TableRow","AddIcon","EditIcon","LossNotesView","propTypes","notes","array","isRequired","cols","columnProps","func","filtersArray","sort","object","pagination","shape","obj","handlers","resetKey","number","addNote","editNote","searchSubmit","resetSubmit","handleSearchFilter","hasNotes","length","string","t","onSearch","onResetFilter","onFilter","map","note","caseIncidentNotesID","value","date","createdDate","format","ui","textTime","createdByName","notesDescription","updatedDate","updatedByName","title","page","rowsTotal","rowsPerPage","handleChangePage","handleChangeRowsPerPage"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Button, Empty, Overflow, Pagination, TableActions, TableCell, TableFilters, TableHead, TableToolbar } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Box, Table, TableBody, TableRow } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nLossNotesView.propTypes = {\r\n  notes: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  filtersArray: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n  resetKey: PropTypes.number,\r\n  handlers: PropTypes.shape({\r\n    addNote: PropTypes.func.isRequired,\r\n    editNote: PropTypes.func.isRequired,\r\n    searchSubmit: PropTypes.func.isRequired,\r\n    resetSubmit: PropTypes.func.isRequired,\r\n    handleSearchFilter: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function LossNotesView({ notes, cols, columnProps, filtersArray, sort, pagination, handlers, resetKey }) {\r\n  const hasNotes = notes?.length > 0;\r\n\r\n  return (\r\n    <Box mt={3}>\r\n      <TableToolbar>\r\n        <TableActions>\r\n          <Button\r\n            icon={AddIcon}\r\n            color=\"primary\"\r\n            variant=\"contained\"\r\n            size=\"small\"\r\n            text={utils.string.t('claims.notes.addNote')}\r\n            onClick={handlers.addNote}\r\n          />\r\n        </TableActions>\r\n        {hasNotes && (\r\n          <TableFilters\r\n            search\r\n            searchMinChars={4}\r\n            filtersArray={filtersArray}\r\n            clearFilterKey={resetKey}\r\n            handlers={{\r\n              onSearch: handlers.searchSubmit,\r\n              onResetFilter: handlers.resetSubmit,\r\n              onFilter: handlers.handleSearchFilter,\r\n            }}\r\n          />\r\n        )}\r\n      </TableToolbar>\r\n      <Overflow>\r\n        <Table data-testid=\"claim-notes-table\">\r\n          <TableHead columns={cols} sorting={sort}></TableHead>\r\n          <TableBody>\r\n            {hasNotes &&\r\n              notes.map((note) => {\r\n                return (\r\n                  <TableRow key={note.caseIncidentNotesID} data-testid={`claim-notes-table-row-${note.caseIncidentNotesID}`}>\r\n                    <TableCell {...columnProps('createdDate')} nowrap>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: note.createdDate, format: config.ui.format.date.textTime },\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell {...columnProps('createdByName')}>{note.createdByName}</TableCell>\r\n                    <TableCell {...columnProps('noteDetails')}>{note.notesDescription}</TableCell>\r\n                    <TableCell {...columnProps('updatedDate')} nowrap>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: note.updatedDate, format: config.ui.format.date.textTime },\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell {...columnProps('updatedByName')}>{note.updatedByName}</TableCell>\r\n                    <TableCell {...columnProps('menu')}>\r\n                      <Button\r\n                        icon={EditIcon}\r\n                        onClick={() => handlers.editNote(note)}\r\n                        size=\"xsmall\"\r\n                        tooltip={{ title: utils.string.t('app.update') }}\r\n                        variant=\"text\"\r\n                        color=\"default\"\r\n                        light\r\n                      />\r\n                    </TableCell>\r\n                  </TableRow>\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      {!hasNotes && <Empty title={utils.string.t('claims.notes.notFound')} icon={<IconSearchFile />} padding />}\r\n\r\n      {hasNotes && pagination?.obj && pagination?.handlers && (\r\n        <Pagination\r\n          page={pagination.obj.page}\r\n          count={pagination.obj.rowsTotal}\r\n          rowsPerPage={pagination.obj.rowsPerPage}\r\n          onChangePage={pagination.handlers.handleChangePage}\r\n          onChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n          testid=\"claim-notes\"\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}