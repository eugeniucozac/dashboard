{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RegisterNewLossFixedBottomBar, ClaimsEnterLossInformation, LinkSearchPolicy, RegisterClaimCardInformation, ClaimsAcknowledgement, ClaimsManageDocuments } from 'modules';\nimport { selectCatCodes, getCatCodes, getClaimBordereauPeriods, getPriorityLevels, getLossQualifiers } from 'stores';\nimport * as utils from 'utils';\nimport styles from './ClaimsRegisterNewLoss.style';\nimport * as constants from 'consts';\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLossView.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n  setActiveStep: PropTypes.func.isRequired,\n  handleStep: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  progress: PropTypes.number.isRequired,\n  isFormsEdited: PropTypes.array.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  handleFormStatus: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  setFormEditedStatus: PropTypes.func.isRequired,\n  setSaveStatus: PropTypes.func.isRequired,\n  saveStatus: PropTypes.number.isRequired\n};\nexport default function ClaimsRegisterNewLossView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeStep = _ref.activeStep,\n      setActiveStep = _ref.setActiveStep,\n      handleStep = _ref.handleStep,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      isFormsEdited = _ref.isFormsEdited,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleNext = _ref.handleNext,\n      handleFormStatus = _ref.handleFormStatus,\n      _handleBack = _ref.handleBack,\n      _handleSave = _ref.handleSave,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      setSaveStatus = _ref.setSaveStatus,\n      launchFinishModal = _ref.launchFinishModal;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsRegisterNewLoss'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var catCodes = useSelector(selectCatCodes);\n  var dispatch = useDispatch();\n\n  var getAllReferentialData = function getAllReferentialData() {\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\n      dispatch(getCatCodes());\n    }\n  };\n\n  useEffect(function () {\n    getAllReferentialData();\n    dispatch(getLossQualifiers());\n    dispatch(getClaimBordereauPeriods());\n    dispatch(getPriorityLevels());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var stepContent = function stepContent(index) {\n    var _isFormsEdited$index, _isFormsEdited$index2, _isFormsEdited$index3, _isFormsEdited$index4;\n\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n            policyRef: policyRef,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleNext: function handleNext() {\n              return _handleNext(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            activeStep: activeStep,\n            lastStep: false,\n            context: constants.DMS_CONTEXT_LOSS,\n            saveStatus: saveStatus,\n            handleBack: _handleBack,\n            handleFormStatus: handleFormStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LinkSearchPolicy, {\n            policyRef: policyRef,\n            setPolicyRef: setPolicyRef,\n            isFormsEdited: isFormsEdited,\n            setFormEditedStatus: setFormEditedStatus,\n            activeStep: activeStep,\n            setActiveStep: setActiveStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: _handleBack,\n            handleSave: _handleSave,\n            handleNext: _handleNext,\n            save: (_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus,\n            index: index,\n            saveStatus: saveStatus,\n            setSaveStatus: setSaveStatus,\n            handleFormStatus: handleFormStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 94,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RegisterClaimCardInformation, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: _handleBack,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNext: _handleNext,\n            save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus,\n            index: index,\n            handleFormStatus: handleFormStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 117,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClaimsManageDocuments, {\n            policyRef: policyRef,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleNext: function handleNext() {\n              return _handleNext(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            activeStep: activeStep,\n            lastStep: false,\n            context: constants.DMS_CONTEXT_LOSS,\n            saveStatus: saveStatus,\n            handleBack: _handleBack,\n            handleFormStatus: handleFormStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 134,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 133,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {\n          lastStep: true,\n          activeStep: activeStep,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleBack: function handleBack() {\n            _handleBack(index);\n          },\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          handleFinish: function handleFinish() {\n            return launchFinishModal();\n          },\n          save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus,\n          handleStep: handleStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 152,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n          activeStep: activeStep,\n          onSave: function onSave() {},\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleSave: function handleSave() {\n            _handleSave(index);\n          },\n          handleNextSubmit: function handleNextSubmit() {\n            return _handleNext(index);\n          },\n          save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 169,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      children: [' ', /*#__PURE__*/_jsxDEV(Stepper, {\n        alternativeLabel: true,\n        activeStep: activeStep,\n        \"data-testid\": \"LinearStepper\",\n        children: steps.map(function (label, index) {\n          return /*#__PURE__*/_jsxDEV(Step, {\n            onClick: function onClick() {\n              return handleStep(index);\n            },\n            children: /*#__PURE__*/_jsxDEV(StepLabel, {\n              StepIconProps: {\n                classes: {\n                  root: classes.iconContainer\n                }\n              },\n              children: label\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 190,\n              columnNumber: 15\n            }, _this)\n          }, label, false, {\n            fileName: _jsxFileName,\n            lineNumber: 189,\n            columnNumber: 13\n          }, _this);\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 202,\n      columnNumber: 7\n    }, this), stepContent(activeStep)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 184,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsRegisterNewLossView, \"YbLziJw2LdO/CPiC0DaBWXSulxQ=\", false, function () {\n  return [useSelector, useDispatch];\n});\n\n_c = ClaimsRegisterNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.view.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","RegisterNewLossFixedBottomBar","ClaimsEnterLossInformation","LinkSearchPolicy","RegisterClaimCardInformation","ClaimsAcknowledgement","ClaimsManageDocuments","selectCatCodes","getCatCodes","getClaimBordereauPeriods","getPriorityLevels","getLossQualifiers","utils","styles","constants","LinearProgress","Stepper","Step","StepLabel","makeStyles","ClaimsRegisterNewLossView","propTypes","activeStep","number","isRequired","setActiveStep","func","handleStep","steps","array","progress","isFormsEdited","isAllStepsCompleted","bool","handleFormStatus","handleNext","handleBack","handleSave","setFormEditedStatus","setSaveStatus","saveStatus","launchFinishModal","classes","name","policyRef","setPolicyRef","catCodes","dispatch","getAllReferentialData","generic","isInvalidOrEmptyArray","stepContent","index","DMS_CONTEXT_LOSS","formEditedStatus","map","label","root","iconContainer","linearProgress"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport {\r\n  RegisterNewLossFixedBottomBar,\r\n  ClaimsEnterLossInformation,\r\n  LinkSearchPolicy,\r\n  RegisterClaimCardInformation,\r\n  ClaimsAcknowledgement,\r\n  ClaimsManageDocuments,\r\n} from 'modules';\r\n\r\nimport { selectCatCodes, getCatCodes, getClaimBordereauPeriods, getPriorityLevels, getLossQualifiers } from 'stores';\r\nimport * as utils from 'utils';\r\nimport styles from './ClaimsRegisterNewLoss.style';\r\nimport * as constants from 'consts';\r\n\r\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\r\n\r\nClaimsRegisterNewLossView.propTypes = {\r\n  activeStep: PropTypes.number.isRequired,\r\n  setActiveStep: PropTypes.func.isRequired,\r\n  handleStep: PropTypes.func.isRequired,\r\n  steps: PropTypes.array.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  isFormsEdited: PropTypes.array.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  setFormEditedStatus: PropTypes.func.isRequired,\r\n  setSaveStatus: PropTypes.func.isRequired,\r\n  saveStatus: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function ClaimsRegisterNewLossView({\r\n  activeStep,\r\n  setActiveStep,\r\n  handleStep,\r\n  steps,\r\n  progress,\r\n  isFormsEdited,\r\n  isAllStepsCompleted,\r\n  handleNext,\r\n  handleFormStatus,\r\n  handleBack,\r\n  handleSave,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  setSaveStatus,\r\n  launchFinishModal,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsRegisterNewLoss' })();\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const dispatch = useDispatch();\r\n  const getAllReferentialData = () => {\r\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\r\n      dispatch(getCatCodes());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllReferentialData();\r\n    dispatch(getLossQualifiers());\r\n    dispatch(getClaimBordereauPeriods());\r\n    dispatch(getPriorityLevels());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <ClaimsEnterLossInformation\r\n              policyRef={policyRef}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleNext={() => handleNext(index)}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              activeStep={activeStep}\r\n              lastStep={false}\r\n              context={constants.DMS_CONTEXT_LOSS}\r\n              saveStatus={saveStatus}\r\n              handleBack={handleBack}\r\n              handleFormStatus={handleFormStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 1:\r\n        return (\r\n          <div>\r\n            <LinkSearchPolicy\r\n              policyRef={policyRef}\r\n              setPolicyRef={setPolicyRef}\r\n              isFormsEdited={isFormsEdited}\r\n              setFormEditedStatus={setFormEditedStatus}\r\n              activeStep={activeStep}\r\n              setActiveStep={setActiveStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={handleBack}\r\n              handleSave={handleSave}\r\n              handleNext={handleNext}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n              index={index}\r\n              saveStatus={saveStatus}\r\n              setSaveStatus={setSaveStatus}\r\n              handleFormStatus={handleFormStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <RegisterClaimCardInformation\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={handleBack}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              handleNext={handleNext}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n              index={index}\r\n              handleFormStatus={handleFormStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            <ClaimsManageDocuments\r\n              policyRef={policyRef}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleNext={() => handleNext(index)}\r\n              handleSave={() => {\r\n                handleSave(index);\r\n              }}\r\n              activeStep={activeStep}\r\n              lastStep={false}\r\n              context={constants.DMS_CONTEXT_LOSS}\r\n              saveStatus={saveStatus}\r\n              handleBack={handleBack}\r\n              handleFormStatus={handleFormStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <ClaimsAcknowledgement\r\n            lastStep={true}\r\n            activeStep={activeStep}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleBack={() => {\r\n              handleBack(index);\r\n            }}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            handleFinish={() => launchFinishModal()}\r\n            save={isFormsEdited?.[index]?.formEditedStatus}\r\n            handleStep={handleStep}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <RegisterNewLossFixedBottomBar\r\n            activeStep={activeStep}\r\n            onSave={() => {}}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleSave={() => {\r\n              handleSave(index);\r\n            }}\r\n            handleNextSubmit={() => handleNext(index)}\r\n            save={isFormsEdited?.[index]?.formEditedStatus}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <div>\r\n        {' '}\r\n        <Stepper alternativeLabel activeStep={activeStep} data-testid=\"LinearStepper\">\r\n          {steps.map((label, index) => (\r\n            <Step key={label} onClick={() => handleStep(index)}>\r\n              <StepLabel\r\n                StepIconProps={{\r\n                  classes: { root: classes.iconContainer },\r\n                }}\r\n              >\r\n                {label}\r\n              </StepLabel>\r\n            </Step>\r\n          ))}\r\n        </Stepper>\r\n      </div>\r\n\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      {stepContent(activeStep)}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}