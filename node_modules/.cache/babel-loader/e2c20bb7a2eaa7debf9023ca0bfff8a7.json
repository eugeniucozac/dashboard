{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DepartmentAccounts\\\\DepartmentAccounts.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Button, FilterBar, FormGrid, Translate, Restricted } from 'components';\nimport { DepartmentAccountsList, DepartmentAccountsCalendarList, DepartmentAccountsCalendarTable, DepartmentAccountsTable } from 'modules';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { DatePicker } from '@material-ui/pickers';\nimport AddIcon from '@material-ui/icons/Add';\nimport TodayIcon from '@material-ui/icons/Today';\nimport styles from './DepartmentAccounts.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nDepartmentAccountsView.propTypes = {\n  props: PropTypes.shape({\n    rows: PropTypes.array.isRequired,\n    cols: PropTypes.array.isRequired,\n    sort: PropTypes.object.isRequired,\n    pagination: PropTypes.object.isRequired,\n    handlers: PropTypes.object.isRequired\n  }).isRequired,\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  deptId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  media: PropTypes.object.isRequired,\n  calendarView: PropTypes.bool.isRequired\n};\nexport function DepartmentAccountsView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var props = _ref.props,\n      fields = _ref.fields,\n      actions = _ref.actions,\n      deptId = _ref.deptId,\n      media = _ref.media,\n      calendarView = _ref.calendarView,\n      displayMonthList = _ref.displayMonthList,\n      handleAddButtonClick = _ref.handleAddButtonClick,\n      handleMonthChange = _ref.handleMonthChange,\n      clickNewEnquiry = _ref.clickNewEnquiry;\n  var useStyles = makeStyles(styles, {\n    name: 'DepartmentAccounts'\n  });\n  var classes = useStyles();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isCalendarOpen = _useState2[0],\n      setIsCalendarOpen = _useState2[1];\n\n  var firstMonth = displayMonthList[0];\n  var lastMonth = displayMonthList[displayMonthList.length - 1];\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"department-accounts\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      p: 1,\n      children: [!media.mobile ? /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER, constants.ROLE_COBROKER],\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.gridActions,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: AddIcon,\n            size: \"medium\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: !media.mobile && 'submission.new'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 61,\n              columnNumber: 23\n            }, this),\n            variant: \"contained\",\n            color: \"primary\",\n            onClick: clickNewEnquiry,\n            \"data-testid\": \"new-enquiry\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this) : null, /*#__PURE__*/_jsxDEV(Box, {\n        mb: media.mobile ? 4 : 2,\n        width: media.mobile ? '100%' : '40%',\n        marginLeft: \"auto\",\n        children: /*#__PURE__*/_jsxDEV(FilterBar, {\n          id: \"departmentFilter\",\n          fields: fields,\n          actions: actions\n        }, deptId, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 70,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), media.mobile ? /*#__PURE__*/_jsxDEV(Box, {\n      mx: -3,\n      \"data-testid\": \"department-accounts-mobile-calendar\",\n      children: calendarView ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 8,\n          mb: media.mobile ? 4 : 2,\n          ml: 2,\n          position: \"relative\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleAddButtonClick(utils.date.previousMonth(firstMonth).date, false);\n                },\n                icon: AddIcon,\n                size: \"small\",\n                text: \"\".concat(utils.date.previousMonth(firstMonth).monthName),\n                variant: \"outlined\",\n                color: \"primary\",\n                \"data-testid\": \"previous-month-button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 81,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 80,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              nestedClasses: {\n                container: classes.rootCurrentMonth\n              },\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                open: isCalendarOpen,\n                autoOk: true,\n                openTo: \"month\",\n                emptyLabel: \"\",\n                views: ['month', 'year'],\n                format: \"MMMM YYYY\",\n                icon: \"TodayIcon\",\n                onClose: function onClose() {\n                  return setIsCalendarOpen(false);\n                },\n                onChange: function onChange(value) {\n                  handleMonthChange(value);\n                  setIsCalendarOpen(false);\n                },\n                className: classes.hidden\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 93,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(TodayIcon, {\n                size: \"small\",\n                onClick: function onClick() {\n                  return setIsCalendarOpen(true);\n                },\n                className: classes.todayIconMobile\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 79,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 15\n        }, this), displayMonthList.map(function (displayMonth) {\n          var monthDetails = utils.date.monthDetails(displayMonth);\n          var title = \"\".concat(monthDetails.monthName, \" \").concat(monthDetails.year);\n          return /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              pl: 3,\n              pr: 3,\n              children: /*#__PURE__*/_jsxDEV(Translate, {\n                variant: \"h2\",\n                label: title\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 23\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(DepartmentAccountsCalendarList, _objectSpread(_objectSpread({}, props), {}, {\n              deptId: deptId,\n              monthDetails: monthDetails\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, _this)]\n          }, \"\".concat(monthDetails.monthName, \"-\").concat(monthDetails.year, \"-\").concat(deptId), true, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 19\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4,\n          mb: 2,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleAddButtonClick(utils.date.nextMonth(lastMonth).date, true);\n                },\n                icon: AddIcon,\n                size: \"small\",\n                text: \"\".concat(utils.date.nextMonth(lastMonth).monthName),\n                variant: \"outlined\",\n                color: \"primary\",\n                \"data-testid\": \"next-month-button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 127,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(DepartmentAccountsList, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 13\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: calendarView ? /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          mt: 6,\n          mb: media.mobile ? 4 : 2,\n          ml: 2,\n          \"data-testid\": \"department-accounts-calendar\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            justifyContent: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleAddButtonClick(utils.date.previousMonth(firstMonth).date, false);\n                },\n                icon: AddIcon,\n                size: \"small\",\n                text: \"\".concat(utils.date.previousMonth(firstMonth).monthName),\n                variant: \"outlined\",\n                color: \"primary\",\n                \"data-testid\": \"previous-month-button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              nestedClasses: {\n                container: classes.rootCurrentMonth\n              },\n              children: [/*#__PURE__*/_jsxDEV(DatePicker, {\n                open: isCalendarOpen,\n                autoOk: true,\n                openTo: \"month\",\n                emptyLabel: \"\",\n                views: ['month', 'year'],\n                format: \"MMMM YYYY\",\n                icon: \"TodayIcon\",\n                onClose: function onClose() {\n                  return setIsCalendarOpen(false);\n                },\n                onChange: function onChange(value) {\n                  handleMonthChange(value);\n                  setIsCalendarOpen(false);\n                },\n                className: classes.hidden\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n                className: classes.todayIcon,\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  onClick: function onClick() {\n                    return setIsCalendarOpen(true);\n                  },\n                  icon: TodayIcon,\n                  iconPosition: \"right\",\n                  size: \"small\",\n                  text: \"Select month\",\n                  variant: \"outlined\",\n                  color: \"primary\",\n                  \"data-testid\": \"previous-month-button\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 182,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 181,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 152,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 15\n        }, this), displayMonthList.map(function (displayMonth) {\n          var monthDetails = utils.date.monthDetails(displayMonth);\n          var title = \"\".concat(monthDetails.monthName, \" \").concat(monthDetails.year);\n          return /*#__PURE__*/_jsxDEV(Box, {\n            children: [/*#__PURE__*/_jsxDEV(Translate, {\n              variant: \"h3\",\n              label: title\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 202,\n              columnNumber: 21\n            }, _this), /*#__PURE__*/_jsxDEV(DepartmentAccountsCalendarTable, _objectSpread(_objectSpread({}, props), {}, {\n              deptId: deptId,\n              monthDetails: monthDetails\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 203,\n              columnNumber: 21\n            }, _this)]\n          }, \"\".concat(monthDetails.monthName, \"-\").concat(monthDetails.year, \"-\").concat(deptId), true, {\n            fileName: _jsxFileName,\n            lineNumber: 201,\n            columnNumber: 19\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(Box, {\n          mb: media.mobile ? 4 : 2,\n          ml: 2,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            justifyContent: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              children: /*#__PURE__*/_jsxDEV(Button, {\n                onClick: function onClick() {\n                  return handleAddButtonClick(utils.date.nextMonth(lastMonth).date, true);\n                },\n                icon: AddIcon,\n                size: \"small\",\n                text: \"\".concat(utils.date.nextMonth(lastMonth).monthName),\n                variant: \"outlined\",\n                color: \"primary\",\n                \"data-testid\": \"next-month-button\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 208,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true) : /*#__PURE__*/_jsxDEV(DepartmentAccountsTable, _objectSpread({}, props), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 225,\n        columnNumber: 13\n      }, this)\n    }, void 0, false)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartmentAccountsView, \"GCxuZ7XQR+m57JjDeAwUOzG1dxI=\", true);\n\n_c = DepartmentAccountsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentAccountsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DepartmentAccounts/DepartmentAccounts.view.js"],"names":["React","useState","PropTypes","Button","FilterBar","FormGrid","Translate","Restricted","DepartmentAccountsList","DepartmentAccountsCalendarList","DepartmentAccountsCalendarTable","DepartmentAccountsTable","utils","constants","makeStyles","Box","Grid","DatePicker","AddIcon","TodayIcon","styles","DepartmentAccountsView","propTypes","props","shape","rows","array","isRequired","cols","sort","object","pagination","handlers","fields","actions","deptId","oneOfType","string","number","media","calendarView","bool","displayMonthList","handleAddButtonClick","handleMonthChange","clickNewEnquiry","useStyles","name","classes","isCalendarOpen","setIsCalendarOpen","firstMonth","lastMonth","length","mobile","ROLE_BROKER","ROLE_COBROKER","gridActions","date","previousMonth","monthName","container","rootCurrentMonth","value","hidden","todayIconMobile","map","displayMonth","monthDetails","title","year","nextMonth","todayIcon"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,SAAjB,EAA4BC,QAA5B,EAAsCC,SAAtC,EAAiDC,UAAjD,QAAmE,YAAnE;AACA,SAASC,sBAAT,EAAiCC,8BAAjC,EAAiEC,+BAAjE,EAAkGC,uBAAlG,QAAiI,SAAjI;AAEA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,QAAsC,mBAAtC;AACA,SAASC,UAAT,QAA2B,sBAA3B;AACA,OAAOC,OAAP,MAAoB,wBAApB;AACA,OAAOC,SAAP,MAAsB,0BAAtB;AAEA,OAAOC,MAAP,MAAmB,6BAAnB;;;AAEAC,sBAAsB,CAACC,SAAvB,GAAmC;AACjCC,EAAAA,KAAK,EAAErB,SAAS,CAACsB,KAAV,CAAgB;AACrBC,IAAAA,IAAI,EAAEvB,SAAS,CAACwB,KAAV,CAAgBC,UADD;AAErBC,IAAAA,IAAI,EAAE1B,SAAS,CAACwB,KAAV,CAAgBC,UAFD;AAGrBE,IAAAA,IAAI,EAAE3B,SAAS,CAAC4B,MAAV,CAAiBH,UAHF;AAIrBI,IAAAA,UAAU,EAAE7B,SAAS,CAAC4B,MAAV,CAAiBH,UAJR;AAKrBK,IAAAA,QAAQ,EAAE9B,SAAS,CAAC4B,MAAV,CAAiBH;AALN,GAAhB,EAMJA,UAP8B;AAQjCM,EAAAA,MAAM,EAAE/B,SAAS,CAACwB,KAAV,CAAgBC,UARS;AASjCO,EAAAA,OAAO,EAAEhC,SAAS,CAACwB,KAAV,CAAgBC,UATQ;AAUjCQ,EAAAA,MAAM,EAAEjC,SAAS,CAACkC,SAAV,CAAoB,CAAClC,SAAS,CAACmC,MAAX,EAAmBnC,SAAS,CAACoC,MAA7B,CAApB,EAA0DX,UAVjC;AAWjCY,EAAAA,KAAK,EAAErC,SAAS,CAAC4B,MAAV,CAAiBH,UAXS;AAYjCa,EAAAA,YAAY,EAAEtC,SAAS,CAACuC,IAAV,CAAed;AAZI,CAAnC;AAeA,OAAO,SAASN,sBAAT,OAWJ;AAAA;;AAAA;;AAAA,MAVDE,KAUC,QAVDA,KAUC;AAAA,MATDU,MASC,QATDA,MASC;AAAA,MARDC,OAQC,QARDA,OAQC;AAAA,MAPDC,MAOC,QAPDA,MAOC;AAAA,MANDI,KAMC,QANDA,KAMC;AAAA,MALDC,YAKC,QALDA,YAKC;AAAA,MAJDE,gBAIC,QAJDA,gBAIC;AAAA,MAHDC,oBAGC,QAHDA,oBAGC;AAAA,MAFDC,iBAEC,QAFDA,iBAEC;AAAA,MADDC,eACC,QADDA,eACC;AACD,MAAMC,SAAS,GAAGhC,UAAU,CAACM,MAAD,EAAS;AAAE2B,IAAAA,IAAI,EAAE;AAAR,GAAT,CAA5B;AACA,MAAMC,OAAO,GAAGF,SAAS,EAAzB;;AAFC,kBAG2C7C,QAAQ,CAAC,KAAD,CAHnD;AAAA;AAAA,MAGMgD,cAHN;AAAA,MAGsBC,iBAHtB;;AAKD,MAAMC,UAAU,GAAGT,gBAAgB,CAAC,CAAD,CAAnC;AACA,MAAMU,SAAS,GAAGV,gBAAgB,CAACA,gBAAgB,CAACW,MAAjB,GAA0B,CAA3B,CAAlC;AACA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,mBAAY,qBAAxB;AAAA,4BACE,QAAC,GAAD;AAAK,MAAA,OAAO,EAAC,MAAb;AAAoB,MAAA,CAAC,EAAE,CAAvB;AAAA,iBACG,CAACd,KAAK,CAACe,MAAP,gBACC,QAAC,UAAD;AAAY,QAAA,OAAO,EAAE,CAACzC,SAAS,CAAC0C,WAAX,EAAwB1C,SAAS,CAAC2C,aAAlC,CAArB;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,SAAS,EAAER,OAAO,CAACS,WAA9B;AAAA,iCACE,QAAC,MAAD;AACE,YAAA,IAAI,EAAEvC,OADR;AAEE,YAAA,IAAI,EAAC,QAFP;AAGE,YAAA,IAAI,eAAE,QAAC,SAAD;AAAW,cAAA,KAAK,EAAE,CAACqB,KAAK,CAACe,MAAP,IAAiB;AAAnC;AAAA;AAAA;AAAA;AAAA,oBAHR;AAIE,YAAA,OAAO,EAAC,WAJV;AAKE,YAAA,KAAK,EAAC,SALR;AAME,YAAA,OAAO,EAAET,eANX;AAOE,2BAAY;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADD,GAcG,IAfN,eAgBE,QAAC,GAAD;AAAK,QAAA,EAAE,EAAEN,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmB,CAA5B;AAA+B,QAAA,KAAK,EAAEf,KAAK,CAACe,MAAN,GAAe,MAAf,GAAwB,KAA9D;AAAqE,QAAA,UAAU,EAAC,MAAhF;AAAA,+BACE,QAAC,SAAD;AAAW,UAAA,EAAE,EAAC,kBAAd;AAAiC,UAAA,MAAM,EAAErB,MAAzC;AAAiD,UAAA,OAAO,EAAEC;AAA1D,WAAwEC,MAAxE;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,YADF,EAqBGI,KAAK,CAACe,MAAN,gBACC,QAAC,GAAD;AAAK,MAAA,EAAE,EAAE,CAAC,CAAV;AAAa,qBAAY,qCAAzB;AAAA,gBACGd,YAAY,gBACX;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAED,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmB,CAAnC;AAAsC,UAAA,EAAE,EAAE,CAA1C;AAA6C,UAAA,QAAQ,EAAC,UAAtD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAoB,YAAA,cAAc,EAAC,QAAnC;AAAA,oCACE,QAAC,QAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMX,oBAAoB,CAAC/B,KAAK,CAAC8C,IAAN,CAAWC,aAAX,CAAyBR,UAAzB,EAAqCO,IAAtC,EAA4C,KAA5C,CAA1B;AAAA,iBADX;AAEE,gBAAA,IAAI,EAAExC,OAFR;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,IAAI,YAAKN,KAAK,CAAC8C,IAAN,CAAWC,aAAX,CAAyBR,UAAzB,EAAqCS,SAA1C,CAJN;AAKE,gBAAA,OAAO,EAAC,UALV;AAME,gBAAA,KAAK,EAAC,SANR;AAOE,+BAAY;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,QAAD;AAAU,cAAA,aAAa,EAAE;AAAEC,gBAAAA,SAAS,EAAEb,OAAO,CAACc;AAArB,eAAzB;AAAA,sCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAEb,cADR;AAEE,gBAAA,MAAM,MAFR;AAGE,gBAAA,MAAM,EAAC,OAHT;AAIE,gBAAA,UAAU,EAAC,EAJb;AAKE,gBAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,CALT;AAME,gBAAA,MAAM,EAAC,WANT;AAOE,gBAAA,IAAI,EAAC,WAPP;AAQE,gBAAA,OAAO,EAAE;AAAA,yBAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,iBARX;AASE,gBAAA,QAAQ,EAAE,kBAACa,KAAD,EAAW;AACnBnB,kBAAAA,iBAAiB,CAACmB,KAAD,CAAjB;AACAb,kBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,iBAZH;AAaE,gBAAA,SAAS,EAAEF,OAAO,CAACgB;AAbrB;AAAA;AAAA;AAAA;AAAA,sBADF,eAiBE,QAAC,SAAD;AAAW,gBAAA,IAAI,EAAC,OAAhB;AAAwB,gBAAA,OAAO,EAAE;AAAA,yBAAMd,iBAAiB,CAAC,IAAD,CAAvB;AAAA,iBAAjC;AAAgE,gBAAA,SAAS,EAAEF,OAAO,CAACiB;AAAnF;AAAA;AAAA;AAAA;AAAA,sBAjBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EAoCGvB,gBAAgB,CAACwB,GAAjB,CAAqB,UAACC,YAAD,EAAkB;AACtC,cAAMC,YAAY,GAAGxD,KAAK,CAAC8C,IAAN,CAAWU,YAAX,CAAwBD,YAAxB,CAArB;AACA,cAAME,KAAK,aAAMD,YAAY,CAACR,SAAnB,cAAgCQ,YAAY,CAACE,IAA7C,CAAX;AAEA,8BACE,QAAC,GAAD;AAAA,oCACE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAT;AAAY,cAAA,EAAE,EAAE,CAAhB;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAC,IAAnB;AAAwB,gBAAA,KAAK,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,qBADF,eAIE,QAAC,8BAAD,kCAAoC9C,KAApC;AAA2C,cAAA,MAAM,EAAEY,MAAnD;AAA2D,cAAA,YAAY,EAAEiC;AAAzE;AAAA;AAAA;AAAA;AAAA,qBAJF;AAAA,uBAAaA,YAAY,CAACR,SAA1B,cAAuCQ,YAAY,CAACE,IAApD,cAA4DnC,MAA5D;AAAA;AAAA;AAAA;AAAA,mBADF;AAQD,SAZA,CApCH,eAkDE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAE,CAAhB;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAoB,YAAA,cAAc,EAAC,QAAnC;AAAA,mCACE,QAAC,QAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMQ,oBAAoB,CAAC/B,KAAK,CAAC8C,IAAN,CAAWa,SAAX,CAAqBnB,SAArB,EAAgCM,IAAjC,EAAuC,IAAvC,CAA1B;AAAA,iBADX;AAEE,gBAAA,IAAI,EAAExC,OAFR;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,IAAI,YAAKN,KAAK,CAAC8C,IAAN,CAAWa,SAAX,CAAqBnB,SAArB,EAAgCQ,SAArC,CAJN;AAKE,gBAAA,OAAO,EAAC,UALV;AAME,gBAAA,KAAK,EAAC,SANR;AAOE,+BAAY;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAlDF;AAAA,sBADW,gBAoEX,QAAC,sBAAD,oBAA4BrC,KAA5B;AAAA;AAAA;AAAA;AAAA;AArEJ;AAAA;AAAA;AAAA;AAAA,YADD,gBA0EC;AAAA,gBACGiB,YAAY,gBACX;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,EAAE,EAAED,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmB,CAAnC;AAAsC,UAAA,EAAE,EAAE,CAA1C;AAA6C,yBAAY,8BAAzD;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAoB,YAAA,cAAc,EAAC,QAAnC;AAAA,oCACE,QAAC,QAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMX,oBAAoB,CAAC/B,KAAK,CAAC8C,IAAN,CAAWC,aAAX,CAAyBR,UAAzB,EAAqCO,IAAtC,EAA4C,KAA5C,CAA1B;AAAA,iBADX;AAEE,gBAAA,IAAI,EAAExC,OAFR;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,IAAI,YAAKN,KAAK,CAAC8C,IAAN,CAAWC,aAAX,CAAyBR,UAAzB,EAAqCS,SAA1C,CAJN;AAKE,gBAAA,OAAO,EAAC,UALV;AAME,gBAAA,KAAK,EAAC,SANR;AAOE,+BAAY;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAaE,QAAC,QAAD;AAAU,cAAA,aAAa,EAAE;AAAEC,gBAAAA,SAAS,EAAEb,OAAO,CAACc;AAArB,eAAzB;AAAA,sCACE,QAAC,UAAD;AACE,gBAAA,IAAI,EAAEb,cADR;AAEE,gBAAA,MAAM,MAFR;AAGE,gBAAA,MAAM,EAAC,OAHT;AAIE,gBAAA,UAAU,EAAC,EAJb;AAKE,gBAAA,KAAK,EAAE,CAAC,OAAD,EAAU,MAAV,CALT;AAME,gBAAA,MAAM,EAAC,WANT;AAOE,gBAAA,IAAI,EAAC,WAPP;AAQE,gBAAA,OAAO,EAAE;AAAA,yBAAMC,iBAAiB,CAAC,KAAD,CAAvB;AAAA,iBARX;AASE,gBAAA,QAAQ,EAAE,kBAACa,KAAD,EAAW;AACnBnB,kBAAAA,iBAAiB,CAACmB,KAAD,CAAjB;AACAb,kBAAAA,iBAAiB,CAAC,KAAD,CAAjB;AACD,iBAZH;AAaE,gBAAA,SAAS,EAAEF,OAAO,CAACgB;AAbrB;AAAA;AAAA;AAAA;AAAA,sBADF,eAgBE;AAAK,gBAAA,SAAS,EAAEhB,OAAO,CAACwB,SAAxB;AAAA,uCACE,QAAC,MAAD;AACE,kBAAA,OAAO,EAAE;AAAA,2BAAMtB,iBAAiB,CAAC,IAAD,CAAvB;AAAA,mBADX;AAEE,kBAAA,IAAI,EAAE/B,SAFR;AAGE,kBAAA,YAAY,EAAC,OAHf;AAIE,kBAAA,IAAI,EAAC,OAJP;AAKE,kBAAA,IAAI,gBALN;AAME,kBAAA,OAAO,EAAC,UANV;AAOE,kBAAA,KAAK,EAAC,SAPR;AAQE,iCAAY;AARd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAhBF;AAAA;AAAA;AAAA;AAAA;AAAA,oBAbF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,EA8CGuB,gBAAgB,CAACwB,GAAjB,CAAqB,UAACC,YAAD,EAAkB;AACtC,cAAMC,YAAY,GAAGxD,KAAK,CAAC8C,IAAN,CAAWU,YAAX,CAAwBD,YAAxB,CAArB;AACA,cAAME,KAAK,aAAMD,YAAY,CAACR,SAAnB,cAAgCQ,YAAY,CAACE,IAA7C,CAAX;AAEA,8BACE,QAAC,GAAD;AAAA,oCACE,QAAC,SAAD;AAAW,cAAA,OAAO,EAAC,IAAnB;AAAwB,cAAA,KAAK,EAAED;AAA/B;AAAA;AAAA;AAAA;AAAA,qBADF,eAEE,QAAC,+BAAD,kCAAqC9C,KAArC;AAA4C,cAAA,MAAM,EAAEY,MAApD;AAA4D,cAAA,YAAY,EAAEiC;AAA1E;AAAA;AAAA;AAAA;AAAA,qBAFF;AAAA,uBAAaA,YAAY,CAACR,SAA1B,cAAuCQ,YAAY,CAACE,IAApD,cAA4DnC,MAA5D;AAAA;AAAA;AAAA;AAAA,mBADF;AAMD,SAVA,CA9CH,eA0DE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAEI,KAAK,CAACe,MAAN,GAAe,CAAf,GAAmB,CAA5B;AAA+B,UAAA,EAAE,EAAE,CAAnC;AAAA,iCACE,QAAC,QAAD;AAAU,YAAA,SAAS,MAAnB;AAAoB,YAAA,cAAc,EAAC,QAAnC;AAAA,mCACE,QAAC,QAAD;AAAA,qCACE,QAAC,MAAD;AACE,gBAAA,OAAO,EAAE;AAAA,yBAAMX,oBAAoB,CAAC/B,KAAK,CAAC8C,IAAN,CAAWa,SAAX,CAAqBnB,SAArB,EAAgCM,IAAjC,EAAuC,IAAvC,CAA1B;AAAA,iBADX;AAEE,gBAAA,IAAI,EAAExC,OAFR;AAGE,gBAAA,IAAI,EAAC,OAHP;AAIE,gBAAA,IAAI,YAAKN,KAAK,CAAC8C,IAAN,CAAWa,SAAX,CAAqBnB,SAArB,EAAgCQ,SAArC,CAJN;AAKE,gBAAA,OAAO,EAAC,UALV;AAME,gBAAA,KAAK,EAAC,SANR;AAOE,+BAAY;AAPd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBA1DF;AAAA,sBADW,gBA4EX,QAAC,uBAAD,oBAA6BrC,KAA7B;AAAA;AAAA;AAAA;AAAA;AA7EJ,qBA/FJ;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAmLD;;GArMeF,sB;;KAAAA,sB","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Button, FilterBar, FormGrid, Translate, Restricted } from 'components';\r\nimport { DepartmentAccountsList, DepartmentAccountsCalendarList, DepartmentAccountsCalendarTable, DepartmentAccountsTable } from 'modules';\r\n\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nimport { DatePicker } from '@material-ui/pickers';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport TodayIcon from '@material-ui/icons/Today';\r\n\r\nimport styles from './DepartmentAccounts.styles';\r\n\r\nDepartmentAccountsView.propTypes = {\r\n  props: PropTypes.shape({\r\n    rows: PropTypes.array.isRequired,\r\n    cols: PropTypes.array.isRequired,\r\n    sort: PropTypes.object.isRequired,\r\n    pagination: PropTypes.object.isRequired,\r\n    handlers: PropTypes.object.isRequired,\r\n  }).isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  deptId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  media: PropTypes.object.isRequired,\r\n  calendarView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function DepartmentAccountsView({\r\n  props,\r\n  fields,\r\n  actions,\r\n  deptId,\r\n  media,\r\n  calendarView,\r\n  displayMonthList,\r\n  handleAddButtonClick,\r\n  handleMonthChange,\r\n  clickNewEnquiry,\r\n}) {\r\n  const useStyles = makeStyles(styles, { name: 'DepartmentAccounts' });\r\n  const classes = useStyles();\r\n  const [isCalendarOpen, setIsCalendarOpen] = useState(false);\r\n\r\n  const firstMonth = displayMonthList[0];\r\n  const lastMonth = displayMonthList[displayMonthList.length - 1];\r\n  return (\r\n    <Box mt={3} data-testid=\"department-accounts\">\r\n      <Box display=\"flex\" p={1}>\r\n        {!media.mobile ? (\r\n          <Restricted include={[constants.ROLE_BROKER, constants.ROLE_COBROKER]}>\r\n            <Grid item className={classes.gridActions}>\r\n              <Button\r\n                icon={AddIcon}\r\n                size=\"medium\"\r\n                text={<Translate label={!media.mobile && 'submission.new'} />}\r\n                variant=\"contained\"\r\n                color=\"primary\"\r\n                onClick={clickNewEnquiry}\r\n                data-testid=\"new-enquiry\"\r\n              />\r\n            </Grid>\r\n          </Restricted>\r\n        ) : null}\r\n        <Box mb={media.mobile ? 4 : 2} width={media.mobile ? '100%' : '40%'} marginLeft=\"auto\">\r\n          <FilterBar id=\"departmentFilter\" fields={fields} actions={actions} key={deptId} />\r\n        </Box>\r\n      </Box>\r\n      {media.mobile ? (\r\n        <Box mx={-3} data-testid=\"department-accounts-mobile-calendar\">\r\n          {calendarView ? (\r\n            <>\r\n              <Box mt={8} mb={media.mobile ? 4 : 2} ml={2} position=\"relative\">\r\n                <FormGrid container justifyContent=\"center\">\r\n                  <FormGrid>\r\n                    <Button\r\n                      onClick={() => handleAddButtonClick(utils.date.previousMonth(firstMonth).date, false)}\r\n                      icon={AddIcon}\r\n                      size=\"small\"\r\n                      text={`${utils.date.previousMonth(firstMonth).monthName}`}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      data-testid=\"previous-month-button\"\r\n                    />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid nestedClasses={{ container: classes.rootCurrentMonth }}>\r\n                    <DatePicker\r\n                      open={isCalendarOpen}\r\n                      autoOk\r\n                      openTo=\"month\"\r\n                      emptyLabel=\"\"\r\n                      views={['month', 'year']}\r\n                      format=\"MMMM YYYY\"\r\n                      icon=\"TodayIcon\"\r\n                      onClose={() => setIsCalendarOpen(false)}\r\n                      onChange={(value) => {\r\n                        handleMonthChange(value);\r\n                        setIsCalendarOpen(false);\r\n                      }}\r\n                      className={classes.hidden}\r\n                    />\r\n\r\n                    <TodayIcon size=\"small\" onClick={() => setIsCalendarOpen(true)} className={classes.todayIconMobile} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n              {displayMonthList.map((displayMonth) => {\r\n                const monthDetails = utils.date.monthDetails(displayMonth);\r\n                const title = `${monthDetails.monthName} ${monthDetails.year}`;\r\n\r\n                return (\r\n                  <Box key={`${monthDetails.monthName}-${monthDetails.year}-${deptId}`}>\r\n                    <Box pl={3} pr={3}>\r\n                      <Translate variant=\"h2\" label={title} />\r\n                    </Box>\r\n                    <DepartmentAccountsCalendarList {...props} deptId={deptId} monthDetails={monthDetails} />\r\n                  </Box>\r\n                );\r\n              })}\r\n\r\n              <Box mt={4} mb={2}>\r\n                <FormGrid container justifyContent=\"center\">\r\n                  <FormGrid>\r\n                    <Button\r\n                      onClick={() => handleAddButtonClick(utils.date.nextMonth(lastMonth).date, true)}\r\n                      icon={AddIcon}\r\n                      size=\"small\"\r\n                      text={`${utils.date.nextMonth(lastMonth).monthName}`}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      data-testid=\"next-month-button\"\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <DepartmentAccountsList {...props} />\r\n          )}\r\n        </Box>\r\n      ) : (\r\n        <>\r\n          {calendarView ? (\r\n            <>\r\n              <Box mt={6} mb={media.mobile ? 4 : 2} ml={2} data-testid=\"department-accounts-calendar\">\r\n                <FormGrid container justifyContent=\"center\">\r\n                  <FormGrid>\r\n                    <Button\r\n                      onClick={() => handleAddButtonClick(utils.date.previousMonth(firstMonth).date, false)}\r\n                      icon={AddIcon}\r\n                      size=\"small\"\r\n                      text={`${utils.date.previousMonth(firstMonth).monthName}`}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      data-testid=\"previous-month-button\"\r\n                    />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid nestedClasses={{ container: classes.rootCurrentMonth }}>\r\n                    <DatePicker\r\n                      open={isCalendarOpen}\r\n                      autoOk\r\n                      openTo=\"month\"\r\n                      emptyLabel=\"\"\r\n                      views={['month', 'year']}\r\n                      format=\"MMMM YYYY\"\r\n                      icon=\"TodayIcon\"\r\n                      onClose={() => setIsCalendarOpen(false)}\r\n                      onChange={(value) => {\r\n                        handleMonthChange(value);\r\n                        setIsCalendarOpen(false);\r\n                      }}\r\n                      className={classes.hidden}\r\n                    />\r\n                    <div className={classes.todayIcon}>\r\n                      <Button\r\n                        onClick={() => setIsCalendarOpen(true)}\r\n                        icon={TodayIcon}\r\n                        iconPosition=\"right\"\r\n                        size=\"small\"\r\n                        text={`Select month`}\r\n                        variant=\"outlined\"\r\n                        color=\"primary\"\r\n                        data-testid=\"previous-month-button\"\r\n                      />\r\n                    </div>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n              {displayMonthList.map((displayMonth) => {\r\n                const monthDetails = utils.date.monthDetails(displayMonth);\r\n                const title = `${monthDetails.monthName} ${monthDetails.year}`;\r\n\r\n                return (\r\n                  <Box key={`${monthDetails.monthName}-${monthDetails.year}-${deptId}`}>\r\n                    <Translate variant=\"h3\" label={title} />\r\n                    <DepartmentAccountsCalendarTable {...props} deptId={deptId} monthDetails={monthDetails} />\r\n                  </Box>\r\n                );\r\n              })}\r\n\r\n              <Box mb={media.mobile ? 4 : 2} ml={2}>\r\n                <FormGrid container justifyContent=\"center\">\r\n                  <FormGrid>\r\n                    <Button\r\n                      onClick={() => handleAddButtonClick(utils.date.nextMonth(lastMonth).date, true)}\r\n                      icon={AddIcon}\r\n                      size=\"small\"\r\n                      text={`${utils.date.nextMonth(lastMonth).monthName}`}\r\n                      variant=\"outlined\"\r\n                      color=\"primary\"\r\n                      data-testid=\"next-month-button\"\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </Box>\r\n            </>\r\n          ) : (\r\n            <DepartmentAccountsTable {...props} />\r\n          )}\r\n        </>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}