{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nexport var linkDmsDocument = function linkDmsDocument(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/dms.actions.linkDmsDocument'\n    };\n    var documentId = params.documentId,\n        referenceId = params.referenceId,\n        sectionType = params.sectionType;\n    dispatch(linkDmsDocumentRequest(params));\n    dispatch(addLoader('linkDmsDocument'));\n\n    if (!documentId || !referenceId || !sectionType) {\n      dispatch(linkDmsDocumentFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing params'\n      })));\n      dispatch(removeLoader('linkDmsDocument'));\n      return;\n    } // This list will be changed once we have multi-select functionality till then it's gonna be a single document to unlink\n\n\n    var apiParams = [{\n      documentId: documentId,\n      referenceId: referenceId,\n      sectionType: sectionType\n    }];\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: 'dms/documet/link',\n      data: apiParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(enqueueNotification('dms.search.notifications.successLink', 'success'));\n      dispatch(linkDmsDocumentSuccess(data));\n      return data;\n    }).catch(function (err) {\n      dispatch(enqueueNotification('dms.search.notifications.failedLink', 'error'));\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(linkDmsDocumentFailure(err));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('linkDmsDocument'));\n    });\n  };\n};\nexport var linkDmsDocumentRequest = function linkDmsDocumentRequest(data) {\n  return {\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_REQUEST',\n    payload: data\n  };\n};\nexport var linkDmsDocumentSuccess = function linkDmsDocumentSuccess(data) {\n  return {\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_SUCCESS',\n    payload: data\n  };\n};\nexport var linkDmsDocumentFailure = function linkDmsDocumentFailure(error) {\n  return {\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.linkDmsDocument.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","utils","linkDmsDocument","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","documentId","referenceId","sectionType","linkDmsDocumentRequest","linkDmsDocumentFailure","message","apiParams","api","post","token","accessToken","dmsService","path","data","then","response","handleResponse","json","handleNewData","linkDmsDocumentSuccess","catch","err","handleError","handleUnauthorized","finally","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const linkDmsDocument = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/dms.actions.linkDmsDocument',\r\n  };\r\n\r\n  const { documentId, referenceId, sectionType } = params;\r\n\r\n  dispatch(linkDmsDocumentRequest(params));\r\n  dispatch(addLoader('linkDmsDocument'));\r\n\r\n  if (!documentId || !referenceId || !sectionType) {\r\n    dispatch(linkDmsDocumentFailure({ ...defaultError, message: 'Missing params' }));\r\n    dispatch(removeLoader('linkDmsDocument'));\r\n    return;\r\n  }\r\n\r\n  // This list will be changed once we have multi-select functionality till then it's gonna be a single document to unlink\r\n  const apiParams = [\r\n    {\r\n      documentId: documentId,\r\n      referenceId: referenceId,\r\n      sectionType: sectionType,\r\n    },\r\n  ];\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: 'dms/documet/link',\r\n      data: apiParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(enqueueNotification('dms.search.notifications.successLink', 'success'));\r\n      dispatch(linkDmsDocumentSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(enqueueNotification('dms.search.notifications.failedLink', 'error'));\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(linkDmsDocumentFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('linkDmsDocument'));\r\n    });\r\n};\r\n\r\nexport const linkDmsDocumentRequest = (data) => {\r\n  return {\r\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const linkDmsDocumentSuccess = (data) => {\r\n  return {\r\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const linkDmsDocumentFailure = (error) => {\r\n  return {\r\n    type: 'DMS_LINK_SEARCH_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}