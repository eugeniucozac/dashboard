{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\nimport { getCatCodes, selectCatCodes } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLoss.propTypes = {\n  steps: PropTypes.array.isRequired,\n  stepsForms: PropTypes.array.isRequired,\n  findDirtyForm: PropTypes.func,\n  initialFormStatus: PropTypes.array,\n  currentStep: PropTypes.number\n};\nClaimsRegisterNewLoss.defaultProps = {\n  currentStep: 0,\n  findDirtyForm: function findDirtyForm() {},\n  initialFormStatus: []\n};\nexport default function ClaimsRegisterNewLoss(_ref) {\n  _s();\n\n  var currentStep = _ref.currentStep,\n      steps = _ref.steps,\n      stepsForms = _ref.stepsForms,\n      findDirtyForm = _ref.findDirtyForm,\n      initialFormStatus = _ref.initialFormStatus;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stepFields = _useState2[0],\n      setStepFields = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      saveStatus = _useState10[0],\n      setSaveStatus = _useState10[1];\n\n  var handleStep = function handleStep(step) {\n    if (activeStep < step) {\n      var _isFormsEdited$active, _isFormsEdited$active2, _isFormsEdited, _isFormsEdited2;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active = isFormsEdited[activeStep]) === null || _isFormsEdited$active === void 0 ? void 0 : _isFormsEdited$active[\"formEditedStatus\"]) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active2 = isFormsEdited[activeStep]) === null || _isFormsEdited$active2 === void 0 ? void 0 : _isFormsEdited$active2[\"isSubmitted\"]) && !(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited = isFormsEdited[step - 1]) === null || _isFormsEdited === void 0 ? void 0 : _isFormsEdited[\"formEditedStatus\"]) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited2 = isFormsEdited[step - 1]) === null || _isFormsEdited2 === void 0 ? void 0 : _isFormsEdited2[\"isSubmitted\"])) {\n        setActiveStep(step);\n      }\n    } else if (activeStep > step) {\n      var _isFormsEdited$active3;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active3 = isFormsEdited[activeStep]) === null || _isFormsEdited$active3 === void 0 ? void 0 : _isFormsEdited$active3[\"formEditedStatus\"])) {\n        setActiveStep(step);\n      }\n    }\n  };\n\n  var handleNext = function handleNext() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState === null || formState === void 0 ? void 0 : formState.map(function (form) {\n      var _formState$activeStep;\n\n      if ((form === null || form === void 0 ? void 0 : form.id) > activeStep && (formState === null || formState === void 0 ? void 0 : (_formState$activeStep = formState[activeStep]) === null || _formState$activeStep === void 0 ? void 0 : _formState$activeStep[\"formEditedStatus\"])) {\n        form[\"isSubmitted\"] = false;\n      }\n    });\n    formState[activeStep][\"isSubmitted\"] = true;\n\n    if (activeStep !== 1) {\n      formState[activeStep][\"formEditedStatus\"] = false;\n      setFormEditedStatus(formState);\n      setActiveStep(activeStep + 1);\n    } else {\n      formState[activeStep][\"formEditedStatus\"] = true;\n      setFormEditedStatus(formState);\n      setSaveStatus(new Date().getTime());\n    }\n  };\n\n  var handleBack = function handleBack() {\n    var _isFormsEdited$active4;\n\n    if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active4 = isFormsEdited[activeStep]) === null || _isFormsEdited$active4 === void 0 ? void 0 : _isFormsEdited$active4[\"formEditedStatus\"])) {\n      setActiveStep(activeStep - 1);\n    }\n  };\n\n  var handleSave = function handleSave() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep][\"formEditedStatus\"] = false;\n    formState[activeStep][\"isSubmitted\"] = true;\n    formState === null || formState === void 0 ? void 0 : formState.map(function (frm) {\n      return (frm === null || frm === void 0 ? void 0 : frm.id) > activeStep ? frm[\"isSubmitted\"] = false : frm[\"isSubmitted\"] = true;\n    });\n    setFormEditedStatus(formState);\n    if (activeStep === 1) setSaveStatus(new Date().getTime());\n  };\n\n  var handleFormStatus = function handleFormStatus() {\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep][\"formEditedStatus\"] = true;\n    formState[activeStep][\"isSubmitted\"] = false;\n    setFormEditedStatus(formState);\n  };\n\n  useEffect(function () {\n    currentStep && setActiveStep(currentStep);\n    setStepFields(steps);\n    setFormEditedStatus(stepsForms);\n    return function () {\n      findDirtyForm(initialFormStatus);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    findDirtyForm(isFormsEdited);\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(ClaimsRegisterNewLossView, {\n    activeStep: activeStep,\n    setActiveStep: setActiveStep,\n    steps: steps,\n    progress: progress,\n    handleStep: handleStep,\n    isFormsEdited: isFormsEdited,\n    isAllStepsCompleted: false,\n    handleFormStatus: handleFormStatus,\n    handleNext: handleNext,\n    handleBack: handleBack,\n    handleSave: handleSave,\n    setFormEditedStatus: setFormEditedStatus,\n    saveStatus: saveStatus,\n    setSaveStatus: setSaveStatus\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsRegisterNewLoss, \"wAtzfT+J/Dd7aH5kQo0T/KhPgko=\");\n\n_c = ClaimsRegisterNewLoss;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLoss\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.js"],"names":["React","useState","useEffect","useDispatch","useSelector","PropTypes","ClaimsRegisterNewLossView","getCatCodes","selectCatCodes","utils","ClaimsRegisterNewLoss","propTypes","steps","array","isRequired","stepsForms","findDirtyForm","func","initialFormStatus","currentStep","number","defaultProps","stepFields","setStepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","saveStatus","setSaveStatus","handleStep","step","handleNext","Date","getTime","formState","map","form","id","handleBack","handleSave","frm","handleFormStatus","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\r\nimport {getCatCodes, selectCatCodes} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nClaimsRegisterNewLoss.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n  stepsForms: PropTypes.array.isRequired,\r\n  findDirtyForm: PropTypes.func,\r\n  initialFormStatus: PropTypes.array,\r\n  currentStep: PropTypes.number\r\n};\r\nClaimsRegisterNewLoss.defaultProps = {\r\n  currentStep: 0,\r\n  findDirtyForm: () => { },\r\n  initialFormStatus: []\r\n}\r\nexport default function ClaimsRegisterNewLoss({ currentStep, steps, stepsForms, findDirtyForm, initialFormStatus }) {\r\n  const [stepFields, setStepFields] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isFormsEdited, setFormEditedStatus] = useState([])\r\n  const [saveStatus, setSaveStatus] = useState();\r\n  const handleStep = (step) => {\r\n    if (activeStep < step) {\r\n      if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]\r\n        && isFormsEdited?.[activeStep]?.[\"isSubmitted\"]\r\n        &&\r\n        (!isFormsEdited?.[step - 1]?.[\"formEditedStatus\"] && isFormsEdited?.[step - 1]?.[\"isSubmitted\"])\r\n      ) {\r\n        setActiveStep(step);\r\n      }\r\n    }\r\n    else if (activeStep > step) {\r\n      if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]) {\r\n        setActiveStep(step);\r\n      }\r\n    }\r\n\r\n  };\r\n  const handleNext = () => {\r\n    setSaveStatus(new Date().getTime());\r\n    const formState = isFormsEdited.map((form) => ({ ...form }))\r\n    formState?.map(form => {\r\n      if (form?.id > activeStep && formState?.[activeStep]?.[\"formEditedStatus\"]) {\r\n        form[\"isSubmitted\"] = false\r\n      }\r\n    })\r\n    formState[activeStep][\"isSubmitted\"] = true;\r\n    if(activeStep !== 1){\r\n        formState[activeStep][\"formEditedStatus\"] = false;\r\n        setFormEditedStatus(formState);\r\n        setActiveStep(activeStep + 1);\r\n    }else{\r\n        formState[activeStep][\"formEditedStatus\"] = true;\r\n        setFormEditedStatus(formState);\r\n        setSaveStatus(new Date().getTime());\r\n    }\r\n  }\r\n  const handleBack = () => {\r\n    if (!isFormsEdited?.[activeStep]?.[\"formEditedStatus\"]) {\r\n      setActiveStep(activeStep - 1)\r\n    }\r\n  }\r\n  const handleSave = () => {\r\n    setSaveStatus(new Date().getTime());\r\n    const formState = isFormsEdited?.map((form) => ({ ...form }))\r\n    formState[activeStep][\"formEditedStatus\"] = false;\r\n    formState[activeStep][\"isSubmitted\"] = true;\r\n    formState?.map(frm => frm?.id > activeStep ? frm[\"isSubmitted\"] = false : frm[\"isSubmitted\"] = true)\r\n    setFormEditedStatus(formState)\r\n    if(activeStep===1)\r\n        setSaveStatus(new Date().getTime());\r\n  }\r\n  const handleFormStatus = () => {\r\n    const formState = isFormsEdited?.map((form) => ({ ...form }))\r\n    formState[activeStep][\"formEditedStatus\"] = true;\r\n    formState[activeStep][\"isSubmitted\"] = false;\r\n    setFormEditedStatus(formState)\r\n  }\r\n\r\n  useEffect(() => {\r\n    currentStep && setActiveStep(currentStep)\r\n    setStepFields(steps);\r\n    setFormEditedStatus(stepsForms)\r\n    return () => {\r\n      findDirtyForm(initialFormStatus)\r\n    };\r\n  }, []);  // eslint-disable-line react-hooks/exhaustive-deps\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    findDirtyForm(isFormsEdited)\r\n  }, [isFormsEdited]);// eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <ClaimsRegisterNewLossView\r\n      activeStep={activeStep}\r\n      setActiveStep={setActiveStep}\r\n      steps={steps}\r\n      progress={progress}\r\n      handleStep={handleStep}\r\n      isFormsEdited={isFormsEdited}\r\n      isAllStepsCompleted={false}\r\n      handleFormStatus={handleFormStatus}\r\n      handleNext={handleNext}\r\n      handleBack={handleBack}\r\n      handleSave={handleSave}\r\n      setFormEditedStatus={setFormEditedStatus}\r\n      saveStatus={saveStatus}\r\n      setSaveStatus={setSaveStatus}\r\n    />\r\n\r\n\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}