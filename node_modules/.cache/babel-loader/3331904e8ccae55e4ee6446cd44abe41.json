{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LinkClaimPolicy\\\\LinkClaimPolicy.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment, useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport moment from 'moment';\nimport get from 'lodash/get'; //app\n\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\nimport styles from './LinkClaimPolicy.styles';\nimport { FormGrid } from 'components';\nimport { getInterest, getClaimDetails, getPolicyInsures, getPolicyClients, getPolicySections, selectClaimsPolicySections, selectClaimsInterestItems, selectClaimPolicyInsures, selectSectionEnabledUG, selectClaimsUnderwritingGroups, selectClaimPolicyClients, selectAllClaimDetails, postClaimDetailsInformation, postEditClaimDetailsInformation, selectLinkPoliciesData, getLinkPoliciesData, selectRefDataNewCountriesList } from 'stores';\nimport * as utils from 'utils';\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts'; //mui\n\nimport Skeleton from '@material-ui/lab/Skeleton';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function SelectedClaimPolicy(_ref) {\n  _s();\n\n  var _interest,\n      _origCurrencies,\n      _settlementCurriencie,\n      _countriesList,\n      _linkPoliciesData$dat,\n      _isFormsEdited$index,\n      _linkPoliciesData$dat2,\n      _isFormsEdited$index2,\n      _linkPoliciesData$dat3,\n      _countriesList2,\n      _isFormsEdited$index3,\n      _linkPoliciesData$dat4,\n      _origCurrencies2,\n      _isFormsEdited$index4,\n      _linkPoliciesData$dat5,\n      _settlementCurriencie2,\n      _isFormsEdited$index5,\n      _linkPoliciesData$dat6,\n      _interest2,\n      _interest3,\n      _linkPoliciesData$dat7,\n      _isFormsEdited$index6,\n      _linkPoliciesData$dat8,\n      _linkPoliciesData$dat9,\n      _linkPoliciesData$dat10,\n      _this = this;\n\n  var policyData = _ref.policyData,\n      selectedPolicyRender = _ref.selectedPolicyRender,\n      setSelectedPolicyRender = _ref.setSelectedPolicyRender,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      setActiveStep = _ref.setActiveStep,\n      index = _ref.index,\n      isFormsEdited = _ref.isFormsEdited,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      claimInfo = _ref.claimInfo,\n      handleFormStatus = _ref.handleFormStatus;\n  var classes = makeStyles(styles, {\n    name: 'LinkClaimPolicy'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDataReady = _useState2[0],\n      setIsDataReady = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      uwResetKey = _useState4[0],\n      setUWResetKey = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      stepper = _useState6[0],\n      setStepper = _useState6[1];\n\n  var dispatch = useDispatch();\n  var interest = useSelector(selectClaimsInterestItems);\n  interest = utils.generic.isValidArray(interest) ? (_interest = interest) === null || _interest === void 0 ? void 0 : _interest.map(function (intrst) {\n    return _objectSpread(_objectSpread({}, intrst), {}, {\n      description: \"\".concat(intrst.code, \" - \").concat(intrst.description)\n    });\n  }) : null;\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var settlementCurriencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  origCurrencies = utils.generic.isValidArray(origCurrencies) ? (_origCurrencies = origCurrencies) === null || _origCurrencies === void 0 ? void 0 : _origCurrencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      currencyName: \"\".concat(currency.currencyCd, \" - \").concat(currency.currencyName)\n    });\n  }) : null;\n  settlementCurriencies = utils.generic.isValidArray(settlementCurriencies) ? (_settlementCurriencie = settlementCurriencies) === null || _settlementCurriencie === void 0 ? void 0 : _settlementCurriencie.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      currencyName: \"\".concat(currency.currencyCd, \" - \").concat(currency.currencyName)\n    });\n  }) : null;\n  var allClaimDetails = useSelector(selectAllClaimDetails);\n  var underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\n  var policySections = useSelector(selectClaimsPolicySections);\n  var claimPolicyInsures = useSelector(selectClaimPolicyInsures);\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var claimPolicyClients = useSelector(selectClaimPolicyClients);\n  var countriesList = useSelector(selectRefDataNewCountriesList);\n  countriesList = utils.generic.isValidArray(countriesList) ? (_countriesList = countriesList) === null || _countriesList === void 0 ? void 0 : _countriesList.map(function (country) {\n    return _objectSpread(_objectSpread({}, country), {}, {\n      countryName: \"\".concat(country.countryCode, \" - \").concat(country.countryName)\n    });\n  }) : null;\n  var linkPoliciesData = useSelector(selectLinkPoliciesData);\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  useEffect(function () {\n    if (selectedPolicyRender !== '') {\n      dispatch(getInterest());\n      dispatch(getPolicyInsures()).then(function (response) {\n        if (utils.generic.isValidArray(response)) {\n          dispatch(getPolicyClients()).then(function (response) {\n            if (utils.generic.isValidArray(response)) {\n              dispatch(getPolicySections()).then(function (response) {\n                if (utils.generic.isValidArray(response)) {\n                  dispatch(getLinkPoliciesData({\n                    loader: true,\n                    fieldLoader: false\n                  }));\n                  setIsDataReady(true);\n                  setUWResetKey(new Date().getTime());\n                }\n              });\n            }\n          });\n        }\n      });\n      dispatch(getClaimDetails());\n    } else {\n      setIsDataReady(true);\n    }\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var sectionAllOption = (policyData === null || policyData === void 0 ? void 0 : policyData.policyType) === CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyInfo = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n\n  var postSaveHandler = function postSaveHandler(postData) {\n    if (!(claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID)) {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          handleFormStatus();\n          setValidation(false);\n        }\n      });\n    } else {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          handleFormStatus();\n          setValidation(false);\n        }\n      });\n    }\n  };\n\n  var postEditSaveHandler = function postEditSaveHandler(postData) {\n    if (claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.claimID) {\n      dispatch(postEditClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          handleFormStatus();\n          setActiveStep(index + 1);\n          setValidation(true);\n          setSelectedPolicyRender('');\n        }\n      });\n    } else {\n      dispatch(postClaimDetailsInformation(postData)).then(function (response) {\n        if (response) {\n          dispatch(getLinkPoliciesData({\n            data: postData\n          }));\n          handleFormStatus();\n          setActiveStep(index + 1);\n          setValidation(true);\n          setSelectedPolicyRender('');\n        }\n      });\n    }\n  };\n\n  var fields = [{\n    name: 'insured',\n    type: 'autocompletemui',\n    options: claimPolicyInsures || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('claims.claimInformation.insured'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat = linkPoliciesData.data) === null || _linkPoliciesData$dat === void 0 ? void 0 : _linkPoliciesData$dat.insured) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.find(function (clmPolicy) {\n      return clmPolicy.id === linkPoliciesData.data.insured.id;\n    }) : (claimPolicyInsures === null || claimPolicyInsures === void 0 ? void 0 : claimPolicyInsures.length) === 1 ? claimPolicyInsures[0] : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'client',\n    type: 'autocompletemui',\n    options: claimPolicyClients || [],\n    optionKey: 'id',\n    optionLabel: 'name',\n    label: utils.string.t('claims.claimInformation.client'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat2 = linkPoliciesData.data) === null || _linkPoliciesData$dat2 === void 0 ? void 0 : _linkPoliciesData$dat2.client) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.find(function (clmPolicyclnt) {\n      return clmPolicyclnt.id === linkPoliciesData.data.client.id;\n    }) : (claimPolicyClients === null || claimPolicyClients === void 0 ? void 0 : claimPolicyClients.length) === 1 ? claimPolicyClients[0] : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    }) : false\n  }, {\n    name: 'countryCode',\n    type: 'autocompletemui',\n    options: countriesList || [],\n    optionKey: 'countryCode',\n    optionLabel: 'countryName',\n    label: utils.string.t('claims.claimInformation.country'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat3 = linkPoliciesData.data) === null || _linkPoliciesData$dat3 === void 0 ? void 0 : _linkPoliciesData$dat3.countryCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_countriesList2 = countriesList) === null || _countriesList2 === void 0 ? void 0 : _countriesList2.find(function (country) {\n      return country.countryCode === linkPoliciesData.data.countryCode.countryCode;\n    }) : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'originalCurrencyCode',\n    type: 'autocompletemui',\n    options: origCurrencies || [],\n    optionKey: 'currencyCd',\n    optionLabel: 'currencyName',\n    label: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat4 = linkPoliciesData.data) === null || _linkPoliciesData$dat4 === void 0 ? void 0 : _linkPoliciesData$dat4.originalCurrencyCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_origCurrencies2 = origCurrencies) === null || _origCurrencies2 === void 0 ? void 0 : _origCurrencies2.find(function (currency) {\n      return currency.currencyCd === linkPoliciesData.data.originalCurrencyCode.currencyCd;\n    }) : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'settlementCurrencyCode',\n    type: 'autocompletemui',\n    options: settlementCurriencies || [],\n    optionKey: 'currencyCd',\n    optionLabel: 'currencyName',\n    label: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat5 = linkPoliciesData.data) === null || _linkPoliciesData$dat5 === void 0 ? void 0 : _linkPoliciesData$dat5.originalCurrencyCode) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_settlementCurriencie2 = settlementCurriencies) === null || _settlementCurriencie2 === void 0 ? void 0 : _settlementCurriencie2.find(function (currency) {\n      return currency.currencyCd === linkPoliciesData.data.settlementCurrencyCode.currencyCd;\n    }) : null,\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.formEditedStatus) ? Yup.object().nullable().required(utils.string.t('validation.required')) : false\n  }, {\n    name: 'interest',\n    type: 'autocompletemui',\n    options: interest,\n    label: utils.string.t('claims.claimInformation.interest'),\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat6 = linkPoliciesData.data) === null || _linkPoliciesData$dat6 === void 0 ? void 0 : _linkPoliciesData$dat6.interest) && !(linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.fieldLoader) ? (_interest2 = interest) === null || _interest2 === void 0 ? void 0 : _interest2.find(function (intrst) {\n      return intrst.xbPolicyID === linkPoliciesData.data.interest.xbPolicyID;\n    }) : ((_interest3 = interest) === null || _interest3 === void 0 ? void 0 : _interest3.length) === 1 ? interest[0] : null,\n    optionKey: 'xbPolicyID',\n    optionLabel: 'description' //validation: Yup.object().nullable(),\n\n  }, {\n    name: 'movementType',\n    type: 'toggle',\n    label: '',\n    value: 'Advice',\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.advice'),\n      value: 'Advice'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.settlement'),\n      value: 'Settlement'\n    }]\n  }, {\n    name: 'order',\n    type: 'radio',\n    defaultValue: '100',\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\n      value: '100'\n    }, {\n      label: utils.string.t('claims.typeOfSettlement.ourShare'),\n      value: '0'\n    }]\n  }, {\n    name: 'orderPercentage',\n    type: 'number',\n    defaultValue: underWritingGroups.percentageOfSelected || '0',\n    value: underWritingGroups.percentageOfSelected || '0',\n    muiComponentProps: {\n      disabled: true\n    },\n    validation: Yup.number().min(0, utils.string.t('claims.typeOfSettlement.errorMin')).max(100, utils.string.t('claims.typeOfSettlement.error'))\n  }].concat(_toConsumableArray(isBordereauFlag ? [{\n    name: 'certificateNumber',\n    type: 'text',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateNumber) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat7 = linkPoliciesData.data) === null || _linkPoliciesData$dat7 === void 0 ? void 0 : _linkPoliciesData$dat7.certificateNumber) || '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus) ? Yup.string().nullable().required(utils.string.t('validation.required')).max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    }) : false\n  }, {\n    type: 'datepicker',\n    name: 'certificateInceptionDate',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateInceptionDate) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat8 = linkPoliciesData.data) === null || _linkPoliciesData$dat8 === void 0 ? void 0 : _linkPoliciesData$dat8.certificateInceptionDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\n      return value && this.options.parent.certificateExpiryDate ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'certificateExpiryDate',\n    value: (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.certificateExpiryDate) || (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat9 = linkPoliciesData.data) === null || _linkPoliciesData$dat9 === void 0 ? void 0 : _linkPoliciesData$dat9.certificateExpiryDate) || null,\n    muiComponentProps: {\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY',\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    },\n    validation: Yup.date().nullable().required(utils.string.t('validation.required')).test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\n      return value && this.options.parent.certificateInceptionDate ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate) : true;\n    }).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.date().nullable();\n    }),\n    outputFormat: 'iso'\n  }] : []), _toConsumableArray(isSectionEnabled ? [{\n    name: 'ugSections',\n    type: 'autocompletemui',\n    value: (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : (_linkPoliciesData$dat10 = linkPoliciesData.data) === null || _linkPoliciesData$dat10 === void 0 ? void 0 : _linkPoliciesData$dat10.ugSections) || null,\n    options: policyInfo,\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }] : []));\n\n  if (!isDataReady && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) === '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm) === '') {\n    return /*#__PURE__*/_jsxDEV(FormGrid, {\n      container: true,\n      spacing: 4,\n      children: _toConsumableArray(new Array(3)).map(function (item, index) {\n        return /*#__PURE__*/_jsxDEV(Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(Skeleton, {\n              height: 30,\n              width: 100\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 358,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 357,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              spacing: 4,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 363,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 364,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 362,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 367,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 368,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 366,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                md: 4,\n                children: [/*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 16\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 371,\n                  columnNumber: 19\n                }, _this), /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 30,\n                  variant: \"rect\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 372,\n                  columnNumber: 19\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 370,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 361,\n              columnNumber: 15\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 360,\n            columnNumber: 13\n          }, _this)]\n        }, \"skeleton-\".concat(index), true, {\n          fileName: _jsxFileName,\n          lineNumber: 356,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 354,\n      columnNumber: 7\n    }, this);\n  }\n\n  return (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchBy) !== '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.searchTerm) !== '' && (linkPoliciesData === null || linkPoliciesData === void 0 ? void 0 : linkPoliciesData.loader) && /*#__PURE__*/_jsxDEV(LinkClaimPolicyView, {\n    fields: fields,\n    policyData: policyData,\n    claimPolicyInsures: claimPolicyInsures,\n    interest: interest,\n    uwResetKey: uwResetKey,\n    hasClaimRef: false,\n    underWritingGroups: underWritingGroups,\n    claimPolicyClients: claimPolicyClients,\n    isBordereauFlag: isBordereauFlag,\n    validation: validation,\n    setValidation: setValidation,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    setFormEditedStatus: setFormEditedStatus,\n    postSaveHandler: postSaveHandler,\n    postEditSaveHandler: postEditSaveHandler,\n    saveStatus: saveStatus,\n    selectedPolicyRender: selectedPolicyRender,\n    handleFormStatus: handleFormStatus,\n    stepper: stepper,\n    setStepper: setStepper\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 383,\n    columnNumber: 113\n  }, this);\n}\n\n_s(SelectedClaimPolicy, \"fljuJcXw+kRoK3C5LcUr7hlb6G4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = SelectedClaimPolicy;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectedClaimPolicy\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LinkClaimPolicy/LinkClaimPolicy.js"],"names":["React","Fragment","useState","useEffect","useDispatch","useSelector","Yup","moment","get","LinkClaimPolicyView","styles","FormGrid","getInterest","getClaimDetails","getPolicyInsures","getPolicyClients","getPolicySections","selectClaimsPolicySections","selectClaimsInterestItems","selectClaimPolicyInsures","selectSectionEnabledUG","selectClaimsUnderwritingGroups","selectClaimPolicyClients","selectAllClaimDetails","postClaimDetailsInformation","postEditClaimDetailsInformation","selectLinkPoliciesData","getLinkPoliciesData","selectRefDataNewCountriesList","utils","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","Skeleton","makeStyles","SelectedClaimPolicy","policyData","selectedPolicyRender","setSelectedPolicyRender","validation","setValidation","setActiveStep","index","isFormsEdited","setFormEditedStatus","saveStatus","claimInfo","handleFormStatus","classes","name","isDataReady","setIsDataReady","uwResetKey","setUWResetKey","stepper","setStepper","dispatch","interest","generic","isValidArray","map","intrst","description","code","origCurrencies","state","settlementCurriencies","currency","currencyName","currencyCd","allClaimDetails","underWritingGroups","policySections","claimPolicyInsures","isSectionEnabled","claimPolicyClients","countriesList","country","countryName","countryCode","linkPoliciesData","isBordereauFlag","isBordereau","then","response","loader","fieldLoader","Date","getTime","sectionAllOption","policyType","id","string","t","policyInfo","postSaveHandler","postData","claimID","data","postEditSaveHandler","fields","type","options","optionKey","optionLabel","label","value","insured","find","clmPolicy","length","formEditedStatus","object","nullable","required","when","schema","client","clmPolicyclnt","originalCurrencyCode","settlementCurrencyCode","xbPolicyID","defaultValue","muiFormGroupProps","row","root","radioLabel","percentageOfSelected","muiComponentProps","disabled","number","min","max","certificateNumber","formInput","certificateInceptionDate","clearable","variant","format","fullWidth","datepicker","date","test","parent","certificateExpiryDate","isSameOrBefore","outputFormat","isSameOrAfter","ugSections","searchBy","searchTerm","Array","item"],"mappings":"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","sourcesContent":["import React, { Fragment, useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport moment from 'moment';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport { LinkClaimPolicyView } from './LinkClaimPolicy.view';\r\nimport styles from './LinkClaimPolicy.styles';\r\nimport { FormGrid } from 'components';\r\nimport { \r\n    getInterest,\r\n    getClaimDetails,\r\n    getPolicyInsures,\r\n    getPolicyClients,\r\n    getPolicySections,\r\n    selectClaimsPolicySections,\r\n    selectClaimsInterestItems,\r\n    selectClaimPolicyInsures,\r\n    selectSectionEnabledUG,\r\n    selectClaimsUnderwritingGroups,\r\n    selectClaimPolicyClients,\r\n    selectAllClaimDetails,\r\n    postClaimDetailsInformation,\r\n    postEditClaimDetailsInformation,\r\n    selectLinkPoliciesData,\r\n    getLinkPoliciesData,\r\n    selectRefDataNewCountriesList,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport { CLAIM_SECTION_ENABLED_UG, CLAIM_POLICY_SECTION_DEFAULT } from 'consts';\r\n\r\n//mui\r\nimport Skeleton from '@material-ui/lab/Skeleton';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function SelectedClaimPolicy({\r\n  policyData, \r\n  selectedPolicyRender,\r\n  setSelectedPolicyRender, \r\n  validation, \r\n  setValidation,\r\n  setActiveStep,\r\n  index,\r\n  isFormsEdited,\r\n  setFormEditedStatus,\r\n  saveStatus,\r\n  claimInfo,\r\n  handleFormStatus,\r\n}){\r\n  const classes = makeStyles(styles, { name: 'LinkClaimPolicy' })();\r\n  const [isDataReady, setIsDataReady] = useState(false);\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const [stepper, setStepper] = useState(false);\r\n  const dispatch = useDispatch();\r\n  let interest = useSelector(selectClaimsInterestItems);\r\n  interest = utils.generic.isValidArray(interest) ? interest?.map((intrst) => ({...intrst, description: `${intrst.code} - ${intrst.description}`})) : null;\r\n  let origCurrencies  = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  let settlementCurriencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  origCurrencies = utils.generic.isValidArray(origCurrencies) ? origCurrencies?.map((currency) => ({ ...currency, currencyName: `${currency.currencyCd} - ${currency.currencyName}` })) : null;\r\n  settlementCurriencies = utils.generic.isValidArray(settlementCurriencies) ? settlementCurriencies?.map((currency) => ({ ...currency, currencyName: `${currency.currencyCd} - ${currency.currencyName}` })) : null;\r\n  const allClaimDetails = useSelector(selectAllClaimDetails);\r\n  const underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n  const claimPolicyInsures = useSelector(selectClaimPolicyInsures);\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const claimPolicyClients = useSelector(selectClaimPolicyClients);\r\n  let countriesList = useSelector(selectRefDataNewCountriesList,);\r\n  countriesList = utils.generic.isValidArray(countriesList) ? countriesList?.map((country)=>({...country, countryName: `${country.countryCode} - ${country.countryName}`})) : null;\r\n  const linkPoliciesData = useSelector(selectLinkPoliciesData);\r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n\r\n  useEffect(()=>{\r\n    if(selectedPolicyRender!==''){\r\n      dispatch(getInterest());\r\n      dispatch(getPolicyInsures()).then((response) => {\r\n          if (utils.generic.isValidArray(response)) {\r\n            dispatch(getPolicyClients()).then((response) => {\r\n              if (utils.generic.isValidArray(response)) {\r\n                dispatch(getPolicySections()).then((response)=>{\r\n                  if (utils.generic.isValidArray(response)) {\r\n                    dispatch(getLinkPoliciesData({loader: true, fieldLoader: false}));\r\n                    setIsDataReady(true);\r\n                    setUWResetKey(new Date().getTime());\r\n                  }\r\n                })\r\n              }\r\n            });\r\n          }\r\n        });\r\n      dispatch(getClaimDetails());\r\n    }else{\r\n      setIsDataReady(true);\r\n    }\r\n  }, [selectedPolicyRender]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const sectionAllOption =\r\n  policyData?.policyType === CLAIM_SECTION_ENABLED_UG[0]\r\n    ? []\r\n    : [{ id: CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyInfo = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const postSaveHandler = (postData) => {\r\n    if(!claimInfo?.claimID){\r\n      dispatch(postClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          dispatch(getLinkPoliciesData({data: postData}));\r\n          handleFormStatus();\r\n          setValidation(false);\r\n        }\r\n      });\r\n    }else{\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          dispatch(getLinkPoliciesData({data: postData}));\r\n          handleFormStatus();\r\n          setValidation(false);\r\n        }\r\n      });\r\n    }\r\n    \r\n  };\r\n\r\n  const postEditSaveHandler = (postData) => {\r\n    if(claimInfo?.claimID){\r\n      dispatch(postEditClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          dispatch(getLinkPoliciesData({data: postData}));\r\n          handleFormStatus();\r\n          setActiveStep(index + 1);\r\n          setValidation(true);\r\n          setSelectedPolicyRender('');\r\n        }\r\n      });\r\n    }else{\r\n      dispatch(postClaimDetailsInformation(postData)).then((response)=>{\r\n        if(response){\r\n          dispatch(getLinkPoliciesData({data: postData}));\r\n          handleFormStatus();\r\n          setActiveStep(index + 1);\r\n          setValidation(true);\r\n          setSelectedPolicyRender('');\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'insured',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyInsures || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('claims.claimInformation.insured'),\r\n      value: (linkPoliciesData?.data?.insured && !linkPoliciesData?.fieldLoader) ? claimPolicyInsures?.find((clmPolicy)=>clmPolicy.id === linkPoliciesData.data.insured.id) : (claimPolicyInsures?.length === 1 ? claimPolicyInsures[0] : null),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())) : false,\r\n    },\r\n    {\r\n      name: 'client',\r\n      type: 'autocompletemui',\r\n      options: claimPolicyClients || [],\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      label: utils.string.t('claims.claimInformation.client'),\r\n      value: (linkPoliciesData?.data?.client && !linkPoliciesData?.fieldLoader) ? claimPolicyClients?.find((clmPolicyclnt)=>clmPolicyclnt.id === linkPoliciesData.data.client.id) : (claimPolicyClients?.length === 1 ? claimPolicyClients[0] : null),\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())) : false,\r\n    },\r\n    {\r\n      name: 'countryCode',\r\n      type: 'autocompletemui',\r\n      options: countriesList || [],\r\n      optionKey: 'countryCode',\r\n      optionLabel: 'countryName',\r\n      label: utils.string.t('claims.claimInformation.country'),\r\n      value: (linkPoliciesData?.data?.countryCode && !linkPoliciesData?.fieldLoader) ? countriesList?.find((country)=> country.countryCode === linkPoliciesData.data.countryCode.countryCode) : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'originalCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: origCurrencies || [],\r\n      optionKey: 'currencyCd',\r\n      optionLabel: 'currencyName',\r\n      label: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: (linkPoliciesData?.data?.originalCurrencyCode && !linkPoliciesData?.fieldLoader) ? origCurrencies?.find((currency)=> currency.currencyCd === linkPoliciesData.data.originalCurrencyCode.currencyCd) : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'settlementCurrencyCode',\r\n      type: 'autocompletemui',\r\n      options: settlementCurriencies || [],\r\n      optionKey: 'currencyCd',\r\n      optionLabel: 'currencyName',\r\n      label: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: (linkPoliciesData?.data?.originalCurrencyCode && !linkPoliciesData?.fieldLoader) ? settlementCurriencies?.find((currency)=> currency.currencyCd === linkPoliciesData.data.settlementCurrencyCode.currencyCd) : null,\r\n      validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.object().nullable().required(utils.string.t('validation.required')) : false,\r\n    },\r\n    {\r\n      name: 'interest',\r\n      type: 'autocompletemui',\r\n      options: interest,\r\n      label: utils.string.t('claims.claimInformation.interest'),\r\n      value: (linkPoliciesData?.data?.interest && !linkPoliciesData?.fieldLoader) ? interest?.find((intrst)=>intrst.xbPolicyID === linkPoliciesData.data.interest.xbPolicyID) : (interest?.length === 1 ? interest[0] : null),\r\n      optionKey: 'xbPolicyID',\r\n      optionLabel: 'description',\r\n      //validation: Yup.object().nullable(),\r\n    },\r\n    {\r\n      name: 'movementType',\r\n      type: 'toggle',\r\n      label: '',\r\n      value: 'Advice',\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.advice'),\r\n          value: 'Advice',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.settlement'),\r\n          value: 'Settlement',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'order',\r\n      type: 'radio',\r\n      defaultValue: '100',\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.oneHundredPercent'),\r\n          value: '100',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.typeOfSettlement.ourShare'),\r\n          value: '0',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'orderPercentage',\r\n      type: 'number',\r\n      defaultValue: underWritingGroups.percentageOfSelected || '0',\r\n      value: underWritingGroups.percentageOfSelected || '0',\r\n      muiComponentProps: {\r\n        disabled: true,\r\n      },\r\n      validation: Yup.number()\r\n        .min(0, utils.string.t('claims.typeOfSettlement.errorMin'))\r\n        .max(100, utils.string.t('claims.typeOfSettlement.error')),\r\n    },\r\n    ...(isBordereauFlag\r\n      ? [\r\n          {\r\n            name: 'certificateNumber',\r\n            type: 'text',\r\n            value: allClaimDetails?.certificateNumber || linkPoliciesData?.data?.certificateNumber || '',\r\n            muiComponentProps: {\r\n              classes: {\r\n                root: classes.formInput,\r\n              },\r\n            },\r\n            validation: isFormsEdited?.[index]?.formEditedStatus ? Yup.string()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .max(17, utils.string.t('claims.claimInformation.validation.maxCerficateNumber'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.string())) : false,\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateInceptionDate',\r\n            value: allClaimDetails?.certificateInceptionDate || linkPoliciesData?.data?.certificateInceptionDate || null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.greaterThenExpDate'), function (value) {\r\n                return value && this.options.parent.certificateExpiryDate\r\n                  ? moment(value).isSameOrBefore(this.options.parent.certificateExpiryDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'certificateExpiryDate',\r\n            value: allClaimDetails?.certificateExpiryDate || linkPoliciesData?.data?.certificateExpiryDate || null,\r\n            muiComponentProps: {\r\n              clearable: false,\r\n              variant: 'inline',\r\n              format: 'DD-MM-YYYY',\r\n              fullWidth: true,\r\n              classes: {\r\n                root: classes.datepicker,\r\n              },\r\n            },\r\n            validation: Yup.date()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .test('from', utils.string.t('claims.claimInformation.validation.lesserThenIncDate'), function (value) {\r\n                return value && this.options.parent.certificateInceptionDate\r\n                  ? moment(value).isSameOrAfter(this.options.parent.certificateInceptionDate)\r\n                  : true;\r\n              })\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.date().nullable())),\r\n            outputFormat: 'iso',\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isSectionEnabled\r\n      ? [\r\n          {\r\n            name: 'ugSections',\r\n            type: 'autocompletemui',\r\n            value: linkPoliciesData?.data?.ugSections || null,\r\n            options: policyInfo,\r\n            optionKey: 'id',\r\n            optionLabel: 'name',\r\n            validation: Yup.object()\r\n              .nullable()\r\n              .required(utils.string.t('validation.required'))\r\n              .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n    \r\n\r\n    if (!isDataReady && (linkPoliciesData?.searchBy === '' && linkPoliciesData?.searchTerm === '')) {\r\n      return (\r\n      <FormGrid container spacing={4}>\r\n          {[...new Array(3)].map((item, index) => (\r\n          <Fragment key={`skeleton-${index}`}>\r\n            <FormGrid item xs={12}>\r\n              <Skeleton height={30} width={100} />\r\n            </FormGrid>\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container spacing={4}>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} md={4}>\r\n                  <Skeleton height={16} />\r\n                  <Skeleton height={30} variant=\"rect\" />\r\n                  </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </Fragment>\r\n          ))}\r\n      </FormGrid>\r\n      );\r\n    }\r\n\r\n    return(\r\n      (linkPoliciesData?.searchBy !== '' && linkPoliciesData?.searchTerm !== '' && linkPoliciesData?.loader) && <LinkClaimPolicyView\r\n        fields={fields}\r\n        policyData={policyData}\r\n        claimPolicyInsures={claimPolicyInsures}\r\n        interest={interest}\r\n        uwResetKey={uwResetKey}\r\n        hasClaimRef={false}\r\n        underWritingGroups={underWritingGroups}\r\n        claimPolicyClients={claimPolicyClients}\r\n        isBordereauFlag={isBordereauFlag}\r\n        validation={validation}\r\n        setValidation={setValidation}\r\n        index={index}\r\n        isFormsEdited={isFormsEdited}\r\n        setFormEditedStatus={setFormEditedStatus}\r\n        postSaveHandler={postSaveHandler}\r\n        postEditSaveHandler={postEditSaveHandler}\r\n        saveStatus={saveStatus}\r\n        selectedPolicyRender={selectedPolicyRender}\r\n        handleFormStatus={handleFormStatus}\r\n        stepper={stepper}\r\n        setStepper={setStepper}\r\n      />\r\n    )\r\n}"]},"metadata":{},"sourceType":"module"}