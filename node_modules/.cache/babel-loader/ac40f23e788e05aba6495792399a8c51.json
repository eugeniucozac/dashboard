{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport * as Yup from 'yup';\nimport * as utils from 'utils';\nimport isEmpty from 'lodash/isEmpty';\nimport config, { selectOptions } from 'config'; // numberCurrencyObject\n\nexport var numberCurrencyObject = function numberCurrencyObject(message) {\n  var params = {\n    integer: config.ui.format.currency.integer,\n    decimal: config.ui.format.currency.decimal\n  };\n  return {\n    name: 'test-number-currency',\n    message: message || utils.string.t('validation.number.format', params),\n    params: params,\n    test: function test(value) {\n      var regex = new RegExp('^\\\\d{0,' + params.integer + '}(?:\\\\.\\\\d{0,' + params.decimal + '})?$');\n      return value ? regex.test(value) : true;\n    }\n  };\n};\nYup.addMethod(Yup.number, 'currency', function (message) {\n  return this.test(numberCurrencyObject(message));\n}); // Number to be multiple of 'multipleOf' number\n\nexport var numberMultipleOfNumber = function numberMultipleOfNumber(multipleOf, message) {\n  return {\n    name: 'test-number-multipleOf',\n    message: message || utils.string.t('validation.number.multiple', {\n      multipleOf: multipleOf\n    }),\n    params: {\n      multipleOf: multipleOf\n    },\n    test: function test(value) {\n      return value === 0 || value % multipleOf === 0 ? true : false;\n    }\n  };\n};\nYup.addMethod(Yup.number, 'multiple', function (multipleOf, message) {\n  return this.test(numberMultipleOfNumber(multipleOf, message));\n}); // numberPercentObject\n\nexport var numberPercentObject = function numberPercentObject(message) {\n  var params = {\n    integer: config.ui.format.percent.integer,\n    decimal: config.ui.format.percent.decimal\n  };\n  return {\n    name: 'test-number-percent',\n    message: message || utils.string.t('validation.number.format', params),\n    params: params,\n    test: function test(value) {\n      var regex = new RegExp('^\\\\d{0,' + params.integer + '}(?:\\\\.\\\\d{0,' + params.decimal + '})?$');\n      return value ? regex.test(value) : true;\n    }\n  };\n};\nYup.addMethod(Yup.number, 'percent', function (message) {\n  return this.test(numberPercentObject(message));\n}); // numberFormatObject\n\nexport var numberFormatObject = function numberFormatObject(message) {\n  var integer = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : config.ui.format.number.integer;\n  var decimal = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : config.ui.format.number.decimal;\n  return {\n    name: 'test-number-format',\n    message: message || utils.string.t('validation.number.format', {\n      integer: integer,\n      decimal: decimal\n    }),\n    params: {\n      integer: integer,\n      decimal: decimal\n    },\n    test: function test(value) {\n      var regex = new RegExp('^\\\\d{0,' + integer + '}(?:\\\\.\\\\d{0,' + decimal + '})?$');\n      return value ? regex.test(value) : true;\n    }\n  };\n};\nYup.addMethod(Yup.number, 'format', function (integer, decimal, message) {\n  return this.test(numberFormatObject(message, integer, decimal));\n}); // atLeastOneOfObject\n\nexport var atLeastOneOfObject = function atLeastOneOfObject(message) {\n  var list = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n  return {\n    name: 'atLeastOneOf',\n    message: message || utils.string.t('validation.atLeastOneOf'),\n    exclusive: true,\n    params: {\n      keys: list.join(', ')\n    },\n    test: function test() {\n      var parent = this.parent;\n      return list.some(function (f) {\n        return parent[f] === 0 || !!parent[f];\n      });\n    }\n  };\n};\nYup.addMethod(Yup.mixed, 'atLeastOneOf', function (list, message) {\n  return this.test(atLeastOneOfObject(message, list));\n});\nvar utilsForm = {\n  getValidationSchema: function getValidationSchema(fields) {\n    var validation = {};\n\n    var getValidationObj = function getValidationObj(field) {\n      if (field.type === 'legend') return;\n      validation[field.name] = field.validation;\n    };\n\n    if (fields) {\n      fields.forEach(function (field) {\n        if (Array.isArray(field)) {\n          field.forEach(function (item) {\n            return getValidationObj(item);\n          });\n        } else {\n          getValidationObj(field);\n        }\n      });\n    }\n\n    return Yup.object().shape(validation);\n  },\n  getNestedInitialValues: function getNestedInitialValues() {\n    var rows = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var nameKey = arguments.length > 1 ? arguments[1] : undefined;\n    if (!Array.isArray(rows)) return [];\n    var values = {};\n    rows.forEach(function (row) {\n      return values[row.rowKey] = utilsForm.getInitialValues(row.cells, nameKey);\n    });\n    return values;\n  },\n  getInitialValues: function getInitialValues(fields) {\n    var key = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'name';\n    if (!fields || !Array.isArray(fields) || isEmpty(fields)) return {};\n    var values = {};\n\n    var getValues = function getValues(field) {\n      if (!field[key] || field.type === 'legend') return; // if field type is array or object, we iterate over the array field/items\n\n      if (field.type === 'array') {\n        if (field.startEmpty) field.typevalues = null;else field.typevalues = utilsForm.getArrayValues(field, key, values);\n      } else if (['object', 'address'].includes(field.type)) {\n        values = utilsForm.getObjectValues(field, key, values);\n      } else {\n        values[field[key]] = field.value;\n      }\n    };\n\n    if (fields) {\n      fields.forEach(function (field) {\n        if (Array.isArray(field)) {\n          field.forEach(function (innerField) {\n            return getValues(innerField);\n          });\n        } else {\n          getValues(field);\n        }\n      });\n    }\n\n    return values;\n  },\n  getFormattedValues: function getFormattedValues(values, fields) {\n    if (!fields || !Array.isArray(fields) || isEmpty(fields)) return {};\n    var formattedValues = {};\n\n    var getValues = function getValues(value, key, field) {\n      if (!field || (field === null || field === void 0 ? void 0 : field.type) === 'legend') return;\n\n      if (field.type === 'array') {\n        formattedValues[key] = value ? value : [];\n      } else if (['object', 'address'].includes(field.type)) {\n        formattedValues[key] = value ? value : null;\n      } else {\n        formattedValues[key] = value;\n      }\n    };\n\n    Object.entries(values).forEach(function (singleValue) {\n      var _singleValue = _slicedToArray(singleValue, 2),\n          key = _singleValue[0],\n          value = _singleValue[1];\n\n      var field = fields.find(function (field) {\n        return field.name === key;\n      });\n      getValues(value, key, field);\n    });\n    return formattedValues;\n  },\n  getArrayValues: function getArrayValues(field, key, values) {\n    if (utils.generic.isValidArray(field.arrayDefaultValues, true)) {\n      values[field[key]] = _toConsumableArray(field.arrayDefaultValues);\n    } else {\n      values[field[key]] = [field.arrayItemDef.reduce(function (acc, def) {\n        return Object.assign(acc, _defineProperty({}, def.name, def.value));\n      }, {})];\n    }\n\n    return values;\n  },\n  getObjectValues: function getObjectValues(field, key, values) {\n    values[field[key]] = field.objectDef.reduce(function (acc, def) {\n      return Object.assign(acc, _defineProperty({}, def.name, def.value));\n    }, {});\n    return values;\n  },\n  getFieldProps: function getFieldProps(fields, name, control, errors) {\n    if (!fields || !Array.isArray(fields) || isEmpty(fields) || !name) return {};\n    var field = fields.find(function (field) {\n      return field.name === name;\n    }) || {};\n    return _objectSpread(_objectSpread(_objectSpread({}, field), utils.generic.isValidObject(control) && {\n      control: control\n    }), utils.generic.isValidObject(errors) && field.name && {\n      error: errors[field.name]\n    });\n  },\n  getLabelById: function getLabelById(fields, value) {\n    if (!utils.generic.isValidArray(fields) || !value) return value;\n    var item = fields.find(function (field) {\n      return field.id && field.id.toString() === value.toString();\n    });\n    return item && item.label ? item.label : value;\n  },\n  getSelectOptions: function getSelectOptions(id, obj) {\n    var options = selectOptions.options[id];\n    if (!options) return [];\n    var dynamic = options.dynamic,\n        fixed = options.fixed;\n\n    if (dynamic) {\n      var items = obj[dynamic.source] || [];\n\n      if (dynamic.transform) {\n        return items.map(function (item) {\n          return dynamic.transform(item);\n        });\n      }\n\n      return items.map(function (item) {\n        return {\n          id: item[dynamic.value],\n          value: item[dynamic.value],\n          label: item[dynamic.label]\n        };\n      });\n    }\n\n    if (fixed) {\n      return fixed.options.map(function (option) {\n        return {\n          id: option,\n          value: option,\n          label: utils.string.t(\"\".concat(fixed.labelPath, \".\").concat(utils.string.replaceLowerCase(option)))\n        };\n      });\n    }\n  },\n  getSelectOption: function getSelectOption(id, obj, value) {\n    if (!value) return;\n    var options = selectOptions.options[id];\n    if (!options) return '';\n    var dynamic = options.dynamic,\n        fixed = options.fixed;\n\n    if (dynamic) {\n      var items = obj[dynamic.source] || [];\n      var item = items.find(function (item) {\n        return item[dynamic.value] && item[dynamic.value].toString() === value.toString();\n      });\n      return item ? item[dynamic.label] : '';\n    }\n\n    if (fixed) {\n      var option = fixed.options.find(function (option) {\n        return option === value;\n      });\n      return utils.string.t(\"\".concat(fixed.labelPath, \".\").concat(utils.string.replaceLowerCase(option)));\n    }\n  },\n  getValidationLabel: function getValidationLabel(label, type) {\n    switch (type) {\n      case 'required':\n        return \"\".concat(utils.string.t(label), \" \").concat(utils.string.t('form.validation.isRequired'));\n\n      default:\n        return utils.string.t(label);\n    }\n  }\n};\nexport default utilsForm;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/form/form.js"],"names":["Yup","utils","isEmpty","config","selectOptions","numberCurrencyObject","message","params","integer","ui","format","currency","decimal","name","string","t","test","value","regex","RegExp","addMethod","number","numberMultipleOfNumber","multipleOf","numberPercentObject","percent","numberFormatObject","atLeastOneOfObject","list","exclusive","keys","join","parent","some","f","mixed","utilsForm","getValidationSchema","fields","validation","getValidationObj","field","type","forEach","Array","isArray","item","object","shape","getNestedInitialValues","rows","nameKey","values","row","rowKey","getInitialValues","cells","key","getValues","startEmpty","typevalues","getArrayValues","includes","getObjectValues","innerField","getFormattedValues","formattedValues","Object","entries","singleValue","find","generic","isValidArray","arrayDefaultValues","arrayItemDef","reduce","acc","def","assign","objectDef","getFieldProps","control","errors","isValidObject","error","getLabelById","id","toString","label","getSelectOptions","obj","options","dynamic","fixed","items","source","transform","map","option","labelPath","replaceLowerCase","getSelectOption","getValidationLabel"],"mappings":"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","sourcesContent":["import * as Yup from 'yup';\r\nimport * as utils from 'utils';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport config, { selectOptions } from 'config';\r\n\r\n// numberCurrencyObject\r\nexport const numberCurrencyObject = (message) => {\r\n  const params = {\r\n    integer: config.ui.format.currency.integer,\r\n    decimal: config.ui.format.currency.decimal,\r\n  };\r\n\r\n  return {\r\n    name: 'test-number-currency',\r\n    message: message || utils.string.t('validation.number.format', params),\r\n    params,\r\n    test: function (value) {\r\n      const regex = new RegExp('^\\\\d{0,' + params.integer + '}(?:\\\\.\\\\d{0,' + params.decimal + '})?$');\r\n      return value ? regex.test(value) : true;\r\n    },\r\n  };\r\n};\r\n\r\nYup.addMethod(Yup.number, 'currency', function (message) {\r\n  return this.test(numberCurrencyObject(message));\r\n});\r\n\r\n// Number to be multiple of 'multipleOf' number\r\nexport const numberMultipleOfNumber = (multipleOf, message) => {\r\n  return {\r\n    name: 'test-number-multipleOf',\r\n    message: message || utils.string.t('validation.number.multiple', { multipleOf }),\r\n    params: { multipleOf },\r\n    test: function (value) {\r\n      return value === 0 || value % multipleOf === 0 ? true : false;\r\n    },\r\n  };\r\n};\r\n\r\nYup.addMethod(Yup.number, 'multiple', function (multipleOf, message) {\r\n  return this.test(numberMultipleOfNumber(multipleOf, message));\r\n});\r\n\r\n// numberPercentObject\r\nexport const numberPercentObject = (message) => {\r\n  const params = {\r\n    integer: config.ui.format.percent.integer,\r\n    decimal: config.ui.format.percent.decimal,\r\n  };\r\n\r\n  return {\r\n    name: 'test-number-percent',\r\n    message: message || utils.string.t('validation.number.format', params),\r\n    params,\r\n    test: function (value) {\r\n      const regex = new RegExp('^\\\\d{0,' + params.integer + '}(?:\\\\.\\\\d{0,' + params.decimal + '})?$');\r\n      return value ? regex.test(value) : true;\r\n    },\r\n  };\r\n};\r\n\r\nYup.addMethod(Yup.number, 'percent', function (message) {\r\n  return this.test(numberPercentObject(message));\r\n});\r\n\r\n// numberFormatObject\r\nexport const numberFormatObject = (message, integer = config.ui.format.number.integer, decimal = config.ui.format.number.decimal) => {\r\n  return {\r\n    name: 'test-number-format',\r\n    message: message || utils.string.t('validation.number.format', { integer, decimal }),\r\n    params: { integer, decimal },\r\n    test: function (value) {\r\n      const regex = new RegExp('^\\\\d{0,' + integer + '}(?:\\\\.\\\\d{0,' + decimal + '})?$');\r\n      return value ? regex.test(value) : true;\r\n    },\r\n  };\r\n};\r\n\r\nYup.addMethod(Yup.number, 'format', function (integer, decimal, message) {\r\n  return this.test(numberFormatObject(message, integer, decimal));\r\n});\r\n\r\n// atLeastOneOfObject\r\nexport const atLeastOneOfObject = (message, list = []) => {\r\n  return {\r\n    name: 'atLeastOneOf',\r\n    message: message || utils.string.t('validation.atLeastOneOf'),\r\n    exclusive: true,\r\n    params: { keys: list.join(', ') },\r\n    test: function () {\r\n      const { parent } = this;\r\n      return list.some((f) => parent[f] === 0 || !!parent[f]);\r\n    },\r\n  };\r\n};\r\n\r\nYup.addMethod(Yup.mixed, 'atLeastOneOf', function (list, message) {\r\n  return this.test(atLeastOneOfObject(message, list));\r\n});\r\n\r\nconst utilsForm = {\r\n  getValidationSchema: (fields) => {\r\n    const validation = {};\r\n\r\n    const getValidationObj = (field) => {\r\n      if (field.type === 'legend') return;\r\n\r\n      validation[field.name] = field.validation;\r\n    };\r\n\r\n    if (fields) {\r\n      fields.forEach((field) => {\r\n        if (Array.isArray(field)) {\r\n          field.forEach((item) => getValidationObj(item));\r\n        } else {\r\n          getValidationObj(field);\r\n        }\r\n      });\r\n    }\r\n\r\n    return Yup.object().shape(validation);\r\n  },\r\n\r\n  getNestedInitialValues: (rows = [], nameKey) => {\r\n    if (!Array.isArray(rows)) return [];\r\n\r\n    const values = {};\r\n    rows.forEach((row) => (values[row.rowKey] = utilsForm.getInitialValues(row.cells, nameKey)));\r\n    return values;\r\n  },\r\n\r\n  getInitialValues: (fields, key = 'name') => {\r\n    if (!fields || !Array.isArray(fields) || isEmpty(fields)) return {};\r\n\r\n    let values = {};\r\n\r\n    const getValues = (field) => {\r\n      if (!field[key] || field.type === 'legend') return;\r\n\r\n      // if field type is array or object, we iterate over the array field/items\r\n      if (field.type === 'array') {\r\n        if (field.startEmpty) field.typevalues = null;\r\n        else field.typevalues = utilsForm.getArrayValues(field, key, values);\r\n      } else if (['object', 'address'].includes(field.type)) {\r\n        values = utilsForm.getObjectValues(field, key, values);\r\n      } else {\r\n        values[field[key]] = field.value;\r\n      }\r\n    };\r\n\r\n    if (fields) {\r\n      fields.forEach((field) => {\r\n        if (Array.isArray(field)) {\r\n          field.forEach((innerField) => getValues(innerField));\r\n        } else {\r\n          getValues(field);\r\n        }\r\n      });\r\n    }\r\n\r\n    return values;\r\n  },\r\n  getFormattedValues: (values, fields) => {\r\n    if (!fields || !Array.isArray(fields) || isEmpty(fields)) return {};\r\n\r\n    let formattedValues = {};\r\n\r\n    const getValues = (value, key, field) => {\r\n      if (!field || field?.type === 'legend') return;\r\n\r\n      if (field.type === 'array') {\r\n        formattedValues[key] = value ? value : [];\r\n      } else if (['object', 'address'].includes(field.type)) {\r\n        formattedValues[key] = value ? value : null;\r\n      } else {\r\n        formattedValues[key] = value;\r\n      }\r\n    };\r\n\r\n    Object.entries(values).forEach((singleValue) => {\r\n      const [key, value] = singleValue;\r\n      const field = fields.find((field) => field.name === key);\r\n\r\n      getValues(value, key, field);\r\n    });\r\n\r\n    return formattedValues;\r\n  },\r\n\r\n  getArrayValues: (field, key, values) => {\r\n    if (utils.generic.isValidArray(field.arrayDefaultValues, true)) {\r\n      values[field[key]] = [...field.arrayDefaultValues];\r\n    } else {\r\n      values[field[key]] = [\r\n        field.arrayItemDef.reduce((acc, def) => {\r\n          return Object.assign(acc, { [def.name]: def.value });\r\n        }, {}),\r\n      ];\r\n    }\r\n\r\n    return values;\r\n  },\r\n\r\n  getObjectValues: (field, key, values) => {\r\n    values[field[key]] = field.objectDef.reduce((acc, def) => {\r\n      return Object.assign(acc, { [def.name]: def.value });\r\n    }, {});\r\n\r\n    return values;\r\n  },\r\n\r\n  getFieldProps: (fields, name, control, errors) => {\r\n    if (!fields || !Array.isArray(fields) || isEmpty(fields) || !name) return {};\r\n\r\n    const field = fields.find((field) => field.name === name) || {};\r\n\r\n    return {\r\n      ...field,\r\n      ...(utils.generic.isValidObject(control) && { control }),\r\n      ...(utils.generic.isValidObject(errors) && field.name && { error: errors[field.name] }),\r\n    };\r\n  },\r\n\r\n  getLabelById: (fields, value) => {\r\n    if (!utils.generic.isValidArray(fields) || !value) return value;\r\n    const item = fields.find((field) => field.id && field.id.toString() === value.toString());\r\n    return item && item.label ? item.label : value;\r\n  },\r\n\r\n  getSelectOptions: (id, obj) => {\r\n    const options = selectOptions.options[id];\r\n\r\n    if (!options) return [];\r\n\r\n    const { dynamic, fixed } = options;\r\n\r\n    if (dynamic) {\r\n      const items = obj[dynamic.source] || [];\r\n      if (dynamic.transform) {\r\n        return items.map((item) => dynamic.transform(item));\r\n      }\r\n      return items.map((item) => ({\r\n        id: item[dynamic.value],\r\n        value: item[dynamic.value],\r\n        label: item[dynamic.label],\r\n      }));\r\n    }\r\n\r\n    if (fixed) {\r\n      return fixed.options.map((option) => ({\r\n        id: option,\r\n        value: option,\r\n        label: utils.string.t(`${fixed.labelPath}.${utils.string.replaceLowerCase(option)}`),\r\n      }));\r\n    }\r\n  },\r\n\r\n  getSelectOption: (id, obj, value) => {\r\n    if (!value) return;\r\n    const options = selectOptions.options[id];\r\n    if (!options) return '';\r\n    const { dynamic, fixed } = options;\r\n    if (dynamic) {\r\n      const items = obj[dynamic.source] || [];\r\n      const item = items.find((item) => item[dynamic.value] && item[dynamic.value].toString() === value.toString());\r\n      return item ? item[dynamic.label] : '';\r\n    }\r\n    if (fixed) {\r\n      const option = fixed.options.find((option) => option === value);\r\n      return utils.string.t(`${fixed.labelPath}.${utils.string.replaceLowerCase(option)}`);\r\n    }\r\n  },\r\n\r\n  getValidationLabel: (label, type) => {\r\n    switch (type) {\r\n      case 'required':\r\n        return `${utils.string.t(label)} ${utils.string.t('form.validation.isRequired')}`;\r\n      default:\r\n        return utils.string.t(label);\r\n    }\r\n  },\r\n};\r\n\r\nexport default utilsForm;\r\n"]},"metadata":{},"sourceType":"module"}