{"ast":null,"code":"import _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProductsAdminCarriers\\\\ProductsAdminCarriers.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { ProductsAdminCarriersView } from './ProductsAdminCarriers.view';\nimport { showModal, getCarriers, selectPartyCarriersSorted, selectPartyCarriersPagination } from 'stores';\nimport { productAdminSchema } from 'schemas';\nimport { usePagination } from 'hooks';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ProductsAdminCarriers() {\n  _s();\n\n  var dispatch = useDispatch();\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      schema = _useState2[0],\n      setSchema = _useState2[1];\n\n  var carriers = useSelector(selectPartyCarriersSorted);\n  var carriersLoading = useSelector(function (state) {\n    return state.party.carriers.loading;\n  });\n  var carriersPagination = useSelector(selectPartyCarriersPagination);\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      });\n    });\n  };\n\n  useEffect(function () {\n    dispatch(getCarriers({\n      size: config.ui.pagination[\"default\"]\n    }));\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!carriers) return;\n\n    var _productAdminSchema$g = productAdminSchema.getSchema('carriers'),\n        fields = _productAdminSchema$g.fields,\n        rest = _objectWithoutProperties(_productAdminSchema$g, [\"fields\"]);\n\n    setSchema(_objectSpread(_objectSpread({}, rest), {}, {\n      fields: hydrateLabels(fields),\n      items: carriers,\n      pagination: carriersPagination\n    }));\n  }, [carriers] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getCarriers({\n      page: newPage + 1\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getCarriers({\n      size: rowsPerPage\n    }));\n  };\n\n  var handleAddCarrier = function handleAddCarrier(fields) {\n    return function (event) {\n      dispatch(showModal({\n        component: 'ADD_PRODUCTS_CARRIER',\n        props: {\n          title: 'products.admin.carriers.add',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            fields: fields\n          }\n        }\n      }));\n    };\n  };\n\n  var pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage); // abort\n\n  if (!schema || !schema.items) return null;\n  return /*#__PURE__*/_jsxDEV(ProductsAdminCarriersView, {\n    schema: schema,\n    loading: carriersLoading,\n    pagination: pagination.obj,\n    handlers: {\n      addCarrier: handleAddCarrier,\n      changePage: pagination.handlers.handleChangePage,\n      changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProductsAdminCarriers, \"Lzw7xCbsl1Ax338AdPQzRYzi0fQ=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = ProductsAdminCarriers;\nProductsAdminCarriers.displayName = \"ProductsAdminCarriers\";\nProductsAdminCarriers.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ProductsAdminCarriers\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ProductsAdminCarriers\\\\ProductsAdminCarriers.js\"] = {\n    name: \"ProductsAdminCarriers\",\n    docgenInfo: ProductsAdminCarriers.__docgenInfo,\n    path: \"src\\\\modules\\\\ProductsAdminCarriers\\\\ProductsAdminCarriers.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ProductsAdminCarriers\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProductsAdminCarriers/ProductsAdminCarriers.js"],"names":["React","useEffect","useState","useSelector","useDispatch","ProductsAdminCarriersView","showModal","getCarriers","selectPartyCarriersSorted","selectPartyCarriersPagination","productAdminSchema","usePagination","utils","config","ProductsAdminCarriers","dispatch","schema","setSchema","carriers","carriersLoading","state","party","loading","carriersPagination","hydrateLabels","fields","map","field","label","string","t","size","ui","pagination","getSchema","rest","items","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleAddCarrier","event","component","props","title","fullWidth","maxWidth","componentProps","obj","addCarrier","changePage","handlers","changeRowsPerPage"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { ProductsAdminCarriersView } from './ProductsAdminCarriers.view';\r\nimport { showModal, getCarriers, selectPartyCarriersSorted, selectPartyCarriersPagination } from 'stores';\r\nimport { productAdminSchema } from 'schemas';\r\nimport { usePagination } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function ProductsAdminCarriers() {\r\n  const dispatch = useDispatch();\r\n  const [schema, setSchema] = useState({});\r\n  const carriers = useSelector(selectPartyCarriersSorted);\r\n  const carriersLoading = useSelector((state) => state.party.carriers.loading);\r\n  const carriersPagination = useSelector(selectPartyCarriersPagination);\r\n  const hydrateLabels = (fields) => fields.map((field) => ({ ...field, label: utils.string.t(field.label) }));\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getCarriers({ size: config.ui.pagination.default }));\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!carriers) return;\r\n\r\n      const { fields, ...rest } = productAdminSchema.getSchema('carriers');\r\n\r\n      setSchema({\r\n        ...rest,\r\n        fields: hydrateLabels(fields),\r\n        items: carriers,\r\n        pagination: carriersPagination,\r\n      });\r\n    },\r\n    [carriers] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getCarriers({ page: newPage + 1 }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getCarriers({ size: rowsPerPage }));\r\n  };\r\n\r\n  const handleAddCarrier = (fields) => (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_PRODUCTS_CARRIER',\r\n        props: {\r\n          title: 'products.admin.carriers.add',\r\n          fullWidth: true,\r\n          maxWidth: 'lg',\r\n          componentProps: {\r\n            fields,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const pagination = usePagination(schema.items, schema.pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  // abort\r\n  if (!schema || !schema.items) return null;\r\n\r\n  return (\r\n    <ProductsAdminCarriersView\r\n      schema={schema}\r\n      loading={carriersLoading}\r\n      pagination={pagination.obj}\r\n      handlers={{\r\n        addCarrier: handleAddCarrier,\r\n        changePage: pagination.handlers.handleChangePage,\r\n        changeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}