{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEnterLossInformation\\\\ClaimsEnterLossInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useDispatch } from 'react-redux'; // app\n\nimport styles from './ClaimsEnterLossInformation.styles';\nimport { ErrorMessage, FormAutocompleteMui, FormContainer, FormLegend, FormFields, FormGrid, FormText, FormDate, FormHidden, Tooltip } from 'components';\nimport { postLossInformation, postEditLossInformation } from 'stores';\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEnterLossInformationView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string\n  }),\n  hasLossRef: PropTypes.bool.isRequired,\n  lossInformation: PropTypes.object.isRequired,\n  lossDocsList: PropTypes.array,\n  lossSelected: PropTypes.object.isRequired\n};\nexport function ClaimsEnterLossInformationView(props) {\n  _s();\n\n  var fields = props.fields,\n      handleSave = props.handleSave,\n      handleNext = props.handleNext,\n      handleCancel = props.handleCancel,\n      hasLossRef = props.hasLossRef,\n      lossInformation = props.lossInformation,\n      loggedInUser = props.loggedInUser,\n      _handleBack = props.handleBack,\n      lossDocsList = props.lossDocsList,\n      isWarningShow = props.isWarningShow,\n      validation = props.validation,\n      setValidation = props.setValidation,\n      handleFormStatus = props.handleFormStatus,\n      lossProperties = props.lossProperties,\n      lossSelected = props.lossSelected;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'ClaimsEnterLossInformation'\n  })({\n    isMobile: media.mobile,\n    isTablet: media.tablet\n  });\n  var dispatch = useDispatch();\n  var lossFocusRef = useRef();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  })),\n      handleSubmit = _useForm.handleSubmit,\n      errors = _useForm.errors,\n      control = _useForm.control,\n      formState = _useForm.formState;\n\n  var formIsDirty = formState.isDirty;\n  useEffect(function () {\n    var _Object$keys, _Object$keys2;\n\n    if (formIsDirty && !((_Object$keys = Object.keys(errors)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length) > 0) {\n      handleFormStatus();\n    }\n\n    if (((_Object$keys2 = Object.keys(errors)) === null || _Object$keys2 === void 0 ? void 0 : _Object$keys2.length) > 0) {\n      var _lossFocusRef$current;\n\n      lossFocusRef === null || lossFocusRef === void 0 ? void 0 : (_lossFocusRef$current = lossFocusRef.current) === null || _lossFocusRef$current === void 0 ? void 0 : _lossFocusRef$current.scrollIntoView();\n    }\n  }, [formIsDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (validation) {\n      if (formIsDirty) {\n        handleSubmit(submitLossInformation)();\n      }\n\n      handleSubmit(handleNext)();\n    }\n\n    setValidation(false);\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var onSaveLoss = function onSaveLoss() {\n    handleSubmit(handleSave)();\n    handleSubmit(submitLossInformation)();\n  };\n\n  var submitLossInformation = /*#__PURE__*/function () {\n    var _ref = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              if (!(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDetailID)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 3;\n              return dispatch(postEditLossInformation(values));\n\n            case 3:\n              _context.next = 7;\n              break;\n\n            case 5:\n              _context.next = 7;\n              return dispatch(postLossInformation(values));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function submitLossInformation(_x) {\n      return _ref.apply(this, arguments);\n    };\n  }();\n\n  var firstContactDate = (errors === null || errors === void 0 ? void 0 : errors.firstContactDate) ? _objectSpread(_objectSpread({}, errors === null || errors === void 0 ? void 0 : errors.firstContactDate), {}, {\n    message: ''\n  }) : null;\n  var firstContactTime = (errors === null || errors === void 0 ? void 0 : errors.firstContactTime) ? _objectSpread(_objectSpread({}, errors === null || errors === void 0 ? void 0 : errors.firstContactTime), {}, {\n    message: ''\n  }) : null;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    overflow: \"hidden\",\n    display: \"flex\",\n    flexDirection: \"column\",\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      flex: \"1 1 auto\",\n      className: classes.container,\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        mt: 4,\n        ref: lossFocusRef,\n        children: /*#__PURE__*/_jsxDEV(FormLegend, {\n          text: utils.string.t('claims.lossInformation.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 121,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 120,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n        \"data-testid\": \"form-lossInformation\",\n        children: /*#__PURE__*/_jsxDEV(FormFields, {\n          type: \"blank\",\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            spacing: 3,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 8,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'lossRef')), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 130,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                    error: errors.fromDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 133,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: [/*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossName', control)), {}, {\n                    error: errors.lossName\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 21\n                  }, this), isWarningShow && /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                    error: {\n                      message: utils.string.t('claims.lossInformation.validation.lossNameWarning')\n                    },\n                    nestedClasses: {\n                      root: classes.warningMessage\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 138,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossDescription', control)), {}, {\n                    error: errors.lossDescription\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 145,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 144,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread({}, utils.form.getFieldProps(fields, 'catCodesID', control)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 148,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 147,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 3,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                    error: errors.toDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 156,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 155,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: utils.string.t('claims.lossInformation.firstContactTooltipMessage'),\n                    block: true,\n                    placement: \"bottom\",\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 8,\n                        sm: 12,\n                        md: 8,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstContactDate', control)), {}, {\n                          error: firstContactDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 162,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 161,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 4,\n                        sm: 6,\n                        md: 4,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'firstContactTime', control)), {}, {\n                          error: firstContactTime\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 165,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 164,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(ErrorMessage, {\n                        error: (errors === null || errors === void 0 ? void 0 : errors.firstContactDate) || (errors === null || errors === void 0 ? void 0 : errors.firstContactTime),\n                        nestedClasses: {\n                          root: classes.warningMessageDate\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 167,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 160,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 159,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 158,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  children: /*#__PURE__*/_jsxDEV(FormText, {\n                    name: \"assignToReadonly\",\n                    label: utils.string.t('claims.lossInformation.assignedTo'),\n                    value: loggedInUser.fullName,\n                    muiComponentProps: {\n                      readOnly: true,\n                      disabled: true\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'assignedTo', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 185,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 125,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: 6,\n        children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n          refData: lossInformation,\n          refIdName: constants.DMS_CONTEXT_LOSS_ID,\n          dmsContext: constants.DMS_CONTEXT_LOSS,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\n          isTabView: false,\n          isClaims: true,\n          isClaimsUploadDisabled: !hasLossRef || (lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss),\n          claimsUploadWarningMsg: !hasLossRef ? utils.string.t('claims.lossInformation.dms.fileUploadWarning') : '',\n          claimsSearchDocumentsTxt: utils.string.t('claims.lossInformation.dms.searchDocuments'),\n          uploadDocumentsTitle: utils.string.t('claims.lossInformation.dms.uploadDocuments'),\n          docList: lossDocsList\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 193,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 192,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      flex: \"0 1 auto\",\n      children: /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, _objectSpread(_objectSpread({}, props), {}, {\n        handleSave: onSaveLoss,\n        next: (lossProperties === null || lossProperties === void 0 ? void 0 : lossProperties.isNextDiabled) || !(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss) || false,\n        handleNextSubmit: function handleNextSubmit() {\n          return setValidation(true);\n        },\n        save: !(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.isInflighLoss),\n        handleBack: function handleBack() {\n          _handleBack(0);\n        },\n        handleCancel: handleCancel\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 209,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 208,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 118,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsEnterLossInformationView, \"revtSMBrPlYWLfWKU7BZjTVgM/c=\", false, function () {\n  return [useMedia, useDispatch, useForm];\n});\n\n_c = ClaimsEnterLossInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEnterLossInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEnterLossInformation/ClaimsEnterLossInformation.view.js"],"names":["React","useEffect","useRef","PropTypes","useForm","yupResolver","useDispatch","styles","ErrorMessage","FormAutocompleteMui","FormContainer","FormLegend","FormFields","FormGrid","FormText","FormDate","FormHidden","Tooltip","postLossInformation","postEditLossInformation","ClaimsUploadViewSearchDocs","RegisterNewLossFixedBottomBar","useMedia","utils","constants","makeStyles","Box","ClaimsEnterLossInformationView","propTypes","fields","array","isRequired","isAllStepsCompleted","bool","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","nestedClasses","shape","root","string","hasLossRef","lossInformation","object","lossDocsList","lossSelected","props","loggedInUser","isWarningShow","validation","setValidation","handleFormStatus","lossProperties","media","classes","name","isMobile","mobile","isTablet","tablet","dispatch","lossFocusRef","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","context","handleSubmit","errors","control","formState","formIsDirty","isDirty","Object","keys","length","current","scrollIntoView","submitLossInformation","onSaveLoss","values","lossDetailID","firstContactDate","message","firstContactTime","container","t","getFieldProps","fromDate","lossName","warningMessage","lossDescription","toDate","lossTime","warningMessageDate","fullName","readOnly","disabled","DMS_CONTEXT_LOSS_ID","DMS_CONTEXT_LOSS","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","isInflighLoss","isNextDiabled"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport styles from './ClaimsEnterLossInformation.styles';\r\nimport {\r\n  ErrorMessage,\r\n  FormAutocompleteMui,\r\n  FormContainer,\r\n  FormLegend,\r\n  FormFields,\r\n  FormGrid,\r\n  FormText,\r\n  FormDate,\r\n  FormHidden,\r\n  Tooltip,\r\n} from 'components';\r\nimport { postLossInformation, postEditLossInformation } from 'stores';\r\nimport { ClaimsUploadViewSearchDocs, RegisterNewLossFixedBottomBar } from 'modules';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nClaimsEnterLossInformationView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n  }),\r\n  hasLossRef: PropTypes.bool.isRequired,\r\n  lossInformation: PropTypes.object.isRequired,\r\n  lossDocsList: PropTypes.array,\r\n  lossSelected: PropTypes.object.isRequired\r\n};\r\n\r\nexport function ClaimsEnterLossInformationView(props) {\r\n  const {\r\n    fields,\r\n    handleSave,\r\n    handleNext,\r\n    handleCancel,\r\n    hasLossRef,\r\n    lossInformation,\r\n    loggedInUser,\r\n    handleBack,\r\n    lossDocsList,\r\n    isWarningShow,\r\n    validation,\r\n    setValidation,\r\n    handleFormStatus,\r\n    lossProperties,\r\n    lossSelected\r\n  } = props;\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'ClaimsEnterLossInformation' })({ isMobile: media.mobile, isTablet: media.tablet });\r\n\r\n  const dispatch = useDispatch();\r\n  const lossFocusRef = useRef();\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { handleSubmit, errors, control, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n  });\r\n\r\n  const formIsDirty = formState.isDirty;\r\n  useEffect(() => {\r\n    if (formIsDirty && !Object.keys(errors)?.length > 0) {\r\n      handleFormStatus();\r\n    }\r\n    if (Object.keys(errors)?.length > 0) {\r\n      lossFocusRef?.current?.scrollIntoView();\r\n    }\r\n  }, [formIsDirty, errors]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (validation) {\r\n      if (formIsDirty) {\r\n        handleSubmit(submitLossInformation)();\r\n      }\r\n      handleSubmit(handleNext)();\r\n    }\r\n    setValidation(false);\r\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const onSaveLoss = () => {\r\n    handleSubmit(handleSave)();\r\n    handleSubmit(submitLossInformation)();\r\n  };\r\n\r\n  const submitLossInformation = async (values) => {\r\n    if (lossInformation?.lossDetailID) {\r\n      await dispatch(postEditLossInformation(values));\r\n    } else {\r\n      await dispatch(postLossInformation(values));\r\n    }\r\n  };\r\n\r\n  const firstContactDate = errors?.firstContactDate ? { ...errors?.firstContactDate, message: '' } : null;\r\n  const firstContactTime = errors?.firstContactTime ? { ...errors?.firstContactTime, message: '' } : null;\r\n\r\n  return (\r\n    <Box overflow=\"hidden\" display=\"flex\" flexDirection=\"column\">\r\n      <Box flex=\"1 1 auto\" className={classes.container}>\r\n        <Box mt={4} ref={lossFocusRef}>\r\n          <FormLegend text={utils.string.t('claims.lossInformation.title')} />\r\n        </Box>\r\n\r\n        <FormContainer data-testid=\"form-lossInformation\">\r\n          <FormFields type=\"blank\">\r\n            <FormGrid container spacing={3}>\r\n              <FormGrid item xs={12} sm={8}>\r\n                <FormGrid container spacing={3}>\r\n                  <FormGrid item xs={6}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossRef')} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={6}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'fromDate', control)} error={errors.fromDate} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossName', control)} error={errors.lossName} />\r\n                    {isWarningShow && (\r\n                      <ErrorMessage\r\n                        error={{ message: utils.string.t('claims.lossInformation.validation.lossNameWarning') }}\r\n                        nestedClasses={{ root: classes.warningMessage }}\r\n                      />\r\n                    )}\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText {...utils.form.getFieldProps(fields, 'lossDescription', control)} error={errors.lossDescription} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'catCodesID', control)} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid item xs={12} sm={4}>\r\n                <FormGrid container spacing={3}>\r\n                  <FormGrid item xs={12}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'toDate', control)} error={errors.toDate} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <Tooltip title={utils.string.t('claims.lossInformation.firstContactTooltipMessage')} block placement=\"bottom\">\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={8} sm={12} md={8}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'firstContactDate', control)} error={firstContactDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={4} sm={6} md={4} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'firstContactTime', control)} error={firstContactTime} />\r\n                        </FormGrid>\r\n                        <ErrorMessage\r\n                          error={errors?.firstContactDate || errors?.firstContactTime}\r\n                          nestedClasses={{ root: classes.warningMessageDate }}\r\n                        />\r\n                      </FormGrid>\r\n                    </Tooltip>\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12}>\r\n                    <FormText\r\n                      name=\"assignToReadonly\"\r\n                      label={utils.string.t('claims.lossInformation.assignedTo')}\r\n                      value={loggedInUser.fullName}\r\n                      muiComponentProps={{\r\n                        readOnly: true,\r\n                        disabled: true,\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormHidden {...utils.form.getFieldProps(fields, 'assignedTo', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormFields>\r\n        </FormContainer>\r\n\r\n        <Box mt={6}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={lossInformation}\r\n            refIdName={constants.DMS_CONTEXT_LOSS_ID}\r\n            dmsContext={constants.DMS_CONTEXT_LOSS}\r\n            documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n            isTabView={false}\r\n            isClaims\r\n            isClaimsUploadDisabled={!hasLossRef || lossSelected?.isInflighLoss}\r\n            claimsUploadWarningMsg={!hasLossRef ? utils.string.t('claims.lossInformation.dms.fileUploadWarning') : ''}\r\n            claimsSearchDocumentsTxt={utils.string.t('claims.lossInformation.dms.searchDocuments')}\r\n            uploadDocumentsTitle={utils.string.t('claims.lossInformation.dms.uploadDocuments')}\r\n            docList={lossDocsList}\r\n          />\r\n        </Box>\r\n      </Box>\r\n      <Box flex=\"0 1 auto\">\r\n        <RegisterNewLossFixedBottomBar\r\n          {...props}\r\n          handleSave={onSaveLoss}\r\n          next={lossProperties?.isNextDiabled || !lossSelected?.isInflighLoss || false}\r\n          handleNextSubmit={() => setValidation(true)}\r\n          save={!lossSelected?.isInflighLoss}\r\n          handleBack={() => {\r\n            handleBack(0);\r\n          }}\r\n          handleCancel={handleCancel}\r\n        />\r\n      </Box>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}