{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FilterBar\\\\FilterBar.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classnames from 'classnames';\nimport get from 'lodash/get'; // app\n\nimport styles from './FilterBar.style';\nimport { Button, FormAutocompleteMui, FormContainer, FormFields, FormActions, FormText } from 'components';\nimport * as utils from 'utils';\nimport { useMedia } from 'hooks'; // mui\n\nimport { makeStyles, Box, InputAdornment } from '@material-ui/core';\nimport IconButton from '@material-ui/core/IconButton';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function FilterBarView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var fields = _ref.fields,\n      actions = _ref.actions;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'FilterBar'\n  })({\n    isMobile: media.mobile\n  });\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var resetAction = actions && actions.find(function (action) {\n    return action.name === 'reset';\n  });\n  var filterAction = actions && actions.find(function (action) {\n    return action.name === 'filter';\n  });\n\n  var onReset = function onReset() {\n    resetAction && utils.generic.isFunction(resetAction.handler) && resetAction.handler();\n    reset();\n  };\n\n  var onFilter = function onFilter(formData) {\n    filterAction && utils.generic.isFunction(filterAction.handler) && filterAction.handler(formData);\n  };\n\n  var fieldMap = {\n    text: FormText,\n    autocompletemui: FormAutocompleteMui\n  };\n  var filteredFields = fields.filter(function (field) {\n    return field.type !== fieldMap[field.type];\n  });\n\n  var renderField = function renderField(field) {\n    switch (field.type) {\n      case 'autocomplete':\n        return /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({\n          control: control\n        }, field), {}, {\n          muiComponentProps: _objectSpread({\n            size: 'small'\n          }, field.muiComponentProps)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 53,\n          columnNumber: 11\n        }, _this);\n\n      case 'text':\n        return /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({\n          control: control\n        }, field), {}, {\n          error: errors[field.name],\n          muiComponentProps: _objectSpread({\n            InputProps: _objectSpread(_objectSpread({}, get(field, 'muiComponentProps.InputProps', {})), {}, {\n              classes: {\n                root: classnames(classes.filledRoot),\n                input: classes.filledInput\n              },\n              endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n                position: \"end\",\n                classes: {\n                  root: classes.adornmentEnd\n                },\n                children: resetAction && formState.isDirty ? /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"small\",\n                  variant: \"text\",\n                  icon: CloseIcon,\n                  onClick: onReset,\n                  nestedClasses: {\n                    btn: classes.resetButton\n                  },\n                  \"data-testid\": \"search-button-clear\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 23\n                }, _this) : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 87,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 76,\n                columnNumber: 19\n              }, _this)\n            })\n          }, field.muiComponentProps)\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return null;\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      nestedClasses: {\n        root: classes.formContainer\n      },\n      onSubmit: handleSubmit(onFilter),\n      \"data-testid\": \"filter-bar\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        nestedClasses: {\n          root: classes.formFields\n        },\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.fieldsContainer,\n          children: filteredFields.map(function (field) {\n            return /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.fields,\n              children: renderField(field)\n            }, field.name, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        nestedClasses: {\n          actions: classes.actions\n        },\n        children: filterAction ? /*#__PURE__*/_jsxDEV(IconButton, {\n          disableRipple: true,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          color: \"primary\",\n          className: classes.filterButton,\n          children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 102,\n    columnNumber: 5\n  }, this);\n}\n\n_s(FilterBarView, \"T24TKfgYbLyP7EyPNWtPloCGU1Y=\", false, function () {\n  return [useMedia, useForm];\n});\n\n_c = FilterBarView;\nFilterBarView.displayName = \"FilterBarView\";\nFilterBarView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"FilterBarView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FilterBar\\\\FilterBar.view.js\"] = {\n    name: \"FilterBarView\",\n    docgenInfo: FilterBarView.__docgenInfo,\n    path: \"src\\\\components\\\\FilterBar\\\\FilterBar.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FilterBarView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FilterBar/FilterBar.view.js"],"names":["React","useForm","yupResolver","classnames","get","styles","Button","FormAutocompleteMui","FormContainer","FormFields","FormActions","FormText","utils","useMedia","makeStyles","Box","InputAdornment","IconButton","SearchIcon","CloseIcon","FilterBarView","fields","actions","media","classes","name","isMobile","mobile","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","resetAction","find","action","filterAction","onReset","generic","isFunction","handler","onFilter","formData","fieldMap","text","autocompletemui","filteredFields","filter","field","type","renderField","size","muiComponentProps","InputProps","root","filledRoot","input","filledInput","endAdornment","adornmentEnd","isDirty","btn","resetButton","formContainer","formFields","fieldsContainer","map","isSubmitting","filterButton"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport classnames from 'classnames';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './FilterBar.style';\r\nimport { Button, FormAutocompleteMui, FormContainer, FormFields, FormActions, FormText } from 'components';\r\nimport * as utils from 'utils';\r\nimport { useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { makeStyles, Box, InputAdornment } from '@material-ui/core';\r\nimport IconButton from '@material-ui/core/IconButton';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nexport function FilterBarView({ fields, actions }) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'FilterBar' })({ isMobile: media.mobile });\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const resetAction = actions && actions.find((action) => action.name === 'reset');\r\n  const filterAction = actions && actions.find((action) => action.name === 'filter');\r\n\r\n  const onReset = () => {\r\n    resetAction && utils.generic.isFunction(resetAction.handler) && resetAction.handler();\r\n    reset();\r\n  };\r\n\r\n  const onFilter = (formData) => {\r\n    filterAction && utils.generic.isFunction(filterAction.handler) && filterAction.handler(formData);\r\n  };\r\n\r\n  const fieldMap = {\r\n    text: FormText,\r\n    autocompletemui: FormAutocompleteMui,\r\n  };\r\n\r\n  const filteredFields = fields.filter((field) => field.type !== fieldMap[field.type]);\r\n\r\n  const renderField = (field) => {\r\n    switch (field.type) {\r\n      case 'autocomplete':\r\n        return (\r\n          <FormAutocompleteMui\r\n            control={control}\r\n            {...field}\r\n            muiComponentProps={{\r\n              size: 'small',\r\n              ...field.muiComponentProps,\r\n            }}\r\n          />\r\n        );\r\n      case 'text':\r\n        return (\r\n          <FormText\r\n            control={control}\r\n            {...field}\r\n            error={errors[field.name]}\r\n            muiComponentProps={{\r\n              InputProps: {\r\n                ...get(field, 'muiComponentProps.InputProps', {}),\r\n                classes: {\r\n                  root: classnames(classes.filledRoot),\r\n                  input: classes.filledInput,\r\n                },\r\n                endAdornment: (\r\n                  <InputAdornment position=\"end\" classes={{ root: classes.adornmentEnd }}>\r\n                    {resetAction && formState.isDirty ? (\r\n                      <Button\r\n                        size=\"small\"\r\n                        variant=\"text\"\r\n                        icon={CloseIcon}\r\n                        onClick={onReset}\r\n                        nestedClasses={{ btn: classes.resetButton }}\r\n                        data-testid=\"search-button-clear\"\r\n                      />\r\n                    ) : (\r\n                      <span />\r\n                    )}\r\n                  </InputAdornment>\r\n                ),\r\n              },\r\n              ...field.muiComponentProps,\r\n            }}\r\n          />\r\n        );\r\n      default:\r\n        return null;\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer nestedClasses={{ root: classes.formContainer }} onSubmit={handleSubmit(onFilter)} data-testid=\"filter-bar\">\r\n        <FormFields nestedClasses={{ root: classes.formFields }}>\r\n          <Box className={classes.fieldsContainer}>\r\n            {filteredFields.map((field) => {\r\n              return (\r\n                <Box key={field.name} className={classes.fields}>\r\n                  {renderField(field)}\r\n                </Box>\r\n              );\r\n            })}\r\n          </Box>\r\n        </FormFields>\r\n        <FormActions nestedClasses={{ actions: classes.actions }}>\r\n          {filterAction ? (\r\n            <IconButton disableRipple type=\"submit\" disabled={formState.isSubmitting} color=\"primary\" className={classes.filterButton}>\r\n              <SearchIcon />\r\n            </IconButton>\r\n          ) : null}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}