{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsInsured\\\\EditProductsInsured.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { EditProductsInsuredView } from './EditProductsInsured.view';\nimport { postInsured, getRiskCountries, getClients, getInsured, selectRiskCountries, selectPartyClientsSorted } from 'stores';\nimport * as utils from 'utils';\nimport { productAdminSchema } from 'schemas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditProductsInsured.propTypes = {\n  submitHandler: PropTypes.func.isRequired,\n  handleClose: PropTypes.func.isRequired,\n  reInsured: PropTypes.bool.isRequired\n};\nEditProductsInsured.defaultProps = {\n  handleClose: function handleClose() {},\n  reInsured: false\n};\nexport default function EditProductsInsured(_ref) {\n  _s();\n\n  var id = _ref.id,\n      submitHandler = _ref.submitHandler,\n      handleClose = _ref.handleClose,\n      reInsured = _ref.reInsured,\n      _ref$isCreateInsuredM = _ref.isCreateInsuredModal,\n      isCreateInsuredModal = _ref$isCreateInsuredM === void 0 ? false : _ref$isCreateInsuredM;\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var countries = useSelector(selectRiskCountries);\n  var clients = useSelector(selectPartyClientsSorted);\n  var optionsRef = useRef({\n    countries: countries,\n    clients: clients\n  });\n\n  var _useState3 = useState({\n    countries: countries,\n    clients: clients\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var disabledFields = ['name', 'partyType', 'country'];\n  var submitLabel = reInsured ? 'products.admin.reInsureds.update' : 'products.admin.insureds.update';\n\n  var _productAdminSchema$g = productAdminSchema.getSchema('insureds'),\n      fields = _productAdminSchema$g.fields;\n\n  useEffect(function () {\n    var isSubscribed = true;\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id, reInsured) {\n        var data, address, rest, insuredItem;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(getInsured(id, reInsured));\n\n              case 2:\n                data = _context.sent;\n\n                if (utils.generic.isValidObject(data)) {\n                  address = data.address, rest = _objectWithoutProperties(data, [\"address\"]);\n                  insuredItem = _objectSpread(_objectSpread({}, rest), address);\n                  isSubscribed && setItem(insuredItem);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData(_x, _x2) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData(id, reInsured);\n    return function () {\n      return isSubscribed = false;\n    };\n  }, [id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!utils.generic.isValidArray(options.countries, true)) {\n      dispatch(getRiskCountries());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    dispatch(getClients({\n      size: 1000\n    }));\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!clients) return;\n    updateOptions('clients', clients);\n  }, [clients]);\n  useEffect(function () {\n    if (!countries) return;\n    updateOptions('countries', countries);\n  }, [countries]);\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      }, field.options && {\n        options: field.options.map(function (option) {\n          return _objectSpread(_objectSpread({}, option), {}, {\n            label: utils.string.t(option.label)\n          });\n        })\n      });\n    });\n  };\n\n  var schema = {\n    fields: hydrateLabels(fields)\n  };\n\n  var updateOptions = function updateOptions(key, obj) {\n    optionsRef.current = _objectSpread(_objectSpread({}, optionsRef.current), {}, _defineProperty({}, key, obj));\n    setOptions(_objectSpread(_objectSpread({}, optionsRef.current), {}, _defineProperty({}, key, obj)));\n  };\n\n  var hydrateOptions = function hydrateOptions(fields) {\n    if (!fields || !item) return [];\n\n    var getOptionValue = function getOptionValue(field, itemValue) {\n      var optionsList = field.optionsDynamicKey ? utils.form.getSelectOptions(field.optionsDynamicKey, _defineProperty({}, field.optionsDynamicKey, options[field.optionsDynamicKey])) : field === null || field === void 0 ? void 0 : field.options;\n\n      var _optionsList$filter = optionsList.filter(function (option) {\n        return option.value === itemValue;\n      }),\n          _optionsList$filter2 = _slicedToArray(_optionsList$filter, 1),\n          result = _optionsList$filter2[0];\n\n      return result;\n    };\n\n    return fields === null || fields === void 0 ? void 0 : fields.map(function (field) {\n      return _objectSpread(_objectSpread(_objectSpread(_objectSpread({}, field), {}, {\n        value: field.type === 'autocompletemui' ? getOptionValue(field, item[field.name]) : item[field.name] || ''\n      }, field.type !== 'autocompletemui' && {\n        muiComponentProps: _objectSpread(_objectSpread(_objectSpread({}, field.muiComponentProps), disabledFields.includes(field.name) && {\n          InputProps: {\n            readOnly: true,\n            disabled: true\n          }\n        }), disabledFields.includes(field.name) && {\n          disabled: true\n        })\n      }), disabledFields.includes(field.name) && {\n        disabled: true\n      }), field.optionsDynamicKey && {\n        options: utils.form.getSelectOptions(field.optionsDynamicKey, _defineProperty({}, field.optionsDynamicKey, options[field.optionsDynamicKey]))\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    var updateValues = _objectSpread({\n      id: item === null || item === void 0 ? void 0 : item.id\n    }, values);\n\n    return dispatch(postInsured(updateValues, isCreateInsuredModal, reInsured, true)).then(function (response) {\n      var isSuccess = response && response.id && !response.ok; // success\n\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\n        if (utils.generic.isFunction(handleClose)) {\n          handleClose();\n        }\n\n        return submitHandler(response);\n      } // fail\n\n\n      handleCancel();\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t(submitLabel),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  var hasFields = utils.generic.isValidArray(schema.fields); // abort\n\n  if (!hasFields || !utils.generic.isValidObject(item) || utils.generic.isInvalidOrEmptyArray(options === null || options === void 0 ? void 0 : options.clients) || utils.generic.isInvalidOrEmptyArray(options === null || options === void 0 ? void 0 : options.countries)) {\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"empty-placeholder\",\n      style: {\n        minHeight: 400\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 189,\n      columnNumber: 12\n    }, this);\n  }\n\n  var hydratedFields = [hydrateOptions(schema.fields)];\n  var defaultValues = utils.form.getInitialValues(hydratedFields);\n  return /*#__PURE__*/_jsxDEV(EditProductsInsuredView, {\n    fields: hydratedFields,\n    actions: actions,\n    loading: false,\n    defaultValues: defaultValues,\n    validationSchema: utils.form.getValidationSchema(hydratedFields)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 196,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProductsInsured, \"ldzieic2IJxBp+J5SJPHmmlMQrw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = EditProductsInsured;\nEditProductsInsured.displayName = \"EditProductsInsured\";\nEditProductsInsured.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditProductsInsured\",\n  \"props\": {\n    \"isCreateInsuredModal\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"reInsured\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"submitHandler\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditProductsInsured\\\\EditProductsInsured.js\"] = {\n    name: \"EditProductsInsured\",\n    docgenInfo: EditProductsInsured.__docgenInfo,\n    path: \"src\\\\forms\\\\EditProductsInsured\\\\EditProductsInsured.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductsInsured\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsInsured/EditProductsInsured.js"],"names":["React","useEffect","useState","useRef","PropTypes","useDispatch","useSelector","EditProductsInsuredView","postInsured","getRiskCountries","getClients","getInsured","selectRiskCountries","selectPartyClientsSorted","utils","productAdminSchema","EditProductsInsured","propTypes","submitHandler","func","isRequired","handleClose","reInsured","bool","defaultProps","id","isCreateInsuredModal","dispatch","item","setItem","countries","clients","optionsRef","options","setOptions","disabledFields","submitLabel","getSchema","fields","isSubscribed","fetchData","data","generic","isValidObject","address","rest","insuredItem","isValidArray","size","updateOptions","hydrateLabels","map","field","label","string","t","option","schema","key","obj","current","hydrateOptions","getOptionValue","itemValue","optionsList","optionsDynamicKey","form","getSelectOptions","filter","value","result","type","name","muiComponentProps","includes","InputProps","readOnly","disabled","handleSubmit","values","updateValues","then","response","isSuccess","ok","isFunction","handleCancel","actions","handler","hasFields","isInvalidOrEmptyArray","minHeight","hydratedFields","defaultValues","getInitialValues","getValidationSchema"],"mappings":"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","sourcesContent":["import React, { useEffect, useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { EditProductsInsuredView } from './EditProductsInsured.view';\r\nimport { postInsured, getRiskCountries, getClients, getInsured, selectRiskCountries, selectPartyClientsSorted } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nimport { productAdminSchema } from 'schemas';\r\n\r\nEditProductsInsured.propTypes = {\r\n  submitHandler: PropTypes.func.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n  reInsured: PropTypes.bool.isRequired,\r\n};\r\n\r\nEditProductsInsured.defaultProps = {\r\n  handleClose: () => {},\r\n  reInsured: false,\r\n};\r\n\r\nexport default function EditProductsInsured({ id, submitHandler, handleClose, reInsured, isCreateInsuredModal = false }) {\r\n  const dispatch = useDispatch();\r\n  const [item, setItem] = useState(null);\r\n  const countries = useSelector(selectRiskCountries);\r\n  const clients = useSelector(selectPartyClientsSorted);\r\n\r\n  const optionsRef = useRef({ countries, clients });\r\n  const [options, setOptions] = useState({ countries, clients });\r\n\r\n  const disabledFields = ['name', 'partyType', 'country'];\r\n  const submitLabel = reInsured ? 'products.admin.reInsureds.update' : 'products.admin.insureds.update';\r\n  const { fields } = productAdminSchema.getSchema('insureds');\r\n\r\n  useEffect(\r\n    () => {\r\n      let isSubscribed = true;\r\n\r\n      const fetchData = async (id, reInsured) => {\r\n        const data = await dispatch(getInsured(id, reInsured));\r\n        if (utils.generic.isValidObject(data)) {\r\n          const { address, ...rest } = data;\r\n          const insuredItem = { ...rest, ...address };\r\n          isSubscribed && setItem(insuredItem);\r\n        }\r\n      };\r\n\r\n      fetchData(id, reInsured);\r\n\r\n      return () => (isSubscribed = false);\r\n    },\r\n    [id] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!utils.generic.isValidArray(options.countries, true)) {\r\n        dispatch(getRiskCountries());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getClients({ size: 1000 }));\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (!clients) return;\r\n    updateOptions('clients', clients);\r\n  }, [clients]);\r\n\r\n  useEffect(() => {\r\n    if (!countries) return;\r\n    updateOptions('countries', countries);\r\n  }, [countries]);\r\n\r\n  const hydrateLabels = (fields) =>\r\n    fields.map((field) => {\r\n      return {\r\n        ...field,\r\n        label: utils.string.t(field.label),\r\n        ...(field.options && { options: field.options.map((option) => ({ ...option, label: utils.string.t(option.label) })) }),\r\n      };\r\n    });\r\n\r\n  const schema = { fields: hydrateLabels(fields) };\r\n\r\n  const updateOptions = (key, obj) => {\r\n    optionsRef.current = { ...optionsRef.current, [key]: obj };\r\n    setOptions({ ...optionsRef.current, [key]: obj });\r\n  };\r\n\r\n  const hydrateOptions = (fields) => {\r\n    if (!fields || !item) return [];\r\n\r\n    const getOptionValue = (field, itemValue) => {\r\n      const optionsList = field.optionsDynamicKey\r\n        ? utils.form.getSelectOptions(field.optionsDynamicKey, {\r\n            [field.optionsDynamicKey]: options[field.optionsDynamicKey],\r\n          })\r\n        : field?.options;\r\n      const [result] = optionsList.filter((option) => option.value === itemValue);\r\n\r\n      return result;\r\n    };\r\n\r\n    return fields?.map((field) => {\r\n      return {\r\n        ...field,\r\n        value: field.type === 'autocompletemui' ? getOptionValue(field, item[field.name]) : item[field.name] || '',\r\n        ...(field.type !== 'autocompletemui' && {\r\n          muiComponentProps: {\r\n            ...field.muiComponentProps,\r\n            ...(disabledFields.includes(field.name) && {\r\n              InputProps: {\r\n                readOnly: true,\r\n                disabled: true,\r\n              },\r\n            }),\r\n            ...(disabledFields.includes(field.name) && {\r\n              disabled: true,\r\n            }),\r\n          },\r\n        }),\r\n        ...(disabledFields.includes(field.name) && {\r\n          disabled: true,\r\n        }),\r\n        ...(field.optionsDynamicKey && {\r\n          options: utils.form.getSelectOptions(field.optionsDynamicKey, {\r\n            [field.optionsDynamicKey]: options[field.optionsDynamicKey],\r\n          }),\r\n        }),\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const updateValues = { id: item?.id, ...values };\r\n\r\n    return dispatch(postInsured(updateValues, isCreateInsuredModal, reInsured, true)).then((response) => {\r\n      const isSuccess = response && response.id && !response.ok;\r\n\r\n      // success\r\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\r\n        if (utils.generic.isFunction(handleClose)) {\r\n          handleClose();\r\n        }\r\n        return submitHandler(response);\r\n      }\r\n\r\n      // fail\r\n      handleCancel();\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t(submitLabel),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  const hasFields = utils.generic.isValidArray(schema.fields);\r\n\r\n  // abort\r\n  if (\r\n    !hasFields ||\r\n    !utils.generic.isValidObject(item) ||\r\n    utils.generic.isInvalidOrEmptyArray(options?.clients) ||\r\n    utils.generic.isInvalidOrEmptyArray(options?.countries)\r\n  ) {\r\n    return <div data-testid=\"empty-placeholder\" style={{ minHeight: 400 }}></div>;\r\n  }\r\n  const hydratedFields = [hydrateOptions(schema.fields)];\r\n\r\n  const defaultValues = utils.form.getInitialValues(hydratedFields);\r\n\r\n  return (\r\n    <EditProductsInsuredView\r\n      fields={hydratedFields}\r\n      actions={actions}\r\n      loading={false}\r\n      defaultValues={defaultValues}\r\n      validationSchema={utils.form.getValidationSchema(hydratedFields)}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}