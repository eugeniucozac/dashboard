{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { LossDashboardView } from './LossDashboard.view';\nimport { selectLossSelected, selectFnolSelectedTab, selectLossInformation, resetDmsWidgetDocuments, resetClaimsDMSDocumentDetails } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossDashboard() {\n  _s();\n\n  var params = useParams();\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var lossSelected = useSelector(selectLossSelected);\n  var lossInformation = useSelector(selectLossInformation);\n  var fnolSelectedTab = useSelector(selectFnolSelectedTab);\n  var tabs = [{\n    value: 'details',\n    label: utils.string.t('claims.loss.tabMenu.details')\n  }, {\n    value: 'actions',\n    label: utils.string.t('claims.loss.tabMenu.actions')\n  }, {\n    value: 'documents',\n    label: utils.string.t('claims.loss.tabMenu.docs')\n  }, {\n    value: 'notes',\n    label: utils.string.t('claims.loss.tabMenu.notes')\n  }, {\n    value: 'auditTrail',\n    label: utils.string.t('claims.loss.tabMenu.auditTrail')\n  }];\n  var isValidTabUrl = (params === null || params === void 0 ? void 0 : params.tab) && tabs.map(function (t) {\n    return t.value;\n  }).includes(params.tab);\n\n  var _useState = useState(isValidTabUrl ? params.tab : 'details'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var breadcrumbs = [{\n    name: 'claimsFNOL',\n    label: utils.string.t('claims.loss.title'),\n    link: \"\".concat(config.routes.claimsFNOL.root).concat(fnolSelectedTab ? \"/tab/\".concat(fnolSelectedTab) : '')\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('claims.loss.text', {\n      lossRef: !(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) ? lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef : lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(!(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef) ? lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef : lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef),\n    active: true,\n    largeFont: true\n  }];\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n    history.push(\"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef, \"/\").concat(tabName));\n  };\n\n  useEffect(function () {\n    if (!(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef) && !(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef)) {\n      history.push(config.routes.claimsFNOL.root);\n    }\n\n    return function () {\n      dispatch(resetDmsWidgetDocuments());\n      dispatch(resetClaimsDMSDocumentDetails());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(LossDashboardView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    lossSelected: lossSelected || lossInformation,\n    handleSelectTab: handleSelectTab,\n    breadcrumbs: breadcrumbs\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossDashboard, \"x5RWMlqDWMfNlF38r1XkqDx4KfE=\", false, function () {\n  return [useParams, useHistory, useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = LossDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.js"],"names":["React","useState","useEffect","useParams","useHistory","useSelector","useDispatch","LossDashboardView","selectLossSelected","selectFnolSelectedTab","selectLossInformation","resetDmsWidgetDocuments","resetClaimsDMSDocumentDetails","utils","config","LossDashboard","params","history","dispatch","lossSelected","lossInformation","fnolSelectedTab","tabs","value","label","string","t","isValidTabUrl","tab","map","includes","selectedTab","setSelectedTab","breadcrumbs","name","link","routes","claimsFNOL","root","lossRef","loss","active","largeFont","handleSelectTab","tabName","push"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { LossDashboardView } from './LossDashboard.view';\r\nimport { selectLossSelected, selectFnolSelectedTab, selectLossInformation, resetDmsWidgetDocuments, resetClaimsDMSDocumentDetails } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function LossDashboard() {\r\n  const params = useParams();\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n\r\n  const lossSelected = useSelector(selectLossSelected);\r\n  const lossInformation = useSelector(selectLossInformation);\r\n  const fnolSelectedTab = useSelector(selectFnolSelectedTab);\r\n\r\n  const tabs = [\r\n    { value: 'details', label: utils.string.t('claims.loss.tabMenu.details') },\r\n    { value: 'actions', label: utils.string.t('claims.loss.tabMenu.actions') },\r\n    { value: 'documents', label: utils.string.t('claims.loss.tabMenu.docs') },\r\n    { value: 'notes', label: utils.string.t('claims.loss.tabMenu.notes') },\r\n    { value: 'auditTrail', label: utils.string.t('claims.loss.tabMenu.auditTrail') },\r\n  ];\r\n\r\n  const isValidTabUrl = params?.tab && tabs.map((t) => t.value).includes(params.tab);\r\n  const [selectedTab, setSelectedTab] = useState(isValidTabUrl ? params.tab : 'details');\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsFNOL',\r\n      label: utils.string.t('claims.loss.title'),\r\n      link: `${config.routes.claimsFNOL.root}${fnolSelectedTab ? `/tab/${fnolSelectedTab}` : ''}`,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('claims.loss.text', {\r\n        lossRef: !lossInformation?.lossRef ? lossSelected?.lossRef : lossInformation?.lossRef,\r\n      })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${!lossInformation?.lossRef ? lossSelected?.lossRef : lossInformation?.lossRef}`,\r\n      active: true,\r\n      largeFont: true,\r\n    },\r\n  ];\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n    history.push(`${config.routes.claimsFNOL.loss}/${lossSelected?.lossRef}/${tabName}`);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (!lossSelected?.lossRef && !lossInformation?.lossRef) {\r\n      history.push(config.routes.claimsFNOL.root);\r\n    }\r\n    return () => {\r\n      dispatch(resetDmsWidgetDocuments());\r\n      dispatch(resetClaimsDMSDocumentDetails());\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <LossDashboardView\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      lossSelected={lossSelected || lossInformation}\r\n      handleSelectTab={handleSelectTab}\r\n      breadcrumbs={breadcrumbs}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}