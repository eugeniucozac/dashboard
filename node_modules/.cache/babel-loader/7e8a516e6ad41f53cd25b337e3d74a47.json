{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport isString from 'lodash/isString'; // app\n\nimport { authLogout, enqueueNotification, addLoader, removeLoader, transformOpeningMemoOutPOST } from 'stores';\nimport * as utils from 'utils';\nexport var createOpeningMemo = function createOpeningMemo(uniqueMarketReference, departmentId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/openingMemo.actions.post',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postOpeningMemoRequest({\n      uniqueMarketReference: uniqueMarketReference,\n      departmentId: departmentId\n    }));\n    dispatch(addLoader('createOpeningMemo'));\n\n    if (!uniqueMarketReference || !isString(uniqueMarketReference)) {\n      dispatch(postOpeningMemoFailure(defaultError));\n      dispatch(enqueueNotification('notification.openingMemo.postFail', 'error'));\n      dispatch(removeLoader('createOpeningMemo'));\n      return;\n    }\n\n    var transformedPayload = transformOpeningMemoOutPOST({\n      uniqueMarketReference: uniqueMarketReference,\n      departmentId: departmentId\n    });\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/openingMemo',\n      data: transformedPayload\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postOpeningMemoSuccess(data));\n      dispatch(enqueueNotification('notification.openingMemo.postSuccess', 'success'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (openingMemo)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postOpeningMemoFailure(err));\n      dispatch(enqueueNotification('notification.openingMemo.postFail', 'error'));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('createOpeningMemo'));\n    });\n  };\n};\nexport var postOpeningMemoRequest = function postOpeningMemoRequest(payload) {\n  return {\n    type: 'OPENING_MEMO_POST_REQUEST',\n    payload: payload\n  };\n};\nexport var postOpeningMemoSuccess = function postOpeningMemoSuccess(payload) {\n  return {\n    type: 'OPENING_MEMO_POST_SUCCESS',\n    payload: payload\n  };\n};\nexport var postOpeningMemoFailure = function postOpeningMemoFailure(error) {\n  return {\n    type: 'OPENING_MEMO_POST_FAILURE',\n    payload: error\n  };\n};\nexport var resetOpeningMemoPostSuccess = function resetOpeningMemoPostSuccess() {\n  return {\n    type: 'RESET_OPENING_MEMO_POST_SUCCESS'\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/openingMemo/openingMemo.actions.post.js"],"names":["isString","authLogout","enqueueNotification","addLoader","removeLoader","transformOpeningMemoOutPOST","utils","createOpeningMemo","uniqueMarketReference","departmentId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postOpeningMemoRequest","postOpeningMemoFailure","transformedPayload","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","postOpeningMemoSuccess","err","errorParams","handleError","handleUnauthorized","payload","type","error","resetOpeningMemoPostSuccess"],"mappings":";;AAAA,OAAOA,QAAP,MAAqB,iBAArB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,mBAArB,EAA0CC,SAA1C,EAAqDC,YAArD,EAAmEC,2BAAnE,QAAsG,QAAtG;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,qBAAD,EAAwBC,YAAxB;AAAA,SAAyC,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAChG;AADgG,oBAEvCA,QAAQ,EAF+B;AAAA,QAEhFC,IAFgF,aAExFC,IAFwF,CAEhFD,IAFgF;AAAA,QAEtDE,QAFsD,aAExEC,MAFwE,CAE9DC,IAF8D,CAEtDF,QAFsD;;AAIhG,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE,iCADa;AAEnBC,MAAAA,OAAO,EAAE;AAFU,KAArB;AAKAT,IAAAA,QAAQ,CAACU,sBAAsB,CAAC;AAAEZ,MAAAA,qBAAqB,EAArBA,qBAAF;AAAyBC,MAAAA,YAAY,EAAZA;AAAzB,KAAD,CAAvB,CAAR;AACAC,IAAAA,QAAQ,CAACP,SAAS,CAAC,mBAAD,CAAV,CAAR;;AAEA,QAAI,CAACK,qBAAD,IAA0B,CAACR,QAAQ,CAACQ,qBAAD,CAAvC,EAAgE;AAC9DE,MAAAA,QAAQ,CAACW,sBAAsB,CAACJ,YAAD,CAAvB,CAAR;AACAP,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,mCAAD,EAAsC,OAAtC,CAApB,CAAR;AACAQ,MAAAA,QAAQ,CAACN,YAAY,CAAC,mBAAD,CAAb,CAAR;AACA;AACD;;AAED,QAAMkB,kBAAkB,GAAGjB,2BAA2B,CAAC;AAAEG,MAAAA,qBAAqB,EAArBA,qBAAF;AAAyBC,MAAAA,YAAY,EAAZA;AAAzB,KAAD,CAAtD;AAEA,WAAOH,KAAK,CAACiB,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEb,IAAI,CAACc,WADR;AAEJZ,MAAAA,QAAQ,EAAEA,QAAQ,CAACa,IAFf;AAGJC,MAAAA,IAAI,EAAE,iBAHF;AAIJC,MAAAA,IAAI,EAAEP;AAJF,KADD,EAOJQ,IAPI,CAOC,UAACC,QAAD;AAAA,aAAczB,KAAK,CAACiB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAU3B,KAAK,CAACiB,GAAN,CAAUW,UAAV,CAAqBD,IAArB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACyB,sBAAsB,CAACN,IAAD,CAAvB,CAAR;AACAnB,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,sCAAD,EAAyC,SAAzC,CAApB,CAAR;AACD,KAZI,WAaE,UAACkC,GAAD,EAAS;AACd,UAAMC,WAAW,mCACZpB,YADY;AAEfE,QAAAA,OAAO,EAAE;AAFM,QAAjB;;AAKAb,MAAAA,KAAK,CAACiB,GAAN,CAAUe,WAAV,CAAsBF,GAAtB,EAA2BC,WAA3B;AACA/B,MAAAA,KAAK,CAACiB,GAAN,CAAUgB,kBAAV,CAA6BH,GAA7B,EAAkC1B,QAAlC,EAA4CT,UAA5C;AACAS,MAAAA,QAAQ,CAACW,sBAAsB,CAACe,GAAD,CAAvB,CAAR;AACA1B,MAAAA,QAAQ,CAACR,mBAAmB,CAAC,mCAAD,EAAsC,OAAtC,CAApB,CAAR;AACA,aAAOkC,GAAP;AACD,KAxBI,aAyBI,YAAM;AACb1B,MAAAA,QAAQ,CAACN,YAAY,CAAC,mBAAD,CAAb,CAAR;AACD,KA3BI,CAAP;AA4BD,GAjDgC;AAAA,CAA1B;AAmDP,OAAO,IAAMgB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACoB,OAAD,EAAa;AACjD,SAAO;AACLC,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAML,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACK,OAAD,EAAa;AACjD,SAAO;AACLC,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMnB,sBAAsB,GAAG,SAAzBA,sBAAyB,CAACqB,KAAD,EAAW;AAC/C,SAAO;AACLD,IAAAA,IAAI,EAAE,2BADD;AAELD,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B;AAAA,SAAO;AAChDF,IAAAA,IAAI,EAAE;AAD0C,GAAP;AAAA,CAApC","sourcesContent":["import isString from 'lodash/isString';\r\n\r\n// app\r\nimport { authLogout, enqueueNotification, addLoader, removeLoader, transformOpeningMemoOutPOST } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const createOpeningMemo = (uniqueMarketReference, departmentId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/openingMemo.actions.post',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postOpeningMemoRequest({ uniqueMarketReference, departmentId }));\r\n  dispatch(addLoader('createOpeningMemo'));\r\n\r\n  if (!uniqueMarketReference || !isString(uniqueMarketReference)) {\r\n    dispatch(postOpeningMemoFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.openingMemo.postFail', 'error'));\r\n    dispatch(removeLoader('createOpeningMemo'));\r\n    return;\r\n  }\r\n\r\n  const transformedPayload = transformOpeningMemoOutPOST({ uniqueMarketReference, departmentId });\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/openingMemo',\r\n      data: transformedPayload,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postOpeningMemoSuccess(data));\r\n      dispatch(enqueueNotification('notification.openingMemo.postSuccess', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (openingMemo)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postOpeningMemoFailure(err));\r\n      dispatch(enqueueNotification('notification.openingMemo.postFail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('createOpeningMemo'));\r\n    });\r\n};\r\n\r\nexport const postOpeningMemoRequest = (payload) => {\r\n  return {\r\n    type: 'OPENING_MEMO_POST_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postOpeningMemoSuccess = (payload) => {\r\n  return {\r\n    type: 'OPENING_MEMO_POST_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postOpeningMemoFailure = (error) => {\r\n  return {\r\n    type: 'OPENING_MEMO_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const resetOpeningMemoPostSuccess = () => ({\r\n  type: 'RESET_OPENING_MEMO_POST_SUCCESS',\r\n});\r\n"]},"metadata":{},"sourceType":"module"}