{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\IndustryNews\\\\IndustryNews.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport orderBy from 'lodash/orderBy'; // app\n\nimport { usePagination } from 'hooks';\nimport { getArticles, selectAllTopics, updateTopics, selectArticlePagination } from 'stores';\nimport * as utils from 'utils';\nimport { IndustryNewsView } from './IndustryNews.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function IndustryNews() {\n  _s();\n\n  var dispatch = useDispatch();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var articles = useSelector(function (state) {\n    return state.articles.list.items;\n  });\n  var isLoading = useSelector(function (state) {\n    return state.articles.isLoading;\n  });\n  var initialLoad = useSelector(function (state) {\n    return state.articles.initialLoad;\n  });\n  var departmentIds = useSelector(function (state) {\n    return state.user.departmentIds;\n  });\n  var selectedTopics = useSelector(function (state) {\n    return state.articles.list.topics;\n  });\n  var allTopics = useSelector(selectAllTopics);\n  var articlePagination = useSelector(selectArticlePagination);\n  var selectedTopicIds = (selectedTopics || []).map(function (topic) {\n    return topic.value;\n  });\n  var selectField = {\n    type: 'select',\n    value: '__placeholder__',\n    size: 'sm',\n    muiComponentProps: {\n      fullWidth: false\n    },\n    options: allTopics ? [{\n      label: utils.string.t('industryNews.selectATopic'),\n      value: '__placeholder__',\n      placeholder: true\n    }].concat(_toConsumableArray(allTopics.filter(function (topic) {\n      return !selectedTopicIds.includes(topic.value);\n    }))) : [{\n      label: utils.string.t('industryNews.selectATopic'),\n      value: '__placeholder__',\n      placeholder: true\n    }],\n    name: 'filter',\n    handleUpdate: function handleUpdate(name, topicValue) {\n      dispatch(updateTopics(orderBy([].concat(_toConsumableArray(selectedTopics), [allTopics.find(function (topic) {\n        return topic.value === topicValue;\n      })]), 'label')));\n    }\n  };\n  useEffect(function () {\n    if (!selectedTopics || !initialLoad) return;\n    dispatch(getArticles({\n      selectedTopics: selectedTopics,\n      page: 0\n    }));\n  }, [selectedTopics, initialLoad] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!departmentIds.length || !allTopics || initialLoad) return; // Pre-select topics mapped to departmentIds only first load\n\n    var topics = allTopics.filter(function (topic) {\n      return departmentIds.includes(topic.value);\n    });\n    dispatch(updateTopics(topics, true));\n  }, [departmentIds, allTopics] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleRemoveTopics = function handleRemoveTopics(removedTopics) {\n    var topicIds = removedTopics.map(function (topic) {\n      return topic.value;\n    });\n    dispatch(updateTopics(selectedTopics.filter(function (topic) {\n      return !topicIds.includes(topic.value);\n    })));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(getArticles({\n      page: newPage\n    }));\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    dispatch(getArticles({\n      size: rowsPerPage,\n      page: 0\n    }));\n  };\n\n  var pagination = usePagination(articles, articlePagination, handleChangePage, handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('industryNews.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(IndustryNewsView, {\n      handleChangePage: pagination.handlers.handleChangePage,\n      handleChangeRowsPerPage: pagination.handlers.handleChangeRowsPerPage,\n      pagination: pagination.obj,\n      initialLoad: initialLoad,\n      handleRemoveTopics: handleRemoveTopics,\n      selectedTopics: selectedTopics,\n      isLoading: isLoading,\n      articles: utils.schemas.parseArticles(articles),\n      selectField: selectField\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(IndustryNews, \"Heuk7QJGfO0CuDRvpoVOaDrWkuU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, usePagination];\n});\n\n_c = IndustryNews;\nexport default IndustryNews;\n\nvar _c;\n\n$RefreshReg$(_c, \"IndustryNews\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/IndustryNews/IndustryNews.js"],"names":["React","useEffect","useDispatch","useSelector","Helmet","orderBy","usePagination","getArticles","selectAllTopics","updateTopics","selectArticlePagination","utils","IndustryNewsView","IndustryNews","dispatch","brand","state","ui","articles","list","items","isLoading","initialLoad","departmentIds","user","selectedTopics","topics","allTopics","articlePagination","selectedTopicIds","map","topic","value","selectField","type","size","muiComponentProps","fullWidth","options","label","string","t","placeholder","filter","includes","name","handleUpdate","topicValue","find","page","length","handleRemoveTopics","removedTopics","topicIds","handleChangePage","newPage","handleChangeRowsPerPage","rowsPerPage","pagination","app","getAppName","handlers","obj","schemas","parseArticles"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport orderBy from 'lodash/orderBy';\r\n\r\n// app\r\nimport { usePagination } from 'hooks';\r\nimport { getArticles, selectAllTopics, updateTopics, selectArticlePagination } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { IndustryNewsView } from './IndustryNews.view';\r\n\r\nexport function IndustryNews() {\r\n  const dispatch = useDispatch();\r\n\r\n  const brand = useSelector((state) => state.ui.brand);\r\n  const articles = useSelector((state) => state.articles.list.items);\r\n  const isLoading = useSelector((state) => state.articles.isLoading);\r\n  const initialLoad = useSelector((state) => state.articles.initialLoad);\r\n  const departmentIds = useSelector((state) => state.user.departmentIds);\r\n  const selectedTopics = useSelector((state) => state.articles.list.topics);\r\n  const allTopics = useSelector(selectAllTopics);\r\n  const articlePagination = useSelector(selectArticlePagination);\r\n  const selectedTopicIds = (selectedTopics || []).map((topic) => topic.value);\r\n\r\n  const selectField = {\r\n    type: 'select',\r\n    value: '__placeholder__',\r\n    size: 'sm',\r\n    muiComponentProps: {\r\n      fullWidth: false,\r\n    },\r\n    options: allTopics\r\n      ? [\r\n          { label: utils.string.t('industryNews.selectATopic'), value: '__placeholder__', placeholder: true },\r\n          ...allTopics.filter((topic) => !selectedTopicIds.includes(topic.value)),\r\n        ]\r\n      : [{ label: utils.string.t('industryNews.selectATopic'), value: '__placeholder__', placeholder: true }],\r\n    name: 'filter',\r\n    handleUpdate: (name, topicValue) => {\r\n      dispatch(updateTopics(orderBy([...selectedTopics, allTopics.find((topic) => topic.value === topicValue)], 'label')));\r\n    },\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!selectedTopics || !initialLoad) return;\r\n      dispatch(getArticles({ selectedTopics, page: 0 }));\r\n    },\r\n    [selectedTopics, initialLoad] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!departmentIds.length || !allTopics || initialLoad) return;\r\n      // Pre-select topics mapped to departmentIds only first load\r\n      const topics = allTopics.filter((topic) => departmentIds.includes(topic.value));\r\n      dispatch(updateTopics(topics, true));\r\n    },\r\n    [departmentIds, allTopics] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleRemoveTopics = (removedTopics) => {\r\n    const topicIds = removedTopics.map((topic) => topic.value);\r\n    dispatch(updateTopics(selectedTopics.filter((topic) => !topicIds.includes(topic.value))));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(getArticles({ page: newPage }));\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    dispatch(getArticles({ size: rowsPerPage, page: 0 }));\r\n  };\r\n\r\n  const pagination = usePagination(articles, articlePagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('industryNews.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n\r\n      <IndustryNewsView\r\n        handleChangePage={pagination.handlers.handleChangePage}\r\n        handleChangeRowsPerPage={pagination.handlers.handleChangeRowsPerPage}\r\n        pagination={pagination.obj}\r\n        initialLoad={initialLoad}\r\n        handleRemoveTopics={handleRemoveTopics}\r\n        selectedTopics={selectedTopics}\r\n        isLoading={isLoading}\r\n        articles={utils.schemas.parseArticles(articles)}\r\n        selectField={selectField}\r\n      />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default IndustryNews;\r\n"]},"metadata":{},"sourceType":"module"}