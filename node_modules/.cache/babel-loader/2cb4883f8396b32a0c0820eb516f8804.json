{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getBEAdjuster = function getBEAdjuster() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var sourceID = get(claims, 'policyData.xbInstanceID') || '';\n    var departmentID = get(claims, 'policyData.divisionID') || '';\n    var defaultError = {\n      file: 'stores/claims.actions.getBEAdjuster'\n    };\n    dispatch(getBEAdjusterRequest());\n    dispatch(addLoader('getBEAdjuster'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/gui/claims/\".concat(sourceID, \"/department/\").concat(departmentID, \"/be-adjuster\")\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getBEAdjusterSuccess(data.data));\n      dispatch(removeLoader('getBEAdjuster'));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getBEAdjusterFailure(err, defaultError));\n      dispatch(removeLoader('getBEAdjuster'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getBEAdjusterRequest = function getBEAdjusterRequest(data) {\n  return {\n    type: 'CLAIMS_BE_ADJUSTER_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getBEAdjusterSuccess = function getBEAdjusterSuccess(data) {\n  return {\n    type: 'CLAIMS_BE_ADJUSTER_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getBEAdjusterFailure = function getBEAdjusterFailure(data) {\n  return {\n    type: 'CLAIMS_BE_ADJUSTER_GET_FAILURE',\n    payload: data\n  };\n};\nexport var setBEAdjusterValue = function setBEAdjusterValue(data) {\n  return {\n    type: 'SET_CLAIMS_BE_ADJUSTER_VALUE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getBEAdjuster.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getBEAdjuster","dispatch","getState","auth","user","endpoint","config","vars","claims","sourceID","departmentID","defaultError","file","getBEAdjusterRequest","api","token","accessToken","claimService","path","then","response","handleResponse","data","getBEAdjusterSuccess","catch","err","getBEAdjusterFailure","handleUnauthorized","type","payload","setBEAdjusterValue"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,aAAa,GAAG,SAAhBA,aAAgB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzD;AADyD,oBAEUA,QAAQ,EAFlB;AAAA,QAEzCC,IAFyC,aAEjDC,IAFiD,CAEzCD,IAFyC;AAAA,QAEfE,QAFe,aAEjCC,MAFiC,CAEvBC,IAFuB,CAEfF,QAFe;AAAA,QAEDG,MAFC,aAEDA,MAFC;;AAGzD,QAAMC,QAAQ,GAAGV,GAAG,CAACS,MAAD,EAAS,yBAAT,CAAH,IAA0C,EAA3D;AACA,QAAME,YAAY,GAAGX,GAAG,CAACS,MAAD,EAAS,uBAAT,CAAH,IAAwC,EAA7D;AAEA,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAX,IAAAA,QAAQ,CAACY,oBAAoB,EAArB,CAAR;AACAZ,IAAAA,QAAQ,CAACL,SAAS,CAAC,eAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACgB,GAAN,CACJf,GADI,CACA;AACHgB,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,YAFhB;AAGHC,MAAAA,IAAI,gCAAyBT,QAAzB,yBAAgDC,YAAhD;AAHD,KADA,EAMJS,IANI,CAMC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACgB,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,oBAAoB,CAACD,IAAI,CAACA,IAAN,CAArB,CAAR;AACArB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,eAAD,CAAb,CAAR;AACA,aAAOyB,IAAI,CAACA,IAAZ;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACdxB,MAAAA,QAAQ,CAACyB,oBAAoB,CAACD,GAAD,EAAMd,YAAN,CAArB,CAAR;AACAV,MAAAA,QAAQ,CAACJ,YAAY,CAAC,eAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACgB,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CN,UAA5C;AACA,aAAO8B,GAAP;AACD,KAjBI,CAAP;AAkBD,GA/B4B;AAAA,CAAtB;AAiCP,OAAO,IAAMZ,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACS,IAAD,EAAU;AAC5C,SAAO;AACLM,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACD,IAAD,EAAU;AAC5C,SAAO;AACLM,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,oBAAoB,GAAG,SAAvBA,oBAAuB,CAACJ,IAAD,EAAU;AAC5C,SAAO;AACLM,IAAAA,IAAI,EAAE,gCADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMQ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACR,IAAD,EAAU;AAC1C,SAAO;AACLM,IAAAA,IAAI,EAAE,8BADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getBEAdjuster = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n  const sourceID = get(claims, 'policyData.xbInstanceID') || '';\r\n  const departmentID = get(claims, 'policyData.divisionID') || '';\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getBEAdjuster',\r\n  };\r\n\r\n  dispatch(getBEAdjusterRequest());\r\n  dispatch(addLoader('getBEAdjuster'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/gui/claims/${sourceID}/department/${departmentID}/be-adjuster`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getBEAdjusterSuccess(data.data));\r\n      dispatch(removeLoader('getBEAdjuster'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getBEAdjusterFailure(err, defaultError));\r\n      dispatch(removeLoader('getBEAdjuster'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getBEAdjusterRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_BE_ADJUSTER_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getBEAdjusterSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_BE_ADJUSTER_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getBEAdjusterFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_BE_ADJUSTER_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const setBEAdjusterValue = (data) => {\r\n  return {\r\n    type: 'SET_CLAIMS_BE_ADJUSTER_VALUE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}