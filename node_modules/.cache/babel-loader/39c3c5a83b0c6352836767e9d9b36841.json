{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\EnterClaimInformation\\\\EnterClaimInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport PropTypes from 'prop-types'; //app\n\nimport { Layout } from 'components';\nimport { ClaimsFixedBottomBar, ClaimsUnderwritingGroups, ClaimsMovementType, EnterClaimCardInformation, ClaimsUploadViewSearchDocs } from 'modules';\nimport styles from './EnterClaimInformation.styles';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles, Grid, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nEnterClaimInformationView.propTypes = {\n  policyInformation: PropTypes.object.isRequired,\n  claimantNames: PropTypes.array.isRequired,\n  interest: PropTypes.object.isRequired,\n  underWritingGroups: PropTypes.object.isRequired,\n  complexityValues: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  fields: PropTypes.array.isRequired,\n  isBordereauFlag: PropTypes.bool.isRequired,\n  isComplexFlag: PropTypes.bool.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  existingClaimInfo: PropTypes.object.isRequired,\n  claimData: PropTypes.object.isRequired,\n  hasClaimRef: PropTypes.bool.isRequired,\n  currencies: PropTypes.array.isRequired,\n  resetKey: PropTypes.number,\n  uwResetKey: PropTypes.number,\n  isBordereauChecked: PropTypes.bool.isRequired\n};\nexport function EnterClaimInformationView(props) {\n  _s();\n\n  var catCodes = props.catCodes,\n      lossInformation = props.lossInformation,\n      lossQualifiers = props.lossQualifiers,\n      policyInformation = props.policyInformation,\n      claimantNames = props.claimantNames,\n      interest = props.interest,\n      underWritingGroups = props.underWritingGroups,\n      complexityValues = props.complexityValues,\n      referralValues = props.referralValues,\n      fields = props.fields,\n      isBordereauFlag = props.isBordereauFlag,\n      isComplexFlag = props.isComplexFlag,\n      handleNext = props.handleNext,\n      handleSave = props.handleSave,\n      handleCancel = props.handleCancel,\n      handleBack = props.handleBack,\n      validation = props.validation,\n      setValidation = props.setValidation,\n      existingClaimInfo = props.existingClaimInfo,\n      hasClaimRef = props.hasClaimRef,\n      currencies = props.currencies,\n      resetKey = props.resetKey,\n      uwResetKey = props.uwResetKey,\n      isBordereauChecked = props.isBordereauChecked,\n      claimData = props.claimData;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimInformation'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isSaving = _useState2[0],\n      setIsSaving = _useState2[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: validation\n    }\n  }));\n  var handleSubmit = claimForm.handleSubmit,\n      setValue = claimForm.setValue;\n\n  var onHandleSave = function onHandleSave() {\n    setIsSaving(true);\n    setValidation(false);\n  };\n\n  useEffect(function () {\n    if (validation) {\n      handleSubmit(handleNext)();\n    }\n\n    setValidation(false);\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isSaving) {\n      handleSubmit(handleSave)();\n      setIsSaving(false);\n    }\n\n    if (underWritingGroups.percentageOfSelected) {\n      setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n    } else {\n      setValue('order', '100');\n    }\n  }, [isSaving, underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.wrapper,\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        padding: true,\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          className: classes.claimsContainer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(_Fragment, {\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(EnterClaimCardInformation, {\n                  resetKey: resetKey,\n                  policyInformation: policyInformation,\n                  claimantNames: claimantNames,\n                  interest: interest,\n                  fields: fields,\n                  claimForm: claimForm,\n                  complexityValues: complexityValues,\n                  referralValues: referralValues,\n                  isBordereauFlag: isBordereauFlag,\n                  isComplexFlag: isComplexFlag,\n                  existingClaimInfo: existingClaimInfo,\n                  currencies: currencies,\n                  isBordereauChecked: isBordereauChecked\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 9,\n                children: /*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroups, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  uwResetKey: uwResetKey,\n                  hasClaimRef: hasClaimRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 132,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 12,\n                md: 3,\n                children: /*#__PURE__*/_jsxDEV(ClaimsMovementType, {\n                  fields: fields,\n                  claimForm: claimForm,\n                  underWritingGroups: underWritingGroups,\n                  enforceValueSet: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.claimsContainer,\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            spacing: 2,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: hasClaimRef && /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n                refData: claimData,\n                refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n                ,\n                dmsContext: constants.DMS_CONTEXT_CLAIM,\n                documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 146,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 145,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(ClaimsFixedBottomBar, _objectSpread(_objectSpread({}, props), {}, {\n      onSave: onHandleSave,\n      handleNextSubmit: function handleNextSubmit() {\n        return setValidation(true);\n      },\n      handleBack: handleBack,\n      handleCancel: handleCancel,\n      save: true,\n      next: true\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 161,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(EnterClaimInformationView, \"LTn+ZkYReg8E+aA6TDg/wSQT1Yk=\", false, function () {\n  return [useForm];\n});\n\n_c = EnterClaimInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EnterClaimInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/EnterClaimInformation/EnterClaimInformation.view.js"],"names":["React","useEffect","useState","useForm","yupResolver","PropTypes","Layout","ClaimsFixedBottomBar","ClaimsUnderwritingGroups","ClaimsMovementType","EnterClaimCardInformation","ClaimsUploadViewSearchDocs","styles","utils","constants","makeStyles","Grid","Box","EnterClaimInformationView","propTypes","policyInformation","object","isRequired","claimantNames","array","interest","underWritingGroups","complexityValues","referralValues","fields","isBordereauFlag","bool","isComplexFlag","handleNext","func","handleSave","handleCancel","handleBack","existingClaimInfo","claimData","hasClaimRef","currencies","resetKey","number","uwResetKey","isBordereauChecked","props","catCodes","lossInformation","lossQualifiers","validation","setValidation","classes","name","isSaving","setIsSaving","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimForm","resolver","context","handleSubmit","setValue","onHandleSave","percentageOfSelected","wrapper","claimsContainer","claimRef","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","type","claims"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,MAAT,QAAuB,YAAvB;AACA,SACEC,oBADF,EAEEC,wBAFF,EAGEC,kBAHF,EAIEC,yBAJF,EAKEC,0BALF,QAMO,SANP;AAOA,OAAOC,MAAP,MAAmB,gCAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,IAArB,EAA2BC,GAA3B,QAAsC,mBAAtC;;;AAEAC,yBAAyB,CAACC,SAA1B,GAAsC;AACpCC,EAAAA,iBAAiB,EAAEf,SAAS,CAACgB,MAAV,CAAiBC,UADA;AAEpCC,EAAAA,aAAa,EAAElB,SAAS,CAACmB,KAAV,CAAgBF,UAFK;AAGpCG,EAAAA,QAAQ,EAAEpB,SAAS,CAACgB,MAAV,CAAiBC,UAHS;AAIpCI,EAAAA,kBAAkB,EAAErB,SAAS,CAACgB,MAAV,CAAiBC,UAJD;AAKpCK,EAAAA,gBAAgB,EAAEtB,SAAS,CAACmB,KAAV,CAAgBF,UALE;AAMpCM,EAAAA,cAAc,EAAEvB,SAAS,CAACmB,KAAV,CAAgBF,UANI;AAOpCO,EAAAA,MAAM,EAAExB,SAAS,CAACmB,KAAV,CAAgBF,UAPY;AAQpCQ,EAAAA,eAAe,EAAEzB,SAAS,CAAC0B,IAAV,CAAeT,UARI;AASpCU,EAAAA,aAAa,EAAE3B,SAAS,CAAC0B,IAAV,CAAeT,UATM;AAUpCW,EAAAA,UAAU,EAAE5B,SAAS,CAAC6B,IAAV,CAAeZ,UAVS;AAWpCa,EAAAA,UAAU,EAAE9B,SAAS,CAAC6B,IAAV,CAAeZ,UAXS;AAYpCc,EAAAA,YAAY,EAAE/B,SAAS,CAAC6B,IAAV,CAAeZ,UAZO;AAapCe,EAAAA,UAAU,EAAEhC,SAAS,CAAC6B,IAAV,CAAeZ,UAbS;AAcpCgB,EAAAA,iBAAiB,EAAEjC,SAAS,CAACgB,MAAV,CAAiBC,UAdA;AAepCiB,EAAAA,SAAS,EAAElC,SAAS,CAACgB,MAAV,CAAiBC,UAfQ;AAgBpCkB,EAAAA,WAAW,EAAEnC,SAAS,CAAC0B,IAAV,CAAeT,UAhBQ;AAiBpCmB,EAAAA,UAAU,EAAEpC,SAAS,CAACmB,KAAV,CAAgBF,UAjBQ;AAkBpCoB,EAAAA,QAAQ,EAAErC,SAAS,CAACsC,MAlBgB;AAmBpCC,EAAAA,UAAU,EAAEvC,SAAS,CAACsC,MAnBc;AAoBpCE,EAAAA,kBAAkB,EAAExC,SAAS,CAAC0B,IAAV,CAAeT;AApBC,CAAtC;AAuBA,OAAO,SAASJ,yBAAT,CAAmC4B,KAAnC,EAA0C;AAAA;;AAAA,MAE7CC,QAF6C,GA2B3CD,KA3B2C,CAE7CC,QAF6C;AAAA,MAG7CC,eAH6C,GA2B3CF,KA3B2C,CAG7CE,eAH6C;AAAA,MAI7CC,cAJ6C,GA2B3CH,KA3B2C,CAI7CG,cAJ6C;AAAA,MAK7C7B,iBAL6C,GA2B3C0B,KA3B2C,CAK7C1B,iBAL6C;AAAA,MAM7CG,aAN6C,GA2B3CuB,KA3B2C,CAM7CvB,aAN6C;AAAA,MAO7CE,QAP6C,GA2B3CqB,KA3B2C,CAO7CrB,QAP6C;AAAA,MAQ7CC,kBAR6C,GA2B3CoB,KA3B2C,CAQ7CpB,kBAR6C;AAAA,MAS7CC,gBAT6C,GA2B3CmB,KA3B2C,CAS7CnB,gBAT6C;AAAA,MAU7CC,cAV6C,GA2B3CkB,KA3B2C,CAU7ClB,cAV6C;AAAA,MAW7CC,MAX6C,GA2B3CiB,KA3B2C,CAW7CjB,MAX6C;AAAA,MAY7CC,eAZ6C,GA2B3CgB,KA3B2C,CAY7ChB,eAZ6C;AAAA,MAa7CE,aAb6C,GA2B3Cc,KA3B2C,CAa7Cd,aAb6C;AAAA,MAc7CC,UAd6C,GA2B3Ca,KA3B2C,CAc7Cb,UAd6C;AAAA,MAe7CE,UAf6C,GA2B3CW,KA3B2C,CAe7CX,UAf6C;AAAA,MAgB7CC,YAhB6C,GA2B3CU,KA3B2C,CAgB7CV,YAhB6C;AAAA,MAiB7CC,UAjB6C,GA2B3CS,KA3B2C,CAiB7CT,UAjB6C;AAAA,MAkB7Ca,UAlB6C,GA2B3CJ,KA3B2C,CAkB7CI,UAlB6C;AAAA,MAmB7CC,aAnB6C,GA2B3CL,KA3B2C,CAmB7CK,aAnB6C;AAAA,MAoB7Cb,iBApB6C,GA2B3CQ,KA3B2C,CAoB7CR,iBApB6C;AAAA,MAqB7CE,WArB6C,GA2B3CM,KA3B2C,CAqB7CN,WArB6C;AAAA,MAsB7CC,UAtB6C,GA2B3CK,KA3B2C,CAsB7CL,UAtB6C;AAAA,MAuB7CC,QAvB6C,GA2B3CI,KA3B2C,CAuB7CJ,QAvB6C;AAAA,MAwB7CE,UAxB6C,GA2B3CE,KA3B2C,CAwB7CF,UAxB6C;AAAA,MAyB7CC,kBAzB6C,GA2B3CC,KA3B2C,CAyB7CD,kBAzB6C;AAAA,MA0B7CN,SA1B6C,GA2B3CO,KA3B2C,CA0B7CP,SA1B6C;AA6B/C,MAAMa,OAAO,GAAGrC,UAAU,CAACH,MAAD,EAAS;AAAEyC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AA7B+C,kBA8BfnD,QAAQ,CAAC,KAAD,CA9BO;AAAA;AAAA,MA8BxCoD,QA9BwC;AAAA,MA8B9BC,WA9B8B;;AA+B/C,MAAMC,aAAa,GAAG3C,KAAK,CAAC4C,IAAN,CAAWC,gBAAX,CAA4B7B,MAA5B,CAAtB;AACA,MAAM8B,gBAAgB,GAAG9C,KAAK,CAAC4C,IAAN,CAAWG,mBAAX,CAA+B/B,MAA/B,CAAzB;AACA,MAAMgC,SAAS,GAAG1D,OAAO;AACvBqD,IAAAA,aAAa,EAAbA;AADuB,KAEnBG,gBAAgB,IAAI;AAAEG,IAAAA,QAAQ,EAAE1D,WAAW,CAACuD,gBAAD,CAAvB;AAA2CI,IAAAA,OAAO,EAAE;AAAEb,MAAAA,UAAU,EAAVA;AAAF;AAApD,GAFD,EAAzB;AAjC+C,MAqCvCc,YArCuC,GAqCZH,SArCY,CAqCvCG,YArCuC;AAAA,MAqCzBC,QArCyB,GAqCZJ,SArCY,CAqCzBI,QArCyB;;AAsC/C,MAAMC,YAAY,GAAG,SAAfA,YAAe,GAAM;AACzBX,IAAAA,WAAW,CAAC,IAAD,CAAX;AACAJ,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GAHD;;AAKAlD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIiD,UAAJ,EAAgB;AACdc,MAAAA,YAAY,CAAC/B,UAAD,CAAZ;AACD;;AACDkB,IAAAA,aAAa,CAAC,KAAD,CAAb;AACD,GALQ,EAKN,CAACD,UAAD,CALM,CAAT,CA3C+C,CAgD7B;;AAElBjD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIqD,QAAJ,EAAc;AACZU,MAAAA,YAAY,CAAC7B,UAAD,CAAZ;AACAoB,MAAAA,WAAW,CAAC,KAAD,CAAX;AACD;;AACD,QAAI7B,kBAAkB,CAACyC,oBAAvB,EAA6C;AAC3CF,MAAAA,QAAQ,CAAC,iBAAD,EAAoBvC,kBAAkB,CAACyC,oBAAvC,CAAR;AACD,KAFD,MAEO;AACLF,MAAAA,QAAQ,CAAC,OAAD,EAAU,KAAV,CAAR;AACD;AACF,GAVQ,EAUN,CAACX,QAAD,EAAW5B,kBAAX,CAVM,CAAT,CAlD+C,CA4DX;;AAEpC,sBACE;AAAA,4BACE;AAAK,MAAA,SAAS,EAAE0B,OAAO,CAACgB,OAAxB;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAa,QAAA,OAAO,MAApB;AAAA,gCACE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAEhB,OAAO,CAACiB,eAAxB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,mCACE;AAAA,sCACE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAA,uCACE,QAAC,yBAAD;AACE,kBAAA,QAAQ,EAAE3B,QADZ;AAEE,kBAAA,iBAAiB,EAAEtB,iBAFrB;AAGE,kBAAA,aAAa,EAAEG,aAHjB;AAIE,kBAAA,QAAQ,EAAEE,QAJZ;AAKE,kBAAA,MAAM,EAAEI,MALV;AAME,kBAAA,SAAS,EAAEgC,SANb;AAOE,kBAAA,gBAAgB,EAAElC,gBAPpB;AAQE,kBAAA,cAAc,EAAEC,cARlB;AASE,kBAAA,eAAe,EAAEE,eATnB;AAUE,kBAAA,aAAa,EAAEE,aAVjB;AAWE,kBAAA,iBAAiB,EAAEM,iBAXrB;AAYE,kBAAA,UAAU,EAAEG,UAZd;AAaE,kBAAA,kBAAkB,EAAEI;AAbtB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBADF,eAkBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACE,QAAC,wBAAD;AAA0B,kBAAA,MAAM,EAAEhB,MAAlC;AAA0C,kBAAA,SAAS,EAAEgC,SAArD;AAAgE,kBAAA,UAAU,EAAEjB,UAA5E;AAAwF,kBAAA,WAAW,EAAEJ;AAArG;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBAlBF,eAqBE,QAAC,IAAD;AAAM,gBAAA,IAAI,MAAV;AAAW,gBAAA,EAAE,EAAE,EAAf;AAAmB,gBAAA,EAAE,EAAE,CAAvB;AAAA,uCACE,QAAC,kBAAD;AACE,kBAAA,MAAM,EAAEX,MADV;AAEE,kBAAA,SAAS,EAAEgC,SAFb;AAGE,kBAAA,kBAAkB,EAAEnC,kBAHtB;AAIE,kBAAA,eAAe,EAAE;AAJnB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,sBArBF;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBADF,eAmCE,QAAC,GAAD;AAAK,UAAA,SAAS,EAAE0B,OAAO,CAACiB,eAAxB;AAAA,iCACE,QAAC,IAAD;AAAM,YAAA,SAAS,MAAf;AAAgB,YAAA,OAAO,EAAE,CAAzB;AAAA,mCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,EAAf;AAAA,wBACG7B,WAAW,iBACV,QAAC,0BAAD;AACE,gBAAA,OAAO,EAAED,SADX;AAEE,gBAAA,SAAS,EAAE,CAAAA,SAAS,SAAT,IAAAA,SAAS,WAAT,YAAAA,SAAS,CAAE+B,QAAX,IAAsB,UAAtB,GAAmC,gBAFhD,CAEkE;AAFlE;AAGE,gBAAA,UAAU,EAAExD,SAAS,CAACyD,iBAHxB;AAIE,gBAAA,eAAe,EAAEzD,SAAS,CAAC0D,8BAAV,CAAyCC,IAAzC,CAA8CC;AAJjE;AAAA;AAAA;AAAA;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAnCF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAqDE,QAAC,oBAAD,kCACM5B,KADN;AAEE,MAAA,MAAM,EAAEoB,YAFV;AAGE,MAAA,gBAAgB,EAAE;AAAA,eAAMf,aAAa,CAAC,IAAD,CAAnB;AAAA,OAHpB;AAIE,MAAA,UAAU,EAAEd,UAJd;AAKE,MAAA,YAAY,EAAED,YALhB;AAME,MAAA,IAAI,EAAE,IANR;AAOE,MAAA,IAAI,EAAE;AAPR;AAAA;AAAA;AAAA;AAAA,YArDF;AAAA,kBADF;AAiED;;GA/HelB,yB;UAiCIf,O;;;KAjCJe,yB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { Layout } from 'components';\r\nimport {\r\n  ClaimsFixedBottomBar,\r\n  ClaimsUnderwritingGroups,\r\n  ClaimsMovementType,\r\n  EnterClaimCardInformation,\r\n  ClaimsUploadViewSearchDocs,\r\n} from 'modules';\r\nimport styles from './EnterClaimInformation.styles';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Box } from '@material-ui/core';\r\n\r\nEnterClaimInformationView.propTypes = {\r\n  policyInformation: PropTypes.object.isRequired,\r\n  claimantNames: PropTypes.array.isRequired,\r\n  interest: PropTypes.object.isRequired,\r\n  underWritingGroups: PropTypes.object.isRequired,\r\n  complexityValues: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  isBordereauFlag: PropTypes.bool.isRequired,\r\n  isComplexFlag: PropTypes.bool.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  existingClaimInfo: PropTypes.object.isRequired,\r\n  claimData: PropTypes.object.isRequired,\r\n  hasClaimRef: PropTypes.bool.isRequired,\r\n  currencies: PropTypes.array.isRequired,\r\n  resetKey: PropTypes.number,\r\n  uwResetKey: PropTypes.number,\r\n  isBordereauChecked: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function EnterClaimInformationView(props) {\r\n  const {\r\n    catCodes,\r\n    lossInformation,\r\n    lossQualifiers,\r\n    policyInformation,\r\n    claimantNames,\r\n    interest,\r\n    underWritingGroups,\r\n    complexityValues,\r\n    referralValues,\r\n    fields,\r\n    isBordereauFlag,\r\n    isComplexFlag,\r\n    handleNext,\r\n    handleSave,\r\n    handleCancel,\r\n    handleBack,\r\n    validation,\r\n    setValidation,\r\n    existingClaimInfo,\r\n    hasClaimRef,\r\n    currencies,\r\n    resetKey,\r\n    uwResetKey,\r\n    isBordereauChecked,\r\n    claimData,\r\n  } = props;\r\n\r\n  const classes = makeStyles(styles, { name: 'EnterClaimInformation' })();\r\n  const [isSaving, setIsSaving] = useState(false);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const claimForm = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation } }),\r\n  });\r\n  const { handleSubmit, setValue } = claimForm;\r\n  const onHandleSave = () => {\r\n    setIsSaving(true);\r\n    setValidation(false);\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (validation) {\r\n      handleSubmit(handleNext)();\r\n    }\r\n    setValidation(false);\r\n  }, [validation]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isSaving) {\r\n      handleSubmit(handleSave)();\r\n      setIsSaving(false);\r\n    }\r\n    if (underWritingGroups.percentageOfSelected) {\r\n      setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n    } else {\r\n      setValue('order', '100');\r\n    }\r\n  }, [isSaving, underWritingGroups]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <div className={classes.wrapper}>\r\n        <Layout main padding>\r\n          <Box className={classes.claimsContainer}>\r\n            <Grid container spacing={2}>\r\n              <>\r\n                <Grid item xs={12}>\r\n                  <EnterClaimCardInformation\r\n                    resetKey={resetKey}\r\n                    policyInformation={policyInformation}\r\n                    claimantNames={claimantNames}\r\n                    interest={interest}\r\n                    fields={fields}\r\n                    claimForm={claimForm}\r\n                    complexityValues={complexityValues}\r\n                    referralValues={referralValues}\r\n                    isBordereauFlag={isBordereauFlag}\r\n                    isComplexFlag={isComplexFlag}\r\n                    existingClaimInfo={existingClaimInfo}\r\n                    currencies={currencies}\r\n                    isBordereauChecked={isBordereauChecked}\r\n                  />\r\n                </Grid>\r\n                <Grid item xs={12} md={9}>\r\n                  <ClaimsUnderwritingGroups fields={fields} claimForm={claimForm} uwResetKey={uwResetKey} hasClaimRef={hasClaimRef} />\r\n                </Grid>\r\n                <Grid item xs={12} md={3}>\r\n                  <ClaimsMovementType\r\n                    fields={fields}\r\n                    claimForm={claimForm}\r\n                    underWritingGroups={underWritingGroups}\r\n                    enforceValueSet={true}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            </Grid>\r\n          </Box>\r\n          <Box className={classes.claimsContainer}>\r\n            <Grid container spacing={2}>\r\n              <Grid item xs={12}>\r\n                {hasClaimRef && (\r\n                  <ClaimsUploadViewSearchDocs\r\n                    refData={claimData}\r\n                    refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n                    dmsContext={constants.DMS_CONTEXT_CLAIM}\r\n                    documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n                  />\r\n                )}\r\n              </Grid>\r\n            </Grid>\r\n          </Box>\r\n        </Layout>\r\n      </div>\r\n      <ClaimsFixedBottomBar\r\n        {...props}\r\n        onSave={onHandleSave}\r\n        handleNextSubmit={() => setValidation(true)}\r\n        handleBack={handleBack}\r\n        handleCancel={handleCancel}\r\n        save={true}\r\n        next={true}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}