{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Info\\\\Info.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport isNumber from 'lodash/isNumber';\nimport isString from 'lodash/isString'; // app\n\nimport { Avatar } from 'components';\nimport styles from './Info.styles'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar avatarSizeMap = {\n  xs: 24,\n  sm: 32,\n  md: 40,\n  lg: 48,\n  xl: 64\n};\nInfoView.propTypes = {\n  avatarText: PropTypes.string,\n  avatarImage: PropTypes.string,\n  avatarIcon: PropTypes.object,\n  avatarBg: PropTypes.string,\n  avatarBorder: PropTypes.bool,\n  avatarSize: PropTypes.number,\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\n  title: PropTypes.node,\n  content: PropTypes.node,\n  subtitle: PropTypes.node,\n  description: PropTypes.node,\n  ellipsis: PropTypes.bool,\n  verticalAlign: PropTypes.bool,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    avatar: PropTypes.string,\n    details: PropTypes.string,\n    content: PropTypes.string,\n    title: PropTypes.string,\n    description: PropTypes.string\n  }),\n  'data-testid': PropTypes.string,\n  link: PropTypes.string,\n  tooltip: PropTypes.string.isRequired,\n  subTitleTooltip: PropTypes.string,\n  descriptionTooltip: PropTypes.string\n};\nexport function InfoView(_ref) {\n  var _avatarClasses, _textClasses, _subtitleClasses;\n\n  var avatarText = _ref.avatarText,\n      avatarImage = _ref.avatarImage,\n      avatarIcon = _ref.avatarIcon,\n      avatarBg = _ref.avatarBg,\n      avatarBorder = _ref.avatarBorder,\n      avatarSize = _ref.avatarSize,\n      size = _ref.size,\n      title = _ref.title,\n      subtitle = _ref.subtitle,\n      content = _ref.content,\n      description = _ref.description,\n      ellipsis = _ref.ellipsis,\n      verticalAlign = _ref.verticalAlign,\n      nestedClasses = _ref.nestedClasses,\n      link = _ref.link,\n      handleLinkClick = _ref.handleLinkClick,\n      dataTestId = _ref.dataTestId,\n      tooltip = _ref.tooltip,\n      subTitleTooltip = _ref.subTitleTooltip,\n      descriptionTooltip = _ref.descriptionTooltip;\n  var classes = makeStyles(styles, {\n    name: 'Info'\n  })();\n\n  var verticalAlignClasses = _defineProperty({}, classes.singleLine, !description && !isNumber(description) && !content || verticalAlign);\n\n  var rootClasses = _defineProperty({}, classes.ellipsis, ellipsis);\n\n  var contentClasses = _defineProperty({}, classes.ellipsis, ellipsis);\n\n  var avatarClasses = (_avatarClasses = {}, _defineProperty(_avatarClasses, classes.avatarXs, size === 'xs'), _defineProperty(_avatarClasses, classes.avatarSm, size === 'sm'), _defineProperty(_avatarClasses, classes.avatarMd, size === 'md'), _defineProperty(_avatarClasses, classes.avatarLg, size === 'lg'), _defineProperty(_avatarClasses, classes.avatarXl, size === 'xl'), _avatarClasses);\n  var textClasses = (_textClasses = {}, _defineProperty(_textClasses, classes.textFontSizeXs, size === 'xs'), _defineProperty(_textClasses, classes.textFontSizeSm, size === 'sm'), _defineProperty(_textClasses, classes.textFontSizeMd, size === 'md'), _defineProperty(_textClasses, classes.textFontSizeLg, size === 'lg'), _defineProperty(_textClasses, classes.textFontSizeXl, size === 'xl'), _textClasses);\n  var subtitleClasses = (_subtitleClasses = {}, _defineProperty(_subtitleClasses, classes.subtitleFontSizeXs, size === 'xs'), _defineProperty(_subtitleClasses, classes.subtitleFontSizeSm, size === 'sm'), _defineProperty(_subtitleClasses, classes.subtitleFontSizeMd, size === 'md'), _defineProperty(_subtitleClasses, classes.subtitleFontSizeLg, size === 'lg'), _defineProperty(_subtitleClasses, classes.subtitleFontSizeXl, size === 'xl'), _subtitleClasses);\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(classes.root, rootClasses, nestedClasses.root),\n    \"data-testid\": \"info-\".concat(dataTestId),\n    children: [/*#__PURE__*/_jsxDEV(Avatar, {\n      onClick: handleLinkClick,\n      size: avatarSize || avatarSizeMap[size],\n      text: avatarText ? avatarText.substring(0, 2) : undefined,\n      icon: avatarIcon,\n      src: avatarImage,\n      bg: avatarBg,\n      border: typeof avatarBorder === 'boolean' ? avatarBorder : !!avatarIcon,\n      avatarClasses: classnames(classes.avatar, avatarClasses, nestedClasses.avatar, _defineProperty({}, classes.isLink, !!link)),\n      \"data-testid\": \"info-\".concat(dataTestId, \"-avatar\")\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 7\n    }, this), (title || subtitle || description || isNumber(description)) && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(classes.content, verticalAlignClasses, contentClasses, nestedClasses.details),\n      \"data-testid\": \"info-\".concat(dataTestId, \"-content\"),\n      children: [/*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        noWrap: ellipsis,\n        title: !tooltip ? isString(title) ? title : null : tooltip,\n        className: classnames(classes.title, textClasses, nestedClasses.title),\n        \"data-testid\": \"info-\".concat(dataTestId, \"-title\"),\n        children: [/*#__PURE__*/_jsxDEV(\"span\", {\n          className: classnames(_defineProperty({}, classes.isLink, !!link)),\n          onClick: handleLinkClick,\n          children: title\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 13\n        }, this), subtitle && /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          component: \"span\",\n          title: !subTitleTooltip ? isString(subtitle) ? subtitle : null : subTitleTooltip,\n          className: classnames(classes.subtitle, subtitleClasses),\n          \"data-testid\": \"info-\".concat(dataTestId, \"-subtitle\"),\n          children: subtitle\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 130,\n        columnNumber: 11\n      }, this), (description || isNumber(description)) && /*#__PURE__*/_jsxDEV(Typography, {\n        variant: \"body2\",\n        noWrap: ellipsis,\n        title: !descriptionTooltip ? isString(description) ? description : null : descriptionTooltip,\n        className: classnames(classes.description, textClasses, nestedClasses.description),\n        \"data-testid\": \"info-\".concat(dataTestId, \"-data\"),\n        children: description\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 154,\n        columnNumber: 13\n      }, this), content && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: nestedClasses.content,\n        children: content\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 165,\n        columnNumber: 23\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 126,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 112,\n    columnNumber: 5\n  }, this);\n}\n_c = InfoView;\n\nvar _c;\n\n$RefreshReg$(_c, \"InfoView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Info/Info.view.js"],"names":["React","PropTypes","classnames","isNumber","isString","Avatar","styles","makeStyles","Typography","avatarSizeMap","xs","sm","md","lg","xl","InfoView","propTypes","avatarText","string","avatarImage","avatarIcon","object","avatarBg","avatarBorder","bool","avatarSize","number","size","oneOf","title","node","content","subtitle","description","ellipsis","verticalAlign","nestedClasses","shape","root","avatar","details","link","tooltip","isRequired","subTitleTooltip","descriptionTooltip","handleLinkClick","dataTestId","classes","name","verticalAlignClasses","singleLine","rootClasses","contentClasses","avatarClasses","avatarXs","avatarSm","avatarMd","avatarLg","avatarXl","textClasses","textFontSizeXs","textFontSizeSm","textFontSizeMd","textFontSizeLg","textFontSizeXl","subtitleClasses","subtitleFontSizeXs","subtitleFontSizeSm","subtitleFontSizeMd","subtitleFontSizeLg","subtitleFontSizeXl","substring","undefined","isLink"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport isNumber from 'lodash/isNumber';\r\nimport isString from 'lodash/isString';\r\n\r\n// app\r\nimport { Avatar } from 'components';\r\nimport styles from './Info.styles';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nconst avatarSizeMap = {\r\n  xs: 24,\r\n  sm: 32,\r\n  md: 40,\r\n  lg: 48,\r\n  xl: 64,\r\n};\r\n\r\nInfoView.propTypes = {\r\n  avatarText: PropTypes.string,\r\n  avatarImage: PropTypes.string,\r\n  avatarIcon: PropTypes.object,\r\n  avatarBg: PropTypes.string,\r\n  avatarBorder: PropTypes.bool,\r\n  avatarSize: PropTypes.number,\r\n  size: PropTypes.oneOf(['xs', 'sm', 'md', 'lg', 'xl']),\r\n  title: PropTypes.node,\r\n  content: PropTypes.node,\r\n  subtitle: PropTypes.node,\r\n  description: PropTypes.node,\r\n  ellipsis: PropTypes.bool,\r\n  verticalAlign: PropTypes.bool,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    avatar: PropTypes.string,\r\n    details: PropTypes.string,\r\n    content: PropTypes.string,\r\n    title: PropTypes.string,\r\n    description: PropTypes.string,\r\n  }),\r\n  'data-testid': PropTypes.string,\r\n  link: PropTypes.string,\r\n  tooltip: PropTypes.string.isRequired,\r\n  subTitleTooltip: PropTypes.string,\r\n  descriptionTooltip: PropTypes.string,\r\n};\r\n\r\nexport function InfoView({\r\n  avatarText,\r\n  avatarImage,\r\n  avatarIcon,\r\n  avatarBg,\r\n  avatarBorder,\r\n  avatarSize,\r\n  size,\r\n  title,\r\n  subtitle,\r\n  content,\r\n  description,\r\n  ellipsis,\r\n  verticalAlign,\r\n  nestedClasses,\r\n  link,\r\n  handleLinkClick,\r\n  dataTestId,\r\n  tooltip,\r\n  subTitleTooltip,\r\n  descriptionTooltip,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Info' })();\r\n\r\n  const verticalAlignClasses = {\r\n    [classes.singleLine]: (!description && !isNumber(description) && !content) || verticalAlign,\r\n  };\r\n\r\n  const rootClasses = {\r\n    [classes.ellipsis]: ellipsis,\r\n  };\r\n\r\n  const contentClasses = {\r\n    [classes.ellipsis]: ellipsis,\r\n  };\r\n\r\n  const avatarClasses = {\r\n    [classes.avatarXs]: size === 'xs',\r\n    [classes.avatarSm]: size === 'sm',\r\n    [classes.avatarMd]: size === 'md',\r\n    [classes.avatarLg]: size === 'lg',\r\n    [classes.avatarXl]: size === 'xl',\r\n  };\r\n\r\n  const textClasses = {\r\n    [classes.textFontSizeXs]: size === 'xs',\r\n    [classes.textFontSizeSm]: size === 'sm',\r\n    [classes.textFontSizeMd]: size === 'md',\r\n    [classes.textFontSizeLg]: size === 'lg',\r\n    [classes.textFontSizeXl]: size === 'xl',\r\n  };\r\n\r\n  const subtitleClasses = {\r\n    [classes.subtitleFontSizeXs]: size === 'xs',\r\n    [classes.subtitleFontSizeSm]: size === 'sm',\r\n    [classes.subtitleFontSizeMd]: size === 'md',\r\n    [classes.subtitleFontSizeLg]: size === 'lg',\r\n    [classes.subtitleFontSizeXl]: size === 'xl',\r\n  };\r\n\r\n  return (\r\n    <div className={classnames(classes.root, rootClasses, nestedClasses.root)} data-testid={`info-${dataTestId}`}>\r\n      <Avatar\r\n        onClick={handleLinkClick}\r\n        size={avatarSize || avatarSizeMap[size]}\r\n        text={avatarText ? avatarText.substring(0, 2) : undefined}\r\n        icon={avatarIcon}\r\n        src={avatarImage}\r\n        bg={avatarBg}\r\n        border={typeof avatarBorder === 'boolean' ? avatarBorder : !!avatarIcon}\r\n        avatarClasses={classnames(classes.avatar, avatarClasses, nestedClasses.avatar, { [classes.isLink]: !!link })}\r\n        data-testid={`info-${dataTestId}-avatar`}\r\n      />\r\n\r\n      {(title || subtitle || description || isNumber(description)) && (\r\n        <div\r\n          className={classnames(classes.content, verticalAlignClasses, contentClasses, nestedClasses.details)}\r\n          data-testid={`info-${dataTestId}-content`}\r\n        >\r\n          <Typography\r\n            variant=\"body2\"\r\n            noWrap={ellipsis}\r\n            title={!tooltip ? (isString(title) ? title : null) : tooltip}\r\n            className={classnames(classes.title, textClasses, nestedClasses.title)}\r\n            data-testid={`info-${dataTestId}-title`}\r\n          >\r\n            <span className={classnames({ [classes.isLink]: !!link })} onClick={handleLinkClick}>\r\n              {title}\r\n            </span>\r\n            {subtitle && (\r\n              <Typography\r\n                variant=\"body2\"\r\n                component=\"span\"\r\n                title={!subTitleTooltip ? (isString(subtitle) ? subtitle : null) : subTitleTooltip}\r\n                className={classnames(classes.subtitle, subtitleClasses)}\r\n                data-testid={`info-${dataTestId}-subtitle`}\r\n              >\r\n                {subtitle}\r\n              </Typography>\r\n            )}\r\n          </Typography>\r\n\r\n          {(description || isNumber(description)) && (\r\n            <Typography\r\n              variant=\"body2\"\r\n              noWrap={ellipsis}\r\n              title={!descriptionTooltip ? (isString(description) ? description : null) : descriptionTooltip}\r\n              className={classnames(classes.description, textClasses, nestedClasses.description)}\r\n              data-testid={`info-${dataTestId}-data`}\r\n            >\r\n              {description}\r\n            </Typography>\r\n          )}\r\n\r\n          {content && <div className={nestedClasses.content}>{content}</div>}\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}