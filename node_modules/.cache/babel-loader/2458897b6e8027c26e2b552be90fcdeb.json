{"ast":null,"code":"export var updateCasesSelected = function updateCasesSelected(caseData) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_UPDATE',\n    payload: caseData\n  };\n};\nexport var updateMultiSelectedRows = function updateMultiSelectedRows(caseData) {\n  return {\n    type: 'PREMIUM_PROCESSING_MULTI_SELECTED_CASES',\n    payload: caseData\n  };\n};\nexport var casesSelectDeselection = function casesSelectDeselection(caseDetails) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_DESELECT',\n    payload: caseDetails\n  };\n};\nexport var resetCasesSelected = function resetCasesSelected() {\n  return {\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_RESET'\n  };\n};\nexport var resetPremiumProcessingTaskSearch = function resetPremiumProcessingTaskSearch() {\n  return {\n    type: 'PREMIUM_PROCESSING_TASK_SEARCH_RESET'\n  };\n};\nexport var resetPremiumProcessingTasksFilters = function resetPremiumProcessingTasksFilters() {\n  return {\n    type: 'PREMIUM_PROCESSING_TASK_FILTERS_RESET'\n  };\n};\nexport var resetPremiumProcessingTaskDetails = function resetPremiumProcessingTaskDetails(type) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_FAILURE',\n    payload: {\n      type: type\n    }\n  };\n};\nexport var resetPremiumProcessingTaskItems = function resetPremiumProcessingTaskItems(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASKS_RESET',\n    payload: data\n  };\n};\nexport var setResponseDate = function setResponseDate(data) {\n  return {\n    type: 'RFI_RESPONSE_DATE_SUCCESS',\n    payload: data\n  };\n};\nexport var chooseUnchooseCase = function chooseUnchooseCase(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASES_CHOOSE_TOGGLE',\n    payload: payload\n  };\n};\nexport var setMultiSelectRows = function setMultiSelectRows(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASES_MULTI_SELECT_TOGGLE',\n    payload: payload\n  };\n};\nexport var setMultiSelectFlag = function setMultiSelectFlag(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_SET_MULTI_SELECT_FLAG',\n    payload: payload\n  };\n};\nexport var changeCaseType = function changeCaseType(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_TYPE_CHANGE',\n    payload: payload\n  };\n};\nexport var selectSingleCaseRow = function selectSingleCaseRow(caseData) {\n  return {\n    type: 'PREMIUM_PROCESSING_SINGLE_CASES_SELECTED',\n    payload: caseData\n  };\n};\nexport var setIsCaseTableHidden = function setIsCaseTableHidden(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_SET_IS_TABLEHIDDEN',\n    payload: data\n  };\n};\nexport var selectedPremiumProcessingTaskType = function selectedPremiumProcessingTaskType(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_TASK_TYPE_SELECTED',\n    payload: data\n  };\n};\nexport var udpateIsCheckSigningToggle = function udpateIsCheckSigningToggle(type) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECKSIGNING_TOGGLE',\n    payload: type\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.js"],"names":["updateCasesSelected","caseData","type","payload","updateMultiSelectedRows","casesSelectDeselection","caseDetails","resetCasesSelected","resetPremiumProcessingTaskSearch","resetPremiumProcessingTasksFilters","resetPremiumProcessingTaskDetails","resetPremiumProcessingTaskItems","data","setResponseDate","chooseUnchooseCase","setMultiSelectRows","setMultiSelectFlag","changeCaseType","selectSingleCaseRow","setIsCaseTableHidden","selectedPremiumProcessingTaskType","udpateIsCheckSigningToggle"],"mappings":"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","sourcesContent":["export const updateCasesSelected = (caseData) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_UPDATE',\r\n    payload: caseData,\r\n  };\r\n};\r\nexport const updateMultiSelectedRows = (caseData) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_MULTI_SELECTED_CASES',\r\n    payload: caseData,\r\n  };\r\n};\r\nexport const casesSelectDeselection = (caseDetails) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_DESELECT',\r\n    payload: caseDetails,\r\n  };\r\n};\r\nexport const resetCasesSelected = () => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASES_SELECTED_RESET',\r\n  };\r\n};\r\n\r\nexport const resetPremiumProcessingTaskSearch = () => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASK_SEARCH_RESET',\r\n  };\r\n};\r\n\r\nexport const resetPremiumProcessingTasksFilters = () => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASK_FILTERS_RESET',\r\n  };\r\n};\r\n\r\nexport const resetPremiumProcessingTaskDetails = (type) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_FAILURE',\r\n    payload: { type },\r\n  };\r\n};\r\n\r\nexport const resetPremiumProcessingTaskItems = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASKS_RESET',\r\n    payload: data,\r\n  };\r\n};\r\nexport const setResponseDate = (data) => {\r\n  return {\r\n    type: 'RFI_RESPONSE_DATE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const chooseUnchooseCase = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASES_CHOOSE_TOGGLE',\r\n    payload,\r\n  };\r\n};\r\nexport const setMultiSelectRows = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASES_MULTI_SELECT_TOGGLE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const setMultiSelectFlag = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_SET_MULTI_SELECT_FLAG',\r\n    payload,\r\n  };\r\n};\r\nexport const changeCaseType = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_TYPE_CHANGE',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const selectSingleCaseRow = (caseData) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_SINGLE_CASES_SELECTED',\r\n    payload: caseData,\r\n  };\r\n};\r\n\r\nexport const setIsCaseTableHidden = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_SET_IS_TABLEHIDDEN',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const selectedPremiumProcessingTaskType = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_TASK_TYPE_SELECTED',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const udpateIsCheckSigningToggle = (type) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECKSIGNING_TOGGLE',\r\n    payload: type,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}