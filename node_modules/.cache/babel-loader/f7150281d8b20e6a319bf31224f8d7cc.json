{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\DownloadFiles\\\\DownloadFiles.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport compact from 'lodash/compact';\nimport omit from 'lodash/omit'; // app\n\nimport { DownloadFilesView } from './DownloadFiles.view';\nimport { hideModal, downloadWhitespacePdf, downloadWhitespaceZip } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDownloadFiles.propTypes = {\n  umrIds: PropTypes.array.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nDownloadFiles.defaultProps = {\n  umrIds: []\n};\nexport default function DownloadFiles(_ref) {\n  _s();\n\n  var umrIds = _ref.umrIds,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch(); // abort\n\n  if (!utils.generic.isValidArray(umrIds, true)) return null;\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(_ref2) {\n      var downloadAll, downloadUmr, blob, _blob, _blob2;\n\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              downloadAll = _ref2.downloadAll, downloadUmr = _ref2.downloadUmr;\n\n              if (!downloadAll) {\n                _context.next = 9;\n                break;\n              }\n\n              _context.next = 4;\n              return dispatch(downloadWhitespaceZip(umrIds));\n\n            case 4:\n              blob = _context.sent;\n              dispatch(hideModal());\n              utils.file.download(blob, \"\".concat(utils.string.t('app.contract_plural'), \"-\").concat(umrIds.join('-'), \".zip\"));\n              _context.next = 23;\n              break;\n\n            case 9:\n              if (!(downloadUmr.length >= 2)) {\n                _context.next = 17;\n                break;\n              }\n\n              _context.next = 12;\n              return dispatch(downloadWhitespaceZip(downloadUmr));\n\n            case 12:\n              _blob = _context.sent;\n              dispatch(hideModal());\n              utils.file.download(_blob, \"\".concat(utils.string.t('app.contract_plural'), \"-\").concat(downloadUmr.join('-'), \".zip\"));\n              _context.next = 23;\n              break;\n\n            case 17:\n              if (!(downloadUmr.length === 1)) {\n                _context.next = 23;\n                break;\n              }\n\n              _context.next = 20;\n              return dispatch(downloadWhitespacePdf(downloadUmr[0]));\n\n            case 20:\n              _blob2 = _context.sent;\n              dispatch(hideModal());\n              utils.file.download(_blob2, \"\".concat(utils.string.t('app.contract'), \"-\").concat(downloadUmr[0], \".pdf\"));\n\n            case 23:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit(_x) {\n      return _ref3.apply(this, arguments);\n    };\n  }();\n\n  var fields = [{\n    name: 'downloadAll',\n    type: 'checkbox',\n    value: false,\n    title: utils.string.t('openingMemo.whitespace.downloadAllUmrs'),\n    label: utils.string.t('app.all'),\n    hint: umrIds.join(', ')\n  }, {\n    name: 'downloadUmr',\n    type: 'checkbox',\n    title: utils.string.t('openingMemo.whitespace.downloadSelectUmrs'),\n    value: [],\n    options: umrIds.map(function (umr) {\n      return {\n        label: umr,\n        name: umr,\n        value: false\n      };\n    })\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleClose\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.download'),\n    handler: function handler(values) {\n      return handleSubmit(values);\n    }\n  }];\n\n  var isValid = function isValid(values) {\n    var umrsFiltered = omit(values, values.downloadAll);\n    var isUmrOptionsValid = utils.generic.isValidArray(umrsFiltered, true) && umrsFiltered.length > 0;\n    return Boolean(values.downloadAll || isUmrOptionsValid);\n  };\n\n  var isDownloadAllSelected = function isDownloadAllSelected(_ref4) {\n    var downloadAll = _ref4.downloadAll;\n    return Boolean(downloadAll);\n  };\n\n  var isDownloadUmrSelected = function isDownloadUmrSelected(values) {\n    var downloadUmr = omit(values, values.downloadAll);\n    return Boolean(utils.generic.isValidArray(compact(downloadUmr), true));\n  };\n\n  return /*#__PURE__*/_jsxDEV(DownloadFilesView, {\n    fields: fields,\n    actions: actions,\n    isValid: isValid,\n    isDownloadAllSelected: isDownloadAllSelected,\n    isDownloadUmrSelected: isDownloadUmrSelected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 95,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DownloadFiles, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DownloadFiles;\n\nvar _c;\n\n$RefreshReg$(_c, \"DownloadFiles\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/DownloadFiles/DownloadFiles.js"],"names":["React","PropTypes","useDispatch","compact","omit","DownloadFilesView","hideModal","downloadWhitespacePdf","downloadWhitespaceZip","utils","DownloadFiles","propTypes","umrIds","array","isRequired","handleClose","func","defaultProps","dispatch","generic","isValidArray","handleSubmit","downloadAll","downloadUmr","blob","file","download","string","t","join","length","fields","name","type","value","title","label","hint","options","map","umr","actions","handler","values","isValid","umrsFiltered","isUmrOptionsValid","Boolean","isDownloadAllSelected","isDownloadUmrSelected"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport compact from 'lodash/compact';\r\nimport omit from 'lodash/omit';\r\n\r\n// app\r\nimport { DownloadFilesView } from './DownloadFiles.view';\r\nimport { hideModal, downloadWhitespacePdf, downloadWhitespaceZip } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nDownloadFiles.propTypes = {\r\n  umrIds: PropTypes.array.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nDownloadFiles.defaultProps = {\r\n  umrIds: [],\r\n};\r\n\r\nexport default function DownloadFiles({ umrIds, handleClose }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // abort\r\n  if (!utils.generic.isValidArray(umrIds, true)) return null;\r\n\r\n  const handleSubmit = async ({ downloadAll, downloadUmr }) => {\r\n    if (downloadAll) {\r\n      const blob = await dispatch(downloadWhitespaceZip(umrIds));\r\n      dispatch(hideModal());\r\n      utils.file.download(blob, `${utils.string.t('app.contract_plural')}-${umrIds.join('-')}.zip`);\r\n    } else if (downloadUmr.length >= 2) {\r\n      const blob = await dispatch(downloadWhitespaceZip(downloadUmr));\r\n      dispatch(hideModal());\r\n      utils.file.download(blob, `${utils.string.t('app.contract_plural')}-${downloadUmr.join('-')}.zip`);\r\n    } else if (downloadUmr.length === 1) {\r\n      const blob = await dispatch(downloadWhitespacePdf(downloadUmr[0]));\r\n      dispatch(hideModal());\r\n      utils.file.download(blob, `${utils.string.t('app.contract')}-${downloadUmr[0]}.pdf`);\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'downloadAll',\r\n      type: 'checkbox',\r\n      value: false,\r\n      title: utils.string.t('openingMemo.whitespace.downloadAllUmrs'),\r\n      label: utils.string.t('app.all'),\r\n      hint: umrIds.join(', '),\r\n    },\r\n    {\r\n      name: 'downloadUmr',\r\n      type: 'checkbox',\r\n      title: utils.string.t('openingMemo.whitespace.downloadSelectUmrs'),\r\n      value: [],\r\n      options: umrIds.map((umr) => ({\r\n        label: umr,\r\n        name: umr,\r\n        value: false,\r\n      })),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleClose,\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.download'),\r\n      handler: (values) => handleSubmit(values),\r\n    },\r\n  ];\r\n\r\n  const isValid = (values) => {\r\n    const umrsFiltered = omit(values, values.downloadAll);\r\n    const isUmrOptionsValid = utils.generic.isValidArray(umrsFiltered, true) && umrsFiltered.length > 0;\r\n\r\n    return Boolean(values.downloadAll || isUmrOptionsValid);\r\n  };\r\n\r\n  const isDownloadAllSelected = ({ downloadAll }) => {\r\n    return Boolean(downloadAll);\r\n  };\r\n\r\n  const isDownloadUmrSelected = (values) => {\r\n    const downloadUmr = omit(values, values.downloadAll);\r\n    return Boolean(utils.generic.isValidArray(compact(downloadUmr), true));\r\n  };\r\n\r\n  return (\r\n    <DownloadFilesView\r\n      fields={fields}\r\n      actions={actions}\r\n      isValid={isValid}\r\n      isDownloadAllSelected={isDownloadAllSelected}\r\n      isDownloadUmrSelected={isDownloadUmrSelected}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}