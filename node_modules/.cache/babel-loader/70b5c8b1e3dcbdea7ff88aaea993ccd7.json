{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\RfiDashboard\\\\RfiDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport { useHistory, useParams } from 'react-router'; // app\n\nimport { RfiDashboardView } from './RfiDashboard.view';\nimport { selectRfiHistoryList, selectRfiHistoryDocumentList, selectClaimsTasksProcessingListSelected } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport default function RfiDashboard() {\n  _s();\n\n  var history = useHistory();\n  var params = useParams();\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  }); // Redux management\n\n  var tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\n  var rfiHistory = useSelector(selectRfiHistoryList);\n  var rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList); // State management\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'rfiDetails'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(tasksProcessingSelected[0]),\n      _useState4 = _slicedToArray(_useState3, 1),\n      selectedTask = _useState4[0];\n\n  var rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.refType);\n  useEffect(function () {\n    var _tasksProcessingSelec;\n\n    if ((tasksProcessingSelected === null || tasksProcessingSelected === void 0 ? void 0 : tasksProcessingSelected.length) !== 1 || !(tasksProcessingSelected === null || tasksProcessingSelected === void 0 ? void 0 : (_tasksProcessingSelec = tasksProcessingSelected[0]) === null || _tasksProcessingSelec === void 0 ? void 0 : _tasksProcessingSelec.taskRef)) {\n      history.replace(config.routes.claimsFNOL.root);\n    }\n  }, [history, tasksProcessingSelected]);\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n  };\n\n  var tabs = [{\n    value: 'rfiDetails',\n    label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail')\n  }, {\n    value: 'documents',\n    label: utils.string.t('claims.rfiDashboard.tabs.documents')\n  }];\n  var breadcrumbs = [{\n    name: 'claimsProcessing',\n    label: utils.string.t('claims.loss.title'),\n    link: config.routes.claimsFNOL.root\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', {\n      lossRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.lossRef)\n  }].concat(_toConsumableArray(rfiOriginType === 'claim' || rfiOriginType === 'task' ? [{\n    name: 'claim',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\n      claimRef: (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.claimRef) || (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.processRef)\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.claim, \"/\").concat((selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.claimRef) || (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.processRef))\n  }] : []), _toConsumableArray(rfiOriginType === 'task' ? [{\n    name: 'task',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', {\n      taskRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.task, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.parentTaskRef)\n  }] : []), [{\n    name: 'rfiTask',\n    label: \"\".concat(utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', {\n      taskRef: selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.rfi, \"/\").concat(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskRef),\n    active: true,\n    largeFont: true\n  }]); // abort\n\n  if (!selectedTask) return '';\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('claims.processing.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 89,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RfiDashboardView, {\n      rfiTask: selectedTask,\n      rfiOriginType: rfiOriginType,\n      tabs: tabs,\n      rfiHistory: utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory,\n      selectedTab: selectedTab,\n      breadcrumbs: breadcrumbs,\n      handleSelectTab: handleSelectTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RfiDashboard, \"XJgkVOLgwu2tWqmIC4g4GMkUVLI=\", false, function () {\n  return [useHistory, useParams, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RfiDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/RfiDashboard/RfiDashboard.js"],"names":["React","useState","useEffect","useSelector","Helmet","useHistory","useParams","RfiDashboardView","selectRfiHistoryList","selectRfiHistoryDocumentList","selectClaimsTasksProcessingListSelected","utils","config","RfiDashboard","history","params","brand","state","ui","tasksProcessingSelected","rfiHistory","rfiHistoryDocList","tab","selectedTab","setSelectedTab","selectedTask","rfiOriginType","claimsRfi","checkRfiOriginType","refType","length","taskRef","replace","routes","claimsFNOL","root","handleSelectTab","tabName","tabs","value","label","string","t","breadcrumbs","name","link","lossRef","loss","claimRef","processRef","claim","parentTaskRef","task","rfi","active","largeFont","app","getAppName","generic","isValidArray"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,QAAsC,cAAtC,C,CAEA;;AACA,SAASC,gBAAT,QAAiC,qBAAjC;AACA,SAASC,oBAAT,EAA+BC,4BAA/B,EAA6DC,uCAA7D,QAA4G,QAA5G;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;;;AAEA,eAAe,SAASC,YAAT,GAAwB;AAAA;;AACrC,MAAMC,OAAO,GAAGT,UAAU,EAA1B;AACA,MAAMU,MAAM,GAAGT,SAAS,EAAxB;AACA,MAAMU,KAAK,GAAGb,WAAW,CAAC,UAACc,KAAD;AAAA,WAAWA,KAAK,CAACC,EAAN,CAASF,KAApB;AAAA,GAAD,CAAzB,CAHqC,CAKrC;;AACA,MAAMG,uBAAuB,GAAGhB,WAAW,CAACO,uCAAD,CAA3C;AACA,MAAMU,UAAU,GAAGjB,WAAW,CAACK,oBAAD,CAA9B;AACA,MAAMa,iBAAiB,GAAGlB,WAAW,CAACM,4BAAD,CAArC,CARqC,CAUrC;;AAVqC,kBAWCR,QAAQ,CAAC,CAAAc,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAEO,GAAR,KAAe,YAAhB,CAXT;AAAA;AAAA,MAW9BC,WAX8B;AAAA,MAWjBC,cAXiB;;AAAA,mBAYdvB,QAAQ,CAACkB,uBAAuB,CAAC,CAAD,CAAxB,CAZM;AAAA;AAAA,MAY9BM,YAZ8B;;AAcrC,MAAMC,aAAa,GAAGf,KAAK,CAACgB,SAAN,CAAgBC,kBAAhB,CAAmCH,YAAnC,aAAmCA,YAAnC,uBAAmCA,YAAY,CAAEI,OAAjD,CAAtB;AAEA3B,EAAAA,SAAS,CAAC,YAAM;AAAA;;AACd,QAAI,CAAAiB,uBAAuB,SAAvB,IAAAA,uBAAuB,WAAvB,YAAAA,uBAAuB,CAAEW,MAAzB,MAAoC,CAApC,IAAyC,EAACX,uBAAD,aAACA,uBAAD,gDAACA,uBAAuB,CAAG,CAAH,CAAxB,0DAAC,sBAA8BY,OAA/B,CAA7C,EAAqF;AACnFjB,MAAAA,OAAO,CAACkB,OAAR,CAAgBpB,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBC,IAAzC;AACD;AACF,GAJQ,EAIN,CAACrB,OAAD,EAAUK,uBAAV,CAJM,CAAT;;AAMA,MAAMiB,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;AACnCb,IAAAA,cAAc,CAACa,OAAD,CAAd;AACD,GAFD;;AAIA,MAAMC,IAAI,GAAG,CACX;AAAEC,IAAAA,KAAK,EAAE,YAAT;AAAuBC,IAAAA,KAAK,EAAE7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,oCAAf;AAA9B,GADW,EAEX;AAAEH,IAAAA,KAAK,EAAE,WAAT;AAAsBC,IAAAA,KAAK,EAAE7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,oCAAf;AAA7B,GAFW,CAAb;AAKA,MAAMC,WAAW,IACf;AACEC,IAAAA,IAAI,EAAE,kBADR;AAEEJ,IAAAA,KAAK,EAAE7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,mBAAf,CAFT;AAGEG,IAAAA,IAAI,EAAEjC,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBC;AAHjC,GADe,EAMf;AACES,IAAAA,IAAI,EAAE,MADR;AAEEJ,IAAAA,KAAK,YAAK7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,yCAAf,EAA0D;AAAEI,MAAAA,OAAO,EAAErB,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEqB;AAAzB,KAA1D,CAAL,CAFP;AAGED,IAAAA,IAAI,YAAKjC,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBa,IAA9B,cAAsCtB,YAAtC,aAAsCA,YAAtC,uBAAsCA,YAAY,CAAEqB,OAApD;AAHN,GANe,4BAWXpB,aAAa,KAAK,OAAlB,IAA6BA,aAAa,KAAK,MAA/C,GACA,CACE;AACEkB,IAAAA,IAAI,EAAE,OADR;AAEEJ,IAAAA,KAAK,YAAK7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,0CAAf,EAA2D;AACnEM,MAAAA,QAAQ,EAAE,CAAAvB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEuB,QAAd,MAA0BvB,YAA1B,aAA0BA,YAA1B,uBAA0BA,YAAY,CAAEwB,UAAxC;AADyD,KAA3D,CAAL,CAFP;AAKEJ,IAAAA,IAAI,YAAKjC,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBgB,KAA9B,cAAuC,CAAAzB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEuB,QAAd,MAA0BvB,YAA1B,aAA0BA,YAA1B,uBAA0BA,YAAY,CAAEwB,UAAxC,CAAvC;AALN,GADF,CADA,GAUA,EArBW,sBAsBXvB,aAAa,KAAK,MAAlB,GACA,CACE;AACEkB,IAAAA,IAAI,EAAE,MADR;AAEEJ,IAAAA,KAAK,YAAK7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,yCAAf,EAA0D;AAAEX,MAAAA,OAAO,EAAEN,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAE0B;AAAzB,KAA1D,CAAL,CAFP;AAGEN,IAAAA,IAAI,YAAKjC,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBkB,IAA9B,cAAsC3B,YAAtC,aAAsCA,YAAtC,uBAAsCA,YAAY,CAAE0B,aAApD;AAHN,GADF,CADA,GAQA,EA9BW,IA+Bf;AACEP,IAAAA,IAAI,EAAE,SADR;AAEEJ,IAAAA,KAAK,YAAK7B,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,wCAAf,EAAyD;AAAEX,MAAAA,OAAO,EAAEN,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEM;AAAzB,KAAzD,CAAL,CAFP;AAGEc,IAAAA,IAAI,YAAKjC,MAAM,CAACqB,MAAP,CAAcC,UAAd,CAAyBmB,GAA9B,cAAqC5B,YAArC,aAAqCA,YAArC,uBAAqCA,YAAY,CAAEM,OAAnD,CAHN;AAIEuB,IAAAA,MAAM,EAAE,IAJV;AAKEC,IAAAA,SAAS,EAAE;AALb,GA/Be,EAAjB,CA/BqC,CAuErC;;AACA,MAAI,CAAC9B,YAAL,EAAmB,OAAO,EAAP;AAEnB,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,4BAAWd,KAAK,CAAC8B,MAAN,CAAaC,CAAb,CAAe,yBAAf,CAAX,gBAA0D/B,KAAK,CAAC6C,GAAN,CAAUC,UAAV,CAAqBzC,KAArB,CAA1D;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,gBAAD;AACE,MAAA,OAAO,EAAES,YADX;AAEE,MAAA,aAAa,EAAEC,aAFjB;AAGE,MAAA,IAAI,EAAEY,IAHR;AAIE,MAAA,UAAU,EAAE3B,KAAK,CAAC+C,OAAN,CAAcC,YAAd,CAA2BtC,iBAA3B,EAA8C,IAA9C,IAAsDA,iBAAtD,GAA0ED,UAJxF;AAKE,MAAA,WAAW,EAAEG,WALf;AAME,MAAA,WAAW,EAAEoB,WANf;AAOE,MAAA,eAAe,EAAEP;AAPnB;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAgBD;;GA1FuBvB,Y;UACNR,U,EACDC,S,EACDH,W,EAGkBA,W,EACbA,W,EACOA,W;;;KARJU,Y","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport { useHistory, useParams } from 'react-router';\r\n\r\n// app\r\nimport { RfiDashboardView } from './RfiDashboard.view';\r\nimport { selectRfiHistoryList, selectRfiHistoryDocumentList, selectClaimsTasksProcessingListSelected } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function RfiDashboard() {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const brand = useSelector((state) => state.ui.brand);\r\n\r\n  // Redux management\r\n  const tasksProcessingSelected = useSelector(selectClaimsTasksProcessingListSelected);\r\n  const rfiHistory = useSelector(selectRfiHistoryList);\r\n  const rfiHistoryDocList = useSelector(selectRfiHistoryDocumentList);\r\n\r\n  // State management\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'rfiDetails');\r\n  const [selectedTask] = useState(tasksProcessingSelected[0]);\r\n\r\n  const rfiOriginType = utils.claimsRfi.checkRfiOriginType(selectedTask?.refType);\r\n\r\n  useEffect(() => {\r\n    if (tasksProcessingSelected?.length !== 1 || !tasksProcessingSelected?.[0]?.taskRef) {\r\n      history.replace(config.routes.claimsFNOL.root);\r\n    }\r\n  }, [history, tasksProcessingSelected]);\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  const tabs = [\r\n    { value: 'rfiDetails', label: utils.string.t('claims.rfiDashboard.tabs.rfiDetail') },\r\n    { value: 'documents', label: utils.string.t('claims.rfiDashboard.tabs.documents') },\r\n  ];\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsProcessing',\r\n      label: utils.string.t('claims.loss.title'),\r\n      link: config.routes.claimsFNOL.root,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.lossRef', { lossRef: selectedTask?.lossRef })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${selectedTask?.lossRef}`,\r\n    },\r\n    ...(rfiOriginType === 'claim' || rfiOriginType === 'task'\r\n      ? [\r\n          {\r\n            name: 'claim',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.claimRef', {\r\n              claimRef: selectedTask?.claimRef || selectedTask?.processRef,\r\n            })}`,\r\n            link: `${config.routes.claimsFNOL.claim}/${selectedTask?.claimRef || selectedTask?.processRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(rfiOriginType === 'task'\r\n      ? [\r\n          {\r\n            name: 'task',\r\n            label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.taskRef', { taskRef: selectedTask?.parentTaskRef })}`,\r\n            link: `${config.routes.claimsFNOL.task}/${selectedTask?.parentTaskRef}`,\r\n          },\r\n        ]\r\n      : []),\r\n    {\r\n      name: 'rfiTask',\r\n      label: `${utils.string.t('claims.rfiDashboard.breadCrumbs.rfiRef', { taskRef: selectedTask?.taskRef })}`,\r\n      link: `${config.routes.claimsFNOL.rfi}/${selectedTask?.taskRef}`,\r\n      active: true,\r\n      largeFont: true,\r\n    },\r\n  ];\r\n\r\n  // abort\r\n  if (!selectedTask) return '';\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('claims.processing.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <RfiDashboardView\r\n        rfiTask={selectedTask}\r\n        rfiOriginType={rfiOriginType}\r\n        tabs={tabs}\r\n        rfiHistory={utils.generic.isValidArray(rfiHistoryDocList, true) ? rfiHistoryDocList : rfiHistory}\r\n        selectedTab={selectedTab}\r\n        breadcrumbs={breadcrumbs}\r\n        handleSelectTab={handleSelectTab}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}