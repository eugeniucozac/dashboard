{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport { DrawerComponent, DmsFnolWidget } from 'components';\nimport { selectorDmsViewFiles, selectDmsDocDetails, getDmsDocumentList } from 'stores';\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLoss.propTypes = {\n  steps: PropTypes.array.isRequired,\n  stepsForms: PropTypes.array.isRequired,\n  findDirtyForm: PropTypes.func,\n  initialFormStatus: PropTypes.array,\n  currentStep: PropTypes.number\n};\nClaimsRegisterNewLoss.defaultProps = {\n  currentStep: 0,\n  findDirtyForm: function findDirtyForm() {},\n  initialFormStatus: []\n};\nexport default function ClaimsRegisterNewLoss(_ref) {\n  _s();\n\n  var currentStep = _ref.currentStep,\n      steps = _ref.steps,\n      stepsForms = _ref.stepsForms,\n      findDirtyForm = _ref.findDirtyForm,\n      initialFormStatus = _ref.initialFormStatus;\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      stepFields = _useState2[0],\n      setStepFields = _useState2[1];\n\n  var _useState3 = useState(0),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var _useState5 = useState(0),\n      _useState6 = _slicedToArray(_useState5, 2),\n      progress = _useState6[0],\n      setProgress = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isFormsEdited = _useState8[0],\n      setFormEditedStatus = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      saveStatus = _useState10[0],\n      setSaveStatus = _useState10[1];\n\n  var dispatch = useDispatch();\n  var viewDocumentList = useSelector(selectorDmsViewFiles);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n\n  var handleStep = function handleStep(step) {\n    if (activeStep < step) {\n      var _isFormsEdited$active, _isFormsEdited$active2, _isFormsEdited, _isFormsEdited2;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active = isFormsEdited[activeStep]) === null || _isFormsEdited$active === void 0 ? void 0 : _isFormsEdited$active['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active2 = isFormsEdited[activeStep]) === null || _isFormsEdited$active2 === void 0 ? void 0 : _isFormsEdited$active2['isSubmitted']) && !(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited = isFormsEdited[step - 1]) === null || _isFormsEdited === void 0 ? void 0 : _isFormsEdited['formEditedStatus']) && (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited2 = isFormsEdited[step - 1]) === null || _isFormsEdited2 === void 0 ? void 0 : _isFormsEdited2['isSubmitted'])) {\n        setActiveStep(step);\n      }\n    } else if (activeStep > step) {\n      var _isFormsEdited$active3;\n\n      if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active3 = isFormsEdited[activeStep]) === null || _isFormsEdited$active3 === void 0 ? void 0 : _isFormsEdited$active3['formEditedStatus'])) {\n        setActiveStep(step);\n      }\n    }\n  };\n\n  var handleNext = function handleNext() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState === null || formState === void 0 ? void 0 : formState.forEach(function (form) {\n      var _formState$activeStep;\n\n      if ((form === null || form === void 0 ? void 0 : form.id) > activeStep && (formState === null || formState === void 0 ? void 0 : (_formState$activeStep = formState[activeStep]) === null || _formState$activeStep === void 0 ? void 0 : _formState$activeStep['formEditedStatus'])) {\n        form['isSubmitted'] = false;\n      }\n    });\n    formState[activeStep]['isSubmitted'] = true;\n\n    if (activeStep === 0) {\n      var docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.lossDocDetails);\n      dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\n    }\n\n    if (activeStep === 1) {\n      var _docList = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.linkPolicyDocDetails);\n\n      dispatch(getDmsDocumentList('LINK_POLICY', _docList));\n    }\n\n    if (activeStep === 2) {\n      var _docList2 = viewDocumentList.length > 0 ? _toConsumableArray(viewDocumentList) : _toConsumableArray(savedDmsDocList === null || savedDmsDocList === void 0 ? void 0 : savedDmsDocList.claimsDocDetails);\n\n      dispatch(getDmsDocumentList('CLAIM_INFORMATION', _docList2));\n    }\n\n    if (activeStep !== 1) {\n      formState[activeStep]['formEditedStatus'] = false;\n      setFormEditedStatus(formState);\n      setActiveStep(activeStep + 1);\n    } else {\n      formState[activeStep]['formEditedStatus'] = true;\n      setFormEditedStatus(formState);\n      setSaveStatus(new Date().getTime());\n    }\n  };\n\n  var handleBack = function handleBack() {\n    var _isFormsEdited$active4;\n\n    if (!(isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$active4 = isFormsEdited[activeStep]) === null || _isFormsEdited$active4 === void 0 ? void 0 : _isFormsEdited$active4['formEditedStatus'])) {\n      setActiveStep(activeStep - 1);\n    }\n  };\n\n  var handleSave = function handleSave() {\n    setSaveStatus(new Date().getTime());\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep]['formEditedStatus'] = false;\n    formState[activeStep]['isSubmitted'] = true;\n    formState === null || formState === void 0 ? void 0 : formState.map(function (frm) {\n      return (frm === null || frm === void 0 ? void 0 : frm.id) > activeStep ? frm['isSubmitted'] = false : frm['isSubmitted'] = true;\n    });\n    setFormEditedStatus(formState);\n    if (activeStep === 1) setSaveStatus(new Date().getTime());\n  };\n\n  var handleFormStatus = function handleFormStatus() {\n    var formState = isFormsEdited === null || isFormsEdited === void 0 ? void 0 : isFormsEdited.map(function (form) {\n      return _objectSpread({}, form);\n    });\n    formState[activeStep]['formEditedStatus'] = true;\n    formState[activeStep]['isSubmitted'] = false;\n    setFormEditedStatus(formState);\n  };\n\n  useEffect(function () {\n    currentStep && setActiveStep(currentStep);\n    setStepFields(steps);\n    setFormEditedStatus(stepsForms);\n    return function () {\n      findDirtyForm(initialFormStatus);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setProgress(activeStep ? activeStep / stepFields.length * 100 : 0);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    findDirtyForm(isFormsEdited);\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(ClaimsRegisterNewLossView, {\n      activeStep: activeStep,\n      setActiveStep: setActiveStep,\n      steps: steps,\n      progress: progress,\n      handleStep: handleStep,\n      isFormsEdited: isFormsEdited,\n      isAllStepsCompleted: false,\n      handleFormStatus: handleFormStatus,\n      handleNext: handleNext,\n      handleBack: handleBack,\n      handleSave: handleSave,\n      setFormEditedStatus: setFormEditedStatus,\n      saveStatus: saveStatus,\n      setSaveStatus: setSaveStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 125,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawerComponent, {\n      isDrawerOpen: true,\n      children: /*#__PURE__*/_jsxDEV(DmsFnolWidget, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 142,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 141,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClaimsRegisterNewLoss, \"zImMVfpE6TIUWmWVUGZKkV4+m5U=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = ClaimsRegisterNewLoss;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLoss\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","DrawerComponent","DmsFnolWidget","selectorDmsViewFiles","selectDmsDocDetails","getDmsDocumentList","ClaimsRegisterNewLossView","ClaimsRegisterNewLoss","propTypes","steps","array","isRequired","stepsForms","findDirtyForm","func","initialFormStatus","currentStep","number","defaultProps","stepFields","setStepFields","activeStep","setActiveStep","progress","setProgress","isFormsEdited","setFormEditedStatus","saveStatus","setSaveStatus","dispatch","viewDocumentList","savedDmsDocList","handleStep","step","handleNext","Date","getTime","formState","map","form","forEach","id","docList","length","lossDocDetails","linkPolicyDocDetails","claimsDocDetails","handleBack","handleSave","frm","handleFormStatus"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport { DrawerComponent, DmsFnolWidget } from 'components';\r\nimport { selectorDmsViewFiles, selectDmsDocDetails, getDmsDocumentList } from 'stores';\r\nimport ClaimsRegisterNewLossView from './ClaimsRegisterNewLoss.view';\r\n\r\nClaimsRegisterNewLoss.propTypes = {\r\n  steps: PropTypes.array.isRequired,\r\n  stepsForms: PropTypes.array.isRequired,\r\n  findDirtyForm: PropTypes.func,\r\n  initialFormStatus: PropTypes.array,\r\n  currentStep: PropTypes.number,\r\n};\r\n\r\nClaimsRegisterNewLoss.defaultProps = {\r\n  currentStep: 0,\r\n  findDirtyForm: () => {},\r\n  initialFormStatus: [],\r\n};\r\n\r\nexport default function ClaimsRegisterNewLoss({ currentStep, steps, stepsForms, findDirtyForm, initialFormStatus }) {\r\n  const [stepFields, setStepFields] = useState([]);\r\n  const [activeStep, setActiveStep] = useState(0);\r\n  const [progress, setProgress] = useState(0);\r\n  const [isFormsEdited, setFormEditedStatus] = useState([]);\r\n  const [saveStatus, setSaveStatus] = useState();\r\n\r\n  const dispatch = useDispatch();\r\n  const viewDocumentList = useSelector(selectorDmsViewFiles);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n\r\n  const handleStep = (step) => {\r\n    if (activeStep < step) {\r\n      if (\r\n        !isFormsEdited?.[activeStep]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[activeStep]?.['isSubmitted'] &&\r\n        !isFormsEdited?.[step - 1]?.['formEditedStatus'] &&\r\n        isFormsEdited?.[step - 1]?.['isSubmitted']\r\n      ) {\r\n        setActiveStep(step);\r\n      }\r\n    } else if (activeStep > step) {\r\n      if (!isFormsEdited?.[activeStep]?.['formEditedStatus']) {\r\n        setActiveStep(step);\r\n      }\r\n    }\r\n  };\r\n  const handleNext = () => {\r\n    setSaveStatus(new Date().getTime());\r\n    const formState = isFormsEdited.map((form) => ({ ...form }));\r\n    formState?.forEach((form) => {\r\n      if (form?.id > activeStep && formState?.[activeStep]?.['formEditedStatus']) {\r\n        form['isSubmitted'] = false;\r\n      }\r\n    });\r\n    formState[activeStep]['isSubmitted'] = true;\r\n    if (activeStep === 0) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.lossDocDetails];\r\n      dispatch(getDmsDocumentList('LOSS_INFORMATION', docList));\r\n    }\r\n    if (activeStep === 1) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.linkPolicyDocDetails];\r\n      dispatch(getDmsDocumentList('LINK_POLICY', docList));\r\n    }\r\n    if (activeStep === 2) {\r\n      const docList = viewDocumentList.length > 0 ? [...viewDocumentList] : [...savedDmsDocList?.claimsDocDetails];\r\n      dispatch(getDmsDocumentList('CLAIM_INFORMATION', docList));\r\n    }\r\n    if (activeStep !== 1) {\r\n      formState[activeStep]['formEditedStatus'] = false;\r\n      setFormEditedStatus(formState);\r\n      setActiveStep(activeStep + 1);\r\n    } else {\r\n      formState[activeStep]['formEditedStatus'] = true;\r\n      setFormEditedStatus(formState);\r\n      setSaveStatus(new Date().getTime());\r\n    }\r\n  };\r\n\r\n  const handleBack = () => {\r\n    if (!isFormsEdited?.[activeStep]?.['formEditedStatus']) {\r\n      setActiveStep(activeStep - 1);\r\n    }\r\n  };\r\n\r\n  const handleSave = () => {\r\n    setSaveStatus(new Date().getTime());\r\n    const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n    formState[activeStep]['formEditedStatus'] = false;\r\n    formState[activeStep]['isSubmitted'] = true;\r\n    formState?.map((frm) => (frm?.id > activeStep ? (frm['isSubmitted'] = false) : (frm['isSubmitted'] = true)));\r\n    setFormEditedStatus(formState);\r\n    if (activeStep === 1) setSaveStatus(new Date().getTime());\r\n  };\r\n\r\n  const handleFormStatus = () => {\r\n    const formState = isFormsEdited?.map((form) => ({ ...form }));\r\n    formState[activeStep]['formEditedStatus'] = true;\r\n    formState[activeStep]['isSubmitted'] = false;\r\n    setFormEditedStatus(formState);\r\n  };\r\n\r\n  useEffect(() => {\r\n    currentStep && setActiveStep(currentStep);\r\n    setStepFields(steps);\r\n    setFormEditedStatus(stepsForms);\r\n    return () => {\r\n      findDirtyForm(initialFormStatus);\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setProgress(activeStep ? (activeStep / stepFields.length) * 100 : 0);\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    findDirtyForm(isFormsEdited);\r\n  }, [isFormsEdited]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <>\r\n      <ClaimsRegisterNewLossView\r\n        activeStep={activeStep}\r\n        setActiveStep={setActiveStep}\r\n        steps={steps}\r\n        progress={progress}\r\n        handleStep={handleStep}\r\n        isFormsEdited={isFormsEdited}\r\n        isAllStepsCompleted={false}\r\n        handleFormStatus={handleFormStatus}\r\n        handleNext={handleNext}\r\n        handleBack={handleBack}\r\n        handleSave={handleSave}\r\n        setFormEditedStatus={setFormEditedStatus}\r\n        saveStatus={saveStatus}\r\n        setSaveStatus={setSaveStatus}\r\n      />\r\n      <DrawerComponent isDrawerOpen>\r\n        <DmsFnolWidget />\r\n      </DrawerComponent>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}