{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TableRowHeader\\\\TableRowHeader.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory } from 'react-router'; // app\n\nimport styles from './TableRowHeader.styles';\nimport { TableCell, Button } from 'components';\nimport * as utils from 'utils';\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\nimport { setClaimsStepperControl } from 'stores';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTableRowHeaderView.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  expanded: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  setIsOpen: PropTypes.func,\n  claimInformation: PropTypes.object\n};\nexport function TableRowHeaderView(_ref) {\n  _s();\n\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      isOpen = _ref.isOpen,\n      onClick = _ref.onClick,\n      children = _ref.children,\n      color = _ref.color,\n      claimInformation = _ref.claimInformation;\n  var classes = makeStyles(styles, {\n    name: 'TableRowHeader'\n  })({\n    expanded: isOpen\n  });\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var handleEditClaim = function handleEditClaim(claim) {\n    dispatch(setClaimsStepperControl(1));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        linkPolicy: {\n          isSearchTerm: '',\n          claim: claim\n        }\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.wrapper,\n      onClick: onClick,\n      \"data-testid\": \"table-row-header\",\n      style: {\n        background: color\n      },\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: \"100\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.panel,\n          children: [/*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n            className: classes.arrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            icon: OpenInNewOutlinedIcon,\n            color: \"default\",\n            size: \"medium\",\n            variant: \"outlined\",\n            tooltip: {\n              title: utils.string.t('claims.editClaim')\n            },\n            style: {\n              border: 'none'\n            },\n            nestedClasses: {\n              btn: classes.openInNewOutIcon\n            },\n            onClick: function onClick() {\n              return handleEditClaim(claimInformation);\n            },\n            disabled: (claimInformation === null || claimInformation === void 0 ? void 0 : claimInformation.claimStatus) === STATUS_CLAIMS_DRAFT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 53,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n}\n\n_s(TableRowHeaderView, \"FxNkVwM1QRg2/kU3+RDi4ll7EAM=\", false, function () {\n  return [useDispatch, useHistory];\n});\n\n_c = TableRowHeaderView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRowHeaderView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TableRowHeader/TableRowHeader.view.js"],"names":["React","useDispatch","PropTypes","useHistory","styles","TableCell","Button","utils","STATUS_CLAIMS_DRAFT","setClaimsStepperControl","config","makeStyles","Box","TableRow","Typography","OpenInNewOutlinedIcon","KeyboardArrowDownIcon","TableRowHeaderView","propTypes","title","string","isRequired","subtitle","expanded","bool","children","oneOfType","arrayOf","node","setIsOpen","func","claimInformation","object","isOpen","onClick","color","classes","name","dispatch","history","handleEditClaim","claim","push","pathname","routes","claimsFNOL","newLoss","state","linkPolicy","isSearchTerm","wrapper","background","panel","arrow","t","border","btn","openInNewOutIcon","claimStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory } from 'react-router';\r\n\r\n// app\r\nimport styles from './TableRowHeader.styles';\r\nimport { TableCell, Button } from 'components';\r\nimport * as utils from 'utils';\r\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\r\nimport { setClaimsStepperControl } from 'stores';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\r\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nTableRowHeaderView.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  expanded: PropTypes.bool,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n  setIsOpen: PropTypes.func,\r\n  claimInformation: PropTypes.object,\r\n};\r\n\r\nexport function TableRowHeaderView({ title, subtitle, isOpen, onClick, children, color, claimInformation }) {\r\n  const classes = makeStyles(styles, { name: 'TableRowHeader' })({ expanded: isOpen });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const handleEditClaim = (claim) => {\r\n    dispatch(setClaimsStepperControl(1));\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: { linkPolicy: { isSearchTerm: '', claim } },\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.wrapper} onClick={onClick} data-testid=\"table-row-header\" style={{ background: color }}>\r\n        <TableCell colSpan=\"100\">\r\n          <Box className={classes.panel}>\r\n            <KeyboardArrowDownIcon className={classes.arrow} />\r\n            <Typography variant=\"h2\" className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {subtitle}\r\n            </Typography>\r\n            <Button\r\n              icon={OpenInNewOutlinedIcon}\r\n              color=\"default\"\r\n              size=\"medium\"\r\n              variant=\"outlined\"\r\n              tooltip={{ title: utils.string.t('claims.editClaim') }}\r\n              style={{ border: 'none' }}\r\n              nestedClasses={{ btn: classes.openInNewOutIcon }}\r\n              onClick={() => handleEditClaim(claimInformation)}\r\n              disabled={claimInformation?.claimStatus === STATUS_CLAIMS_DRAFT}\r\n            />\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}