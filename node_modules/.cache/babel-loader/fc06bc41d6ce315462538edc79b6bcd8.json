{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DepartmentMarkets\\\\DepartmentMarkets.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { firstBy } from 'thenby';\nimport kebabCase from 'lodash/kebabCase';\nimport get from 'lodash/get'; // app\n\nimport styles from './DepartmentMarkets.styles';\nimport { Avatar, Button, Overflow, PopoverMenu, Restricted, StatusIcon, TableCell, TableHead, Translate } from 'components';\nimport * as constants from 'consts';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Grid, Table, TableRow, TableBody } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDepartmentMarketsView.propTypes = {\n  groups: PropTypes.array,\n  items: PropTypes.array,\n  cols: PropTypes.array.isRequired,\n  deptId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  marketAccountStatuses: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    addDepartmentMarket: PropTypes.func.isRequired\n  }).isRequired,\n  popoverActions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  }))\n};\nexport function DepartmentMarketsView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var groups = _ref.groups,\n      items = _ref.items,\n      cols = _ref.cols,\n      deptId = _ref.deptId,\n      marketAccountStatuses = _ref.marketAccountStatuses,\n      popoverActions = _ref.popoverActions,\n      handlers = _ref.handlers;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'DepartmentMarketsView'\n  })({\n    wide: media.wideUp\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 2,\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      mb: 2,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        alignItems: \"flex-start\",\n        justifyContent: \"space-between\",\n        spacing: 1,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            size: \"xsmall\",\n            variant: \"outlined\",\n            icon: AddIcon,\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: \"market.addMarket\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 21\n            }, this),\n            onClick: handlers.addDepartmentMarket({\n              deptId: deptId,\n              markets: items.map(function (item) {\n                return item.market;\n              })\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 44,\n      columnNumber: 7\n    }, this), groups && utils.generic.isValidArray(groups, true) && groups.map(function (group) {\n      var groupName = kebabCase(group.name);\n      var markets = utils.sort.arrayNestedPropertyValue(group.markets, 'market.edgeName', 'asc');\n      return /*#__PURE__*/_jsxDEV(Box, {\n        mb: 2,\n        children: /*#__PURE__*/_jsxDEV(Overflow, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            \"data-testid\": \"table-capacity-\".concat(group.id, \"-\").concat(groupName),\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              columns: cols.map(function (col) {\n                var isTitle = col.id === 'name';\n\n                if (isTitle) {\n                  col.label = /*#__PURE__*/_jsxDEV(Box, {\n                    display: \"flex\",\n                    alignItems: \"center\",\n                    position: \"relative\",\n                    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n                      children: group.name\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 75,\n                      columnNumber: 29\n                    }, _this), group.color && /*#__PURE__*/_jsxDEV(Box, {\n                      ml: 0.75,\n                      mb: -0.25,\n                      children: /*#__PURE__*/_jsxDEV(Avatar, {\n                        text: \" \",\n                        size: 10,\n                        bg: group.color,\n                        title: group.name\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 78,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 31\n                    }, _this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 74,\n                    columnNumber: 27\n                  }, _this);\n                }\n\n                return _objectSpread({}, col);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n              \"data-testid\": \"department-market-list\",\n              children: utils.generic.isValidArray(markets, true) && markets.map(function (item) {\n                var underwriters = get(item, 'underwriters', []).sort(firstBy(utils.sort.array('numeric', 'id')));\n                var hasStatus = !!(item.market && item.market.statusId);\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  hover: true,\n                  className: classnames(classes.row, _defineProperty({}, classes.rowNew, Boolean(item.__new__))),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.cellsMarkets\n                    },\n                    children: /*#__PURE__*/_jsxDEV(\"div\", {\n                      className: classes.market,\n                      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.marketStatus,\n                        children: /*#__PURE__*/_jsxDEV(Restricted, {\n                          include: [constants.ROLE_BROKER],\n                          children: hasStatus && /*#__PURE__*/_jsxDEV(StatusIcon, {\n                            translationPath: \"statusMarket\",\n                            list: marketAccountStatuses,\n                            id: item.market.statusId\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 109,\n                            columnNumber: 39\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 107,\n                          columnNumber: 35\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 106,\n                        columnNumber: 33\n                      }, _this), /*#__PURE__*/_jsxDEV(\"div\", {\n                        className: classes.marketName,\n                        children: utils.market.getName(item)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 113,\n                        columnNumber: 33\n                      }, _this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 105,\n                      columnNumber: 31\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 104,\n                    columnNumber: 29\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.cellsUnderwriters\n                    },\n                    colSpan: 2,\n                    children: /*#__PURE__*/_jsxDEV(Table, {\n                      size: \"small\",\n                      children: /*#__PURE__*/_jsxDEV(TableBody, {\n                        children: underwriters.map(function (uw) {\n                          return /*#__PURE__*/_jsxDEV(TableRow, {\n                            children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                              borderless: true,\n                              minimal: true,\n                              nestedClasses: {\n                                root: classes.cellsNested\n                              },\n                              children: [/*#__PURE__*/_jsxDEV(KeyboardArrowRightIcon, {\n                                className: classes.underwriterArrow\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 123,\n                                columnNumber: 43\n                              }, _this), /*#__PURE__*/_jsxDEV(\"span\", {\n                                className: classes.underwriterName,\n                                children: utils.user.fullname(uw)\n                              }, void 0, false, {\n                                fileName: _jsxFileName,\n                                lineNumber: 124,\n                                columnNumber: 43\n                              }, _this)]\n                            }, void 0, true, {\n                              fileName: _jsxFileName,\n                              lineNumber: 122,\n                              columnNumber: 41\n                            }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                              borderless: true,\n                              minimal: true,\n                              nestedClasses: {\n                                root: classes.cellsNested\n                              },\n                              children: uw.emailId\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 126,\n                              columnNumber: 41\n                            }, _this)]\n                          }, uw.id, true, {\n                            fileName: _jsxFileName,\n                            lineNumber: 121,\n                            columnNumber: 39\n                          }, _this);\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 33\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 31\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 29\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    menu: true,\n                    children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                      id: \"department-market\",\n                      data: {\n                        market: item,\n                        deptId: deptId\n                      },\n                      items: popoverActions\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 136,\n                      columnNumber: 31\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 135,\n                    columnNumber: 29\n                  }, _this)]\n                }, item.id, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 97,\n                  columnNumber: 27\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 89,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 15\n        }, _this)\n      }, \"\".concat(group.id, \"-\").concat(groupName), false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 13\n      }, _this);\n    })]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartmentMarketsView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = DepartmentMarketsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentMarketsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DepartmentMarkets/DepartmentMarkets.view.js"],"names":["React","PropTypes","classnames","firstBy","kebabCase","get","styles","Avatar","Button","Overflow","PopoverMenu","Restricted","StatusIcon","TableCell","TableHead","Translate","constants","useMedia","utils","makeStyles","Box","Grid","Table","TableRow","TableBody","AddIcon","KeyboardArrowRightIcon","DepartmentMarketsView","propTypes","groups","array","items","cols","isRequired","deptId","oneOfType","string","number","marketAccountStatuses","handlers","shape","addDepartmentMarket","func","popoverActions","arrayOf","id","label","callback","media","classes","name","wide","wideUp","markets","map","item","market","generic","isValidArray","group","groupName","sort","arrayNestedPropertyValue","col","isTitle","color","underwriters","hasStatus","statusId","row","rowNew","Boolean","__new__","root","cellsMarkets","marketStatus","ROLE_BROKER","marketName","getName","cellsUnderwriters","uw","cellsNested","underwriterArrow","underwriterName","user","fullname","emailId"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { firstBy } from 'thenby';\r\nimport kebabCase from 'lodash/kebabCase';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './DepartmentMarkets.styles';\r\nimport { Avatar, Button, Overflow, PopoverMenu, Restricted, StatusIcon, TableCell, TableHead, Translate } from 'components';\r\nimport * as constants from 'consts';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid, Table, TableRow, TableBody } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport KeyboardArrowRightIcon from '@material-ui/icons/KeyboardArrowRight';\r\n\r\nDepartmentMarketsView.propTypes = {\r\n  groups: PropTypes.array,\r\n  items: PropTypes.array,\r\n  cols: PropTypes.array.isRequired,\r\n  deptId: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  marketAccountStatuses: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    addDepartmentMarket: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  popoverActions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      callback: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n};\r\n\r\nexport function DepartmentMarketsView({ groups, items, cols, deptId, marketAccountStatuses, popoverActions, handlers }) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'DepartmentMarketsView' })({ wide: media.wideUp });\r\n\r\n  return (\r\n    <Box mt={2}>\r\n      <Box mb={2}>\r\n        <Grid container alignItems=\"flex-start\" justifyContent=\"space-between\" spacing={1}>\r\n          <Grid item>\r\n            <Button\r\n              size=\"xsmall\"\r\n              variant=\"outlined\"\r\n              icon={AddIcon}\r\n              text={<Translate label=\"market.addMarket\" />}\r\n              onClick={handlers.addDepartmentMarket({ deptId, markets: items.map((item) => item.market) })}\r\n            />\r\n          </Grid>\r\n        </Grid>\r\n      </Box>\r\n\r\n      {groups &&\r\n        utils.generic.isValidArray(groups, true) &&\r\n        groups.map((group) => {\r\n          const groupName = kebabCase(group.name);\r\n          const markets = utils.sort.arrayNestedPropertyValue(group.markets, 'market.edgeName', 'asc');\r\n\r\n          return (\r\n            <Box mb={2} key={`${group.id}-${groupName}`}>\r\n              <Overflow>\r\n                <Table size=\"small\" data-testid={`table-capacity-${group.id}-${groupName}`}>\r\n                  <TableHead\r\n                    columns={cols.map((col) => {\r\n                      const isTitle = col.id === 'name';\r\n\r\n                      if (isTitle) {\r\n                        col.label = (\r\n                          <Box display=\"flex\" alignItems=\"center\" position=\"relative\">\r\n                            <span>{group.name}</span>\r\n                            {group.color && (\r\n                              <Box ml={0.75} mb={-0.25}>\r\n                                <Avatar text=\" \" size={10} bg={group.color} title={group.name} />\r\n                              </Box>\r\n                            )}\r\n                          </Box>\r\n                        );\r\n                      }\r\n\r\n                      return { ...col };\r\n                    })}\r\n                  />\r\n\r\n                  <TableBody data-testid=\"department-market-list\">\r\n                    {utils.generic.isValidArray(markets, true) &&\r\n                      markets.map((item) => {\r\n                        const underwriters = get(item, 'underwriters', []).sort(firstBy(utils.sort.array('numeric', 'id')));\r\n\r\n                        const hasStatus = !!(item.market && item.market.statusId);\r\n\r\n                        return (\r\n                          <TableRow\r\n                            key={item.id}\r\n                            hover\r\n                            className={classnames(classes.row, {\r\n                              [classes.rowNew]: Boolean(item.__new__),\r\n                            })}\r\n                          >\r\n                            <TableCell nestedClasses={{ root: classes.cellsMarkets }}>\r\n                              <div className={classes.market}>\r\n                                <div className={classes.marketStatus}>\r\n                                  <Restricted include={[constants.ROLE_BROKER]}>\r\n                                    {hasStatus && (\r\n                                      <StatusIcon translationPath=\"statusMarket\" list={marketAccountStatuses} id={item.market.statusId} />\r\n                                    )}\r\n                                  </Restricted>\r\n                                </div>\r\n                                <div className={classes.marketName}>{utils.market.getName(item)}</div>\r\n                              </div>\r\n                            </TableCell>\r\n                            <TableCell nestedClasses={{ root: classes.cellsUnderwriters }} colSpan={2}>\r\n                              <Table size=\"small\">\r\n                                <TableBody>\r\n                                  {underwriters.map((uw) => {\r\n                                    return (\r\n                                      <TableRow key={uw.id}>\r\n                                        <TableCell borderless minimal nestedClasses={{ root: classes.cellsNested }}>\r\n                                          <KeyboardArrowRightIcon className={classes.underwriterArrow} />\r\n                                          <span className={classes.underwriterName}>{utils.user.fullname(uw)}</span>\r\n                                        </TableCell>\r\n                                        <TableCell borderless minimal nestedClasses={{ root: classes.cellsNested }}>\r\n                                          {uw.emailId}\r\n                                        </TableCell>\r\n                                      </TableRow>\r\n                                    );\r\n                                  })}\r\n                                </TableBody>\r\n                              </Table>\r\n                            </TableCell>\r\n                            <TableCell menu>\r\n                              <PopoverMenu id=\"department-market\" data={{ market: item, deptId }} items={popoverActions} />\r\n                            </TableCell>\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                  </TableBody>\r\n                </Table>\r\n              </Overflow>\r\n            </Box>\r\n          );\r\n        })}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}