{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\PopoverFilter\\\\PopoverFilter.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { PopoverFilterView } from './PopoverFilter.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPopoverFilter.propTypes = {\n  id: PropTypes.string.isRequired,\n  type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\n  label: PropTypes.string.isRequired,\n  value: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })), PropTypes.string]).isRequired,\n  text: PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    count: PropTypes.number\n  }),\n  placeholder: PropTypes.string,\n  content: PropTypes.node.isRequired,\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\n  disabled: PropTypes.bool,\n  maxHeight: PropTypes.number,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    btn: PropTypes.string,\n    popover: PropTypes.string\n  }),\n  handlers: PropTypes.object\n};\nPopoverFilter.defaultProps = {\n  nestedClasses: {},\n  handlers: {}\n};\nexport default function PopoverFilter(_ref) {\n  _s();\n\n  var id = _ref.id,\n      type = _ref.type,\n      value = _ref.value,\n      text = _ref.text,\n      anchorOrigin = _ref.anchorOrigin,\n      transformOrigin = _ref.transformOrigin,\n      handlers = _ref.handlers,\n      props = _objectWithoutProperties(_ref, [\"id\", \"type\", \"value\", \"text\", \"anchorOrigin\", \"transformOrigin\", \"handlers\"]);\n\n  var btnRef = useRef(null);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      active = _useState2[0],\n      setActive = _useState2[1];\n\n  var getTextFromMultiSelectValues = function getTextFromMultiSelectValues() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n\n    if (type === 'datepicker') {\n      return {\n        label: '',\n        count: 0\n      };\n    } else {\n      return values.reduce(function (acc, cur, idx) {\n        return idx === 0 ? {\n          label: cur.name,\n          count: 0\n        } : {\n          label: acc.label,\n          count: idx\n        };\n      }, {\n        label: '',\n        count: 0\n      });\n    }\n  };\n\n  var handleOpen = function handleOpen(event) {\n    event.stopPropagation();\n    setActive(true);\n  };\n\n  var handleClose = function handleClose(event) {\n    event.stopPropagation();\n    setActive(false);\n  }; // abort\n\n\n  if (!type) return null;\n  return /*#__PURE__*/_jsxDEV(PopoverFilterView, _objectSpread(_objectSpread({}, props), {}, {\n    id: \"filter-field-\".concat(id),\n    type: type,\n    value: value,\n    active: active,\n    textObj: text || getTextFromMultiSelectValues(value),\n    refs: {\n      btn: btnRef\n    },\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      filterOpen: handleOpen,\n      filterClose: handleClose\n    })\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PopoverFilter, \"LaRF/SOIqiesWzj3sRKKSNx9848=\");\n\n_c = PopoverFilter;\n\nvar _c;\n\n$RefreshReg$(_c, \"PopoverFilter\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/PopoverFilter/PopoverFilter.js"],"names":["React","useState","useRef","PropTypes","PopoverFilterView","PopoverFilter","propTypes","id","string","isRequired","type","oneOf","label","value","oneOfType","arrayOf","shape","number","name","text","count","placeholder","content","node","color","disabled","bool","maxHeight","nestedClasses","root","btn","popover","handlers","object","defaultProps","anchorOrigin","transformOrigin","props","btnRef","active","setActive","getTextFromMultiSelectValues","values","reduce","acc","cur","idx","handleOpen","event","stopPropagation","handleClose","filterOpen","filterClose"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { PopoverFilterView } from './PopoverFilter.view';\r\n\r\nPopoverFilter.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\r\n  label: PropTypes.string.isRequired,\r\n  value: PropTypes.oneOfType([\r\n    PropTypes.arrayOf(\r\n      PropTypes.shape({\r\n        id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n        name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      })\r\n    ),\r\n    PropTypes.string,\r\n  ]).isRequired,\r\n  text: PropTypes.shape({\r\n    label: PropTypes.string.isRequired,\r\n    count: PropTypes.number,\r\n  }),\r\n\r\n  placeholder: PropTypes.string,\r\n  content: PropTypes.node.isRequired,\r\n  color: PropTypes.oneOf(['default', 'primary', 'secondary']),\r\n  disabled: PropTypes.bool,\r\n  maxHeight: PropTypes.number,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    btn: PropTypes.string,\r\n    popover: PropTypes.string,\r\n  }),\r\n  handlers: PropTypes.object,\r\n};\r\n\r\nPopoverFilter.defaultProps = {\r\n  nestedClasses: {},\r\n  handlers: {},\r\n};\r\n\r\nexport default function PopoverFilter({ id, type, value, text, anchorOrigin, transformOrigin, handlers, ...props }) {\r\n  const btnRef = useRef(null);\r\n  const [active, setActive] = useState(false);\r\n\r\n  const getTextFromMultiSelectValues = (values = []) => {\r\n    if (type === 'datepicker') {\r\n      return { label: '', count: 0 };\r\n    } else {\r\n      return values.reduce(\r\n        (acc, cur, idx) => {\r\n          return idx === 0 ? { label: cur.name, count: 0 } : { label: acc.label, count: idx };\r\n        },\r\n        { label: '', count: 0 }\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleOpen = (event) => {\r\n    event.stopPropagation();\r\n    setActive(true);\r\n  };\r\n\r\n  const handleClose = (event) => {\r\n    event.stopPropagation();\r\n    setActive(false);\r\n  };\r\n\r\n  // abort\r\n  if (!type) return null;\r\n\r\n  return (\r\n    <PopoverFilterView\r\n      {...props}\r\n      id={`filter-field-${id}`}\r\n      type={type}\r\n      value={value}\r\n      active={active}\r\n      textObj={text || getTextFromMultiSelectValues(value)}\r\n      refs={{\r\n        btn: btnRef,\r\n      }}\r\n      handlers={{\r\n        ...handlers,\r\n        filterOpen: handleOpen,\r\n        filterClose: handleClose,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}