{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskFormField\\\\AddRiskFormField.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useWatch } from 'react-hook-form';\nimport get from 'lodash/get';\nimport moment from 'moment'; // app\n\nimport styles from './AddRiskFormField.styles';\nimport { AddRiskFormFieldView } from './AddRiskFormField.view';\nimport { getClient, getInsured, selectUser } from 'stores';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskFormField.propTypes = {\n  field: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired,\n  handleUpdateObject: PropTypes.func\n};\nexport default function AddRiskFormField(_ref) {\n  _s();\n\n  var _field$calculate;\n\n  var field = _ref.field,\n      formProps = _ref.formProps,\n      handleUpdateObject = _ref.handleUpdateObject;\n  var control = formProps.control,\n      register = formProps.register,\n      watch = formProps.watch,\n      errors = formProps.errors,\n      setValue = formProps.setValue,\n      trigger = formProps.trigger;\n  var classes = makeStyles(styles, {\n    name: 'AddRiskFormField'\n  })();\n  var dispatch = useDispatch();\n  var riskProductsSelected = useSelector(function (store) {\n    return store.risk.products.selected;\n  });\n  var user = useSelector(selectUser);\n  var endpoint = useSelector(function (state) {\n    return get(state, 'config.vars.endpoint');\n  });\n  var auth = user.auth;\n  var calculateFieldsValues = useWatch({\n    control: control,\n    name: field === null || field === void 0 ? void 0 : field.calculate\n  });\n  var calculateField = (field === null || field === void 0 ? void 0 : (_field$calculate = field.calculate) === null || _field$calculate === void 0 ? void 0 : _field$calculate.length) > 0 ? true : false;\n  useEffect(function () {\n    var isSubscribed = true;\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var data, response, responseData, errorParams;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.prev = 0;\n                data = _objectSpread(_objectSpread({}, calculateFieldsValues), {}, {\n                  riskType: riskProductsSelected\n                });\n                _context.next = 4;\n                return utils.api.post({\n                  token: auth.accessToken,\n                  endpoint: endpoint.auth,\n                  path: \"api/v1/products/\".concat(riskProductsSelected, \"/calculate/\").concat(field.name),\n                  data: data\n                });\n\n              case 4:\n                response = _context.sent;\n                _context.next = 7;\n                return utils.api.handleResponse(response);\n\n              case 7:\n                responseData = _context.sent;\n                isSubscribed && (responseData === null || responseData === void 0 ? void 0 : responseData.result) && setValue(field.name, responseData.result);\n                _context.next = 15;\n                break;\n\n              case 11:\n                _context.prev = 11;\n                _context.t0 = _context[\"catch\"](0);\n                errorParams = {\n                  file: 'AddRiskForm field, calculate',\n                  message: 'API fetch error'\n                };\n                utils.api.handleError(_context.t0, errorParams);\n\n              case 15:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee, null, [[0, 11]]);\n      }));\n\n      return function fetchData() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var isAllDefined = Object.keys(calculateFieldsValues).every(function (key) {\n      return Boolean(calculateFieldsValues[key]);\n    });\n\n    if (isAllDefined && calculateField) {\n      fetchData();\n    }\n\n    return function () {\n      return isSubscribed = false;\n    }; // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, [calculateFieldsValues, calculateField]); // abort\n\n  if (!field || !field.name || !field.type) return null;\n  if (!formProps || !formProps.control) return null;\n  var checkboxProps = field.type === 'checkbox' ? {\n    register: register,\n    watch: watch\n  } : {};\n  var selectProps = field.type === 'select' ? {\n    nestedClasses: {\n      root: classes.select\n    }\n  } : {};\n  field.error = get(errors, field.name);\n\n  if (field.type === 'autocomplete') {\n    field.handleUpdate = function (id, value) {\n      setValue(id, value);\n      trigger(id);\n    };\n  }\n\n  if (field === null || field === void 0 ? void 0 : field.targetField) {\n    field.callback = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2(e, item) {\n        var client, insured, reInsured;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.t0 = field.name;\n                _context2.next = _context2.t0 === 'clientId' ? 3 : _context2.t0 === 'insuredId' ? 8 : _context2.t0 === 'reinsuredId' ? 13 : 18;\n                break;\n\n              case 3:\n                _context2.next = 5;\n                return dispatch(getClient(item === null || item === void 0 ? void 0 : item.value));\n\n              case 5:\n                client = _context2.sent;\n                utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, client);\n                return _context2.abrupt(\"break\", 19);\n\n              case 8:\n                _context2.next = 10;\n                return dispatch(getInsured(item === null || item === void 0 ? void 0 : item.value, false));\n\n              case 10:\n                insured = _context2.sent;\n                utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, insured);\n                return _context2.abrupt(\"break\", 19);\n\n              case 13:\n                _context2.next = 15;\n                return dispatch(getInsured(item === null || item === void 0 ? void 0 : item.value, true));\n\n              case 15:\n                reInsured = _context2.sent;\n                utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, reInsured);\n                return _context2.abrupt(\"break\", 19);\n\n              case 18:\n                return _context2.abrupt(\"break\", 19);\n\n              case 19:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function (_x, _x2) {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n  }\n\n  if (field.name === 'inceptionDate') {\n    field.handleUpdate = function (id, value) {\n      var values = control.getValues();\n\n      if (Object.keys(values).includes('expiryDate')) {\n        setValue('expiryDate', moment(value).add(1, 'y').toISOString());\n        trigger('expiryDate');\n      }\n    };\n  }\n\n  return /*#__PURE__*/_jsxDEV(AddRiskFormFieldView, {\n    field: field,\n    control: control,\n    setValue: setValue,\n    checkboxProps: checkboxProps,\n    selectProps: selectProps\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRiskFormField, \"Zsfrm01azgcvRtA5ltTSWmD8cRk=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useWatch];\n});\n\n_c = AddRiskFormField;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskFormField\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskFormField/AddRiskFormField.js"],"names":["React","useEffect","PropTypes","useSelector","useDispatch","useWatch","get","moment","styles","AddRiskFormFieldView","getClient","getInsured","selectUser","utils","makeStyles","AddRiskFormField","propTypes","field","object","isRequired","formProps","handleUpdateObject","func","control","register","watch","errors","setValue","trigger","classes","name","dispatch","riskProductsSelected","store","risk","products","selected","user","endpoint","state","auth","calculateFieldsValues","calculate","calculateField","length","isSubscribed","fetchData","data","riskType","api","post","token","accessToken","path","response","handleResponse","responseData","result","errorParams","file","message","handleError","isAllDefined","Object","keys","every","key","Boolean","type","checkboxProps","selectProps","nestedClasses","root","select","error","handleUpdate","id","value","targetField","callback","e","item","client","generic","isFunction","insured","reInsured","values","getValues","includes","add","toISOString"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useWatch } from 'react-hook-form';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './AddRiskFormField.styles';\r\nimport { AddRiskFormFieldView } from './AddRiskFormField.view';\r\nimport { getClient, getInsured, selectUser } from 'stores';\r\nimport * as utils from 'utils';\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nAddRiskFormField.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n  handleUpdateObject: PropTypes.func,\r\n};\r\n\r\nexport default function AddRiskFormField({ field, formProps, handleUpdateObject }) {\r\n  const { control, register, watch, errors, setValue, trigger } = formProps;\r\n  const classes = makeStyles(styles, { name: 'AddRiskFormField' })();\r\n  const dispatch = useDispatch();\r\n  const riskProductsSelected = useSelector((store) => store.risk.products.selected);\r\n  const user = useSelector(selectUser);\r\n  const endpoint = useSelector((state) => get(state, 'config.vars.endpoint'));\r\n  const { auth } = user;\r\n\r\n  const calculateFieldsValues = useWatch({\r\n    control,\r\n    name: field?.calculate,\r\n  });\r\n\r\n  const calculateField = field?.calculate?.length > 0 ? true : false;\r\n\r\n  useEffect(() => {\r\n    let isSubscribed = true;\r\n\r\n    const fetchData = async () => {\r\n      try {\r\n        const data = {\r\n          ...calculateFieldsValues,\r\n          riskType: riskProductsSelected,\r\n        };\r\n\r\n        const response = await utils.api.post({\r\n          token: auth.accessToken,\r\n          endpoint: endpoint.auth,\r\n          path: `api/v1/products/${riskProductsSelected}/calculate/${field.name}`,\r\n          data,\r\n        });\r\n        const responseData = await utils.api.handleResponse(response);\r\n        isSubscribed && responseData?.result && setValue(field.name, responseData.result);\r\n      } catch (err) {\r\n        const errorParams = {\r\n          file: 'AddRiskForm field, calculate',\r\n          message: 'API fetch error',\r\n        };\r\n\r\n        utils.api.handleError(err, errorParams);\r\n      }\r\n    };\r\n\r\n    const isAllDefined = Object.keys(calculateFieldsValues).every((key) => Boolean(calculateFieldsValues[key]));\r\n\r\n    if (isAllDefined && calculateField) {\r\n      fetchData();\r\n    }\r\n\r\n    return () => (isSubscribed = false);\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [calculateFieldsValues, calculateField]);\r\n\r\n  // abort\r\n  if (!field || !field.name || !field.type) return null;\r\n  if (!formProps || !formProps.control) return null;\r\n\r\n  const checkboxProps = field.type === 'checkbox' ? { register, watch } : {};\r\n  const selectProps = field.type === 'select' ? { nestedClasses: { root: classes.select } } : {};\r\n\r\n  field.error = get(errors, field.name);\r\n\r\n  if (field.type === 'autocomplete') {\r\n    field.handleUpdate = (id, value) => {\r\n      setValue(id, value);\r\n      trigger(id);\r\n    };\r\n  }\r\n\r\n  if (field?.targetField) {\r\n    field.callback = async (e, item) => {\r\n      switch (field.name) {\r\n        case 'clientId': {\r\n          const client = await dispatch(getClient(item?.value));\r\n          utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, client);\r\n          break;\r\n        }\r\n        case 'insuredId': {\r\n          const insured = await dispatch(getInsured(item?.value, false));\r\n          utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, insured);\r\n          break;\r\n        }\r\n        case 'reinsuredId': {\r\n          const reInsured = await dispatch(getInsured(item?.value, true));\r\n          utils.generic.isFunction(handleUpdateObject) && handleUpdateObject(field.targetField, reInsured);\r\n          break;\r\n        }\r\n\r\n        default:\r\n          break;\r\n      }\r\n    };\r\n  }\r\n\r\n  if (field.name === 'inceptionDate') {\r\n    field.handleUpdate = (id, value) => {\r\n      const values = control.getValues();\r\n\r\n      if (Object.keys(values).includes('expiryDate')) {\r\n        setValue('expiryDate', moment(value).add(1, 'y').toISOString());\r\n        trigger('expiryDate');\r\n      }\r\n    };\r\n  }\r\n\r\n  return (\r\n    <AddRiskFormFieldView field={field} control={control} setValue={setValue} checkboxProps={checkboxProps} selectProps={selectProps} />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}