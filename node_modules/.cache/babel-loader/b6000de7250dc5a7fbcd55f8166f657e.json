{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport has from 'lodash/has';\nimport round from 'lodash/round'; // app\n\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport config from 'config';\nexport var postPlacementSignDown = function postPlacementSignDown(values) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var markets = [];\n    var isSignDown = has(values, 'signedDownPercentage');\n    var defaultError = {\n      file: 'stores/placement.actions.signDown',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(postPlacementSignDownRequest(values));\n    dispatch(addLoader('postPlacementSignDown'));\n\n    if (!values || !values.policy_id) {\n      dispatch(postPlacementSignDownFailure(defaultError));\n      dispatch(enqueueNotification('notification.signDown.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementSignDown'));\n      return;\n    } // get the data for POST\n\n\n    var policy = utils.policies.getById(get(getState(), 'placement.selected.policies'), values.policy_id);\n    var statuses = get(getState(), 'referenceData.statuses.policyMarketQuote');\n    var statusId = utils.referenceData.status.getIdByCode(statuses, constants.STATUS_MARKET_QUOTED);\n    var marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusId]); // update markets signed %\n\n    if (isSignDown) {\n      markets = utils.markets.signDown(marketsQuoted, values.signedDownPercentage);\n    } else {\n      markets = marketsQuoted.map(function (marketObj) {\n        if (marketObj.id === values.market_id) {\n          var value = values.orderPercentage;\n          var finalValue = value === 0 || value === '' || Boolean(value) ? value : utils.market.getLineSize(marketObj, true);\n          return _objectSpread(_objectSpread({}, marketObj), {}, {\n            orderPercentage: round(finalValue, config.ui.format.percent.decimal)\n          });\n        }\n\n        return marketObj;\n      });\n    }\n\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/policy/market/signdown/\".concat(values.policy_id),\n      data: {\n        markets: markets\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postPlacementSignDownSuccess(data.markets));\n      dispatch(enqueueNotification('notification.signDown.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementSignDown'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API put error (placement.signDown)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postPlacementSignDownFailure(err));\n      dispatch(enqueueNotification('notification.signDown.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementSignDown'));\n      return err;\n    });\n  };\n};\nexport var postPlacementSignDownRequest = function postPlacementSignDownRequest(values) {\n  return {\n    type: 'PLACEMENT_SIGN_DOWN_POST_REQUEST',\n    payload: values\n  };\n};\nexport var postPlacementSignDownSuccess = function postPlacementSignDownSuccess(responseData) {\n  return {\n    type: 'PLACEMENT_POLICIES_SIGN_DOWN_POST_SUCCESS',\n    payload: responseData\n  };\n};\nexport var postPlacementSignDownFailure = function postPlacementSignDownFailure(error) {\n  return {\n    type: 'PLACEMENT_SIGN_DOWN_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.signDown.js"],"names":["get","has","round","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","constants","config","postPlacementSignDown","values","dispatch","getState","auth","user","endpoint","vars","markets","isSignDown","defaultError","file","message","postPlacementSignDownRequest","policy_id","postPlacementSignDownFailure","policy","policies","getById","statuses","statusId","referenceData","status","getIdByCode","STATUS_MARKET_QUOTED","marketsQuoted","getByStatusIds","getMarkets","signDown","signedDownPercentage","map","marketObj","id","market_id","value","orderPercentage","finalValue","Boolean","market","getLineSize","ui","format","percent","decimal","api","put","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","postPlacementSignDownSuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport has from 'lodash/has';\r\nimport round from 'lodash/round';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport config from 'config';\r\n\r\nexport const postPlacementSignDown = (values) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  let markets = [];\r\n  const isSignDown = has(values, 'signedDownPercentage');\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.signDown',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  dispatch(postPlacementSignDownRequest(values));\r\n  dispatch(addLoader('postPlacementSignDown'));\r\n\r\n  if (!values || !values.policy_id) {\r\n    dispatch(postPlacementSignDownFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.signDown.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('postPlacementSignDown'));\r\n    return;\r\n  }\r\n\r\n  // get the data for POST\r\n  const policy = utils.policies.getById(get(getState(), 'placement.selected.policies'), values.policy_id);\r\n  const statuses = get(getState(), 'referenceData.statuses.policyMarketQuote');\r\n  const statusId = utils.referenceData.status.getIdByCode(statuses, constants.STATUS_MARKET_QUOTED);\r\n  const marketsQuoted = utils.markets.getByStatusIds(utils.policy.getMarkets(policy), [statusId]);\r\n\r\n  // update markets signed %\r\n  if (isSignDown) {\r\n    markets = utils.markets.signDown(marketsQuoted, values.signedDownPercentage);\r\n  } else {\r\n    markets = marketsQuoted.map((marketObj) => {\r\n      if (marketObj.id === values.market_id) {\r\n        const value = values.orderPercentage;\r\n        const finalValue = value === 0 || value === '' || Boolean(value) ? value : utils.market.getLineSize(marketObj, true);\r\n\r\n        return {\r\n          ...marketObj,\r\n          orderPercentage: round(finalValue, config.ui.format.percent.decimal),\r\n        };\r\n      }\r\n\r\n      return marketObj;\r\n    });\r\n  }\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/policy/market/signdown/${values.policy_id}`,\r\n      data: { markets },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postPlacementSignDownSuccess(data.markets));\r\n      dispatch(enqueueNotification('notification.signDown.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postPlacementSignDown'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API put error (placement.signDown)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postPlacementSignDownFailure(err));\r\n      dispatch(enqueueNotification('notification.signDown.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postPlacementSignDown'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postPlacementSignDownRequest = (values) => {\r\n  return {\r\n    type: 'PLACEMENT_SIGN_DOWN_POST_REQUEST',\r\n    payload: values,\r\n  };\r\n};\r\n\r\nexport const postPlacementSignDownSuccess = (responseData) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICIES_SIGN_DOWN_POST_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const postPlacementSignDownFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_SIGN_DOWN_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}