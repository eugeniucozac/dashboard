{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsProcessingTableRow\\\\ClaimsProcessingTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './ClaimsProcessingTableRow.styles';\nimport { FormCheckbox, Link, TableCell, PopoverMenu } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsProcessingTableRowView.prototype = {\n  claim: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  columnProps: PropTypes.object.isRequired,\n  rowActions: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    selectClaim: PropTypes.func.isRequired,\n    clickClaim: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsProcessingTableRowView(_ref) {\n  var _classesRow, _claim$claimRef;\n\n  var claim = _ref.claim,\n      isSelected = _ref.isSelected,\n      columnProps = _ref.columnProps,\n      rowActions = _ref.rowActions,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsProcessingTableRow'\n  })();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: handlers.selectClaim(claim),\n    className: classnames(classesRow),\n    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(FormCheckbox, {\n          name: \"checkbox-\".concat(claim.claimRef),\n          type: \"checkbox\",\n          value: isSelected,\n          nestedClasses: {\n            root: classes.checkbox\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          text: ((_claim$claimRef = claim.claimRef) === null || _claim$claimRef === void 0 ? void 0 : _claim$claimRef.toString()) || '',\n          color: \"secondary\",\n          onClick: handlers.clickClaim(claim)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 36,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 35,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossRef')), {}, {\n      children: claim.lossRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('catCodesID')), {}, {\n      title: claim === null || claim === void 0 ? void 0 : claim.catCode,\n      children: claim === null || claim === void 0 ? void 0 : claim.catCode\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimReceivedDateTime')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim === null || claim === void 0 ? void 0 : claim.claimReceivedDate,\n          format: config.ui.format.date.textTime\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 45,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim === null || claim === void 0 ? void 0 : claim.createdDate,\n          format: config.ui.format.date.textTime\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('processState')), {}, {\n      children: claim.processState\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('closedDate')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim === null || claim === void 0 ? void 0 : claim.closedDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('complexity')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.complexity\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: claim.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n      children: claim.assignedTo\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('ucr')), {}, {\n      children: claim.ucr\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyRef')), {}, {\n      children: claim.policyRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyType')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.policyType\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimantName')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.claimantName\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assured')), {}, {\n      title: claim.assured,\n      children: claim.assured\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('reinsured')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.reinsured\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('client')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.client\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 69,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('interest')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.policyInterest\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 71,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdBy')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.createdBy\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('company')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.company\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n      children: claim.division\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('coverholder')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.coverholder\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossFromDate')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim.lossFromDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossToDate')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim === null || claim === void 0 ? void 0 : claim.lossToDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossDateQualifier')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.lossQualifierName\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossDetails')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.lossDetails\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('pasClaimRef')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.pasClaimRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 84,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('pasStatus')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.pasStatus\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        items: rowActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 87,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsProcessingTableRowView;\nClaimsProcessingTableRowView.displayName = \"ClaimsProcessingTableRowView\";\nClaimsProcessingTableRowView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsProcessingTableRowView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsProcessingTableRow\\\\ClaimsProcessingTableRow.view.js\"] = {\n    name: \"ClaimsProcessingTableRowView\",\n    docgenInfo: ClaimsProcessingTableRowView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsProcessingTableRow\\\\ClaimsProcessingTableRow.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsProcessingTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsProcessingTableRow/ClaimsProcessingTableRow.view.js"],"names":["React","PropTypes","classnames","styles","FormCheckbox","Link","TableCell","PopoverMenu","utils","config","makeStyles","Box","TableRow","ClaimsProcessingTableRowView","prototype","claim","object","isRequired","isSelected","bool","columnProps","rowActions","array","handlers","shape","selectClaim","func","clickClaim","classes","name","classesRow","row","rowSelected","claimRef","root","checkbox","toString","lossRef","catCode","string","t","value","date","claimReceivedDate","format","ui","textTime","createdDate","processState","closedDate","text","complexity","team","assignedTo","priority","ucr","policyRef","policyType","claimantName","assured","reinsured","client","policyInterest","createdBy","company","division","coverholder","lossFromDate","lossToDate","lossQualifierName","lossDetails","pasClaimRef","pasStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ClaimsProcessingTableRow.styles';\r\nimport { FormCheckbox, Link, TableCell, PopoverMenu } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\r\n\r\nClaimsProcessingTableRowView.prototype = {\r\n  claim: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  columnProps: PropTypes.object.isRequired,\r\n  rowActions: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    selectClaim: PropTypes.func.isRequired,\r\n    clickClaim: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsProcessingTableRowView({ claim, isSelected, columnProps, rowActions, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsProcessingTableRow' })();\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={handlers.selectClaim(claim)} className={classnames(classesRow)}>\r\n      <TableCell {...columnProps('claimRef')}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <FormCheckbox name={`checkbox-${claim.claimRef}`} type=\"checkbox\" value={isSelected} nestedClasses={{ root: classes.checkbox }} />\r\n          <Link text={claim.claimRef?.toString() || ''} color=\"secondary\" onClick={handlers.clickClaim(claim)} />\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossRef')}>{claim.lossRef}</TableCell>\r\n      <TableCell {...columnProps('catCodesID')} title={claim?.catCode}>\r\n        {claim?.catCode}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimReceivedDateTime')}>\r\n        {utils.string.t('format.date', {\r\n          value: { date: claim?.claimReceivedDate, format: config.ui.format.date.textTime },\r\n        })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('createdDate')}>\r\n        {utils.string.t('format.date', { value: { date: claim?.createdDate, format: config.ui.format.date.textTime } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('processState')}>{claim.processState}</TableCell>\r\n      <TableCell {...columnProps('closedDate')}>\r\n        {utils.string.t('format.date', { value: { date: claim?.closedDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('complexity')}>{claim?.complexity}</TableCell>\r\n      <TableCell {...columnProps('team')}>{claim.team}</TableCell>\r\n      <TableCell {...columnProps('assignedTo')}>{claim.assignedTo}</TableCell>\r\n      <TableCell {...columnProps('priority')}>{claim?.priority}</TableCell>\r\n      <TableCell {...columnProps('ucr')}>{claim.ucr}</TableCell>\r\n      <TableCell {...columnProps('policyRef')}>{claim.policyRef}</TableCell>\r\n      <TableCell {...columnProps('policyType')}>{claim?.policyType}</TableCell>\r\n      <TableCell {...columnProps('claimantName')}>{claim?.claimantName}</TableCell>\r\n      <TableCell {...columnProps('assured')} title={claim.assured}>\r\n        {claim.assured}\r\n      </TableCell>\r\n      <TableCell {...columnProps('reinsured')}>{claim?.reinsured}</TableCell>\r\n      <TableCell {...columnProps('client')}>{claim?.client}</TableCell>\r\n\r\n      <TableCell {...columnProps('interest')}>{claim?.policyInterest}</TableCell>\r\n      <TableCell {...columnProps('createdBy')}>{claim?.createdBy}</TableCell>\r\n      <TableCell {...columnProps('company')}>{claim?.company}</TableCell>\r\n      <TableCell {...columnProps('division')}>{claim.division}</TableCell>\r\n      <TableCell {...columnProps('coverholder')}>{claim?.coverholder}</TableCell>\r\n      <TableCell {...columnProps('lossFromDate')}>\r\n        {utils.string.t('format.date', { value: { date: claim.lossFromDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossToDate')}>\r\n        {utils.string.t('format.date', { value: { date: claim?.lossToDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossDateQualifier')}>{claim?.lossQualifierName}</TableCell>\r\n      <TableCell {...columnProps('lossDetails')}>{claim?.lossDetails}</TableCell>\r\n      <TableCell {...columnProps('pasClaimRef')}>{claim?.pasClaimRef}</TableCell>\r\n      <TableCell {...columnProps('pasStatus')}>{claim?.pasStatus}</TableCell>\r\n      <TableCell {...columnProps('actions')}>\r\n        <PopoverMenu id=\"search-menu-list\" items={rowActions} />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}