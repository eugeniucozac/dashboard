{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskDetails\\\\TaskDetails.js\",\n    _s = $RefreshSig$();\n\nimport { React, useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory } from 'react-router';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get';\nimport moment from 'moment'; //app\n\nimport { TaskDetailsView } from './TaskDetails.view';\nimport * as utils from 'utils';\nimport { SANCTIONS_CHECK_STATUSES } from 'consts';\nimport styles from './TaskDetails.styles';\nimport { CURRENCY_PURCHASED_STATUS } from 'consts';\nimport { closeSanctionsCheck, selectClaimsTasksProcessingSelected, selectCurrencyPurchasedValue, selectClaimsInformation, selectLossId, selectClaimsPolicyInformation, selectClaimsInterest, selectClaimInfoIsLoading, selectPolicyInfoIsLoading, selectLossInfoIsLoading, selectPolicySectionIsLoading, selectCatCodes, selectClaimsPolicySections, selectIsTaskDashboardTaskDetailsLoading } from 'stores';\nimport config from 'config';\nimport * as constants from 'consts'; //mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskDetails.propTypes = {\n  taskObj: PropTypes.object.isRequired\n};\nexport default function TaskDetails(_ref) {\n  _s();\n\n  var _useSelector, _catCodes$find, _policySections$find, _interests$find;\n\n  var taskObj = _ref.taskObj;\n  var currencyPurchased = useSelector(selectCurrencyPurchasedValue);\n\n  var _useState = useState(currencyPurchased),\n      _useState2 = _slicedToArray(_useState, 2),\n      currencyValue = _useState2[0],\n      setCurrencyValue = _useState2[1];\n\n  var claimRefTasks = useSelector(selectClaimsTasksProcessingSelected);\n  var defaultApprovalStatus = get(claimRefTasks, '[0].approvalStatus') || '';\n\n  var _useState3 = useState(defaultApprovalStatus),\n      _useState4 = _slicedToArray(_useState3, 2),\n      approvalStatus = _useState4[0],\n      setApprovalStatus = _useState4[1];\n\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var lossInformation = useSelector(selectLossId);\n  var policyInformation = useSelector(selectClaimsPolicyInformation);\n  var interests = (_useSelector = useSelector(selectClaimsInterest)) === null || _useSelector === void 0 ? void 0 : _useSelector.items;\n  var isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\n  var isLossInfoLoading = useSelector(selectLossInfoIsLoading);\n  var isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\n  var isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\n  var isTaskDetailsLoading = useSelector(selectIsTaskDashboardTaskDetailsLoading);\n  var catCodes = useSelector(selectCatCodes);\n  var catCode = (_catCodes$find = catCodes.find(function (item) {\n    return Number(item.id) === lossInformation.catCodesID;\n  })) === null || _catCodes$find === void 0 ? void 0 : _catCodes$find.description;\n  var policySections = useSelector(selectClaimsPolicySections);\n  var isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\n  var origCurrencies = useSelector(function (state) {\n    return get(state, 'referenceData.currencyCodes');\n  });\n  var countriesList = useSelector(function (state) {\n    return get(state, 'referenceData.countriesList');\n  });\n  var underWritingInfo = {\n    items: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policyUnderWritingGroupDtoList,\n    isLoading: isClaimInfoLoading,\n    basisOfOrder: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.basisOfOrder) ? 'Our Share' : '100%',\n    movementType: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.movementType,\n    orderPercentage: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.orderPercentage,\n    isPolicySectionLoading: isPolicySectionLoading,\n    policySectionInfo: !isSectionEnabled ? 'NA' : !(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.policySectionID) ? utils.string.t('app.all') : policySections === null || policySections === void 0 ? void 0 : (_policySections$find = policySections.find(function (sec) {\n      var _sec$id, _claimsInformation$po;\n\n      return (sec === null || sec === void 0 ? void 0 : (_sec$id = sec.id) === null || _sec$id === void 0 ? void 0 : _sec$id.toString()) === (claimsInformation === null || claimsInformation === void 0 ? void 0 : (_claimsInformation$po = claimsInformation.policySectionID) === null || _claimsInformation$po === void 0 ? void 0 : _claimsInformation$po.toString());\n    })) === null || _policySections$find === void 0 ? void 0 : _policySections$find.name\n  };\n\n  var getCurrencyName = function getCurrencyName(currencyCode) {\n    var _origCurrencies$find;\n\n    var currencyName = origCurrencies === null || origCurrencies === void 0 ? void 0 : (_origCurrencies$find = origCurrencies.find(function (currency) {\n      var _currency$currencyCd;\n\n      return (currency === null || currency === void 0 ? void 0 : (_currency$currencyCd = currency.currencyCd) === null || _currency$currencyCd === void 0 ? void 0 : _currency$currencyCd.toLowerCase()) === (currencyCode === null || currencyCode === void 0 ? void 0 : currencyCode.toLowerCase());\n    })) === null || _origCurrencies$find === void 0 ? void 0 : _origCurrencies$find.currencyName;\n    return \"\".concat(currencyCode, \" - \").concat(currencyName);\n  };\n\n  var getCountryName = function getCountryName(countryCode) {\n    var _countriesList$find;\n\n    var countryName = countriesList === null || countriesList === void 0 ? void 0 : (_countriesList$find = countriesList.find(function (country) {\n      var _country$countryCode;\n\n      return (country === null || country === void 0 ? void 0 : (_country$countryCode = country.countryCode) === null || _country$countryCode === void 0 ? void 0 : _country$countryCode.toLowerCase()) === (countryCode === null || countryCode === void 0 ? void 0 : countryCode.toLowerCase());\n    })) === null || _countriesList$find === void 0 ? void 0 : _countriesList$find.countryName;\n    return countryName;\n  };\n\n  var lossInfo = [{\n    title: utils.string.t('claims.lossInformation.ref'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.fromDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.fromDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.toDate'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.toDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.lossInformation.name'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossName\n  }, {\n    title: utils.string.t('claims.lossInformation.dateAndTime'),\n    value: (lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate) && moment(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.lossInformation.assignedTo'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossRef\n  }, {\n    title: utils.string.t('claims.lossInformation.details'),\n    value: lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDescription\n  }, {\n    title: utils.string.t('claims.lossInformation.catCode'),\n    value: catCode\n  }];\n  var claimInfo = [{\n    title: utils.string.t('claims.claimInformation.claimRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference\n  }, {\n    title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReceivedDate).format(config.ui.format.date.slashNumeric)\n  }, {\n    title: utils.string.t('claims.claimInformation.claimant'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimantName\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossFromDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossToDate).format(config.ui.format.date.slashNumericDateAndTime)\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.lossQualifierName\n  }, {\n    title: utils.string.t('claims.claimInformation.location') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.location\n  }, {\n    title: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.fgunarrative\n  }, {\n    title: utils.string.t('claims.claimInformation.priority'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.priorityDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorType'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) === 0 ? utils.string.t('claims.claimInformation.nonBeAdjuster') : utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorName'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.beAdjusterID) !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName\n  }, {\n    title: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.adjusterReference\n  }, {\n    title: utils.string.t('claims.claimInformation.complexity') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.complexity\n  }, {\n    title: utils.string.t('claims.claimInformation.referral') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralValue\n  }, {\n    title: utils.string.t('claims.claimInformation.rfiResponse') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.referralResponseDescription\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauClaim') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? 'Yes' : 'No'\n  }, {\n    title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*',\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauClaim) === 1 ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.bordereauPeriod : 'NA'\n  }, {\n    title: utils.string.t('claims.claimInformation.claimStatus') + '*',\n    value: claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimStatus\n  }];\n  var policyInfo = [{\n    title: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyRef,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.policyType'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.statusCode,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.company'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.company,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.division'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.division,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyNote,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.client'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.client,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.insured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    value: policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.reInsured,\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\n    value: (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate) && moment(policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\n    isLoading: isPolicyInfoLoading\n  }, {\n    title: utils.string.t('claims.columns.claimsManagement.interest'),\n    value: interests === null || interests === void 0 ? void 0 : (_interests$find = interests.find(function (item) {\n      return item.policyInterestID === claimsInformation.policyInterestID;\n    })) === null || _interests$find === void 0 ? void 0 : _interests$find.description,\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate) && moment(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime) : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.certificateNumber'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.isBordereau) ? claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.certificateNumber : 'NA',\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.originalCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.originalCurrency),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.settlementCurrency'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode) && getCurrencyName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCurrencyCode),\n    isLoading: isClaimInfoLoading\n  }, {\n    title: utils.string.t('claims.claimInformation.country'),\n    value: (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry) && getCountryName(claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.settlementCountry),\n    isLoading: isClaimInfoLoading\n  }];\n  var underWritingGroupColumns = [{\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef')\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage')\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility')\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef')\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader')\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr')\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative')\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom')\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo')\n  }];\n  var taskInfo = [{\n    title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskRef,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n    value: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.targetDueDate) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.targetDueDate).format(config.ui.format.date.text),\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.status'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.status,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskType,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.assigneeFullName,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\n    value: taskObj === null || taskObj === void 0 ? void 0 : taskObj.priority,\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\n    value: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn).format(config.ui.format.date.text),\n    isLoading: isTaskDetailsLoading\n  }, {\n    title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\n    value: (taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn) && moment(taskObj === null || taskObj === void 0 ? void 0 : taskObj.createdOn).format(config.ui.format.date.text),\n    isLoading: isTaskDetailsLoading\n  }];\n  var history = useHistory();\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'TaskDetails'\n  })();\n  var fields = [{\n    name: 'currencyPurchasedRadio',\n    type: 'radio',\n    value: currencyValue,\n    defaultValue: currencyValue,\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      value: CURRENCY_PURCHASED_STATUS.Yes,\n      label: utils.string.t('claims.processing.taskDetailsLabels.yes')\n    }, {\n      value: CURRENCY_PURCHASED_STATUS.No,\n      label: utils.string.t('claims.processing.taskDetailsLabels.no')\n    }, {\n      value: CURRENCY_PURCHASED_STATUS.notRequired,\n      label: utils.string.t('claims.processing.taskDetailsLabels.notRequired')\n    }]\n  }, {\n    name: 'sanctionsCheckState',\n    type: 'radio',\n    value: approvalStatus,\n    defaultValue: approvalStatus,\n    muiFormGroupProps: {\n      row: true,\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      value: SANCTIONS_CHECK_STATUSES.approved,\n      label: utils.string.t('status.approved')\n    }, {\n      value: SANCTIONS_CHECK_STATUSES.rejected,\n      label: utils.string.t('status.rejected')\n    }]\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  useEffect(function () {\n    if (currencyPurchased !== '') {\n      setValue('currencyPurchasedRadio', currencyPurchased);\n      setCurrencyValue(currencyPurchased);\n    }\n  }, [currencyPurchased]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var currencyPurchasedValue = watch('currencyPurchasedRadio');\n  var sanctionsCheckState = watch('sanctionsCheckState');\n\n  var handleClose = function handleClose() {\n    var params = {\n      approvalStatus: approvalStatus,\n      taskId: taskObj === null || taskObj === void 0 ? void 0 : taskObj.taskId\n    };\n    dispatch(closeSanctionsCheck(params, function () {\n      return history.push(config.routes.claimsProcessing.root);\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(TaskDetailsView, {\n    taskObj: taskObj,\n    fields: fields,\n    currencyPurchasedValue: currencyPurchasedValue,\n    sanctionsCheckState: sanctionsCheckState,\n    control: control,\n    currencyValue: currencyValue,\n    handlers: {\n      handleClose: handleClose,\n      setApprovalStatus: setApprovalStatus,\n      setCurrencyValue: setCurrencyValue\n    },\n    lossInfo: lossInfo === null || lossInfo === void 0 ? void 0 : lossInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isLossInfoLoading\n      });\n    }),\n    policyInfo: policyInfo,\n    claimInfo: claimInfo === null || claimInfo === void 0 ? void 0 : claimInfo.map(function (info) {\n      return _objectSpread(_objectSpread({}, info), {}, {\n        isLoading: isClaimInfoLoading\n      });\n    }),\n    taskInfo: taskInfo,\n    underWritingInfo: underWritingInfo,\n    underWritingGroupColumns: underWritingGroupColumns,\n    isTaskDetailsLoading: isTaskDetailsLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 391,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskDetails, \"ZO/RSO7VUgl/dbZMxfkMROy4Bfw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useHistory, useDispatch, useForm];\n});\n\n_c = TaskDetails;\nTaskDetails.displayName = \"TaskDetails\";\nTaskDetails.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskDetails\",\n  \"props\": {\n    \"taskObj\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskDetails\\\\TaskDetails.js\"] = {\n    name: \"TaskDetails\",\n    docgenInfo: TaskDetails.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskDetails\\\\TaskDetails.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskDetails\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskDetails/TaskDetails.js"],"names":["React","useState","useEffect","PropTypes","useForm","yupResolver","useHistory","useDispatch","useSelector","get","moment","TaskDetailsView","utils","SANCTIONS_CHECK_STATUSES","styles","CURRENCY_PURCHASED_STATUS","closeSanctionsCheck","selectClaimsTasksProcessingSelected","selectCurrencyPurchasedValue","selectClaimsInformation","selectLossId","selectClaimsPolicyInformation","selectClaimsInterest","selectClaimInfoIsLoading","selectPolicyInfoIsLoading","selectLossInfoIsLoading","selectPolicySectionIsLoading","selectCatCodes","selectClaimsPolicySections","selectIsTaskDashboardTaskDetailsLoading","config","constants","makeStyles","TaskDetails","propTypes","taskObj","object","isRequired","currencyPurchased","currencyValue","setCurrencyValue","claimRefTasks","defaultApprovalStatus","approvalStatus","setApprovalStatus","claimsInformation","lossInformation","policyInformation","interests","items","isClaimInfoLoading","isLossInfoLoading","isPolicyInfoLoading","isPolicySectionLoading","isTaskDetailsLoading","catCodes","catCode","find","item","Number","id","catCodesID","description","policySections","isSectionEnabled","CLAIM_SECTION_ENABLED_UG","indexOf","policyType","origCurrencies","state","countriesList","underWritingInfo","policyUnderWritingGroupDtoList","isLoading","basisOfOrder","movementType","orderPercentage","policySectionInfo","policySectionID","string","t","sec","toString","name","getCurrencyName","currencyCode","currencyName","currency","currencyCd","toLowerCase","getCountryName","countryCode","countryName","country","lossInfo","title","value","lossRef","fromDate","format","ui","date","slashNumeric","toDate","lossName","firstContactDate","slashNumericDateAndTime","lossDescription","claimInfo","claimReference","claimReceivedDate","claimantName","lossFromDate","lossToDate","lossQualifierName","location","fgunarrative","priorityDescription","beAdjusterID","adjusterName","nonBEAdjusterName","adjusterReference","complexity","referralValue","referralResponseDescription","bordereauClaim","bordereauPeriod","claimStatus","policyInfo","policyRef","statusCode","company","division","policyNote","client","insured","reInsured","inceptionDate","expiryDate","policyInterestID","isBordereau","certificateInceptionDate","certificateExpiryDate","certificateNumber","originalCurrency","settlementCurrencyCode","settlementCountry","underWritingGroupColumns","label","taskInfo","taskRef","targetDueDate","text","status","taskType","assigneeFullName","priority","createdOn","history","dispatch","classes","fields","type","defaultValue","muiFormGroupProps","row","root","radioLabel","options","Yes","No","notRequired","approved","rejected","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","watch","setValue","currencyPurchasedValue","sanctionsCheckState","handleClose","params","taskId","push","routes","claimsProcessing","map","info"],"mappings":"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","sourcesContent":["import { React, useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport { TaskDetailsView } from './TaskDetails.view';\r\nimport * as utils from 'utils';\r\nimport { SANCTIONS_CHECK_STATUSES } from 'consts';\r\nimport styles from './TaskDetails.styles';\r\nimport { CURRENCY_PURCHASED_STATUS } from 'consts';\r\nimport {\r\n  closeSanctionsCheck,\r\n  selectClaimsTasksProcessingSelected,\r\n  selectCurrencyPurchasedValue,\r\n  selectClaimsInformation,\r\n  selectLossId,\r\n  selectClaimsPolicyInformation,\r\n  selectClaimsInterest,\r\n  selectClaimInfoIsLoading,\r\n  selectPolicyInfoIsLoading,\r\n  selectLossInfoIsLoading,\r\n  selectPolicySectionIsLoading,\r\n  selectCatCodes,\r\n  selectClaimsPolicySections,\r\n  selectIsTaskDashboardTaskDetailsLoading\r\n\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n//mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nTaskDetails.propTypes = {\r\n  taskObj: PropTypes.object.isRequired,\r\n};\r\n\r\nexport default function TaskDetails({ taskObj }) {\r\n  const currencyPurchased = useSelector(selectCurrencyPurchasedValue);\r\n  const [currencyValue, setCurrencyValue] = useState(currencyPurchased);\r\n  const claimRefTasks = useSelector(selectClaimsTasksProcessingSelected);\r\n  const defaultApprovalStatus = get(claimRefTasks, '[0].approvalStatus') || '';\r\n  const [approvalStatus, setApprovalStatus] = useState(defaultApprovalStatus);\r\n\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const policyInformation = useSelector(selectClaimsPolicyInformation);\r\n  const interests = useSelector(selectClaimsInterest)?.items;\r\n  const isClaimInfoLoading = useSelector(selectClaimInfoIsLoading);\r\n  const isLossInfoLoading = useSelector(selectLossInfoIsLoading);\r\n  const isPolicyInfoLoading = useSelector(selectPolicyInfoIsLoading);\r\n  const isPolicySectionLoading = useSelector(selectPolicySectionIsLoading);\r\n  const isTaskDetailsLoading = useSelector(selectIsTaskDashboardTaskDetailsLoading)\r\n\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const catCode = catCodes.find((item) => Number(item.id) === lossInformation.catCodesID)?.description;\r\n  const policySections = useSelector(selectClaimsPolicySections);\r\n\r\n  const isSectionEnabled = constants.CLAIM_SECTION_ENABLED_UG.indexOf(policyInformation.policyType) > -1 || false;\r\n  const origCurrencies = useSelector((state) => get(state, 'referenceData.currencyCodes'));\r\n  const countriesList = useSelector((state) => get(state, 'referenceData.countriesList'));\r\n  const underWritingInfo = {\r\n    items: claimsInformation?.policyUnderWritingGroupDtoList,\r\n    isLoading: isClaimInfoLoading,\r\n    basisOfOrder: claimsInformation?.basisOfOrder ? 'Our Share' : '100%',\r\n    movementType: claimsInformation?.movementType,\r\n    orderPercentage: claimsInformation?.orderPercentage,\r\n    isPolicySectionLoading: isPolicySectionLoading,\r\n    policySectionInfo: !isSectionEnabled\r\n      ? 'NA'\r\n      : !claimsInformation?.policySectionID\r\n        ? utils.string.t('app.all')\r\n        : policySections?.find((sec) => sec?.id?.toString() === claimsInformation?.policySectionID?.toString())?.name,\r\n  };\r\n\r\n  const getCurrencyName = (currencyCode) => {\r\n    const currencyName = origCurrencies?.find(currency => currency?.currencyCd?.toLowerCase() === currencyCode?.toLowerCase())?.currencyName;\r\n    return `${currencyCode} - ${currencyName}`\r\n  }\r\n\r\n  const getCountryName = (countryCode) => {\r\n    const countryName = countriesList?.find(country => country?.countryCode?.toLowerCase() === countryCode?.toLowerCase())?.countryName\r\n    return countryName\r\n  }\r\n  const lossInfo = [\r\n    { title: utils.string.t('claims.lossInformation.ref'), value: lossInformation?.lossRef },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: lossInformation?.fromDate && moment(lossInformation?.fromDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.toDate'),\r\n      value: lossInformation?.toDate && moment(lossInformation?.toDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.name'), value: lossInformation?.lossName },\r\n    {\r\n      title: utils.string.t('claims.lossInformation.dateAndTime'),\r\n      value:\r\n        lossInformation?.firstContactDate &&\r\n        moment(lossInformation?.firstContactDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.lossInformation.assignedTo'), value: lossInformation?.lossRef },\r\n    { title: utils.string.t('claims.lossInformation.details'), value: lossInformation?.lossDescription },\r\n    { title: utils.string.t('claims.lossInformation.catCode'), value: catCode },\r\n  ];\r\n  const claimInfo = [\r\n    { title: utils.string.t('claims.claimInformation.claimRef'), value: claimsInformation?.claimReference },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      value:\r\n        claimsInformation?.claimReceivedDate && moment(claimsInformation?.claimReceivedDate).format(config.ui.format.date.slashNumeric),\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimant'), value: claimsInformation?.claimantName },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      value: claimsInformation?.lossFromDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      value: claimsInformation?.lossToDate && moment(claimsInformation?.lossToDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'), value: claimsInformation?.lossQualifierName },\r\n    { title: utils.string.t('claims.claimInformation.location') + '*', value: claimsInformation?.location },\r\n    { title: utils.string.t('claims.claimInformation.fguNarrative'), value: claimsInformation?.fgunarrative },\r\n    { title: utils.string.t('claims.claimInformation.priority'), value: claimsInformation?.priorityDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:\r\n        claimsInformation?.beAdjusterID === 0\r\n          ? utils.string.t('claims.claimInformation.nonBeAdjuster')\r\n          : utils.string.t('claims.claimInformation.beAdjuster'),\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: claimsInformation?.beAdjusterID !== 0 ? claimsInformation.adjusterName : claimsInformation.nonBEAdjusterName,\r\n    },\r\n\r\n    { title: utils.string.t('claims.claimInformation.adjustorRef'), value: claimsInformation?.adjusterReference },\r\n    { title: utils.string.t('claims.claimInformation.complexity') + '*', value: claimsInformation?.complexity },\r\n    { title: utils.string.t('claims.claimInformation.referral') + '*', value: claimsInformation?.referralValue },\r\n    { title: utils.string.t('claims.claimInformation.rfiResponse') + '*', value: claimsInformation?.referralResponseDescription },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauClaim') + '*',\r\n      value: claimsInformation?.bordereauClaim === 1 ? 'Yes' : 'No',\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.bordereauPeriod') + '*',\r\n      value: claimsInformation?.bordereauClaim === 1 ? claimsInformation?.bordereauPeriod : 'NA',\r\n    },\r\n    { title: utils.string.t('claims.claimInformation.claimStatus') + '*', value: claimsInformation?.claimStatus },\r\n  ];\r\n  const policyInfo = [\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      value: policyInformation?.policyRef,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      value: policyInformation?.policyType,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.policyStatus'),\r\n      value: policyInformation?.statusCode,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.company'), value: policyInformation?.company, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.division'),\r\n      value: policyInformation?.division,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.riskDetails'),\r\n      value: policyInformation?.policyNote,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    { title: utils.string.t('claims.columns.claimsManagement.client'), value: policyInformation?.client, isLoading: isPolicyInfoLoading },\r\n    { title: utils.string.t('claims.columns.claimsManagement.insured'), value: policyInformation?.insured, isLoading: isPolicyInfoLoading },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      value: policyInformation?.reInsured,\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.inceptionDate'),\r\n      value:\r\n        policyInformation?.inceptionDate && moment(policyInformation?.inceptionDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.searchPolicy.columns.expiryDate'),\r\n      value: policyInformation?.expiryDate && moment(policyInformation?.expiryDate).format(config.ui.format.date.slashNumericDateAndTime),\r\n      isLoading: isPolicyInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      value: interests?.find((item) => item.policyInterestID === claimsInformation.policyInterestID)?.description,\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateInceptionDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateInceptionDate &&\r\n        moment(claimsInformation?.certificateInceptionDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateExpiryDate'),\r\n      value: claimsInformation?.isBordereau\r\n        ? claimsInformation?.certificateExpiryDate &&\r\n        moment(claimsInformation?.certificateExpiryDate).format(config.ui.format.date.slashNumericDateAndTime)\r\n        : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.certificateNumber'),\r\n      value: claimsInformation?.isBordereau ? claimsInformation?.certificateNumber : 'NA',\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.originalCurrency'),\r\n      value: claimsInformation?.originalCurrency && getCurrencyName(claimsInformation?.originalCurrency),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.settlementCurrency'),\r\n      value: claimsInformation?.settlementCurrencyCode && getCurrencyName(claimsInformation?.settlementCurrencyCode),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.claimInformation.country'),\r\n      value: claimsInformation?.settlementCountry && getCountryName(claimsInformation?.settlementCountry),\r\n      isLoading: isClaimInfoLoading,\r\n    },\r\n  ];\r\n  const underWritingGroupColumns = [\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n    },\r\n    {\r\n      id: 'percentage',\r\n      label: utils.string.t('claims.underWritingGroups.percentage'),\r\n    },\r\n    {\r\n      id: 'facility',\r\n      label: utils.string.t('claims.underWritingGroups.facility'),\r\n    },\r\n    {\r\n      id: 'facilityRef',\r\n      label: utils.string.t('claims.underWritingGroups.facilityRef'),\r\n    },\r\n    {\r\n      id: 'slipLeader',\r\n      label: utils.string.t('claims.underWritingGroups.slipLeader'),\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.underWritingGroups.ucr'),\r\n    },\r\n    {\r\n      id: 'narrative',\r\n      label: utils.string.t('claims.underWritingGroups.narrative'),\r\n    },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n    },\r\n  ];\r\n  const taskInfo = [\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\r\n      value: taskObj?.taskRef,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n      value: taskObj?.targetDueDate && moment(taskObj?.targetDueDate).format(config.ui.format.date.text),\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.status'),\r\n      value: taskObj?.status,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskType'),\r\n      value: taskObj?.taskType,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\r\n      value: taskObj?.assigneeFullName,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\r\n      value: taskObj?.priority,\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.dateCreated'),\r\n      value: taskObj?.createdOn && moment(taskObj?.createdOn).format(config.ui.format.date.text),\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n    {\r\n      title: utils.string.t('claims.processing.taskDetailsLabels.sanctionsCheckStatus'),\r\n      value: taskObj?.createdOn && moment(taskObj?.createdOn).format(config.ui.format.date.text),\r\n      isLoading: isTaskDetailsLoading,\r\n    },\r\n  ]\r\n  const history = useHistory();\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'TaskDetails' })();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'currencyPurchasedRadio',\r\n      type: 'radio',\r\n      value: currencyValue,\r\n      defaultValue: currencyValue,\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        { value: CURRENCY_PURCHASED_STATUS.Yes, label: utils.string.t('claims.processing.taskDetailsLabels.yes') },\r\n        { value: CURRENCY_PURCHASED_STATUS.No, label: utils.string.t('claims.processing.taskDetailsLabels.no') },\r\n        {\r\n          value: CURRENCY_PURCHASED_STATUS.notRequired,\r\n          label: utils.string.t('claims.processing.taskDetailsLabels.notRequired'),\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'sanctionsCheckState',\r\n      type: 'radio',\r\n      value: approvalStatus,\r\n      defaultValue: approvalStatus,\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        { value: SANCTIONS_CHECK_STATUSES.approved, label: utils.string.t('status.approved') },\r\n        { value: SANCTIONS_CHECK_STATUSES.rejected, label: utils.string.t('status.rejected') },\r\n      ],\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, watch, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  useEffect(() => {\r\n    if (currencyPurchased !== '') {\r\n      setValue('currencyPurchasedRadio', currencyPurchased);\r\n      setCurrencyValue(currencyPurchased);\r\n    }\r\n  }, [currencyPurchased]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const currencyPurchasedValue = watch('currencyPurchasedRadio');\r\n  const sanctionsCheckState = watch('sanctionsCheckState');\r\n\r\n  const handleClose = () => {\r\n    const params = { approvalStatus, taskId: taskObj?.taskId };\r\n    dispatch(closeSanctionsCheck(params, () => history.push(config.routes.claimsProcessing.root)));\r\n  };\r\n\r\n  return (\r\n    <TaskDetailsView\r\n      taskObj={taskObj}\r\n      fields={fields}\r\n      currencyPurchasedValue={currencyPurchasedValue}\r\n      sanctionsCheckState={sanctionsCheckState}\r\n      control={control}\r\n      currencyValue={currencyValue}\r\n      handlers={{ handleClose, setApprovalStatus, setCurrencyValue }}\r\n      lossInfo={lossInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isLossInfoLoading,\r\n      }))}\r\n      policyInfo={policyInfo}\r\n      claimInfo={claimInfo?.map((info) => ({\r\n        ...info,\r\n        isLoading: isClaimInfoLoading,\r\n      }))}\r\n      taskInfo={taskInfo}\r\n      underWritingInfo={underWritingInfo}\r\n      underWritingGroupColumns={underWritingGroupColumns}\r\n      isTaskDetailsLoading={isTaskDetailsLoading}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}