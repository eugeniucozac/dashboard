{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { authLogout, getDmsDocumentList } from 'stores';\nexport var getViewTableDocuments = function getViewTableDocuments(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.getViewTableDocuments'\n    };\n    var referenceId = params.referenceId,\n        sectionType = params.sectionType,\n        policyRef = params.policyRef,\n        instructionId = params.instructionId,\n        _params$documentTypeK = params.documentTypeKey,\n        documentTypeKey = _params$documentTypeK === void 0 ? '' : _params$documentTypeK,\n        parentLossRef = params.parentLossRef;\n\n    if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n      dispatch(getDmsWidgetDocumentsRequest(params));\n    } else {\n      dispatch(getViewTableDocumentsRequest(params));\n    }\n\n    if (!referenceId || !sectionType) {\n      dispatch(getViewTableDocumentsFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing or invalid params'\n      })));\n      return;\n    }\n\n    var isDmsFromPiRiskRef = documentTypeKey && utils.dmsFormatter.isDmsFromPiRiskRef(documentTypeKey);\n\n    var _ref = isDmsFromPiRiskRef && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey),\n        documentTypeDescription = _ref.documentTypeDescription;\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/list?srcApplication=BOTH\".concat(isDmsFromPiRiskRef ? '&documentTypes=' + documentTypeDescription : '').concat(parentLossRef ? '&parentLossRef=' + parentLossRef : ''),\n      data: [{\n        referenceId: referenceId,\n        sectionType: sectionType\n      }].concat(_toConsumableArray(policyRef && instructionId ? [{\n        referenceId: policyRef,\n        sectionType: constants.DMS_CONTEXT_POLICY\n      }, {\n        referenceId: instructionId,\n        sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION\n      }] : []))\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n        dispatch(getDmsWidgetDocumentsSuccess(data.data));\n      } else {\n        dispatch(getViewTableDocumentsSuccess(data.data));\n      }\n\n      if (data === null || data === void 0 ? void 0 : data.data) {\n        switch (sectionType) {\n          case 'Loss':\n            dispatch(getDmsDocumentList('LOSS_INFORMATION', data === null || data === void 0 ? void 0 : data.data));\n            break;\n\n          case 'Policy':\n            dispatch(getDmsDocumentList('LINK_POLICY', data === null || data === void 0 ? void 0 : data.data));\n            break;\n\n          case 'Claim':\n            if (!parentLossRef) {\n              dispatch(getDmsDocumentList('CLAIM_INFORMATION', data === null || data === void 0 ? void 0 : data.data));\n            } else {\n              var documentDetails = _toConsumableArray(data === null || data === void 0 ? void 0 : data.data);\n\n              var linkedFromLossList = [];\n              var claimsList = [];\n              documentDetails.forEach(function (doc) {\n                if (doc.isLinkedFromLoss) {\n                  linkedFromLossList.push(doc);\n                } else if (!doc.isLinkedFromLoss) {\n                  claimsList.push(doc);\n                }\n              });\n\n              if (linkedFromLossList === null || linkedFromLossList === void 0 ? void 0 : linkedFromLossList.length) {\n                dispatch(getDmsDocumentList('MANAGE_DOCUMENT_LOSS_INFORMATION', linkedFromLossList));\n                dispatch(getDmsDocumentList('LOSS_INFORMATION', linkedFromLossList));\n              }\n\n              if (claimsList === null || claimsList === void 0 ? void 0 : claimsList.length) {\n                dispatch(getDmsDocumentList('MANAGE_DOCUMENT_CLAIM_INFORMATION', claimsList));\n              }\n\n              dispatch(getDmsDocumentList('CLAIM_INFORMATION', data === null || data === void 0 ? void 0 : data.data));\n            }\n\n            break;\n\n          default:\n        }\n      }\n\n      return data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (dms.getViewTableDocuments)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n\n      if (params === null || params === void 0 ? void 0 : params.isFromDmsWidget) {\n        dispatch(getDmsWidgetDocumentsFailure(err));\n      } else {\n        dispatch(getViewTableDocumentsFailure(err));\n      }\n\n      return err;\n    });\n  };\n};\nexport var getViewTableDocumentsRequest = function getViewTableDocumentsRequest(payload) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST',\n    payload: payload\n  };\n};\nexport var getDmsWidgetDocumentsRequest = function getDmsWidgetDocumentsRequest(payload) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENT_REQUEST',\n    payload: payload\n  };\n};\nexport var getViewTableDocumentsSuccess = function getViewTableDocumentsSuccess(responseData) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getDmsWidgetDocumentsSuccess = function getDmsWidgetDocumentsSuccess(responseData) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENTS_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getViewTableDocumentsFailure = function getViewTableDocumentsFailure(error) {\n  return {\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};\nexport var getDmsWidgetDocumentsFailure = function getDmsWidgetDocumentsFailure(error) {\n  return {\n    type: 'DMS_WIDGET_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.getViewTableDocuments.js"],"names":["utils","constants","authLogout","getDmsDocumentList","getViewTableDocuments","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","referenceId","sectionType","policyRef","instructionId","documentTypeKey","parentLossRef","isFromDmsWidget","getDmsWidgetDocumentsRequest","getViewTableDocumentsRequest","getViewTableDocumentsFailure","message","isDmsFromPiRiskRef","dmsFormatter","getDocumentTypeInfo","documentTypeDescription","api","post","token","accessToken","dmsService","path","data","DMS_CONTEXT_POLICY","DMS_CONTEXT_PROCESSING_INSTRUCTION","then","response","handleResponse","json","handleNewData","getDmsWidgetDocumentsSuccess","getViewTableDocumentsSuccess","documentDetails","linkedFromLossList","claimsList","forEach","doc","isLinkedFromLoss","push","length","catch","err","handleError","handleUnauthorized","getDmsWidgetDocumentsFailure","payload","type","responseData","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { authLogout, getDmsDocumentList } from 'stores';\r\n\r\nexport const getViewTableDocuments = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.getViewTableDocuments',\r\n  };\r\n\r\n  const { referenceId, sectionType, policyRef, instructionId, documentTypeKey = '',  parentLossRef } = params;\r\n\r\n  if(params?.isFromDmsWidget) {\r\n    dispatch(getDmsWidgetDocumentsRequest(params));\r\n  } else {\r\n    dispatch(getViewTableDocumentsRequest(params));\r\n  }\r\n\r\n  if (!referenceId || !sectionType) {\r\n    dispatch(getViewTableDocumentsFailure({ ...defaultError, message: 'Missing or invalid params' }));\r\n    return;\r\n  }\r\n\r\n  const isDmsFromPiRiskRef = documentTypeKey && utils.dmsFormatter.isDmsFromPiRiskRef(documentTypeKey);\r\n  const { documentTypeDescription } = isDmsFromPiRiskRef && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey);\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/list?srcApplication=BOTH${isDmsFromPiRiskRef ? '&documentTypes=' + documentTypeDescription : ''}${parentLossRef ? '&parentLossRef=' + parentLossRef :''}`,\r\n      data: [\r\n        {\r\n          referenceId: referenceId,\r\n          sectionType: sectionType,\r\n        },\r\n        ...(policyRef && instructionId\r\n          ? [\r\n              {\r\n                referenceId: policyRef,\r\n                sectionType: constants.DMS_CONTEXT_POLICY,\r\n              },\r\n              {\r\n                referenceId: instructionId,\r\n                sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n              },\r\n            ]\r\n          : []),\r\n      ],\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      if(params?.isFromDmsWidget) {\r\n        dispatch(getDmsWidgetDocumentsSuccess(data.data));\r\n      } else {\r\n        dispatch(getViewTableDocumentsSuccess(data.data));\r\n      }\r\n      if (data?.data) {\r\n        switch(sectionType) {\r\n          case 'Loss':\r\n            dispatch(getDmsDocumentList('LOSS_INFORMATION', data?.data));\r\n            break;\r\n\r\n          case 'Policy':\r\n            dispatch(getDmsDocumentList('LINK_POLICY', data?.data));\r\n            break;\r\n\r\n          case 'Claim':\r\n            if(!parentLossRef) {\r\n              dispatch(getDmsDocumentList('CLAIM_INFORMATION', data?.data));\r\n            } else {\r\n              const documentDetails = [...data?.data];\r\n              const linkedFromLossList = [];\r\n              const claimsList = [];\r\n              documentDetails.forEach((doc) => {\r\n                if(doc.isLinkedFromLoss) {\r\n                  linkedFromLossList.push(doc)\r\n                } else if (!doc.isLinkedFromLoss) {\r\n                  claimsList.push(doc)\r\n                }\r\n              });\r\n              if (linkedFromLossList?.length) {\r\n                dispatch(getDmsDocumentList('MANAGE_DOCUMENT_LOSS_INFORMATION', linkedFromLossList));\r\n                dispatch(getDmsDocumentList('LOSS_INFORMATION', linkedFromLossList));\r\n              }\r\n              if (claimsList?.length) {\r\n                dispatch(getDmsDocumentList('MANAGE_DOCUMENT_CLAIM_INFORMATION', claimsList));\r\n              }\r\n              dispatch(getDmsDocumentList('CLAIM_INFORMATION', data?.data));\r\n            }\r\n            break;\r\n\r\n          default:\r\n        }\r\n      }\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (dms.getViewTableDocuments)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      if(params?.isFromDmsWidget) {\r\n        dispatch(getDmsWidgetDocumentsFailure(err));\r\n      } else {\r\n        dispatch(getViewTableDocumentsFailure(err));\r\n      }\r\n      return err;\r\n    })\r\n};\r\n\r\nexport const getViewTableDocumentsRequest = (payload) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsRequest = (payload) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENT_REQUEST',\r\n    payload\r\n  }\r\n}\r\n\r\nexport const getViewTableDocumentsSuccess = (responseData) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsSuccess = (responseData) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENTS_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n}\r\n\r\nexport const getViewTableDocumentsFailure = (error) => {\r\n  return {\r\n    type: 'DMS_VIEW_TABLE_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getDmsWidgetDocumentsFailure = (error) => {\r\n  return {\r\n    type: 'DMS_WIDGET_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}