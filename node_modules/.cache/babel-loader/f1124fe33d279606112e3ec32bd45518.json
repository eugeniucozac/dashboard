{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossInformation = function getLossInformation(_ref) {\n  var lossDetailsId = _ref.lossDetailsId,\n      sourceIdParams = _ref.sourceIdParams,\n      divisionIdParam = _ref.divisionIdParam,\n      claimRefParam = _ref.claimRefParam,\n      _ref$viewLoader = _ref.viewLoader,\n      viewLoader = _ref$viewLoader === void 0 ? true : _ref$viewLoader;\n  return function (dispatch, getState) {\n    console.log('getLossInformation'); // prettier-ignore\n\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossInformation'\n    };\n    var requestObj = {\n      lossDetailsId: lossDetailsId !== null && lossDetailsId !== void 0 ? lossDetailsId : '0',\n      sourceIdParams: sourceIdParams\n    };\n    dispatch(getLossInformationRequest(requestObj));\n    viewLoader && dispatch(addLoader('getLossInformation'));\n    var sourceId = sourceIdParams ? sourceIdParams : '';\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/loss/\".concat(lossDetailsId !== null && lossDetailsId !== void 0 ? lossDetailsId : '0'),\n      params: {\n        sourceId: sourceId,\n        divisionId: divisionIdParam ? divisionIdParam : '',\n        claimRef: claimRefParam ? claimRefParam : ''\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getLossInformationSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getLossInformationFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      viewLoader && dispatch(removeLoader('getLossInformation'));\n    });\n  };\n};\nexport var getLossInformationRequest = function getLossInformationRequest(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_REQUEST',\n    payload: data\n  };\n};\nexport var getLossInformationSuccess = function getLossInformationSuccess(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossInformationFailure = function getLossInformationFailure(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossInformation.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossInformation","lossDetailsId","sourceIdParams","divisionIdParam","claimRefParam","viewLoader","dispatch","getState","console","log","auth","user","endpoint","config","vars","defaultError","file","requestObj","getLossInformationRequest","sourceId","api","get","token","accessToken","claimService","path","params","divisionId","claimRef","then","response","handleResponse","data","getLossInformationSuccess","catch","err","getLossInformationFailure","handleUnauthorized","finally","type","payload"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossInformation =\r\n  ({ lossDetailsId, sourceIdParams, divisionIdParam, claimRefParam, viewLoader = true }) =>\r\n  (dispatch, getState) => {\r\n    console.log('getLossInformation');\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getLossInformation',\r\n    };\r\n\r\n    let requestObj = {\r\n      lossDetailsId: lossDetailsId ?? '0',\r\n      sourceIdParams: sourceIdParams,\r\n    };\r\n    dispatch(getLossInformationRequest(requestObj));\r\n    viewLoader && dispatch(addLoader('getLossInformation'));\r\n    const sourceId = sourceIdParams ? sourceIdParams : '';\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: `api/data/loss/${lossDetailsId ?? '0'}`,\r\n        params: {\r\n          sourceId,\r\n          divisionId: divisionIdParam ? divisionIdParam : '',\r\n          claimRef: claimRefParam ? claimRefParam : '',\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => {\r\n        dispatch(getLossInformationSuccess(data.data));\r\n        return data.data;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getLossInformationFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        viewLoader && dispatch(removeLoader('getLossInformation'));\r\n      });\r\n  };\r\n\r\nexport const getLossInformationRequest = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossInformationSuccess = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossInformationFailure = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}