{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ConfrmCreateAdhock\\\\ConfrmCreateAdhock.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport moment from 'moment';\nimport { useDispatch, useSelector } from 'react-redux';\nimport ConfrmCreateAdhockView from './ConfrmCreateAdhock.view';\nimport { selectAdhocTaskData, selectPriorities, selectClaimsAssignedToUsers, condirmAdHocTask, hideModal } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nConfrmCreateAdhock.propTypes = {\n  reminderList: PropTypes.array.isRequired,\n  claim: PropTypes.object.isRequired\n};\nConfrmCreateAdhock.defaultProps = {\n  reminderList: [],\n  claim: {}\n};\n\nfunction ConfrmCreateAdhock(props) {\n  _s();\n\n  var _users$items, _users$items$find, _props$claim, _priorities$find, _reminderList$find;\n\n  var taskDetails = useSelector(selectAdhocTaskData);\n  var priorities = useSelector(selectPriorities);\n  var users = useSelector(selectClaimsAssignedToUsers);\n  var dispatch = useDispatch();\n  var reminderList = props === null || props === void 0 ? void 0 : props.reminderList;\n  var assignedTo = users === null || users === void 0 ? void 0 : (_users$items = users.items) === null || _users$items === void 0 ? void 0 : (_users$items$find = _users$items.find(function (_ref) {\n    var _taskDetails$sendToUs;\n\n    var email = _ref.email;\n    return (email === null || email === void 0 ? void 0 : email.toLowerCase()) === (taskDetails === null || taskDetails === void 0 ? void 0 : (_taskDetails$sendToUs = taskDetails.sendToUser) === null || _taskDetails$sendToUs === void 0 ? void 0 : _taskDetails$sendToUs.toLowerCase());\n  })) === null || _users$items$find === void 0 ? void 0 : _users$items$find.fullName;\n  var adHocTaskInfo = {\n    rowOne: [{\n      title: utils.string.t('claims.processing.taskDetailsLabels.claimRef'),\n      value: props === null || props === void 0 ? void 0 : (_props$claim = props.claim) === null || _props$claim === void 0 ? void 0 : _props$claim.claimReference\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\n      value: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.taskRef\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.taskName'),\n      value: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.name\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\n      value: priorities === null || priorities === void 0 ? void 0 : (_priorities$find = priorities.find(function (_ref2) {\n        var id = _ref2.id;\n        return id === (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.priority);\n      })) === null || _priorities$find === void 0 ? void 0 : _priorities$find.description\n    }],\n    rowTwo: [{\n      title: utils.string.t('claims.processing.taskDetailsLabels.team'),\n      value: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.sendToTeam\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\n      value: assignedTo\n    }],\n    rowThree: [{\n      title: utils.string.t('claims.processing.taskDetailsLabels.description'),\n      value: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.description\n    }],\n    rowDiarise: [{\n      title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\n      value: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.dueDate) ? moment(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.dueDate).utcOffset(0).format(config.ui.format.date.text) : ''\n    }, {\n      title: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\n      value: reminderList === null || reminderList === void 0 ? void 0 : (_reminderList$find = reminderList.find(function (_ref3) {\n        var id = _ref3.id;\n        return (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.reminder) === id;\n      })) === null || _reminderList$find === void 0 ? void 0 : _reminderList$find.name\n    }]\n  };\n\n  var submitTask = function submitTask() {\n    var confirmActionPayload = {\n      bpmProcessId: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.processInstanceId,\n      sendToTeam: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.sendToTeam,\n      sendToUser: taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.sendToUser\n    };\n    dispatch(condirmAdHocTask(confirmActionPayload, taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.id)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === 'OK') {\n        dispatch(hideModal());\n      }\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(ConfrmCreateAdhockView, _objectSpread(_objectSpread({}, props), {}, {\n      adHocTaskInfo: adHocTaskInfo,\n      submitTask: submitTask\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(ConfrmCreateAdhock, \"UbtdP3Yo1ftaq5OWGxbEt7e/Yfo=\", false, function () {\n  return [useSelector, useSelector, useSelector, useDispatch];\n});\n\n_c = ConfrmCreateAdhock;\nexport default ConfrmCreateAdhock;\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfrmCreateAdhock\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ConfrmCreateAdhock/ConfrmCreateAdhock.js"],"names":["React","PropTypes","moment","useDispatch","useSelector","ConfrmCreateAdhockView","selectAdhocTaskData","selectPriorities","selectClaimsAssignedToUsers","condirmAdHocTask","hideModal","config","utils","ConfrmCreateAdhock","propTypes","reminderList","array","isRequired","claim","object","defaultProps","props","taskDetails","priorities","users","dispatch","assignedTo","items","find","email","toLowerCase","sendToUser","fullName","adHocTaskInfo","rowOne","title","string","t","value","claimReference","taskRef","name","id","priority","description","rowTwo","sendToTeam","rowThree","rowDiarise","dueDate","utcOffset","format","ui","date","text","reminder","submitTask","confirmActionPayload","bpmProcessId","processInstanceId","then","response","status"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport moment from 'moment';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\nimport ConfrmCreateAdhockView from './ConfrmCreateAdhock.view';\r\nimport { selectAdhocTaskData, selectPriorities, selectClaimsAssignedToUsers, condirmAdHocTask, hideModal } from 'stores';\r\n\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nConfrmCreateAdhock.propTypes = {\r\n  reminderList: PropTypes.array.isRequired,\r\n  claim: PropTypes.object.isRequired,\r\n};\r\nConfrmCreateAdhock.defaultProps = {\r\n  reminderList: [],\r\n  claim: {},\r\n};\r\nfunction ConfrmCreateAdhock(props) {\r\n  const taskDetails = useSelector(selectAdhocTaskData);\r\n  const priorities = useSelector(selectPriorities);\r\n  const users = useSelector(selectClaimsAssignedToUsers);\r\n  const dispatch = useDispatch();\r\n  const reminderList = props?.reminderList;\r\n\r\n  const assignedTo = users?.items?.find(({ email }) => email?.toLowerCase() === taskDetails?.sendToUser?.toLowerCase())?.fullName;\r\n  const adHocTaskInfo = {\r\n    rowOne: [\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.claimRef'),\r\n        value: props?.claim?.claimReference,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.taskRef'),\r\n        value: taskDetails?.taskRef,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.taskName'),\r\n        value: taskDetails?.name,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.priority'),\r\n        value: priorities?.find(({ id }) => id === taskDetails?.priority)?.description,\r\n      },\r\n    ],\r\n    rowTwo: [\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.team'),\r\n        value: taskDetails?.sendToTeam,\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.assignedTo'),\r\n        value: assignedTo,\r\n      },\r\n    ],\r\n    rowThree: [\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.description'),\r\n        value: taskDetails?.description,\r\n      },\r\n    ],\r\n    rowDiarise: [\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'),\r\n        value: taskDetails?.dueDate ? moment(taskDetails?.dueDate).utcOffset(0).format(config.ui.format.date.text) : '',\r\n      },\r\n      {\r\n        title: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\r\n        value: reminderList?.find(({ id }) => taskDetails?.reminder === id)?.name,\r\n      },\r\n    ],\r\n  };\r\n\r\n  const submitTask = () => {\r\n    const confirmActionPayload = {\r\n      bpmProcessId: taskDetails?.processInstanceId,\r\n      sendToTeam: taskDetails?.sendToTeam,\r\n      sendToUser: taskDetails?.sendToUser,\r\n    };\r\n    dispatch(condirmAdHocTask(confirmActionPayload, taskDetails?.id)).then((response) => {\r\n      if (response?.status === 'OK') {\r\n        dispatch(hideModal());\r\n      }\r\n    });\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <ConfrmCreateAdhockView {...props} adHocTaskInfo={adHocTaskInfo} submitTask={submitTask} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default ConfrmCreateAdhock;\r\n"]},"metadata":{},"sourceType":"module"}