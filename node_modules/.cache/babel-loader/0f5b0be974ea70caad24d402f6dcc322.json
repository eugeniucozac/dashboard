{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormAutocompleteMui\\\\LabelAndCreate.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport { useDispatch } from 'react-redux';\nimport { Button } from 'components';\nimport { Add } from '@material-ui/icons';\nimport VisibilityIcon from '@material-ui/icons/Visibility'; // app\n\nimport * as utils from 'utils';\nimport { showModal } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar LabelAndCreate = function LabelAndCreate(_ref) {\n  _s();\n\n  var label = _ref.label,\n      name = _ref.name,\n      setValue = _ref.setValue,\n      value = _ref.value,\n      targetField = _ref.targetField;\n  var dispatch = useDispatch();\n  var hasValueSet = value ? true : false;\n  var handleCreate = {\n    clientId: function clientId() {\n      hasValueSet ? dispatch(showModal({\n        component: 'EDIT_PRODUCTS_CLIENT',\n        props: {\n          title: 'products.admin.clients.edit',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            id: value === null || value === void 0 ? void 0 : value.value,\n            isCreateClientModal: true,\n            isEdit: true,\n            submitHandler: function submitHandler(response) {\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      })) : dispatch(showModal({\n        component: 'ADD_PRODUCTS_CLIENT',\n        props: {\n          title: 'risks.createdNewClient',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            isCreateClientModal: true,\n            submitHandler: function submitHandler(response) {\n              var value = {\n                value: response.id,\n                label: (response === null || response === void 0 ? void 0 : response.name) ? response.name : ''\n              };\n              utils.generic.isFunction(setValue) && setValue(name, value);\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      }));\n    },\n    insuredId: function insuredId() {\n      hasValueSet ? dispatch(showModal({\n        component: 'EDIT_PRODUCTS_INSURED',\n        props: {\n          title: 'products.admin.insureds.edit',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            id: value === null || value === void 0 ? void 0 : value.value,\n            reInsured: false,\n            isCreateInsuredModal: true,\n            isEdit: true,\n            submitHandler: function submitHandler(response) {\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      })) : dispatch(showModal({\n        component: 'ADD_INSURED',\n        props: {\n          title: 'risks.createdNewInsured',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            submitHandler: function submitHandler(response) {\n              var value = {\n                value: response.id,\n                label: (response === null || response === void 0 ? void 0 : response.name) ? response.name : ''\n              };\n              utils.generic.isFunction(setValue) && setValue(name, value);\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      }));\n    },\n    reinsuredId: function reinsuredId() {\n      hasValueSet ? dispatch(showModal({\n        component: 'EDIT_PRODUCTS_INSURED',\n        props: {\n          title: 'products.admin.reInsureds.edit',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            id: value === null || value === void 0 ? void 0 : value.value,\n            reInsured: true,\n            isCreateInsuredModal: true,\n            isEdit: true,\n            submitHandler: function submitHandler(response) {\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      })) : dispatch(showModal({\n        component: 'ADD_INSURED',\n        props: {\n          title: 'risks.createdNewReInsured',\n          fullWidth: true,\n          maxWidth: 'lg',\n          componentProps: {\n            reInsured: true,\n            submitHandler: function submitHandler(response) {\n              var value = {\n                value: response.id,\n                label: (response === null || response === void 0 ? void 0 : response.name) ? response.name : ''\n              };\n              utils.generic.isFunction(setValue) && setValue(name, value);\n              utils.generic.isFunction(setValue) && setValue(targetField, response);\n            }\n          }\n        }\n      }));\n    }\n  };\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    style: {\n      display: 'flex',\n      justifyContent: 'space-between',\n      alignItems: 'flex-end'\n    },\n    children: [/*#__PURE__*/_jsxDEV(\"span\", {\n      children: label\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 146,\n      columnNumber: 7\n    }, _this), /*#__PURE__*/_jsxDEV(Button, {\n      icon: hasValueSet ? VisibilityIcon : Add,\n      size: \"xsmall\",\n      text: hasValueSet ? \"View\" : \"Add new\",\n      variant: \"contained\",\n      color: \"primary\",\n      onClick: function onClick() {\n        return utils.generic.isFunction(handleCreate[name]) && handleCreate[name]();\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 145,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(LabelAndCreate, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\nLabelAndCreate.displayName = \"LabelAndCreate\";\n_c = LabelAndCreate;\nLabelAndCreate.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LabelAndCreate\"\n};\nexport default LabelAndCreate;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormAutocompleteMui\\\\LabelAndCreate.js\"] = {\n    name: \"LabelAndCreate\",\n    docgenInfo: LabelAndCreate.__docgenInfo,\n    path: \"src\\\\components\\\\FormAutocompleteMui\\\\LabelAndCreate.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LabelAndCreate\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormAutocompleteMui/LabelAndCreate.js"],"names":["useDispatch","Button","Add","VisibilityIcon","utils","showModal","LabelAndCreate","label","name","setValue","value","targetField","dispatch","hasValueSet","handleCreate","clientId","component","props","title","fullWidth","maxWidth","componentProps","id","isCreateClientModal","isEdit","submitHandler","response","generic","isFunction","insuredId","reInsured","isCreateInsuredModal","reinsuredId","display","justifyContent","alignItems"],"mappings":"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","sourcesContent":["import { useDispatch } from 'react-redux';\r\nimport { Button } from 'components';\r\nimport { Add } from '@material-ui/icons';\r\nimport VisibilityIcon from '@material-ui/icons/Visibility';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { showModal } from 'stores';\r\n\r\nconst LabelAndCreate = ({ label, name, setValue, value, targetField }) => {\r\n  const dispatch = useDispatch();\r\n  const hasValueSet = value ? true : false;\r\n\r\n  const handleCreate = {\r\n    clientId: () => {\r\n      hasValueSet\r\n        ? dispatch(\r\n            showModal({\r\n              component: 'EDIT_PRODUCTS_CLIENT',\r\n              props: {\r\n                title: 'products.admin.clients.edit',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  id: value?.value,\r\n                  isCreateClientModal: true,\r\n                  isEdit: true,\r\n                  submitHandler: (response) => {\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          )\r\n        : dispatch(\r\n            showModal({\r\n              component: 'ADD_PRODUCTS_CLIENT',\r\n              props: {\r\n                title: 'risks.createdNewClient',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  isCreateClientModal: true,\r\n                  submitHandler: (response) => {\r\n                    const value = {\r\n                      value: response.id,\r\n                      label: response?.name ? response.name : '',\r\n                    };\r\n                    utils.generic.isFunction(setValue) && setValue(name, value);\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          );\r\n    },\r\n    insuredId: () => {\r\n      hasValueSet\r\n        ? dispatch(\r\n            showModal({\r\n              component: 'EDIT_PRODUCTS_INSURED',\r\n              props: {\r\n                title: 'products.admin.insureds.edit',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  id: value?.value,\r\n                  reInsured: false,\r\n                  isCreateInsuredModal: true,\r\n                  isEdit: true,\r\n                  submitHandler: (response) => {\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          )\r\n        : dispatch(\r\n            showModal({\r\n              component: 'ADD_INSURED',\r\n              props: {\r\n                title: 'risks.createdNewInsured',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  submitHandler: (response) => {\r\n                    const value = {\r\n                      value: response.id,\r\n                      label: response?.name ? response.name : '',\r\n                    };\r\n                    utils.generic.isFunction(setValue) && setValue(name, value);\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          );\r\n    },\r\n    reinsuredId: () => {\r\n      hasValueSet\r\n        ? dispatch(\r\n            showModal({\r\n              component: 'EDIT_PRODUCTS_INSURED',\r\n              props: {\r\n                title: 'products.admin.reInsureds.edit',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  id: value?.value,\r\n                  reInsured: true,\r\n                  isCreateInsuredModal: true,\r\n                  isEdit: true,\r\n                  submitHandler: (response) => {\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          )\r\n        : dispatch(\r\n            showModal({\r\n              component: 'ADD_INSURED',\r\n              props: {\r\n                title: 'risks.createdNewReInsured',\r\n                fullWidth: true,\r\n                maxWidth: 'lg',\r\n                componentProps: {\r\n                  reInsured: true,\r\n                  submitHandler: (response) => {\r\n                    const value = {\r\n                      value: response.id,\r\n                      label: response?.name ? response.name : '',\r\n                    };\r\n                    utils.generic.isFunction(setValue) && setValue(name, value);\r\n                    utils.generic.isFunction(setValue) && setValue(targetField, response);\r\n                  },\r\n                },\r\n              },\r\n            })\r\n          );\r\n    },\r\n  };\r\n\r\n  return (\r\n    <div style={{ display: 'flex', justifyContent: 'space-between', alignItems: 'flex-end' }}>\r\n      <span>{label}</span>\r\n\r\n      <Button\r\n        icon={hasValueSet ? VisibilityIcon : Add}\r\n        size=\"xsmall\"\r\n        text={hasValueSet ? `View` : `Add new`}\r\n        variant=\"contained\"\r\n        color=\"primary\"\r\n        onClick={() => utils.generic.isFunction(handleCreate[name]) && handleCreate[name]()}\r\n      />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default LabelAndCreate;\r\n"]},"metadata":{},"sourceType":"module"}