{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, getUser, getReferenceData, getReferenceDataNew, getUserData, getReferenceDataNewBpm, getNewOdsReferenceTypes } from 'stores';\nimport config from 'config';\nimport get from 'lodash/get';\nimport * as utils from 'utils';\n\nvar getExtendedOrBasicEdgeUserData = function getExtendedOrBasicEdgeUserData(dispatch, params) {\n  return function () {\n    // try to get user from Extended Edge API\n    // & default Edge API and load respective reference API's\n    var promises = [dispatch(getUserData(params)).then(function (res) {\n      return Promise.resolve(res);\n    }).catch(function (err) {\n      return Promise.reject(err);\n    }), dispatch(getUser(params)).then(function (res) {\n      return Promise.resolve(res);\n    }).catch(function (err) {\n      return Promise.reject(err);\n    })];\n    return Promise.allSettled(promises).then(function (results) {\n      return Promise.resolve(results);\n    });\n  };\n};\n\nvar checkUserServiceData = function checkUserServiceData(dispatch, userData, params) {\n  if (utils.generic.isValidArray(userData, true)) {\n    var _userData$, _userData$2;\n\n    var extendedUser = userData[0].status === 'fulfilled' ? (_userData$ = userData[0]) === null || _userData$ === void 0 ? void 0 : _userData$.value : null;\n    var currentEdgeUser = userData[1].status === 'fulfilled' ? (_userData$2 = userData[1]) === null || _userData$2 === void 0 ? void 0 : _userData$2.value : null;\n\n    if (utils.user.isExtended(extendedUser) && utils.user.isCurrentEdge(currentEdgeUser)) {\n      // if user is available as both EXTENDED EDGE user & CURRENT EDGE user\n      dispatch(getReferenceData());\n      dispatch(getReferenceDataNew());\n      dispatch(getReferenceDataNewBpm());\n      dispatch(getNewOdsReferenceTypes()); // after login, redirect to user CURRENT EDGE landing page\n\n      if ((params === null || params === void 0 ? void 0 : params.isLogin) && utils.generic.isFunction(params === null || params === void 0 ? void 0 : params.history.push)) {\n        params.history.push(utils.user.getLandingPage(currentEdgeUser));\n      }\n    } else if (utils.user.isExtended(extendedUser) && !utils.user.isCurrentEdge(currentEdgeUser)) {\n      var _params$history;\n\n      // if user only an EXTENDED EDGE user\n      dispatch(getReferenceDataNew());\n      dispatch(getReferenceDataNewBpm());\n      dispatch(getNewOdsReferenceTypes()); // after login, redirect to user EXTENDED EDGE landing page\n\n      if ((params === null || params === void 0 ? void 0 : params.isLogin) && utils.generic.isFunction(params === null || params === void 0 ? void 0 : (_params$history = params.history) === null || _params$history === void 0 ? void 0 : _params$history.push)) {\n        params.history.push((params === null || params === void 0 ? void 0 : params.redirectUrl) || utils.user.getLandingPage(extendedUser));\n      }\n    } else if (!utils.user.isExtended(extendedUser) && utils.user.isCurrentEdge(currentEdgeUser)) {\n      // if user only an CURRENT EDGE user\n      dispatch(getReferenceData()); // after login, redirect to user CURRENT EDGE landing page\n\n      if ((params === null || params === void 0 ? void 0 : params.isLogin) && utils.generic.isFunction(params === null || params === void 0 ? void 0 : params.history.push)) {\n        params.history.push(utils.user.getLandingPage(currentEdgeUser));\n      }\n    }\n  }\n};\n\nexport var reuseExistingToken = function reuseExistingToken(history) {\n  return function (dispatch) {\n    dispatch(addLoader('reuseExistingToken'));\n    var localStorageAuth = utils.user.getLocalStorageAuth();\n    var authData = {\n      accessToken: localStorageAuth.accessToken,\n      idToken: localStorageAuth.idToken,\n      expiresIn: localStorageAuth.expiresIn,\n      expiresAt: localStorageAuth.expiresAt\n    };\n    dispatch(setSessionState(authData)).then(getExtendedOrBasicEdgeUserData(dispatch)).then(function (userObj) {\n      checkUserServiceData(dispatch, userObj);\n      dispatch(removeLoader('reuseExistingToken')); //For extended user new ref data api is created\n\n      if (utils.user.isExtended(userObj)) {\n        dispatch(getReferenceDataNew());\n        dispatch(getReferenceDataNewBpm());\n      } else {\n        dispatch(getReferenceData());\n      }\n    }).catch(function (err) {\n      dispatch(authFailure('Error', _objectSpread({}, err)));\n      history.replace(config.routes.login.root);\n    });\n  };\n};\nexport var renewAuthentication = function renewAuthentication(auth0, history) {\n  return function (dispatch) {\n    dispatch(addLoader('renewAuthentication'));\n    dispatch(authInProgress());\n    dispatch(renewAuth0Token(auth0)).then(function (response) {\n      return dispatch(setSessionState(response));\n    }).then(getExtendedOrBasicEdgeUserData(dispatch)).then(function (userObj) {\n      checkUserServiceData(dispatch, userObj);\n      dispatch(removeLoader('renewAuthentication')); //For extended user new ref data api is created\n\n      if (utils.user.isExtended(userObj)) {\n        dispatch(getReferenceDataNew());\n        dispatch(getReferenceDataNewBpm());\n      } else {\n        dispatch(getReferenceData());\n      }\n    }).catch(function (err) {\n      dispatch(authFailure('Error', _objectSpread({}, err)));\n      history.replace(config.routes.login.root);\n    });\n  };\n};\nexport var parseAuth0Hash = function parseAuth0Hash(auth0, history, locationHash, redirectUrl) {\n  return function (dispatch) {\n    dispatch(authInProgress());\n    dispatch(parseHash(auth0, locationHash)).then(function (response) {\n      return dispatch(setSessionState(response, true, history, redirectUrl));\n    }).then(getExtendedOrBasicEdgeUserData(dispatch, {\n      history: history,\n      redirectUrl: redirectUrl,\n      isLogin: true\n    })).then(function (userObj) {\n      checkUserServiceData(dispatch, userObj, {\n        history: history,\n        redirectUrl: redirectUrl,\n        isLogin: true\n      });\n    }).catch(function (err) {\n      dispatch(authFailure('Error', _objectSpread({}, err)));\n      history.replace(config.routes.home.root);\n    });\n  };\n};\nexport var renewAuth0Token = function renewAuth0Token(auth0) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      auth0.checkSession({}, function (err, authResult) {\n        if (authResult && authResult.accessToken && authResult.idToken) {\n          resolve(authResult);\n        } else {\n          reject(_objectSpread(_objectSpread({}, err), {}, {\n            file: 'stores/auth.actions',\n            message: 'Check session error'\n          }));\n          dispatch(authFailure(\"Authentication: Could not get a new token (\".concat(err.error, \": \").concat(err.error_description, \").\")));\n        }\n      });\n    });\n  };\n};\nexport var setSessionState = function setSessionState(authResult, isCallback, history, redirectUrl) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      if (isCallback) {\n        dispatch(authSuccess(authResult));\n        resolve(authResult);\n      } else {\n        dispatch(authSuccess(authResult));\n        resolve(authResult);\n      }\n    });\n  };\n};\nexport var parseHash = function parseHash(auth0, locationHash) {\n  return function (dispatch) {\n    return new Promise(function (resolve, reject) {\n      if (/access_token|id_token|error/.test(locationHash)) {\n        auth0.parseHash(function (err, result) {\n          if (result && result.accessToken && result.idToken) {\n            resolve(result);\n          } else {\n            reject(_objectSpread(_objectSpread({}, err), {}, {\n              file: 'stores/auth.actions',\n              message: 'Unknown error.'\n            }));\n          }\n        });\n      } else {\n        reject({\n          file: 'stores/auth.actions',\n          message: 'Location hash is missing required parameters.'\n        });\n      }\n    });\n  };\n};\nexport var authLogin = function authLogin(auth0) {\n  var theme = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n  var themeObj = {\n    logo: get(theme, 'logo' || ''),\n    primaryColor: get(theme, 'primaryColor' || '')\n  };\n  auth0.authorize({\n    prompt: 'login',\n    language: config.locale,\n    theme: themeObj\n  });\n  return {\n    type: 'AUTH_LOGIN'\n  };\n};\nexport var authLogout = function authLogout(auth0) {\n  localStorage.removeItem('edge-auth');\n\n  if (auth0 && utils.generic.isFunction(auth0.logout)) {\n    auth0.logout({\n      returnTo: config.auth.redirectLogout,\n      client_id: config.auth.clientID\n    });\n  } else {\n    window.location.href = config.auth.redirectLogout;\n  }\n\n  return {\n    type: 'AUTH_LOGOUT'\n  };\n};\nexport var authInProgress = function authInProgress() {\n  return {\n    type: 'AUTH_IN_PROGRESS'\n  };\n};\nexport var authSuccess = function authSuccess(payload) {\n  var expiresAt = payload.expiresAt || payload.expiresIn * 1000 + Date.now();\n  var edgeAuth = {\n    accessToken: payload.accessToken,\n    idToken: payload.idToken,\n    expiresIn: payload.expiresIn,\n    expiresAt: expiresAt,\n    expiresAtDate: utils.string.t('format.date', {\n      value: {\n        date: expiresAt,\n        format: 'ddd, MMMM Do YYYY, h:mm:ss a'\n      }\n    })\n  };\n  localStorage.setItem('edge-auth', JSON.stringify(edgeAuth));\n  return {\n    type: 'AUTH_SUCCESS',\n    payload: {\n      accessToken: payload.accessToken,\n      idToken: payload.idToken,\n      expiresAt: expiresAt\n    }\n  };\n};\nexport var authFailure = function authFailure(error) {\n  localStorage.removeItem('edge-auth');\n  return {\n    type: 'AUTH_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/user/user.actions.auth.js"],"names":["addLoader","removeLoader","getUser","getReferenceData","getReferenceDataNew","getUserData","getReferenceDataNewBpm","getNewOdsReferenceTypes","config","get","utils","getExtendedOrBasicEdgeUserData","dispatch","params","promises","then","res","Promise","resolve","catch","err","reject","allSettled","results","checkUserServiceData","userData","generic","isValidArray","extendedUser","status","value","currentEdgeUser","user","isExtended","isCurrentEdge","isLogin","isFunction","history","push","getLandingPage","redirectUrl","reuseExistingToken","localStorageAuth","getLocalStorageAuth","authData","accessToken","idToken","expiresIn","expiresAt","setSessionState","userObj","authFailure","replace","routes","login","root","renewAuthentication","auth0","authInProgress","renewAuth0Token","response","parseAuth0Hash","locationHash","parseHash","home","checkSession","authResult","file","message","error","error_description","isCallback","authSuccess","test","result","authLogin","theme","themeObj","logo","primaryColor","authorize","prompt","language","locale","type","authLogout","localStorage","removeItem","logout","returnTo","auth","redirectLogout","client_id","clientID","window","location","href","payload","Date","now","edgeAuth","expiresAtDate","string","t","date","format","setItem","JSON","stringify"],"mappings":"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","sourcesContent":["import {\r\n  addLoader,\r\n  removeLoader,\r\n  getUser,\r\n  getReferenceData,\r\n  getReferenceDataNew,\r\n  getUserData,\r\n  getReferenceDataNewBpm,\r\n  getNewOdsReferenceTypes,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport get from 'lodash/get';\r\nimport * as utils from 'utils';\r\n\r\nconst getExtendedOrBasicEdgeUserData = (dispatch, params) => () => {\r\n  // try to get user from Extended Edge API\r\n  // & default Edge API and load respective reference API's\r\n  const promises = [\r\n    dispatch(getUserData(params))\r\n      .then((res) => Promise.resolve(res))\r\n      .catch((err) => Promise.reject(err)),\r\n    dispatch(getUser(params))\r\n      .then((res) => Promise.resolve(res))\r\n      .catch((err) => Promise.reject(err)),\r\n  ];\r\n  return Promise.allSettled(promises).then((results) => Promise.resolve(results));\r\n};\r\n\r\nconst checkUserServiceData = (dispatch, userData, params) => {\r\n  if (utils.generic.isValidArray(userData, true)) {\r\n    const extendedUser = userData[0].status === 'fulfilled' ? userData[0]?.value : null;\r\n    const currentEdgeUser = userData[1].status === 'fulfilled' ? userData[1]?.value : null;\r\n    if (utils.user.isExtended(extendedUser) && utils.user.isCurrentEdge(currentEdgeUser)) {\r\n      // if user is available as both EXTENDED EDGE user & CURRENT EDGE user\r\n      dispatch(getReferenceData());\r\n      dispatch(getReferenceDataNew());\r\n      dispatch(getReferenceDataNewBpm());\r\n      dispatch(getNewOdsReferenceTypes());\r\n\r\n      // after login, redirect to user CURRENT EDGE landing page\r\n      if (params?.isLogin && utils.generic.isFunction(params?.history.push)) {\r\n        params.history.push(utils.user.getLandingPage(currentEdgeUser));\r\n      }\r\n    } else if (utils.user.isExtended(extendedUser) && !utils.user.isCurrentEdge(currentEdgeUser)) {\r\n      // if user only an EXTENDED EDGE user\r\n      dispatch(getReferenceDataNew());\r\n      dispatch(getReferenceDataNewBpm());\r\n      dispatch(getNewOdsReferenceTypes());\r\n\r\n      // after login, redirect to user EXTENDED EDGE landing page\r\n      if (params?.isLogin && utils.generic.isFunction(params?.history?.push)) {\r\n        params.history.push(params?.redirectUrl || utils.user.getLandingPage(extendedUser));\r\n      }\r\n    } else if (!utils.user.isExtended(extendedUser) && utils.user.isCurrentEdge(currentEdgeUser)) {\r\n      // if user only an CURRENT EDGE user\r\n      dispatch(getReferenceData());\r\n      // after login, redirect to user CURRENT EDGE landing page\r\n      if (params?.isLogin && utils.generic.isFunction(params?.history.push)) {\r\n        params.history.push(utils.user.getLandingPage(currentEdgeUser));\r\n      }\r\n    }\r\n  }\r\n};\r\n\r\nexport const reuseExistingToken = (history) => (dispatch) => {\r\n  dispatch(addLoader('reuseExistingToken'));\r\n\r\n  const localStorageAuth = utils.user.getLocalStorageAuth();\r\n  const authData = {\r\n    accessToken: localStorageAuth.accessToken,\r\n    idToken: localStorageAuth.idToken,\r\n    expiresIn: localStorageAuth.expiresIn,\r\n    expiresAt: localStorageAuth.expiresAt,\r\n  };\r\n\r\n  dispatch(setSessionState(authData))\r\n    .then(getExtendedOrBasicEdgeUserData(dispatch))\r\n    .then((userObj) => {\r\n      checkUserServiceData(dispatch, userObj);\r\n      dispatch(removeLoader('reuseExistingToken'));\r\n      //For extended user new ref data api is created\r\n      if (utils.user.isExtended(userObj)) {\r\n        dispatch(getReferenceDataNew());\r\n        dispatch(getReferenceDataNewBpm());\r\n      } else {\r\n        dispatch(getReferenceData());\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(authFailure('Error', { ...err }));\r\n      history.replace(config.routes.login.root);\r\n    });\r\n};\r\n\r\nexport const renewAuthentication = (auth0, history) => (dispatch) => {\r\n  dispatch(addLoader('renewAuthentication'));\r\n  dispatch(authInProgress());\r\n\r\n  dispatch(renewAuth0Token(auth0))\r\n    .then((response) => dispatch(setSessionState(response)))\r\n    .then(getExtendedOrBasicEdgeUserData(dispatch))\r\n    .then((userObj) => {\r\n      checkUserServiceData(dispatch, userObj);\r\n      dispatch(removeLoader('renewAuthentication'));\r\n      //For extended user new ref data api is created\r\n\r\n      if (utils.user.isExtended(userObj)) {\r\n        dispatch(getReferenceDataNew());\r\n        dispatch(getReferenceDataNewBpm());\r\n      } else {\r\n        dispatch(getReferenceData());\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      dispatch(authFailure('Error', { ...err }));\r\n      history.replace(config.routes.login.root);\r\n    });\r\n};\r\n\r\nexport const parseAuth0Hash = (auth0, history, locationHash, redirectUrl) => (dispatch) => {\r\n  dispatch(authInProgress());\r\n\r\n  dispatch(parseHash(auth0, locationHash))\r\n    .then((response) => dispatch(setSessionState(response, true, history, redirectUrl)))\r\n    .then(getExtendedOrBasicEdgeUserData(dispatch, { history, redirectUrl, isLogin: true }))\r\n    .then((userObj) => {\r\n      checkUserServiceData(dispatch, userObj, { history, redirectUrl, isLogin: true });\r\n    })\r\n    .catch((err) => {\r\n      dispatch(authFailure('Error', { ...err }));\r\n      history.replace(config.routes.home.root);\r\n    });\r\n};\r\n\r\nexport const renewAuth0Token = (auth0) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    auth0.checkSession({}, (err, authResult) => {\r\n      if (authResult && authResult.accessToken && authResult.idToken) {\r\n        resolve(authResult);\r\n      } else {\r\n        reject({\r\n          ...err,\r\n          file: 'stores/auth.actions',\r\n          message: 'Check session error',\r\n        });\r\n\r\n        dispatch(authFailure(`Authentication: Could not get a new token (${err.error}: ${err.error_description}).`));\r\n      }\r\n    });\r\n  });\r\n};\r\n\r\nexport const setSessionState = (authResult, isCallback, history, redirectUrl) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (isCallback) {\r\n      dispatch(authSuccess(authResult));\r\n      resolve(authResult);\r\n    } else {\r\n      dispatch(authSuccess(authResult));\r\n      resolve(authResult);\r\n    }\r\n  });\r\n};\r\n\r\nexport const parseHash = (auth0, locationHash) => (dispatch) => {\r\n  return new Promise((resolve, reject) => {\r\n    if (/access_token|id_token|error/.test(locationHash)) {\r\n      auth0.parseHash((err, result) => {\r\n        if (result && result.accessToken && result.idToken) {\r\n          resolve(result);\r\n        } else {\r\n          reject({ ...err, file: 'stores/auth.actions', message: 'Unknown error.' });\r\n        }\r\n      });\r\n    } else {\r\n      reject({\r\n        file: 'stores/auth.actions',\r\n        message: 'Location hash is missing required parameters.',\r\n      });\r\n    }\r\n  });\r\n};\r\n\r\nexport const authLogin = (auth0, theme = {}) => {\r\n  const themeObj = {\r\n    logo: get(theme, 'logo' || ''),\r\n    primaryColor: get(theme, 'primaryColor' || ''),\r\n  };\r\n\r\n  auth0.authorize({\r\n    prompt: 'login',\r\n    language: config.locale,\r\n    theme: themeObj,\r\n  });\r\n\r\n  return {\r\n    type: 'AUTH_LOGIN',\r\n  };\r\n};\r\n\r\nexport const authLogout = (auth0) => {\r\n  localStorage.removeItem('edge-auth');\r\n\r\n  if (auth0 && utils.generic.isFunction(auth0.logout)) {\r\n    auth0.logout({\r\n      returnTo: config.auth.redirectLogout,\r\n      client_id: config.auth.clientID,\r\n    });\r\n  } else {\r\n    window.location.href = config.auth.redirectLogout;\r\n  }\r\n\r\n  return {\r\n    type: 'AUTH_LOGOUT',\r\n  };\r\n};\r\n\r\nexport const authInProgress = () => {\r\n  return {\r\n    type: 'AUTH_IN_PROGRESS',\r\n  };\r\n};\r\n\r\nexport const authSuccess = (payload) => {\r\n  const expiresAt = payload.expiresAt || payload.expiresIn * 1000 + Date.now();\r\n  const edgeAuth = {\r\n    accessToken: payload.accessToken,\r\n    idToken: payload.idToken,\r\n    expiresIn: payload.expiresIn,\r\n    expiresAt: expiresAt,\r\n    expiresAtDate: utils.string.t('format.date', {\r\n      value: { date: expiresAt, format: 'ddd, MMMM Do YYYY, h:mm:ss a' },\r\n    }),\r\n  };\r\n\r\n  localStorage.setItem('edge-auth', JSON.stringify(edgeAuth));\r\n\r\n  return {\r\n    type: 'AUTH_SUCCESS',\r\n    payload: {\r\n      accessToken: payload.accessToken,\r\n      idToken: payload.idToken,\r\n      expiresAt,\r\n    },\r\n  };\r\n};\r\n\r\nexport const authFailure = (error) => {\r\n  localStorage.removeItem('edge-auth');\r\n\r\n  return {\r\n    type: 'AUTH_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}