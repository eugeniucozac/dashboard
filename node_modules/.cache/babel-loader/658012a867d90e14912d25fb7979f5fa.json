{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossAction\\\\LossAction.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport * as utils from 'utils';\nimport { TableFilters, TableToolbar } from 'components';\nimport styles from './LossAction.styles';\nimport { useMedia } from 'hooks';\nimport LossActionTable from '../LossActionTable/LossActionTable'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossActionView.propTypes = {\n  items: PropTypes.object.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  handlers: PropTypes.shape({\n    toggleColumn: PropTypes.func,\n    search: PropTypes.func\n  }),\n  searchTerm: PropTypes.string\n};\nexport function LossActionView(_ref) {\n  _s();\n\n  var items = _ref.items,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      handlers = _ref.handlers,\n      searchTerm = _ref.searchTerm;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'LossAction'\n  })({\n    isMobile: media.mobile\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    mt: 3,\n    \"data-testid\": \"loss-action\",\n    children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n      children: /*#__PURE__*/_jsxDEV(TableFilters, {\n        search: true,\n        searchPlaceholder: utils.string.t('claims.processing.searchBarPlaceholder'),\n        searchMinChars: 3,\n        nestedClasses: {\n          searchMaxWidth: classes.searchMaxWidth\n        },\n        filtersArray: tableFilterFields,\n        isFetchingFilters: isFetchingFilters,\n        handlers: {\n          onSearch: handlers.search,\n          onResetFilter: handlers.resetFilter,\n          onFilter: function onFilter(values) {\n            return handlers.searchFilter(values);\n          },\n          onResetSearch: handlers.resetSearch\n        },\n        searchTerm: searchTerm\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 42,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 41,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LossActionTable, {\n      lossActions: items,\n      cols: columnsArray,\n      columnProps: columnProps\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 40,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossActionView, \"Inu6KbwmgyiVqUeOTSx0E+dAczw=\", false, function () {\n  return [useMedia];\n});\n\n_c = LossActionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossAction/LossAction.view.js"],"names":["React","PropTypes","utils","TableFilters","TableToolbar","styles","useMedia","LossActionTable","makeStyles","Box","LossActionView","propTypes","items","object","isRequired","columnsArray","array","columnProps","func","tableFilterFields","isFetchingFilters","bool","handlers","shape","toggleColumn","search","searchTerm","string","media","classes","name","isMobile","mobile","t","searchMaxWidth","onSearch","onResetFilter","resetFilter","onFilter","values","searchFilter","onResetSearch","resetSearch"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,YAAT,EAAuBC,YAAvB,QAA2C,YAA3C;AACA,OAAOC,MAAP,MAAmB,qBAAnB;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAOC,eAAP,MAA4B,oCAA5B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,QAAgC,mBAAhC;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,KAAK,EAAEX,SAAS,CAACY,MAAV,CAAiBC,UADC;AAEzBC,EAAAA,YAAY,EAAEd,SAAS,CAACe,KAAV,CAAgBF,UAFL;AAGzBG,EAAAA,WAAW,EAAEhB,SAAS,CAACiB,IAAV,CAAeJ,UAHH;AAIzBK,EAAAA,iBAAiB,EAAElB,SAAS,CAACe,KAAV,CAAgBF,UAJV;AAKzBM,EAAAA,iBAAiB,EAAEnB,SAAS,CAACoB,IALJ;AAMzBC,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,KAAV,CAAgB;AACxBC,IAAAA,YAAY,EAAEvB,SAAS,CAACiB,IADA;AAExBO,IAAAA,MAAM,EAAExB,SAAS,CAACiB;AAFM,GAAhB,CANe;AAUzBQ,EAAAA,UAAU,EAAEzB,SAAS,CAAC0B;AAVG,CAA3B;AAaA,OAAO,SAASjB,cAAT,OAQJ;AAAA;;AAAA,MAPDE,KAOC,QAPDA,KAOC;AAAA,MANDG,YAMC,QANDA,YAMC;AAAA,MALDE,WAKC,QALDA,WAKC;AAAA,MAJDE,iBAIC,QAJDA,iBAIC;AAAA,MAHDC,iBAGC,QAHDA,iBAGC;AAAA,MAFDE,QAEC,QAFDA,QAEC;AAAA,MADDI,UACC,QADDA,UACC;AACD,MAAME,KAAK,GAAGtB,QAAQ,EAAtB;AACA,MAAMuB,OAAO,GAAGrB,UAAU,CAACH,MAAD,EAAS;AAAEyB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAA2C;AAAEC,IAAAA,QAAQ,EAAEH,KAAK,CAACI;AAAlB,GAA3C,CAAhB;AAEA,sBACE,QAAC,GAAD;AAAK,IAAA,EAAE,EAAE,CAAT;AAAY,mBAAY,aAAxB;AAAA,4BACE,QAAC,YAAD;AAAA,6BACE,QAAC,YAAD;AACE,QAAA,MAAM,MADR;AAEE,QAAA,iBAAiB,EAAE9B,KAAK,CAACyB,MAAN,CAAaM,CAAb,CAAe,wCAAf,CAFrB;AAGE,QAAA,cAAc,EAAE,CAHlB;AAIE,QAAA,aAAa,EAAE;AAAEC,UAAAA,cAAc,EAAEL,OAAO,CAACK;AAA1B,SAJjB;AAKE,QAAA,YAAY,EAAEf,iBALhB;AAME,QAAA,iBAAiB,EAAEC,iBANrB;AAOE,QAAA,QAAQ,EAAE;AACRe,UAAAA,QAAQ,EAAEb,QAAQ,CAACG,MADX;AAERW,UAAAA,aAAa,EAAEd,QAAQ,CAACe,WAFhB;AAGRC,UAAAA,QAAQ,EAAE,kBAACC,MAAD;AAAA,mBAAYjB,QAAQ,CAACkB,YAAT,CAAsBD,MAAtB,CAAZ;AAAA,WAHF;AAIRE,UAAAA,aAAa,EAAEnB,QAAQ,CAACoB;AAJhB,SAPZ;AAaE,QAAA,UAAU,EAAEhB;AAbd;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAkBE,QAAC,eAAD;AACE,MAAA,WAAW,EAAEd,KADf;AAEE,MAAA,IAAI,EAAEG,YAFR;AAGE,MAAA,WAAW,EAAEE;AAHf;AAAA;AAAA;AAAA;AAAA,YAlBF;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AA0BD;;GAtCeP,c;UASAJ,Q;;;KATAI,c","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { TableFilters, TableToolbar } from 'components';\r\nimport styles from './LossAction.styles';\r\nimport { useMedia } from 'hooks';\r\nimport LossActionTable from '../LossActionTable/LossActionTable'\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nLossActionView.propTypes = {\r\n  items: PropTypes.object.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    toggleColumn: PropTypes.func,\r\n    search: PropTypes.func,\r\n  }),\r\n  searchTerm: PropTypes.string,\r\n};\r\n\r\nexport function LossActionView({\r\n  items,\r\n  columnsArray,\r\n  columnProps,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  handlers,\r\n  searchTerm,\r\n}) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'LossAction' })({ isMobile: media.mobile });\r\n\r\n  return (\r\n    <Box mt={3} data-testid=\"loss-action\">\r\n      <TableToolbar>\r\n        <TableFilters\r\n          search\r\n          searchPlaceholder={utils.string.t('claims.processing.searchBarPlaceholder')}\r\n          searchMinChars={3}\r\n          nestedClasses={{ searchMaxWidth: classes.searchMaxWidth }}\r\n          filtersArray={tableFilterFields}\r\n          isFetchingFilters={isFetchingFilters}\r\n          handlers={{\r\n            onSearch: handlers.search,\r\n            onResetFilter: handlers.resetFilter,\r\n            onFilter: (values) => handlers.searchFilter(values),\r\n            onResetSearch: handlers.resetSearch,\r\n          }}\r\n          searchTerm={searchTerm}\r\n        />\r\n      </TableToolbar>\r\n      <LossActionTable\r\n        lossActions={items}\r\n        cols={columnsArray}\r\n        columnProps={columnProps}\r\n      />\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}