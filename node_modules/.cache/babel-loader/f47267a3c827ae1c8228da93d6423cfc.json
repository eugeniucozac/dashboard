{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { selectClaimData, selectClaimPolicyInsures, postEditClaimDetailsInformation } from 'stores';\nimport { RegisterNewLossFixedBottomBar } from 'modules'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  fields: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  activeStep: PropTypes.number,\n  isAllStepsCompleted: PropTypes.bool,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  index: PropTypes.number\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _classnames, _claimInsurance$, _claimInsurance$2, _ref3;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleBack = _ref.handleBack,\n      handleSave = _ref.handleSave,\n      handleNext = _ref.handleNext,\n      save = _ref.save,\n      index = _ref.index;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n  var claimData = useSelector(selectClaimData);\n  var claimInsurance = useSelector(selectClaimPolicyInsures);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      dateValidation = _useState2[0],\n      setDateValidation = _useState2[1];\n\n  var _useState3 = useState(true),\n      _useState4 = _slicedToArray(_useState3, 2),\n      refResponseDisable = _useState4[0],\n      setRefResponseDisable = _useState4[1];\n\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  }));\n  var control = claimForm.control,\n      errors = claimForm.errors,\n      watch = claimForm.watch,\n      setValue = claimForm.setValue,\n      handleSubmit = claimForm.handleSubmit;\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n      setRefResponseDisable(refResponseState);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setRefResponseDisable(true);\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var qualifierClasses = {\n    root: classnames((_classnames = {}, _defineProperty(_classnames, classes.formLabel, true), _defineProperty(_classnames, classes.longText, true), _classnames))\n  };\n\n  var handleSubmitForm = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n                if (response) {\n                  handleNext(index);\n                }\n              });\n\n            case 1:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmitForm(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      mb: 0,\n      \"data-testid\": \"register-claim-card-information\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.legendContainer,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.claimInformation.title'),\n            nestedClasses: {\n              root: classes.formLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 106,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimData === null || claimData === void 0 ? void 0 : claimData.claimReference) || (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef), \" | \").concat(claimInsurance === null || claimInsurance === void 0 ? void 0 : (_claimInsurance$ = claimInsurance[0]) === null || _claimInsurance$ === void 0 ? void 0 : _claimInsurance$.id, \" | \").concat(claimInsurance === null || claimInsurance === void 0 ? void 0 : (_claimInsurance$2 = claimInsurance[0]) === null || _claimInsurance$2 === void 0 ? void 0 : _claimInsurance$2.name),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-claimsCardInformation\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.claimInformation.claimRef'),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 117,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (_ref3 = (claimData === null || claimData === void 0 ? void 0 : claimData.claimReference) || (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef)) !== null && _ref3 !== void 0 ? _ref3 : utils.string.t('claims.claimInformation.autoGenerated'),\n                  nestedClasses: {\n                    root: classes.claimRef\n                  },\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 115,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                  error: errors.toDate,\n                  muiComponentProps: {\n                    disabled: dateValidation,\n                    fullWidth: true,\n                    classes: {\n                      root: classes.datepicker\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 123,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 122,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 121,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                  error: errors.location\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 138,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 137,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 136,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 143,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                  error: errors.complexity\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 148,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 147,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 146,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                  error: errors.bordereauClaim,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 151,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 114,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 7,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                          error: errors.claimReceivedDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 5,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 167,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 166,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 162,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                      error: errors.toDate,\n                      muiComponentProps: {\n                        disabled: dateValidation,\n                        fullWidth: true,\n                        classes: {\n                          root: classes.datepicker\n                        }\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 174,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 173,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 172,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fguNarrative', control)), {}, {\n                      error: errors.fguNarrative\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 189,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 188,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), {}, {\n                      error: errors.beAdjuster\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 194,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 193,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 192,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                      error: errors.rfiResponse\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 199,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 198,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 197,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                      error: errors.bordereauPeriod\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 204,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                  error: errors.claimantName\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 212,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 211,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                  error: errors.lossQualifierID\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 218,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 217,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 216,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                  error: errors.priority\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 223,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 222,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                  error: errors.adjusterReference\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 228,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 227,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 226,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                  error: errors.referral,\n                  callback: function callback(e, data) {\n                    getRefValues(data);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 233,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 231,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 210,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: handleSave,\n      handleNextSubmit: handleSubmit(handleSubmitForm) //() => handleNext(index) {handleSubmit(handleSaveNote)}\n      ,\n      save: save\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterClaimCardInformationView, \"r/tlnGQO5zFYxPlkxculo8c5T/U=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useState","useDispatch","useSelector","PropTypes","classnames","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","selectClaimData","selectClaimPolicyInsures","postEditClaimDetailsInformation","RegisterNewLossFixedBottomBar","makeStyles","Box","Grid","RegisterClaimCardInformationView","prototype","fields","array","isRequired","referralValues","activeStep","number","isAllStepsCompleted","bool","handleBack","func","handleSave","handleNext","save","index","classes","name","dispatch","claimData","claimInsurance","dateValidation","setDateValidation","refResponseDisable","setRefResponseDisable","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimForm","resolver","control","errors","watch","setValue","handleSubmit","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","qualifierClasses","root","formLabel","longText","handleSubmitForm","values","then","response","legendContainer","string","t","formLegend","claimReference","claimRef","id","getFieldProps","toDate","disabled","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fguNarrative","beAdjuster","rfiResponse","bordereauPeriod","claimantName","lossQualifierID","priority","adjusterReference","referral","e","data"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { selectClaimData, selectClaimPolicyInsures, postEditClaimDetailsInformation } from 'stores';\r\nimport { RegisterNewLossFixedBottomBar } from 'modules';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  fields: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  activeStep: PropTypes.number,\r\n  isAllStepsCompleted: PropTypes.bool,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  save: PropTypes.func.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  activeStep, \r\n  isAllStepsCompleted,\r\n  handleBack,\r\n  handleSave,\r\n  handleNext,\r\n  save,\r\n  index\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const claimData = useSelector(selectClaimData);\r\n  const claimInsurance = useSelector(selectClaimPolicyInsures);\r\n  const [dateValidation, setDateValidation] = useState(false);\r\n  const [refResponseDisable, setRefResponseDisable] = useState(true);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const claimForm = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { control, errors, watch, setValue, handleSubmit } = claimForm;\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      setRefResponseDisable(refResponseState);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setRefResponseDisable(true);\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const qualifierClasses = {\r\n    root: classnames({\r\n      [classes.formLabel]: true,\r\n      [classes.longText]: true,\r\n    }),\r\n  };\r\n\r\n  const handleSubmitForm = async (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response){\r\n        handleNext(index)\r\n      }\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box m={3} mb={0} data-testid=\"register-claim-card-information\">\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item className={classes.legendContainer}>\r\n            <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          </Grid>\r\n          <FormLabel label={`${(claimData?.claimReference || claimData?.claimRef)} | ${claimInsurance?.[0]?.id} | ${claimInsurance?.[0]?.name}`} align=\"left\" />\r\n        </Grid>\r\n      </Box>\r\n      <FormContainer data-testid=\"form-claimsCardInformation\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={6}>\r\n            <FormGrid item xs={12} sm={4}>\r\n            <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                  <FormLabel label={(claimData?.claimReference || claimData?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')} nestedClasses={{ root: classes.claimRef }} align=\"left\" />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormDate\r\n                    {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                    error={errors.toDate}\r\n                    muiComponentProps={{\r\n                      disabled: dateValidation,\r\n                      fullWidth: true,\r\n                      classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                      }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormCheckbox {...utils.form.getFieldProps(fields, 'bordereauClaim', control)} error={errors.bordereauClaim} nestedClasses={{ root: classes.checkbox }}/>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={7}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormDate\r\n                        {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                        error={errors.toDate}\r\n                        muiComponentProps={{\r\n                          disabled: dateValidation,\r\n                          fullWidth: true,\r\n                          classes: {\r\n                            root: classes.datepicker,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'fguNarrative', control)} error={errors.fguNarrative} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} error={errors.beAdjuster} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'rfiResponse', control)} error={errors.rfiResponse} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)} error={errors.bordereauPeriod} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'referral', control)} error={errors.referral}\r\n                    callback={(e, data) => {\r\n                      getRefValues(data);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n          </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => { handleBack(index) }}\r\n          handleSave={handleSave}\r\n          handleNextSubmit={handleSubmit(handleSubmitForm)}  //() => handleNext(index) {handleSubmit(handleSaveNote)}\r\n          save={save}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}