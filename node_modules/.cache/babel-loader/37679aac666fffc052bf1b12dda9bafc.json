{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\QuoteBind\\\\QuoteBindDraftRisk.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport styles from './QuoteBind.styles';\nimport { TableCell, TableHead, PopoverMenu, Button, Translate, Overflow, Pagination, Skeleton } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { Table, TableRow, TableBody, makeStyles, Grid } from '@material-ui/core';\nimport EditIcon from '@material-ui/icons/Edit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nQuoteBindDraftRiskView.propTypes = {\n  listDraftRisk: PropTypes.object.isRequired,\n  draftRiskListLoading: PropTypes.bool.isRequired,\n  popoverActions: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    callback: PropTypes.func.isRequired\n  })),\n  riskProducts: PropTypes.array.isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    type: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  }).isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired\n  }).isRequired,\n  handlers: PropTypes.shape({\n    handleDoubleClickRow: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired\n  })\n};\nexport function QuoteBindDraftRiskView(_ref) {\n  var _this = this;\n\n  var listDraftRisk = _ref.listDraftRisk,\n      draftRiskListLoading = _ref.draftRiskListLoading,\n      popoverActions = _ref.popoverActions,\n      riskProducts = _ref.riskProducts,\n      sort = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'Products'\n  })();\n  var cols = [{\n    id: 'createdAt',\n    label: utils.string.t('risks.draftCreatedAt')\n  }, {\n    id: 'product',\n    label: utils.string.t('app.product')\n  }, {\n    id: 'insureds',\n    label: utils.string.t('app.insured_plural')\n  }, {\n    id: 'clients',\n    label: utils.string.t('app.client_plural')\n  }, {\n    id: 'inceptionDate',\n    label: utils.string.t('app.inceptionDate'),\n    nowrap: true\n  }, {\n    id: 'expiryDate',\n    label: utils.string.t('app.expiryDate'),\n    nowrap: true\n  }, {\n    id: 'userName',\n    label: utils.string.t('admin.user')\n  }, {\n    id: 'status',\n    label: ''\n  }];\n  var drafts = listDraftRisk && utils.generic.isValidArray(listDraftRisk.items, true) ? listDraftRisk.items : [];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 61,\n          columnNumber: 11\n        }, this), draftRiskListLoading ? /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"risk-skeleton\",\n          children: /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: cols.length,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 40,\n                animation: \"wave\",\n                displayNumber: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 66,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"risk-list\",\n          children: drafts && drafts.map(function (draft) {\n            var createdAt = utils.string.t('format.date', {\n              value: {\n                date: get(draft, 'lastUpdatedDate'),\n                format: 'lll'\n              }\n            });\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              \"data-testid\": \"draft-row-\".concat(draft.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-createdAt-\".concat(draft.id),\n                children: createdAt\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-product-\".concat(draft.id),\n                children: utils.risk.getRiskName(draft.productCode, riskProducts)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-insureds-\".concat(draft.id),\n                children: get(draft, 'insuredName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-clients-\".concat(draft.id),\n                children: get(draft, 'clientName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 84,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"draft-cell-inceptionDate-\".concat(draft.id),\n                children: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"format.date\",\n                  options: {\n                    value: {\n                      date: draft.risk.inceptionDate,\n                      format: config.ui.format.date.text,\n                      \"default\": '-'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"draft-cell-expiryDate-\".concat(draft.id),\n                children: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"format.date\",\n                  options: {\n                    value: {\n                      date: draft.risk.expiryDate,\n                      format: config.ui.format.date.text,\n                      \"default\": '-'\n                    }\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 92,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 91,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-userName-\".concat(draft.id),\n                children: get(draft, 'userName')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"draft-cell-status-\".concat(draft.id),\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"xsmall\",\n                  color: \"primary\",\n                  icon: EditIcon,\n                  onClick: function onClick() {\n                    return handlers.handleDoubleClickRow(draft);\n                  }\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 99,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 98,\n                columnNumber: 23\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                nestedClasses: {\n                  root: classes.dataCellLast\n                },\n                children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                  id: \"draft-risk\",\n                  data: draft,\n                  items: popoverActions\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 102,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 101,\n                columnNumber: 23\n              }, _this)]\n            }, draft.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 21\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 60,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        sm: 12,\n        children: /*#__PURE__*/_jsxDEV(Pagination, {\n          page: pagination.page,\n          count: pagination.rowsTotal,\n          rowsPerPage: pagination.rowsPerPage,\n          onChangePage: handlers.changePage,\n          onChangeRowsPerPage: handlers.changeRowsPerPage\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 113,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n_c = QuoteBindDraftRiskView;\nQuoteBindDraftRiskView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"QuoteBindDraftRiskView\",\n  \"props\": {\n    \"listDraftRisk\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"draftRiskListLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"popoverActions\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"callback\": {\n              \"name\": \"func\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"riskProducts\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"by\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"type\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"direction\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"page\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsTotal\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsPerPage\": {\n            \"name\": \"number\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"handleDoubleClickRow\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changePage\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"changeRowsPerPage\": {\n            \"name\": \"func\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\QuoteBind\\\\QuoteBindDraftRisk.view.js\"] = {\n    name: \"QuoteBindDraftRiskView\",\n    docgenInfo: QuoteBindDraftRiskView.__docgenInfo,\n    path: \"src\\\\pages\\\\QuoteBind\\\\QuoteBindDraftRisk.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"QuoteBindDraftRiskView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/QuoteBind/QuoteBindDraftRisk.view.js"],"names":["React","PropTypes","get","styles","TableCell","TableHead","PopoverMenu","Button","Translate","Overflow","Pagination","Skeleton","utils","config","Table","TableRow","TableBody","makeStyles","Grid","EditIcon","QuoteBindDraftRiskView","propTypes","listDraftRisk","object","isRequired","draftRiskListLoading","bool","popoverActions","arrayOf","shape","id","string","label","callback","func","riskProducts","array","sort","by","type","direction","pagination","page","number","rowsTotal","rowsPerPage","handlers","handleDoubleClickRow","changePage","changeRowsPerPage","classes","name","cols","t","nowrap","drafts","generic","isValidArray","items","length","map","draft","createdAt","value","date","format","risk","getRiskName","productCode","inceptionDate","ui","text","expiryDate","root","dataCellLast"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './QuoteBind.styles';\r\nimport { TableCell, TableHead, PopoverMenu, Button, Translate, Overflow, Pagination, Skeleton } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { Table, TableRow, TableBody, makeStyles, Grid } from '@material-ui/core';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\n\r\nQuoteBindDraftRiskView.propTypes = {\r\n  listDraftRisk: PropTypes.object.isRequired,\r\n  draftRiskListLoading: PropTypes.bool.isRequired,\r\n  popoverActions: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      callback: PropTypes.func.isRequired,\r\n    })\r\n  ),\r\n  riskProducts: PropTypes.array.isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    type: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }).isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    handleDoubleClickRow: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport function QuoteBindDraftRiskView({ listDraftRisk, draftRiskListLoading, popoverActions, riskProducts, sort, pagination, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'Products' })();\r\n  const cols = [\r\n    { id: 'createdAt', label: utils.string.t('risks.draftCreatedAt') },\r\n    { id: 'product', label: utils.string.t('app.product') },\r\n    { id: 'insureds', label: utils.string.t('app.insured_plural') },\r\n    { id: 'clients', label: utils.string.t('app.client_plural') },\r\n    { id: 'inceptionDate', label: utils.string.t('app.inceptionDate'), nowrap: true },\r\n    { id: 'expiryDate', label: utils.string.t('app.expiryDate'), nowrap: true },\r\n    { id: 'userName', label: utils.string.t('admin.user') },\r\n    { id: 'status', label: '' },\r\n  ];\r\n  const drafts = listDraftRisk && utils.generic.isValidArray(listDraftRisk.items, true) ? listDraftRisk.items : [];\r\n\r\n  return (\r\n    <>\r\n      <Overflow>\r\n        <Table>\r\n          <TableHead columns={cols} sorting={sort} />\r\n          {draftRiskListLoading ? (\r\n            <TableBody data-testid=\"risk-skeleton\">\r\n              <TableRow>\r\n                <TableCell colSpan={cols.length}>\r\n                  <Skeleton height={40} animation=\"wave\" displayNumber={10} />\r\n                </TableCell>\r\n              </TableRow>\r\n            </TableBody>\r\n          ) : (\r\n            <TableBody data-testid=\"risk-list\">\r\n              {drafts &&\r\n                drafts.map((draft) => {\r\n                  const createdAt = utils.string.t('format.date', {\r\n                    value: { date: get(draft, 'lastUpdatedDate'), format: 'lll' },\r\n                  });\r\n                  return (\r\n                    <TableRow key={draft.id} data-testid={`draft-row-${draft.id}`}>\r\n                      <TableCell data-testid={`draft-cell-createdAt-${draft.id}`}>{createdAt}</TableCell>\r\n                      <TableCell data-testid={`draft-cell-product-${draft.id}`}>\r\n                        {utils.risk.getRiskName(draft.productCode, riskProducts)}\r\n                      </TableCell>\r\n                      <TableCell data-testid={`draft-cell-insureds-${draft.id}`}>{get(draft, 'insuredName')}</TableCell>\r\n                      <TableCell data-testid={`draft-cell-clients-${draft.id}`}>{get(draft, 'clientName')}</TableCell>\r\n                      <TableCell nowrap data-testid={`draft-cell-inceptionDate-${draft.id}`}>\r\n                        <Translate\r\n                          label=\"format.date\"\r\n                          options={{ value: { date: draft.risk.inceptionDate, format: config.ui.format.date.text, default: '-' } }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell nowrap data-testid={`draft-cell-expiryDate-${draft.id}`}>\r\n                        <Translate\r\n                          label=\"format.date\"\r\n                          options={{ value: { date: draft.risk.expiryDate, format: config.ui.format.date.text, default: '-' } }}\r\n                        />\r\n                      </TableCell>\r\n                      <TableCell data-testid={`draft-cell-userName-${draft.id}`}>{get(draft, 'userName')}</TableCell>\r\n                      <TableCell data-testid={`draft-cell-status-${draft.id}`}>\r\n                        <Button size=\"xsmall\" color=\"primary\" icon={EditIcon} onClick={() => handlers.handleDoubleClickRow(draft)} />\r\n                      </TableCell>\r\n                      <TableCell menu nestedClasses={{ root: classes.dataCellLast }}>\r\n                        <PopoverMenu id=\"draft-risk\" data={draft} items={popoverActions} />\r\n                      </TableCell>\r\n                    </TableRow>\r\n                  );\r\n                })}\r\n            </TableBody>\r\n          )}\r\n        </Table>\r\n      </Overflow>\r\n      <Grid container>\r\n        <Grid item xs={12} sm={12}>\r\n          <Pagination\r\n            page={pagination.page}\r\n            count={pagination.rowsTotal}\r\n            rowsPerPage={pagination.rowsPerPage}\r\n            onChangePage={handlers.changePage}\r\n            onChangeRowsPerPage={handlers.changeRowsPerPage}\r\n          />\r\n        </Grid>\r\n      </Grid>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}