{"ast":null,"code":"// app\nimport { addLoader, authLogout, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getDocuments = function getDocuments(_ref) {\n  var placement = _ref.placement,\n      documentType = _ref.documentType,\n      documentTypeId = _ref.documentTypeId;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var validProps = utils.generic.isValidObject(placement) || documentType && documentTypeId;\n\n    if (!validProps) {\n      dispatch(enqueueNotification('notification.document.getFail', 'error'));\n      return;\n    }\n\n    dispatch(addLoader('getDocuments'));\n    var route = '';\n\n    if (documentType) {\n      route = \"document/\".concat(documentType.toLowerCase(), \"/\").concat(documentTypeId);\n    }\n\n    if (placement) {\n      route = \"placements/\".concat(placement.id);\n    }\n\n    utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.document,\n      path: \"api/\".concat(route)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch({\n        type: 'DOCUMENT_SET_FOLDER_STRUCTURE',\n        payload: data.folders\n      });\n      dispatch({\n        type: 'DOCUMENTS_SET_FOR_PLACEMENT',\n        payload: data.documents\n      });\n    }).catch(function (err) {\n      var errorParams = {\n        file: 'stores/document.actions',\n        message: 'API fetch error (document)'\n      };\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(enqueueNotification('notification.document.getFail', 'error'));\n    }).finally(function () {\n      dispatch(removeLoader('getDocuments'));\n    });\n  };\n};\nexport var getFolderList = function getFolderList() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState2 = getState(),\n        auth = _getState2.user.auth,\n        endpoint = _getState2.config.vars.endpoint;\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.document,\n      path: 'api/document/folders'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      return utils.generic.getLabels(data.map(function (folder) {\n        return {\n          id: folder.toUpperCase()\n        };\n      }), 'documents.folders');\n    }).catch(function (err) {\n      var errorParams = {\n        file: 'stores/document.actions',\n        message: 'API fetch error (document)'\n      };\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(enqueueNotification('notification.document.getFail', 'error'));\n    });\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/document/document.actions.get.js"],"names":["addLoader","authLogout","enqueueNotification","removeLoader","utils","getDocuments","placement","documentType","documentTypeId","dispatch","getState","auth","user","endpoint","config","vars","validProps","generic","isValidObject","route","toLowerCase","id","api","get","token","accessToken","document","path","then","response","handleResponse","json","handleData","data","type","payload","folders","documents","catch","err","errorParams","file","message","handleError","handleUnauthorized","finally","getFolderList","getLabels","map","folder","toUpperCase"],"mappings":"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","sourcesContent":["// app\r\nimport { addLoader, authLogout, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getDocuments =\r\n  ({ placement, documentType, documentTypeId }) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n    const validProps = utils.generic.isValidObject(placement) || (documentType && documentTypeId);\r\n\r\n    if (!validProps) {\r\n      dispatch(enqueueNotification('notification.document.getFail', 'error'));\r\n      return;\r\n    }\r\n\r\n    dispatch(addLoader('getDocuments'));\r\n\r\n    let route = '';\r\n\r\n    if (documentType) {\r\n      route = `document/${documentType.toLowerCase()}/${documentTypeId}`;\r\n    }\r\n\r\n    if (placement) {\r\n      route = `placements/${placement.id}`;\r\n    }\r\n\r\n    utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.document,\r\n        path: `api/${route}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleData(json))\r\n      .then((data) => {\r\n        dispatch({ type: 'DOCUMENT_SET_FOLDER_STRUCTURE', payload: data.folders });\r\n        dispatch({ type: 'DOCUMENTS_SET_FOR_PLACEMENT', payload: data.documents });\r\n      })\r\n      .catch((err) => {\r\n        const errorParams = {\r\n          file: 'stores/document.actions',\r\n          message: 'API fetch error (document)',\r\n        };\r\n\r\n        utils.api.handleError(err, errorParams);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(enqueueNotification('notification.document.getFail', 'error'));\r\n      })\r\n      .finally(() => {\r\n        dispatch(removeLoader('getDocuments'));\r\n      });\r\n  };\r\n\r\nexport const getFolderList = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.document,\r\n      path: 'api/document/folders',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) =>\r\n      utils.generic.getLabels(\r\n        data.map((folder) => ({ id: folder.toUpperCase() })),\r\n        'documents.folders'\r\n      )\r\n    )\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        file: 'stores/document.actions',\r\n        message: 'API fetch error (document)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(enqueueNotification('notification.document.getFail', 'error'));\r\n    });\r\n};\r\n"]},"metadata":{},"sourceType":"module"}