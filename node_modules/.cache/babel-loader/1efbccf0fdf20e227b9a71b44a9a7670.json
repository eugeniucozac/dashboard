{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsEndorseFaBorder\\\\ProcessingInstructionsEndorseFaBorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport moment from 'moment';\nimport uniqBy from 'lodash/uniqBy';\nimport get from 'lodash/get'; // app\n\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\nimport { showModal, getUsersForRole, selectUser, selectUserDetails, selectUsersInRoles, getBordereauPolicyTypes, updateProcessingInstruction, submitProcessingInstruction, getProcessingInstruction, enqueueNotification // selectWorkFlowFrontEndContactNamesForRiskReference,  //TO DO\n, selectProducingBrokerNamesForRiskReference, selectPiProducingBrokers, updateReferenceDocumentCountLoading, getRiskReferenceDocumentsCount } from 'stores';\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsEndorseFaBorder.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsEndorseFaBorder(_ref) {\n  _s();\n\n  var _instruction$riskRefe,\n      _instruction$details7,\n      _instruction$details8,\n      _instruction$details9,\n      _instruction$details10,\n      _instruction$details11,\n      _instruction$details12,\n      _this = this;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      childRef = _ref.childRef;\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id,\n      step = _useParams.step,\n      tab = _useParams.tab;\n\n  var user = useSelector(selectUser);\n  var users = useSelector(selectUsersInRoles);\n  var currentUser = useSelector(selectUserDetails);\n  var bordereauPolicyTypes = useSelector(function (state) {\n    return get(state, 'processingInstructions.bordereauPolicyTypes');\n  });\n  var piProducingBrokers = useSelector(selectProducingBrokerNamesForRiskReference);\n  var producingBrokersFromRoles = useSelector(selectPiProducingBrokers); //const piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);  //TO DO\n\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {}; //TO DO\n  // const piWorkFlowFrontEndContactNames = piFrontEndContactNames.map((type) => {\n  //   return {\n  //     id: type.id,\n  //     name: type.value,\n  //   };\n  // });\n\n  var producingBrokers = utils.generic.isValidArray(piProducingBrokers, true) ? piProducingBrokers : producingBrokersFromRoles;\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var businessProcesses = useSelector(function (state) {\n    return get(state, 'referenceData.businessProcesses');\n  });\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\n  var isReadOnly = !isEditable;\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var faBorderProcessType = isBordereau || isFeeAndAmendment;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultValues = _useState2[0],\n      setDefaultValues = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAnyRiskRefHavingNoDocument = _useState4[0],\n      setIsAnyRiskRefHavingNoDocument = _useState4[1];\n\n  var riskReferences = instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences;\n  var leadRef = instruction === null || instruction === void 0 ? void 0 : (_instruction$riskRefe = instruction.riskReferences) === null || _instruction$riskRefe === void 0 ? void 0 : _instruction$riskRefe.find(function (r) {\n    return r.leadPolicy;\n  }); // const leadFrontEndContactNameValue = leadRef?.workFlowFrontEndContactName;  //TO DO\n\n  var leadRefProducingBrokerName = leadRef === null || leadRef === void 0 ? void 0 : leadRef.producingBrokerName;\n  var bordereauTypes = [{\n    id: 1,\n    name: 'premium',\n    value: 'premium',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium')\n  }, {\n    id: 2,\n    name: 'claims',\n    value: 'claims',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims')\n  }, {\n    id: 3,\n    name: 'combined',\n    value: 'combined',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined')\n  }];\n  var feeAndAmendmentTypes = [{\n    name: 'fee',\n    value: 'fee',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee')\n  }, {\n    name: 'amendment',\n    value: 'amendment',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment')\n  }];\n  var tabs = [{\n    value: 'processing-instruction',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi')\n  }, {\n    value: 'documents',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc')\n  }];\n  var isValidTab = tabs.map(function (item) {\n    return item.value;\n  }).includes(tab);\n\n  var _useState5 = useState(isValidTab ? tab : 'processing-instruction'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedTab = _useState6[0],\n      setSelectedTab = _useState6[1];\n\n  useEffect(function () {\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\n    dispatch(getBordereauPolicyTypes());\n  }, [dispatch]);\n  useEffect(function () {\n    var _childRef$current, _childRef$current$pro;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current = childRef.current) === null || _childRef$current === void 0 ? void 0 : (_childRef$current$pro = _childRef$current.props) === null || _childRef$current$pro === void 0 ? void 0 : _childRef$current$pro.resetFunc;\n\n    var updatedDefaultValues = _objectSpread({}, utils.form.getInitialValues(fields));\n\n    setDefaultValues(updatedDefaultValues);\n\n    if (utils.generic.isFunction(reset)) {\n      reset(updatedDefaultValues, {\n        keepDirty: false\n      });\n    }\n  }, [instruction] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var getRiskReferenceDocumentCount = function getRiskReferenceDocumentCount() {\n    if (utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n      var _documents$riskRefere;\n\n      dispatch(updateReferenceDocumentCountLoading(true));\n      var referenceList = documents === null || documents === void 0 ? void 0 : (_documents$riskRefere = documents.riskReferences) === null || _documents$riskRefere === void 0 ? void 0 : _documents$riskRefere.map(function (refData) {\n        return {\n          endorsementId: refData.endorsementId,\n          endorsementNumber: refData.endorsementNumber,\n          riskRefId: refData.riskRefId,\n          xbInstanceId: refData.xbInstanceId,\n          xbPolicyId: refData.xbPolicyId\n        };\n      });\n      var documentTypeValue = isEndorsement ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription : faBorderProcessType ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then(function (response) {\n        if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n          var _response$data;\n\n          setIsAnyRiskRefHavingNoDocument(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.some(function (a) {\n            return a.documentCount === 0;\n          }));\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    getRiskReferenceDocumentCount();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var filterUsersByRole = function filterUsersByRole(roleNames) {\n    return riskReferences === null || riskReferences === void 0 ? void 0 : riskReferences.reduce(function (acc, cur) {\n      var groupDepartXbInstanceIds = \"\".concat(cur.departmentId, \"-\").concat(cur.xbInstanceId);\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(users.filter(function (u) {\n        return roleNames.includes(u.userRole);\n      }).filter(function (u) {\n        var _u$departmentId;\n\n        return (_u$departmentId = u.departmentId) === null || _u$departmentId === void 0 ? void 0 : _u$departmentId.split(',').map(function (x) {\n          return x.trim();\n        }).includes(groupDepartXbInstanceIds);\n      }).map(function (u) {\n        return {\n          id: u.userId,\n          name: u.fullName + ' - ' + u.emailId\n        };\n      })));\n    }, []);\n  };\n\n  var frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id'); // TO DO\n  // const frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)\n  //   ? piWorkFlowFrontEndContactNames\n  //   : frontEndContactsForRoles;\n\n  var getFrontEndContactId = function getFrontEndContactId() {\n    var _instruction$details;\n\n    var frontEndContactId = (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.frontEndContactId; // const workFlowFrontEndContactName = instruction.details?.workFlowFrontEndContactName;  //TO DO\n\n    var user; //TO DO\n    // if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\n    //   if (workFlowFrontEndContactName) {\n    //     user = piWorkFlowFrontEndContactNames.find((fec) => fec.id === frontEndContactId);\n    //     frontEndContactId = user?.id;\n    //   } else if (leadFrontEndContactNameValue) {\n    //     const frontEndContactValue = piWorkFlowFrontEndContactNames?.find(\n    //       (type) => type?.name?.toLowerCase() === leadFrontEndContactNameValue?.toLowerCase()\n    //     );\n    //     frontEndContactId = frontEndContactValue?.id;\n    //   }\n    // } else\n\n    if (!frontEndContactId && utils.generic.isValidArray(frontEndContactsForRoles, true)) {\n      var _user;\n\n      user = frontEndContactsForRoles.find(function (fec) {\n        return fec.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n      });\n      frontEndContactId = (_user = user) === null || _user === void 0 ? void 0 : _user.id;\n    }\n\n    return frontEndContactId || '';\n  }; //TO DO\n  // const getSelectedFrontEndContactName = (frontEndContactd) => {\n  //   const selectedFrontEndContactName = piWorkFlowFrontEndContactNames?.find(\n  //     (frontEndContact) => frontEndContact?.id === frontEndContactd\n  //   )?.name;\n  //   return selectedFrontEndContactName;\n  // };\n\n\n  var getProducingBrokerId = function getProducingBrokerId() {\n    var _instruction$details2;\n\n    var producingBrokerId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details2 = instruction.details) === null || _instruction$details2 === void 0 ? void 0 : _instruction$details2.producingBrokerId;\n    var item;\n\n    if (utils.generic.isValidArray(piProducingBrokers, true)) {\n      if (producingBrokerId) {\n        var _item;\n\n        item = piProducingBrokers.find(function (type) {\n          return type.id === producingBrokerId;\n        });\n        producingBrokerId = (_item = item) === null || _item === void 0 ? void 0 : _item.id;\n      } else if (leadRefProducingBrokerName) {\n        var leadProducingBroker = piProducingBrokers === null || piProducingBrokers === void 0 ? void 0 : piProducingBrokers.find(function (type) {\n          var _type$value;\n\n          return (type === null || type === void 0 ? void 0 : (_type$value = type.value) === null || _type$value === void 0 ? void 0 : _type$value.toLowerCase()) === (leadRefProducingBrokerName === null || leadRefProducingBrokerName === void 0 ? void 0 : leadRefProducingBrokerName.toLowerCase());\n        });\n        producingBrokerId = leadProducingBroker === null || leadProducingBroker === void 0 ? void 0 : leadProducingBroker.id;\n      }\n    } else if (!producingBrokerId && utils.generic.isValidArray(producingBrokers, true)) {\n      var _item2;\n\n      item = producingBrokers.find(function (type) {\n        var _instruction$details3;\n\n        return type.id === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details3 = instruction.details) === null || _instruction$details3 === void 0 ? void 0 : _instruction$details3.producingBrokerId);\n      });\n      producingBrokerId = (_item2 = item) === null || _item2 === void 0 ? void 0 : _item2.id;\n    }\n\n    return producingBrokerId || '';\n  };\n\n  var getSelectedProducingBrokerName = function getSelectedProducingBrokerName(producingBrokerId) {\n    var _piProducingBrokers$f;\n\n    var selectedProducingBrokerName = piProducingBrokers === null || piProducingBrokers === void 0 ? void 0 : (_piProducingBrokers$f = piProducingBrokers.find(function (producingBroker) {\n      return (producingBroker === null || producingBroker === void 0 ? void 0 : producingBroker.id) === producingBrokerId;\n    })) === null || _piProducingBrokers$f === void 0 ? void 0 : _piProducingBrokers$f.value;\n    return selectedProducingBrokerName;\n  };\n\n  var getBordereauPolicyTypeId = function getBordereauPolicyTypeId() {\n    var _instruction$details4;\n\n    var bordereauPolicyTypeId = (_instruction$details4 = instruction.details) === null || _instruction$details4 === void 0 ? void 0 : _instruction$details4.bordereauPolicyTypeId;\n\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\n      var item = bordereauPolicyTypes.find(function (type) {\n        var _instruction$details5;\n\n        return type.bordereauPolicyTypeID === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details5 = instruction.details) === null || _instruction$details5 === void 0 ? void 0 : _instruction$details5.bordereauPolicyTypeId);\n      });\n      bordereauPolicyTypeId = item === null || item === void 0 ? void 0 : item.bordereauPolicyTypeID;\n    }\n\n    return bordereauPolicyTypeId || '';\n  };\n\n  var getBordereauTypeValue = function getBordereauTypeValue() {\n    var _instruction$details6;\n\n    var defaultId = 1;\n    var defaultType = 'premium';\n    var bordereauTypeId = (instruction === null || instruction === void 0 ? void 0 : (_instruction$details6 = instruction.details) === null || _instruction$details6 === void 0 ? void 0 : _instruction$details6.bordereauTypeId) || defaultId;\n    var obj = bordereauTypes.find(function (type) {\n      return type.id === bordereauTypeId;\n    });\n    return (obj === null || obj === void 0 ? void 0 : obj.value) || defaultType;\n  };\n\n  var fields = [{\n    name: 'frontEndContactId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\n    value: getFrontEndContactId(),\n    options: frontEndContactsForRoles,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'producingBrokerId',\n    group: 'general',\n    type: 'select',\n    label: utils.string.t('processingInstructions.checklist.fields.producingBroker'),\n    value: getProducingBrokerId(),\n    options: producingBrokers,\n    optionKey: 'id',\n    optionLabel: 'value',\n    muiComponentProps: {\n      disabled: isReadOnly || utils.generic.isInvalidOrEmptyArray(producingBrokers)\n    }\n  }, {\n    name: 'frontEndSendDocs',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details7 = instruction.details) === null || _instruction$details7 === void 0 ? void 0 : _instruction$details7.frontEndSendDocs) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'highPriority',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details8 = instruction.details) === null || _instruction$details8 === void 0 ? void 0 : _instruction$details8.highPriority) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details9 = instruction.details) === null || _instruction$details9 === void 0 ? void 0 : _instruction$details9.notes) || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 5,\n      maxRows: 10,\n      disabled: isReadOnly\n    }\n  }].concat(_toConsumableArray(isEndorsement ? [{\n    name: 'ppwOrPpc',\n    type: 'checkbox',\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details10 = instruction.details) === null || _instruction$details10 === void 0 ? void 0 : _instruction$details10.ppwOrPpc) || false,\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isEndorsement || isFeeAndAmendment ? [{\n    name: 'isNonPremium',\n    type: 'checkbox',\n    value: (leadRef === null || leadRef === void 0 ? void 0 : leadRef.isNonPremium) === 'Yes',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\n    disabled: true\n  }] : []), _toConsumableArray(isFeeAndAmendment ? [{\n    name: 'feeOrAmendment',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details11 = instruction.details) === null || _instruction$details11 === void 0 ? void 0 : _instruction$details11.feeOrAmendment) || 'fee',\n    options: feeAndAmendmentTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isBordereau ? [{\n    name: 'bordereauPolicyTypeId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\n    value: getBordereauPolicyTypeId(),\n    options: bordereauPolicyTypes,\n    optionKey: 'bordereauPolicyTypeID',\n    optionLabel: 'bordereauPolicyTypeDetails',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    type: 'datepicker',\n    name: 'bordereauPeriod',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details12 = instruction.details) === null || _instruction$details12 === void 0 ? void 0 : _instruction$details12.bordereauPeriod) || null,\n    outputFormat: 'iso',\n    placeholder: 'MM YYYY',\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'),\n      disabled: isReadOnly\n    },\n    muiPickerProps: {\n      views: ['year', 'month'],\n      format: 'MM YYYY',\n      clearable: true\n    }\n  }, {\n    name: 'bordereauTypeId',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\n    value: getBordereauTypeValue(),\n    options: bordereauTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []));\n\n  var getSelectedFrontEndContactName = function getSelectedFrontEndContactName(fecId) {\n    var _frontEndContactsForR;\n\n    var selectedFecName = frontEndContactsForRoles === null || frontEndContactsForRoles === void 0 ? void 0 : (_frontEndContactsForR = frontEndContactsForRoles.find(function (fec) {\n      return fec.id === fecId;\n    })) === null || _frontEndContactsForR === void 0 ? void 0 : _frontEndContactsForR.name;\n    return selectedFecName === null || selectedFecName === void 0 ? void 0 : selectedFecName.substring(0, selectedFecName.indexOf('-') - 1);\n  };\n\n  var getUpdatedInstruction = function getUpdatedInstruction(instruction, formValues) {\n    var _bordereauTypes$find;\n\n    return _objectSpread(_objectSpread({}, instruction), {}, {\n      details: _objectSpread(_objectSpread({}, formValues), {}, {\n        instructionId: instruction === null || instruction === void 0 ? void 0 : instruction.id,\n        producingBrokerName: getSelectedProducingBrokerName(formValues.producingBrokerId),\n        // workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId), //TO DO\n        frontEndContact: getSelectedFrontEndContactName(formValues.frontEndContactId)\n      }, isBordereau && {\n        bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\n        bordereauTypeId: ((_bordereauTypes$find = bordereauTypes.find(function (type) {\n          return type.value === formValues.bordereauTypeId;\n        })) === null || _bordereauTypes$find === void 0 ? void 0 : _bordereauTypes$find.id) || null\n      })\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    var _childRef$current2, _childRef$current2$pr;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current2 = childRef.current) === null || _childRef$current2 === void 0 ? void 0 : (_childRef$current2$pr = _childRef$current2.props) === null || _childRef$current2$pr === void 0 ? void 0 : _childRef$current2$pr.resetFunc;\n\n    if (utils.generic.isFunction(reset)) {\n      reset(defaultValues, {\n        keepDirty: false\n      });\n    }\n  };\n\n  var handleSubmitBordereau = function handleSubmitBordereau() {\n    var _childRef$current3, _childRef$current3$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current3 = childRef.current) === null || _childRef$current3 === void 0 ? void 0 : (_childRef$current3$pr = _childRef$current3.props) === null || _childRef$current3$pr === void 0 ? void 0 : _childRef$current3$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n    var bordereauTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauTypeId);\n    var bordereauPeriod = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPeriod);\n    var bordereauPolicyTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPolicyTypeId);\n\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\n      proceedToSubmission();\n    } else if (!isFrontEndIdSelected) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n    } else if (!bordereauTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\n    } else if (!bordereauPeriod) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\n    } else if (!bordereauPolicyTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\n    }\n  };\n\n  var handleSubmitEndorseFa = function handleSubmitEndorseFa() {\n    var _childRef$current4, _childRef$current4$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current4 = childRef.current) === null || _childRef$current4 === void 0 ? void 0 : (_childRef$current4$pr = _childRef$current4.props) === null || _childRef$current4$pr === void 0 ? void 0 : _childRef$current4$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n\n    if (isFrontEndIdSelected) {\n      proceedToSubmission();\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSave = function handleSave() {\n    var _childRef$current5, _childRef$current5$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current5 = childRef.current) === null || _childRef$current5 === void 0 ? void 0 : (_childRef$current5$pr = _childRef$current5.props) === null || _childRef$current5$pr === void 0 ? void 0 : _childRef$current5$pr.values) || {};\n    var isFrontEndIdSelected = (formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId) !== null;\n\n    if (isFrontEndIdSelected) {\n      var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n      dispatch(updateProcessingInstruction(updatedInstruction));\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getProcessingInstruction(id));\n\n            case 2:\n              response = _context.sent;\n\n              if (response) {\n                if (isEndorsement && isAnyRiskRefHavingNoDocument) {\n                  mandatoryDocumentsNotUploaded();\n                } else {\n                  if (isBordereau) {\n                    handleSubmitBordereau();\n                  } else {\n                    handleSubmitEndorseFa();\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mandatoryDocumentsNotUploaded = function mandatoryDocumentsNotUploaded() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 536,\n            columnNumber: 29\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var proceedToSubmission = function proceedToSubmission() {\n    var _childRef$current6, _childRef$current6$pr, _businessProcesses$fi;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current6 = childRef.current) === null || _childRef$current6 === void 0 ? void 0 : (_childRef$current6$pr = _childRef$current6.props) === null || _childRef$current6$pr === void 0 ? void 0 : _childRef$current6$pr.values) || {};\n    var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n    var businessProcess = businessProcesses === null || businessProcesses === void 0 ? void 0 : (_businessProcesses$fi = businessProcesses.find(function (bp) {\n      return bp.businessProcessID === updatedInstruction.businessProcessId;\n    })) === null || _businessProcesses$fi === void 0 ? void 0 : _businessProcesses$fi.businessProcessName;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: 'processingInstructions.authorisations.form.title',\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\n          cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\n          note: utils.string.t('processingInstructions.authorisations.form.note'),\n          submitHandler: function submitHandler() {\n            dispatch(submitProcessingInstruction(_objectSpread(_objectSpread({}, updatedInstruction), {}, {\n              businessProcess: businessProcess,\n              statusId: PI_STATUS_SUBMITTED_PROCESSING\n            }))).then(function (res) {\n              // check that the response was successful\n              history.push('/processing-instructions');\n              dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var toggleTab = function toggleTab(tab) {\n    setSelectedTab(tab);\n    history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id).concat(step ? \"/\".concat(step) : '').concat(tab ? \"/\".concat(tab) : ''));\n  }; // abort\n\n\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsEndorseFaBorderView, {\n    instruction: instruction,\n    leadRef: leadRef,\n    tabs: tabs,\n    selectedTab: selectedTab,\n    fields: fields,\n    defaultValues: defaultValues,\n    isEndorsement: isEndorsement,\n    isBordereau: isBordereau,\n    isFeeAndAmendment: isFeeAndAmendment,\n    isReadOnly: isReadOnly,\n    isSubmittedProcessing: isSubmittedProcessing,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      cancel: handleCancel,\n      save: handleSave,\n      submit: handleSubmit,\n      toggleTab: toggleTab\n    }),\n    ref: childRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 595,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsEndorseFaBorder, \"QYp1aRdBv0LxgEI2V82C0kJMaCo=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsEndorseFaBorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsEndorseFaBorder\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsEndorseFaBorder/ProcessingInstructionsEndorseFaBorder.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","useHistory","useParams","moment","uniqBy","get","ProcessingInstructionsEndorseFaBorderView","showModal","getUsersForRole","selectUser","selectUserDetails","selectUsersInRoles","getBordereauPolicyTypes","updateProcessingInstruction","submitProcessingInstruction","getProcessingInstruction","enqueueNotification","selectProducingBrokerNamesForRiskReference","selectPiProducingBrokers","updateReferenceDocumentCountLoading","getRiskReferenceDocumentsCount","PI_STATUS_SUBMITTED_PROCESSING","FRONT_END_CONTACT","OPERATIONS_LEAD","AUTHORISED_SIGNATORY","utils","config","constants","ProcessingInstructionsEndorseFaBorder","propTypes","instruction","object","isRequired","handlers","shape","back","func","childRef","dispatch","history","id","step","tab","user","users","currentUser","bordereauPolicyTypes","state","piProducingBrokers","producingBrokersFromRoles","documents","producingBrokers","generic","isValidArray","isDraft","processingInstructions","status","statusId","isRejectedDraft","isSubmittedProcessing","isReopened","businessProcesses","userHasWritePermission","app","access","feature","isEditable","isReadOnly","isEndorsement","processTypeId","isBordereau","isFeeAndAmendment","faBorderProcessType","defaultValues","setDefaultValues","isAnyRiskRefHavingNoDocument","setIsAnyRiskRefHavingNoDocument","riskReferences","leadRef","find","r","leadPolicy","leadRefProducingBrokerName","producingBrokerName","bordereauTypes","name","value","label","string","t","feeAndAmendmentTypes","tabs","isValidTab","map","item","includes","selectedTab","setSelectedTab","reset","current","props","resetFunc","updatedDefaultValues","form","getInitialValues","fields","isFunction","keepDirty","getRiskReferenceDocumentCount","referenceList","refData","endorsementId","endorsementNumber","riskRefId","xbInstanceId","xbPolicyId","documentTypeValue","PI_ENDORSEMENT_TYPE_DOCUMENT","documentTypeDescription","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","then","response","API_RESPONSE_OK","data","some","a","documentCount","filterUsersByRole","roleNames","reduce","acc","cur","groupDepartXbInstanceIds","departmentId","filter","u","userRole","split","x","trim","userId","fullName","emailId","frontEndContactsForRoles","getFrontEndContactId","frontEndContactId","details","fec","getProducingBrokerId","producingBrokerId","type","leadProducingBroker","toLowerCase","getSelectedProducingBrokerName","selectedProducingBrokerName","producingBroker","getBordereauPolicyTypeId","bordereauPolicyTypeId","bordereauPolicyTypeID","getBordereauTypeValue","defaultId","defaultType","bordereauTypeId","obj","options","optionKey","optionLabel","muiComponentProps","disabled","group","isInvalidOrEmptyArray","frontEndSendDocs","highPriority","notes","multiline","minRows","maxRows","ppwOrPpc","isNonPremium","title","feeOrAmendment","muiFormGroupProps","row","bordereauPeriod","outputFormat","placeholder","fullWidth","helperText","muiPickerProps","views","format","clearable","getSelectedFrontEndContactName","fecId","selectedFecName","substring","indexOf","getUpdatedInstruction","formValues","instructionId","frontEndContact","handleCancel","handleSubmitBordereau","values","isFrontEndIdSelected","Boolean","proceedToSubmission","handleSubmitEndorseFa","handleSave","updatedInstruction","handleSubmit","mandatoryDocumentsNotUploaded","component","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","buttonColors","confirm","submitHandler","handleClose","businessProcess","bp","businessProcessID","businessProcessId","businessProcessName","cancelLabel","confirmMessageText","note","res","push","toggleTab","replace","routes","steps","cancel","save","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport moment from 'moment';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\r\nimport {\r\n  showModal,\r\n  getUsersForRole,\r\n  selectUser,\r\n  selectUserDetails,\r\n  selectUsersInRoles,\r\n  getBordereauPolicyTypes,\r\n  updateProcessingInstruction,\r\n  submitProcessingInstruction,\r\n  getProcessingInstruction,\r\n  enqueueNotification,\r\n  // selectWorkFlowFrontEndContactNamesForRiskReference,  //TO DO\r\n  selectProducingBrokerNamesForRiskReference,\r\n  selectPiProducingBrokers,\r\n  updateReferenceDocumentCountLoading,\r\n  getRiskReferenceDocumentsCount,\r\n} from 'stores';\r\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nProcessingInstructionsEndorseFaBorder.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsEndorseFaBorder({ instruction, handlers, childRef }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id, step, tab } = useParams();\r\n\r\n  const user = useSelector(selectUser);\r\n  const users = useSelector(selectUsersInRoles);\r\n  const currentUser = useSelector(selectUserDetails);\r\n  const bordereauPolicyTypes = useSelector((state) => get(state, 'processingInstructions.bordereauPolicyTypes'));\r\n  const piProducingBrokers = useSelector(selectProducingBrokerNamesForRiskReference);\r\n  const producingBrokersFromRoles = useSelector(selectPiProducingBrokers);\r\n\r\n  //const piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);  //TO DO\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n\r\n  //TO DO\r\n  // const piWorkFlowFrontEndContactNames = piFrontEndContactNames.map((type) => {\r\n  //   return {\r\n  //     id: type.id,\r\n  //     name: type.value,\r\n  //   };\r\n  // });\r\n\r\n  const producingBrokers = utils.generic.isValidArray(piProducingBrokers, true) ? piProducingBrokers : producingBrokersFromRoles;\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const businessProcesses = useSelector((state) => get(state, 'referenceData.businessProcesses'));\r\n\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\r\n  const isReadOnly = !isEditable;\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n  const faBorderProcessType = isBordereau || isFeeAndAmendment;\r\n\r\n  const [defaultValues, setDefaultValues] = useState();\r\n  const [isAnyRiskRefHavingNoDocument, setIsAnyRiskRefHavingNoDocument] = useState(false);\r\n\r\n  const riskReferences = instruction?.riskReferences;\r\n  const leadRef = instruction?.riskReferences?.find((r) => r.leadPolicy);\r\n\r\n  // const leadFrontEndContactNameValue = leadRef?.workFlowFrontEndContactName;  //TO DO\r\n  const leadRefProducingBrokerName = leadRef?.producingBrokerName;\r\n\r\n  const bordereauTypes = [\r\n    {\r\n      id: 1,\r\n      name: 'premium',\r\n      value: 'premium',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium'),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'claims',\r\n      value: 'claims',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims'),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'combined',\r\n      value: 'combined',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined'),\r\n    },\r\n  ];\r\n\r\n  const feeAndAmendmentTypes = [\r\n    {\r\n      name: 'fee',\r\n      value: 'fee',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee'),\r\n    },\r\n    {\r\n      name: 'amendment',\r\n      value: 'amendment',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment'),\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'processing-instruction', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi') },\r\n    { value: 'documents', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc') },\r\n  ];\r\n\r\n  const isValidTab = tabs.map((item) => item.value).includes(tab);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(isValidTab ? tab : 'processing-instruction');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\r\n    dispatch(getBordereauPolicyTypes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(\r\n    () => {\r\n      const reset = childRef?.current?.props?.resetFunc;\r\n      const updatedDefaultValues = {\r\n        ...utils.form.getInitialValues(fields),\r\n      };\r\n\r\n      setDefaultValues(updatedDefaultValues);\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset(updatedDefaultValues, {\r\n          keepDirty: false,\r\n        });\r\n      }\r\n    },\r\n    [instruction] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const getRiskReferenceDocumentCount = () => {\r\n    if (utils.generic.isValidArray(documents?.riskReferences, true)) {\r\n      dispatch(updateReferenceDocumentCountLoading(true));\r\n      const referenceList = documents?.riskReferences?.map((refData) => {\r\n        return {\r\n          endorsementId: refData.endorsementId,\r\n          endorsementNumber: refData.endorsementNumber,\r\n          riskRefId: refData.riskRefId,\r\n          xbInstanceId: refData.xbInstanceId,\r\n          xbPolicyId: refData.xbPolicyId,\r\n        };\r\n      });\r\n      const documentTypeValue = isEndorsement\r\n        ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription\r\n        : faBorderProcessType\r\n        ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription\r\n        : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\r\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then((response) => {\r\n        if (response?.status === constants.API_RESPONSE_OK) {\r\n          setIsAnyRiskRefHavingNoDocument(response?.data?.some((a) => a.documentCount === 0));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRiskReferenceDocumentCount();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const filterUsersByRole = (roleNames) => {\r\n    return riskReferences?.reduce((acc, cur) => {\r\n      const groupDepartXbInstanceIds = `${cur.departmentId}-${cur.xbInstanceId}`;\r\n      return [\r\n        ...acc,\r\n        ...users\r\n          .filter((u) => roleNames.includes(u.userRole))\r\n          .filter((u) =>\r\n            u.departmentId\r\n              ?.split(',')\r\n              .map((x) => x.trim())\r\n              .includes(groupDepartXbInstanceIds)\r\n          )\r\n          .map((u) => {\r\n            return { id: u.userId, name: u.fullName + ' - ' + u.emailId };\r\n          }),\r\n      ];\r\n    }, []);\r\n  };\r\n\r\n  const frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id');\r\n  // TO DO\r\n  // const frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)\r\n  //   ? piWorkFlowFrontEndContactNames\r\n  //   : frontEndContactsForRoles;\r\n\r\n\r\n  const getFrontEndContactId = () => {\r\n    let frontEndContactId = instruction.details?.frontEndContactId;\r\n    // const workFlowFrontEndContactName = instruction.details?.workFlowFrontEndContactName;  //TO DO\r\n    let user;\r\n\r\n    //TO DO\r\n    // if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\r\n    //   if (workFlowFrontEndContactName) {\r\n    //     user = piWorkFlowFrontEndContactNames.find((fec) => fec.id === frontEndContactId);\r\n    //     frontEndContactId = user?.id;\r\n    //   } else if (leadFrontEndContactNameValue) {\r\n    //     const frontEndContactValue = piWorkFlowFrontEndContactNames?.find(\r\n    //       (type) => type?.name?.toLowerCase() === leadFrontEndContactNameValue?.toLowerCase()\r\n    //     );\r\n    //     frontEndContactId = frontEndContactValue?.id;\r\n    //   }\r\n    // } else\r\n    if (!frontEndContactId && utils.generic.isValidArray(frontEndContactsForRoles, true)) {\r\n      user = frontEndContactsForRoles.find((fec) => fec.id === currentUser?.id);\r\n      frontEndContactId = user?.id;\r\n    }\r\n\r\n    return frontEndContactId || '';\r\n  };\r\n\r\n  //TO DO\r\n  // const getSelectedFrontEndContactName = (frontEndContactd) => {\r\n  //   const selectedFrontEndContactName = piWorkFlowFrontEndContactNames?.find(\r\n  //     (frontEndContact) => frontEndContact?.id === frontEndContactd\r\n  //   )?.name;\r\n  //   return selectedFrontEndContactName;\r\n  // };\r\n\r\n\r\n  const getProducingBrokerId = () => {\r\n    let producingBrokerId = instruction?.details?.producingBrokerId;\r\n    let item;\r\n\r\n    if (utils.generic.isValidArray(piProducingBrokers, true)) {\r\n      if (producingBrokerId) {\r\n        item = piProducingBrokers.find((type) => type.id === producingBrokerId);\r\n        producingBrokerId = item?.id;\r\n      } else if (leadRefProducingBrokerName) {\r\n        const leadProducingBroker = piProducingBrokers?.find(\r\n          (type) => type?.value?.toLowerCase() === leadRefProducingBrokerName?.toLowerCase()\r\n        );\r\n        producingBrokerId = leadProducingBroker?.id;\r\n      }\r\n    } else if (!producingBrokerId && utils.generic.isValidArray(producingBrokers, true)) {\r\n      item = producingBrokers.find((type) => type.id === instruction?.details?.producingBrokerId);\r\n      producingBrokerId = item?.id;\r\n    }\r\n\r\n    return producingBrokerId || '';\r\n  };\r\n\r\n  const getSelectedProducingBrokerName = (producingBrokerId) => {\r\n    const selectedProducingBrokerName = piProducingBrokers?.find((producingBroker) => producingBroker?.id === producingBrokerId)?.value;\r\n    return selectedProducingBrokerName;\r\n  };\r\n\r\n  const getBordereauPolicyTypeId = () => {\r\n    let bordereauPolicyTypeId = instruction.details?.bordereauPolicyTypeId;\r\n\r\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\r\n      const item = bordereauPolicyTypes.find((type) => type.bordereauPolicyTypeID === instruction?.details?.bordereauPolicyTypeId);\r\n      bordereauPolicyTypeId = item?.bordereauPolicyTypeID;\r\n    }\r\n\r\n    return bordereauPolicyTypeId || '';\r\n  };\r\n\r\n  const getBordereauTypeValue = () => {\r\n    const defaultId = 1;\r\n    const defaultType = 'premium';\r\n    const bordereauTypeId = instruction?.details?.bordereauTypeId || defaultId;\r\n\r\n    const obj = bordereauTypes.find((type) => type.id === bordereauTypeId);\r\n    return obj?.value || defaultType;\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'frontEndContactId',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\r\n      value: getFrontEndContactId(),\r\n      options: frontEndContactsForRoles,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'producingBrokerId',\r\n      group: 'general',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.checklist.fields.producingBroker'),\r\n      value: getProducingBrokerId(),\r\n      options: producingBrokers,\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly || utils.generic.isInvalidOrEmptyArray(producingBrokers),\r\n      },\r\n    },\r\n    {\r\n      name: 'frontEndSendDocs',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\r\n      value: instruction?.details?.frontEndSendDocs || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'highPriority',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\r\n      value: instruction?.details?.highPriority || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\r\n      value: instruction?.details?.notes || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 5,\r\n        maxRows: 10,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    ...(isEndorsement\r\n      ? [\r\n          {\r\n            name: 'ppwOrPpc',\r\n            type: 'checkbox',\r\n            value: instruction?.details?.ppwOrPpc || false,\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isEndorsement || isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'isNonPremium',\r\n            type: 'checkbox',\r\n            value: leadRef?.isNonPremium === 'Yes',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\r\n            disabled: true,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'feeOrAmendment',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\r\n            value: instruction?.details?.feeOrAmendment || 'fee',\r\n            options: feeAndAmendmentTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isBordereau\r\n      ? [\r\n          {\r\n            name: 'bordereauPolicyTypeId',\r\n            type: 'select',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\r\n            value: getBordereauPolicyTypeId(),\r\n            options: bordereauPolicyTypes,\r\n            optionKey: 'bordereauPolicyTypeID',\r\n            optionLabel: 'bordereauPolicyTypeDetails',\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'bordereauPeriod',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\r\n            value: instruction?.details?.bordereauPeriod || null,\r\n            outputFormat: 'iso',\r\n            placeholder: 'MM YYYY',\r\n            muiComponentProps: {\r\n              fullWidth: true,\r\n              helperText: utils.string.t(\r\n                'processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'\r\n              ),\r\n              disabled: isReadOnly,\r\n            },\r\n            muiPickerProps: {\r\n              views: ['year', 'month'],\r\n              format: 'MM YYYY',\r\n              clearable: true,\r\n            },\r\n          },\r\n          {\r\n            name: 'bordereauTypeId',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\r\n            value: getBordereauTypeValue(),\r\n            options: bordereauTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const getSelectedFrontEndContactName = (fecId) => {\r\n    const selectedFecName = frontEndContactsForRoles?.find((fec) => fec.id === fecId)?.name;\r\n    return selectedFecName?.substring(0, selectedFecName.indexOf('-') - 1);\r\n  };\r\n\r\n  const getUpdatedInstruction = (instruction, formValues) => {\r\n    return {\r\n      ...instruction,\r\n      details: {\r\n        ...formValues,\r\n        instructionId: instruction?.id,\r\n        producingBrokerName: getSelectedProducingBrokerName(formValues.producingBrokerId),\r\n        \r\n        // workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId), //TO DO\r\n        frontEndContact: getSelectedFrontEndContactName(formValues.frontEndContactId),\r\n\r\n        ...(isBordereau && {\r\n          bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\r\n          bordereauTypeId: bordereauTypes.find((type) => type.value === formValues.bordereauTypeId)?.id || null,\r\n        }),\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const reset = childRef?.current?.props?.resetFunc;\r\n\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset(defaultValues, { keepDirty: false });\r\n    }\r\n  };\r\n\r\n  const handleSubmitBordereau = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    const bordereauTypeId = Boolean(formValues?.bordereauTypeId);\r\n    const bordereauPeriod = Boolean(formValues?.bordereauPeriod);\r\n    const bordereauPolicyTypeId = Boolean(formValues?.bordereauPolicyTypeId);\r\n\r\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\r\n      proceedToSubmission();\r\n    } else if (!isFrontEndIdSelected) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n    } else if (!bordereauTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\r\n    } else if (!bordereauPeriod) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\r\n    } else if (!bordereauPolicyTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\r\n    }\r\n  };\r\n\r\n  const handleSubmitEndorseFa = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    if (isFrontEndIdSelected) {\r\n      proceedToSubmission();\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = formValues?.frontEndContactId !== null;\r\n\r\n    if (isFrontEndIdSelected) {\r\n      const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n      dispatch(updateProcessingInstruction(updatedInstruction));\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const response = await dispatch(getProcessingInstruction(id));\r\n    if (response) {\r\n      if (isEndorsement && isAnyRiskRefHavingNoDocument) {\r\n        mandatoryDocumentsNotUploaded();\r\n      } else {\r\n        if (isBordereau) {\r\n          handleSubmitBordereau();\r\n        } else {\r\n          handleSubmitEndorseFa();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const mandatoryDocumentsNotUploaded = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessage: <span>{utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')}</span>,\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const proceedToSubmission = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n    const businessProcess = businessProcesses?.find(\r\n      (bp) => bp.businessProcessID === updatedInstruction.businessProcessId\r\n    )?.businessProcessName;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: 'processingInstructions.authorisations.form.title',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\r\n            cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\r\n            note: utils.string.t('processingInstructions.authorisations.form.note'),\r\n\r\n            submitHandler: () => {\r\n              dispatch(\r\n                submitProcessingInstruction({\r\n                  ...updatedInstruction,\r\n                  businessProcess,\r\n                  statusId: PI_STATUS_SUBMITTED_PROCESSING,\r\n                })\r\n              ).then((res) => {\r\n                // check that the response was successful\r\n                history.push('/processing-instructions');\r\n                dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\r\n              });\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const toggleTab = (tab) => {\r\n    setSelectedTab(tab);\r\n    history.replace(`${config.routes.processingInstructions.steps}/${id}${step ? `/${step}` : ''}${tab ? `/${tab}` : ''}`);\r\n  };\r\n\r\n  // abort\r\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\r\n\r\n  return (\r\n    <ProcessingInstructionsEndorseFaBorderView\r\n      instruction={instruction}\r\n      leadRef={leadRef}\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      fields={fields}\r\n      defaultValues={defaultValues}\r\n      isEndorsement={isEndorsement}\r\n      isBordereau={isBordereau}\r\n      isFeeAndAmendment={isFeeAndAmendment}\r\n      isReadOnly={isReadOnly}\r\n      isSubmittedProcessing={isSubmittedProcessing}\r\n      handlers={{\r\n        ...handlers,\r\n        cancel: handleCancel,\r\n        save: handleSave,\r\n        submit: handleSubmit,\r\n        toggleTab,\r\n      }}\r\n      ref={childRef}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}