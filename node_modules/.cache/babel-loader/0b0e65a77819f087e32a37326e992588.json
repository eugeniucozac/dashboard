{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DrawerComponent\\\\DrawerComponent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './DrawerComponent.styles';\nimport { setDmsWidgetExpand } from 'stores'; //mui\n\nimport { makeStyles, Drawer, Divider, IconButton } from '@material-ui/core';\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\nimport DescriptionIcon from '@material-ui/icons/Description';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDrawerComponent.propTypes = {\n  isDrawerOpen: PropTypes.bool.isRequired,\n  isFromDashboard: PropTypes.bool\n};\nexport default function DrawerComponent(_ref) {\n  _s();\n\n  var isDrawerOpen = _ref.isDrawerOpen,\n      children = _ref.children,\n      isFromDashboard = _ref.isFromDashboard;\n  var nestedClasses = makeStyles(styles, {\n    name: 'DrawerComponent'\n  })({\n    isFromDashboard: isFromDashboard\n  });\n  var dispatch = useDispatch();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isDrawerExpanded = _useState2[0],\n      setIsDrawerExpanded = _useState2[1];\n\n  var handleArrowClick = function handleArrowClick() {\n    setIsDrawerExpanded(!isDrawerExpanded);\n  };\n\n  useEffect(function () {\n    dispatch(setDmsWidgetExpand(isDrawerExpanded));\n  }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Drawer, {\n    variant: \"persistent\",\n    anchor: \"right\",\n    open: isDrawerOpen,\n    classes: {\n      paper: isDrawerExpanded ? nestedClasses.drawerPaperExpanded : nestedClasses.drawerPaper\n    },\n    children: [/*#__PURE__*/_jsxDEV(IconButton, {\n      color: \"inherit\",\n      \"aria-label\": \"open\",\n      edge: \"start\",\n      onClick: handleArrowClick,\n      children: [isDrawerExpanded ? /*#__PURE__*/_jsxDEV(ChevronRightIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 29\n      }, this) : /*#__PURE__*/_jsxDEV(ChevronLeftIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 43,\n        columnNumber: 52\n      }, this), isDrawerExpanded ? null : /*#__PURE__*/_jsxDEV(DescriptionIcon, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 36\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 46,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 34,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DrawerComponent, \"4xtZbPBUH5IcjUZEOZ00UBSq4iU=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DrawerComponent;\n\nvar _c;\n\n$RefreshReg$(_c, \"DrawerComponent\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DrawerComponent/DrawerComponent.js"],"names":["React","useState","useEffect","useDispatch","PropTypes","styles","setDmsWidgetExpand","makeStyles","Drawer","Divider","IconButton","ChevronLeftIcon","ChevronRightIcon","DescriptionIcon","DrawerComponent","propTypes","isDrawerOpen","bool","isRequired","isFromDashboard","children","nestedClasses","name","dispatch","isDrawerExpanded","setIsDrawerExpanded","handleArrowClick","paper","drawerPaperExpanded","drawerPaper"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,QAA2C,OAA3C;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,0BAAnB;AACA,SAASC,kBAAT,QAAmC,QAAnC,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,MAArB,EAA6BC,OAA7B,EAAsCC,UAAtC,QAAwD,mBAAxD;AACA,OAAOC,eAAP,MAA4B,gCAA5B;AACA,OAAOC,gBAAP,MAA6B,iCAA7B;AACA,OAAOC,eAAP,MAA4B,gCAA5B;;AAEAC,eAAe,CAACC,SAAhB,GAA4B;AAC1BC,EAAAA,YAAY,EAAEZ,SAAS,CAACa,IAAV,CAAeC,UADH;AAE1BC,EAAAA,eAAe,EAAEf,SAAS,CAACa;AAFD,CAA5B;AAKA,eAAe,SAASH,eAAT,OAAsE;AAAA;;AAAA,MAA3CE,YAA2C,QAA3CA,YAA2C;AAAA,MAA7BI,QAA6B,QAA7BA,QAA6B;AAAA,MAAnBD,eAAmB,QAAnBA,eAAmB;AACnF,MAAME,aAAa,GAAGd,UAAU,CAACF,MAAD,EAAS;AAAEiB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,CAAgD;AAAEH,IAAAA,eAAe,EAAfA;AAAF,GAAhD,CAAtB;AACA,MAAMI,QAAQ,GAAGpB,WAAW,EAA5B;;AAFmF,kBAGnCF,QAAQ,CAAC,KAAD,CAH2B;AAAA;AAAA,MAG5EuB,gBAH4E;AAAA,MAG1DC,mBAH0D;;AAKnF,MAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB,GAAM;AAC7BD,IAAAA,mBAAmB,CAAC,CAACD,gBAAF,CAAnB;AACD,GAFD;;AAIAtB,EAAAA,SAAS,CAAC,YAAM;AACdqB,IAAAA,QAAQ,CAACjB,kBAAkB,CAACkB,gBAAD,CAAnB,CAAR;AACD,GAFQ,EAEN,CAACA,gBAAD,CAFM,CAAT,CATmF,CAW3D;;AAExB,sBACE,QAAC,MAAD;AACE,IAAA,OAAO,EAAC,YADV;AAEE,IAAA,MAAM,EAAC,OAFT;AAGE,IAAA,IAAI,EAAER,YAHR;AAIE,IAAA,OAAO,EAAE;AACPW,MAAAA,KAAK,EAAEH,gBAAgB,GAAGH,aAAa,CAACO,mBAAjB,GAAuCP,aAAa,CAACQ;AADrE,KAJX;AAAA,4BAQE,QAAC,UAAD;AAAY,MAAA,KAAK,EAAC,SAAlB;AAA4B,oBAAW,MAAvC;AAA8C,MAAA,IAAI,EAAC,OAAnD;AAA2D,MAAA,OAAO,EAAEH,gBAApE;AAAA,iBACGF,gBAAgB,gBAAG,QAAC,gBAAD;AAAA;AAAA;AAAA;AAAA,cAAH,gBAA0B,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAD7C,EAEGA,gBAAgB,GAAG,IAAH,gBAAU,QAAC,eAAD;AAAA;AAAA;AAAA;AAAA,cAF7B;AAAA;AAAA;AAAA;AAAA;AAAA,YARF,eAYE,QAAC,OAAD;AAAA;AAAA;AAAA;AAAA,YAZF,EAaGJ,QAbH;AAAA;AAAA;AAAA;AAAA;AAAA,UADF;AAiBD;;GA9BuBN,e;UAELX,W;;;KAFKW,e","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './DrawerComponent.styles';\r\nimport { setDmsWidgetExpand } from 'stores';\r\n\r\n//mui\r\nimport { makeStyles, Drawer, Divider, IconButton } from '@material-ui/core';\r\nimport ChevronLeftIcon from '@material-ui/icons/ChevronLeft';\r\nimport ChevronRightIcon from '@material-ui/icons/ChevronRight';\r\nimport DescriptionIcon from '@material-ui/icons/Description';\r\n\r\nDrawerComponent.propTypes = {\r\n  isDrawerOpen: PropTypes.bool.isRequired,\r\n  isFromDashboard: PropTypes.bool,\r\n};\r\n\r\nexport default function DrawerComponent({ isDrawerOpen, children, isFromDashboard }) {\r\n  const nestedClasses = makeStyles(styles, { name: 'DrawerComponent' })({ isFromDashboard });\r\n  const dispatch = useDispatch();\r\n  const [isDrawerExpanded, setIsDrawerExpanded] = useState(false);\r\n\r\n  const handleArrowClick = () => {\r\n    setIsDrawerExpanded(!isDrawerExpanded);\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsWidgetExpand(isDrawerExpanded));\r\n  }, [isDrawerExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Drawer\r\n      variant=\"persistent\"\r\n      anchor=\"right\"\r\n      open={isDrawerOpen}\r\n      classes={{\r\n        paper: isDrawerExpanded ? nestedClasses.drawerPaperExpanded : nestedClasses.drawerPaper,\r\n      }}\r\n    >\r\n      <IconButton color=\"inherit\" aria-label=\"open\" edge=\"start\" onClick={handleArrowClick}>\r\n        {isDrawerExpanded ? <ChevronRightIcon /> : <ChevronLeftIcon />}\r\n        {isDrawerExpanded ? null : <DescriptionIcon />}\r\n      </IconButton>\r\n      <Divider />\r\n      {children}\r\n    </Drawer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}