{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DepartmentAccountsCalendarTable\\\\DepartmentAccountsCalendarTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport uniqBy from 'lodash/uniqBy'; // app\n\nimport styles from './DepartmentAccountsCalendarTable.styles';\nimport { AvatarGroup, SeparatedList, Overflow, PopoverMenu, Restricted, Status, TableCell, TableHead, Translate } from 'components';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport { useMedia } from 'hooks';\nimport config from 'config'; // mui\n\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\nimport TablePagination from '@material-ui/core/TablePagination';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDepartmentAccountsCalendarTableView.propTypes = {\n  items: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  firstItem: PropTypes.number,\n  placementId: PropTypes.number,\n  placementStatuses: PropTypes.array,\n  handleClickRow: PropTypes.func.isRequired,\n  handleDoubleClickRow: PropTypes.func.isRequired,\n  handleNtuClick: PropTypes.func.isRequired,\n  handleRemovePlacementClick: PropTypes.func.isRequired,\n  handleEditPlacementClick: PropTypes.func.isRequired\n};\nDepartmentAccountsCalendarTableView.defaultProps = {\n  pagination: {\n    obj: {},\n    handlers: {}\n  }\n};\nexport function DepartmentAccountsCalendarTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var items = _ref.items,\n      firstItem = _ref.firstItem,\n      cols = _ref.cols,\n      sort = _ref.sort,\n      placementId = _ref.placementId,\n      placementStatuses = _ref.placementStatuses,\n      handleClickRow = _ref.handleClickRow,\n      handleDoubleClickRow = _ref.handleDoubleClickRow,\n      handleNtuClick = _ref.handleNtuClick,\n      handleEditPlacementClick = _ref.handleEditPlacementClick,\n      handleRemovePlacementClick = _ref.handleRemovePlacementClick;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'DepartmentAccountsTable'\n  })({\n    wide: media.wideUp\n  });\n\n  var _config$ui = config === null || config === void 0 ? void 0 : config.ui,\n      pagination = _config$ui.pagination;\n\n  var _useState = useState(0),\n      _useState2 = _slicedToArray(_useState, 2),\n      page = _useState2[0],\n      setPage = _useState2[1];\n\n  var _useState3 = useState(pagination[\"default\"]),\n      _useState4 = _slicedToArray(_useState3, 2),\n      rowsPerPage = _useState4[0],\n      setRowsPerPage = _useState4[1];\n\n  useEffect(function () {\n    if (firstItem > 0) {\n      var currentPage = Math.ceil(firstItem / rowsPerPage) - 1;\n      setPage(currentPage);\n    }\n  }, [firstItem, rowsPerPage]);\n\n  var handleChangePage = function handleChangePage(event, newPage) {\n    setPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(event) {\n    setRowsPerPage(+event.target.value);\n    setPage(0);\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.monthBox,\n    \"data-testid\": \"department-accounts-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        className: classes.table,\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"renewal-list\",\n          children: items.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map(function (item) {\n            var _classnames;\n\n            var statusPlacementNtuId = utils.referenceData.status.getIdByCode(placementStatuses, constants.STATUS_PLACEMENT_NTU);\n            var statusLabel = utils.referenceData.status.getLabelById(placementStatuses, item.statusId);\n            var brokers = utils.users.getBrokers(item.users, {\n              gxbUsersIncluded: true\n            });\n            var cobrokersPlacement = utils.users.getCobrokers(item.users);\n            var cobrokersOffice = utils.placement.getOfficeCobrokers(item);\n            var cobrokers = uniqBy([].concat(_toConsumableArray(cobrokersPlacement), _toConsumableArray(cobrokersOffice)));\n            return /*#__PURE__*/_jsxDEV(TableRow, {\n              onClick: handleClickRow(item.id),\n              onDoubleClick: handleDoubleClickRow(item.id),\n              hover: true,\n              className: classnames(classes.row, (_classnames = {}, _defineProperty(_classnames, classes.rowNew, Boolean(item.__new__)), _defineProperty(_classnames, classes.rowSelected, item.id === placementId), _classnames)),\n              \"data-testid\": \"placement.\".concat(item.id),\n              children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                \"data-testid\": \"insured-\".concat(item.id),\n                children: /*#__PURE__*/_jsxDEV(SeparatedList, {\n                  list: item.insureds,\n                  flag: \"isProvisional\",\n                  flagType: \"alert\",\n                  flagIcon: InfoOutlinedIcon,\n                  flagTooltip: /*#__PURE__*/_jsxDEV(Translate, {\n                    label: \"renewals.provisionalInsuredTooltip\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 108,\n                    columnNumber: 36\n                  }, _this),\n                  hover: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 103,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 102,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: 2,\n                compact: true,\n                nestedClasses: {\n                  root: classes.clientWrapperCell\n                },\n                \"data-testid\": \"client-office-\".concat(item.id),\n                children: /*#__PURE__*/_jsxDEV(Table, {\n                  children: /*#__PURE__*/_jsxDEV(TableBody, {\n                    children: item.clients && item.clients.map(function (client) {\n                      var _classesClientCell;\n\n                      var logo = utils.client.parent.getLogoFilePath(client);\n                      var altText = [client.parent, client.name].filter(function (i) {\n                        return i;\n                      }).join(' ');\n                      var classesClientCell = (_classesClientCell = {}, _defineProperty(_classesClientCell, classes.clientCell, true), _defineProperty(_classesClientCell, classes.clientNoOfficeCell, !logo), _classesClientCell);\n                      var colspan = logo ? 1 : 2;\n                      return /*#__PURE__*/_jsxDEV(TableRow, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          colSpan: colspan,\n                          borderless: true,\n                          compact: true,\n                          title: altText,\n                          nestedClasses: {\n                            root: classnames(classesClientCell)\n                          },\n                          children: [logo && /*#__PURE__*/_jsxDEV(\"img\", {\n                            src: logo,\n                            alt: \"logo \".concat(altText),\n                            className: classes.logo\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 142,\n                            columnNumber: 44\n                          }, _this), !logo && /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.clientName,\n                            children: client.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 143,\n                            columnNumber: 45\n                          }, _this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 135,\n                          columnNumber: 33\n                        }, _this), logo && /*#__PURE__*/_jsxDEV(TableCell, {\n                          borderless: true,\n                          compact: true,\n                          title: client.name,\n                          nestedClasses: {\n                            root: classes.officeCell\n                          },\n                          children: /*#__PURE__*/_jsxDEV(\"span\", {\n                            className: classes.officeName,\n                            children: client.name\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 148,\n                            columnNumber: 37\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 147,\n                          columnNumber: 35\n                        }, _this)]\n                      }, client.id, true, {\n                        fileName: _jsxFileName,\n                        lineNumber: 134,\n                        columnNumber: 31\n                      }, _this);\n                    })\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 120,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 119,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"inceptiondate-\".concat(item.id),\n                children: utils.string.t('format.date', {\n                  value: {\n                    date: item.inceptionDate,\n                    format: config.ui.format.date.text\n                  }\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                compact: true,\n                children: statusLabel && /*#__PURE__*/_jsxDEV(Status, {\n                  size: media.wideUp ? 'sm' : 'xs',\n                  text: /*#__PURE__*/_jsxDEV(Translate, {\n                    label: \"status.\".concat(statusLabel)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 168,\n                    columnNumber: 31\n                  }, _this),\n                  status: statusLabel,\n                  \"data-testid\": \"status-\".concat(item.id)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 166,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 164,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"users-\".concat(item.id),\n                children: brokers && /*#__PURE__*/_jsxDEV(AvatarGroup, {\n                  users: brokers,\n                  max: 3,\n                  size: media.wideUp ? 22 : 20,\n                  nestedClasses: {\n                    name: classes.avatarName\n                  },\n                  testid: \"brokers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 177,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                nowrap: true,\n                \"data-testid\": \"users-\".concat(item.id),\n                children: cobrokers && /*#__PURE__*/_jsxDEV(AvatarGroup, {\n                  users: cobrokers,\n                  max: 3,\n                  size: media.wideUp ? 22 : 20,\n                  nestedClasses: {\n                    name: classes.avatarName\n                  },\n                  testid: \"cobrokers\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 187,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                menu: true,\n                children: /*#__PURE__*/_jsxDEV(Restricted, {\n                  include: [constants.ROLE_BROKER],\n                  children: utils.generic.isFunction(handleNtuClick) && /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                    id: \"renewal-list\",\n                    data: {\n                      placement: item,\n                      title: utils.placement.getInsureds(item),\n                      calendarView: true\n                    },\n                    items: [{\n                      id: 'ntu',\n                      label: 'renewals.ntuPlacement',\n                      disabled: item.statusId === statusPlacementNtuId,\n                      callback: handleNtuClick\n                    }, {\n                      id: 'editPlacement',\n                      label: 'renewals.editPlacement',\n                      callback: handleEditPlacementClick\n                    }, {\n                      id: 'removePlacement',\n                      label: 'renewals.removePlacement',\n                      callback: handleRemovePlacementClick\n                    }]\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 202,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 200,\n                  columnNumber: 21\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 199,\n                columnNumber: 19\n              }, _this)]\n            }, item.id, true, {\n              fileName: _jsxFileName,\n              lineNumber: 91,\n              columnNumber: 17\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TablePagination, {\n      rowsPerPageOptions: pagination.options,\n      component: \"div\",\n      count: items.length,\n      rowsPerPage: rowsPerPage,\n      page: page,\n      onPageChange: handleChangePage,\n      onRowsPerPageChange: handleChangeRowsPerPage\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 237,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 75,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DepartmentAccountsCalendarTableView, \"3jCkLuMpGr1gBZeQySZaFeMh4gM=\", false, function () {\n  return [useMedia];\n});\n\n_c = DepartmentAccountsCalendarTableView;\nDepartmentAccountsCalendarTableView.displayName = \"DepartmentAccountsCalendarTableView\";\nDepartmentAccountsCalendarTableView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DepartmentAccountsCalendarTableView\",\n  \"props\": {\n    \"pagination\": {\n      \"defaultValue\": {\n        \"value\": \"{\\r\\n  obj: {},\\r\\n  handlers: {},\\r\\n}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"items\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"cols\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"firstItem\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placementId\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placementStatuses\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClickRow\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleDoubleClickRow\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleNtuClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleRemovePlacementClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleEditPlacementClick\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\DepartmentAccountsCalendarTable\\\\DepartmentAccountsCalendarTable.view.js\"] = {\n    name: \"DepartmentAccountsCalendarTableView\",\n    docgenInfo: DepartmentAccountsCalendarTableView.__docgenInfo,\n    path: \"src\\\\modules\\\\DepartmentAccountsCalendarTable\\\\DepartmentAccountsCalendarTable.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DepartmentAccountsCalendarTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DepartmentAccountsCalendarTable/DepartmentAccountsCalendarTable.view.js"],"names":["React","useState","useEffect","PropTypes","classnames","uniqBy","styles","AvatarGroup","SeparatedList","Overflow","PopoverMenu","Restricted","Status","TableCell","TableHead","Translate","constants","utils","useMedia","config","makeStyles","Table","TableRow","TableBody","TablePagination","InfoOutlinedIcon","DepartmentAccountsCalendarTableView","propTypes","items","array","isRequired","cols","firstItem","number","placementId","placementStatuses","handleClickRow","func","handleDoubleClickRow","handleNtuClick","handleRemovePlacementClick","handleEditPlacementClick","defaultProps","pagination","obj","handlers","sort","media","classes","name","wide","wideUp","ui","page","setPage","rowsPerPage","setRowsPerPage","currentPage","Math","ceil","handleChangePage","event","newPage","handleChangeRowsPerPage","target","value","monthBox","table","slice","map","item","statusPlacementNtuId","referenceData","status","getIdByCode","STATUS_PLACEMENT_NTU","statusLabel","getLabelById","statusId","brokers","users","getBrokers","gxbUsersIncluded","cobrokersPlacement","getCobrokers","cobrokersOffice","placement","getOfficeCobrokers","cobrokers","id","row","rowNew","Boolean","__new__","rowSelected","insureds","root","clientWrapperCell","clients","client","logo","parent","getLogoFilePath","altText","filter","i","join","classesClientCell","clientCell","clientNoOfficeCell","colspan","clientName","officeCell","officeName","string","t","date","inceptionDate","format","text","avatarName","ROLE_BROKER","generic","isFunction","title","getInsureds","calendarView","label","disabled","callback","options","length"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport uniqBy from 'lodash/uniqBy';\r\n\r\n// app\r\nimport styles from './DepartmentAccountsCalendarTable.styles';\r\nimport { AvatarGroup, SeparatedList, Overflow, PopoverMenu, Restricted, Status, TableCell, TableHead, Translate } from 'components';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport { useMedia } from 'hooks';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody } from '@material-ui/core';\r\nimport TablePagination from '@material-ui/core/TablePagination';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nDepartmentAccountsCalendarTableView.propTypes = {\r\n  items: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  firstItem: PropTypes.number,\r\n  placementId: PropTypes.number,\r\n  placementStatuses: PropTypes.array,\r\n  handleClickRow: PropTypes.func.isRequired,\r\n  handleDoubleClickRow: PropTypes.func.isRequired,\r\n  handleNtuClick: PropTypes.func.isRequired,\r\n  handleRemovePlacementClick: PropTypes.func.isRequired,\r\n  handleEditPlacementClick: PropTypes.func.isRequired,\r\n};\r\n\r\nDepartmentAccountsCalendarTableView.defaultProps = {\r\n  pagination: {\r\n    obj: {},\r\n    handlers: {},\r\n  },\r\n};\r\n\r\nexport function DepartmentAccountsCalendarTableView({\r\n  items,\r\n  firstItem,\r\n  cols,\r\n  sort,\r\n  placementId,\r\n  placementStatuses,\r\n  handleClickRow,\r\n  handleDoubleClickRow,\r\n  handleNtuClick,\r\n  handleEditPlacementClick,\r\n  handleRemovePlacementClick,\r\n}) {\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'DepartmentAccountsTable' })({ wide: media.wideUp });\r\n  const { pagination } = config?.ui;\r\n  const [page, setPage] = useState(0);\r\n  const [rowsPerPage, setRowsPerPage] = useState(pagination.default);\r\n\r\n  useEffect(() => {\r\n    if (firstItem > 0) {\r\n      const currentPage = Math.ceil(firstItem / rowsPerPage) - 1;\r\n      setPage(currentPage);\r\n    }\r\n  }, [firstItem, rowsPerPage]);\r\n\r\n  const handleChangePage = (event, newPage) => {\r\n    setPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (event) => {\r\n    setRowsPerPage(+event.target.value);\r\n    setPage(0);\r\n  };\r\n\r\n  return (\r\n    <div className={classes.monthBox} data-testid=\"department-accounts-table\">\r\n      <Overflow>\r\n        <Table className={classes.table}>\r\n          <TableHead columns={cols} sorting={sort} />\r\n\r\n          <TableBody data-testid=\"renewal-list\">\r\n            {/* .slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage) */}\r\n            {items.slice(page * rowsPerPage, page * rowsPerPage + rowsPerPage).map((item) => {\r\n              const statusPlacementNtuId = utils.referenceData.status.getIdByCode(placementStatuses, constants.STATUS_PLACEMENT_NTU);\r\n              const statusLabel = utils.referenceData.status.getLabelById(placementStatuses, item.statusId);\r\n              const brokers = utils.users.getBrokers(item.users, { gxbUsersIncluded: true });\r\n              const cobrokersPlacement = utils.users.getCobrokers(item.users);\r\n              const cobrokersOffice = utils.placement.getOfficeCobrokers(item);\r\n              const cobrokers = uniqBy([...cobrokersPlacement, ...cobrokersOffice]);\r\n\r\n              return (\r\n                <TableRow\r\n                  key={item.id}\r\n                  onClick={handleClickRow(item.id)}\r\n                  onDoubleClick={handleDoubleClickRow(item.id)}\r\n                  hover\r\n                  className={classnames(classes.row, {\r\n                    [classes.rowNew]: Boolean(item.__new__),\r\n                    [classes.rowSelected]: item.id === placementId,\r\n                  })}\r\n                  data-testid={`placement.${item.id}`}\r\n                >\r\n                  <TableCell data-testid={`insured-${item.id}`}>\r\n                    <SeparatedList\r\n                      list={item.insureds}\r\n                      flag=\"isProvisional\"\r\n                      flagType=\"alert\"\r\n                      flagIcon={InfoOutlinedIcon}\r\n                      flagTooltip={<Translate label=\"renewals.provisionalInsuredTooltip\" />}\r\n                      hover\r\n                    />\r\n                  </TableCell>\r\n\r\n                  <TableCell\r\n                    colSpan={2}\r\n                    compact\r\n                    nestedClasses={{ root: classes.clientWrapperCell }}\r\n                    data-testid={`client-office-${item.id}`}\r\n                  >\r\n                    <Table>\r\n                      <TableBody>\r\n                        {item.clients &&\r\n                          item.clients.map((client) => {\r\n                            const logo = utils.client.parent.getLogoFilePath(client);\r\n                            const altText = [client.parent, client.name].filter((i) => i).join(' ');\r\n\r\n                            const classesClientCell = {\r\n                              [classes.clientCell]: true,\r\n                              [classes.clientNoOfficeCell]: !logo,\r\n                            };\r\n\r\n                            const colspan = logo ? 1 : 2;\r\n\r\n                            return (\r\n                              <TableRow key={client.id}>\r\n                                <TableCell\r\n                                  colSpan={colspan}\r\n                                  borderless\r\n                                  compact\r\n                                  title={altText}\r\n                                  nestedClasses={{ root: classnames(classesClientCell) }}\r\n                                >\r\n                                  {logo && <img src={logo} alt={`logo ${altText}`} className={classes.logo} />}\r\n                                  {!logo && <span className={classes.clientName}>{client.name}</span>}\r\n                                </TableCell>\r\n\r\n                                {logo && (\r\n                                  <TableCell borderless compact title={client.name} nestedClasses={{ root: classes.officeCell }}>\r\n                                    <span className={classes.officeName}>{client.name}</span>\r\n                                  </TableCell>\r\n                                )}\r\n                              </TableRow>\r\n                            );\r\n                          })}\r\n                      </TableBody>\r\n                    </Table>\r\n                  </TableCell>\r\n\r\n                  <TableCell nowrap data-testid={`inceptiondate-${item.id}`}>\r\n                    {utils.string.t('format.date', {\r\n                      value: { date: item.inceptionDate, format: config.ui.format.date.text },\r\n                    })}\r\n                  </TableCell>\r\n\r\n                  <TableCell nowrap compact>\r\n                    {statusLabel && (\r\n                      <Status\r\n                        size={media.wideUp ? 'sm' : 'xs'}\r\n                        text={<Translate label={`status.${statusLabel}`} />}\r\n                        status={statusLabel}\r\n                        data-testid={`status-${item.id}`}\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell nowrap data-testid={`users-${item.id}`}>\r\n                    {brokers && (\r\n                      <AvatarGroup\r\n                        users={brokers}\r\n                        max={3}\r\n                        size={media.wideUp ? 22 : 20}\r\n                        nestedClasses={{ name: classes.avatarName }}\r\n                        testid=\"brokers\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell nowrap data-testid={`users-${item.id}`}>\r\n                    {cobrokers && (\r\n                      <AvatarGroup\r\n                        users={cobrokers}\r\n                        max={3}\r\n                        size={media.wideUp ? 22 : 20}\r\n                        nestedClasses={{ name: classes.avatarName }}\r\n                        testid=\"cobrokers\"\r\n                      />\r\n                    )}\r\n                  </TableCell>\r\n\r\n                  <TableCell menu>\r\n                    <Restricted include={[constants.ROLE_BROKER]}>\r\n                      {utils.generic.isFunction(handleNtuClick) && (\r\n                        <PopoverMenu\r\n                          id=\"renewal-list\"\r\n                          data={{\r\n                            placement: item,\r\n                            title: utils.placement.getInsureds(item),\r\n                            calendarView: true,\r\n                          }}\r\n                          items={[\r\n                            {\r\n                              id: 'ntu',\r\n                              label: 'renewals.ntuPlacement',\r\n                              disabled: item.statusId === statusPlacementNtuId,\r\n                              callback: handleNtuClick,\r\n                            },\r\n                            {\r\n                              id: 'editPlacement',\r\n                              label: 'renewals.editPlacement',\r\n                              callback: handleEditPlacementClick,\r\n                            },\r\n                            {\r\n                              id: 'removePlacement',\r\n                              label: 'renewals.removePlacement',\r\n                              callback: handleRemovePlacementClick,\r\n                            },\r\n                          ]}\r\n                        />\r\n                      )}\r\n                    </Restricted>\r\n                  </TableCell>\r\n                </TableRow>\r\n              );\r\n            })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      <TablePagination\r\n        rowsPerPageOptions={pagination.options}\r\n        component=\"div\"\r\n        count={items.length}\r\n        rowsPerPage={rowsPerPage}\r\n        page={page}\r\n        onPageChange={handleChangePage}\r\n        onRowsPerPageChange={handleChangeRowsPerPage}\r\n      />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}