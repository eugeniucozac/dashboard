{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var getPolicyPlacement = function getPolicyPlacement(placementId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/policy.actions.getPlacement'\n    };\n    dispatch(getPolicyPlacementRequest(placementId));\n\n    if (!placementId) {\n      dispatch(getPolicyPlacementFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing placement ID'\n      })));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/placement/\".concat(placementId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getPolicyPlacementSuccess(data));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (policy.getPlacement)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getPolicyPlacementFailure(err));\n      return err;\n    });\n  };\n};\nexport var getPolicyPlacementRequest = function getPolicyPlacementRequest(placementId) {\n  return {\n    type: 'POLICY_PLACEMENT_GET_REQUEST',\n    payload: placementId\n  };\n};\nexport var getPolicyPlacementSuccess = function getPolicyPlacementSuccess(responseData) {\n  return {\n    type: 'POLICY_PLACEMENT_GET_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getPolicyPlacementFailure = function getPolicyPlacementFailure(error) {\n  return {\n    type: 'POLICY_PLACEMENT_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/policy/policy.actions.getPlacement.js"],"names":["utils","authLogout","getPolicyPlacement","placementId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getPolicyPlacementRequest","getPolicyPlacementFailure","message","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getPolicyPlacementSuccess","err","handleError","handleUnauthorized","type","payload","responseData","error"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,WAAD;AAAA,SAAiB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACzE;AADyE,oBAEhBA,QAAQ,EAFQ;AAAA,QAEzDC,IAFyD,aAEjEC,IAFiE,CAEzDD,IAFyD;AAAA,QAE/BE,QAF+B,aAEjDC,MAFiD,CAEvCC,IAFuC,CAE/BF,QAF+B;;AAIzE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,yBAAyB,CAACV,WAAD,CAA1B,CAAR;;AAEA,QAAI,CAACA,WAAL,EAAkB;AAChBC,MAAAA,QAAQ,CAACU,yBAAyB,iCAAMH,YAAN;AAAoBI,QAAAA,OAAO,EAAE;AAA7B,SAA1B,CAAR;AACA;AACD;;AAED,WAAOf,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,IAFhB;AAGHC,MAAAA,IAAI,0BAAmBlB,WAAnB;AAHD,KADA,EAMJmB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACgB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACgB,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,yBAAyB,CAACD,IAAD,CAA1B,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACd7B,MAAAA,KAAK,CAACgB,GAAN,CAAUc,WAAV,CAAsBD,GAAtB,kCAAgClB,YAAhC;AAA8CI,QAAAA,OAAO,EAAE;AAAvD;AACAf,MAAAA,KAAK,CAACgB,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkCzB,QAAlC,EAA4CH,UAA5C;AACAG,MAAAA,QAAQ,CAACU,yBAAyB,CAACe,GAAD,CAA1B,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,CAAP;AAkBD,GAjCiC;AAAA,CAA3B;AAmCP,OAAO,IAAMhB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACV,WAAD,EAAiB;AACxD,SAAO;AACL6B,IAAAA,IAAI,EAAE,8BADD;AAELC,IAAAA,OAAO,EAAE9B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMyB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACM,YAAD,EAAkB;AACzD,SAAO;AACLF,IAAAA,IAAI,EAAE,8BADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMpB,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACqB,KAAD,EAAW;AAClD,SAAO;AACLH,IAAAA,IAAI,EAAE,8BADD;AAELC,IAAAA,OAAO,EAAEE;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getPolicyPlacement = (placementId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/policy.actions.getPlacement',\r\n  };\r\n\r\n  dispatch(getPolicyPlacementRequest(placementId));\r\n\r\n  if (!placementId) {\r\n    dispatch(getPolicyPlacementFailure({ ...defaultError, message: 'Missing placement ID' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/placement/${placementId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getPolicyPlacementSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (policy.getPlacement)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getPolicyPlacementFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getPolicyPlacementRequest = (placementId) => {\r\n  return {\r\n    type: 'POLICY_PLACEMENT_GET_REQUEST',\r\n    payload: placementId,\r\n  };\r\n};\r\n\r\nexport const getPolicyPlacementSuccess = (responseData) => {\r\n  return {\r\n    type: 'POLICY_PLACEMENT_GET_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const getPolicyPlacementFailure = (error) => {\r\n  return {\r\n    type: 'POLICY_PLACEMENT_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}