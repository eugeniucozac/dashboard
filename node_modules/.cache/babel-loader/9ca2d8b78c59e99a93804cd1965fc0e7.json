{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossAction\\\\LossAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './LossAction.styles';\nimport { LossActionView } from './LossAction.view';\nimport { selectClaimsProcessing, selectClaimsProcessingItems, selectClaimProcessingFilterValues, selectClaimsProcessingFilterLoading } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport { useFlexiColumns } from 'hooks';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossAction() {\n  _s();\n\n  var classes = makeStyles(styles, {\n    name: 'LossAction'\n  })();\n\n  var _useState = useState(\"\"),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(\"\"),\n      _useState4 = _slicedToArray(_useState3, 2),\n      claimsType = _useState4[0],\n      setClaimsType = _useState4[1];\n\n  var _useState5 = useState(\"\"),\n      _useState6 = _slicedToArray(_useState5, 2),\n      searchBy = _useState6[0],\n      setSearchBy = _useState6[1];\n\n  var _useState7 = useState(\"\"),\n      _useState8 = _slicedToArray(_useState7, 2),\n      searchByText = _useState8[0],\n      setSearchByText = _useState8[1];\n\n  var claimsProcessing = useSelector(selectClaimsProcessing);\n  var claimsProcessingItems = useSelector(selectClaimsProcessingItems);\n  var claimProcessingFilterDropDown = useSelector(selectClaimProcessingFilterValues);\n  var isFetchingFilters = useSelector(selectClaimsProcessingFilterLoading);\n  var defaultValues = utils.form.getInitialValues(viewFields);\n  var validationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      setValue = _useForm.setValue;\n\n  var tableFilterFields = [{\n    id: 'assignedTo',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.assignedTo'),\n    value: [],\n    options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.assignedTo,\n    nestedClasses: {\n      root: classes.fieldWidth\n    },\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"assignedTo\",\n      search: true,\n      options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.assignedTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 51,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'createdDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultValues, 'createdDate')), {}, {\n      id: \"creationdatepicker\",\n      name: \"createdDate\",\n      type: \"datepicker\",\n      value: '',\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'targetDueDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultValues, 'targetDueDate')), {}, {\n      id: \"targetduedatepicker\",\n      name: \"targetDueDate\",\n      type: \"datepicker\",\n      value: '',\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'priority',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.priority'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.priority,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"priority\",\n      search: true,\n      options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.priority\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'status',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.status,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"status\",\n      search: true,\n      options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.status\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.division,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.division\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.insured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: claimProcessingFilterDropDown === null || claimProcessingFilterDropDown === void 0 ? void 0 : claimProcessingFilterDropDown.insured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 16\n    }, this)\n  }];\n  useEffect(function () {}, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSearch = function handleSearch() {};\n\n  var handleChangePage = function handleChangePage() {};\n\n  var handleResetFilter = function handleResetFilter() {};\n\n  var handleSearchFilter = function handleSearchFilter() {};\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage() {};\n\n  var handleSort = function handleSort() {};\n\n  var handleResetSearch = function handleResetSearch() {};\n\n  var onSelectSearchBy = function onSelectSearchBy() {};\n\n  var columns = [{\n    id: 'claimRef',\n    label: utils.string.t('claims.columns.claimsManagement.ref'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    narrow: true,\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'lossRef',\n    label: utils.string.t('claims.columns.claimsManagement.lossRef'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    narrow: true,\n    nowrap: true,\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'catCodesID',\n    label: utils.string.t('claims.columns.claimsManagement.catCode'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'claimReceivedDateTime',\n    label: utils.string.t('claims.columns.claimsManagement.claimReceivedDateTime'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    narrow: true,\n    nowrap: true\n  }, {\n    id: 'createdDate',\n    label: utils.string.t('claims.columns.claimsManagement.createdDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'processState',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'closedDate',\n    label: utils.string.t('claims.columns.claimsManagement.closedDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'complexity',\n    label: utils.string.t('claims.columns.claimsManagement.complexity'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsManagement.team'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'assignedTo',\n    label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsManagement.priority'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.columns.claimsManagement.ucr'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'policyRef',\n    label: utils.string.t('claims.columns.claimsManagement.policyRef'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'policyType',\n    label: utils.string.t('claims.columns.claimsManagement.policyType'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimantName',\n    label: utils.string.t('claims.columns.claimsManagement.claimant'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true,\n    ellipsis: true\n  }, {\n    id: 'assured',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'reinsured',\n    label: utils.string.t('claims.columns.claimsManagement.reinsured'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'client',\n    label: utils.string.t('claims.columns.claimsManagement.client'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'interest',\n    label: utils.string.t('claims.columns.claimsManagement.interest'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'createdBy',\n    label: utils.string.t('claims.columns.claimsManagement.createdBy'),\n    sort: {\n      type: 'numeric',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'company',\n    label: utils.string.t('claims.columns.claimsManagement.company'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    }\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.columns.claimsManagement.division'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'coverholder',\n    label: utils.string.t('claims.columns.claimsManagement.coverholder'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossFromDate',\n    label: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossToDate',\n    label: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossDateQualifier',\n    label: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossDetails',\n    label: utils.string.t('claims.columns.claimsManagement.lossDetails'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true\n  }, {\n    id: 'pasClaimRef',\n    label: utils.string.t('claims.columns.claimsManagement.pasClaimRef'),\n    sort: {\n      type: 'numeric',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'pasStatus',\n    label: utils.string.t('claims.columns.claimsManagement.pasStatus'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'actions',\n    menu: true,\n    visible: true,\n    mandatory: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(LossActionView, {\n    claims: claimsProcessingItems,\n    claimsProcessing: claimsProcessing,\n    sort: _objectSpread({}, claimsProcessing.sort),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    viewFields: viewFields,\n    claimsType: claimsType,\n    tableFilterFields: tableFilterFields,\n    isFetchingFilters: isFetchingFilters,\n    control: control,\n    searchTerm: searchTerm,\n    handlers: {\n      search: handleSearch,\n      searchFilter: handleSearchFilter,\n      resetFilter: handleResetFilter,\n      sort: handleSort,\n      changePage: handleChangePage,\n      changeRowsPerPage: handleChangeRowsPerPage,\n      toggleColumn: toggleColumn,\n      resetSearch: handleResetSearch,\n      setClaimsType: setClaimsType,\n      onSelectSearchBy: onSelectSearchBy\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 378,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossAction, \"4Lc7l6NliuWIsvbHS8SeRZD/w78=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = LossAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossAction\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossAction/LossAction.js"],"names":["React","useState","useEffect","useSelector","Yup","useForm","yupResolver","styles","LossActionView","selectClaimsProcessing","selectClaimsProcessingItems","selectClaimProcessingFilterValues","selectClaimsProcessingFilterLoading","MultiSelect","FormDate","useFlexiColumns","constants","utils","makeStyles","LossAction","classes","name","searchTerm","setSearchTerm","claimsType","setClaimsType","searchBy","setSearchBy","searchByText","setSearchByText","claimsProcessing","claimsProcessingItems","claimProcessingFilterDropDown","isFetchingFilters","defaultValues","form","getInitialValues","viewFields","validationSchema","getValidationSchema","resolver","control","setValue","tableFilterFields","id","type","label","string","t","value","options","assignedTo","nestedClasses","root","fieldWidth","content","getFieldProps","fullWidth","margin","clearable","variant","format","placeholder","priority","status","division","insured","handleSearch","handleChangePage","handleResetFilter","handleSearchFilter","handleChangeRowsPerPage","handleSort","handleResetSearch","onSelectSearchBy","columns","sort","direction","narrow","nowrap","visible","mandatory","ellipsis","menu","columnsArray","columnProps","toggleColumn","search","searchFilter","resetFilter","changePage","changeRowsPerPage","resetSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './LossAction.styles';\r\nimport { LossActionView } from './LossAction.view';\r\nimport {\r\n  selectClaimsProcessing,\r\n  selectClaimsProcessingItems,\r\n  selectClaimProcessingFilterValues,\r\n  selectClaimsProcessingFilterLoading,\r\n} from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nexport default function LossAction() {\r\n  const classes = makeStyles(styles, { name: 'LossAction' })();\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [claimsType, setClaimsType] = useState(\"\");\r\n  const [searchBy, setSearchBy] = useState(\"\");\r\n  const [searchByText, setSearchByText] = useState(\"\");\r\n  const claimsProcessing = useSelector(selectClaimsProcessing);\r\n  const claimsProcessingItems = useSelector(selectClaimsProcessingItems);\r\n  const claimProcessingFilterDropDown = useSelector(selectClaimProcessingFilterValues);\r\n  const isFetchingFilters = useSelector(selectClaimsProcessingFilterLoading);\r\n\r\n  const defaultValues = utils.form.getInitialValues(viewFields);\r\n  const validationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'assignedTo',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.assignedTo'),\r\n      value: [],\r\n      options: claimProcessingFilterDropDown?.assignedTo,\r\n      nestedClasses: { root: classes.fieldWidth },\r\n      content: <MultiSelect id=\"assignedTo\" search options={claimProcessingFilterDropDown?.assignedTo} />,\r\n    },\r\n    {\r\n      id: 'createdDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultValues, 'createdDate')}\r\n          id=\"creationdatepicker\"\r\n          name=\"createdDate\"\r\n          type=\"datepicker\"\r\n          value={''}\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'targetDueDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultValues, 'targetDueDate')}\r\n          id=\"targetduedatepicker\"\r\n          name=\"targetDueDate\"\r\n          type=\"datepicker\"\r\n          value={''}\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'priority',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claimProcessingFilterDropDown?.priority,\r\n      content: <MultiSelect id=\"priority\" search options={claimProcessingFilterDropDown?.priority} />,\r\n    },\r\n    {\r\n      id: 'status',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claimProcessingFilterDropDown?.status,\r\n      content: <MultiSelect id=\"status\" search options={claimProcessingFilterDropDown?.status} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claimProcessingFilterDropDown?.division,\r\n      content: <MultiSelect id=\"division\" search options={claimProcessingFilterDropDown?.division} />,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: claimProcessingFilterDropDown?.insured,\r\n      content: <MultiSelect id=\"insured\" search options={claimProcessingFilterDropDown?.insured} />,\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSearch = () => {\r\n  };\r\n\r\n  const handleChangePage = () => {\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n  };\r\n\r\n  const handleSearchFilter = () => {\r\n  };\r\n\r\n  const handleChangeRowsPerPage = () => {\r\n  };\r\n\r\n  const handleSort = () => {\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n  };\r\n\r\n  const onSelectSearchBy = () => {\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'claimRef',\r\n      label: utils.string.t('claims.columns.claimsManagement.ref'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      narrow: true,\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.columns.claimsManagement.lossRef'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      narrow: true,\r\n      nowrap: true,\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'catCodesID',\r\n      label: utils.string.t('claims.columns.claimsManagement.catCode'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n\r\n    {\r\n      id: 'claimReceivedDateTime',\r\n      label: utils.string.t('claims.columns.claimsManagement.claimReceivedDateTime'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      narrow: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'createdDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'processState',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'closedDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.closedDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'complexity',\r\n      label: utils.string.t('claims.columns.claimsManagement.complexity'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsManagement.team'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'assignedTo',\r\n      label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      label: utils.string.t('claims.columns.claimsManagement.priority'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'ucr',\r\n      label: utils.string.t('claims.columns.claimsManagement.ucr'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'policyRef',\r\n      label: utils.string.t('claims.columns.claimsManagement.policyRef'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      label: utils.string.t('claims.columns.claimsManagement.policyType'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimantName',\r\n      label: utils.string.t('claims.columns.claimsManagement.claimant'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'assured',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'reinsured',\r\n      label: utils.string.t('claims.columns.claimsManagement.reinsured'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'client',\r\n      label: utils.string.t('claims.columns.claimsManagement.client'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'interest',\r\n      label: utils.string.t('claims.columns.claimsManagement.interest'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdBy'),\r\n      sort: { type: 'numeric', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'company',\r\n      label: utils.string.t('claims.columns.claimsManagement.company'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.columns.claimsManagement.division'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'coverholder',\r\n      label: utils.string.t('claims.columns.claimsManagement.coverholder'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n\r\n    {\r\n      id: 'lossFromDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.lossDateFrom'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      label: utils.string.t('claims.columns.claimsManagement.lossDateTo'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossDateQualifier',\r\n      label: utils.string.t('claims.columns.claimsManagement.lossDateQualifier'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossDetails',\r\n      label: utils.string.t('claims.columns.claimsManagement.lossDetails'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'pasClaimRef',\r\n      label: utils.string.t('claims.columns.claimsManagement.pasClaimRef'),\r\n      sort: { type: 'numeric', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n\r\n    {\r\n      id: 'pasStatus',\r\n      label: utils.string.t('claims.columns.claimsManagement.pasStatus'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n\r\n    { id: 'actions', menu: true, visible: true, mandatory: true },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <LossActionView\r\n      claims={claimsProcessingItems}\r\n      claimsProcessing={claimsProcessing}\r\n      sort={{\r\n        ...claimsProcessing.sort,\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      viewFields={viewFields}\r\n      claimsType={claimsType}\r\n      tableFilterFields={tableFilterFields}\r\n      isFetchingFilters={isFetchingFilters}\r\n      control={control}\r\n      searchTerm={searchTerm}\r\n      handlers={{\r\n        search: handleSearch,\r\n        searchFilter: handleSearchFilter,\r\n        resetFilter: handleResetFilter,\r\n        sort: handleSort,\r\n        changePage: handleChangePage,\r\n        changeRowsPerPage: handleChangeRowsPerPage,\r\n        toggleColumn,\r\n        resetSearch: handleResetSearch,\r\n        setClaimsType,\r\n        onSelectSearchBy,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}