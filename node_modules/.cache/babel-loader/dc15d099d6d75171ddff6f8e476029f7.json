{"ast":null,"code":"import \"core-js/modules/es.promise\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout, setDepartmentSelected } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getUserData = function getUserData(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/user.actions.getData'\n    };\n    dispatch(getUserDataRequest(params));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: 'user/role/info'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      if ((json === null || json === void 0 ? void 0 : json.status) === 'OK' && utils.generic.isValidObject(json === null || json === void 0 ? void 0 : json.data, 'userDetails')) {\n        return json.data;\n      } else {\n        return Promise.reject(_objectSpread({\n          message: \"API error\".concat(json.status ? \" (\".concat(json.status, \")\") : '')\n        }, json && _objectSpread({}, json)));\n      }\n    }).then(function (data) {\n      if (utils.generic.isValidObject(data, 'userDetails')) {\n        dispatch(getUserDataSuccess(data)); // checking that the logged in user departments and saved dept (localStorage) match\n        // if the saved department in localStorage isn't one of the user, we replace it\n\n        var deptsArray = data ? get(data, 'xbInstance[0].department') || [] : [];\n        var deptsIds = deptsArray.map(function (d) {\n          return d.id;\n        });\n        var firstDept = utils.generic.isValidArray(deptsIds, true) ? (deptsIds[0] || '').toString() : null;\n        var savedDept = (localStorage.getItem('edge-department') || '').toString();\n\n        if (firstDept && !deptsIds.includes(savedDept)) {\n          dispatch(setDepartmentSelected(firstDept));\n        }\n      }\n\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (user.getData)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getUserDataFailure(err));\n      return Promise.reject(err);\n    });\n  };\n};\nexport var getUserDataRequest = function getUserDataRequest(params) {\n  return {\n    type: 'USER_DATA_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getUserDataSuccess = function getUserDataSuccess(userData) {\n  return {\n    type: 'USER_DATA_GET_SUCCESS',\n    payload: userData\n  };\n};\nexport var getUserDataFailure = function getUserDataFailure(error) {\n  return {\n    type: 'USER_DATA_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/user/user.actions.getData.js"],"names":["authLogout","setDepartmentSelected","utils","get","getUserData","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getUserDataRequest","api","token","accessToken","authService","path","then","response","handleResponse","json","status","generic","isValidObject","data","Promise","reject","message","getUserDataSuccess","deptsArray","deptsIds","map","d","id","firstDept","isValidArray","toString","savedDept","localStorage","getItem","includes","err","handleError","handleUnauthorized","getUserDataFailure","type","payload","userData","error"],"mappings":"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","sourcesContent":["import { authLogout, setDepartmentSelected } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getUserData = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/user.actions.getData',\r\n  };\r\n\r\n  dispatch(getUserDataRequest(params));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: 'user/role/info',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => {\r\n      if (json?.status === 'OK' && utils.generic.isValidObject(json?.data, 'userDetails')) {\r\n        return json.data;\r\n      } else {\r\n        return Promise.reject({\r\n          message: `API error${json.status ? ` (${json.status})` : ''}`,\r\n          ...(json && { ...json }),\r\n        });\r\n      }\r\n    })\r\n    .then((data) => {\r\n      if (utils.generic.isValidObject(data, 'userDetails')) {\r\n        dispatch(getUserDataSuccess(data));\r\n\r\n        // checking that the logged in user departments and saved dept (localStorage) match\r\n        // if the saved department in localStorage isn't one of the user, we replace it\r\n        const deptsArray = data ? get(data, 'xbInstance[0].department') || [] : [];\r\n        const deptsIds = deptsArray.map((d) => d.id);\r\n        const firstDept = utils.generic.isValidArray(deptsIds, true) ? (deptsIds[0] || '').toString() : null;\r\n        const savedDept = (localStorage.getItem('edge-department') || '').toString();\r\n\r\n        if (firstDept && !deptsIds.includes(savedDept)) {\r\n          dispatch(setDepartmentSelected(firstDept));\r\n        }\r\n      }\r\n\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (user.getData)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getUserDataFailure(err));\r\n      return Promise.reject(err);\r\n    });\r\n};\r\n\r\nexport const getUserDataRequest = (params) => {\r\n  return {\r\n    type: 'USER_DATA_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getUserDataSuccess = (userData) => {\r\n  return {\r\n    type: 'USER_DATA_GET_SUCCESS',\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const getUserDataFailure = (error) => {\r\n  return {\r\n    type: 'USER_DATA_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}