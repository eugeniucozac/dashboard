{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\MarketSheet\\\\MarketSheet.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './MarketSheet.styles';\nimport { Button, ChartKey, Mudmap, Overflow, Restricted, SectionHeader, StylePicker, Tabs, Tooltip, Translate, PopoverMenu } from 'components';\nimport { MarketSheetTable } from 'modules';\nimport * as constants from 'consts';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, useTheme, AppBar, Box, Collapse, Grid, Grow, Switch, Toolbar, Typography } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport EditIcon from '@material-ui/icons/Edit';\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\nimport FullScreenIcon from '@material-ui/icons/Fullscreen';\nimport FullScreenExitIcon from '@material-ui/icons/FullscreenExit';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nMarketSheetView.propTypes = {\n  placement: PropTypes.object,\n  isDev: PropTypes.bool,\n  policies: PropTypes.array,\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    value: PropTypes.number,\n    label: PropTypes.string\n  })),\n  selectedTab: PropTypes.number,\n  year: PropTypes.object,\n  options: PropTypes.array,\n  capacity: PropTypes.object,\n  mudmap: PropTypes.shape({\n    capacities: PropTypes.array,\n    currency: PropTypes.string,\n    dimensions: PropTypes.object,\n    policies: PropTypes.array,\n    visible: PropTypes.bool\n  }),\n  handlers: PropTypes.object\n};\nMarketSheetView.defaultProps = {\n  placement: {},\n  policies: [],\n  options: [],\n  mudmap: [],\n  handlers: {}\n};\nexport function MarketSheetView(_ref) {\n  _s();\n\n  var _classnames2,\n      _this = this;\n\n  var isDev = _ref.isDev,\n      placement = _ref.placement,\n      policies = _ref.policies,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      year = _ref.year,\n      options = _ref.options,\n      capacity = _ref.capacity,\n      mudmap = _ref.mudmap,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'MarketSheet'\n  })();\n  var theme = useTheme();\n  var _placement$bulk = placement.bulk,\n      bulk = _placement$bulk === void 0 ? {} : _placement$bulk;\n  var hasMudmap = utils.generic.isValidArray(mudmap.policies, true);\n  var currentGroup = Object.values(tabs).find(function (t) {\n    return t.value === selectedTab;\n  }) || {}; // these values are based of CSS properties\n  // they might need to be updated if CSS styles change\n\n  var padding = 32;\n  var margin = 32;\n  var header = theme.mixins.header.height;\n  var buttons = 24;\n  var mudmapRatio = mudmap.fullscreen ? (mudmap.dimensions.h - header - buttons - padding - margin) / (mudmap.dimensions.w - padding) : 0.45;\n\n  var getUpdateString = function getUpdateString() {\n    if (bulk.type === 'policy') {\n      return 'placement.sheet.editNumPolicies';\n    } else if (bulk.type === 'policyMarket') {\n      return 'placement.sheet.editNumMarkets';\n    } else {\n      return 'placement.sheet.editItems';\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n      title: /*#__PURE__*/_jsxDEV(Translate, {\n        label: \"placement.sheet.title\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 29\n      }, this),\n      icon: ShoppingCartIcon,\n      testid: \"placement-market-sheet\",\n      children: /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER],\n        children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n          variant: \"outlined\",\n          id: \"market-sheet-menu\",\n          size: \"medium\",\n          color: \"primary\",\n          text: utils.string.t('app.actions'),\n          isButton: true,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          items: [{\n            id: 'addLayer',\n            label: utils.string.t('placement.sheet.addLayer'),\n            callback: handlers.addLayerClick()\n          }].concat(_toConsumableArray(isDev ? [{\n            id: 'downloadPDF',\n            label: utils.string.t('placement.sheet.downloadMarketSheet'),\n            callback: function callback() {\n              return handlers.launchPDFModal();\n            }\n          }] : []))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 96,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 95,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n      tabs: tabs,\n      onChange: handlers.toggleTab\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 131,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n      include: mudmap.visibleToCobrokers ? [constants.ROLE_BROKER, constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER] : [constants.ROLE_BROKER],\n      children: hasMudmap && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [mudmap.fullscreen && /*#__PURE__*/_jsxDEV(AppBar, {\n          elevation: 1,\n          \"data-testid\": \"header-mudmap\",\n          classes: {\n            root: classes.appBar\n          },\n          children: /*#__PURE__*/_jsxDEV(Toolbar, {\n            className: classes.mudmapHeader,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              container: true,\n              spacing: 4,\n              justifyContent: \"space-between\",\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"h1\",\n                  className: classes.mudmapTitle,\n                  children: currentGroup.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 21\n              }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                item: true,\n                xs: 4,\n                container: true,\n                style: {\n                  justifyContent: 'flex-end'\n                },\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  icon: FullScreenExitIcon,\n                  size: \"medium\",\n                  text: utils.string.t('app.fullscreenExit'),\n                  variant: \"contained\",\n                  color: \"primary\",\n                  onClick: handlers.toggleMudmapFullscreen,\n                  \"data-testid\": \"exit-mudmap-fullscreen\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 21\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 142,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 15\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          className: classnames(_defineProperty({}, classes.mudmapFullscreen, mudmap.fullscreen)),\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            alignItems: \"flex-start\",\n            justifyContent: \"space-between\",\n            spacing: 1,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                alignItems: \"flex-start\",\n                spacing: 1,\n                children: [!mudmap.fullscreen && /*#__PURE__*/_jsxDEV(_Fragment, {\n                  children: [/*#__PURE__*/_jsxDEV(Restricted, {\n                    include: [constants.ROLE_BROKER],\n                    children: /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      children: /*#__PURE__*/_jsxDEV(Button, {\n                        size: \"xsmall\",\n                        variant: \"outlined\",\n                        icon: AddIcon,\n                        text: /*#__PURE__*/_jsxDEV(Translate, {\n                          label: \"placement.sheet.addLayer\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 177,\n                          columnNumber: 37\n                        }, this),\n                        nestedClasses: {\n                          btn: classes.btnSmall\n                        },\n                        onClick: handlers.addLayerClick({\n                          title: currentGroup.label,\n                          id: selectedTab\n                        })\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 173,\n                        columnNumber: 29\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 172,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 25\n                  }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      text: mudmap.visible ? /*#__PURE__*/_jsxDEV(Translate, {\n                        label: \"placement.sheet.mudmap.hide\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 190,\n                        columnNumber: 33\n                      }, this) : /*#__PURE__*/_jsxDEV(Translate, {\n                        label: \"placement.sheet.mudmap.show\"\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 192,\n                        columnNumber: 33\n                      }, this),\n                      size: \"xsmall\",\n                      variant: \"outlined\",\n                      nestedClasses: {\n                        btn: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.btnSmall, true), _defineProperty(_classnames2, classes.toggleMudmap, true), _defineProperty(_classnames2, classes.toggleMudmapExpanded, mudmap.visible), _classnames2))\n                      },\n                      onClick: handlers.toggleMudmapVisible\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 187,\n                      columnNumber: 27\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 186,\n                    columnNumber: 25\n                  }, this)]\n                }, void 0, true), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  children: /*#__PURE__*/_jsxDEV(Tooltip, {\n                    title: utils.string.t(mudmap.fullscreen ? 'app.fullscreenExit' : 'app.fullscreen'),\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      icon: mudmap.fullscreen ? FullScreenExitIcon : FullScreenIcon,\n                      size: \"xsmall\",\n                      variant: \"outlined\",\n                      onClick: handlers.toggleMudmapFullscreen\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 212,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 211,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 210,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Restricted, {\n                  include: [constants.ROLE_BROKER],\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    item: true,\n                    children: /*#__PURE__*/_jsxDEV(Grow, {\n                      in: mudmap.visible,\n                      children: /*#__PURE__*/_jsxDEV(\"div\", {\n                        children: /*#__PURE__*/_jsxDEV(Box, {\n                          display: \"flex\",\n                          alignItems: \"center\",\n                          className: classes.toggleCobrokers,\n                          children: [/*#__PURE__*/_jsxDEV(Box, {\n                            ml: 1,\n                            mr: 0.5,\n                            children: /*#__PURE__*/_jsxDEV(Translate, {\n                              variant: \"body2\",\n                              label: \"mudmap.\".concat(mudmap.visibleToCobrokers ? 'visibleCobrokers' : 'hiddenCobrokers')\n                            }, void 0, false, {\n                              fileName: _jsxFileName,\n                              lineNumber: 227,\n                              columnNumber: 33\n                            }, this)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 226,\n                            columnNumber: 31\n                          }, this), /*#__PURE__*/_jsxDEV(Switch, {\n                            color: \"primary\",\n                            size: \"small\",\n                            checked: mudmap.visibleToCobrokers,\n                            onClick: handlers.toggleMudmapForCobrokers(!mudmap.visibleToCobrokers)\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 232,\n                            columnNumber: 31\n                          }, this)]\n                        }, void 0, true, {\n                          fileName: _jsxFileName,\n                          lineNumber: 225,\n                          columnNumber: 29\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 224,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 223,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 222,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 221,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              style: {\n                position: 'relative',\n                width: 160\n              },\n              children: /*#__PURE__*/_jsxDEV(Grow, {\n                in: mudmap.visible,\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  style: {\n                    position: 'absolute',\n                    right: 4,\n                    zIndex: 2\n                  },\n                  children: [/*#__PURE__*/_jsxDEV(ChartKey, {\n                    isCollapsed: true,\n                    allowCollapse: true,\n                    size: \"xsmall\",\n                    avatarSize: 18,\n                    items: mudmap.capacities.map(function (c) {\n                      return {\n                        id: c.id,\n                        color: c.color,\n                        label: c.name\n                      };\n                    }),\n                    title: utils.string.t('mudmap.capacityType_plural'),\n                    onAvatarClick: handlers.openColorPicker,\n                    nestedClasses: {\n                      root: classes.capacity\n                    },\n                    testid: \"capacity-types\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 249,\n                    columnNumber: 23\n                  }, this), /*#__PURE__*/_jsxDEV(StylePicker, {\n                    el: capacity.target,\n                    item: capacity.item,\n                    onUpdate: handlers.changeColorPicker\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 268,\n                    columnNumber: 23\n                  }, this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 248,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 247,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 246,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n            in: mudmap.visible,\n            \"data-testid\": \"mudmap-container\",\n            children: /*#__PURE__*/_jsxDEV(Box, {\n              mt: 4,\n              mb: mudmap.fullscreen ? 0 : 3,\n              children: /*#__PURE__*/_jsxDEV(Mudmap, {\n                items: mudmap.policies,\n                capacities: mudmap.capacities,\n                fullscreen: mudmap.fullscreen,\n                ratio: mudmapRatio,\n                type: \"written\",\n                handlers: {\n                  reorderMudmap: handlers.reorderMudmap\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 276,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 275,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 274,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 165,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.table,\n      children: options.map(function (option) {\n        if (!option.selected) return null;\n        return /*#__PURE__*/_jsxDEV(Overflow, {\n          children: /*#__PURE__*/_jsxDEV(MarketSheetTable, {\n            year: year.id,\n            option: option.id,\n            policies: policies,\n            capacities: mudmap.capacities,\n            handleAddLayerClick: handlers.addLayerClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 297,\n            columnNumber: 15\n          }, _this)\n        }, option.id, false, {\n          fileName: _jsxFileName,\n          lineNumber: 296,\n          columnNumber: 13\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 291,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      children: /*#__PURE__*/_jsxDEV(Restricted, {\n        include: [constants.ROLE_BROKER],\n        children: /*#__PURE__*/_jsxDEV(Grow, {\n          in: bulk.items && bulk.items.length > 0,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            icon: EditIcon,\n            color: \"primary\",\n            variant: \"outlined\",\n            disabled: !bulk.items || bulk.items.length <= 0,\n            size: \"small\",\n            text: /*#__PURE__*/_jsxDEV(Translate, {\n              label: getUpdateString(),\n              options: {\n                count: bulk.items && bulk.items.length\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 318,\n              columnNumber: 21\n            }, this),\n            onClick: handlers.bulkUpdateClick\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 312,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 311,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 310,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(MarketSheetView, \"VrMvFCCB9Haniz3VCRPNUiCauHs=\", false, function () {\n  return [useTheme];\n});\n\n_c = MarketSheetView;\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketSheetView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/MarketSheet/MarketSheet.view.js"],"names":["React","PropTypes","classnames","styles","Button","ChartKey","Mudmap","Overflow","Restricted","SectionHeader","StylePicker","Tabs","Tooltip","Translate","PopoverMenu","MarketSheetTable","constants","utils","makeStyles","useTheme","AppBar","Box","Collapse","Grid","Grow","Switch","Toolbar","Typography","AddIcon","EditIcon","ShoppingCartIcon","FullScreenIcon","FullScreenExitIcon","MarketSheetView","propTypes","placement","object","isDev","bool","policies","array","tabs","arrayOf","shape","value","number","label","string","selectedTab","year","options","capacity","mudmap","capacities","currency","dimensions","visible","handlers","defaultProps","classes","name","theme","bulk","hasMudmap","generic","isValidArray","currentGroup","Object","values","find","t","padding","margin","header","mixins","height","buttons","mudmapRatio","fullscreen","h","w","getUpdateString","type","ROLE_BROKER","vertical","horizontal","id","callback","addLayerClick","launchPDFModal","toggleTab","visibleToCobrokers","ROLE_COBROKER","ROLE_UNDERWRITER","root","appBar","mudmapHeader","mudmapTitle","justifyContent","toggleMudmapFullscreen","mudmapFullscreen","btn","btnSmall","title","toggleMudmap","toggleMudmapExpanded","toggleMudmapVisible","toggleCobrokers","toggleMudmapForCobrokers","position","width","right","zIndex","map","c","color","openColorPicker","target","item","changeColorPicker","reorderMudmap","table","option","selected","items","length","count","bulkUpdateClick"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './MarketSheet.styles';\r\nimport {\r\n  Button,\r\n  ChartKey,\r\n  Mudmap,\r\n  Overflow,\r\n  Restricted,\r\n  SectionHeader,\r\n  StylePicker,\r\n  Tabs,\r\n  Tooltip,\r\n  Translate,\r\n  PopoverMenu,\r\n} from 'components';\r\nimport { MarketSheetTable } from 'modules';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, useTheme, AppBar, Box, Collapse, Grid, Grow, Switch, Toolbar, Typography } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport EditIcon from '@material-ui/icons/Edit';\r\nimport ShoppingCartIcon from '@material-ui/icons/ShoppingCart';\r\nimport FullScreenIcon from '@material-ui/icons/Fullscreen';\r\nimport FullScreenExitIcon from '@material-ui/icons/FullscreenExit';\r\n\r\nMarketSheetView.propTypes = {\r\n  placement: PropTypes.object,\r\n  isDev: PropTypes.bool,\r\n  policies: PropTypes.array,\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      value: PropTypes.number,\r\n      label: PropTypes.string,\r\n    })\r\n  ),\r\n  selectedTab: PropTypes.number,\r\n  year: PropTypes.object,\r\n  options: PropTypes.array,\r\n  capacity: PropTypes.object,\r\n  mudmap: PropTypes.shape({\r\n    capacities: PropTypes.array,\r\n    currency: PropTypes.string,\r\n    dimensions: PropTypes.object,\r\n    policies: PropTypes.array,\r\n    visible: PropTypes.bool,\r\n  }),\r\n  handlers: PropTypes.object,\r\n};\r\n\r\nMarketSheetView.defaultProps = {\r\n  placement: {},\r\n  policies: [],\r\n  options: [],\r\n  mudmap: [],\r\n  handlers: {},\r\n};\r\n\r\nexport function MarketSheetView({ isDev, placement, policies, tabs, selectedTab, year, options, capacity, mudmap, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'MarketSheet' })();\r\n  const theme = useTheme();\r\n\r\n  const { bulk = {} } = placement;\r\n  const hasMudmap = utils.generic.isValidArray(mudmap.policies, true);\r\n  const currentGroup = Object.values(tabs).find((t) => t.value === selectedTab) || {};\r\n\r\n  // these values are based of CSS properties\r\n  // they might need to be updated if CSS styles change\r\n  const padding = 32;\r\n  const margin = 32;\r\n  const header = theme.mixins.header.height;\r\n  const buttons = 24;\r\n  const mudmapRatio = mudmap.fullscreen\r\n    ? (mudmap.dimensions.h - header - buttons - padding - margin) / (mudmap.dimensions.w - padding)\r\n    : 0.45;\r\n\r\n  const getUpdateString = () => {\r\n    if (bulk.type === 'policy') {\r\n      return 'placement.sheet.editNumPolicies';\r\n    } else if (bulk.type === 'policyMarket') {\r\n      return 'placement.sheet.editNumMarkets';\r\n    } else {\r\n      return 'placement.sheet.editItems';\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <SectionHeader title={<Translate label=\"placement.sheet.title\" />} icon={ShoppingCartIcon} testid=\"placement-market-sheet\">\r\n        <Restricted include={[constants.ROLE_BROKER]}>\r\n          <PopoverMenu\r\n            variant=\"outlined\"\r\n            id=\"market-sheet-menu\"\r\n            size=\"medium\"\r\n            color=\"primary\"\r\n            text={utils.string.t('app.actions')}\r\n            isButton\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'right',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={[\r\n              {\r\n                id: 'addLayer',\r\n                label: utils.string.t('placement.sheet.addLayer'),\r\n                callback: handlers.addLayerClick(),\r\n              },\r\n              ...(isDev\r\n                ? [\r\n                    {\r\n                      id: 'downloadPDF',\r\n                      label: utils.string.t('placement.sheet.downloadMarketSheet'),\r\n                      callback: () => handlers.launchPDFModal(),\r\n                    },\r\n                  ]\r\n                : []),\r\n            ]}\r\n          />\r\n        </Restricted>\r\n      </SectionHeader>\r\n\r\n      <Tabs tabs={tabs} onChange={handlers.toggleTab} />\r\n\r\n      <Restricted\r\n        include={\r\n          mudmap.visibleToCobrokers ? [constants.ROLE_BROKER, constants.ROLE_COBROKER, constants.ROLE_UNDERWRITER] : [constants.ROLE_BROKER]\r\n        }\r\n      >\r\n        {hasMudmap && (\r\n          <>\r\n            {mudmap.fullscreen && (\r\n              <AppBar elevation={1} data-testid=\"header-mudmap\" classes={{ root: classes.appBar }}>\r\n                <Toolbar className={classes.mudmapHeader}>\r\n                  <Grid container spacing={4} justifyContent=\"space-between\" alignItems=\"center\">\r\n                    <Grid item xs={8}>\r\n                      <Typography variant=\"h1\" className={classes.mudmapTitle}>\r\n                        {currentGroup.label}\r\n                      </Typography>\r\n                    </Grid>\r\n                    <Grid item xs={4} container style={{ justifyContent: 'flex-end' }}>\r\n                      <Button\r\n                        icon={FullScreenExitIcon}\r\n                        size=\"medium\"\r\n                        text={utils.string.t('app.fullscreenExit')}\r\n                        variant=\"contained\"\r\n                        color=\"primary\"\r\n                        onClick={handlers.toggleMudmapFullscreen}\r\n                        data-testid=\"exit-mudmap-fullscreen\"\r\n                      />\r\n                    </Grid>\r\n                  </Grid>\r\n                </Toolbar>\r\n              </AppBar>\r\n            )}\r\n\r\n            <Box mt={2} className={classnames({ [classes.mudmapFullscreen]: mudmap.fullscreen })}>\r\n              <Grid container alignItems=\"flex-start\" justifyContent=\"space-between\" spacing={1}>\r\n                <Grid item>\r\n                  <Grid container alignItems=\"flex-start\" spacing={1}>\r\n                    {!mudmap.fullscreen && (\r\n                      <>\r\n                        <Restricted include={[constants.ROLE_BROKER]}>\r\n                          <Grid item>\r\n                            <Button\r\n                              size=\"xsmall\"\r\n                              variant=\"outlined\"\r\n                              icon={AddIcon}\r\n                              text={<Translate label=\"placement.sheet.addLayer\" />}\r\n                              nestedClasses={{\r\n                                btn: classes.btnSmall,\r\n                              }}\r\n                              onClick={handlers.addLayerClick({ title: currentGroup.label, id: selectedTab })}\r\n                            />\r\n                          </Grid>\r\n                        </Restricted>\r\n\r\n                        <Grid item>\r\n                          <Button\r\n                            text={\r\n                              mudmap.visible ? (\r\n                                <Translate label=\"placement.sheet.mudmap.hide\" />\r\n                              ) : (\r\n                                <Translate label=\"placement.sheet.mudmap.show\" />\r\n                              )\r\n                            }\r\n                            size=\"xsmall\"\r\n                            variant=\"outlined\"\r\n                            nestedClasses={{\r\n                              btn: classnames({\r\n                                [classes.btnSmall]: true,\r\n                                [classes.toggleMudmap]: true,\r\n                                [classes.toggleMudmapExpanded]: mudmap.visible,\r\n                              }),\r\n                            }}\r\n                            onClick={handlers.toggleMudmapVisible}\r\n                          />\r\n                        </Grid>\r\n                      </>\r\n                    )}\r\n\r\n                    <Grid item>\r\n                      <Tooltip title={utils.string.t(mudmap.fullscreen ? 'app.fullscreenExit' : 'app.fullscreen')}>\r\n                        <Button\r\n                          icon={mudmap.fullscreen ? FullScreenExitIcon : FullScreenIcon}\r\n                          size=\"xsmall\"\r\n                          variant=\"outlined\"\r\n                          onClick={handlers.toggleMudmapFullscreen}\r\n                        />\r\n                      </Tooltip>\r\n                    </Grid>\r\n\r\n                    <Restricted include={[constants.ROLE_BROKER]}>\r\n                      <Grid item>\r\n                        <Grow in={mudmap.visible}>\r\n                          <div>\r\n                            <Box display=\"flex\" alignItems=\"center\" className={classes.toggleCobrokers}>\r\n                              <Box ml={1} mr={0.5}>\r\n                                <Translate\r\n                                  variant=\"body2\"\r\n                                  label={`mudmap.${mudmap.visibleToCobrokers ? 'visibleCobrokers' : 'hiddenCobrokers'}`}\r\n                                />\r\n                              </Box>\r\n                              <Switch\r\n                                color=\"primary\"\r\n                                size=\"small\"\r\n                                checked={mudmap.visibleToCobrokers}\r\n                                onClick={handlers.toggleMudmapForCobrokers(!mudmap.visibleToCobrokers)}\r\n                              />\r\n                            </Box>\r\n                          </div>\r\n                        </Grow>\r\n                      </Grid>\r\n                    </Restricted>\r\n                  </Grid>\r\n                </Grid>\r\n\r\n                <Grid item style={{ position: 'relative', width: 160 }}>\r\n                  <Grow in={mudmap.visible}>\r\n                    <div style={{ position: 'absolute', right: 4, zIndex: 2 }}>\r\n                      <ChartKey\r\n                        isCollapsed\r\n                        allowCollapse\r\n                        size=\"xsmall\"\r\n                        avatarSize={18}\r\n                        items={mudmap.capacities.map((c) => {\r\n                          return {\r\n                            id: c.id,\r\n                            color: c.color,\r\n                            label: c.name,\r\n                          };\r\n                        })}\r\n                        title={utils.string.t('mudmap.capacityType_plural')}\r\n                        onAvatarClick={handlers.openColorPicker}\r\n                        nestedClasses={{\r\n                          root: classes.capacity,\r\n                        }}\r\n                        testid=\"capacity-types\"\r\n                      />\r\n                      <StylePicker el={capacity.target} item={capacity.item} onUpdate={handlers.changeColorPicker} />\r\n                    </div>\r\n                  </Grow>\r\n                </Grid>\r\n              </Grid>\r\n\r\n              <Collapse in={mudmap.visible} data-testid=\"mudmap-container\">\r\n                <Box mt={4} mb={mudmap.fullscreen ? 0 : 3}>\r\n                  <Mudmap\r\n                    items={mudmap.policies}\r\n                    capacities={mudmap.capacities}\r\n                    fullscreen={mudmap.fullscreen}\r\n                    ratio={mudmapRatio}\r\n                    type=\"written\"\r\n                    handlers={{ reorderMudmap: handlers.reorderMudmap }}\r\n                  />\r\n                </Box>\r\n              </Collapse>\r\n            </Box>\r\n          </>\r\n        )}\r\n      </Restricted>\r\n\r\n      <div className={classes.table}>\r\n        {options.map((option) => {\r\n          if (!option.selected) return null;\r\n\r\n          return (\r\n            <Overflow key={option.id}>\r\n              <MarketSheetTable\r\n                year={year.id}\r\n                option={option.id}\r\n                policies={policies}\r\n                capacities={mudmap.capacities}\r\n                handleAddLayerClick={handlers.addLayerClick}\r\n              />\r\n            </Overflow>\r\n          );\r\n        })}\r\n      </div>\r\n\r\n      <Box mt={2}>\r\n        <Restricted include={[constants.ROLE_BROKER]}>\r\n          <Grow in={bulk.items && bulk.items.length > 0}>\r\n            <Button\r\n              icon={EditIcon}\r\n              color=\"primary\"\r\n              variant=\"outlined\"\r\n              disabled={!bulk.items || bulk.items.length <= 0}\r\n              size=\"small\"\r\n              text={<Translate label={getUpdateString()} options={{ count: bulk.items && bulk.items.length }} />}\r\n              onClick={handlers.bulkUpdateClick}\r\n            />\r\n          </Grow>\r\n        </Restricted>\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}