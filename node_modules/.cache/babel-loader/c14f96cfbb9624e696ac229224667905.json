{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormFileDrop\\\\FormFileDrop.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useForm } from 'react-hook-form';\nimport { FormFileDrop } from 'components';\nimport { withKnobs, text } from '@storybook/addon-knobs';\nimport { Box } from '@material-ui/core';\nimport { createElement as _createElement } from \"react\";\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'FormFileDrop',\n  component: FormFileDrop,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  _s();\n\n  var _useForm = useForm({\n    defaultValues: []\n  }),\n      control = _useForm.control,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue;\n\n  var fields = [{\n    label: 'Attach files here',\n    name: 'files',\n    type: 'FILE',\n    placeholder: 'Type Street address',\n    validation: {\n      required: true,\n      message: 'This field is required'\n    },\n    hint: 'Hint goes here',\n    gridSize: {\n      xs: 5,\n      sm: 4,\n      md: 4,\n      lg: 4,\n      xl: 4\n    }\n  }];\n  var renderFields = fields.map(function (field, index) {\n    var gridSize = field.gridSize,\n        props = _objectWithoutProperties(field, [\"gridSize\"]);\n\n    return /*#__PURE__*/_createElement(FormFileDrop, _objectSpread(_objectSpread({}, props), {}, {\n      control: control,\n      onChange: function onChange(file) {\n        return setValue(field.name, file, {\n          shouldDirty: true\n        });\n      },\n      key: \"form_\".concat(index, \"_\").concat(field.name),\n      name: text('Name', field.name),\n      error: text('Error', errors[field.name]),\n      label: text('Label', field.label),\n      hint: text('Hint', field.hint),\n      __self: _this,\n      __source: {\n        fileName: _jsxFileName,\n        lineNumber: 41,\n        columnNumber: 7\n      }\n    }));\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: renderFields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 10\n  }, _this);\n};\n\n_s(Default, \"/gJaVNTkETo53q+iAN9AstoeVAU=\", false, function () {\n  return [useForm];\n});\n\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormFileDrop\\\\FormFileDrop.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\FormFileDrop\\\\FormFileDrop.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormFileDrop/FormFileDrop.stories.js"],"names":["React","useForm","FormFileDrop","withKnobs","text","Box","title","component","decorators","Default","defaultValues","control","errors","setValue","fields","label","name","type","placeholder","validation","required","message","hint","gridSize","xs","sm","md","lg","xl","renderFields","map","field","index","props","file","shouldDirty"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,SAASC,OAAT,QAAwB,iBAAxB;AAEA,SAASC,YAAT,QAA6B,YAA7B;AACA,SAASC,SAAT,EAAoBC,IAApB,QAAgC,wBAAhC;AACA,SAASC,GAAT,QAAoB,mBAApB;;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,cADM;AAEbC,EAAAA,SAAS,EAAEL,YAFE;AAGbM,EAAAA,UAAU,EAAE,CAACL,SAAD;AAHC,CAAf;AAMA,OAAO,IAAMM,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAAA,iBACWR,OAAO,CAAC;AAC5CS,IAAAA,aAAa,EAAE;AAD6B,GAAD,CADlB;AAAA,MACnBC,OADmB,YACnBA,OADmB;AAAA,MACVC,MADU,YACVA,MADU;AAAA,MACFC,QADE,YACFA,QADE;;AAI3B,MAAMC,MAAM,GAAG,CACb;AACEC,IAAAA,KAAK,EAAE,mBADT;AAEEC,IAAAA,IAAI,EAAE,OAFR;AAGEC,IAAAA,IAAI,EAAE,MAHR;AAIEC,IAAAA,WAAW,EAAE,qBAJf;AAKEC,IAAAA,UAAU,EAAE;AACVC,MAAAA,QAAQ,EAAE,IADA;AAEVC,MAAAA,OAAO,EAAE;AAFC,KALd;AASEC,IAAAA,IAAI,EAAE,gBATR;AAUEC,IAAAA,QAAQ,EAAE;AACRC,MAAAA,EAAE,EAAE,CADI;AAERC,MAAAA,EAAE,EAAE,CAFI;AAGRC,MAAAA,EAAE,EAAE,CAHI;AAIRC,MAAAA,EAAE,EAAE,CAJI;AAKRC,MAAAA,EAAE,EAAE;AALI;AAVZ,GADa,CAAf;AAoBA,MAAMC,YAAY,GAAGf,MAAM,CAACgB,GAAP,CAAW,UAACC,KAAD,EAAQC,KAAR,EAAkB;AAAA,QACxCT,QADwC,GACjBQ,KADiB,CACxCR,QADwC;AAAA,QAC3BU,KAD2B,4BACjBF,KADiB;;AAEhD,wBACE,eAAC,YAAD,kCACME,KADN;AAEE,MAAA,OAAO,EAAEtB,OAFX;AAGE,MAAA,QAAQ,EAAE,kBAACuB,IAAD;AAAA,eAAUrB,QAAQ,CAACkB,KAAK,CAACf,IAAP,EAAakB,IAAb,EAAmB;AAAEC,UAAAA,WAAW,EAAE;AAAf,SAAnB,CAAlB;AAAA,OAHZ;AAIE,MAAA,GAAG,iBAAUH,KAAV,cAAmBD,KAAK,CAACf,IAAzB,CAJL;AAKE,MAAA,IAAI,EAAEZ,IAAI,CAAC,MAAD,EAAS2B,KAAK,CAACf,IAAf,CALZ;AAME,MAAA,KAAK,EAAEZ,IAAI,CAAC,OAAD,EAAUQ,MAAM,CAACmB,KAAK,CAACf,IAAP,CAAhB,CANb;AAOE,MAAA,KAAK,EAAEZ,IAAI,CAAC,OAAD,EAAU2B,KAAK,CAAChB,KAAhB,CAPb;AAQE,MAAA,IAAI,EAAEX,IAAI,CAAC,MAAD,EAAS2B,KAAK,CAACT,IAAf,CARZ;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA;AAAA,OADF;AAYD,GAdoB,CAArB;AAgBA,sBAAO,QAAC,GAAD;AAAA,cAAMO;AAAN;AAAA;AAAA;AAAA;AAAA,WAAP;AACD,CAzCM;;GAAMpB,O;UAC2BR,O;;;AAD3BQ,O;KAAAA,O","sourcesContent":["import React from 'react';\r\nimport { useForm } from 'react-hook-form';\r\n\r\nimport { FormFileDrop } from 'components';\r\nimport { withKnobs, text } from '@storybook/addon-knobs';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'FormFileDrop',\r\n  component: FormFileDrop,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const { control, errors, setValue } = useForm({\r\n    defaultValues: [],\r\n  });\r\n  const fields = [\r\n    {\r\n      label: 'Attach files here',\r\n      name: 'files',\r\n      type: 'FILE',\r\n      placeholder: 'Type Street address',\r\n      validation: {\r\n        required: true,\r\n        message: 'This field is required',\r\n      },\r\n      hint: 'Hint goes here',\r\n      gridSize: {\r\n        xs: 5,\r\n        sm: 4,\r\n        md: 4,\r\n        lg: 4,\r\n        xl: 4,\r\n      },\r\n    },\r\n  ];\r\n  const renderFields = fields.map((field, index) => {\r\n    const { gridSize, ...props } = field;\r\n    return (\r\n      <FormFileDrop\r\n        {...props}\r\n        control={control}\r\n        onChange={(file) => setValue(field.name, file, { shouldDirty: true })}\r\n        key={`form_${index}_${field.name}`}\r\n        name={text('Name', field.name)}\r\n        error={text('Error', errors[field.name])}\r\n        label={text('Label', field.label)}\r\n        hint={text('Hint', field.hint)}\r\n      />\r\n    );\r\n  });\r\n\r\n  return <Box>{renderFields}</Box>;\r\n};\r\n"]},"metadata":{},"sourceType":"module"}