{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TableFilters\\\\TableFilters.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport isEqual from 'lodash/isEqual';\nimport sortBy from 'lodash/sortBy'; // app\n\nimport { TableFiltersView } from './TableFilters.view';\nimport { PopoverFilter } from 'components';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTableFilters.propTypes = {\n  clearFilterKey: PropTypes.string,\n  searchBy: PropTypes.node,\n  isSearchByNull: PropTypes.bool,\n  search: PropTypes.bool,\n  searchAdvanced: PropTypes.node,\n  searchAdvancedExpanded: PropTypes.object,\n  searchMinChars: PropTypes.number,\n  searchPlaceholder: PropTypes.string,\n  isFetchingFilters: PropTypes.bool,\n  filters: PropTypes.bool,\n  filtersDisabled: PropTypes.bool,\n  filtersExpanded: PropTypes.bool,\n  filtersArray: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.string.isRequired,\n    type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\n    label: PropTypes.string.isRequired,\n    value: PropTypes.any,\n    text: PropTypes.shape({\n      label: PropTypes.string.isRequired,\n      count: PropTypes.number\n    }),\n    placeholder: PropTypes.string,\n    content: PropTypes.node.isRequired,\n    maxHeight: PropTypes.number\n  })),\n  columns: PropTypes.bool,\n  columnsArray: PropTypes.array,\n  handlers: PropTypes.shape({\n    onSearch: PropTypes.func,\n    onFilter: PropTypes.func,\n    onResetFilter: PropTypes.func,\n    onToggleColumn: PropTypes.func,\n    onResetSearch: PropTypes.func,\n    onFilterExpand: PropTypes.func\n  }),\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    searchMaxWidth: PropTypes.string,\n    searchLeft: PropTypes.string\n  }),\n  searchTerm: PropTypes.string\n};\nTableFilters.defaultProps = {\n  isSearchByNull: false,\n  search: true,\n  filters: true,\n  isFetchingFilters: false,\n  columns: false,\n  handlers: {},\n  nestedClasses: {},\n  searchMinChars: 1,\n  searchTerm: ''\n};\nexport function TableFilters(_ref) {\n  _s();\n\n  var _this = this;\n\n  var isFetchingFilters = _ref.isFetchingFilters,\n      _ref$filtersArray = _ref.filtersArray,\n      filtersArray = _ref$filtersArray === void 0 ? [] : _ref$filtersArray,\n      clearFilterKey = _ref.clearFilterKey,\n      columnsArray = _ref.columnsArray,\n      handlers = _ref.handlers,\n      searchAdvanced = _ref.searchAdvanced,\n      searchAdvancedExpanded = _ref.searchAdvancedExpanded,\n      searchPlaceholder = _ref.searchPlaceholder,\n      searchTerm = _ref.searchTerm,\n      props = _objectWithoutProperties(_ref, [\"isFetchingFilters\", \"filtersArray\", \"clearFilterKey\", \"columnsArray\", \"handlers\", \"searchAdvanced\", \"searchAdvancedExpanded\", \"searchPlaceholder\", \"searchTerm\"]);\n\n  var isMounted = useRef(false);\n  var previousFilters = useRef(false);\n\n  var getFiltersObject = function getFiltersObject(filtersFieldsArray) {\n    return filtersFieldsArray.reduce(function (acc, cur) {\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.id, cur.value));\n    }, {});\n  };\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      search = _useState4[0],\n      setSearch = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      advancedSearchExpanded = _useState6[0],\n      setAdvancedSearchExpanded = _useState6[1];\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      filtersExpanded = _useState8[0],\n      setFiltersExpanded = _useState8[1];\n\n  var _useState9 = useState(getFiltersObject(filtersArray)),\n      _useState10 = _slicedToArray(_useState9, 2),\n      filtersFieldsObject = _useState10[0],\n      setFiltersFieldsObject = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      columnsExpanded = _useState12[0],\n      setColumnsExpanded = _useState12[1]; // save the original filters\n\n\n  useEffect(function () {\n    previousFilters.current = getFiltersObject(filtersArray);\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n  // when the search (string) state has changed, we call the onSearch handler (to trigger API fetch)\n\n  useEffect(function () {\n    if (isMounted.current) {\n      if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onSearch)) {\n        handlers.onSearch({\n          search: search,\n          filters: filtersFieldsObject\n        });\n      }\n    } else {\n      isMounted.current = true;\n    }\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    setSearch(searchTerm);\n  }, [searchTerm]);\n  useEffect(function () {\n    if ((searchAdvancedExpanded === null || searchAdvancedExpanded === void 0 ? void 0 : searchAdvancedExpanded.isOpen) !== advancedSearchExpanded) {\n      setAdvancedSearchExpanded(searchAdvancedExpanded === null || searchAdvancedExpanded === void 0 ? void 0 : searchAdvancedExpanded.isOpen);\n    }\n  }, [searchAdvancedExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var toggleMultiSelectOption = function toggleMultiSelectOption(field, value) {\n    var fieldObj = filtersArray.find(function (f) {\n      return f.id === field;\n    });\n\n    if (field && value) {\n      var _fieldObj$content, _fieldObj$content$pro, _fieldObj$content$pro2;\n\n      var currentField = (filtersFieldsObject === null || filtersFieldsObject === void 0 ? void 0 : filtersFieldsObject[field]) || [];\n      var isValueAlreadySelected = currentField.some(function (i) {\n        return i.id === value.id;\n      });\n\n      var newFilters = _objectSpread(_objectSpread({}, filtersFieldsObject), {}, _defineProperty({}, field, isValueAlreadySelected ? currentField.filter(function (i) {\n        return i.id !== value.id;\n      }) : [].concat(_toConsumableArray(currentField), [value])));\n\n      setFiltersFieldsObject(newFilters);\n\n      if (utils.generic.isFunction(fieldObj === null || fieldObj === void 0 ? void 0 : (_fieldObj$content = fieldObj.content) === null || _fieldObj$content === void 0 ? void 0 : (_fieldObj$content$pro = _fieldObj$content.props) === null || _fieldObj$content$pro === void 0 ? void 0 : (_fieldObj$content$pro2 = _fieldObj$content$pro.handlers) === null || _fieldObj$content$pro2 === void 0 ? void 0 : _fieldObj$content$pro2.toggleOption)) {\n        fieldObj.content.props.handlers.toggleOption(field, value);\n      }\n    }\n  };\n\n  var selectedDatePicker = function selectedDatePicker(field, value) {\n    var fieldObj = filtersArray.find(function (f) {\n      return f.id === field;\n    });\n\n    if (field && value) {\n      var _fieldObj$content2, _fieldObj$content2$pr, _fieldObj$content2$pr2;\n\n      var newFilters = _objectSpread(_objectSpread({}, filtersFieldsObject), {}, _defineProperty({}, field, value));\n\n      setFiltersFieldsObject(newFilters);\n\n      if (utils.generic.isFunction(fieldObj === null || fieldObj === void 0 ? void 0 : (_fieldObj$content2 = fieldObj.content) === null || _fieldObj$content2 === void 0 ? void 0 : (_fieldObj$content2$pr = _fieldObj$content2.props) === null || _fieldObj$content2$pr === void 0 ? void 0 : (_fieldObj$content2$pr2 = _fieldObj$content2$pr.handlers) === null || _fieldObj$content2$pr2 === void 0 ? void 0 : _fieldObj$content2$pr2.toggelDatePicker)) {\n        fieldObj.content.props.handlers.toggelDatePicker(field, value);\n      }\n    }\n  };\n\n  var toggleFilters = function toggleFilters() {\n    setFiltersExpanded(!filtersExpanded);\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onFilterExpand)) {\n      handlers === null || handlers === void 0 ? void 0 : handlers.onFilterExpand(!filtersExpanded);\n    }\n  }; // when the filters have changed, we call the onFilter handler (to trigger API fetch)\n\n\n  var submitFilters = function submitFilters() {\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onFilter)) {\n      previousFilters.current = filtersFieldsObject;\n      handlers.onFilter({\n        search: search,\n        filters: filtersFieldsObject\n      });\n    }\n  };\n\n  var clearFilters = function clearFilters() {\n    var newFieldsObject = Object.keys(filtersFieldsObject).reduce(function (acc, key) {\n      var returnObject = {};\n      returnObject = Array.isArray(filtersFieldsObject[key]) ? _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, [])) : _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, key, ''));\n      return returnObject;\n    }, {});\n    setFiltersFieldsObject(newFieldsObject);\n    previousFilters.current = newFieldsObject;\n  };\n\n  var resetFilters = function resetFilters() {\n    clearFilters();\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onResetFilter)) {\n      handlers.onResetFilter();\n    }\n  };\n\n  useEffect(function () {\n    if (clearFilterKey) clearFilters();\n  }, [clearFilterKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isFiltersModified = function isFiltersModified() {\n    var previous = previousFilters.current;\n    var current = filtersFieldsObject;\n    return isEqual(Object.entries(previous || {}).reduce(function (acc, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          name = _ref3[0],\n          value = _ref3[1];\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, sortBy(value, 'id')));\n    }, {}), Object.entries(current).reduce(function (acc, _ref4) {\n      var _ref5 = _slicedToArray(_ref4, 2),\n          name = _ref5[0],\n          value = _ref5[1];\n\n      return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, name, sortBy(value, 'id')));\n    }, {}));\n  };\n\n  var fields = filtersArray.map(function (field) {\n    var _field$content, _field$content$props;\n\n    return _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, field), field.type === 'multiSelect' && {\n      value: filtersFieldsObject[field.id]\n    }), field.type === 'multiSelectAsync' && {\n      value: filtersFieldsObject[field.id]\n    }), field.type === 'datepicker' && {\n      value: filtersFieldsObject[field.id]\n    }), {}, {\n      handlers: _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, field.handlers), (_field$content = field.content) === null || _field$content === void 0 ? void 0 : (_field$content$props = _field$content.props) === null || _field$content$props === void 0 ? void 0 : _field$content$props.handlers), field.type === 'multiSelect' && {\n        toggleOption: toggleMultiSelectOption\n      }), field.type === 'multiSelectAsync' && {\n        toggleOption: toggleMultiSelectOption\n      }), field.type === 'datepicker' && {\n        toggelDatePicker: selectedDatePicker\n      })\n    });\n  });\n\n  var toggleColumns = function toggleColumns(column) {\n    handlers.onToggleColumn(column);\n  };\n\n  var toggleColumnsExpanded = function toggleColumnsExpanded() {\n    setColumnsExpanded(!columnsExpanded);\n  };\n\n  var columnsFiltered = function columnsFiltered(columns) {\n    if (utils.generic.isInvalidOrEmptyArray(columns)) return []; // remove columns which should not be part of the flexi column list\n\n    return columns.filter(function (col) {\n      return !col.menu;\n    });\n  }; // when the search form is submitted, we update the internal state which will trigger a useEffect re-render\n\n\n  var submitSearch = function submitSearch(query) {\n    setSearch(query);\n  }; // resetKey is used to reset the <Search /> submit button which sometimes remains active\n\n\n  var resetSearch = function resetSearch() {\n    setSearch('');\n    setResetKey(new Date().getTime());\n\n    if (utils.generic.isFunction(handlers === null || handlers === void 0 ? void 0 : handlers.onResetSearch)) {\n      handlers.onResetSearch();\n    }\n  };\n\n  var toggleAdvancedSearch = function toggleAdvancedSearch(isOpen) {\n    setAdvancedSearchExpanded(typeof isOpen === 'boolean' ? isOpen : !advancedSearchExpanded);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableFiltersView, _objectSpread(_objectSpread({}, props), {}, {\n    resetKey: resetKey,\n    search: searchAdvanced ? false : props.search,\n    searchQuery: search,\n    searchPlaceholder: searchPlaceholder,\n    searchAdvanced: searchAdvanced,\n    searchAdvancedExpanded: advancedSearchExpanded,\n    isFetchingFilters: isFetchingFilters,\n    filtersExpanded: filtersExpanded,\n    filtersSubmitDisabled: isFiltersModified(),\n    filtersArray: fields,\n    columnsArray: columnsFiltered(columnsArray),\n    columnsExpanded: columnsExpanded,\n    handlers: {\n      toggleFilters: toggleFilters,\n      resetFilters: resetFilters,\n      submitFilters: submitFilters,\n      toggleColumns: toggleColumns,\n      toggleColumnsExpanded: toggleColumnsExpanded,\n      toggleAdvancedSearch: toggleAdvancedSearch,\n      submitSearch: submitSearch,\n      resetSearch: resetSearch\n    },\n    children: utils.generic.isValidArray(fields, true) ? fields.map(function (field) {\n      var _field$content2, _field$content2$props, _field$content2$props2;\n\n      return /*#__PURE__*/_jsxDEV(PopoverFilter, _objectSpread(_objectSpread({}, field), {}, {\n        disabled: field.disabled || !field.content || field.type === 'multiSelect' && utils.generic.isInvalidOrEmptyArray(field.options) || field.type === 'multiSelectAsync' && !((_field$content2 = field.content) === null || _field$content2 === void 0 ? void 0 : (_field$content2$props = _field$content2.props) === null || _field$content2$props === void 0 ? void 0 : (_field$content2$props2 = _field$content2$props.handlers) === null || _field$content2$props2 === void 0 ? void 0 : _field$content2$props2.fetch)\n      }), field.id, false, {\n        fileName: _jsxFileName,\n        lineNumber: 290,\n        columnNumber: 13\n      }, _this);\n    }) : null\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 262,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TableFilters, \"oJY5zfX3e6GckA4scy7lRMeRj7Q=\");\n\n_c = TableFilters;\nexport default TableFilters;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableFilters\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TableFilters/TableFilters.js"],"names":["React","useState","useEffect","useRef","PropTypes","isEqual","sortBy","TableFiltersView","PopoverFilter","utils","TableFilters","propTypes","clearFilterKey","string","searchBy","node","isSearchByNull","bool","search","searchAdvanced","searchAdvancedExpanded","object","searchMinChars","number","searchPlaceholder","isFetchingFilters","filters","filtersDisabled","filtersExpanded","filtersArray","arrayOf","shape","id","isRequired","type","oneOf","label","value","any","text","count","placeholder","content","maxHeight","columns","columnsArray","array","handlers","onSearch","func","onFilter","onResetFilter","onToggleColumn","onResetSearch","onFilterExpand","nestedClasses","root","searchMaxWidth","searchLeft","searchTerm","defaultProps","props","isMounted","previousFilters","getFiltersObject","filtersFieldsArray","reduce","acc","cur","resetKey","setResetKey","setSearch","advancedSearchExpanded","setAdvancedSearchExpanded","setFiltersExpanded","filtersFieldsObject","setFiltersFieldsObject","columnsExpanded","setColumnsExpanded","current","generic","isFunction","isOpen","toggleMultiSelectOption","field","fieldObj","find","f","currentField","isValueAlreadySelected","some","i","newFilters","filter","toggleOption","selectedDatePicker","toggelDatePicker","toggleFilters","submitFilters","clearFilters","newFieldsObject","Object","keys","key","returnObject","Array","isArray","resetFilters","isFiltersModified","previous","entries","name","fields","map","toggleColumns","column","toggleColumnsExpanded","columnsFiltered","isInvalidOrEmptyArray","col","menu","submitSearch","query","resetSearch","Date","getTime","toggleAdvancedSearch","isValidArray","disabled","options","fetch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport isEqual from 'lodash/isEqual';\r\nimport sortBy from 'lodash/sortBy';\r\n\r\n// app\r\nimport { TableFiltersView } from './TableFilters.view';\r\nimport { PopoverFilter } from 'components';\r\nimport * as utils from 'utils';\r\n\r\nTableFilters.propTypes = {\r\n  clearFilterKey: PropTypes.string,\r\n  searchBy: PropTypes.node,\r\n  isSearchByNull: PropTypes.bool,\r\n  search: PropTypes.bool,\r\n  searchAdvanced: PropTypes.node,\r\n  searchAdvancedExpanded: PropTypes.object,\r\n  searchMinChars: PropTypes.number,\r\n  searchPlaceholder: PropTypes.string,\r\n  isFetchingFilters: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filtersDisabled: PropTypes.bool,\r\n  filtersExpanded: PropTypes.bool,\r\n  filtersArray: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.string.isRequired,\r\n      type: PropTypes.oneOf(['multiSelect', 'multiSelectAsync', 'datepicker']).isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      value: PropTypes.any,\r\n      text: PropTypes.shape({\r\n        label: PropTypes.string.isRequired,\r\n        count: PropTypes.number,\r\n      }),\r\n      placeholder: PropTypes.string,\r\n      content: PropTypes.node.isRequired,\r\n      maxHeight: PropTypes.number,\r\n    })\r\n  ),\r\n  columns: PropTypes.bool,\r\n  columnsArray: PropTypes.array,\r\n  handlers: PropTypes.shape({\r\n    onSearch: PropTypes.func,\r\n    onFilter: PropTypes.func,\r\n    onResetFilter: PropTypes.func,\r\n    onToggleColumn: PropTypes.func,\r\n    onResetSearch: PropTypes.func,\r\n    onFilterExpand: PropTypes.func,\r\n  }),\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    searchMaxWidth: PropTypes.string,\r\n    searchLeft: PropTypes.string,\r\n  }),\r\n  searchTerm: PropTypes.string,\r\n};\r\n\r\nTableFilters.defaultProps = {\r\n  isSearchByNull: false,\r\n  search: true,\r\n  filters: true,\r\n  isFetchingFilters: false,\r\n  columns: false,\r\n  handlers: {},\r\n  nestedClasses: {},\r\n  searchMinChars: 1,\r\n  searchTerm: '',\r\n};\r\n\r\nexport function TableFilters({\r\n  isFetchingFilters,\r\n  filtersArray = [],\r\n  clearFilterKey,\r\n  columnsArray,\r\n  handlers,\r\n  searchAdvanced,\r\n  searchAdvancedExpanded,\r\n  searchPlaceholder,\r\n  searchTerm,\r\n  ...props\r\n}) {\r\n  const isMounted = useRef(false);\r\n  const previousFilters = useRef(false);\r\n\r\n  const getFiltersObject = (filtersFieldsArray) => {\r\n    return filtersFieldsArray.reduce((acc, cur) => {\r\n      return {\r\n        ...acc,\r\n        [cur.id]: cur.value,\r\n      };\r\n    }, {});\r\n  };\r\n\r\n  const [resetKey, setResetKey] = useState();\r\n  const [search, setSearch] = useState('');\r\n  const [advancedSearchExpanded, setAdvancedSearchExpanded] = useState(false);\r\n  const [filtersExpanded, setFiltersExpanded] = useState(false);\r\n  const [filtersFieldsObject, setFiltersFieldsObject] = useState(getFiltersObject(filtersArray));\r\n  const [columnsExpanded, setColumnsExpanded] = useState(false);\r\n\r\n  // save the original filters\r\n  useEffect(() => {\r\n    previousFilters.current = getFiltersObject(filtersArray);\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  // when the search (string) state has changed, we call the onSearch handler (to trigger API fetch)\r\n  useEffect(() => {\r\n    if (isMounted.current) {\r\n      if (utils.generic.isFunction(handlers?.onSearch)) {\r\n        handlers.onSearch({ search, filters: filtersFieldsObject });\r\n      }\r\n    } else {\r\n      isMounted.current = true;\r\n    }\r\n  }, [search]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setSearch(searchTerm);\r\n  }, [searchTerm]);\r\n\r\n  useEffect(() => {\r\n    if (searchAdvancedExpanded?.isOpen !== advancedSearchExpanded) {\r\n      setAdvancedSearchExpanded(searchAdvancedExpanded?.isOpen);\r\n    }\r\n  }, [searchAdvancedExpanded]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const toggleMultiSelectOption = (field, value) => {\r\n    const fieldObj = filtersArray.find((f) => f.id === field);\r\n\r\n    if (field && value) {\r\n      const currentField = filtersFieldsObject?.[field] || [];\r\n      const isValueAlreadySelected = currentField.some((i) => i.id === value.id);\r\n      const newFilters = {\r\n        ...filtersFieldsObject,\r\n        [field]: isValueAlreadySelected ? currentField.filter((i) => i.id !== value.id) : [...currentField, value],\r\n      };\r\n\r\n      setFiltersFieldsObject(newFilters);\r\n\r\n      if (utils.generic.isFunction(fieldObj?.content?.props?.handlers?.toggleOption)) {\r\n        fieldObj.content.props.handlers.toggleOption(field, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const selectedDatePicker = (field, value) => {\r\n    const fieldObj = filtersArray.find((f) => f.id === field);\r\n    if (field && value) {\r\n      const newFilters = {\r\n        ...filtersFieldsObject,\r\n        [field]: value,\r\n      };\r\n      setFiltersFieldsObject(newFilters);\r\n      if (utils.generic.isFunction(fieldObj?.content?.props?.handlers?.toggelDatePicker)) {\r\n        fieldObj.content.props.handlers.toggelDatePicker(field, value);\r\n      }\r\n    }\r\n  };\r\n\r\n  const toggleFilters = () => {\r\n    setFiltersExpanded(!filtersExpanded);\r\n    if (utils.generic.isFunction(handlers?.onFilterExpand)) {\r\n      handlers?.onFilterExpand(!filtersExpanded);\r\n    }\r\n  };\r\n\r\n  // when the filters have changed, we call the onFilter handler (to trigger API fetch)\r\n  const submitFilters = () => {\r\n    if (utils.generic.isFunction(handlers?.onFilter)) {\r\n      previousFilters.current = filtersFieldsObject;\r\n      handlers.onFilter({ search, filters: filtersFieldsObject });\r\n    }\r\n  };\r\n\r\n  const clearFilters = () => {\r\n    const newFieldsObject = Object.keys(filtersFieldsObject).reduce((acc, key) => {\r\n      let returnObject = {};\r\n      returnObject = Array.isArray(filtersFieldsObject[key]) ? { ...acc, [key]: [] } : { ...acc, [key]: '' };\r\n      return returnObject;\r\n    }, {});\r\n\r\n    setFiltersFieldsObject(newFieldsObject);\r\n    previousFilters.current = newFieldsObject;\r\n  };\r\n\r\n  const resetFilters = () => {\r\n    clearFilters();\r\n    if (utils.generic.isFunction(handlers?.onResetFilter)) {\r\n      handlers.onResetFilter();\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (clearFilterKey) clearFilters();\r\n  }, [clearFilterKey]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isFiltersModified = () => {\r\n    const previous = previousFilters.current;\r\n    const current = filtersFieldsObject;\r\n\r\n    return isEqual(\r\n      Object.entries(previous || {}).reduce((acc, [name, value]) => {\r\n        return { ...acc, [name]: sortBy(value, 'id') };\r\n      }, {}),\r\n      Object.entries(current).reduce((acc, [name, value]) => {\r\n        return { ...acc, [name]: sortBy(value, 'id') };\r\n      }, {})\r\n    );\r\n  };\r\n\r\n  const fields = filtersArray.map((field) => {\r\n    return {\r\n      ...field,\r\n      ...(field.type === 'multiSelect' && { value: filtersFieldsObject[field.id] }),\r\n      ...(field.type === 'multiSelectAsync' && { value: filtersFieldsObject[field.id] }),\r\n      ...(field.type === 'datepicker' && { value: filtersFieldsObject[field.id] }),\r\n      handlers: {\r\n        ...field.handlers,\r\n        ...field.content?.props?.handlers,\r\n        ...(field.type === 'multiSelect' && { toggleOption: toggleMultiSelectOption }),\r\n        ...(field.type === 'multiSelectAsync' && { toggleOption: toggleMultiSelectOption }),\r\n        ...(field.type === 'datepicker' && { toggelDatePicker: selectedDatePicker }),\r\n      },\r\n    };\r\n  });\r\n\r\n  const toggleColumns = (column) => {\r\n    handlers.onToggleColumn(column);\r\n  };\r\n\r\n  const toggleColumnsExpanded = () => {\r\n    setColumnsExpanded(!columnsExpanded);\r\n  };\r\n\r\n  const columnsFiltered = (columns) => {\r\n    if (utils.generic.isInvalidOrEmptyArray(columns)) return [];\r\n\r\n    // remove columns which should not be part of the flexi column list\r\n    return columns.filter((col) => {\r\n      return !col.menu;\r\n    });\r\n  };\r\n\r\n  // when the search form is submitted, we update the internal state which will trigger a useEffect re-render\r\n  const submitSearch = (query) => {\r\n    setSearch(query);\r\n  };\r\n\r\n  // resetKey is used to reset the <Search /> submit button which sometimes remains active\r\n  const resetSearch = () => {\r\n    setSearch('');\r\n    setResetKey(new Date().getTime());\r\n    if (utils.generic.isFunction(handlers?.onResetSearch)) {\r\n      handlers.onResetSearch();\r\n    }\r\n  };\r\n\r\n  const toggleAdvancedSearch = (isOpen) => {\r\n    setAdvancedSearchExpanded(typeof isOpen === 'boolean' ? isOpen : !advancedSearchExpanded);\r\n  };\r\n\r\n  return (\r\n    <TableFiltersView\r\n      {...props}\r\n      resetKey={resetKey}\r\n      search={searchAdvanced ? false : props.search}\r\n      searchQuery={search}\r\n      searchPlaceholder={searchPlaceholder}\r\n      searchAdvanced={searchAdvanced}\r\n      searchAdvancedExpanded={advancedSearchExpanded}\r\n      isFetchingFilters={isFetchingFilters}\r\n      filtersExpanded={filtersExpanded}\r\n      filtersSubmitDisabled={isFiltersModified()}\r\n      filtersArray={fields}\r\n      columnsArray={columnsFiltered(columnsArray)}\r\n      columnsExpanded={columnsExpanded}\r\n      handlers={{\r\n        toggleFilters,\r\n        resetFilters,\r\n        submitFilters,\r\n        toggleColumns,\r\n        toggleColumnsExpanded,\r\n        toggleAdvancedSearch,\r\n        submitSearch,\r\n        resetSearch,\r\n      }}\r\n    >\r\n      {utils.generic.isValidArray(fields, true)\r\n        ? fields.map((field) => {\r\n          return (\r\n            <PopoverFilter\r\n              key={field.id}\r\n              {...field}\r\n              disabled={\r\n                field.disabled ||\r\n                !field.content ||\r\n                (field.type === 'multiSelect' && utils.generic.isInvalidOrEmptyArray(field.options)) ||\r\n                (field.type === 'multiSelectAsync' && !field.content?.props?.handlers?.fetch)\r\n              }\r\n            />\r\n          );\r\n        })\r\n        : null}\r\n    </TableFiltersView>\r\n  );\r\n}\r\n\r\nexport default TableFilters;\r\n"]},"metadata":{},"sourceType":"module"}