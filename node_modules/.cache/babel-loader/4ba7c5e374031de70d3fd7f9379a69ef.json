{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, getReferenceDataXbInstances } from 'stores';\nexport var getFileUploadGuiData = function getFileUploadGuiData(requestList) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/fileUpload.actions.getFileUploadGuiData'\n    };\n    dispatch(getFileUploadGuiDataRequest(requestList));\n\n    if (utils.generic.isInvalidOrEmptyArray(requestList)) {\n      dispatch(getFileUploadGuiDataFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing request list parameters'\n      })));\n      return;\n    }\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: 'data/gui/screen/fileupload',\n      data: {\n        guiRequestList: requestList.map(function (component) {\n          return {\n            componentName: component\n          };\n        })\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      if ((json === null || json === void 0 ? void 0 : json.status) === 'OK' && (json === null || json === void 0 ? void 0 : json.data)) {\n        var guiDataObj = json.data.guiResponseList.reduce(function (acc, cur) {\n          if (cur.componentName) {\n            return _objectSpread(_objectSpread({}, acc), {}, _defineProperty({}, cur.componentName, cur.entity));\n          } else {\n            return acc;\n          }\n        }, {});\n        dispatch(getReferenceDataXbInstances((guiDataObj === null || guiDataObj === void 0 ? void 0 : guiDataObj.XBInstance) || []));\n        dispatch(getFileUploadGuiDataSuccess(guiDataObj));\n        return guiDataObj;\n      } else {\n        return Promise.reject(_objectSpread({\n          message: \"API error\".concat(json.status ? \" (\".concat(json.status, \")\") : '')\n        }, json && _objectSpread({}, json)));\n      }\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (fileUpload.getFileUploadGuiData)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getFileUploadGuiDataFailure(err));\n      return err;\n    });\n  };\n};\nexport var getFileUploadGuiDataRequest = function getFileUploadGuiDataRequest(requestList) {\n  return {\n    type: 'FILE_UPLOAD_GET_GUI_DATA_REQUEST',\n    payload: requestList\n  };\n};\nexport var getFileUploadGuiDataSuccess = function getFileUploadGuiDataSuccess(guiDataObj) {\n  return {\n    type: 'FILE_UPLOAD_GET_GUI_DATA_SUCCESS',\n    payload: guiDataObj\n  };\n};\nexport var getFileUploadGuiDataFailure = function getFileUploadGuiDataFailure(error) {\n  return {\n    type: 'FILE_UPLOAD_GET_GUI_DATA_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/fileUpload/fileUpload.actions.getGuiData.js"],"names":["utils","authLogout","getReferenceDataXbInstances","getFileUploadGuiData","requestList","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getFileUploadGuiDataRequest","generic","isInvalidOrEmptyArray","getFileUploadGuiDataFailure","message","api","post","token","accessToken","dmsService","path","data","guiRequestList","map","component","componentName","then","response","handleResponse","json","status","guiDataObj","guiResponseList","reduce","acc","cur","entity","XBInstance","getFileUploadGuiDataSuccess","Promise","reject","err","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, getReferenceDataXbInstances } from 'stores';\r\n\r\nexport const getFileUploadGuiData = (requestList) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: {auth}, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/fileUpload.actions.getFileUploadGuiData',\r\n  };\r\n\r\n  dispatch(getFileUploadGuiDataRequest(requestList));\r\n\r\n  if (utils.generic.isInvalidOrEmptyArray(requestList)) {\r\n    dispatch(getFileUploadGuiDataFailure({ ...defaultError, message: 'Missing request list parameters' }));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: 'data/gui/screen/fileupload',\r\n      data: {\r\n        guiRequestList: requestList.map((component) => ({ componentName: component })),\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => {\r\n      if (json?.status === 'OK' && json?.data) {\r\n        const guiDataObj = json.data.guiResponseList.reduce((acc, cur) => {\r\n          if (cur.componentName) {\r\n            return { ...acc, [cur.componentName]: cur.entity };\r\n          } else {\r\n            return acc;\r\n          }\r\n        }, {});\r\n        dispatch(getReferenceDataXbInstances(guiDataObj?.XBInstance || []));\r\n        dispatch(getFileUploadGuiDataSuccess(guiDataObj));\r\n        return guiDataObj;\r\n      } else {\r\n        return Promise.reject({\r\n          message: `API error${json.status ? ` (${json.status})` : ''}`,\r\n          ...(json && { ...json }),\r\n        });\r\n      }\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (fileUpload.getFileUploadGuiData)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getFileUploadGuiDataFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getFileUploadGuiDataRequest = (requestList) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_GUI_DATA_REQUEST',\r\n    payload: requestList,\r\n  };\r\n};\r\n\r\nexport const getFileUploadGuiDataSuccess = (guiDataObj) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_GUI_DATA_SUCCESS',\r\n    payload: guiDataObj,\r\n  };\r\n};\r\n\r\nexport const getFileUploadGuiDataFailure = (error) => {\r\n  return {\r\n    type: 'FILE_UPLOAD_GET_GUI_DATA_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}