{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsComplexityInsured\\\\ClaimsComplexityInsured.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; //app\n\nimport styles from './ClaimsComplexityInsured.styles';\nimport * as utils from 'utils';\nimport { Button, TableCell, Overflow, TableHead, Search, Pagination, Empty, FormCheckbox } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks'; //mui\n\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsComplexityInsuredView.prototype = {\n  cols: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleSearch: PropTypes.func.isRequired,\n  handleReset: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  addInsured: PropTypes.func.isRequired,\n  removeInsured: PropTypes.func.isRequired,\n  setIsSelectedTabDirty: PropTypes.func.isRequired\n};\nexport function ClaimsComplexityInsuredView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var colsArr = _ref.cols,\n      _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      handleSort = _ref.handleSort,\n      handleSearch = _ref.handleSearch,\n      handleReset = _ref.handleReset,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      addInsured = _ref.addInsured,\n      removeInsured = _ref.removeInsured,\n      setIsSelectedTabDirty = _ref.setIsSelectedTabDirty,\n      resetKey = _ref.resetKey;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsComplexityInsured'\n  })();\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch;\n\n  var insured = watch();\n  var someCheckedInsured = Object.values(insured).some(function (value) {\n    return value;\n  });\n  useEffect(function () {\n    setIsSelectedTabDirty(someCheckedInsured);\n  }, [someCheckedInsured]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var fields = rows && rows.length && rows.map(function (field) {\n    return {\n      name: field.insured.split('.').join(''),\n      type: 'checkbox'\n    };\n  });\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        mt: 3,\n        display: \"flex\",\n        justifyContent: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.add'),\n          \"data-testid\": \"addInsured\",\n          onClick: function onClick() {\n            return addInsured();\n          },\n          color: \"primary\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.actionButton\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 70,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Button, {\n          text: utils.string.t('app.remove'),\n          \"data-testid\": \"removeInsured\",\n          disabled: !someCheckedInsured,\n          onClick: function onClick() {\n            return removeInsured(insured);\n          },\n          color: \"primary\",\n          size: \"medium\",\n          nestedClasses: {\n            btn: classes.actionButton\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 68,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.searchWrapper,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: utils.string.t('claims.complexityInsured.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 91,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Search, {\n          text: \"\",\n          placeholder: \"\",\n          minChars: 4,\n          nestedClasses: {\n            root: classes.search\n          },\n          handlers: {\n            search: handleSearch,\n            reset: handleReset\n          }\n        }, resetKey, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          children: utils.string.t('claims.searchPolicy.minimumCharacters')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        ml: 2,\n        className: classes.tableWrapper,\n        children: [utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(_Fragment, {\n          children: [/*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(Table, {\n              \"data-testid\": \"claims-table\",\n              children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                columns: cols,\n                sorting: sort,\n                nestedClasses: {\n                  tableHead: classes.tableHead\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 112,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                \"data-testid\": \"claims-list\",\n                children: rows.map(function (item, iter) {\n                  return /*#__PURE__*/_jsxDEV(TableRow, {\n                    hover: true,\n                    children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                      compact: true,\n                      \"data-testid\": \"row-col-\".concat(iter),\n                      children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, item.insured.split('.').join(''))), {}, {\n                        control: control,\n                        register: register,\n                        watch: watch\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 118,\n                        columnNumber: 29\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 117,\n                      columnNumber: 27\n                    }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                      \"data-testid\": \"row-col-\".concat(item.insured),\n                      children: item.insured\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 125,\n                      columnNumber: 27\n                    }, _this)]\n                  }, iter, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 116,\n                    columnNumber: 25\n                  }, _this);\n                })\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 113,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 111,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Pagination, {\n                page: get(paginationObj, 'obj.page'),\n                count: get(paginationObj, 'obj.rowsTotal'),\n                rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n                onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n                onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true), !utils.generic.isValidArray(rows, true) && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Empty, {\n            title: utils.string.t('claims.noMatchFound'),\n            text: utils.string.t('claims.noMatchDetails'),\n            icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 23\n            }, this),\n            padding: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 146,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 107,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 67,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsComplexityInsuredView, \"g+YuCbFSAlMm6bEJPxiYvTp7wts=\", false, function () {\n  return [useSort, usePagination, useForm];\n});\n\n_c = ClaimsComplexityInsuredView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityInsuredView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsComplexityInsured/ClaimsComplexityInsured.view.js"],"names":["React","useEffect","useForm","PropTypes","get","styles","utils","Button","TableCell","Overflow","TableHead","Search","Pagination","Empty","FormCheckbox","usePagination","useSort","makeStyles","Grid","Table","TableRow","TableBody","Typography","Box","ClaimsComplexityInsuredView","prototype","cols","array","isRequired","rows","sort","object","pagination","handleSort","func","handleSearch","handleReset","handleChangePage","handleChangeRowsPerPage","addInsured","removeInsured","setIsSelectedTabDirty","colsArr","sortObj","resetKey","classes","name","paginationObj","control","register","watch","insured","someCheckedInsured","Object","values","some","value","fields","length","map","field","split","join","type","string","t","btn","actionButton","searchWrapper","root","search","reset","tableWrapper","generic","isValidArray","tableHead","item","iter","form","getFieldProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n//app\r\nimport styles from './ClaimsComplexityInsured.styles';\r\nimport * as utils from 'utils';\r\nimport { Button, TableCell, Overflow, TableHead, Search, Pagination, Empty, FormCheckbox } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Grid, Table, TableRow, TableBody, Typography, Box } from '@material-ui/core';\r\n\r\nClaimsComplexityInsuredView.prototype = {\r\n  cols: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  handleSearch: PropTypes.func.isRequired,\r\n  handleReset: PropTypes.func.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  addInsured: PropTypes.func.isRequired,\r\n  removeInsured: PropTypes.func.isRequired,\r\n  setIsSelectedTabDirty: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsComplexityInsuredView({\r\n  cols: colsArr,\r\n  rows = [],\r\n  sort: sortObj,\r\n  pagination,\r\n  handleSort,\r\n  handleSearch,\r\n  handleReset,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  addInsured,\r\n  removeInsured,\r\n  setIsSelectedTabDirty,\r\n  resetKey,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsComplexityInsured' })();\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  const { control, register, watch } = useForm();\r\n  const insured = watch();\r\n  const someCheckedInsured = Object.values(insured).some((value) => value);\r\n\r\n  useEffect(() => {\r\n    setIsSelectedTabDirty(someCheckedInsured);\r\n  }, [someCheckedInsured]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const fields =\r\n    rows &&\r\n    rows.length &&\r\n    rows.map((field) => ({\r\n      name: field.insured.split('.').join(''),\r\n      type: 'checkbox',\r\n    }));\r\n\r\n  return (\r\n    <Grid container>\r\n      <Grid item xs={12}>\r\n        <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n          <Button\r\n            text={utils.string.t('app.add')}\r\n            data-testid=\"addInsured\"\r\n            onClick={() => addInsured()}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            nestedClasses={{ btn: classes.actionButton }}\r\n          />\r\n          <Button\r\n            text={utils.string.t('app.remove')}\r\n            data-testid=\"removeInsured\"\r\n            disabled={!someCheckedInsured}\r\n            onClick={() => removeInsured(insured)}\r\n            color=\"primary\"\r\n            size=\"medium\"\r\n            nestedClasses={{ btn: classes.actionButton }}\r\n          />\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.searchWrapper}>\r\n        <Box>\r\n          <Typography variant=\"h5\">{utils.string.t('claims.complexityInsured.title')}</Typography>\r\n          <Search\r\n            key={resetKey}\r\n            text=\"\"\r\n            placeholder=\"\"\r\n            minChars={4}\r\n            nestedClasses={{ root: classes.search }}\r\n            handlers={{\r\n              search: handleSearch,\r\n              reset: handleReset,\r\n            }}\r\n          />\r\n          <Typography variant=\"h5\">{utils.string.t('claims.searchPolicy.minimumCharacters')}</Typography>\r\n        </Box>\r\n      </Grid>\r\n      <Grid item xs={12}>\r\n        <Box ml={2} className={classes.tableWrapper}>\r\n          {utils.generic.isValidArray(rows, true) && (\r\n            <>\r\n              <Overflow>\r\n                <Table data-testid=\"claims-table\">\r\n                  <TableHead columns={cols} sorting={sort} nestedClasses={{ tableHead: classes.tableHead }} />\r\n                  <TableBody data-testid=\"claims-list\">\r\n                    {rows.map((item, iter) => {\r\n                      return (\r\n                        <TableRow key={iter} hover>\r\n                          <TableCell compact data-testid={`row-col-${iter}`}>\r\n                            <FormCheckbox\r\n                              {...utils.form.getFieldProps(fields, item.insured.split('.').join(''))}\r\n                              control={control}\r\n                              register={register}\r\n                              watch={watch}\r\n                            />\r\n                          </TableCell>\r\n                          <TableCell data-testid={`row-col-${item.insured}`}>{item.insured}</TableCell>\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </Overflow>\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <Pagination\r\n                    page={get(paginationObj, 'obj.page')}\r\n                    count={get(paginationObj, 'obj.rowsTotal')}\r\n                    rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n                    onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n                    onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n                  />\r\n                </Grid>\r\n              </Grid>\r\n            </>\r\n          )}\r\n          {!utils.generic.isValidArray(rows, true) && (\r\n            <Grid item xs={12}>\r\n              <Empty\r\n                title={utils.string.t('claims.noMatchFound')}\r\n                text={utils.string.t('claims.noMatchDetails')}\r\n                icon={<IconSearchFile />}\r\n                padding\r\n              />\r\n            </Grid>\r\n          )}\r\n        </Box>\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}