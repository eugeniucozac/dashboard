{"ast":null,"code":"import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var deleteReportGroupUser = function deleteReportGroupUser(reportGroupId, userId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reporting.actions.deleteReportGroupUser'\n    };\n\n    if (!userId || !reportGroupId) {\n      dispatch(deleteReportAdminFailure(defaultError));\n      dispatch(enqueueNotification('notification.reporting.userDeleteFail', 'error'));\n      dispatch(removeLoader('deleteReportGroupUser'));\n      return;\n    }\n\n    dispatch(deleteReportAdminRequest(userId));\n    dispatch(addLoader('deleteReportGroupUser'));\n    return utils.api.delete({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/reportgroup/\".concat(reportGroupId, \"/user/\").concat(userId),\n      data: userId\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function () {\n      dispatch(deleteReportAdminSuccess(userId));\n      dispatch(enqueueNotification('notification.reporting.userDeleteSuccess', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deleteReportGroupUser'));\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(deleteReportAdminFailure(err));\n      dispatch(enqueueNotification('notification.reporting.userDeleteFail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deleteReportGroupUser'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('deleteReportGroupUser'));\n    });\n  };\n};\nexport var deleteReportAdminRequest = function deleteReportAdminRequest(payload) {\n  return {\n    type: 'REPORT_USER_DELETE_REQUEST',\n    payload: payload\n  };\n};\nexport var deleteReportAdminSuccess = function deleteReportAdminSuccess(payload) {\n  return {\n    type: 'REPORT_USER_DELETE_SUCCESS',\n    payload: payload\n  };\n};\nexport var deleteReportAdminFailure = function deleteReportAdminFailure(error) {\n  return {\n    type: 'REPORT_USER_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.deleteReportUser.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","hideModal","utils","deleteReportGroupUser","reportGroupId","userId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","deleteReportAdminFailure","deleteReportAdminRequest","api","delete","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","deleteReportAdminSuccess","catch","err","handleError","handleUnauthorized","finally","payload","type","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deleteReportGroupUser = (reportGroupId, userId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.deleteReportGroupUser',\r\n  };\r\n  if (!userId || !reportGroupId) {\r\n    dispatch(deleteReportAdminFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.reporting.userDeleteFail', 'error'));\r\n    dispatch(removeLoader('deleteReportGroupUser'));\r\n    return;\r\n  }\r\n\r\n  dispatch(deleteReportAdminRequest(userId));\r\n  dispatch(addLoader('deleteReportGroupUser'));\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/reportgroup/${reportGroupId}/user/${userId}`,\r\n      data: userId,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then(() => {\r\n      dispatch(deleteReportAdminSuccess(userId));\r\n      dispatch(enqueueNotification('notification.reporting.userDeleteSuccess', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deleteReportGroupUser'));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(deleteReportAdminFailure(err));\r\n      dispatch(enqueueNotification('notification.reporting.userDeleteFail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deleteReportGroupUser'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('deleteReportGroupUser'));\r\n    });\r\n};\r\n\r\nexport const deleteReportAdminRequest = (payload) => {\r\n  return {\r\n    type: 'REPORT_USER_DELETE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const deleteReportAdminSuccess = (payload) => {\r\n  return {\r\n    type: 'REPORT_USER_DELETE_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const deleteReportAdminFailure = (error) => {\r\n  return {\r\n    type: 'REPORT_USER_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}