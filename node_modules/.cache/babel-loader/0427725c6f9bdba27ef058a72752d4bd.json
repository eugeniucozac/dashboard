{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Chart\\\\Chart.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport ChartJS from 'chart.js';\nimport isEqual from 'lodash/isEqual'; // app\n\nimport styles from './Chart.styles';\nimport { Tooltip } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { withStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Chart = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Chart, _PureComponent);\n\n  var _super = _createSuper(Chart);\n\n  function Chart(props) {\n    var _this;\n\n    _classCallCheck(this, Chart);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"isDataEqual\", function (prevData, currentData) {\n      // check if we have different number of datasets\n      if (prevData.id !== currentData.id) {\n        return false;\n      }\n\n      if (prevData.length !== currentData.length) {\n        return false;\n      } // go through the datasets\n      // check that the data arrays are equal or not\n\n\n      return prevData.reduce(function (acc, dataset, index) {\n        return acc && isEqual(dataset.data, currentData[index].data) && isEqual(dataset.backgroundColor, currentData[index].backgroundColor);\n      }, true);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"isOptionsEqual\", function (prevOptions, currentOptions) {\n      return isEqual(prevOptions, currentOptions);\n    });\n\n    _this.chartRef = /*#__PURE__*/React.createRef();\n    return _this;\n  }\n\n  _createClass(Chart, [{\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this$props = this.props,\n          id = _this$props.id,\n          type = _this$props.type,\n          data = _this$props.data,\n          options = _this$props.options,\n          onload = _this$props.onload;\n      this.myChart = new ChartJS(this.chartRef.current, {\n        type: type,\n        data: Object.assign({}, data),\n        options: Object.assign({}, options)\n      });\n\n      if (utils.generic.isFunction(onload)) {\n        onload(id, this.myChart);\n      }\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this2 = this;\n\n      var options = this.props.options;\n      var _this$props$data = this.props.data,\n          labels = _this$props$data.labels,\n          datasets = _this$props$data.datasets,\n          id = _this$props$data.id; // compare data props then update if values have changed\n\n      var isDataEqual = prevProps.data.id === id && this.isDataEqual(prevProps.data.datasets, datasets);\n      var isOptionsEqual = this.isOptionsEqual(prevProps.options, options);\n\n      if (!isDataEqual) {\n        this.myChart.data.labels = _toConsumableArray(labels); // if the datasets have the same number, we can animate the values\n        // if not, ChartJS will redraw them from scratch\n\n        if (prevProps.data.datasets.length === datasets.length) {\n          this.myChart.data.datasets.map(function (dataset, index) {\n            dataset.data = _this2.props.data.datasets[index].data;\n            dataset.backgroundColor = _this2.props.data.datasets[index].backgroundColor;\n            dataset.hoverBackgroundColor = _this2.props.data.datasets[index].hoverBackgroundColor;\n            return dataset;\n          });\n        } else {\n          this.myChart.data.datasets = _toConsumableArray(datasets);\n        }\n\n        this.myChart.update();\n      }\n\n      if (!isOptionsEqual) {\n        this.myChart.options = options;\n        this.myChart.update();\n      }\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      if (this.myChart && this.myChart.destroy) {\n        this.myChart.destroy();\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _chartClasses;\n\n      var _this$props2 = this.props,\n          id = _this$props2.id,\n          type = _this$props2.type,\n          data = _this$props2.data,\n          options = _this$props2.options,\n          width = _this$props2.width,\n          height = _this$props2.height,\n          scale = _this$props2.scale,\n          tooltip = _this$props2.tooltip,\n          nestedClasses = _this$props2.nestedClasses,\n          classes = _this$props2.classes;\n      if (!type || !data || !options) return null;\n      var chartClasses = (_chartClasses = {}, _defineProperty(_chartClasses, classes.root, true), _defineProperty(_chartClasses, classes.scale, Boolean(scale)), _defineProperty(_chartClasses, nestedClasses.root, true), _chartClasses);\n      return /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classnames(chartClasses),\n        style: {\n          width: width,\n          height: height\n        },\n        \"data-testid\": id,\n        children: [tooltip && /*#__PURE__*/_jsxDEV(Tooltip, {\n          title: tooltip,\n          style: {\n            width: width,\n            height: height\n          },\n          children: /*#__PURE__*/_jsxDEV(\"canvas\", {\n            ref: this.chartRef,\n            className: nestedClasses.chart\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 137,\n          columnNumber: 11\n        }, this), !tooltip && /*#__PURE__*/_jsxDEV(\"canvas\", {\n          ref: this.chartRef,\n          className: nestedClasses.chart\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 142,\n          columnNumber: 22\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 135,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Chart;\n}(PureComponent);\nChart.displayName = \"Chart\";\n\n_defineProperty(Chart, \"propTypes\", {\n  id: PropTypes.string,\n  type: PropTypes.oneOf(['bar', 'horizontalBar', 'doughnut', 'pie']).isRequired,\n  data: PropTypes.shape({\n    datasets: PropTypes.arrayOf(PropTypes.shape({\n      data: PropTypes.arrayOf(PropTypes.number).isRequired\n    })).isRequired,\n    labels: PropTypes.arrayOf(PropTypes.string),\n    id: PropTypes.string\n  }),\n  options: PropTypes.object.isRequired,\n  width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\n  scale: PropTypes.bool,\n  tooltip: PropTypes.string,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    chart: PropTypes.string\n  }),\n  onload: PropTypes.func\n});\n\n_defineProperty(Chart, \"defaultProps\", {\n  nestedClasses: {}\n});\n\nChart.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"isDataEqual\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"prevData\",\n      \"type\": null\n    }, {\n      \"name\": \"currentData\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"isOptionsEqual\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"prevOptions\",\n      \"type\": null\n    }, {\n      \"name\": \"currentOptions\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }],\n  \"displayName\": \"Chart\",\n  \"props\": {\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"chart\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"type\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'bar'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'horizontalBar'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'doughnut'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'pie'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"datasets\": {\n            \"name\": \"arrayOf\",\n            \"value\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"data\": {\n                  \"name\": \"arrayOf\",\n                  \"value\": {\n                    \"name\": \"number\"\n                  },\n                  \"required\": true\n                }\n              }\n            },\n            \"required\": true\n          },\n          \"labels\": {\n            \"name\": \"arrayOf\",\n            \"value\": {\n              \"name\": \"string\"\n            },\n            \"required\": false\n          },\n          \"id\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"width\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"height\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"number\"\n        }, {\n          \"name\": \"string\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scale\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tooltip\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onload\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default compose(withStyles(styles))(Chart);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Chart\\\\Chart.js\"] = {\n    name: \"Chart\",\n    docgenInfo: Chart.__docgenInfo,\n    path: \"src\\\\components\\\\Chart\\\\Chart.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Chart/Chart.js"],"names":["React","PureComponent","PropTypes","compose","classnames","ChartJS","isEqual","styles","Tooltip","utils","withStyles","Chart","props","prevData","currentData","id","length","reduce","acc","dataset","index","data","backgroundColor","prevOptions","currentOptions","chartRef","createRef","type","options","onload","myChart","current","Object","assign","generic","isFunction","prevProps","labels","datasets","isDataEqual","isOptionsEqual","map","hoverBackgroundColor","update","destroy","width","height","scale","tooltip","nestedClasses","classes","chartClasses","root","Boolean","chart","string","oneOf","isRequired","shape","arrayOf","number","object","oneOfType","bool","func"],"mappings":";;;;;;;;AAAA,OAAOA,KAAP,IAAgBC,aAAhB,QAAqC,OAArC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,OAAxB;AACA,OAAOC,UAAP,MAAuB,YAAvB;AACA,OAAOC,OAAP,MAAoB,UAApB;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,gBAAnB;AACA,SAASC,OAAT,QAAwB,YAAxB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,QAA2B,mBAA3B;;AAEA,WAAaC,KAAb;AAAA;;AAAA;;AA6BE,iBAAYC,KAAZ,EAAmB;AAAA;;AAAA;;AACjB,8BAAMA,KAAN;;AADiB,kEA0DL,UAACC,QAAD,EAAWC,WAAX,EAA2B;AACvC;AACA,UAAID,QAAQ,CAACE,EAAT,KAAgBD,WAAW,CAACC,EAAhC,EAAoC;AAClC,eAAO,KAAP;AACD;;AACD,UAAIF,QAAQ,CAACG,MAAT,KAAoBF,WAAW,CAACE,MAApC,EAA4C;AAC1C,eAAO,KAAP;AACD,OAPsC,CASvC;AACA;;;AACA,aAAOH,QAAQ,CAACI,MAAT,CAAgB,UAACC,GAAD,EAAMC,OAAN,EAAeC,KAAf,EAAyB;AAC9C,eAAOF,GAAG,IAAIZ,OAAO,CAACa,OAAO,CAACE,IAAT,EAAeP,WAAW,CAACM,KAAD,CAAX,CAAmBC,IAAlC,CAAd,IAAyDf,OAAO,CAACa,OAAO,CAACG,eAAT,EAA0BR,WAAW,CAACM,KAAD,CAAX,CAAmBE,eAA7C,CAAvE;AACD,OAFM,EAEJ,IAFI,CAAP;AAGD,KAxEkB;;AAAA,qEA0EF,UAACC,WAAD,EAAcC,cAAd,EAAiC;AAChD,aAAOlB,OAAO,CAACiB,WAAD,EAAcC,cAAd,CAAd;AACD,KA5EkB;;AAEjB,UAAKC,QAAL,gBAAgBzB,KAAK,CAAC0B,SAAN,EAAhB;AAFiB;AAGlB;;AAhCH;AAAA;AAAA,WAkCE,6BAAoB;AAAA,wBAC0B,KAAKd,KAD/B;AAAA,UACVG,EADU,eACVA,EADU;AAAA,UACNY,IADM,eACNA,IADM;AAAA,UACAN,IADA,eACAA,IADA;AAAA,UACMO,OADN,eACMA,OADN;AAAA,UACeC,MADf,eACeA,MADf;AAGlB,WAAKC,OAAL,GAAe,IAAIzB,OAAJ,CAAY,KAAKoB,QAAL,CAAcM,OAA1B,EAAmC;AAChDJ,QAAAA,IAAI,EAAEA,IAD0C;AAEhDN,QAAAA,IAAI,EAAEW,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBZ,IAAlB,CAF0C;AAGhDO,QAAAA,OAAO,EAAEI,MAAM,CAACC,MAAP,CAAc,EAAd,EAAkBL,OAAlB;AAHuC,OAAnC,CAAf;;AAMA,UAAInB,KAAK,CAACyB,OAAN,CAAcC,UAAd,CAAyBN,MAAzB,CAAJ,EAAsC;AACpCA,QAAAA,MAAM,CAACd,EAAD,EAAK,KAAKe,OAAV,CAAN;AACD;AACF;AA9CH;AAAA;AAAA,WAgDE,4BAAmBM,SAAnB,EAA8B;AAAA;;AAAA,UACpBR,OADoB,GACR,KAAKhB,KADG,CACpBgB,OADoB;AAAA,6BAEK,KAAKhB,KAAL,CAAWS,IAFhB;AAAA,UAEpBgB,MAFoB,oBAEpBA,MAFoB;AAAA,UAEZC,QAFY,oBAEZA,QAFY;AAAA,UAEFvB,EAFE,oBAEFA,EAFE,EAI5B;;AACA,UAAMwB,WAAW,GAAGH,SAAS,CAACf,IAAV,CAAeN,EAAf,KAAsBA,EAAtB,IAA4B,KAAKwB,WAAL,CAAiBH,SAAS,CAACf,IAAV,CAAeiB,QAAhC,EAA0CA,QAA1C,CAAhD;AACA,UAAME,cAAc,GAAG,KAAKA,cAAL,CAAoBJ,SAAS,CAACR,OAA9B,EAAuCA,OAAvC,CAAvB;;AAEA,UAAI,CAACW,WAAL,EAAkB;AAChB,aAAKT,OAAL,CAAaT,IAAb,CAAkBgB,MAAlB,sBAA+BA,MAA/B,EADgB,CAGhB;AACA;;AACA,YAAID,SAAS,CAACf,IAAV,CAAeiB,QAAf,CAAwBtB,MAAxB,KAAmCsB,QAAQ,CAACtB,MAAhD,EAAwD;AACtD,eAAKc,OAAL,CAAaT,IAAb,CAAkBiB,QAAlB,CAA2BG,GAA3B,CAA+B,UAACtB,OAAD,EAAUC,KAAV,EAAoB;AACjDD,YAAAA,OAAO,CAACE,IAAR,GAAe,MAAI,CAACT,KAAL,CAAWS,IAAX,CAAgBiB,QAAhB,CAAyBlB,KAAzB,EAAgCC,IAA/C;AACAF,YAAAA,OAAO,CAACG,eAAR,GAA0B,MAAI,CAACV,KAAL,CAAWS,IAAX,CAAgBiB,QAAhB,CAAyBlB,KAAzB,EAAgCE,eAA1D;AACAH,YAAAA,OAAO,CAACuB,oBAAR,GAA+B,MAAI,CAAC9B,KAAL,CAAWS,IAAX,CAAgBiB,QAAhB,CAAyBlB,KAAzB,EAAgCsB,oBAA/D;AACA,mBAAOvB,OAAP;AACD,WALD;AAMD,SAPD,MAOO;AACL,eAAKW,OAAL,CAAaT,IAAb,CAAkBiB,QAAlB,sBAAiCA,QAAjC;AACD;;AAED,aAAKR,OAAL,CAAaa,MAAb;AACD;;AAED,UAAI,CAACH,cAAL,EAAqB;AACnB,aAAKV,OAAL,CAAaF,OAAb,GAAuBA,OAAvB;AACA,aAAKE,OAAL,CAAaa,MAAb;AACD;AACF;AA/EH;AAAA;AAAA,WAiFE,gCAAuB;AACrB,UAAI,KAAKb,OAAL,IAAgB,KAAKA,OAAL,CAAac,OAAjC,EAA0C;AACxC,aAAKd,OAAL,CAAac,OAAb;AACD;AACF;AArFH;AAAA;AAAA,WA2GE,kBAAS;AAAA;;AAAA,yBACoF,KAAKhC,KADzF;AAAA,UACCG,EADD,gBACCA,EADD;AAAA,UACKY,IADL,gBACKA,IADL;AAAA,UACWN,IADX,gBACWA,IADX;AAAA,UACiBO,OADjB,gBACiBA,OADjB;AAAA,UAC0BiB,KAD1B,gBAC0BA,KAD1B;AAAA,UACiCC,MADjC,gBACiCA,MADjC;AAAA,UACyCC,KADzC,gBACyCA,KADzC;AAAA,UACgDC,OADhD,gBACgDA,OADhD;AAAA,UACyDC,aADzD,gBACyDA,aADzD;AAAA,UACwEC,OADxE,gBACwEA,OADxE;AAGP,UAAI,CAACvB,IAAD,IAAS,CAACN,IAAV,IAAkB,CAACO,OAAvB,EAAgC,OAAO,IAAP;AAEhC,UAAMuB,YAAY,uDACfD,OAAO,CAACE,IADO,EACA,IADA,kCAEfF,OAAO,CAACH,KAFO,EAECM,OAAO,CAACN,KAAD,CAFR,kCAGfE,aAAa,CAACG,IAHC,EAGM,IAHN,iBAAlB;AAMA,0BACE;AAAK,QAAA,SAAS,EAAEhD,UAAU,CAAC+C,YAAD,CAA1B;AAA0C,QAAA,KAAK,EAAE;AAAEN,UAAAA,KAAK,EAALA,KAAF;AAASC,UAAAA,MAAM,EAANA;AAAT,SAAjD;AAAoE,uBAAa/B,EAAjF;AAAA,mBACGiC,OAAO,iBACN,QAAC,OAAD;AAAS,UAAA,KAAK,EAAEA,OAAhB;AAAyB,UAAA,KAAK,EAAE;AAAEH,YAAAA,KAAK,EAALA,KAAF;AAASC,YAAAA,MAAM,EAANA;AAAT,WAAhC;AAAA,iCACE;AAAQ,YAAA,GAAG,EAAE,KAAKrB,QAAlB;AAA4B,YAAA,SAAS,EAAEwB,aAAa,CAACK;AAArD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,gBAFJ,EAOG,CAACN,OAAD,iBAAY;AAAQ,UAAA,GAAG,EAAE,KAAKvB,QAAlB;AAA4B,UAAA,SAAS,EAAEwB,aAAa,CAACK;AAArD;AAAA;AAAA;AAAA;AAAA,gBAPf;AAAA;AAAA;AAAA;AAAA;AAAA,cADF;AAWD;AAjIH;;AAAA;AAAA,EAA2BrD,aAA3B;AAAaU,K;;gBAAAA,K,eACQ;AACjBI,EAAAA,EAAE,EAAEb,SAAS,CAACqD,MADG;AAEjB5B,EAAAA,IAAI,EAAEzB,SAAS,CAACsD,KAAV,CAAgB,CAAC,KAAD,EAAQ,eAAR,EAAyB,UAAzB,EAAqC,KAArC,CAAhB,EAA6DC,UAFlD;AAGjBpC,EAAAA,IAAI,EAAEnB,SAAS,CAACwD,KAAV,CAAgB;AACpBpB,IAAAA,QAAQ,EAAEpC,SAAS,CAACyD,OAAV,CACRzD,SAAS,CAACwD,KAAV,CAAgB;AACdrC,MAAAA,IAAI,EAAEnB,SAAS,CAACyD,OAAV,CAAkBzD,SAAS,CAAC0D,MAA5B,EAAoCH;AAD5B,KAAhB,CADQ,EAIRA,UALkB;AAMpBpB,IAAAA,MAAM,EAAEnC,SAAS,CAACyD,OAAV,CAAkBzD,SAAS,CAACqD,MAA5B,CANY;AAOpBxC,IAAAA,EAAE,EAAEb,SAAS,CAACqD;AAPM,GAAhB,CAHW;AAYjB3B,EAAAA,OAAO,EAAE1B,SAAS,CAAC2D,MAAV,CAAiBJ,UAZT;AAajBZ,EAAAA,KAAK,EAAE3C,SAAS,CAAC4D,SAAV,CAAoB,CAAC5D,SAAS,CAAC0D,MAAX,EAAmB1D,SAAS,CAACqD,MAA7B,CAApB,CAbU;AAcjBT,EAAAA,MAAM,EAAE5C,SAAS,CAAC4D,SAAV,CAAoB,CAAC5D,SAAS,CAAC0D,MAAX,EAAmB1D,SAAS,CAACqD,MAA7B,CAApB,CAdS;AAejBR,EAAAA,KAAK,EAAE7C,SAAS,CAAC6D,IAfA;AAgBjBf,EAAAA,OAAO,EAAE9C,SAAS,CAACqD,MAhBF;AAiBjBN,EAAAA,aAAa,EAAE/C,SAAS,CAACwD,KAAV,CAAgB;AAC7BN,IAAAA,IAAI,EAAElD,SAAS,CAACqD,MADa;AAE7BD,IAAAA,KAAK,EAAEpD,SAAS,CAACqD;AAFY,GAAhB,CAjBE;AAqBjB1B,EAAAA,MAAM,EAAE3B,SAAS,CAAC8D;AArBD,C;;gBADRrD,K,kBAyBW;AACpBsC,EAAAA,aAAa,EAAE;AADK,C;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;AA2GxB,eAAe9C,OAAO,CAACO,UAAU,CAACH,MAAD,CAAX,CAAP,CAA4BI,KAA5B,CAAf","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport ChartJS from 'chart.js';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\n// app\r\nimport styles from './Chart.styles';\r\nimport { Tooltip } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { withStyles } from '@material-ui/core';\r\n\r\nexport class Chart extends PureComponent {\r\n  static propTypes = {\r\n    id: PropTypes.string,\r\n    type: PropTypes.oneOf(['bar', 'horizontalBar', 'doughnut', 'pie']).isRequired,\r\n    data: PropTypes.shape({\r\n      datasets: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          data: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n        })\r\n      ).isRequired,\r\n      labels: PropTypes.arrayOf(PropTypes.string),\r\n      id: PropTypes.string,\r\n    }),\r\n    options: PropTypes.object.isRequired,\r\n    width: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    height: PropTypes.oneOfType([PropTypes.number, PropTypes.string]),\r\n    scale: PropTypes.bool,\r\n    tooltip: PropTypes.string,\r\n    nestedClasses: PropTypes.shape({\r\n      root: PropTypes.string,\r\n      chart: PropTypes.string,\r\n    }),\r\n    onload: PropTypes.func,\r\n  };\r\n\r\n  static defaultProps = {\r\n    nestedClasses: {},\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    this.chartRef = React.createRef();\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { id, type, data, options, onload } = this.props;\r\n\r\n    this.myChart = new ChartJS(this.chartRef.current, {\r\n      type: type,\r\n      data: Object.assign({}, data),\r\n      options: Object.assign({}, options),\r\n    });\r\n\r\n    if (utils.generic.isFunction(onload)) {\r\n      onload(id, this.myChart);\r\n    }\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { options } = this.props;\r\n    const { labels, datasets, id } = this.props.data;\r\n\r\n    // compare data props then update if values have changed\r\n    const isDataEqual = prevProps.data.id === id && this.isDataEqual(prevProps.data.datasets, datasets);\r\n    const isOptionsEqual = this.isOptionsEqual(prevProps.options, options);\r\n\r\n    if (!isDataEqual) {\r\n      this.myChart.data.labels = [...labels];\r\n\r\n      // if the datasets have the same number, we can animate the values\r\n      // if not, ChartJS will redraw them from scratch\r\n      if (prevProps.data.datasets.length === datasets.length) {\r\n        this.myChart.data.datasets.map((dataset, index) => {\r\n          dataset.data = this.props.data.datasets[index].data;\r\n          dataset.backgroundColor = this.props.data.datasets[index].backgroundColor;\r\n          dataset.hoverBackgroundColor = this.props.data.datasets[index].hoverBackgroundColor;\r\n          return dataset;\r\n        });\r\n      } else {\r\n        this.myChart.data.datasets = [...datasets];\r\n      }\r\n\r\n      this.myChart.update();\r\n    }\r\n\r\n    if (!isOptionsEqual) {\r\n      this.myChart.options = options;\r\n      this.myChart.update();\r\n    }\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    if (this.myChart && this.myChart.destroy) {\r\n      this.myChart.destroy();\r\n    }\r\n  }\r\n\r\n  isDataEqual = (prevData, currentData) => {\r\n    // check if we have different number of datasets\r\n    if (prevData.id !== currentData.id) {\r\n      return false;\r\n    }\r\n    if (prevData.length !== currentData.length) {\r\n      return false;\r\n    }\r\n\r\n    // go through the datasets\r\n    // check that the data arrays are equal or not\r\n    return prevData.reduce((acc, dataset, index) => {\r\n      return acc && isEqual(dataset.data, currentData[index].data) && isEqual(dataset.backgroundColor, currentData[index].backgroundColor);\r\n    }, true);\r\n  };\r\n\r\n  isOptionsEqual = (prevOptions, currentOptions) => {\r\n    return isEqual(prevOptions, currentOptions);\r\n  };\r\n\r\n  render() {\r\n    const { id, type, data, options, width, height, scale, tooltip, nestedClasses, classes } = this.props;\r\n\r\n    if (!type || !data || !options) return null;\r\n\r\n    const chartClasses = {\r\n      [classes.root]: true,\r\n      [classes.scale]: Boolean(scale),\r\n      [nestedClasses.root]: true,\r\n    };\r\n\r\n    return (\r\n      <div className={classnames(chartClasses)} style={{ width, height }} data-testid={id}>\r\n        {tooltip && (\r\n          <Tooltip title={tooltip} style={{ width, height }}>\r\n            <canvas ref={this.chartRef} className={nestedClasses.chart} />\r\n          </Tooltip>\r\n        )}\r\n\r\n        {!tooltip && <canvas ref={this.chartRef} className={nestedClasses.chart} />}\r\n      </div>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(Chart);\r\n"]},"metadata":{},"sourceType":"module"}