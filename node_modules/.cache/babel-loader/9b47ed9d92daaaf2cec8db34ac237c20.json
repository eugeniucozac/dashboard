{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var createReportingGroup = function createReportingGroup(payload) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/reporting.actions.post',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postReportingGroupRequest(payload));\n    dispatch(addLoader('createReportingGroup'));\n\n    if (!payload || typeof payload !== 'object') {\n      dispatch(postReportingGroupFailure(defaultError));\n      dispatch(enqueueNotification('notification.reporting.postFail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('createReportingGroup'));\n      return;\n    }\n\n    var data = payload;\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/reportgroup',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postReportingGroupSuccess(data));\n      dispatch(hideModal());\n      dispatch(enqueueNotification('notification.reporting.postSuccess', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (report group)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postReportingGroupFailure(err));\n      dispatch(enqueueNotification('notification.reporting.postFail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('createReportingGroup'));\n    });\n  };\n};\nexport var postReportingGroupRequest = function postReportingGroupRequest(payload) {\n  return {\n    type: 'REPORTING_GROUP_POST_REQUEST',\n    payload: payload\n  };\n};\nexport var postReportingGroupSuccess = function postReportingGroupSuccess(payload) {\n  return {\n    type: 'REPORTING_GROUP_POST_SUCCESS',\n    payload: payload\n  };\n};\nexport var postReportingGroupFailure = function postReportingGroupFailure(error) {\n  return {\n    type: 'REPORTING_GROUP_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/reporting/reporting.actions.reportGroup.post.js"],"names":["authLogout","enqueueNotification","addLoader","removeLoader","hideModal","utils","createReportingGroup","payload","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postReportingGroupRequest","postReportingGroupFailure","data","api","post","token","accessToken","edge","path","then","response","handleResponse","json","handleData","postReportingGroupSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","error"],"mappings":"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","sourcesContent":["// app\r\nimport { authLogout, enqueueNotification, addLoader, removeLoader, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const createReportingGroup = (payload) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/reporting.actions.post',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postReportingGroupRequest(payload));\r\n  dispatch(addLoader('createReportingGroup'));\r\n\r\n  if (!payload || typeof payload !== 'object') {\r\n    dispatch(postReportingGroupFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.reporting.postFail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('createReportingGroup'));\r\n    return;\r\n  }\r\n  const data = payload;\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/reportgroup',\r\n      data: data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postReportingGroupSuccess(data));\r\n      dispatch(hideModal());\r\n      dispatch(enqueueNotification('notification.reporting.postSuccess', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (report group)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postReportingGroupFailure(err));\r\n      dispatch(enqueueNotification('notification.reporting.postFail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('createReportingGroup'));\r\n    });\r\n};\r\n\r\nexport const postReportingGroupRequest = (payload) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_POST_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postReportingGroupSuccess = (payload) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_POST_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postReportingGroupFailure = (error) => {\r\n  return {\r\n    type: 'REPORTING_GROUP_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}