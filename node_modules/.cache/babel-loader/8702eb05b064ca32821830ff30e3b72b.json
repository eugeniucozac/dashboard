{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _createForOfIteratorHelper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createForOfIteratorHelper\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PremiumProcessingCaseBureau\\\\PremiumProcessingCaseBureau.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport PremiumProcessingCaseBureauView from './PremiumProcessingCaseBureau.view';\nimport * as utils from 'utils';\nimport { selectRefDataMarketTypes, selectUser, enqueueNotification, getBureauList, postBureauInsurerDetails } from 'stores';\nimport * as constants from 'consts';\nimport { showModal } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCaseBureau.propTypes = {\n  handlers: PropTypes.shape({\n    setIsPageDirty: PropTypes.func.isRequired\n  }),\n  caseDetailsObject: PropTypes.object.isRequired,\n  taskId: PropTypes.string.isRequired,\n  isPageDirty: PropTypes.bool.isRequired,\n  isNotMyTaskView: PropTypes.bool.isRequired\n};\nexport default function PremiumProcessingCaseBureau(_ref) {\n  _s();\n\n  var _caseDetailsObject$ca, _caseDetailsObject$ca4, _caseDetailsObject$ca5;\n\n  var handlers = _ref.handlers,\n      caseDetailsObject = _ref.caseDetailsObject,\n      taskId = _ref.taskId,\n      isPageDirty = _ref.isPageDirty,\n      isNotMyTaskView = _ref.isNotMyTaskView;\n  var dispatch = useDispatch();\n  var policyId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.policyId) || '';\n  var caseIncidentID = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : caseDetailsObject.caseId) || '';\n  var sourceId = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca = caseDetailsObject.caseTeamData) === null || _caseDetailsObject$ca === void 0 ? void 0 : _caseDetailsObject$ca.xbInstanceId) || '';\n  var caseStageDetails = caseDetailsObject.caseStageDetails;\n  var marketTypes = useSelector(selectRefDataMarketTypes);\n  var user = useSelector(selectUser);\n\n  var _useState = useState({}),\n      _useState2 = _slicedToArray(_useState, 2),\n      bureauInsurersDetails = _useState2[0],\n      setBureauInsurersDetails = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isFiveBureauAdded = _useState4[0],\n      setIsFiveBureauAdded = _useState4[1];\n\n  var _useState5 = useState([]),\n      _useState6 = _slicedToArray(_useState5, 2),\n      bureauListData = _useState6[0],\n      setBureauListData = _useState6[1];\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isDuplicateWorkRefNo = _useState8[0],\n      setIsDuplicateWorkRefNo = _useState8[1];\n\n  var _useState9 = useState([]),\n      _useState10 = _slicedToArray(_useState9, 2),\n      isDuplicateWorkRefNoInDb = _useState10[0],\n      setIsDuplicateWorkRefNoInDb = _useState10[1];\n\n  var hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentBi', ['read', 'create', 'update', 'delete'], user);\n  var isCompletedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active;\n  });\n  var isRejectedStage = caseStageDetails === null || caseStageDetails === void 0 ? void 0 : caseStageDetails.some(function (cs) {\n    return [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active;\n  });\n  var columnsData = [{\n    id: 'workPackageRefNumber',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.bureauColumns.workPackageRefNumber')\n  }, {\n    id: 'status',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.bureauColumns.status')\n  }, {\n    id: 'date',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.bureauColumns.date')\n  }, {\n    id: 'bureau',\n    visible: true,\n    nowrap: true,\n    label: utils.string.t('premiumProcessing.bureauColumns.bureau')\n  }];\n  var emptyDetails = {\n    workPackageRefNumber: '',\n    status: false,\n    date: '',\n    selectedBureau: []\n  };\n  useEffect(function () {\n    dispatch(getBureauList({\n      policyId: policyId,\n      sourceId: sourceId,\n      caseIncidentID: caseIncidentID\n    })); // eslint-disable-next-line react-hooks/exhaustive-deps\n  }, []);\n  useEffect(function () {\n    if (utils.generic.isValidArray(marketTypes, true)) {\n      var bureauList = [];\n\n      var _iterator = _createForOfIteratorHelper(marketTypes),\n          _step;\n\n      try {\n        for (_iterator.s(); !(_step = _iterator.n()).done;) {\n          var marketType = _step.value;\n\n          if (marketType.marketTypeDescription !== constants.OUTSIDE_COMPANIES) {\n            bureauList.push({\n              id: marketType.marketTypeID,\n              name: marketType.marketTypeDescription\n            });\n          }\n        }\n      } catch (err) {\n        _iterator.e(err);\n      } finally {\n        _iterator.f();\n      }\n\n      setBureauListData(bureauList);\n    }\n\n    setInitialBureauInsurerData();\n  }, [marketTypes] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    var _caseDetailsObject$ca2, _caseDetailsObject$ca3;\n\n    if (utils.generic.isValidArray(caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca2 = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca2 === void 0 ? void 0 : (_caseDetailsObject$ca3 = _caseDetailsObject$ca2.bureauList) === null || _caseDetailsObject$ca3 === void 0 ? void 0 : _caseDetailsObject$ca3.items, true) && !utils.generic.isValidArray(isDuplicateWorkRefNoInDb, true)) {\n      setInitialBureauInsurerData();\n    } // eslint-disable-next-line react-hooks/exhaustive-deps\n\n  }, [caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca4 = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca4 === void 0 ? void 0 : (_caseDetailsObject$ca5 = _caseDetailsObject$ca4.bureauList) === null || _caseDetailsObject$ca5 === void 0 ? void 0 : _caseDetailsObject$ca5.items, isDuplicateWorkRefNoInDb]);\n\n  var setInitialBureauInsurerData = function setInitialBureauInsurerData() {\n    var _caseDetailsObject$ca6, _caseDetailsObject$ca7, _caseDetailsObject$ca8, _caseDetailsObject$ca9, _caseDetailsObject$ca10;\n\n    var bureauInsurers = (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca6 = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca6 === void 0 ? void 0 : (_caseDetailsObject$ca7 = _caseDetailsObject$ca6.bureauList) === null || _caseDetailsObject$ca7 === void 0 ? void 0 : _caseDetailsObject$ca7.items) && (caseDetailsObject === null || caseDetailsObject === void 0 ? void 0 : (_caseDetailsObject$ca8 = caseDetailsObject.caseIssueDocuments) === null || _caseDetailsObject$ca8 === void 0 ? void 0 : (_caseDetailsObject$ca9 = _caseDetailsObject$ca8.bureauList) === null || _caseDetailsObject$ca9 === void 0 ? void 0 : (_caseDetailsObject$ca10 = _caseDetailsObject$ca9.items) === null || _caseDetailsObject$ca10 === void 0 ? void 0 : _caseDetailsObject$ca10.length) && _toConsumableArray(caseDetailsObject.caseIssueDocuments.bureauList.items) || [];\n    var addRowEntry = {};\n\n    if (utils.generic.isValidArray(bureauInsurers, true)) {\n      var key = 0;\n      bureauInsurers.forEach(function (insurer) {\n        var selectedBureau = [];\n        utils.generic.isValidArray(insurer.marketTypesId, true) && utils.generic.isValidArray(marketTypes, true) && insurer.marketTypesId.forEach(function (id) {\n          var bureau = marketTypes.find(function (data) {\n            return data.marketTypeID === id && data.marketTypeDescription !== constants.OUTSIDE_COMPANIES;\n          });\n\n          if (bureau === null || bureau === void 0 ? void 0 : bureau.marketTypeDescription) {\n            selectedBureau.push({\n              id: bureau.marketTypeID,\n              name: bureau.marketTypeDescription\n            });\n          }\n        });\n        addRowEntry[key] = {\n          workPackageRefNumber: insurer.workPackageRef,\n          status: !!insurer.sentDate,\n          date: insurer.sentDate,\n          selectedBureau: selectedBureau,\n          caseIncidentIssueDocsId: insurer.caseIncidentIssueDocsId\n        };\n        key = key + 1;\n      });\n    }\n\n    var rowNumber = Object.keys(addRowEntry).length;\n\n    if (rowNumber < 5) {\n      if (isFiveBureauAdded) {\n        setIsFiveBureauAdded(false);\n      }\n\n      var keys = Object.keys(bureauInsurersDetails);\n      var lastKey = keys[keys.length - 1] || -1;\n      addRowEntry[lastKey + 1] = emptyDetails;\n    } else {\n      showBureauEntryWarning();\n    }\n\n    setBureauInsurersDetails(_objectSpread({}, addRowEntry));\n  };\n\n  var showBureauEntryWarning = function showBureauEntryWarning() {\n    if (!isFiveBureauAdded && !isCompletedStage && !isRejectedStage) {\n      setIsFiveBureauAdded(true);\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.workRefValidation', 'warning', {\n        delay: 60000\n      }));\n    }\n  };\n\n  var checkLastRow = function checkLastRow(index) {\n    handlers.setIsPageDirty(true);\n    var totalRows = Object.keys(bureauInsurersDetails);\n    var lastIndex = Math.max.apply(Math, _toConsumableArray(totalRows));\n\n    if (totalRows.length < 5) {\n      if (isFiveBureauAdded) {\n        setIsFiveBureauAdded(false);\n      }\n\n      if (index >= lastIndex) {\n        return _objectSpread(_objectSpread({}, bureauInsurersDetails), {}, _defineProperty({}, lastIndex + 1, emptyDetails));\n      } else if (index < lastIndex && (bureauInsurersDetails[lastIndex].workPackageRefNumber || bureauInsurersDetails[lastIndex].date || bureauInsurersDetails[lastIndex].selectedBureau.length)) {\n        return _objectSpread(_objectSpread({}, bureauInsurersDetails), {}, _defineProperty({}, lastIndex + 1, emptyDetails));\n      } else {\n        return bureauInsurersDetails;\n      }\n    } else {\n      if (index.toString() === lastIndex.toString()) {\n        showBureauEntryWarning();\n      }\n\n      return bureauInsurersDetails;\n    }\n  };\n\n  var handleInputChange = function handleInputChange(event) {\n    var rowsDetails = checkLastRow(event.target.id);\n    setBureauInsurersDetails(_objectSpread(_objectSpread({}, rowsDetails), {}, _defineProperty({}, event.target.id, _objectSpread(_objectSpread({}, bureauInsurersDetails[event.target.id]), {}, {\n      workPackageRefNumber: utils.string.stripNonAlphaNumeric(event.target.value).toUpperCase()\n    }))));\n  };\n\n  var handleDatePickerUpdate = function handleDatePickerUpdate(index, date) {\n    var rowsDetails = checkLastRow(index);\n    setBureauInsurersDetails(_objectSpread(_objectSpread({}, rowsDetails), {}, _defineProperty({}, index, _objectSpread(_objectSpread({}, bureauInsurersDetails[index]), {}, {\n      date: date\n    }))));\n  };\n\n  var toggleMultiSelectOption = function toggleMultiSelectOption(currentIndex) {\n    return function (id, value) {\n      var rowsDetails = checkLastRow(currentIndex);\n      var selectedBureau = bureauInsurersDetails[currentIndex].selectedBureau || [];\n      var isSelected = false;\n\n      var _iterator2 = _createForOfIteratorHelper(selectedBureau),\n          _step2;\n\n      try {\n        for (_iterator2.s(); !(_step2 = _iterator2.n()).done;) {\n          var bureau = _step2.value;\n\n          if (bureau.id === value.id) {\n            isSelected = true;\n            break;\n          }\n        }\n      } catch (err) {\n        _iterator2.e(err);\n      } finally {\n        _iterator2.f();\n      }\n\n      if (!isSelected) {\n        setBureauInsurersDetails(_objectSpread(_objectSpread({}, rowsDetails), {}, _defineProperty({}, currentIndex, _objectSpread(_objectSpread({}, bureauInsurersDetails[currentIndex]), {}, {\n          selectedBureau: [].concat(_toConsumableArray(bureauInsurersDetails[currentIndex].selectedBureau), [{\n            id: value.id,\n            name: value.name\n          }])\n        }))));\n      } else {\n        setBureauInsurersDetails(_objectSpread(_objectSpread({}, rowsDetails), {}, _defineProperty({}, currentIndex, _objectSpread(_objectSpread({}, bureauInsurersDetails[currentIndex]), {}, {\n          selectedBureau: _toConsumableArray(selectedBureau.filter(function (obj) {\n            return obj.id !== value.id;\n          }))\n        }))));\n      }\n    };\n  };\n\n  var getSelectedBureauLabel = function getSelectedBureauLabel(index) {\n    var _bureauInsurersDetail;\n\n    var countOfSelectedBureau = (bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail = bureauInsurersDetails[index]) === null || _bureauInsurersDetail === void 0 ? void 0 : _bureauInsurersDetail.selectedBureau.length) || 0;\n    var showSelectedBureau = '';\n\n    if (countOfSelectedBureau) {\n      var _bureauInsurersDetail2;\n\n      var _iterator3 = _createForOfIteratorHelper(bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? void 0 : (_bureauInsurersDetail2 = bureauInsurersDetails[index]) === null || _bureauInsurersDetail2 === void 0 ? void 0 : _bureauInsurersDetail2.selectedBureau),\n          _step3;\n\n      try {\n        for (_iterator3.s(); !(_step3 = _iterator3.n()).done;) {\n          var bureau = _step3.value;\n          showSelectedBureau += bureau.name + ', ';\n        }\n      } catch (err) {\n        _iterator3.e(err);\n      } finally {\n        _iterator3.f();\n      }\n    }\n\n    return showSelectedBureau.replace(/,\\s*$/, '');\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var _workPackageRef;\n\n    var showToast = false;\n\n    var bureauInsurerData = _objectSpread({}, bureauInsurersDetails);\n\n    var data = [];\n    Object.keys(bureauInsurerData).forEach(function (key) {\n      var _bureauInsurerData$ke, _bureauInsurerData$ke2, _bureauInsurerData$ke3, _bureauInsurerData$ke4, _bureauInsurerData$ke5, _bureauInsurerData$ke6, _bureauInsurerData$ke7, _bureauInsurersDetail3;\n\n      if ((((_bureauInsurerData$ke = bureauInsurerData[key]) === null || _bureauInsurerData$ke === void 0 ? void 0 : _bureauInsurerData$ke.workPackageRefNumber) || ((_bureauInsurerData$ke2 = bureauInsurerData[key]) === null || _bureauInsurerData$ke2 === void 0 ? void 0 : _bureauInsurerData$ke2.date) || ((_bureauInsurerData$ke3 = bureauInsurerData[key]) === null || _bureauInsurerData$ke3 === void 0 ? void 0 : _bureauInsurerData$ke3.selectedBureau.length)) && (!((_bureauInsurerData$ke4 = bureauInsurerData[key]) === null || _bureauInsurerData$ke4 === void 0 ? void 0 : _bureauInsurerData$ke4.workPackageRefNumber) || !((_bureauInsurerData$ke5 = bureauInsurerData[key]) === null || _bureauInsurerData$ke5 === void 0 ? void 0 : _bureauInsurerData$ke5.date) || !((_bureauInsurerData$ke6 = bureauInsurerData[key]) === null || _bureauInsurerData$ke6 === void 0 ? void 0 : _bureauInsurerData$ke6.selectedBureau.length))) {\n        bureauInsurerData = _objectSpread(_objectSpread({}, bureauInsurerData), {}, _defineProperty({}, key, _objectSpread(_objectSpread({}, bureauInsurerData[key]), {}, {\n          error: true\n        })));\n        showToast = true;\n      } else if (((_bureauInsurerData$ke7 = bureauInsurerData[key]) === null || _bureauInsurerData$ke7 === void 0 ? void 0 : _bureauInsurerData$ke7.workPackageRefNumber) && !((_bureauInsurersDetail3 = bureauInsurersDetails[key]) === null || _bureauInsurersDetail3 === void 0 ? void 0 : _bureauInsurersDetail3.caseIncidentIssueDocsId)) {\n        data.push({\n          caseIncidentId: Number(caseDetailsObject.caseId),\n          createdBy: user.id,\n          createdDate: utils.date.today(),\n          documentSentType: caseDetailsObject.caseTeamData.policyType,\n          emailId: user.emailId.length && 1 || 0,\n          isActive: 1,\n          issueDocsType: 'Bureau',\n          marketTypesId: bureauInsurersDetails[key].selectedBureau.map(function (data) {\n            return data.id;\n          }),\n          policyClientId: policyId,\n          policyUnderwriterId: null,\n          sentDate: bureauInsurersDetails[key].date,\n          sourceId: sourceId,\n          updatedBy: user.id,\n          updatedDate: utils.date.today(),\n          workPackageRef: bureauInsurersDetails[key].workPackageRefNumber\n        });\n      }\n    });\n\n    if (showToast) {\n      setBureauInsurersDetails(bureauInsurerData);\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.fail', 'error'));\n      return;\n    }\n\n    var workPackageRef = data === null || data === void 0 ? void 0 : data.map(function (item) {\n      return item.workPackageRef;\n    });\n    var isDuplicateRefNo = (_workPackageRef = workPackageRef) === null || _workPackageRef === void 0 ? void 0 : _workPackageRef.find(function (item, idx) {\n      return workPackageRef.indexOf(item) !== idx;\n    });\n    setIsDuplicateWorkRefNo(isDuplicateRefNo);\n\n    if (isDuplicateRefNo) {\n      return dispatch(enqueueNotification('premiumProcessing.bureauColumns.duplicateWorkPackageNo', 'error'));\n    }\n\n    if (utils.generic.isValidArray(data, true)) {\n      dispatch(postBureauInsurerDetails(data)).then(function (response) {\n        var _response$response, _response$json;\n\n        if ((response === null || response === void 0 ? void 0 : (_response$response = response.response) === null || _response$response === void 0 ? void 0 : _response$response.status) === 500 && utils.generic.isValidArray(response === null || response === void 0 ? void 0 : (_response$json = response.json) === null || _response$json === void 0 ? void 0 : _response$json.data, true)) {\n          var _response$json2, _response$json2$data;\n\n          workPackageRef = response === null || response === void 0 ? void 0 : (_response$json2 = response.json) === null || _response$json2 === void 0 ? void 0 : (_response$json2$data = _response$json2.data) === null || _response$json2$data === void 0 ? void 0 : _response$json2$data.map(function (item) {\n            return item.workPackageRef;\n          });\n          setIsDuplicateWorkRefNoInDb(workPackageRef);\n\n          if (workPackageRef) {\n            dispatch(enqueueNotification('premiumProcessing.bureauColumns.duplicateWorkPackageInEds', 'error'));\n          } else dispatch(enqueueNotification('premiumProcessing.bureauColumns.apiFail', 'error'));\n        } else {\n          setIsDuplicateWorkRefNoInDb([]);\n        }\n\n        if (response.status === constants.API_RESPONSE_OK) {\n          handlers.setIsPageDirty(false);\n        }\n      });\n    } else {\n      handlers.setIsPageDirty(false);\n    }\n  };\n\n  var handleRemoveRow = function handleRemoveRow(key) {\n    if (key in bureauInsurersDetails) {\n      var _bureauInsurersDetail4;\n\n      bureauInsurersDetails === null || bureauInsurersDetails === void 0 ? true : delete bureauInsurersDetails[key];\n\n      var data = _objectSpread({}, bureauInsurersDetails);\n\n      var keys = Object.keys(bureauInsurersDetails);\n      var lastKey = keys[keys.length - 1];\n\n      if (keys.length === 4 && ((_bureauInsurersDetail4 = bureauInsurersDetails[lastKey]) === null || _bureauInsurersDetail4 === void 0 ? void 0 : _bureauInsurersDetail4.workPackageRefNumber)) {\n        data = _objectSpread(_objectSpread({}, data), {}, _defineProperty({}, lastKey + 1, emptyDetails));\n      }\n\n      setBureauInsurersDetails(_objectSpread({}, data));\n    }\n  };\n\n  var showAlert = function showAlert(submitHandler, cancelHandler) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('status.alert'),\n        hint: utils.string.t('premiumProcessing.bureauColumns.alertPopup'),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          cancelLabel: utils.string.t('app.cancel'),\n          confirmLabel: utils.string.t('app.yes'),\n          submitHandler: submitHandler,\n          cancelHandler: cancelHandler\n        }\n      }\n    }));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (isPageDirty) {\n      showAlert(function () {\n        setInitialBureauInsurerData();\n        handlers.setIsPageDirty(false);\n      }, function () {});\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCaseBureauView, {\n    columnsData: columnsData,\n    bureauInsurersDetails: bureauInsurersDetails,\n    bureauList: bureauListData,\n    hasEditPermission: hasEditPermission,\n    isDuplicateWorkRefNo: isDuplicateWorkRefNo,\n    isDuplicateWorkRefNoInDb: isDuplicateWorkRefNoInDb,\n    isCompletedStage: isCompletedStage,\n    isRejectedStage: isRejectedStage,\n    handlers: {\n      handleSubmit: handleSubmit,\n      handleInputChange: handleInputChange,\n      handleDatePickerUpdate: handleDatePickerUpdate,\n      toggleMultiSelectOption: toggleMultiSelectOption,\n      getSelectedBureauLabel: getSelectedBureauLabel,\n      showAlert: showAlert,\n      handleCancel: handleCancel,\n      handleRemoveRow: handleRemoveRow\n    },\n    taskId: taskId,\n    isEdited: isPageDirty,\n    isNotMyTaskView: isNotMyTaskView\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 371,\n    columnNumber: 5\n  }, this);\n}\n\n_s(PremiumProcessingCaseBureau, \"piLPaeg5QEMzAKUjBsu7RWkUhiw=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PremiumProcessingCaseBureau;\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCaseBureau\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PremiumProcessingCaseBureau/PremiumProcessingCaseBureau.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","PremiumProcessingCaseBureauView","utils","selectRefDataMarketTypes","selectUser","enqueueNotification","getBureauList","postBureauInsurerDetails","constants","showModal","PremiumProcessingCaseBureau","propTypes","handlers","shape","setIsPageDirty","func","isRequired","caseDetailsObject","object","taskId","string","isPageDirty","bool","isNotMyTaskView","dispatch","policyId","caseIncidentID","caseId","sourceId","caseTeamData","xbInstanceId","caseStageDetails","marketTypes","user","bureauInsurersDetails","setBureauInsurersDetails","isFiveBureauAdded","setIsFiveBureauAdded","bureauListData","setBureauListData","isDuplicateWorkRefNo","setIsDuplicateWorkRefNo","isDuplicateWorkRefNoInDb","setIsDuplicateWorkRefNoInDb","hasEditPermission","app","access","feature","isCompletedStage","some","cs","BPM_STAGE_COMPLETED","includes","bpmStageCode","active","isRejectedStage","BPM_STAGE_REJECTED","columnsData","id","visible","nowrap","label","t","emptyDetails","workPackageRefNumber","status","date","selectedBureau","generic","isValidArray","bureauList","marketType","marketTypeDescription","OUTSIDE_COMPANIES","push","marketTypeID","name","setInitialBureauInsurerData","caseIssueDocuments","items","bureauInsurers","length","addRowEntry","key","forEach","insurer","marketTypesId","bureau","find","data","workPackageRef","sentDate","caseIncidentIssueDocsId","rowNumber","Object","keys","lastKey","showBureauEntryWarning","delay","checkLastRow","index","totalRows","lastIndex","Math","max","toString","handleInputChange","event","rowsDetails","target","stripNonAlphaNumeric","value","toUpperCase","handleDatePickerUpdate","toggleMultiSelectOption","currentIndex","isSelected","filter","obj","getSelectedBureauLabel","countOfSelectedBureau","showSelectedBureau","replace","handleSubmit","showToast","bureauInsurerData","error","caseIncidentId","Number","createdBy","createdDate","today","documentSentType","policyType","emailId","isActive","issueDocsType","map","policyClientId","policyUnderwriterId","updatedBy","updatedDate","item","isDuplicateRefNo","idx","indexOf","then","response","json","API_RESPONSE_OK","handleRemoveRow","showAlert","submitHandler","cancelHandler","component","props","title","hint","fullWidth","maxWidth","componentProps","cancelLabel","confirmLabel","handleCancel"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport PremiumProcessingCaseBureauView from './PremiumProcessingCaseBureau.view';\r\nimport * as utils from 'utils';\r\nimport { selectRefDataMarketTypes, selectUser, enqueueNotification, getBureauList, postBureauInsurerDetails } from 'stores';\r\nimport * as constants from 'consts';\r\nimport { showModal } from 'stores';\r\n\r\nPremiumProcessingCaseBureau.propTypes = {\r\n  handlers: PropTypes.shape({\r\n    setIsPageDirty: PropTypes.func.isRequired,\r\n  }),\r\n  caseDetailsObject: PropTypes.object.isRequired,\r\n  taskId: PropTypes.string.isRequired,\r\n  isPageDirty: PropTypes.bool.isRequired,\r\n  isNotMyTaskView: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport default function PremiumProcessingCaseBureau({ handlers, caseDetailsObject, taskId, isPageDirty, isNotMyTaskView }) {\r\n  const dispatch = useDispatch();\r\n  const policyId = caseDetailsObject?.policyId || '';\r\n  const caseIncidentID = caseDetailsObject?.caseId || '';\r\n  const sourceId = caseDetailsObject?.caseTeamData?.xbInstanceId || '';\r\n  const { caseStageDetails } = caseDetailsObject;\r\n  const marketTypes = useSelector(selectRefDataMarketTypes);\r\n  const user = useSelector(selectUser);\r\n  const [bureauInsurersDetails, setBureauInsurersDetails] = useState({});\r\n  const [isFiveBureauAdded, setIsFiveBureauAdded] = useState(false);\r\n  const [bureauListData, setBureauListData] = useState([]);\r\n  const [isDuplicateWorkRefNo, setIsDuplicateWorkRefNo] = useState();\r\n  const [isDuplicateWorkRefNoInDb, setIsDuplicateWorkRefNoInDb] = useState([]);\r\n  const hasEditPermission = utils.app.access.feature('premiumProcessing.issueDocumentBi', ['read', 'create', 'update', 'delete'], user);\r\n\r\n  const isCompletedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_COMPLETED].includes(cs.bpmStageCode) && cs.active);\r\n  const isRejectedStage = caseStageDetails?.some((cs) => [constants.BPM_STAGE_REJECTED].includes(cs.bpmStageCode) && cs.active);\r\n\r\n  const columnsData = [\r\n    {\r\n      id: 'workPackageRefNumber',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.bureauColumns.workPackageRefNumber'),\r\n    },\r\n    {\r\n      id: 'status',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.bureauColumns.status'),\r\n    },\r\n    {\r\n      id: 'date',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.bureauColumns.date'),\r\n    },\r\n    {\r\n      id: 'bureau',\r\n      visible: true,\r\n      nowrap: true,\r\n      label: utils.string.t('premiumProcessing.bureauColumns.bureau'),\r\n    },\r\n  ];\r\n\r\n  const emptyDetails = {\r\n    workPackageRefNumber: '',\r\n    status: false,\r\n    date: '',\r\n    selectedBureau: [],\r\n  };\r\n\r\n  useEffect(() => {\r\n    dispatch(getBureauList({ policyId, sourceId, caseIncidentID }));\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, []);\r\n  useEffect(\r\n    () => {\r\n      if (utils.generic.isValidArray(marketTypes, true)) {\r\n        const bureauList = [];\r\n        for (let marketType of marketTypes) {\r\n          if (marketType.marketTypeDescription !== constants.OUTSIDE_COMPANIES) {\r\n            bureauList.push({ id: marketType.marketTypeID, name: marketType.marketTypeDescription });\r\n          }\r\n        }\r\n        setBureauListData(bureauList);\r\n      }\r\n      setInitialBureauInsurerData();\r\n    },\r\n    [marketTypes] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(() => {\r\n    if (\r\n      utils.generic.isValidArray(caseDetailsObject?.caseIssueDocuments?.bureauList?.items, true) &&\r\n      !utils.generic.isValidArray(isDuplicateWorkRefNoInDb, true)\r\n    ) {\r\n      setInitialBureauInsurerData();\r\n    }\r\n    // eslint-disable-next-line react-hooks/exhaustive-deps\r\n  }, [caseDetailsObject?.caseIssueDocuments?.bureauList?.items, isDuplicateWorkRefNoInDb]);\r\n\r\n  const setInitialBureauInsurerData = () => {\r\n    const bureauInsurers =\r\n      (caseDetailsObject?.caseIssueDocuments?.bureauList?.items &&\r\n        caseDetailsObject?.caseIssueDocuments?.bureauList?.items?.length && [...caseDetailsObject.caseIssueDocuments.bureauList.items]) ||\r\n      [];\r\n    let addRowEntry = {};\r\n    if (utils.generic.isValidArray(bureauInsurers, true)) {\r\n      let key = 0;\r\n      bureauInsurers.forEach((insurer) => {\r\n        const selectedBureau = [];\r\n        utils.generic.isValidArray(insurer.marketTypesId, true) &&\r\n          utils.generic.isValidArray(marketTypes, true) &&\r\n          insurer.marketTypesId.forEach((id) => {\r\n            const bureau = marketTypes.find(\r\n              (data) => data.marketTypeID === id && data.marketTypeDescription !== constants.OUTSIDE_COMPANIES\r\n            );\r\n            if (bureau?.marketTypeDescription) {\r\n              selectedBureau.push({ id: bureau.marketTypeID, name: bureau.marketTypeDescription });\r\n            }\r\n          });\r\n        addRowEntry[key] = {\r\n          workPackageRefNumber: insurer.workPackageRef,\r\n          status: !!insurer.sentDate,\r\n          date: insurer.sentDate,\r\n          selectedBureau,\r\n          caseIncidentIssueDocsId: insurer.caseIncidentIssueDocsId,\r\n        };\r\n        key = key + 1;\r\n      });\r\n    }\r\n    const rowNumber = Object.keys(addRowEntry).length;\r\n    if (rowNumber < 5) {\r\n      if (isFiveBureauAdded) {\r\n        setIsFiveBureauAdded(false);\r\n      }\r\n      const keys = Object.keys(bureauInsurersDetails);\r\n      const lastKey = keys[keys.length - 1] || -1;\r\n      addRowEntry[lastKey + 1] = emptyDetails;\r\n    } else {\r\n      showBureauEntryWarning();\r\n    }\r\n\r\n    setBureauInsurersDetails({ ...addRowEntry });\r\n  };\r\n\r\n  const showBureauEntryWarning = () => {\r\n    if (!isFiveBureauAdded && !isCompletedStage && !isRejectedStage) {\r\n      setIsFiveBureauAdded(true);\r\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.workRefValidation', 'warning', { delay: 60000 }));\r\n    }\r\n  };\r\n\r\n  const checkLastRow = (index) => {\r\n    handlers.setIsPageDirty(true);\r\n    const totalRows = Object.keys(bureauInsurersDetails);\r\n    const lastIndex = Math.max(...totalRows);\r\n    if (totalRows.length < 5) {\r\n      if (isFiveBureauAdded) {\r\n        setIsFiveBureauAdded(false);\r\n      }\r\n      if (index >= lastIndex) {\r\n        return { ...bureauInsurersDetails, [lastIndex + 1]: emptyDetails };\r\n      } else if (\r\n        index < lastIndex &&\r\n        (bureauInsurersDetails[lastIndex].workPackageRefNumber ||\r\n          bureauInsurersDetails[lastIndex].date ||\r\n          bureauInsurersDetails[lastIndex].selectedBureau.length)\r\n      ) {\r\n        return { ...bureauInsurersDetails, [lastIndex + 1]: emptyDetails };\r\n      } else {\r\n        return bureauInsurersDetails;\r\n      }\r\n    } else {\r\n      if (index.toString() === lastIndex.toString()) {\r\n        showBureauEntryWarning();\r\n      }\r\n      return bureauInsurersDetails;\r\n    }\r\n  };\r\n  const handleInputChange = (event) => {\r\n    const rowsDetails = checkLastRow(event.target.id);\r\n    setBureauInsurersDetails({\r\n      ...rowsDetails,\r\n      [event.target.id]: {\r\n        ...bureauInsurersDetails[event.target.id],\r\n        workPackageRefNumber: utils.string.stripNonAlphaNumeric(event.target.value).toUpperCase(),\r\n      },\r\n    });\r\n  };\r\n\r\n  const handleDatePickerUpdate = (index, date) => {\r\n    const rowsDetails = checkLastRow(index);\r\n    setBureauInsurersDetails({\r\n      ...rowsDetails,\r\n      [index]: {\r\n        ...bureauInsurersDetails[index],\r\n        date: date,\r\n      },\r\n    });\r\n  };\r\n\r\n  const toggleMultiSelectOption = (currentIndex) => (id, value) => {\r\n    const rowsDetails = checkLastRow(currentIndex);\r\n    const selectedBureau = bureauInsurersDetails[currentIndex].selectedBureau || [];\r\n    let isSelected = false;\r\n    for (let bureau of selectedBureau) {\r\n      if (bureau.id === value.id) {\r\n        isSelected = true;\r\n        break;\r\n      }\r\n    }\r\n    if (!isSelected) {\r\n      setBureauInsurersDetails({\r\n        ...rowsDetails,\r\n        [currentIndex]: {\r\n          ...bureauInsurersDetails[currentIndex],\r\n          selectedBureau: [...bureauInsurersDetails[currentIndex].selectedBureau, { id: value.id, name: value.name }],\r\n        },\r\n      });\r\n    } else {\r\n      setBureauInsurersDetails({\r\n        ...rowsDetails,\r\n        [currentIndex]: {\r\n          ...bureauInsurersDetails[currentIndex],\r\n          selectedBureau: [...selectedBureau.filter((obj) => obj.id !== value.id)],\r\n        },\r\n      });\r\n    }\r\n  };\r\n\r\n  const getSelectedBureauLabel = (index) => {\r\n    const countOfSelectedBureau = bureauInsurersDetails?.[index]?.selectedBureau.length || 0;\r\n    let showSelectedBureau = '';\r\n    if (countOfSelectedBureau) {\r\n      for (let bureau of bureauInsurersDetails?.[index]?.selectedBureau) {\r\n        showSelectedBureau += bureau.name + ', ';\r\n      }\r\n    }\r\n    return showSelectedBureau.replace(/,\\s*$/, '');\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    let showToast = false;\r\n    let bureauInsurerData = { ...bureauInsurersDetails };\r\n    const data = [];\r\n    Object.keys(bureauInsurerData).forEach((key) => {\r\n      if (\r\n        (bureauInsurerData[key]?.workPackageRefNumber || bureauInsurerData[key]?.date || bureauInsurerData[key]?.selectedBureau.length) &&\r\n        (!bureauInsurerData[key]?.workPackageRefNumber || !bureauInsurerData[key]?.date || !bureauInsurerData[key]?.selectedBureau.length)\r\n      ) {\r\n        bureauInsurerData = {\r\n          ...bureauInsurerData,\r\n          [key]: {\r\n            ...bureauInsurerData[key],\r\n            error: true,\r\n          },\r\n        };\r\n        showToast = true;\r\n      } else if (bureauInsurerData[key]?.workPackageRefNumber && !bureauInsurersDetails[key]?.caseIncidentIssueDocsId) {\r\n        data.push({\r\n          caseIncidentId: Number(caseDetailsObject.caseId),\r\n          createdBy: user.id,\r\n          createdDate: utils.date.today(),\r\n          documentSentType: caseDetailsObject.caseTeamData.policyType,\r\n          emailId: (user.emailId.length && 1) || 0,\r\n          isActive: 1,\r\n          issueDocsType: 'Bureau',\r\n          marketTypesId: bureauInsurersDetails[key].selectedBureau.map((data) => data.id),\r\n          policyClientId: policyId,\r\n          policyUnderwriterId: null,\r\n          sentDate: bureauInsurersDetails[key].date,\r\n          sourceId: sourceId,\r\n          updatedBy: user.id,\r\n          updatedDate: utils.date.today(),\r\n          workPackageRef: bureauInsurersDetails[key].workPackageRefNumber,\r\n        });\r\n      }\r\n    });\r\n    if (showToast) {\r\n      setBureauInsurersDetails(bureauInsurerData);\r\n      dispatch(enqueueNotification('premiumProcessing.bureauColumns.fail', 'error'));\r\n      return;\r\n    }\r\n\r\n    let workPackageRef = data?.map((item) => {\r\n      return item.workPackageRef;\r\n    });\r\n    let isDuplicateRefNo = workPackageRef?.find((item, idx) => {\r\n      return workPackageRef.indexOf(item) !== idx;\r\n    });\r\n\r\n    setIsDuplicateWorkRefNo(isDuplicateRefNo);\r\n\r\n    if (isDuplicateRefNo) {\r\n      return dispatch(enqueueNotification('premiumProcessing.bureauColumns.duplicateWorkPackageNo', 'error'));\r\n    }\r\n\r\n    if (utils.generic.isValidArray(data, true)) {\r\n      dispatch(postBureauInsurerDetails(data)).then((response) => {\r\n        if (response?.response?.status === 500 && utils.generic.isValidArray(response?.json?.data, true)) {\r\n          workPackageRef = response?.json?.data?.map((item) => {\r\n            return item.workPackageRef;\r\n          });\r\n\r\n          setIsDuplicateWorkRefNoInDb(workPackageRef);\r\n\r\n          if (workPackageRef) {\r\n            dispatch(enqueueNotification('premiumProcessing.bureauColumns.duplicateWorkPackageInEds', 'error'));\r\n          } else dispatch(enqueueNotification('premiumProcessing.bureauColumns.apiFail', 'error'));\r\n        } else {\r\n          setIsDuplicateWorkRefNoInDb([]);\r\n        }\r\n        if (response.status === constants.API_RESPONSE_OK) {\r\n          handlers.setIsPageDirty(false);\r\n        }\r\n      });\r\n    } else {\r\n      handlers.setIsPageDirty(false);\r\n    }\r\n  };\r\n\r\n  const handleRemoveRow = (key) => {\r\n    if (key in bureauInsurersDetails) {\r\n      delete bureauInsurersDetails?.[key];\r\n      let data = { ...bureauInsurersDetails };\r\n      const keys = Object.keys(bureauInsurersDetails);\r\n      const lastKey = keys[keys.length - 1];\r\n      if (keys.length === 4 && bureauInsurersDetails[lastKey]?.workPackageRefNumber) {\r\n        data = { ...data, [lastKey + 1]: emptyDetails };\r\n      }\r\n      setBureauInsurersDetails({ ...data });\r\n    }\r\n  };\r\n\r\n  const showAlert = (submitHandler, cancelHandler) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('status.alert'),\r\n          hint: utils.string.t('premiumProcessing.bureauColumns.alertPopup'),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            cancelLabel: utils.string.t('app.cancel'),\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            submitHandler,\r\n            cancelHandler,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (isPageDirty) {\r\n      showAlert(\r\n        () => {\r\n          setInitialBureauInsurerData();\r\n          handlers.setIsPageDirty(false);\r\n        },\r\n        () => {}\r\n      );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <PremiumProcessingCaseBureauView\r\n      columnsData={columnsData}\r\n      bureauInsurersDetails={bureauInsurersDetails}\r\n      bureauList={bureauListData}\r\n      hasEditPermission={hasEditPermission}\r\n      isDuplicateWorkRefNo={isDuplicateWorkRefNo}\r\n      isDuplicateWorkRefNoInDb={isDuplicateWorkRefNoInDb}\r\n      isCompletedStage={isCompletedStage}\r\n      isRejectedStage={isRejectedStage}\r\n      handlers={{\r\n        handleSubmit,\r\n        handleInputChange,\r\n        handleDatePickerUpdate,\r\n        toggleMultiSelectOption,\r\n        getSelectedBureauLabel,\r\n        showAlert,\r\n        handleCancel: handleCancel,\r\n        handleRemoveRow,\r\n      }}\r\n      taskId={taskId}\r\n      isEdited={isPageDirty}\r\n      isNotMyTaskView={isNotMyTaskView}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}