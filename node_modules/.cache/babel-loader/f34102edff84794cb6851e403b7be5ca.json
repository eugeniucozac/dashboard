{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsManageDocuments\\\\ClaimsManageDocuments.js\",\n    _s = $RefreshSig$();\n\nimport { React, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { ClaimsManageDocumentsView } from './ClaimsManageDocuments.view';\nimport { selectorDmsViewFiles, getViewTableDocuments, selectClaimIdFromGrid } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsManageDocuments.propTypes = {\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  lastStep: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinish: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired\n};\nexport default function ClaimsManageDocuments(props) {\n  _s();\n\n  var activeStep = props.activeStep,\n      isAllStepsCompleted = props.isAllStepsCompleted,\n      handleBack = props.handleBack,\n      handleNext = props.handleNext,\n      index = props.index,\n      isFormsEdited = props.isFormsEdited,\n      onSaveHandle = props.onSaveHandle;\n  var dispatch = useDispatch();\n  var claimDetails = useSelector(selectClaimIdFromGrid);\n  var sectionType = constants.DMS_CONTEXT_CLAIM;\n  var viewDocumentsList = useSelector(selectorDmsViewFiles);\n\n  var updateClaimFileListAfterLinking = function updateClaimFileListAfterLinking() {\n    dispatch(getViewTableDocuments({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType\n    }));\n  };\n\n  useEffect(function () {\n    dispatch(getViewTableDocuments({\n      referenceId: claimDetails === null || claimDetails === void 0 ? void 0 : claimDetails.claimReference,\n      sectionType: sectionType\n    }));\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var fields = utils.generic.isValidArray(viewDocumentsList, true) ? viewDocumentsList === null || viewDocumentsList === void 0 ? void 0 : viewDocumentsList.map(function (eachCheck) {\n    return {\n      name: eachCheck === null || eachCheck === void 0 ? void 0 : eachCheck.documentId.toString(),\n      type: 'checkbox',\n      defaultValue: eachCheck.isSendToGxb,\n      muiComponentProps: {\n        onChange: function onChange(a, b, c) {\n          console.log(a, b, c);\n        }\n      }\n    };\n  }) : [];\n  var claimDocuments = [];\n  var lossDocuments = [];\n  viewDocumentsList === null || viewDocumentsList === void 0 ? void 0 : viewDocumentsList.forEach(function (item) {\n    if (item === null || item === void 0 ? void 0 : item.isLinkedFromLoss) {\n      lossDocuments.push(item);\n    } else {\n      claimDocuments.push(item);\n    }\n  });\n  var columns = [{\n    id: 'gxb',\n    label: utils.string.t('claims.manageDocumentLabels.gxb'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }, {\n    id: 'filename',\n    label: utils.string.t('claims.manageDocumentLabels.filename'),\n    visible: true,\n    compact: true,\n    align: 'left',\n    width: '25px'\n  }, {\n    id: 'uploadedby',\n    label: utils.string.t('claims.manageDocumentLabels.uploadedby'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }, {\n    id: 'uploadedon',\n    label: utils.string.t('claims.manageDocumentLabels.uploadedon'),\n    visible: true,\n    compact: true,\n    align: 'left'\n  }];\n  var popoverActions = [{\n    id: 'download',\n    label: utils.string.t('dms.view.popOverMenuItems.download') //callback: ({ doc }) => dispatch(viewDocumentsDownload(doc)),\n\n  }, {\n    id: 'unlink',\n    label: utils.string.t('dms.view.popOverMenuItems.unlink') //callback: ({ doc }) => confirmDocumentUnlink([doc]),\n\n  }, {\n    id: 'delete',\n    label: utils.string.t('dms.view.popOverMenuItems.delete') //callback: ({ doc }) => confirmDocumentDelete([doc]),\n\n  }];\n  var searchFields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: utils.string.t('claims.manageDocumentLabels.searchPlaceholder'),\n    defaultValue: '',\n    gridSize: {\n      xs: 12\n    },\n    muiComponentProps: {\n      autoComplete: 'off'\n    }\n  }];\n  var searchActions = [{\n    name: 'filter',\n    label: utils.string.t('app.searchLabel'),\n    handler: function handler(values) {}\n  }, {\n    name: 'reset',\n    label: utils.string.t('app.reset'),\n    handler: {}\n  }];\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var checkListForm = useForm(_objectSpread({}, validationSchema && {\n    resolver: yupResolver(validationSchema),\n    context: {\n      validation: true\n    }\n  }));\n  return /*#__PURE__*/_jsxDEV(ClaimsManageDocumentsView, {\n    activeStep: activeStep,\n    isAllStepsCompleted: isAllStepsCompleted,\n    handleBack: handleBack,\n    handleNext: handleNext,\n    index: index,\n    isFormsEdited: isFormsEdited,\n    onSaveHandle: onSaveHandle,\n    col: columns,\n    fields: fields,\n    rows: viewDocumentsList,\n    formControls: checkListForm,\n    popoverActions: popoverActions,\n    searchFields: searchFields,\n    searchActions: searchActions,\n    claimDocuments: claimDocuments,\n    lossDocuments: lossDocuments,\n    updateClaimFileListAfterLinking: updateClaimFileListAfterLinking\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 159,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsManageDocuments, \"K7Q8xSOiFHAWjoBkgBhj3zQnroo=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm];\n});\n\n_c = ClaimsManageDocuments;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsManageDocuments\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsManageDocuments/ClaimsManageDocuments.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","ClaimsManageDocumentsView","selectorDmsViewFiles","getViewTableDocuments","selectClaimIdFromGrid","utils","constants","useForm","yupResolver","ClaimsManageDocuments","propTypes","isAllStepsCompleted","bool","isRequired","activeStep","number","lastStep","handleCancel","func","handleFinish","handleNext","handleBack","handleSave","props","index","isFormsEdited","onSaveHandle","dispatch","claimDetails","sectionType","DMS_CONTEXT_CLAIM","viewDocumentsList","updateClaimFileListAfterLinking","referenceId","claimReference","fields","generic","isValidArray","map","eachCheck","name","documentId","toString","type","defaultValue","isSendToGxb","muiComponentProps","onChange","a","b","c","console","log","claimDocuments","lossDocuments","forEach","item","isLinkedFromLoss","push","columns","id","label","string","t","visible","compact","align","width","popoverActions","searchFields","placeholder","gridSize","xs","autoComplete","searchActions","handler","values","validationSchema","form","getValidationSchema","checkListForm","resolver","context","validation"],"mappings":"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","sourcesContent":["import {React, useEffect}  from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { ClaimsManageDocumentsView } from './ClaimsManageDocuments.view';\r\nimport { selectorDmsViewFiles, getViewTableDocuments, selectClaimIdFromGrid } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\nClaimsManageDocuments.propTypes = {\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  lastStep: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinish: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function ClaimsManageDocuments(props) {\r\n  const {\r\n    activeStep,\r\n    isAllStepsCompleted,\r\n    handleBack,\r\n    handleNext,\r\n    index,\r\n    isFormsEdited,\r\n    onSaveHandle,\r\n  } = props;\r\n\r\n  const dispatch = useDispatch()\r\n  const claimDetails = useSelector(selectClaimIdFromGrid)\r\n  const sectionType = constants.DMS_CONTEXT_CLAIM;\r\n\r\n  const viewDocumentsList = useSelector(selectorDmsViewFiles);\r\n\r\n  const updateClaimFileListAfterLinking = () =>{ \r\n    dispatch(getViewTableDocuments({ referenceId: claimDetails?.claimReference, sectionType }));\r\n  }\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getViewTableDocuments({ referenceId: claimDetails?.claimReference, sectionType }));\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  \r\n  let fields = utils.generic.isValidArray(viewDocumentsList, true)\r\n    ? viewDocumentsList?.map((eachCheck) => ({\r\n      name: eachCheck?.documentId.toString(),\r\n      type: 'checkbox',\r\n      defaultValue: eachCheck.isSendToGxb,\r\n\r\n      muiComponentProps: {\r\n        onChange: (a, b, c) => { console.log(a, b, c) },\r\n      },\r\n    }))\r\n    : [];\r\n\r\n    let claimDocuments = [];\r\n    let lossDocuments = [];\r\n  \r\n    viewDocumentsList?.forEach((item) => {\r\n      if (item?.isLinkedFromLoss) {\r\n        lossDocuments.push(item)\r\n      } else {\r\n        claimDocuments.push(item);\r\n      }\r\n    })\r\n  \r\n    const columns = [\r\n      {\r\n        id: 'gxb',\r\n        label: utils.string.t('claims.manageDocumentLabels.gxb'),\r\n        visible: true,\r\n        compact: true,\r\n        align: 'left'\r\n      },\r\n      {\r\n        id: 'filename',\r\n        label: utils.string.t('claims.manageDocumentLabels.filename'),\r\n        visible: true,\r\n        compact: true,\r\n        align: 'left',\r\n        width: '25px'\r\n      },\r\n      {\r\n        id: 'uploadedby',\r\n        label: utils.string.t('claims.manageDocumentLabels.uploadedby'),\r\n        visible: true,\r\n        compact: true,\r\n        align: 'left'\r\n      },\r\n      {\r\n        id: 'uploadedon',\r\n        label: utils.string.t('claims.manageDocumentLabels.uploadedon'),\r\n        visible: true,\r\n        compact: true,\r\n        align: 'left'\r\n      }\r\n    ];\r\n  \r\n    const popoverActions = [\r\n      {\r\n        id: 'download',\r\n        label: utils.string.t('dms.view.popOverMenuItems.download'),\r\n        //callback: ({ doc }) => dispatch(viewDocumentsDownload(doc)),\r\n      },\r\n      {\r\n        id: 'unlink',\r\n        label: utils.string.t('dms.view.popOverMenuItems.unlink'),\r\n        //callback: ({ doc }) => confirmDocumentUnlink([doc]),\r\n      },\r\n      {\r\n        id: 'delete',\r\n        label: utils.string.t('dms.view.popOverMenuItems.delete'),\r\n        //callback: ({ doc }) => confirmDocumentDelete([doc]),\r\n      }\r\n  \r\n    ];\r\n  \r\n    const searchFields = [\r\n      {\r\n        name: 'query',\r\n        type: 'text',\r\n        placeholder: utils.string.t('claims.manageDocumentLabels.searchPlaceholder'),\r\n        defaultValue: '',\r\n        gridSize: { xs: 12 },\r\n        muiComponentProps: {\r\n          autoComplete: 'off'\r\n        },\r\n      },\r\n    ];\r\n  \r\n    const searchActions = [\r\n      {\r\n        name: 'filter',\r\n        label: utils.string.t('app.searchLabel'),\r\n        handler: (values) => { },\r\n      },\r\n      {\r\n        name: 'reset',\r\n        label: utils.string.t('app.reset'),\r\n        handler: {},\r\n      },\r\n    ];\r\n\r\n    const validationSchema = utils.form.getValidationSchema(fields);\r\n    const checkListForm = useForm({\r\n      ...(validationSchema && { resolver: yupResolver(validationSchema), context: { validation: true } }),\r\n    });\r\n\r\n    \r\n\r\n  return (\r\n    <ClaimsManageDocumentsView \r\n    activeStep={activeStep}\r\n    isAllStepsCompleted={isAllStepsCompleted}\r\n    handleBack={handleBack}\r\n    handleNext={handleNext}\r\n    index={index}\r\n    isFormsEdited={isFormsEdited}\r\n    onSaveHandle={onSaveHandle}\r\n    col={columns}\r\n    fields={fields}\r\n    rows={viewDocumentsList}\r\n    formControls={checkListForm}\r\n    popoverActions={popoverActions}\r\n    searchFields={searchFields}\r\n    searchActions={searchActions}\r\n    claimDocuments={claimDocuments}\r\n    lossDocuments={lossDocuments}\r\n    updateClaimFileListAfterLinking={updateClaimFileListAfterLinking}\r\n    />\r\n  )\r\n\r\n}\r\n"]},"metadata":{},"sourceType":"module"}