{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var addDepartmentMarket = function addDepartmentMarket(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/department.actions.postMarket',\n      message: 'Data missing for POST request'\n    };\n    var marketId = get(formData, 'markets[0].id');\n    var departmentId = get(formData, 'departmentId');\n    dispatch(postDepartmentMarketRequest(formData));\n    dispatch(addLoader('addDepartmentMarket'));\n\n    if (!formData || !departmentId || !marketId) {\n      dispatch(postDepartmentMarketFailure(defaultError));\n      dispatch(enqueueNotification('notification.addDepartmentMarket.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('addDepartmentMarket'));\n      return;\n    }\n\n    var underwriters = get(formData, 'underwriters', []).filter(function (uw) {\n      return uw.firstName || uw.lastName || uw.emailId;\n    }).map(function (uw) {\n      return _objectSpread(_objectSpread({}, uw), {}, {\n        marketId: marketId,\n        departmentId: departmentId,\n        operation: 'CREATE'\n      });\n    });\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/departmentMarket',\n      data: {\n        marketId: marketId,\n        departmentId: get(formData, 'departmentId'),\n        capacityTypeId: get(formData, 'capacityTypeId'),\n        underwriters: underwriters\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postDepartmentMarketSuccess(data));\n      dispatch(enqueueNotification('notification.addDepartmentMarket.success', 'success'));\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (department.addDepartmentMarket)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postDepartmentMarketFailure(err));\n      dispatch(enqueueNotification('notification.addDepartmentMarket.fail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('addDepartmentMarket'));\n      return;\n    });\n  };\n};\nexport var postDepartmentMarketRequest = function postDepartmentMarketRequest(formData) {\n  return {\n    type: 'DEPARTMENT_MARKET_POST_REQUEST',\n    payload: formData\n  };\n};\nexport var postDepartmentMarketSuccess = function postDepartmentMarketSuccess(responseData) {\n  return {\n    type: 'DEPARTMENT_MARKET_POST_SUCCESS',\n    payload: responseData\n  };\n};\nexport var postDepartmentMarketFailure = function postDepartmentMarketFailure(error) {\n  return {\n    type: 'DEPARTMENT_MARKET_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/department/department.actions.postMarket.js"],"names":["addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","get","addDepartmentMarket","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","marketId","departmentId","postDepartmentMarketRequest","postDepartmentMarketFailure","underwriters","filter","uw","firstName","lastName","emailId","map","operation","api","post","token","accessToken","edge","path","data","capacityTypeId","then","response","handleResponse","json","handleData","postDepartmentMarketSuccess","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const addDepartmentMarket = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/department.actions.postMarket',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  const marketId = get(formData, 'markets[0].id');\r\n  const departmentId = get(formData, 'departmentId');\r\n\r\n  dispatch(postDepartmentMarketRequest(formData));\r\n  dispatch(addLoader('addDepartmentMarket'));\r\n\r\n  if (!formData || !departmentId || !marketId) {\r\n    dispatch(postDepartmentMarketFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.addDepartmentMarket.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('addDepartmentMarket'));\r\n    return;\r\n  }\r\n\r\n  const underwriters = get(formData, 'underwriters', [])\r\n    .filter((uw) => {\r\n      return uw.firstName || uw.lastName || uw.emailId;\r\n    })\r\n    .map((uw) => {\r\n      return {\r\n        ...uw,\r\n        marketId,\r\n        departmentId,\r\n        operation: 'CREATE',\r\n      };\r\n    });\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/departmentMarket',\r\n      data: {\r\n        marketId: marketId,\r\n        departmentId: get(formData, 'departmentId'),\r\n        capacityTypeId: get(formData, 'capacityTypeId'),\r\n        underwriters,\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postDepartmentMarketSuccess(data));\r\n      dispatch(enqueueNotification('notification.addDepartmentMarket.success', 'success'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (department.addDepartmentMarket)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postDepartmentMarketFailure(err));\r\n      dispatch(enqueueNotification('notification.addDepartmentMarket.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('addDepartmentMarket'));\r\n      return;\r\n    });\r\n};\r\n\r\nexport const postDepartmentMarketRequest = (formData) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_POST_REQUEST',\r\n    payload: formData,\r\n  };\r\n};\r\n\r\nexport const postDepartmentMarketSuccess = (responseData) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_POST_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const postDepartmentMarketFailure = (error) => {\r\n  return {\r\n    type: 'DEPARTMENT_MARKET_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}