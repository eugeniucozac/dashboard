{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './EditProductsFacility.styles';\nimport { Button, FormActions, FormAutocompleteMui, FormContainer, FormDate, FormFields, FormGrid, FormLegend, FormSelect, FormText, FormCheckbox } from 'components';\nimport { AddRiskRow } from 'modules';\nimport { useFormActions } from 'hooks';\nimport * as utils from 'utils';\nimport { COUNTRY_RATES } from 'consts'; // mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nEditProductsFacilityView.propTypes = {\n  fields: PropTypes.object.isRequired,\n  ratesCountries: PropTypes.array,\n  actions: PropTypes.array.isRequired,\n  isRateField: PropTypes.bool.isRequired,\n  isRatesLoaded: PropTypes.bool.isRequired\n};\nexport function EditProductsFacilityView(_ref) {\n  _s();\n\n  var _ref$fields = _ref.fields,\n      details = _ref$fields.details,\n      rates = _ref$fields.rates,\n      ratesCountries = _ref.ratesCountries,\n      actions = _ref.actions,\n      isRateField = _ref.isRateField,\n      isRatesLoaded = _ref.isRatesLoaded;\n  var classes = makeStyles(styles, {\n    name: 'EditProductsFacility'\n  })();\n  var combinedFields = isRateField ? _toConsumableArray(rates) : _toConsumableArray(details);\n\n  var defaultValues = _objectSpread(_objectSpread({}, utils.form.getInitialValues(combinedFields)), utils.generic.isValidArray(ratesCountries, true) && {\n    countries: ratesCountries\n  });\n\n  var validationSchema = utils.form.getValidationSchema(combinedFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      register = _useForm.register,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      errors = _useForm.errors,\n      setValue = _useForm.setValue,\n      formState = _useForm.formState,\n      handleSubmit = _useForm.handleSubmit,\n      trigger = _useForm.trigger;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(submit),\n      autoComplete: \"off\",\n      \"data-testid\": \"form-edit-products-facility\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: utils.generic.isValidArray(combinedFields, true) ? /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: isRateField ? /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              nestedClasses: {\n                root: classes.legend\n              },\n              children: /*#__PURE__*/_jsxDEV(FormLegend, {\n                text: utils.string.t('products.admin.facilities.legends.rates')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(rates, 'brokerageFee', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(rates, 'clientCommissionRate', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 71,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 70,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(rates, 'brokerCommissionRate', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 75,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 74,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(rates, 'reinsuranceRate', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 79,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(Box, {\n                mt: -2,\n                mb: 5,\n                children: /*#__PURE__*/_jsxDEV(AddRiskRow, {\n                  field: utils.form.getFieldProps(rates, 'countries'),\n                  formProps: {\n                    control: control,\n                    register: register,\n                    watch: watch,\n                    errors: errors,\n                    setValue: setValue,\n                    trigger: trigger\n                  },\n                  overflow: false,\n                  formatData: COUNTRY_RATES\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 84,\n                  columnNumber: 23\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 83,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 82,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true) : /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              nestedClasses: {\n                root: classes.legend\n              },\n              children: /*#__PURE__*/_jsxDEV(FormLegend, {\n                text: utils.string.t('products.admin.facilities.legends.settings')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 96,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 95,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(details, 'permissionToBindGroups')), {}, {\n                control: control,\n                error: errors.permissionToBindGroups,\n                handleUpdate: function handleUpdate(id, value) {\n                  setValue(id, value);\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 98,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(details, 'permissionToDismissIssuesGroups')), {}, {\n                control: control,\n                error: errors.permissionToDismissIssuesGroups,\n                handleUpdate: function handleUpdate(id, value) {\n                  setValue(id, value);\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(details, 'notifiedUsers')), {}, {\n                control: control,\n                error: errors.notifiedUsers,\n                handleUpdate: function handleUpdate(id, value) {\n                  setValue(id, value);\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 119,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 118,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(details, 'preBind')), {}, {\n                control: control,\n                register: register,\n                watch: watch\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 130,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 129,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              nestedClasses: {\n                root: classes.legend\n              },\n              children: /*#__PURE__*/_jsxDEV(FormLegend, {\n                text: utils.string.t('products.admin.facilities.legends.details')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'name', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 138,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 137,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'brokerCode', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 142,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 141,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(details, 'carrierId', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 146,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 145,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(details, 'productCode', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 150,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 149,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 7,\n              sm: 8,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'capacity', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 153,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 5,\n              sm: 4,\n              md: 2,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'quoteValidDays', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 158,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 157,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(details, 'liveFrom', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 162,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 161,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 3,\n              children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({}, utils.form.getFieldProps(details, 'liveTo', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 166,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 165,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'broker', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 170,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 169,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'coverholderName', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 174,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 173,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'coverholderPin', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 178,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 177,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'umr', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 182,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 181,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 6,\n              md: 4,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(details, 'agreementNumber', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 186,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 185,\n              columnNumber: 19\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(details, 'pricerCode', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 190,\n                columnNumber: 21\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 189,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 59,\n          columnNumber: 13\n        }, this) : null\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 57,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 199,\n          columnNumber: 22\n        }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 198,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 55,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProductsFacilityView, \"g6vBgyjA96cZToKm8/CxOcfWRHY=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = EditProductsFacilityView;\nEditProductsFacilityView.displayName = \"EditProductsFacilityView\";\nEditProductsFacilityView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditProductsFacilityView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"ratesCountries\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isRateField\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isRatesLoaded\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.view.js\"] = {\n    name: \"EditProductsFacilityView\",\n    docgenInfo: EditProductsFacilityView.__docgenInfo,\n    path: \"src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacility.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductsFacilityView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsFacility/EditProductsFacility.view.js"],"names":["React","Fragment","PropTypes","useForm","yupResolver","styles","Button","FormActions","FormAutocompleteMui","FormContainer","FormDate","FormFields","FormGrid","FormLegend","FormSelect","FormText","FormCheckbox","AddRiskRow","useFormActions","utils","COUNTRY_RATES","makeStyles","Box","EditProductsFacilityView","propTypes","fields","object","isRequired","ratesCountries","array","actions","isRateField","bool","isRatesLoaded","details","rates","classes","name","combinedFields","defaultValues","form","getInitialValues","generic","isValidArray","countries","validationSchema","getValidationSchema","resolver","control","register","reset","watch","errors","setValue","formState","handleSubmit","trigger","cancel","submit","root","legend","string","t","getFieldProps","permissionToBindGroups","id","value","permissionToDismissIssuesGroups","notifiedUsers","label","isSubmitting","handler"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './EditProductsFacility.styles';\r\nimport {\r\n  Button,\r\n  FormActions,\r\n  FormAutocompleteMui,\r\n  FormContainer,\r\n  FormDate,\r\n  FormFields,\r\n  FormGrid,\r\n  FormLegend,\r\n  FormSelect,\r\n  FormText,\r\n  FormCheckbox,\r\n} from 'components';\r\nimport { AddRiskRow } from 'modules';\r\nimport { useFormActions } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { COUNTRY_RATES } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nEditProductsFacilityView.propTypes = {\r\n  fields: PropTypes.object.isRequired,\r\n  ratesCountries: PropTypes.array,\r\n  actions: PropTypes.array.isRequired,\r\n  isRateField: PropTypes.bool.isRequired,\r\n  isRatesLoaded: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function EditProductsFacilityView({ fields: { details, rates }, ratesCountries, actions, isRateField, isRatesLoaded }) {\r\n  const classes = makeStyles(styles, { name: 'EditProductsFacility' })();\r\n\r\n  const combinedFields = isRateField ? [...rates] : [...details];\r\n  const defaultValues = {\r\n    ...utils.form.getInitialValues(combinedFields),\r\n    ...(utils.generic.isValidArray(ratesCountries, true) && { countries: ratesCountries }),\r\n  };\r\n  const validationSchema = utils.form.getValidationSchema(combinedFields);\r\n\r\n  const { control, register, reset, watch, errors, setValue, formState, handleSubmit, trigger } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(submit)} autoComplete=\"off\" data-testid=\"form-edit-products-facility\">\r\n        <FormFields type=\"dialog\">\r\n          {utils.generic.isValidArray(combinedFields, true) ? (\r\n            <FormGrid container>\r\n              {isRateField ? (\r\n                <>\r\n                  <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                    <FormLegend text={utils.string.t('products.admin.facilities.legends.rates')} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(rates, 'brokerageFee', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(rates, 'clientCommissionRate', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(rates, 'brokerCommissionRate', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={3}>\r\n                    <FormText {...utils.form.getFieldProps(rates, 'reinsuranceRate', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12}>\r\n                    <Box mt={-2} mb={5}>\r\n                      <AddRiskRow\r\n                        field={utils.form.getFieldProps(rates, 'countries')}\r\n                        formProps={{ control, register, watch, errors, setValue, trigger }}\r\n                        overflow={false}\r\n                        formatData={COUNTRY_RATES}\r\n                      />\r\n                    </Box>\r\n                  </FormGrid>\r\n                </>\r\n              ) : (\r\n                <>\r\n                  <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                    <FormLegend text={utils.string.t('products.admin.facilities.legends.settings')} />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(details, 'permissionToBindGroups')}\r\n                      control={control}\r\n                      error={errors.permissionToBindGroups}\r\n                      handleUpdate={(id, value) => {\r\n                        setValue(id, value);\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(details, 'permissionToDismissIssuesGroups')}\r\n                      control={control}\r\n                      error={errors.permissionToDismissIssuesGroups}\r\n                      handleUpdate={(id, value) => {\r\n                        setValue(id, value);\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(details, 'notifiedUsers')}\r\n                      control={control}\r\n                      error={errors.notifiedUsers}\r\n                      handleUpdate={(id, value) => {\r\n                        setValue(id, value);\r\n                      }}\r\n                    />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormCheckbox {...utils.form.getFieldProps(details, 'preBind')} control={control} register={register} watch={watch} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                    <FormLegend text={utils.string.t('products.admin.facilities.legends.details')} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'name', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={2}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'brokerCode', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={6} md={3}>\r\n                    <FormSelect {...utils.form.getFieldProps(details, 'carrierId', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={6} md={3}>\r\n                    <FormSelect {...utils.form.getFieldProps(details, 'productCode', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={7} sm={8} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'capacity', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={5} sm={4} md={2}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'quoteValidDays', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={3}>\r\n                    <FormDate {...utils.form.getFieldProps(details, 'liveFrom', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={3}>\r\n                    <FormDate {...utils.form.getFieldProps(details, 'liveTo', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'broker', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'coverholderName', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'coverholderPin', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'umr', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={6} md={4}>\r\n                    <FormText {...utils.form.getFieldProps(details, 'agreementNumber', control, errors)} />\r\n                  </FormGrid>\r\n\r\n                  <FormGrid item xs={12} sm={6}>\r\n                    <FormSelect {...utils.form.getFieldProps(details, 'pricerCode', control, errors)} />\r\n                  </FormGrid>\r\n                </>\r\n              )}\r\n            </FormGrid>\r\n          ) : null}\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {cancel && <Button text={cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={cancel.handler} />}\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}