{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { removeLoader, addLoader, enqueueNotification, authLogout, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var postAssignToUser = function postAssignToUser(userDetails) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.postAssignToUser'\n    };\n    dispatch(postAssignToUserRequest(userDetails));\n    dispatch(addLoader('postAssignToUser'));\n\n    if (!userDetails) {\n      dispatch(postAssignToUserFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing parameters'\n      })));\n      dispatch(enqueueNotification('notification.submission.fail', 'error'));\n      dispatch(removeLoader('postAssignToUser'));\n      return;\n    }\n\n    var assignCaseDetails = [];\n    userDetails.rowDetails.forEach(function (element) {\n      assignCaseDetails.push({\n        processInstanceId: element.bpmProcessId,\n        taskId: element.taskId,\n        caseIncidentId: element.caseId\n      });\n    });\n    var roleDetails = {\n      email: '',\n      role: ''\n    };\n    userDetails.userDetails.forEach(function (element) {\n      roleDetails.email = element.emailId;\n      roleDetails.role = element.userRole;\n    });\n    var processAssignDTO = {\n      assignCaseRequest: assignCaseDetails,\n      assignedTo: roleDetails.email,\n      roleId: roleDetails.role,\n      assign: true\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/tasks/assign',\n      data: processAssignDTO\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postAssignToUserSuccess(data === null || data === void 0 ? void 0 : data.data));\n      dispatch(hideModal());\n      return data;\n    })[\"catch\"](function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (premiumProcessing.postAssignToUser)'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      dispatch(postAssignToUserFailure(error, {\n        file: 'stores/premiumProcessing.actions.postAssignToUser'\n      }));\n      dispatch(enqueueNotification('notification.assignToUser.fail', 'error'));\n      return error;\n    })[\"finally\"](function () {\n      dispatch(hideModal());\n      dispatch(removeLoader('postAssignToUser'));\n    });\n  };\n};\nexport var postAssignToUserRequest = function postAssignToUserRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_REQUEST',\n    payload: payload\n  };\n};\nexport var postAssignToUserSuccess = function postAssignToUserSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_SUCCESS',\n    payload: data\n  };\n};\nexport var postAssignToUserFailure = function postAssignToUserFailure(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.postAssignToUser.js"],"names":["removeLoader","addLoader","enqueueNotification","authLogout","hideModal","utils","postAssignToUser","userDetails","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","postAssignToUserRequest","postAssignToUserFailure","message","assignCaseDetails","rowDetails","forEach","element","push","processInstanceId","bpmProcessId","taskId","caseIncidentId","caseId","roleDetails","email","role","emailId","userRole","processAssignDTO","assignCaseRequest","assignedTo","roleId","assign","api","post","token","accessToken","bpmService","path","data","then","response","handleResponse","json","handleNewData","postAssignToUserSuccess","error","handleError","handleUnauthorized","payload","type"],"mappings":"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","sourcesContent":["import { removeLoader, addLoader, enqueueNotification, authLogout, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postAssignToUser = (userDetails) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.postAssignToUser',\r\n  };\r\n  dispatch(postAssignToUserRequest(userDetails));\r\n  dispatch(addLoader('postAssignToUser'));\r\n\r\n  if (!userDetails) {\r\n    dispatch(postAssignToUserFailure({ ...defaultError, message: 'Missing parameters' }));\r\n    dispatch(enqueueNotification('notification.submission.fail', 'error'));\r\n    dispatch(removeLoader('postAssignToUser'));\r\n    return;\r\n  }\r\n\r\n  const assignCaseDetails = [];\r\n  userDetails.rowDetails.forEach((element) => {\r\n    assignCaseDetails.push({\r\n      processInstanceId: element.bpmProcessId,\r\n      taskId: element.taskId,\r\n      caseIncidentId: element.caseId,\r\n    });\r\n  });\r\n  let roleDetails = {\r\n    email: '',\r\n    role: '',\r\n  };\r\n  userDetails.userDetails.forEach((element) => {\r\n    roleDetails.email = element.emailId;\r\n    roleDetails.role = element.userRole;\r\n  });\r\n  const processAssignDTO = {\r\n    assignCaseRequest: assignCaseDetails,\r\n    assignedTo: roleDetails.email,\r\n    roleId: roleDetails.role,\r\n    assign: true,\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/tasks/assign',\r\n      data: processAssignDTO,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postAssignToUserSuccess(data?.data));\r\n      dispatch(hideModal());\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (premiumProcessing.postAssignToUser)' });\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      dispatch(\r\n        postAssignToUserFailure(error, {\r\n          file: 'stores/premiumProcessing.actions.postAssignToUser',\r\n        })\r\n      );\r\n      dispatch(enqueueNotification('notification.assignToUser.fail', 'error'));\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postAssignToUser'));\r\n    });\r\n};\r\n\r\nexport const postAssignToUserRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const postAssignToUserSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postAssignToUserFailure = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_ASSIGNTO_USER_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}