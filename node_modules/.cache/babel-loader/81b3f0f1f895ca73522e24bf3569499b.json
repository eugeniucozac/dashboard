{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, removeLoader } from 'stores';\nexport var getPolicy = function getPolicy(umrIds) {\n  var savePolicy = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : true;\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/policy.actions.get'\n    };\n    dispatch(getPolicyRequest(umrIds, savePolicy));\n    dispatch(addLoader('getPolicy'));\n\n    if (!umrIds) {\n      dispatch(getPolicyFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing policy ID'\n      })));\n      dispatch(removeLoader('getPolicy'));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/policy/xb/\".concat(umrIds)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getPolicySuccess(savePolicy ? data : null));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (policy.get)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getPolicyFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getPolicy'));\n    });\n  };\n};\nexport var getPolicyRequest = function getPolicyRequest(umrIds, savePolicy) {\n  return {\n    type: 'POLICY_GET_REQUEST',\n    payload: {\n      umrIds: umrIds,\n      savePolicy: savePolicy\n    }\n  };\n};\nexport var getPolicySuccess = function getPolicySuccess(responseData) {\n  return {\n    type: 'POLICY_GET_SUCCESS',\n    payload: responseData\n  };\n};\nexport var getPolicyFailure = function getPolicyFailure(error) {\n  return {\n    type: 'POLICY_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/policy/policy.actions.get.js"],"names":["utils","authLogout","addLoader","removeLoader","getPolicy","umrIds","savePolicy","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getPolicyRequest","getPolicyFailure","message","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getPolicySuccess","err","handleError","handleUnauthorized","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\n\r\nexport const getPolicy =\r\n  (umrIds, savePolicy = true) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/policy.actions.get',\r\n    };\r\n\r\n    dispatch(getPolicyRequest(umrIds, savePolicy));\r\n    dispatch(addLoader('getPolicy'));\r\n\r\n    if (!umrIds) {\r\n      dispatch(getPolicyFailure({ ...defaultError, message: 'Missing policy ID' }));\r\n      dispatch(removeLoader('getPolicy'));\r\n      return;\r\n    }\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.edge,\r\n        path: `api/policy/xb/${umrIds}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleData(json))\r\n      .then((data) => {\r\n        dispatch(getPolicySuccess(savePolicy ? data : null));\r\n        return data;\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, { ...defaultError, message: 'API fetch error (policy.get)' });\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(getPolicyFailure(err));\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        dispatch(removeLoader('getPolicy'));\r\n      });\r\n  };\r\n\r\nexport const getPolicyRequest = (umrIds, savePolicy) => {\r\n  return {\r\n    type: 'POLICY_GET_REQUEST',\r\n    payload: { umrIds, savePolicy },\r\n  };\r\n};\r\n\r\nexport const getPolicySuccess = (responseData) => {\r\n  return {\r\n    type: 'POLICY_GET_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const getPolicyFailure = (error) => {\r\n  return {\r\n    type: 'POLICY_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}