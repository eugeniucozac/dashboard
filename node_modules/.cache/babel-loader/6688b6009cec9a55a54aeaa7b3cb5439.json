{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport get from 'lodash/get';\nimport isInteger from 'lodash/isInteger'; // app\n\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nimport config from 'config'; // private\n\nvar userRoleObj = function userRoleObj() {\n  var _ref;\n\n  return _ref = {}, _defineProperty(_ref, constants.ROLE_BROKER, utils.string.t('app.broker')), _defineProperty(_ref, constants.ROLE_COBROKER, utils.string.t('app.cobroker')), _defineProperty(_ref, constants.ROLE_UNDERWRITER, utils.string.t('app.underwriter')), _ref;\n};\n\nvar utilsUser = {\n  initials: function initials(userObj) {\n    if (!userObj) return '';\n    var firstName = userObj.firstName,\n        lastName = userObj.lastName,\n        fullName = userObj.fullName;\n    var first = '';\n    var last = ''; // as a fallback, we take the 1st letter of the email\n\n    first = userObj.emailId ? userObj.emailId.slice(0, 1) : ''; // then, we try to get 1 or both initials from the full name\n\n    if (fullName) {\n      var parts = fullName.split(' ');\n      first = parts[0] ? parts[0].slice(0, 1) : first;\n      last = parts[1] ? parts[1].slice(0, 1) : last; // if we have fullname AND first/last names (only overwrite missing values)\n\n      if (firstName) {\n        first = firstName.slice(0, 1);\n      }\n\n      if (lastName) {\n        last = lastName.slice(0, 1);\n      }\n    } else {\n      // if we have first/last names, we take those values (and overwrite email fallback)\n      if (firstName || lastName) {\n        first = firstName ? firstName.slice(0, 1) : '';\n        last = lastName ? lastName.slice(0, 1) : '';\n      }\n    }\n\n    return (first + last).toUpperCase();\n  },\n  firstname: function firstname(userObj) {\n    if (!userObj) return '';\n    var firstName = userObj.firstName,\n        fullName = userObj.fullName; // if there is a firstName, return that\n\n    if (firstName) {\n      return firstName;\n    } // if there's no firstName, we try to get the 1st part of the fullName\n\n\n    if (fullName) {\n      var parts = fullName.split(' ');\n      return parts[0] || '';\n    }\n\n    return '';\n  },\n  fullname: function fullname(userObj) {\n    if (!userObj) return '';\n    var firstName = userObj.firstName,\n        lastName = userObj.lastName,\n        fullName = userObj.fullName;\n    var first = '';\n    var last = ''; // as a fallback, we take parts from the fullname\n\n    if (fullName) {\n      var parts = fullName.split(' ');\n      first = parts[0] ? parts[0] : first;\n      last = parts[1] ? parts[1] : last;\n    } // then we check if we have first and last name values\n\n\n    if (firstName) first = firstName;\n    if (lastName) last = lastName; // if there's no firstName AND no lastName, we take the whole fullName if present\n\n    if (!firstName && !lastName) {\n      return fullName || '';\n    }\n\n    return [first, last].filter(Boolean).join(' ');\n  },\n  isLoaded: function isLoaded(userObj) {\n    return Boolean(userObj && userObj.id);\n  },\n  isBroker: function isBroker(userObj) {\n    return userObj && Boolean(userObj.role) && userObj.role === constants.ROLE_BROKER;\n  },\n  isSeniorManager: function isSeniorManager(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.SENIOR_MANAGER);\n  },\n  isAdminUser: function isAdminUser(userObj) {\n    return userObj && userObj.name && userObj.name === constants.ADMIN;\n  },\n  isCobroker: function isCobroker(userObj) {\n    return userObj && Boolean(userObj.role && userObj.role === constants.ROLE_COBROKER);\n  },\n  isUnderwriter: function isUnderwriter(userObj) {\n    return userObj && Boolean(userObj.role && userObj.role === constants.ROLE_UNDERWRITER);\n  },\n  isJuniorTechnician: function isJuniorTechnician(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_JUNIOR_TECHNICIAN);\n  },\n  isSeniorTechnician: function isSeniorTechnician(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_SENIOR_TECHNICIAN);\n  },\n  isTechnicianManager: function isTechnicianManager(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_TECHNICIAN_MANAGER);\n  },\n  isTechnicianMphasis: function isTechnicianMphasis(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.TECHNICIAN_MPHASIS);\n  },\n  isTechnicianArdonagh: function isTechnicianArdonagh(userObj) {\n    return userObj && userObj.name && Boolean(userObj.name === constants.TECHNICIAN_ARDONAGH);\n  },\n  isAdmin: function isAdmin(userObj) {\n    return userObj && userObj.isAdmin === true;\n  },\n  isReportAdmin: function isReportAdmin(userObj) {\n    return userObj && userObj.isReportAdmin === true;\n  },\n  isExtended: function isExtended(userObj) {\n    var _userObj$userDetails;\n\n    return Boolean((userObj === null || userObj === void 0 ? void 0 : userObj.privilege) && (userObj === null || userObj === void 0 ? void 0 : userObj.routes) && (userObj === null || userObj === void 0 ? void 0 : (_userObj$userDetails = userObj.userDetails) === null || _userObj$userDetails === void 0 ? void 0 : _userObj$userDetails.id));\n  },\n  isCurrentEdge: function isCurrentEdge(userObj) {\n    return Boolean((userObj === null || userObj === void 0 ? void 0 : userObj.departmentIds) && (userObj === null || userObj === void 0 ? void 0 : userObj.role) && (userObj === null || userObj === void 0 ? void 0 : userObj.id));\n  },\n  getLocalStorageAuth: function getLocalStorageAuth() {\n    var storage = localStorage && localStorage.getItem('edge-auth');\n    return storage ? JSON.parse(storage) : {};\n  },\n  isTokenValid: function isTokenValid() {\n    var _utilsUser$getLocalSt = utilsUser.getLocalStorageAuth(),\n        expiresAt = _utilsUser$getLocalSt.expiresAt;\n\n    var now = new Date();\n    return expiresAt && expiresAt > now.getTime();\n  },\n  hasToken: function hasToken() {\n    var auth = utilsUser.getLocalStorageAuth();\n    return Boolean(auth.accessToken);\n  },\n  getRolesString: function getRolesString() {\n    var roles = userRoleObj();\n    return Object.keys(roles).map(function (key) {\n      return {\n        value: key,\n        label: roles[key]\n      };\n    });\n  },\n  getRoleString: function getRoleString(role) {\n    return userRoleObj()[role] || role;\n  },\n  getLandingPage: function getLandingPage(userObj) {\n    var _config$routes$userOb;\n\n    var routeHome = config.routes.home.root; // abort\n\n    if (!userObj || !userObj.landingPage) return routeHome;\n    var route = ((_config$routes$userOb = config.routes[userObj.landingPage]) === null || _config$routes$userOb === void 0 ? void 0 : _config$routes$userOb.root) || routeHome;\n    var final = utilsUser.isExtended(userObj) ? route : routeHome;\n    return final;\n  },\n  getRoutes: function getRoutes(userObj) {\n    return (userObj === null || userObj === void 0 ? void 0 : userObj.routes) || [];\n  },\n  getPrivilege: function getPrivilege(userObj) {\n    return (userObj === null || userObj === void 0 ? void 0 : userObj.privilege) || {};\n  },\n  department: {\n    getAll: function getAll(userObj) {\n      if (!userObj) return []; // load Extended user departments if it is EXTENDED user\n\n      if (utilsUser.isExtended(userObj) && !utilsUser.isCurrentEdge(userObj)) {\n        if (utils.generic.isInvalidOrEmptyArray(userObj.xbInstance)) return [];\n        return userObj.xbInstance.reduce(function (acc, cur) {\n          return [].concat(_toConsumableArray(acc), _toConsumableArray(cur.department || []));\n        }, []);\n      }\n\n      if (utilsUser.isCurrentEdge(userObj) && !utilsUser.isExtended(userObj) || // load Current user departments if it is CURRENT user\n      utilsUser.isCurrentEdge(userObj) && utilsUser.isExtended(userObj) // load Current user departments if it is both CURRENT & EXTENDED user\n      ) {\n          if (utils.generic.isInvalidOrEmptyArray(userObj.departmentIds)) return [];\n          return get(userObj, 'departmentIds', []);\n        }\n    },\n    getDefault: function getDefault(userObj) {\n      if (utilsUser.isExtended(userObj) && !utilsUser.isCurrentEdge(userObj)) {\n        var defaultDepartment = userObj && get(userObj, 'departmentIds[0]', '').toString();\n        var savedDepartment = (localStorage.getItem('edge-department') || '').toString();\n        var deptId = savedDepartment || defaultDepartment;\n        return deptId || null;\n      }\n\n      if (!utilsUser.isExtended(userObj) && utilsUser.isCurrentEdge(userObj) || utilsUser.isExtended(userObj) && utilsUser.isCurrentEdge(userObj)) {\n        var currentEdgeDefaultDepartment = userObj && parseInt(get(userObj, 'departmentIds[0]'));\n        var currentEdgeSavedDepartment = parseInt(localStorage.getItem('edge-department'));\n        var currentEdgeDeptId = currentEdgeSavedDepartment || currentEdgeDefaultDepartment;\n        return isInteger(currentEdgeDeptId) ? currentEdgeDeptId : null;\n      }\n    },\n    getCurrent: function getCurrent(userObj) {\n      if (!userObj || !get(userObj, 'departmentSelected')) return;\n      return get(userObj, 'departmentSelected');\n    }\n  }\n};\nexport default utilsUser;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/user/user.js"],"names":["get","isInteger","utils","constants","config","userRoleObj","ROLE_BROKER","string","t","ROLE_COBROKER","ROLE_UNDERWRITER","utilsUser","initials","userObj","firstName","lastName","fullName","first","last","emailId","slice","parts","split","toUpperCase","firstname","fullname","filter","Boolean","join","isLoaded","id","isBroker","role","isSeniorManager","name","SENIOR_MANAGER","isAdminUser","ADMIN","isCobroker","isUnderwriter","isJuniorTechnician","ROLE_JUNIOR_TECHNICIAN","isSeniorTechnician","ROLE_SENIOR_TECHNICIAN","isTechnicianManager","ROLE_TECHNICIAN_MANAGER","isTechnicianMphasis","TECHNICIAN_MPHASIS","isTechnicianArdonagh","TECHNICIAN_ARDONAGH","isAdmin","isReportAdmin","isExtended","privilege","routes","userDetails","isCurrentEdge","departmentIds","getLocalStorageAuth","storage","localStorage","getItem","JSON","parse","isTokenValid","expiresAt","now","Date","getTime","hasToken","auth","accessToken","getRolesString","roles","Object","keys","map","key","value","label","getRoleString","getLandingPage","routeHome","home","root","landingPage","route","final","getRoutes","getPrivilege","department","getAll","generic","isInvalidOrEmptyArray","xbInstance","reduce","acc","cur","getDefault","defaultDepartment","toString","savedDepartment","deptId","currentEdgeDefaultDepartment","parseInt","currentEdgeSavedDepartment","currentEdgeDeptId","getCurrent"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport isInteger from 'lodash/isInteger';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\nimport config from 'config';\r\n\r\n// private\r\nconst userRoleObj = () => {\r\n  return {\r\n    [constants.ROLE_BROKER]: utils.string.t('app.broker'),\r\n    [constants.ROLE_COBROKER]: utils.string.t('app.cobroker'),\r\n    [constants.ROLE_UNDERWRITER]: utils.string.t('app.underwriter'),\r\n  };\r\n};\r\n\r\nconst utilsUser = {\r\n  initials: (userObj) => {\r\n    if (!userObj) return '';\r\n\r\n    const { firstName, lastName, fullName } = userObj;\r\n    let first = '';\r\n    let last = '';\r\n\r\n    // as a fallback, we take the 1st letter of the email\r\n    first = userObj.emailId ? userObj.emailId.slice(0, 1) : '';\r\n\r\n    // then, we try to get 1 or both initials from the full name\r\n    if (fullName) {\r\n      const parts = fullName.split(' ');\r\n\r\n      first = parts[0] ? parts[0].slice(0, 1) : first;\r\n      last = parts[1] ? parts[1].slice(0, 1) : last;\r\n\r\n      // if we have fullname AND first/last names (only overwrite missing values)\r\n      if (firstName) {\r\n        first = firstName.slice(0, 1);\r\n      }\r\n\r\n      if (lastName) {\r\n        last = lastName.slice(0, 1);\r\n      }\r\n    } else {\r\n      // if we have first/last names, we take those values (and overwrite email fallback)\r\n      if (firstName || lastName) {\r\n        first = firstName ? firstName.slice(0, 1) : '';\r\n        last = lastName ? lastName.slice(0, 1) : '';\r\n      }\r\n    }\r\n\r\n    return (first + last).toUpperCase();\r\n  },\r\n\r\n  firstname: (userObj) => {\r\n    if (!userObj) return '';\r\n\r\n    const { firstName, fullName } = userObj;\r\n\r\n    // if there is a firstName, return that\r\n    if (firstName) {\r\n      return firstName;\r\n    }\r\n\r\n    // if there's no firstName, we try to get the 1st part of the fullName\r\n    if (fullName) {\r\n      const parts = fullName.split(' ');\r\n\r\n      return parts[0] || '';\r\n    }\r\n\r\n    return '';\r\n  },\r\n\r\n  fullname: (userObj) => {\r\n    if (!userObj) return '';\r\n\r\n    const { firstName, lastName, fullName } = userObj;\r\n    let first = '';\r\n    let last = '';\r\n\r\n    // as a fallback, we take parts from the fullname\r\n    if (fullName) {\r\n      const parts = fullName.split(' ');\r\n\r\n      first = parts[0] ? parts[0] : first;\r\n      last = parts[1] ? parts[1] : last;\r\n    }\r\n\r\n    // then we check if we have first and last name values\r\n    if (firstName) first = firstName;\r\n    if (lastName) last = lastName;\r\n\r\n    // if there's no firstName AND no lastName, we take the whole fullName if present\r\n    if (!firstName && !lastName) {\r\n      return fullName || '';\r\n    }\r\n\r\n    return [first, last].filter(Boolean).join(' ');\r\n  },\r\n\r\n  isLoaded: (userObj) => {\r\n    return Boolean(userObj && userObj.id);\r\n  },\r\n\r\n  isBroker: (userObj) => {\r\n    return userObj && Boolean(userObj.role) && userObj.role === constants.ROLE_BROKER;\r\n  },\r\n\r\n  isSeniorManager: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.SENIOR_MANAGER);\r\n  },\r\n\r\n  isAdminUser: (userObj) => {\r\n    return userObj && userObj.name && userObj.name === constants.ADMIN;\r\n  },\r\n\r\n  isCobroker: (userObj) => {\r\n    return userObj && Boolean(userObj.role && userObj.role === constants.ROLE_COBROKER);\r\n  },\r\n\r\n  isUnderwriter: (userObj) => {\r\n    return userObj && Boolean(userObj.role && userObj.role === constants.ROLE_UNDERWRITER);\r\n  },\r\n\r\n  isJuniorTechnician: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_JUNIOR_TECHNICIAN);\r\n  },\r\n\r\n  isSeniorTechnician: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_SENIOR_TECHNICIAN);\r\n  },\r\n\r\n  isTechnicianManager: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.ROLE_TECHNICIAN_MANAGER);\r\n  },\r\n\r\n  isTechnicianMphasis: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.TECHNICIAN_MPHASIS);\r\n  },\r\n\r\n  isTechnicianArdonagh: (userObj) => {\r\n    return userObj && userObj.name && Boolean(userObj.name === constants.TECHNICIAN_ARDONAGH);\r\n  },\r\n\r\n  isAdmin: (userObj) => {\r\n    return userObj && userObj.isAdmin === true;\r\n  },\r\n\r\n  isReportAdmin: (userObj) => {\r\n    return userObj && userObj.isReportAdmin === true;\r\n  },\r\n\r\n  isExtended: (userObj) => {\r\n    return Boolean(userObj?.privilege && userObj?.routes && userObj?.userDetails?.id);\r\n  },\r\n\r\n  isCurrentEdge: (userObj) => {\r\n    return Boolean(userObj?.departmentIds && userObj?.role && userObj?.id);\r\n  },\r\n\r\n  getLocalStorageAuth: () => {\r\n    const storage = localStorage && localStorage.getItem('edge-auth');\r\n    return storage ? JSON.parse(storage) : {};\r\n  },\r\n\r\n  isTokenValid: () => {\r\n    const { expiresAt } = utilsUser.getLocalStorageAuth();\r\n    const now = new Date();\r\n\r\n    return expiresAt && expiresAt > now.getTime();\r\n  },\r\n\r\n  hasToken: () => {\r\n    const auth = utilsUser.getLocalStorageAuth();\r\n\r\n    return Boolean(auth.accessToken);\r\n  },\r\n\r\n  getRolesString: () => {\r\n    const roles = userRoleObj();\r\n    return Object.keys(roles).map((key) => ({\r\n      value: key,\r\n      label: roles[key],\r\n    }));\r\n  },\r\n\r\n  getRoleString: (role) => {\r\n    return userRoleObj()[role] || role;\r\n  },\r\n\r\n  getLandingPage: (userObj) => {\r\n    const routeHome = config.routes.home.root;\r\n\r\n    // abort\r\n    if (!userObj || !userObj.landingPage) return routeHome;\r\n\r\n    const route = config.routes[userObj.landingPage]?.root || routeHome;\r\n    const final = utilsUser.isExtended(userObj) ? route : routeHome;\r\n\r\n    return final;\r\n  },\r\n\r\n  getRoutes: (userObj) => {\r\n    return userObj?.routes || [];\r\n  },\r\n\r\n  getPrivilege: (userObj) => {\r\n    return userObj?.privilege || {};\r\n  },\r\n\r\n  department: {\r\n    getAll: (userObj) => {\r\n      if (!userObj) return [];\r\n\r\n      // load Extended user departments if it is EXTENDED user\r\n      if (utilsUser.isExtended(userObj) && !utilsUser.isCurrentEdge(userObj)) {\r\n        if (utils.generic.isInvalidOrEmptyArray(userObj.xbInstance)) return [];\r\n        return userObj.xbInstance.reduce((acc, cur) => {\r\n          return [...acc, ...(cur.department || [])];\r\n        }, []);\r\n      }\r\n\r\n      if (\r\n        (utilsUser.isCurrentEdge(userObj) && !utilsUser.isExtended(userObj)) || // load Current user departments if it is CURRENT user\r\n        (utilsUser.isCurrentEdge(userObj) && utilsUser.isExtended(userObj)) // load Current user departments if it is both CURRENT & EXTENDED user\r\n      ) {\r\n        if (utils.generic.isInvalidOrEmptyArray(userObj.departmentIds)) return [];\r\n        return get(userObj, 'departmentIds', []);\r\n      }\r\n    },\r\n\r\n    getDefault: (userObj) => {\r\n      if (utilsUser.isExtended(userObj) && !utilsUser.isCurrentEdge(userObj)) {\r\n        const defaultDepartment = userObj && get(userObj, 'departmentIds[0]', '').toString();\r\n        const savedDepartment = (localStorage.getItem('edge-department') || '').toString();\r\n        const deptId = savedDepartment || defaultDepartment;\r\n\r\n        return deptId || null;\r\n      }\r\n      if (\r\n        (!utilsUser.isExtended(userObj) && utilsUser.isCurrentEdge(userObj)) ||\r\n        (utilsUser.isExtended(userObj) && utilsUser.isCurrentEdge(userObj))\r\n      ) {\r\n        const currentEdgeDefaultDepartment = userObj && parseInt(get(userObj, 'departmentIds[0]'));\r\n        const currentEdgeSavedDepartment = parseInt(localStorage.getItem('edge-department'));\r\n        const currentEdgeDeptId = currentEdgeSavedDepartment || currentEdgeDefaultDepartment;\r\n\r\n        return isInteger(currentEdgeDeptId) ? currentEdgeDeptId : null;\r\n      }\r\n    },\r\n\r\n    getCurrent: (userObj) => {\r\n      if (!userObj || !get(userObj, 'departmentSelected')) return;\r\n\r\n      return get(userObj, 'departmentSelected');\r\n    },\r\n  },\r\n};\r\n\r\nexport default utilsUser;\r\n"]},"metadata":{},"sourceType":"module"}