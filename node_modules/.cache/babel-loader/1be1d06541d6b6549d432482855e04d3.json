{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsEndorseFaBorder\\\\ProcessingInstructionsEndorseFaBorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport moment from 'moment';\nimport uniqBy from 'lodash/uniqBy';\nimport get from 'lodash/get'; // app\n\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\nimport { showModal, getUsersForRole, selectUser, selectUserDetails, selectUsersInRoles, getBordereauPolicyTypes, updateProcessingInstruction, submitProcessingInstruction, getProcessingInstruction, enqueueNotification, selectPiAccountExecutives, selectWorkFlowFrontEndContactNamesForRiskReference, selectAccountExecutivesForRiskReference } from 'stores';\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsEndorseFaBorder.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsEndorseFaBorder(_ref) {\n  _s();\n\n  var _instruction$riskRefe,\n      _instruction$details8,\n      _instruction$details9,\n      _instruction$details10,\n      _instruction$details11,\n      _instruction$details12,\n      _instruction$details13,\n      _this = this;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      childRef = _ref.childRef;\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id,\n      step = _useParams.step,\n      tab = _useParams.tab;\n\n  var user = useSelector(selectUser);\n  var users = useSelector(selectUsersInRoles);\n  var currentUser = useSelector(selectUserDetails);\n  var bordereauPolicyTypes = useSelector(function (state) {\n    return get(state, 'processingInstructions.bordereauPolicyTypes');\n  });\n  var accountExecutivesFromRoles = useSelector(selectPiAccountExecutives);\n  var piAccountExecutives = useSelector(selectAccountExecutivesForRiskReference);\n  var piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);\n  var piWorkFlowFrontEndContactNames = piFrontEndContactNames.map(function (type) {\n    return {\n      id: type.id,\n      name: type.value\n    };\n  });\n  var accountExecutiveValues = utils.generic.isValidArray(piAccountExecutives, true) ? piAccountExecutives : accountExecutivesFromRoles;\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var businessProcesses = useSelector(function (state) {\n    return get(state, 'referenceData.businessProcesses');\n  });\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\n  var isReadOnly = !isEditable;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultValues = _useState2[0],\n      setDefaultValues = _useState2[1];\n\n  var riskReferences = instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences;\n  var leadRef = instruction === null || instruction === void 0 ? void 0 : (_instruction$riskRefe = instruction.riskReferences) === null || _instruction$riskRefe === void 0 ? void 0 : _instruction$riskRefe.find(function (r) {\n    return r.leadPolicy;\n  });\n  var leadFrontEndContactNameValue = leadRef === null || leadRef === void 0 ? void 0 : leadRef.workFlowFrontEndContactName;\n  var leadRefAccountExecutiveName = leadRef === null || leadRef === void 0 ? void 0 : leadRef.accountExecutive;\n  var bordereauTypes = [{\n    id: 1,\n    name: 'premium',\n    value: 'premium',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium')\n  }, {\n    id: 2,\n    name: 'claims',\n    value: 'claims',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims')\n  }, {\n    id: 3,\n    name: 'combined',\n    value: 'combined',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined')\n  }];\n  var feeAndAmendmentTypes = [{\n    name: 'fee',\n    value: 'fee',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee')\n  }, {\n    name: 'amendment',\n    value: 'amendment',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment')\n  }];\n  var tabs = [{\n    value: 'processing-instruction',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi')\n  }, {\n    value: 'documents',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc')\n  }];\n  var isValidTab = tabs.map(function (item) {\n    return item.value;\n  }).includes(tab);\n\n  var _useState3 = useState(isValidTab ? tab : 'processing-instruction'),\n      _useState4 = _slicedToArray(_useState3, 2),\n      selectedTab = _useState4[0],\n      setSelectedTab = _useState4[1];\n\n  useEffect(function () {\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\n    dispatch(getBordereauPolicyTypes());\n  }, [dispatch]);\n  useEffect(function () {\n    var _childRef$current, _childRef$current$pro;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current = childRef.current) === null || _childRef$current === void 0 ? void 0 : (_childRef$current$pro = _childRef$current.props) === null || _childRef$current$pro === void 0 ? void 0 : _childRef$current$pro.resetFunc;\n\n    var updatedDefaultValues = _objectSpread({}, utils.form.getInitialValues(fields));\n\n    setDefaultValues(updatedDefaultValues);\n\n    if (utils.generic.isFunction(reset)) {\n      reset(updatedDefaultValues, {\n        keepDirty: false\n      });\n    }\n  }, [instruction] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var filterUsersByRole = function filterUsersByRole(roleNames) {\n    return riskReferences === null || riskReferences === void 0 ? void 0 : riskReferences.reduce(function (acc, cur) {\n      var groupDepartXbInstanceIds = \"\".concat(cur.departmentId, \"-\").concat(cur.xbInstanceId);\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(users.filter(function (u) {\n        return roleNames.includes(u.userRole);\n      }).filter(function (u) {\n        var _u$departmentId;\n\n        return (_u$departmentId = u.departmentId) === null || _u$departmentId === void 0 ? void 0 : _u$departmentId.split(',').map(function (x) {\n          return x.trim();\n        }).includes(groupDepartXbInstanceIds);\n      }).map(function (u) {\n        return {\n          id: u.userId,\n          name: u.fullName + ' - ' + u.emailId\n        };\n      })));\n    }, []);\n  };\n\n  var frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id');\n  var frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true) ? piWorkFlowFrontEndContactNames : frontEndContactsForRoles;\n\n  var getFrontEndContactId = function getFrontEndContactId() {\n    var _instruction$details, _instruction$details2;\n\n    var frontEndContactId = (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.frontEndContactId;\n    var workFlowFrontEndContactName = (_instruction$details2 = instruction.details) === null || _instruction$details2 === void 0 ? void 0 : _instruction$details2.workFlowFrontEndContactName;\n    var user;\n\n    if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\n      if (workFlowFrontEndContactName) {\n        var _user;\n\n        user = piWorkFlowFrontEndContactNames.find(function (fec) {\n          return fec.id === frontEndContactId;\n        });\n        frontEndContactId = (_user = user) === null || _user === void 0 ? void 0 : _user.id;\n      } else if (leadFrontEndContactNameValue) {\n        var frontEndContactValue = piWorkFlowFrontEndContactNames === null || piWorkFlowFrontEndContactNames === void 0 ? void 0 : piWorkFlowFrontEndContactNames.find(function (type) {\n          var _type$name;\n\n          return (type === null || type === void 0 ? void 0 : (_type$name = type.name) === null || _type$name === void 0 ? void 0 : _type$name.toLowerCase()) === (leadFrontEndContactNameValue === null || leadFrontEndContactNameValue === void 0 ? void 0 : leadFrontEndContactNameValue.toLowerCase());\n        });\n        frontEndContactId = frontEndContactValue === null || frontEndContactValue === void 0 ? void 0 : frontEndContactValue.id;\n      }\n    } else if (!frontEndContactId && utils.generic.isValidArray(frontEndContacts, true)) {\n      var _user2;\n\n      user = frontEndContacts.find(function (fec) {\n        return fec.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n      });\n      frontEndContactId = (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.id;\n    }\n\n    return frontEndContactId || '';\n  };\n\n  var getSelectedFrontEndContactName = function getSelectedFrontEndContactName(frontEndContactd) {\n    var _piWorkFlowFrontEndCo;\n\n    var selectedFrontEndContactName = piWorkFlowFrontEndContactNames === null || piWorkFlowFrontEndContactNames === void 0 ? void 0 : (_piWorkFlowFrontEndCo = piWorkFlowFrontEndContactNames.find(function (frontEndContact) {\n      return (frontEndContact === null || frontEndContact === void 0 ? void 0 : frontEndContact.id) === frontEndContactd;\n    })) === null || _piWorkFlowFrontEndCo === void 0 ? void 0 : _piWorkFlowFrontEndCo.name;\n    return selectedFrontEndContactName;\n  };\n\n  var getAccountExecutiveId = function getAccountExecutiveId() {\n    var _instruction$details3;\n\n    var accountExecutiveId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details3 = instruction.details) === null || _instruction$details3 === void 0 ? void 0 : _instruction$details3.accountExecutiveId;\n    var user;\n\n    if (utils.generic.isValidArray(piAccountExecutives, true) && leadRefAccountExecutiveName) {\n      if (accountExecutiveId) {\n        var _user3;\n\n        user = piAccountExecutives.find(function (type) {\n          return type.id === accountExecutiveId;\n        });\n        accountExecutiveId = (_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.id;\n      } else if (leadRefAccountExecutiveName) {\n        var leadAccountExecutive = piAccountExecutives === null || piAccountExecutives === void 0 ? void 0 : piAccountExecutives.find(function (type) {\n          return type.value.toLowerCase() === (leadRefAccountExecutiveName === null || leadRefAccountExecutiveName === void 0 ? void 0 : leadRefAccountExecutiveName.toLowerCase());\n        });\n        accountExecutiveId = leadAccountExecutive === null || leadAccountExecutive === void 0 ? void 0 : leadAccountExecutive.id;\n      }\n    } else if (!accountExecutiveId && utils.generic.isValidArray(accountExecutiveValues, true)) {\n      var _user4;\n\n      user = accountExecutiveValues.find(function (ae) {\n        var _instruction$details4;\n\n        return ae.userId === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details4 = instruction.details) === null || _instruction$details4 === void 0 ? void 0 : _instruction$details4.accountExecutiveId);\n      });\n      accountExecutiveId = (_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.id;\n    }\n\n    return accountExecutiveId || '';\n  };\n\n  var getSelectedAccountExecutiveName = function getSelectedAccountExecutiveName(accountExecutiveId) {\n    var _piAccountExecutives$;\n\n    var selectedAccountExecutiveName = piAccountExecutives === null || piAccountExecutives === void 0 ? void 0 : (_piAccountExecutives$ = piAccountExecutives.find(function (accountExec) {\n      return (accountExec === null || accountExec === void 0 ? void 0 : accountExec.id) === accountExecutiveId;\n    })) === null || _piAccountExecutives$ === void 0 ? void 0 : _piAccountExecutives$.value;\n    return selectedAccountExecutiveName;\n  };\n\n  var getBordereauPolicyTypeId = function getBordereauPolicyTypeId() {\n    var _instruction$details5;\n\n    var bordereauPolicyTypeId = (_instruction$details5 = instruction.details) === null || _instruction$details5 === void 0 ? void 0 : _instruction$details5.bordereauPolicyTypeId;\n\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\n      var item = bordereauPolicyTypes.find(function (type) {\n        var _instruction$details6;\n\n        return type.bordereauPolicyTypeID === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details6 = instruction.details) === null || _instruction$details6 === void 0 ? void 0 : _instruction$details6.bordereauPolicyTypeId);\n      });\n      bordereauPolicyTypeId = item === null || item === void 0 ? void 0 : item.bordereauPolicyTypeID;\n    }\n\n    return bordereauPolicyTypeId || '';\n  };\n\n  var getBordereauTypeValue = function getBordereauTypeValue() {\n    var _instruction$details7;\n\n    var defaultId = 1;\n    var defaultType = 'premium';\n    var bordereauTypeId = (instruction === null || instruction === void 0 ? void 0 : (_instruction$details7 = instruction.details) === null || _instruction$details7 === void 0 ? void 0 : _instruction$details7.bordereauTypeId) || defaultId;\n    var obj = bordereauTypes.find(function (type) {\n      return type.id === bordereauTypeId;\n    });\n    return (obj === null || obj === void 0 ? void 0 : obj.value) || defaultType;\n  };\n\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var fields = [{\n    name: 'frontEndContactId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\n    value: getFrontEndContactId(),\n    options: frontEndContacts,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'accountExecutiveId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.accountExecutive'),\n    value: getAccountExecutiveId(),\n    options: accountExecutiveValues,\n    optionKey: 'id',\n    optionLabel: 'value',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'frontEndSendDocs',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details8 = instruction.details) === null || _instruction$details8 === void 0 ? void 0 : _instruction$details8.frontEndSendDocs) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'highPriority',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details9 = instruction.details) === null || _instruction$details9 === void 0 ? void 0 : _instruction$details9.highPriority) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details10 = instruction.details) === null || _instruction$details10 === void 0 ? void 0 : _instruction$details10.notes) || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 5,\n      maxRows: 10,\n      disabled: isReadOnly\n    }\n  }].concat(_toConsumableArray(isEndorsement ? [{\n    name: 'ppwOrPpc',\n    type: 'checkbox',\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details11 = instruction.details) === null || _instruction$details11 === void 0 ? void 0 : _instruction$details11.ppwOrPpc) || false,\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isEndorsement || isFeeAndAmendment ? [{\n    name: 'isNonPremium',\n    type: 'checkbox',\n    value: (leadRef === null || leadRef === void 0 ? void 0 : leadRef.isNonPremium) === 'Yes',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\n    disabled: true\n  }] : []), _toConsumableArray(isFeeAndAmendment ? [{\n    name: 'feeOrAmendment',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details12 = instruction.details) === null || _instruction$details12 === void 0 ? void 0 : _instruction$details12.feeOrAmendment) || 'fee',\n    options: feeAndAmendmentTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isBordereau ? [{\n    name: 'bordereauPolicyTypeId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\n    value: getBordereauPolicyTypeId(),\n    options: bordereauPolicyTypes,\n    optionKey: 'bordereauPolicyTypeID',\n    optionLabel: 'bordereauPolicyTypeDetails',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    type: 'datepicker',\n    name: 'bordereauPeriod',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details13 = instruction.details) === null || _instruction$details13 === void 0 ? void 0 : _instruction$details13.bordereauPeriod) || null,\n    outputFormat: 'iso',\n    placeholder: 'MM YYYY',\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'),\n      disabled: isReadOnly\n    },\n    muiPickerProps: {\n      views: ['year', 'month'],\n      format: 'MM YYYY',\n      clearable: true\n    }\n  }, {\n    name: 'bordereauTypeId',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\n    value: getBordereauTypeValue(),\n    options: bordereauTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []));\n\n  var getUpdatedInstruction = function getUpdatedInstruction(instruction, formValues) {\n    var _bordereauTypes$find;\n\n    return _objectSpread(_objectSpread({}, instruction), {}, {\n      details: _objectSpread(_objectSpread({}, formValues), {}, {\n        instructionId: instruction === null || instruction === void 0 ? void 0 : instruction.id,\n        accountExecutive: getSelectedAccountExecutiveName(formValues.accountExecutiveId),\n        workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId)\n      }, isBordereau && {\n        bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\n        bordereauTypeId: ((_bordereauTypes$find = bordereauTypes.find(function (type) {\n          return type.value === formValues.bordereauTypeId;\n        })) === null || _bordereauTypes$find === void 0 ? void 0 : _bordereauTypes$find.id) || null\n      })\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    var _childRef$current2, _childRef$current2$pr;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current2 = childRef.current) === null || _childRef$current2 === void 0 ? void 0 : (_childRef$current2$pr = _childRef$current2.props) === null || _childRef$current2$pr === void 0 ? void 0 : _childRef$current2$pr.resetFunc;\n\n    if (utils.generic.isFunction(reset)) {\n      reset(defaultValues, {\n        keepDirty: false\n      });\n    }\n  };\n\n  var handleSubmitBordereau = function handleSubmitBordereau() {\n    var _childRef$current3, _childRef$current3$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current3 = childRef.current) === null || _childRef$current3 === void 0 ? void 0 : (_childRef$current3$pr = _childRef$current3.props) === null || _childRef$current3$pr === void 0 ? void 0 : _childRef$current3$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n    var bordereauTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauTypeId);\n    var bordereauPeriod = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPeriod);\n    var bordereauPolicyTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPolicyTypeId);\n\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\n      proceedToSubmission();\n    } else if (!isFrontEndIdSelected) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n    } else if (!bordereauTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\n    } else if (!bordereauPeriod) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\n    } else if (!bordereauPolicyTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\n    }\n  };\n\n  var handleSubmitEndorseFa = function handleSubmitEndorseFa() {\n    var _childRef$current4, _childRef$current4$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current4 = childRef.current) === null || _childRef$current4 === void 0 ? void 0 : (_childRef$current4$pr = _childRef$current4.props) === null || _childRef$current4$pr === void 0 ? void 0 : _childRef$current4$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n\n    if (isFrontEndIdSelected) {\n      proceedToSubmission();\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSave = function handleSave() {\n    var _childRef$current5, _childRef$current5$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current5 = childRef.current) === null || _childRef$current5 === void 0 ? void 0 : (_childRef$current5$pr = _childRef$current5.props) === null || _childRef$current5$pr === void 0 ? void 0 : _childRef$current5$pr.values) || {};\n    var isFrontEndIdSelected = (formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId) !== null;\n\n    if (isFrontEndIdSelected) {\n      var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n      dispatch(updateProcessingInstruction(updatedInstruction));\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response, documentUploaded;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getProcessingInstruction(id));\n\n            case 2:\n              response = _context.sent;\n\n              if (response) {\n                documentUploaded = true; //Removed validation for checking documents in each riskRef untill we got new dms api\n\n                if (isEndorsement && !documentUploaded) {\n                  mandatoryDocumentsNotUploaded();\n                } else {\n                  if (isBordereau) {\n                    handleSubmitBordereau();\n                  } else {\n                    handleSubmitEndorseFa();\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mandatoryDocumentsNotUploaded = function mandatoryDocumentsNotUploaded() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: \"\".concat(utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded'))\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 487,\n            columnNumber: 15\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var proceedToSubmission = function proceedToSubmission() {\n    var _childRef$current6, _childRef$current6$pr, _businessProcesses$fi;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current6 = childRef.current) === null || _childRef$current6 === void 0 ? void 0 : (_childRef$current6$pr = _childRef$current6.props) === null || _childRef$current6$pr === void 0 ? void 0 : _childRef$current6$pr.values) || {};\n    var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n    var businessProcess = businessProcesses === null || businessProcesses === void 0 ? void 0 : (_businessProcesses$fi = businessProcesses.find(function (bp) {\n      return bp.businessProcessID === updatedInstruction.businessProcessId;\n    })) === null || _businessProcesses$fi === void 0 ? void 0 : _businessProcesses$fi.businessProcessName;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: 'processingInstructions.authorisations.form.title',\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\n          cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\n          note: utils.string.t('processingInstructions.authorisations.form.note'),\n          submitHandler: function submitHandler() {\n            dispatch(submitProcessingInstruction(_objectSpread(_objectSpread({}, updatedInstruction), {}, {\n              businessProcess: businessProcess,\n              statusId: PI_STATUS_SUBMITTED_PROCESSING\n            }))).then(function (res) {\n              // check that the response was successful\n              history.push('/processing-instructions');\n              dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var toggleTab = function toggleTab(tab) {\n    setSelectedTab(tab);\n    history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id).concat(step ? \"/\".concat(step) : '').concat(tab ? \"/\".concat(tab) : ''));\n  }; // abort\n\n\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsEndorseFaBorderView, {\n    instruction: instruction,\n    leadRef: leadRef,\n    tabs: tabs,\n    selectedTab: selectedTab,\n    fields: fields,\n    defaultValues: defaultValues,\n    isEndorsement: isEndorsement,\n    isBordereau: isBordereau,\n    isFeeAndAmendment: isFeeAndAmendment,\n    isReadOnly: isReadOnly,\n    isSubmittedProcessing: isSubmittedProcessing,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      cancel: handleCancel,\n      save: handleSave,\n      submit: handleSubmit,\n      toggleTab: toggleTab\n    }),\n    ref: childRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 551,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsEndorseFaBorder, \"KDhIA6vyq5T27d43RetfSzbf88I=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsEndorseFaBorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsEndorseFaBorder\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsEndorseFaBorder/ProcessingInstructionsEndorseFaBorder.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","useHistory","useParams","moment","uniqBy","get","ProcessingInstructionsEndorseFaBorderView","showModal","getUsersForRole","selectUser","selectUserDetails","selectUsersInRoles","getBordereauPolicyTypes","updateProcessingInstruction","submitProcessingInstruction","getProcessingInstruction","enqueueNotification","selectPiAccountExecutives","selectWorkFlowFrontEndContactNamesForRiskReference","selectAccountExecutivesForRiskReference","PI_STATUS_SUBMITTED_PROCESSING","FRONT_END_CONTACT","OPERATIONS_LEAD","AUTHORISED_SIGNATORY","utils","config","ProcessingInstructionsEndorseFaBorder","propTypes","instruction","object","isRequired","handlers","shape","back","func","childRef","dispatch","history","id","step","tab","user","users","currentUser","bordereauPolicyTypes","state","accountExecutivesFromRoles","piAccountExecutives","piFrontEndContactNames","piWorkFlowFrontEndContactNames","map","type","name","value","accountExecutiveValues","generic","isValidArray","isDraft","processingInstructions","status","statusId","isRejectedDraft","isSubmittedProcessing","isReopened","businessProcesses","userHasWritePermission","app","access","feature","isEditable","isReadOnly","defaultValues","setDefaultValues","riskReferences","leadRef","find","r","leadPolicy","leadFrontEndContactNameValue","workFlowFrontEndContactName","leadRefAccountExecutiveName","accountExecutive","bordereauTypes","label","string","t","feeAndAmendmentTypes","tabs","isValidTab","item","includes","selectedTab","setSelectedTab","reset","current","props","resetFunc","updatedDefaultValues","form","getInitialValues","fields","isFunction","keepDirty","filterUsersByRole","roleNames","reduce","acc","cur","groupDepartXbInstanceIds","departmentId","xbInstanceId","filter","u","userRole","split","x","trim","userId","fullName","emailId","frontEndContactsForRoles","frontEndContacts","getFrontEndContactId","frontEndContactId","details","fec","frontEndContactValue","toLowerCase","getSelectedFrontEndContactName","frontEndContactd","selectedFrontEndContactName","frontEndContact","getAccountExecutiveId","accountExecutiveId","leadAccountExecutive","ae","getSelectedAccountExecutiveName","selectedAccountExecutiveName","accountExec","getBordereauPolicyTypeId","bordereauPolicyTypeId","bordereauPolicyTypeID","getBordereauTypeValue","defaultId","defaultType","bordereauTypeId","obj","isEndorsement","processTypeId","isBordereau","isFeeAndAmendment","options","optionKey","optionLabel","muiComponentProps","disabled","frontEndSendDocs","highPriority","notes","multiline","minRows","maxRows","ppwOrPpc","isNonPremium","title","feeOrAmendment","muiFormGroupProps","row","bordereauPeriod","outputFormat","placeholder","fullWidth","helperText","muiPickerProps","views","format","clearable","getUpdatedInstruction","formValues","instructionId","handleCancel","handleSubmitBordereau","values","isFrontEndIdSelected","Boolean","proceedToSubmission","handleSubmitEndorseFa","handleSave","updatedInstruction","handleSubmit","response","documentUploaded","mandatoryDocumentsNotUploaded","component","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","__html","buttonColors","confirm","submitHandler","handleClose","businessProcess","bp","businessProcessID","businessProcessId","businessProcessName","cancelLabel","confirmMessageText","note","then","res","push","toggleTab","replace","routes","steps","isInvalidOrEmptyArray","cancel","save","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport moment from 'moment';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\r\nimport {\r\n  showModal,\r\n  getUsersForRole,\r\n  selectUser,\r\n  selectUserDetails,\r\n  selectUsersInRoles,\r\n  getBordereauPolicyTypes,\r\n  updateProcessingInstruction,\r\n  submitProcessingInstruction,\r\n  getProcessingInstruction,\r\n  enqueueNotification,\r\n  selectPiAccountExecutives,\r\n  selectWorkFlowFrontEndContactNamesForRiskReference,\r\n  selectAccountExecutivesForRiskReference,\r\n} from 'stores';\r\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nProcessingInstructionsEndorseFaBorder.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsEndorseFaBorder({ instruction, handlers, childRef }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id, step, tab } = useParams();\r\n\r\n  const user = useSelector(selectUser);\r\n  const users = useSelector(selectUsersInRoles);\r\n  const currentUser = useSelector(selectUserDetails);\r\n  const bordereauPolicyTypes = useSelector((state) => get(state, 'processingInstructions.bordereauPolicyTypes'));\r\n  const accountExecutivesFromRoles = useSelector(selectPiAccountExecutives);\r\n  const piAccountExecutives = useSelector(selectAccountExecutivesForRiskReference);\r\n  const piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);\r\n\r\n  const piWorkFlowFrontEndContactNames = piFrontEndContactNames.map((type) => {\r\n    return {\r\n      id: type.id,\r\n      name: type.value,\r\n    };\r\n  });\r\n\r\n  const accountExecutiveValues = utils.generic.isValidArray(piAccountExecutives, true) ? piAccountExecutives : accountExecutivesFromRoles;\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const businessProcesses = useSelector((state) => get(state, 'referenceData.businessProcesses'));\r\n\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\r\n  const isReadOnly = !isEditable;\r\n\r\n  const [defaultValues, setDefaultValues] = useState();\r\n\r\n  const riskReferences = instruction?.riskReferences;\r\n  const leadRef = instruction?.riskReferences?.find((r) => r.leadPolicy);\r\n\r\n  const leadFrontEndContactNameValue = leadRef?.workFlowFrontEndContactName;\r\n  const leadRefAccountExecutiveName = leadRef?.accountExecutive;\r\n\r\n  const bordereauTypes = [\r\n    {\r\n      id: 1,\r\n      name: 'premium',\r\n      value: 'premium',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium'),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'claims',\r\n      value: 'claims',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims'),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'combined',\r\n      value: 'combined',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined'),\r\n    },\r\n  ];\r\n\r\n  const feeAndAmendmentTypes = [\r\n    {\r\n      name: 'fee',\r\n      value: 'fee',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee'),\r\n    },\r\n    {\r\n      name: 'amendment',\r\n      value: 'amendment',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment'),\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'processing-instruction', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi') },\r\n    { value: 'documents', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc') },\r\n  ];\r\n\r\n  const isValidTab = tabs.map((item) => item.value).includes(tab);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(isValidTab ? tab : 'processing-instruction');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\r\n    dispatch(getBordereauPolicyTypes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(\r\n    () => {\r\n      const reset = childRef?.current?.props?.resetFunc;\r\n      const updatedDefaultValues = {\r\n        ...utils.form.getInitialValues(fields),\r\n      };\r\n\r\n      setDefaultValues(updatedDefaultValues);\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset(updatedDefaultValues, {\r\n          keepDirty: false,\r\n        });\r\n      }\r\n    },\r\n    [instruction] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const filterUsersByRole = (roleNames) => {\r\n    return riskReferences?.reduce((acc, cur) => {\r\n      const groupDepartXbInstanceIds = `${cur.departmentId}-${cur.xbInstanceId}`;\r\n      return [\r\n        ...acc,\r\n        ...users\r\n          .filter((u) => roleNames.includes(u.userRole))\r\n          .filter((u) =>\r\n            u.departmentId\r\n              ?.split(',')\r\n              .map((x) => x.trim())\r\n              .includes(groupDepartXbInstanceIds)\r\n          )\r\n          .map((u) => {\r\n            return { id: u.userId, name: u.fullName + ' - ' + u.emailId };\r\n          }),\r\n      ];\r\n    }, []);\r\n  };\r\n\r\n  const frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id');\r\n  const frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)\r\n    ? piWorkFlowFrontEndContactNames\r\n    : frontEndContactsForRoles;\r\n\r\n  const getFrontEndContactId = () => {\r\n    let frontEndContactId = instruction.details?.frontEndContactId;\r\n    const workFlowFrontEndContactName = instruction.details?.workFlowFrontEndContactName;\r\n    let user;\r\n\r\n    if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\r\n      if (workFlowFrontEndContactName) {\r\n        user = piWorkFlowFrontEndContactNames.find((fec) => fec.id === frontEndContactId);\r\n        frontEndContactId = user?.id;\r\n      } else if (leadFrontEndContactNameValue) {\r\n        const frontEndContactValue = piWorkFlowFrontEndContactNames?.find(\r\n          (type) => type?.name?.toLowerCase() === leadFrontEndContactNameValue?.toLowerCase()\r\n        );\r\n        frontEndContactId = frontEndContactValue?.id;\r\n      }\r\n    } else if (!frontEndContactId && utils.generic.isValidArray(frontEndContacts, true)) {\r\n      user = frontEndContacts.find((fec) => fec.id === currentUser?.id);\r\n      frontEndContactId = user?.id;\r\n    }\r\n\r\n    return frontEndContactId || '';\r\n  };\r\n\r\n  const getSelectedFrontEndContactName = (frontEndContactd) => {\r\n    const selectedFrontEndContactName = piWorkFlowFrontEndContactNames?.find(\r\n      (frontEndContact) => frontEndContact?.id === frontEndContactd\r\n    )?.name;\r\n    return selectedFrontEndContactName;\r\n  };\r\n\r\n  const getAccountExecutiveId = () => {\r\n    let accountExecutiveId = instruction?.details?.accountExecutiveId;\r\n    let user;\r\n\r\n    if (utils.generic.isValidArray(piAccountExecutives, true) && leadRefAccountExecutiveName) {\r\n      if (accountExecutiveId) {\r\n        user = piAccountExecutives.find((type) => type.id === accountExecutiveId);\r\n        accountExecutiveId = user?.id;\r\n      } else if (leadRefAccountExecutiveName) {\r\n        const leadAccountExecutive = piAccountExecutives?.find(\r\n          (type) => type.value.toLowerCase() === leadRefAccountExecutiveName?.toLowerCase()\r\n        );\r\n        accountExecutiveId = leadAccountExecutive?.id;\r\n      }\r\n    } else if (!accountExecutiveId && utils.generic.isValidArray(accountExecutiveValues, true)) {\r\n      user = accountExecutiveValues.find((ae) => ae.userId === instruction?.details?.accountExecutiveId);\r\n      accountExecutiveId = user?.id;\r\n    }\r\n\r\n    return accountExecutiveId || '';\r\n  };\r\n\r\n  const getSelectedAccountExecutiveName = (accountExecutiveId) => {\r\n    const selectedAccountExecutiveName = piAccountExecutives?.find((accountExec) => accountExec?.id === accountExecutiveId)?.value;\r\n    return selectedAccountExecutiveName;\r\n  };\r\n\r\n  const getBordereauPolicyTypeId = () => {\r\n    let bordereauPolicyTypeId = instruction.details?.bordereauPolicyTypeId;\r\n\r\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\r\n      const item = bordereauPolicyTypes.find((type) => type.bordereauPolicyTypeID === instruction?.details?.bordereauPolicyTypeId);\r\n      bordereauPolicyTypeId = item?.bordereauPolicyTypeID;\r\n    }\r\n\r\n    return bordereauPolicyTypeId || '';\r\n  };\r\n\r\n  const getBordereauTypeValue = () => {\r\n    const defaultId = 1;\r\n    const defaultType = 'premium';\r\n    const bordereauTypeId = instruction?.details?.bordereauTypeId || defaultId;\r\n\r\n    const obj = bordereauTypes.find((type) => type.id === bordereauTypeId);\r\n    return obj?.value || defaultType;\r\n  };\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'frontEndContactId',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\r\n      value: getFrontEndContactId(),\r\n      options: frontEndContacts,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'accountExecutiveId',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.accountExecutive'),\r\n      value: getAccountExecutiveId(),\r\n      options: accountExecutiveValues,\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'frontEndSendDocs',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\r\n      value: instruction?.details?.frontEndSendDocs || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'highPriority',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\r\n      value: instruction?.details?.highPriority || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\r\n      value: instruction?.details?.notes || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 5,\r\n        maxRows: 10,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    ...(isEndorsement\r\n      ? [\r\n          {\r\n            name: 'ppwOrPpc',\r\n            type: 'checkbox',\r\n            value: instruction?.details?.ppwOrPpc || false,\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isEndorsement || isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'isNonPremium',\r\n            type: 'checkbox',\r\n            value: leadRef?.isNonPremium === 'Yes',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\r\n            disabled: true,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'feeOrAmendment',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\r\n            value: instruction?.details?.feeOrAmendment || 'fee',\r\n            options: feeAndAmendmentTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isBordereau\r\n      ? [\r\n          {\r\n            name: 'bordereauPolicyTypeId',\r\n            type: 'select',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\r\n            value: getBordereauPolicyTypeId(),\r\n            options: bordereauPolicyTypes,\r\n            optionKey: 'bordereauPolicyTypeID',\r\n            optionLabel: 'bordereauPolicyTypeDetails',\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'bordereauPeriod',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\r\n            value: instruction?.details?.bordereauPeriod || null,\r\n            outputFormat: 'iso',\r\n            placeholder: 'MM YYYY',\r\n            muiComponentProps: {\r\n              fullWidth: true,\r\n              helperText: utils.string.t(\r\n                'processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'\r\n              ),\r\n              disabled: isReadOnly,\r\n            },\r\n            muiPickerProps: {\r\n              views: ['year', 'month'],\r\n              format: 'MM YYYY',\r\n              clearable: true,\r\n            },\r\n          },\r\n          {\r\n            name: 'bordereauTypeId',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\r\n            value: getBordereauTypeValue(),\r\n            options: bordereauTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const getUpdatedInstruction = (instruction, formValues) => {\r\n    return {\r\n      ...instruction,\r\n      details: {\r\n        ...formValues,\r\n        instructionId: instruction?.id,\r\n        accountExecutive: getSelectedAccountExecutiveName(formValues.accountExecutiveId),\r\n        workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId),\r\n\r\n        ...(isBordereau && {\r\n          bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\r\n          bordereauTypeId: bordereauTypes.find((type) => type.value === formValues.bordereauTypeId)?.id || null,\r\n        }),\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const reset = childRef?.current?.props?.resetFunc;\r\n\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset(defaultValues, { keepDirty: false });\r\n    }\r\n  };\r\n\r\n  const handleSubmitBordereau = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    const bordereauTypeId = Boolean(formValues?.bordereauTypeId);\r\n    const bordereauPeriod = Boolean(formValues?.bordereauPeriod);\r\n    const bordereauPolicyTypeId = Boolean(formValues?.bordereauPolicyTypeId);\r\n\r\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\r\n      proceedToSubmission();\r\n    } else if (!isFrontEndIdSelected) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n    } else if (!bordereauTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\r\n    } else if (!bordereauPeriod) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\r\n    } else if (!bordereauPolicyTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\r\n    }\r\n  };\r\n\r\n  const handleSubmitEndorseFa = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    if (isFrontEndIdSelected) {\r\n      proceedToSubmission();\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = formValues?.frontEndContactId !== null;\r\n\r\n    if (isFrontEndIdSelected) {\r\n      const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n      dispatch(updateProcessingInstruction(updatedInstruction));\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const response = await dispatch(getProcessingInstruction(id));\r\n    if (response) {\r\n      const documentUploaded = true; //Removed validation for checking documents in each riskRef untill we got new dms api\r\n      if (isEndorsement && !documentUploaded) {\r\n        mandatoryDocumentsNotUploaded();\r\n      } else {\r\n        if (isBordereau) {\r\n          handleSubmitBordereau();\r\n        } else {\r\n          handleSubmitEndorseFa();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const mandatoryDocumentsNotUploaded = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessage: (\r\n              <span\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')}`,\r\n                }}\r\n              />\r\n            ),\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const proceedToSubmission = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n    const businessProcess = businessProcesses?.find(\r\n      (bp) => bp.businessProcessID === updatedInstruction.businessProcessId\r\n    )?.businessProcessName;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: 'processingInstructions.authorisations.form.title',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\r\n            cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\r\n            note: utils.string.t('processingInstructions.authorisations.form.note'),\r\n\r\n            submitHandler: () => {\r\n              dispatch(\r\n                submitProcessingInstruction({\r\n                  ...updatedInstruction,\r\n                  businessProcess,\r\n                  statusId: PI_STATUS_SUBMITTED_PROCESSING,\r\n                })\r\n              ).then((res) => {\r\n                // check that the response was successful\r\n                history.push('/processing-instructions');\r\n                dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\r\n              });\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const toggleTab = (tab) => {\r\n    setSelectedTab(tab);\r\n    history.replace(`${config.routes.processingInstructions.steps}/${id}${step ? `/${step}` : ''}${tab ? `/${tab}` : ''}`);\r\n  };\r\n\r\n  // abort\r\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\r\n\r\n  return (\r\n    <ProcessingInstructionsEndorseFaBorderView\r\n      instruction={instruction}\r\n      leadRef={leadRef}\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      fields={fields}\r\n      defaultValues={defaultValues}\r\n      isEndorsement={isEndorsement}\r\n      isBordereau={isBordereau}\r\n      isFeeAndAmendment={isFeeAndAmendment}\r\n      isReadOnly={isReadOnly}\r\n      isSubmittedProcessing={isSubmittedProcessing}\r\n      handlers={{\r\n        ...handlers,\r\n        cancel: handleCancel,\r\n        save: handleSave,\r\n        submit: handleSubmit,\r\n        toggleTab,\r\n      }}\r\n      ref={childRef}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}