{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\PolicyAccordion\\\\PolicyAccordion.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './PolicyAccordion.styles';\nimport { Accordion, Chart, Overflow, TableCell, TableHead, TrafficLights, Translate } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Table, TableBody, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPolicyAccordionView.propTypes = {\n  groups: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  statuses: PropTypes.shape({\n    quoted: PropTypes.number,\n    pending: PropTypes.number,\n    declined: PropTypes.number\n  }).isRequired,\n  handlers: PropTypes.shape({\n    buildChartData: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function PolicyAccordionView(_ref) {\n  var _this = this;\n\n  var groups = _ref.groups,\n      cols = _ref.cols,\n      statuses = _ref.statuses,\n      handlers = _ref.handlers,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'PolicyAccordion'\n  })();\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames(classes.root, nestedClasses.root),\n    children: groups.map(function (_ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          policies = _ref3[1];\n\n      return /*#__PURE__*/_jsxDEV(Accordion, {\n        title: key,\n        testid: \"policy-business-type\",\n        children: /*#__PURE__*/_jsxDEV(Overflow, {\n          children: /*#__PURE__*/_jsxDEV(Table, {\n            size: \"small\",\n            children: [/*#__PURE__*/_jsxDEV(TableHead, {\n              columns: cols\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(TableBody, {\n              children: policies.map(function (policy) {\n                var currency = utils.policy.getCurrency(policy);\n                var markets = utils.policy.getMarkets(policy);\n                var marketsQuoted = utils.markets.getByStatusIds(markets, [statuses.quoted]);\n                var premiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\n                var hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\n                var written = utils.markets.getLineSize(marketsQuoted);\n                var signed = utils.markets.getLineSize(marketsQuoted, true);\n                var dataWritten = handlers.buildChartData(written || 0, 'placement.generic.written');\n                var dataSigned = handlers.buildChartData(signed || 0, 'placement.generic.signed');\n                return /*#__PURE__*/_jsxDEV(TableRow, {\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      className: classes.policies,\n                      \"data-testid\": \"policy-name\",\n                      children: utils.policy.getName(policy)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 56,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 55,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    center: true,\n                    children: /*#__PURE__*/_jsxDEV(Typography, {\n                      variant: \"body2\",\n                      className: classes.policies,\n                      \"data-testid\": \"policy-premium\",\n                      children: hasMultiplePremiums || !currency ? utils.string.t('app.various') : /*#__PURE__*/_jsxDEV(Translate, {\n                        label: \"format.currency\",\n                        options: {\n                          value: {\n                            number: premiumByCurrency[currency],\n                            currency: currency,\n                            default: '-'\n                          }\n                        }\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 66,\n                        columnNumber: 31\n                      }, _this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 62,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 61,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    relative: true,\n                    children: /*#__PURE__*/_jsxDEV(Chart, {\n                      type: \"doughnut\",\n                      data: dataWritten,\n                      options: config.ui.chart.doughnut,\n                      width: 30,\n                      height: 30,\n                      tooltip: utils.string.t('format.percent', {\n                        value: {\n                          number: written,\n                          default: '-'\n                        }\n                      }),\n                      nestedClasses: {\n                        chart: classes.chart\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 77,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 76,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    relative: true,\n                    children: /*#__PURE__*/_jsxDEV(Chart, {\n                      type: \"doughnut\",\n                      data: dataSigned,\n                      options: config.ui.chart.doughnut,\n                      width: 30,\n                      height: 30,\n                      tooltip: utils.string.t('format.percent', {\n                        value: {\n                          number: signed,\n                          default: '-'\n                        }\n                      }),\n                      nestedClasses: {\n                        chart: classes.chart\n                      }\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 89,\n                      columnNumber: 27\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 88,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    center: true,\n                    children: [markets && markets.length > 0 && /*#__PURE__*/_jsxDEV(TrafficLights, {\n                      tooltip: true,\n                      green: utils.markets.getByStatusIds(markets, [statuses.quoted]).length,\n                      yellow: utils.markets.getByStatusIds(markets, [statuses.pending]).length,\n                      red: utils.markets.getByStatusIds(markets, [statuses.declined]).length\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 102,\n                      columnNumber: 29\n                    }, _this), (!markets || !markets.length > 0) && '-']\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 100,\n                    columnNumber: 25\n                  }, _this)]\n                }, \"\".concat(policy.id), true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 54,\n                  columnNumber: 23\n                }, _this);\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 39,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 36,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 35,\n          columnNumber: 13\n        }, _this)\n      }, key, false, {\n        fileName: _jsxFileName,\n        lineNumber: 34,\n        columnNumber: 11\n      }, _this);\n    })\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = PolicyAccordionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"PolicyAccordionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/PolicyAccordion/PolicyAccordion.view.js"],"names":["React","PropTypes","classnames","styles","Accordion","Chart","Overflow","TableCell","TableHead","TrafficLights","Translate","utils","config","makeStyles","Table","TableBody","TableRow","Typography","PolicyAccordionView","propTypes","groups","array","isRequired","cols","statuses","shape","quoted","number","pending","declined","handlers","buildChartData","func","nestedClasses","classes","name","root","map","key","policies","policy","currency","getCurrency","markets","getMarkets","marketsQuoted","getByStatusIds","premiumByCurrency","getPremiumByCurrency","hasMultiplePremiums","written","getLineSize","signed","dataWritten","dataSigned","getName","string","t","value","default","ui","chart","doughnut","length","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './PolicyAccordion.styles';\r\nimport { Accordion, Chart, Overflow, TableCell, TableHead, TrafficLights, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableBody, TableRow, Typography } from '@material-ui/core';\r\n\r\nPolicyAccordionView.propTypes = {\r\n  groups: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  statuses: PropTypes.shape({\r\n    quoted: PropTypes.number,\r\n    pending: PropTypes.number,\r\n    declined: PropTypes.number,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    buildChartData: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function PolicyAccordionView({ groups, cols, statuses, handlers, nestedClasses }) {\r\n  const classes = makeStyles(styles, { name: 'PolicyAccordion' })();\r\n\r\n  return (\r\n    <div className={classnames(classes.root, nestedClasses.root)}>\r\n      {groups.map(([key, policies]) => {\r\n        return (\r\n          <Accordion key={key} title={key} testid=\"policy-business-type\">\r\n            <Overflow>\r\n              <Table size=\"small\">\r\n                <TableHead columns={cols} />\r\n\r\n                <TableBody>\r\n                  {policies.map((policy) => {\r\n                    const currency = utils.policy.getCurrency(policy);\r\n                    const markets = utils.policy.getMarkets(policy);\r\n                    const marketsQuoted = utils.markets.getByStatusIds(markets, [statuses.quoted]);\r\n\r\n                    const premiumByCurrency = utils.markets.getPremiumByCurrency(marketsQuoted, currency, false, false);\r\n\r\n                    const hasMultiplePremiums = utils.markets.hasMultiplePremiums(marketsQuoted);\r\n                    const written = utils.markets.getLineSize(marketsQuoted);\r\n                    const signed = utils.markets.getLineSize(marketsQuoted, true);\r\n                    const dataWritten = handlers.buildChartData(written || 0, 'placement.generic.written');\r\n                    const dataSigned = handlers.buildChartData(signed || 0, 'placement.generic.signed');\r\n\r\n                    return (\r\n                      <TableRow key={`${policy.id}`}>\r\n                        <TableCell>\r\n                          <Typography variant=\"body2\" className={classes.policies} data-testid=\"policy-name\">\r\n                            {utils.policy.getName(policy)}\r\n                          </Typography>\r\n                        </TableCell>\r\n\r\n                        <TableCell center>\r\n                          <Typography variant=\"body2\" className={classes.policies} data-testid=\"policy-premium\">\r\n                            {hasMultiplePremiums || !currency ? (\r\n                              utils.string.t('app.various')\r\n                            ) : (\r\n                              <Translate\r\n                                label=\"format.currency\"\r\n                                options={{\r\n                                  value: { number: premiumByCurrency[currency], currency, default: '-' },\r\n                                }}\r\n                              />\r\n                            )}\r\n                          </Typography>\r\n                        </TableCell>\r\n\r\n                        <TableCell relative>\r\n                          <Chart\r\n                            type=\"doughnut\"\r\n                            data={dataWritten}\r\n                            options={config.ui.chart.doughnut}\r\n                            width={30}\r\n                            height={30}\r\n                            tooltip={utils.string.t('format.percent', { value: { number: written, default: '-' } })}\r\n                            nestedClasses={{ chart: classes.chart }}\r\n                          />\r\n                        </TableCell>\r\n\r\n                        <TableCell relative>\r\n                          <Chart\r\n                            type=\"doughnut\"\r\n                            data={dataSigned}\r\n                            options={config.ui.chart.doughnut}\r\n                            width={30}\r\n                            height={30}\r\n                            tooltip={utils.string.t('format.percent', { value: { number: signed, default: '-' } })}\r\n                            nestedClasses={{ chart: classes.chart }}\r\n                          />\r\n                        </TableCell>\r\n\r\n                        <TableCell center>\r\n                          {markets && markets.length > 0 && (\r\n                            <TrafficLights\r\n                              tooltip\r\n                              green={utils.markets.getByStatusIds(markets, [statuses.quoted]).length}\r\n                              yellow={utils.markets.getByStatusIds(markets, [statuses.pending]).length}\r\n                              red={utils.markets.getByStatusIds(markets, [statuses.declined]).length}\r\n                            />\r\n                          )}\r\n                          {(!markets || !markets.length > 0) && '-'}\r\n                        </TableCell>\r\n                      </TableRow>\r\n                    );\r\n                  })}\r\n                </TableBody>\r\n              </Table>\r\n            </Overflow>\r\n          </Accordion>\r\n        );\r\n      })}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}