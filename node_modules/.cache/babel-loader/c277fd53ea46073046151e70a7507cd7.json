{"ast":null,"code":"import { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getRiskCountries = function getRiskCountries() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getRiskCountries'\n    };\n    dispatch(getRiskCountriesRequest());\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: 'api/v1/facilities/countries'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonArray(json);\n    }).then(function (data) {\n      dispatch(getRiskCountriesSuccess(data));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getRiskCountriesFailure(err));\n      return err;\n    });\n  };\n};\nexport var getRiskCountriesRequest = function getRiskCountriesRequest() {\n  return {\n    type: 'RISK_COUNTRIES_GET_REQUEST'\n  };\n};\nexport var getRiskCountriesSuccess = function getRiskCountriesSuccess(data) {\n  return {\n    type: 'RISK_COUNTRIES_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getRiskCountriesFailure = function getRiskCountriesFailure(error) {\n  return {\n    type: 'RISK_COUNTRIES_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getFacilityCountries.js"],"names":["authLogout","utils","getRiskCountries","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getRiskCountriesRequest","api","get","token","accessToken","path","then","response","handleResponse","json","handleResponseJsonArray","data","getRiskCountriesSuccess","err","handleError","handleUnauthorized","getRiskCountriesFailure","type","payload","error"],"mappings":"AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,gBAAgB,GAAG,SAAnBA,gBAAmB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC5D;AAD4D,oBAEHA,QAAQ,EAFL;AAAA,QAE5CC,IAF4C,aAEpDC,IAFoD,CAE5CD,IAF4C;AAAA,QAElBE,QAFkB,aAEpCC,MAFoC,CAE1BC,IAF0B,CAElBF,QAFkB;;AAI5D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,uBAAuB,EAAxB,CAAR;AAEA,WAAOX,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHY,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAclB,KAAK,CAACY,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUpB,KAAK,CAACY,GAAN,CAAUS,uBAAV,CAAkCD,IAAlC,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdpB,MAAAA,QAAQ,CAACqB,uBAAuB,CAACD,IAAD,CAAxB,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACdxB,MAAAA,KAAK,CAACY,GAAN,CAAUa,WAAV,CAAsBD,GAAtB,EAA2Bf,YAA3B;AACAT,MAAAA,KAAK,CAACY,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CH,UAA5C;AACAG,MAAAA,QAAQ,CAACyB,uBAAuB,CAACH,GAAD,CAAxB,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,CAAP;AAkBD,GA5B+B;AAAA,CAAzB;AA8BP,OAAO,IAAMb,uBAAuB,GAAG,SAA1BA,uBAA0B,GAAM;AAC3C,SAAO;AACLiB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAML,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACD,IAAD,EAAU;AAC/C,SAAO;AACLM,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACG,KAAD,EAAW;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAE,4BADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getRiskCountries = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getRiskCountries',\r\n  };\r\n\r\n  dispatch(getRiskCountriesRequest());\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: 'api/v1/facilities/countries',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleResponseJsonArray(json))\r\n    .then((data) => {\r\n      dispatch(getRiskCountriesSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getRiskCountriesFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getRiskCountriesRequest = () => {\r\n  return {\r\n    type: 'RISK_COUNTRIES_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getRiskCountriesSuccess = (data) => {\r\n  return {\r\n    type: 'RISK_COUNTRIES_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getRiskCountriesFailure = (error) => {\r\n  return {\r\n    type: 'RISK_COUNTRIES_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}