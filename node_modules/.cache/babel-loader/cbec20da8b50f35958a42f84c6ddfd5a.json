{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Pagination\\\\Pagination.js\";\nimport React, { PureComponent } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames'; // app\n\nimport styles from './Pagination.styles';\nimport { Translate } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { withStyles, TablePagination } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var Pagination = /*#__PURE__*/function (_PureComponent) {\n  _inherits(Pagination, _PureComponent);\n\n  var _super = _createSuper(Pagination);\n\n  function Pagination() {\n    _classCallCheck(this, Pagination);\n\n    return _super.apply(this, arguments);\n  }\n\n  _createClass(Pagination, [{\n    key: \"render\",\n    value: function render() {\n      var _this$props = this.props,\n          page = _this$props.page,\n          count = _this$props.count,\n          rowsPerPage = _this$props.rowsPerPage,\n          rowsPerPageOptions = _this$props.rowsPerPageOptions,\n          centered = _this$props.centered,\n          testid = _this$props.testid,\n          onChangePage = _this$props.onChangePage,\n          onChangeRowsPerPage = _this$props.onChangeRowsPerPage,\n          classes = _this$props.classes;\n      return /*#__PURE__*/_jsxDEV(TablePagination, {\n        page: page,\n        count: count,\n        rowsPerPage: rowsPerPage,\n        rowsPerPageOptions: rowsPerPageOptions,\n        component: \"div\",\n        labelRowsPerPage: /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"pagination.rows\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 27\n        }, this),\n        labelDisplayedRows: function labelDisplayedRows(_ref) {\n          var from = _ref.from,\n              to = _ref.to,\n              count = _ref.count;\n          return \"\".concat(from, \"-\").concat(to, \" \").concat(utils.string.t('pagination.of'), \" \").concat(count);\n        },\n        backIconButtonProps: {\n          'aria-label': utils.string.t('pagination.previousPage'),\n          className: classes.paginationButton\n        },\n        nextIconButtonProps: {\n          'aria-label': utils.string.t('pagination.nextPage'),\n          className: classes.paginationButton\n        },\n        classes: {\n          root: classnames(classes.root, _defineProperty({}, classes.rootCentered, centered)),\n          toolbar: classnames(classes.toolbar, _defineProperty({}, classes.toolbarCentered, centered)),\n          spacer: classnames(classes.spacer, _defineProperty({}, classes.spacerCentered, centered)),\n          selectRoot: classnames(classes.selectRoot, _defineProperty({}, classes.selectRootCentered, centered)),\n          actions: classnames(classes.actions, _defineProperty({}, classes.actionsCentered, centered))\n        },\n        onPageChange: onChangePage,\n        onRowsPerPageChange: onChangeRowsPerPage,\n        \"data-testid\": \"pagination\".concat(testid ? '-' + testid : '')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 35,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return Pagination;\n}(PureComponent);\nPagination.propTypes = {\n  page: PropTypes.number.isRequired,\n  count: PropTypes.number.isRequired,\n  rowsPerPage: PropTypes.number.isRequired,\n  rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\n  centered: PropTypes.bool,\n  onChangePage: PropTypes.func.isRequired,\n  onChangeRowsPerPage: PropTypes.func.isRequired\n};\nPagination.defaultProps = {\n  rowsPerPage: config.ui.pagination.default,\n  rowsPerPageOptions: config.ui.pagination.options\n};\nexport default compose(withStyles(styles))(Pagination);","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Pagination/Pagination.js"],"names":["React","PureComponent","PropTypes","compose","classnames","styles","Translate","utils","config","withStyles","TablePagination","Pagination","props","page","count","rowsPerPage","rowsPerPageOptions","centered","testid","onChangePage","onChangeRowsPerPage","classes","from","to","string","t","className","paginationButton","root","rootCentered","toolbar","toolbarCentered","spacer","spacerCentered","selectRoot","selectRootCentered","actions","actionsCentered","propTypes","number","isRequired","arrayOf","bool","func","defaultProps","ui","pagination","default","options"],"mappings":"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","sourcesContent":["import React, { PureComponent } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './Pagination.styles';\r\nimport { Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { withStyles, TablePagination } from '@material-ui/core';\r\n\r\nexport class Pagination extends PureComponent {\r\n  static propTypes = {\r\n    page: PropTypes.number.isRequired,\r\n    count: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    rowsPerPageOptions: PropTypes.arrayOf(PropTypes.number).isRequired,\r\n    centered: PropTypes.bool,\r\n    onChangePage: PropTypes.func.isRequired,\r\n    onChangeRowsPerPage: PropTypes.func.isRequired,\r\n  };\r\n\r\n  static defaultProps = {\r\n    rowsPerPage: config.ui.pagination.default,\r\n    rowsPerPageOptions: config.ui.pagination.options,\r\n  };\r\n\r\n  render() {\r\n    const { page, count, rowsPerPage, rowsPerPageOptions, centered, testid, onChangePage, onChangeRowsPerPage, classes } = this.props;\r\n\r\n    return (\r\n      <TablePagination\r\n        page={page}\r\n        count={count}\r\n        rowsPerPage={rowsPerPage}\r\n        rowsPerPageOptions={rowsPerPageOptions}\r\n        component=\"div\"\r\n        labelRowsPerPage={<Translate label=\"pagination.rows\" />}\r\n        labelDisplayedRows={({ from, to, count }) => `${from}-${to} ${utils.string.t('pagination.of')} ${count}`}\r\n        backIconButtonProps={{\r\n          'aria-label': utils.string.t('pagination.previousPage'),\r\n          className: classes.paginationButton,\r\n        }}\r\n        nextIconButtonProps={{\r\n          'aria-label': utils.string.t('pagination.nextPage'),\r\n          className: classes.paginationButton,\r\n        }}\r\n        classes={{\r\n          root: classnames(classes.root, { [classes.rootCentered]: centered }),\r\n          toolbar: classnames(classes.toolbar, { [classes.toolbarCentered]: centered }),\r\n          spacer: classnames(classes.spacer, { [classes.spacerCentered]: centered }),\r\n          selectRoot: classnames(classes.selectRoot, { [classes.selectRootCentered]: centered }),\r\n          actions: classnames(classes.actions, { [classes.actionsCentered]: centered }),\r\n        }}\r\n        onPageChange={onChangePage}\r\n        onRowsPerPageChange={onChangeRowsPerPage}\r\n        data-testid={`pagination${testid ? '-' + testid : ''}`}\r\n      />\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(Pagination);\r\n"]},"metadata":{},"sourceType":"module"}