{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getReferralValues = function getReferralValues() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getReferralValues'\n    };\n    dispatch(getReferralValuesRequest());\n    dispatch(addLoader('getReferralValues'));\n    var state = getState();\n    var policyData = get(state, 'claims.policyData') || '';\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims-triage/complex/referral-values?departmentID=\".concat(policyData.divisionID, \"&xbInstanceID=\").concat(policyData.xbInstanceID)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getReferralValuesSuccess(data.data));\n      dispatch(removeLoader('getReferralValues'));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getReferralValuesFailure(err, defaultError));\n      dispatch(removeLoader('getReferralValues'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getReferralValuesRequest = function getReferralValuesRequest(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_VALUES_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getReferralValuesSuccess = function getReferralValuesSuccess(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_VALUES_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getReferralValuesFailure = function getReferralValuesFailure(data) {\n  return {\n    type: 'CLAIMS_REFERRAL_VALUES_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getReferralValues.js"],"names":["addLoader","authLogout","removeLoader","utils","get","getReferralValues","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getReferralValuesRequest","state","policyData","api","token","accessToken","claimService","path","divisionID","xbInstanceID","then","response","handleResponse","data","getReferralValuesSuccess","err","getReferralValuesFailure","handleUnauthorized","type","payload"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7D;AAD6D,oBAEJA,QAAQ,EAFJ;AAAA,QAE7CC,IAF6C,aAErDC,IAFqD,CAE7CD,IAF6C;AAAA,QAEnBE,QAFmB,aAErCC,MAFqC,CAE3BC,IAF2B,CAEnBF,QAFmB;;AAI7D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,wBAAwB,EAAzB,CAAR;AACAT,IAAAA,QAAQ,CAACN,SAAS,CAAC,mBAAD,CAAV,CAAR;AAEA,QAAMgB,KAAK,GAAGT,QAAQ,EAAtB;AACA,QAAMU,UAAU,GAAGb,GAAG,CAACY,KAAD,EAAQ,mBAAR,CAAH,IAAmC,EAAtD;AAEA,WAAOb,KAAK,CAACe,GAAN,CACJd,GADI,CACA;AACHe,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACW,YAFhB;AAGHC,MAAAA,IAAI,wEAAiEL,UAAU,CAACM,UAA5E,2BAAuGN,UAAU,CAACO,YAAlH;AAHD,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACe,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdtB,MAAAA,QAAQ,CAACuB,wBAAwB,CAACD,IAAI,CAACA,IAAN,CAAzB,CAAR;AACAtB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,mBAAD,CAAb,CAAR;AACA,aAAO0B,IAAI,CAACA,IAAZ;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACdxB,MAAAA,QAAQ,CAACyB,wBAAwB,CAACD,GAAD,EAAMjB,YAAN,CAAzB,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAAC,mBAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACe,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CL,UAA5C;AACA,aAAO6B,GAAP;AACD,KAjBI,CAAP;AAkBD,GAhCgC;AAAA,CAA1B;AAkCP,OAAO,IAAMf,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACa,IAAD,EAAU;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACD,IAAD,EAAU;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACH,IAAD,EAAU;AAChD,SAAO;AACLK,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getReferralValues = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getReferralValues',\r\n  };\r\n\r\n  dispatch(getReferralValuesRequest());\r\n  dispatch(addLoader('getReferralValues'));\r\n\r\n  const state = getState();\r\n  const policyData = get(state, 'claims.policyData') || '';\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims-triage/complex/referral-values?departmentID=${policyData.divisionID}&xbInstanceID=${policyData.xbInstanceID}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getReferralValuesSuccess(data.data));\r\n      dispatch(removeLoader('getReferralValues'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getReferralValuesFailure(err, defaultError));\r\n      dispatch(removeLoader('getReferralValues'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getReferralValuesRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_VALUES_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getReferralValuesSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_VALUES_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getReferralValuesFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_REFERRAL_VALUES_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}