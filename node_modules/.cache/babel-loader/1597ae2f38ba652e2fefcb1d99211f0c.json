{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport { ORGANIZATIONS } from 'consts';\nexport var getTaskChecklist = function getTaskChecklist() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    var _ORGANIZATIONS$userOr;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var taskCode = params.taskCode,\n        taskId = params.taskId,\n        userOrgName = params.userOrgName;\n    var orgId = (_ORGANIZATIONS$userOr = ORGANIZATIONS[userOrgName]) === null || _ORGANIZATIONS$userOr === void 0 ? void 0 : _ORGANIZATIONS$userOr.id;\n    var defaultError = {\n      file: 'stores/claims.actions.getTaskChecklist'\n    };\n    dispatch(getTaskChecklistRequest(params));\n    dispatch(addLoader('getTaskChecklist'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"workflow/task/\".concat(taskCode, \"/checkList?organisationId=\").concat(orgId, \"&taskId=\").concat(taskId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getTaskChecklistSuccess(json));\n      return json;\n    })[\"catch\"](function (err) {\n      dispatch(getTaskChecklistFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getTaskChecklist'));\n    });\n  };\n};\nexport var getTaskChecklistRequest = function getTaskChecklistRequest(params) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_REQUEST',\n    payload: params\n  };\n};\nexport var getTaskChecklistSuccess = function getTaskChecklistSuccess(json) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_SUCCESS',\n    payload: json.data\n  };\n};\nexport var getTaskChecklistFailure = function getTaskChecklistFailure(error) {\n  return {\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getTaskChecklist.js"],"names":["addLoader","authLogout","removeLoader","utils","ORGANIZATIONS","getTaskChecklist","params","dispatch","getState","auth","user","endpoint","config","vars","taskCode","taskId","userOrgName","orgId","id","defaultError","file","getTaskChecklistRequest","api","get","token","accessToken","bpmService","path","then","response","handleResponse","data","handleNewData","json","getTaskChecklistSuccess","err","getTaskChecklistFailure","handleUnauthorized","type","payload","error"],"mappings":";AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,aAAT,QAA8B,QAA9B;AAEA,OAAO,IAAMC,gBAAgB,GAC3B,SADWA,gBACX;AAAA,MAACC,MAAD,uEAAU,EAAV;AAAA,SACA,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA;;AACtB;AADsB,oBAEqCA,QAAQ,EAF7C;AAAA,QAENC,IAFM,aAEdC,IAFc,CAEND,IAFM;AAAA,QAEoBE,QAFpB,aAEEC,MAFF,CAEYC,IAFZ,CAEoBF,QAFpB;;AAAA,QAIdG,QAJc,GAIoBR,MAJpB,CAIdQ,QAJc;AAAA,QAIJC,MAJI,GAIoBT,MAJpB,CAIJS,MAJI;AAAA,QAIIC,WAJJ,GAIoBV,MAJpB,CAIIU,WAJJ;AAMtB,QAAMC,KAAK,4BAAGb,aAAa,CAACY,WAAD,CAAhB,0DAAG,sBAA4BE,EAA1C;AAEA,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAb,IAAAA,QAAQ,CAACc,uBAAuB,CAACf,MAAD,CAAxB,CAAR;AACAC,IAAAA,QAAQ,CAACP,SAAS,CAAC,kBAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACmB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEf,IAAI,CAACgB,WADT;AAEHd,MAAAA,QAAQ,EAAEA,QAAQ,CAACe,UAFhB;AAGHC,MAAAA,IAAI,0BAAmBb,QAAnB,uCAAwDG,KAAxD,qBAAwEF,MAAxE;AAHD,KADA,EAMJa,IANI,CAMC,UAACC,QAAD;AAAA,aAAc1B,KAAK,CAACmB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAU5B,KAAK,CAACmB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACd1B,MAAAA,QAAQ,CAAC2B,uBAAuB,CAACD,IAAD,CAAxB,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACd5B,MAAAA,QAAQ,CAAC6B,uBAAuB,CAACD,GAAD,EAAMhB,YAAN,CAAxB,CAAR;AACAhB,MAAAA,KAAK,CAACmB,GAAN,CAAUe,kBAAV,CAA6BF,GAA7B,EAAkC5B,QAAlC,EAA4CN,UAA5C;AACA,aAAOkC,GAAP;AACD,KAhBI,aAiBI,YAAM;AACb5B,MAAAA,QAAQ,CAACL,YAAY,CAAC,kBAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GApCD;AAAA,CADK;AAuCP,OAAO,IAAMmB,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACf,MAAD,EAAY;AACjD,SAAO;AACLgC,IAAAA,IAAI,EAAE,8CADD;AAELC,IAAAA,OAAO,EAAEjC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAM4B,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACD,IAAD,EAAU;AAC/C,SAAO;AACLK,IAAAA,IAAI,EAAE,8CADD;AAELC,IAAAA,OAAO,EAAEN,IAAI,CAACF;AAFT,GAAP;AAID,CALM;AAOP,OAAO,IAAMK,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACI,KAAD,EAAW;AAChD,SAAO;AACLF,IAAAA,IAAI,EAAE,8CADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { ORGANIZATIONS } from 'consts';\r\n\r\nexport const getTaskChecklist =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n    const { taskCode, taskId, userOrgName } = params;\r\n\r\n    const orgId = ORGANIZATIONS[userOrgName]?.id;\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getTaskChecklist',\r\n    };\r\n\r\n    dispatch(getTaskChecklistRequest(params));\r\n    dispatch(addLoader('getTaskChecklist'));\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.bpmService,\r\n        path: `workflow/task/${taskCode}/checkList?organisationId=${orgId}&taskId=${taskId}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => utils.api.handleNewData(data))\r\n      .then((json) => {\r\n        dispatch(getTaskChecklistSuccess(json));\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getTaskChecklistFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        dispatch(removeLoader('getTaskChecklist'));\r\n      });\r\n  };\r\n\r\nexport const getTaskChecklistRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getTaskChecklistSuccess = (json) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_SUCCESS',\r\n    payload: json.data,\r\n  };\r\n};\r\n\r\nexport const getTaskChecklistFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_TASK_PROCESSING_GET_CHECKLIST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}