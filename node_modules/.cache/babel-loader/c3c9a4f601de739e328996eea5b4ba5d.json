{"ast":null,"code":"import \"core-js/modules/es.object.to-string\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './MultiSelectAsync.styles';\nimport { Button, FormContainer, FormText, Translate, Warning } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Checkbox, CircularProgress, Collapse, Fade, FormHelperText, InputAdornment, List, ListItem, ListItemIcon, ListItemText, Typography, makeStyles } from '@material-ui/core';\nimport CloseIcon from '@material-ui/icons/Close';\nimport SearchIcon from '@material-ui/icons/Search';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nMultiSelectAsyncView.propTypes = {\n  id: PropTypes.string.isRequired,\n  field: PropTypes.object.isRequired,\n  query: PropTypes.string,\n  options: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })),\n  values: PropTypes.arrayOf(PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n    name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired\n  })).isRequired,\n  fetching: PropTypes.bool,\n  max: PropTypes.number,\n  searchMinChars: PropTypes.number,\n  placeholder: PropTypes.string,\n  labels: PropTypes.shape({\n    minChars: PropTypes.string,\n    hint: PropTypes.string,\n    noResults: PropTypes.string\n  }),\n  handlers: PropTypes.shape({\n    onClear: PropTypes.func.isRequired,\n    onToggleOption: PropTypes.func\n  })\n};\nMultiSelectAsyncView.defaultProps = {\n  labels: {}\n};\nexport function MultiSelectAsyncView(_ref) {\n  _s();\n\n  var _this = this,\n      _classnames2,\n      _classnames3;\n\n  var id = _ref.id,\n      field = _ref.field,\n      query = _ref.query,\n      options = _ref.options,\n      values = _ref.values,\n      labels = _ref.labels,\n      fetching = _ref.fetching,\n      max = _ref.max,\n      searchMinChars = _ref.searchMinChars,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'MultiSelectAsync'\n  })({\n    fetching: fetching\n  });\n  var validationSchema = utils.form.getValidationSchema([field]);\n\n  var _useForm = useForm(_objectSpread({}, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit;\n\n  var optionsFiltered = options.filter(function (o) {\n    return !values.some(function (v) {\n      return v.id === o.id;\n    });\n  });\n  var valuesIds = values.map(function (v) {\n    return v.id;\n  });\n\n  var ClearBtn = /*#__PURE__*/_jsxDEV(Button, {\n    size: \"small\",\n    variant: \"text\",\n    icon: CloseIcon,\n    onClick: handlers.onClear(reset),\n    nestedClasses: {\n      btn: classes.clearBtn\n    },\n    \"data-testid\": \"multi-select-async-clear-\".concat(id)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n\n  var renderOption = function renderOption(option, type) {\n    var isOption = type === 'option';\n    var labelId = \"multi-select-async-checkbox-list-\".concat(type, \"-label-\").concat(option.id);\n    return /*#__PURE__*/_jsxDEV(ListItem, {\n      button: true,\n      onClick: function onClick() {\n        if (utils.generic.isFunction(handlers.onToggleOption)) {\n          handlers.onToggleOption(option);\n        }\n      },\n      disabled: isOption && isMaxReached,\n      classes: {\n        root: classes.listItem\n      },\n      children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n        classes: {\n          root: classes.listItemIcon\n        },\n        children: /*#__PURE__*/_jsxDEV(Checkbox, {\n          checked: valuesIds.includes(option.id),\n          color: \"primary\",\n          tabIndex: -1,\n          disableRipple: true,\n          disabled: isOption && isMaxReached,\n          inputProps: {\n            'aria-labelledby': labelId\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 109,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 108,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n        id: labelId,\n        primary: option.name\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 9\n      }, _this)]\n    }, option.id, true, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var isHintVisible = Boolean(query && query.length < searchMinChars);\n  var isMaxReached = Boolean(values && values.length >= max);\n  var isNoResults = Boolean(query && !fetching && !isHintVisible && utils.generic.isInvalidOrEmptyArray(options));\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: handleSubmit(handlers.onSearch),\n      nestedClasses: {\n        root: classes.form\n      },\n      \"data-testid\": \"form-multi-select-async-search\",\n      children: [/*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, field), {}, {\n        control: control,\n        muiComponentProps: _objectSpread(_objectSpread({}, field.muiComponentProps), {}, {\n          fullWidth: true,\n          classes: {\n            root: classnames(_defineProperty({}, classes.input, true))\n          },\n          InputProps: {\n            startAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"start\",\n              classes: {\n                root: classes.adornmentStart\n              },\n              children: /*#__PURE__*/_jsxDEV(SearchIcon, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this),\n            endAdornment: /*#__PURE__*/_jsxDEV(InputAdornment, {\n              position: \"end\",\n              children: [fetching && /*#__PURE__*/_jsxDEV(CircularProgress, {\n                color: \"inherit\",\n                size: 20\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 153,\n                columnNumber: 32\n              }, this), query ? ClearBtn : /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 154,\n                columnNumber: 39\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 152,\n              columnNumber: 17\n            }, this)\n          }\n        })\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this), isHintVisible && /*#__PURE__*/_jsxDEV(Collapse, {\n        \"in\": isHintVisible,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          \"in\": isHintVisible,\n          children: /*#__PURE__*/_jsxDEV(FormHelperText, {\n            children: labels.minChars || utils.string.t('filters.multiSelectAsync.minChars', {\n              min: searchMinChars\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 163,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 162,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 161,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 129,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Collapse, {\n      \"in\": isNoResults,\n      children: /*#__PURE__*/_jsxDEV(Fade, {\n        \"in\": isNoResults,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 1,\n          mb: 1,\n          children: /*#__PURE__*/_jsxDEV(Warning, {\n            type: \"alert\",\n            icon: true,\n            text: labels.noResults || utils.string.t('filters.multiSelectAsync.noResults')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 174,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 173,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 172,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), (!query || query && query.length < searchMinChars) && !utils.generic.isValidArray(values, true) && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body1\",\n      classes: {\n        root: classes.hint\n      },\n      children: labels.hint || utils.string.t('filters.multiSelectAsync.hint')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(List, {\n      dense: true,\n      className: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.list, true), _defineProperty(_classnames2, classes.listMargin, utils.generic.isValidArray(optionsFiltered, true)), _classnames2)),\n      children: optionsFiltered.map(function (option) {\n        return renderOption(option, 'option');\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 7\n    }, this), utils.generic.isValidArray(values, true) && /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.selected,\n      children: [/*#__PURE__*/_jsxDEV(Translate, {\n        label: \"processingInstructions.filters.selectedMax\",\n        options: {\n          count: max\n        },\n        variant: \"body1\",\n        classes: {\n          root: classes.selectedMax\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 197,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(List, {\n        dense: true,\n        className: classnames((_classnames3 = {}, _defineProperty(_classnames3, classes.list, true), _defineProperty(_classnames3, classes.listFetching, fetching), _classnames3)),\n        children: values.map(function (value) {\n          return renderOption(value, 'value');\n        })\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 203,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 128,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MultiSelectAsyncView, \"+CUrQEjn3dm1598y2Y/Mnk6iMhI=\", false, function () {\n  return [useForm];\n});\n\n_c = MultiSelectAsyncView;\nMultiSelectAsyncView.displayName = \"MultiSelectAsyncView\";\nMultiSelectAsyncView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MultiSelectAsyncView\",\n  \"props\": {\n    \"labels\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"minChars\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"hint\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"noResults\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"field\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"query\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"options\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            },\n            \"name\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"values\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"id\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            },\n            \"name\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"fetching\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"max\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"searchMinChars\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"onClear\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"onToggleOption\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.view.js\"] = {\n    name: \"MultiSelectAsyncView\",\n    docgenInfo: MultiSelectAsyncView.__docgenInfo,\n    path: \"src\\\\components\\\\MultiSelectAsync\\\\MultiSelectAsync.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MultiSelectAsyncView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MultiSelectAsync/MultiSelectAsync.view.js"],"names":["React","PropTypes","classnames","useForm","yupResolver","styles","Button","FormContainer","FormText","Translate","Warning","utils","Box","Checkbox","CircularProgress","Collapse","Fade","FormHelperText","InputAdornment","List","ListItem","ListItemIcon","ListItemText","Typography","makeStyles","CloseIcon","SearchIcon","MultiSelectAsyncView","propTypes","id","string","isRequired","field","object","query","options","arrayOf","shape","oneOfType","number","name","values","fetching","bool","max","searchMinChars","placeholder","labels","minChars","hint","noResults","handlers","onClear","func","onToggleOption","defaultProps","classes","validationSchema","form","getValidationSchema","resolver","control","reset","handleSubmit","optionsFiltered","filter","o","some","v","valuesIds","map","ClearBtn","btn","clearBtn","renderOption","option","type","isOption","labelId","generic","isFunction","isMaxReached","root","listItem","listItemIcon","includes","isHintVisible","Boolean","length","isNoResults","isInvalidOrEmptyArray","onSearch","muiComponentProps","fullWidth","input","InputProps","startAdornment","adornmentStart","endAdornment","t","min","isValidArray","list","listMargin","selected","count","selectedMax","listFetching","value"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './MultiSelectAsync.styles';\r\nimport { Button, FormContainer, FormText, Translate, Warning } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  CircularProgress,\r\n  Collapse,\r\n  Fade,\r\n  FormHelperText,\r\n  InputAdornment,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\n\r\nMultiSelectAsyncView.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  field: PropTypes.object.isRequired,\r\n  query: PropTypes.string,\r\n  options: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    })\r\n  ),\r\n  values: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n      name: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n    })\r\n  ).isRequired,\r\n  fetching: PropTypes.bool,\r\n  max: PropTypes.number,\r\n  searchMinChars: PropTypes.number,\r\n  placeholder: PropTypes.string,\r\n  labels: PropTypes.shape({\r\n    minChars: PropTypes.string,\r\n    hint: PropTypes.string,\r\n    noResults: PropTypes.string,\r\n  }),\r\n  handlers: PropTypes.shape({\r\n    onClear: PropTypes.func.isRequired,\r\n    onToggleOption: PropTypes.func,\r\n  }),\r\n};\r\n\r\nMultiSelectAsyncView.defaultProps = {\r\n  labels: {},\r\n};\r\n\r\nexport function MultiSelectAsyncView({ id, field, query, options, values, labels, fetching, max, searchMinChars, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'MultiSelectAsync' })({ fetching });\r\n\r\n  const validationSchema = utils.form.getValidationSchema([field]);\r\n\r\n  const { control, reset, handleSubmit } = useForm({\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const optionsFiltered = options.filter((o) => {\r\n    return !values.some((v) => v.id === o.id);\r\n  });\r\n\r\n  const valuesIds = values.map((v) => v.id);\r\n\r\n  const ClearBtn = (\r\n    <Button\r\n      size=\"small\"\r\n      variant=\"text\"\r\n      icon={CloseIcon}\r\n      onClick={handlers.onClear(reset)}\r\n      nestedClasses={{ btn: classes.clearBtn }}\r\n      data-testid={`multi-select-async-clear-${id}`}\r\n    />\r\n  );\r\n\r\n  const renderOption = (option, type) => {\r\n    const isOption = type === 'option';\r\n    const labelId = `multi-select-async-checkbox-list-${type}-label-${option.id}`;\r\n\r\n    return (\r\n      <ListItem\r\n        key={option.id}\r\n        button\r\n        onClick={() => {\r\n          if (utils.generic.isFunction(handlers.onToggleOption)) {\r\n            handlers.onToggleOption(option);\r\n          }\r\n        }}\r\n        disabled={isOption && isMaxReached}\r\n        classes={{ root: classes.listItem }}\r\n      >\r\n        <ListItemIcon classes={{ root: classes.listItemIcon }}>\r\n          <Checkbox\r\n            checked={valuesIds.includes(option.id)}\r\n            color=\"primary\"\r\n            tabIndex={-1}\r\n            disableRipple\r\n            disabled={isOption && isMaxReached}\r\n            inputProps={{ 'aria-labelledby': labelId }}\r\n          />\r\n        </ListItemIcon>\r\n        <ListItemText id={labelId} primary={option.name} />\r\n      </ListItem>\r\n    );\r\n  };\r\n\r\n  const isHintVisible = Boolean(query && query.length < searchMinChars);\r\n  const isMaxReached = Boolean(values && values.length >= max);\r\n  const isNoResults = Boolean(query && !fetching && !isHintVisible && utils.generic.isInvalidOrEmptyArray(options));\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <FormContainer\r\n        onSubmit={handleSubmit(handlers.onSearch)}\r\n        nestedClasses={{ root: classes.form }}\r\n        data-testid=\"form-multi-select-async-search\"\r\n      >\r\n        <FormText\r\n          {...field}\r\n          control={control}\r\n          muiComponentProps={{\r\n            ...field.muiComponentProps,\r\n            fullWidth: true,\r\n            classes: {\r\n              root: classnames({\r\n                [classes.input]: true,\r\n              }),\r\n            },\r\n            InputProps: {\r\n              startAdornment: (\r\n                <InputAdornment position=\"start\" classes={{ root: classes.adornmentStart }}>\r\n                  <SearchIcon />\r\n                </InputAdornment>\r\n              ),\r\n              endAdornment: (\r\n                <InputAdornment position=\"end\">\r\n                  {fetching && <CircularProgress color=\"inherit\" size={20} />}\r\n                  {query ? ClearBtn : <span />}\r\n                </InputAdornment>\r\n              ),\r\n            },\r\n          }}\r\n        />\r\n        {isHintVisible && (\r\n          <Collapse in={isHintVisible}>\r\n            <Fade in={isHintVisible}>\r\n              <FormHelperText>\r\n                {labels.minChars || utils.string.t('filters.multiSelectAsync.minChars', { min: searchMinChars })}\r\n              </FormHelperText>\r\n            </Fade>\r\n          </Collapse>\r\n        )}\r\n      </FormContainer>\r\n\r\n      <Collapse in={isNoResults}>\r\n        <Fade in={isNoResults}>\r\n          <Box mt={1} mb={1}>\r\n            <Warning type=\"alert\" icon text={labels.noResults || utils.string.t('filters.multiSelectAsync.noResults')} />\r\n          </Box>\r\n        </Fade>\r\n      </Collapse>\r\n\r\n      {(!query || (query && query.length < searchMinChars)) && !utils.generic.isValidArray(values, true) && (\r\n        <Typography variant=\"body1\" classes={{ root: classes.hint }}>\r\n          {labels.hint || utils.string.t('filters.multiSelectAsync.hint')}\r\n        </Typography>\r\n      )}\r\n\r\n      <List\r\n        dense\r\n        className={classnames({\r\n          [classes.list]: true,\r\n          [classes.listMargin]: utils.generic.isValidArray(optionsFiltered, true),\r\n        })}\r\n      >\r\n        {optionsFiltered.map((option) => renderOption(option, 'option'))}\r\n      </List>\r\n\r\n      {utils.generic.isValidArray(values, true) && (\r\n        <Box className={classes.selected}>\r\n          <Translate\r\n            label=\"processingInstructions.filters.selectedMax\"\r\n            options={{ count: max }}\r\n            variant=\"body1\"\r\n            classes={{ root: classes.selectedMax }}\r\n          />\r\n          <List dense className={classnames({ [classes.list]: true, [classes.listFetching]: fetching })}>\r\n            {values.map((value) => renderOption(value, 'value'))}\r\n          </List>\r\n        </Box>\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}