{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsEndorseFaBorder\\\\ProcessingInstructionsEndorseFaBorder.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport moment from 'moment';\nimport uniqBy from 'lodash/uniqBy';\nimport get from 'lodash/get'; // app\n\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\nimport { showModal, getUsersForRole, selectUser, selectUserDetails, selectUsersInRoles, getBordereauPolicyTypes, updateProcessingInstruction, submitProcessingInstruction, getProcessingInstruction, enqueueNotification, selectPiAccountExecutives, selectWorkFlowFrontEndContactNamesForRiskReference, selectAccountExecutivesForRiskReference, updateReferenceDocumentCountLoading, getRiskReferenceDocumentsCount } from 'stores';\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nProcessingInstructionsEndorseFaBorder.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsEndorseFaBorder(_ref) {\n  _s();\n\n  var _instruction$riskRefe,\n      _instruction$details8,\n      _instruction$details9,\n      _instruction$details10,\n      _instruction$details11,\n      _instruction$details12,\n      _instruction$details13,\n      _this = this;\n\n  var instruction = _ref.instruction,\n      handlers = _ref.handlers,\n      childRef = _ref.childRef;\n  var dispatch = useDispatch();\n  var history = useHistory();\n\n  var _useParams = useParams(),\n      id = _useParams.id,\n      step = _useParams.step,\n      tab = _useParams.tab;\n\n  var user = useSelector(selectUser);\n  var users = useSelector(selectUsersInRoles);\n  var currentUser = useSelector(selectUserDetails);\n  var bordereauPolicyTypes = useSelector(function (state) {\n    return get(state, 'processingInstructions.bordereauPolicyTypes');\n  });\n  var accountExecutivesFromRoles = useSelector(selectPiAccountExecutives);\n  var piAccountExecutives = useSelector(selectAccountExecutivesForRiskReference);\n  var piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);\n  var documents = useSelector(function (state) {\n    return get(state, 'processingInstructions.documents');\n  }) || {};\n  var piWorkFlowFrontEndContactNames = piFrontEndContactNames.map(function (type) {\n    return {\n      id: type.id,\n      name: type.value\n    };\n  });\n  var accountExecutiveValues = utils.generic.isValidArray(piAccountExecutives, true) ? piAccountExecutives : accountExecutivesFromRoles;\n  var isDraft = utils.processingInstructions.status.isDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var isReopened = utils.processingInstructions.status.isReopened(instruction === null || instruction === void 0 ? void 0 : instruction.statusId);\n  var businessProcesses = useSelector(function (state) {\n    return get(state, 'referenceData.businessProcesses');\n  });\n  var userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\n  var isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\n  var isReadOnly = !isEditable;\n  var isEndorsement = utils.processingInstructions.isEndorsement(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isBordereau = utils.processingInstructions.isBordereau(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction === null || instruction === void 0 ? void 0 : instruction.processTypeId);\n  var faBorderProcessType = isBordereau || isFeeAndAmendment;\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      defaultValues = _useState2[0],\n      setDefaultValues = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isAnyRiskRefHavingNoDocument = _useState4[0],\n      setIsAnyRiskRefHavingNoDocument = _useState4[1];\n\n  var riskReferences = instruction === null || instruction === void 0 ? void 0 : instruction.riskReferences;\n  var leadRef = instruction === null || instruction === void 0 ? void 0 : (_instruction$riskRefe = instruction.riskReferences) === null || _instruction$riskRefe === void 0 ? void 0 : _instruction$riskRefe.find(function (r) {\n    return r.leadPolicy;\n  });\n  var leadFrontEndContactNameValue = leadRef === null || leadRef === void 0 ? void 0 : leadRef.workFlowFrontEndContactName;\n  var leadRefAccountExecutiveName = leadRef === null || leadRef === void 0 ? void 0 : leadRef.accountExecutive;\n  var bordereauTypes = [{\n    id: 1,\n    name: 'premium',\n    value: 'premium',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium')\n  }, {\n    id: 2,\n    name: 'claims',\n    value: 'claims',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims')\n  }, {\n    id: 3,\n    name: 'combined',\n    value: 'combined',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined')\n  }];\n  var feeAndAmendmentTypes = [{\n    name: 'fee',\n    value: 'fee',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee')\n  }, {\n    name: 'amendment',\n    value: 'amendment',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment')\n  }];\n  var tabs = [{\n    value: 'processing-instruction',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi')\n  }, {\n    value: 'documents',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc')\n  }];\n  var isValidTab = tabs.map(function (item) {\n    return item.value;\n  }).includes(tab);\n\n  var _useState5 = useState(isValidTab ? tab : 'processing-instruction'),\n      _useState6 = _slicedToArray(_useState5, 2),\n      selectedTab = _useState6[0],\n      setSelectedTab = _useState6[1];\n\n  useEffect(function () {\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\n    dispatch(getBordereauPolicyTypes());\n  }, [dispatch]);\n  useEffect(function () {\n    var _childRef$current, _childRef$current$pro;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current = childRef.current) === null || _childRef$current === void 0 ? void 0 : (_childRef$current$pro = _childRef$current.props) === null || _childRef$current$pro === void 0 ? void 0 : _childRef$current$pro.resetFunc;\n\n    var updatedDefaultValues = _objectSpread({}, utils.form.getInitialValues(fields));\n\n    setDefaultValues(updatedDefaultValues);\n\n    if (utils.generic.isFunction(reset)) {\n      reset(updatedDefaultValues, {\n        keepDirty: false\n      });\n    }\n  }, [instruction] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var getRiskReferenceDocumentCount = function getRiskReferenceDocumentCount() {\n    if (utils.generic.isValidArray(documents === null || documents === void 0 ? void 0 : documents.riskReferences, true)) {\n      var _documents$riskRefere;\n\n      dispatch(updateReferenceDocumentCountLoading(true));\n      var referenceList = documents === null || documents === void 0 ? void 0 : (_documents$riskRefere = documents.riskReferences) === null || _documents$riskRefere === void 0 ? void 0 : _documents$riskRefere.map(function (refData) {\n        return {\n          endorsementId: refData.endorsementId,\n          endorsementNumber: refData.endorsementNumber,\n          riskRefId: refData.riskRefId,\n          xbInstanceId: refData.xbInstanceId,\n          xbPolicyId: refData.xbPolicyId\n        };\n      });\n      var documentTypeValue = isEndorsement ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription : faBorderProcessType ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then(function (response) {\n        if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n          var _response$data;\n\n          setIsAnyRiskRefHavingNoDocument(response === null || response === void 0 ? void 0 : (_response$data = response.data) === null || _response$data === void 0 ? void 0 : _response$data.some(function (a) {\n            return a.documentCount === 0;\n          }));\n        }\n      });\n    }\n  };\n\n  useEffect(function () {\n    getRiskReferenceDocumentCount();\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var filterUsersByRole = function filterUsersByRole(roleNames) {\n    return riskReferences === null || riskReferences === void 0 ? void 0 : riskReferences.reduce(function (acc, cur) {\n      var groupDepartXbInstanceIds = \"\".concat(cur.departmentId, \"-\").concat(cur.xbInstanceId);\n      return [].concat(_toConsumableArray(acc), _toConsumableArray(users.filter(function (u) {\n        return roleNames.includes(u.userRole);\n      }).filter(function (u) {\n        var _u$departmentId;\n\n        return (_u$departmentId = u.departmentId) === null || _u$departmentId === void 0 ? void 0 : _u$departmentId.split(',').map(function (x) {\n          return x.trim();\n        }).includes(groupDepartXbInstanceIds);\n      }).map(function (u) {\n        return {\n          id: u.userId,\n          name: u.fullName + ' - ' + u.emailId\n        };\n      })));\n    }, []);\n  };\n\n  var frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id');\n  var frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true) ? piWorkFlowFrontEndContactNames : frontEndContactsForRoles;\n\n  var getFrontEndContactId = function getFrontEndContactId() {\n    var _instruction$details, _instruction$details2;\n\n    var frontEndContactId = (_instruction$details = instruction.details) === null || _instruction$details === void 0 ? void 0 : _instruction$details.frontEndContactId;\n    var workFlowFrontEndContactName = (_instruction$details2 = instruction.details) === null || _instruction$details2 === void 0 ? void 0 : _instruction$details2.workFlowFrontEndContactName;\n    var user;\n\n    if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\n      if (workFlowFrontEndContactName) {\n        var _user;\n\n        user = piWorkFlowFrontEndContactNames.find(function (fec) {\n          return fec.id === frontEndContactId;\n        });\n        frontEndContactId = (_user = user) === null || _user === void 0 ? void 0 : _user.id;\n      } else if (leadFrontEndContactNameValue) {\n        var frontEndContactValue = piWorkFlowFrontEndContactNames === null || piWorkFlowFrontEndContactNames === void 0 ? void 0 : piWorkFlowFrontEndContactNames.find(function (type) {\n          var _type$name;\n\n          return (type === null || type === void 0 ? void 0 : (_type$name = type.name) === null || _type$name === void 0 ? void 0 : _type$name.toLowerCase()) === (leadFrontEndContactNameValue === null || leadFrontEndContactNameValue === void 0 ? void 0 : leadFrontEndContactNameValue.toLowerCase());\n        });\n        frontEndContactId = frontEndContactValue === null || frontEndContactValue === void 0 ? void 0 : frontEndContactValue.id;\n      }\n    } else if (!frontEndContactId && utils.generic.isValidArray(frontEndContacts, true)) {\n      var _user2;\n\n      user = frontEndContacts.find(function (fec) {\n        return fec.id === (currentUser === null || currentUser === void 0 ? void 0 : currentUser.id);\n      });\n      frontEndContactId = (_user2 = user) === null || _user2 === void 0 ? void 0 : _user2.id;\n    }\n\n    return frontEndContactId || '';\n  };\n\n  var getSelectedFrontEndContactName = function getSelectedFrontEndContactName(frontEndContactd) {\n    var _piWorkFlowFrontEndCo;\n\n    var selectedFrontEndContactName = piWorkFlowFrontEndContactNames === null || piWorkFlowFrontEndContactNames === void 0 ? void 0 : (_piWorkFlowFrontEndCo = piWorkFlowFrontEndContactNames.find(function (frontEndContact) {\n      return (frontEndContact === null || frontEndContact === void 0 ? void 0 : frontEndContact.id) === frontEndContactd;\n    })) === null || _piWorkFlowFrontEndCo === void 0 ? void 0 : _piWorkFlowFrontEndCo.name;\n    return selectedFrontEndContactName;\n  };\n\n  var getAccountExecutiveId = function getAccountExecutiveId() {\n    var _instruction$details3;\n\n    var accountExecutiveId = instruction === null || instruction === void 0 ? void 0 : (_instruction$details3 = instruction.details) === null || _instruction$details3 === void 0 ? void 0 : _instruction$details3.accountExecutiveId;\n    var user;\n\n    if (utils.generic.isValidArray(piAccountExecutives, true) && leadRefAccountExecutiveName) {\n      if (accountExecutiveId) {\n        var _user3;\n\n        user = piAccountExecutives.find(function (type) {\n          return type.id === accountExecutiveId;\n        });\n        accountExecutiveId = (_user3 = user) === null || _user3 === void 0 ? void 0 : _user3.id;\n      } else if (leadRefAccountExecutiveName) {\n        var leadAccountExecutive = piAccountExecutives === null || piAccountExecutives === void 0 ? void 0 : piAccountExecutives.find(function (type) {\n          return type.value.toLowerCase() === (leadRefAccountExecutiveName === null || leadRefAccountExecutiveName === void 0 ? void 0 : leadRefAccountExecutiveName.toLowerCase());\n        });\n        accountExecutiveId = leadAccountExecutive === null || leadAccountExecutive === void 0 ? void 0 : leadAccountExecutive.id;\n      }\n    } else if (!accountExecutiveId && utils.generic.isValidArray(accountExecutiveValues, true)) {\n      var _user4;\n\n      user = accountExecutiveValues.find(function (ae) {\n        var _instruction$details4;\n\n        return ae.userId === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details4 = instruction.details) === null || _instruction$details4 === void 0 ? void 0 : _instruction$details4.accountExecutiveId);\n      });\n      accountExecutiveId = (_user4 = user) === null || _user4 === void 0 ? void 0 : _user4.id;\n    }\n\n    return accountExecutiveId || '';\n  };\n\n  var getSelectedAccountExecutiveName = function getSelectedAccountExecutiveName(accountExecutiveId) {\n    var _piAccountExecutives$;\n\n    var selectedAccountExecutiveName = piAccountExecutives === null || piAccountExecutives === void 0 ? void 0 : (_piAccountExecutives$ = piAccountExecutives.find(function (accountExec) {\n      return (accountExec === null || accountExec === void 0 ? void 0 : accountExec.id) === accountExecutiveId;\n    })) === null || _piAccountExecutives$ === void 0 ? void 0 : _piAccountExecutives$.value;\n    return selectedAccountExecutiveName;\n  };\n\n  var getBordereauPolicyTypeId = function getBordereauPolicyTypeId() {\n    var _instruction$details5;\n\n    var bordereauPolicyTypeId = (_instruction$details5 = instruction.details) === null || _instruction$details5 === void 0 ? void 0 : _instruction$details5.bordereauPolicyTypeId;\n\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\n      var item = bordereauPolicyTypes.find(function (type) {\n        var _instruction$details6;\n\n        return type.bordereauPolicyTypeID === (instruction === null || instruction === void 0 ? void 0 : (_instruction$details6 = instruction.details) === null || _instruction$details6 === void 0 ? void 0 : _instruction$details6.bordereauPolicyTypeId);\n      });\n      bordereauPolicyTypeId = item === null || item === void 0 ? void 0 : item.bordereauPolicyTypeID;\n    }\n\n    return bordereauPolicyTypeId || '';\n  };\n\n  var getBordereauTypeValue = function getBordereauTypeValue() {\n    var _instruction$details7;\n\n    var defaultId = 1;\n    var defaultType = 'premium';\n    var bordereauTypeId = (instruction === null || instruction === void 0 ? void 0 : (_instruction$details7 = instruction.details) === null || _instruction$details7 === void 0 ? void 0 : _instruction$details7.bordereauTypeId) || defaultId;\n    var obj = bordereauTypes.find(function (type) {\n      return type.id === bordereauTypeId;\n    });\n    return (obj === null || obj === void 0 ? void 0 : obj.value) || defaultType;\n  };\n\n  var fields = [{\n    name: 'frontEndContactId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\n    value: getFrontEndContactId(),\n    options: frontEndContacts,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'accountExecutiveId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.accountExecutive'),\n    value: getAccountExecutiveId(),\n    options: accountExecutiveValues,\n    optionKey: 'id',\n    optionLabel: 'value',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'frontEndSendDocs',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details8 = instruction.details) === null || _instruction$details8 === void 0 ? void 0 : _instruction$details8.frontEndSendDocs) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'highPriority',\n    type: 'checkbox',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details9 = instruction.details) === null || _instruction$details9 === void 0 ? void 0 : _instruction$details9.highPriority) || false,\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    name: 'notes',\n    type: 'textarea',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details10 = instruction.details) === null || _instruction$details10 === void 0 ? void 0 : _instruction$details10.notes) || '',\n    muiComponentProps: {\n      multiline: true,\n      minRows: 5,\n      maxRows: 10,\n      disabled: isReadOnly\n    }\n  }].concat(_toConsumableArray(isEndorsement ? [{\n    name: 'ppwOrPpc',\n    type: 'checkbox',\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details11 = instruction.details) === null || _instruction$details11 === void 0 ? void 0 : _instruction$details11.ppwOrPpc) || false,\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isEndorsement || isFeeAndAmendment ? [{\n    name: 'isNonPremium',\n    type: 'checkbox',\n    value: (leadRef === null || leadRef === void 0 ? void 0 : leadRef.isNonPremium) === 'Yes',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\n    disabled: true\n  }] : []), _toConsumableArray(isFeeAndAmendment ? [{\n    name: 'feeOrAmendment',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details12 = instruction.details) === null || _instruction$details12 === void 0 ? void 0 : _instruction$details12.feeOrAmendment) || 'fee',\n    options: feeAndAmendmentTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []), _toConsumableArray(isBordereau ? [{\n    name: 'bordereauPolicyTypeId',\n    type: 'select',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\n    value: getBordereauPolicyTypeId(),\n    options: bordereauPolicyTypes,\n    optionKey: 'bordereauPolicyTypeID',\n    optionLabel: 'bordereauPolicyTypeDetails',\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }, {\n    type: 'datepicker',\n    name: 'bordereauPeriod',\n    label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\n    value: (instruction === null || instruction === void 0 ? void 0 : (_instruction$details13 = instruction.details) === null || _instruction$details13 === void 0 ? void 0 : _instruction$details13.bordereauPeriod) || null,\n    outputFormat: 'iso',\n    placeholder: 'MM YYYY',\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'),\n      disabled: isReadOnly\n    },\n    muiPickerProps: {\n      views: ['year', 'month'],\n      format: 'MM YYYY',\n      clearable: true\n    }\n  }, {\n    name: 'bordereauTypeId',\n    type: 'radio',\n    title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\n    value: getBordereauTypeValue(),\n    options: bordereauTypes,\n    muiFormGroupProps: {\n      row: true\n    },\n    muiComponentProps: {\n      disabled: isReadOnly\n    }\n  }] : []));\n\n  var getUpdatedInstruction = function getUpdatedInstruction(instruction, formValues) {\n    var _bordereauTypes$find;\n\n    return _objectSpread(_objectSpread({}, instruction), {}, {\n      details: _objectSpread(_objectSpread({}, formValues), {}, {\n        instructionId: instruction === null || instruction === void 0 ? void 0 : instruction.id,\n        accountExecutive: getSelectedAccountExecutiveName(formValues.accountExecutiveId),\n        workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId)\n      }, isBordereau && {\n        bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\n        bordereauTypeId: ((_bordereauTypes$find = bordereauTypes.find(function (type) {\n          return type.value === formValues.bordereauTypeId;\n        })) === null || _bordereauTypes$find === void 0 ? void 0 : _bordereauTypes$find.id) || null\n      })\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    var _childRef$current2, _childRef$current2$pr;\n\n    var reset = childRef === null || childRef === void 0 ? void 0 : (_childRef$current2 = childRef.current) === null || _childRef$current2 === void 0 ? void 0 : (_childRef$current2$pr = _childRef$current2.props) === null || _childRef$current2$pr === void 0 ? void 0 : _childRef$current2$pr.resetFunc;\n\n    if (utils.generic.isFunction(reset)) {\n      reset(defaultValues, {\n        keepDirty: false\n      });\n    }\n  };\n\n  var handleSubmitBordereau = function handleSubmitBordereau() {\n    var _childRef$current3, _childRef$current3$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current3 = childRef.current) === null || _childRef$current3 === void 0 ? void 0 : (_childRef$current3$pr = _childRef$current3.props) === null || _childRef$current3$pr === void 0 ? void 0 : _childRef$current3$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n    var bordereauTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauTypeId);\n    var bordereauPeriod = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPeriod);\n    var bordereauPolicyTypeId = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.bordereauPolicyTypeId);\n\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\n      proceedToSubmission();\n    } else if (!isFrontEndIdSelected) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n    } else if (!bordereauTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\n    } else if (!bordereauPeriod) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\n    } else if (!bordereauPolicyTypeId) {\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\n    }\n  };\n\n  var handleSubmitEndorseFa = function handleSubmitEndorseFa() {\n    var _childRef$current4, _childRef$current4$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current4 = childRef.current) === null || _childRef$current4 === void 0 ? void 0 : (_childRef$current4$pr = _childRef$current4.props) === null || _childRef$current4$pr === void 0 ? void 0 : _childRef$current4$pr.values) || {};\n    var isFrontEndIdSelected = Boolean(formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId);\n\n    if (isFrontEndIdSelected) {\n      proceedToSubmission();\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSave = function handleSave() {\n    var _childRef$current5, _childRef$current5$pr;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current5 = childRef.current) === null || _childRef$current5 === void 0 ? void 0 : (_childRef$current5$pr = _childRef$current5.props) === null || _childRef$current5$pr === void 0 ? void 0 : _childRef$current5$pr.values) || {};\n    var isFrontEndIdSelected = (formValues === null || formValues === void 0 ? void 0 : formValues.frontEndContactId) !== null;\n\n    if (isFrontEndIdSelected) {\n      var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n      dispatch(updateProcessingInstruction(updatedInstruction));\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\n  };\n\n  var handleSubmit = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n      var response;\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getProcessingInstruction(id));\n\n            case 2:\n              response = _context.sent;\n\n              if (response) {\n                if (isEndorsement && isAnyRiskRefHavingNoDocument) {\n                  mandatoryDocumentsNotUploaded();\n                } else {\n                  if (isBordereau) {\n                    handleSubmitBordereau();\n                  } else {\n                    handleSubmitEndorseFa();\n                  }\n                }\n              }\n\n            case 4:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleSubmit() {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var mandatoryDocumentsNotUploaded = function mandatoryDocumentsNotUploaded() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\n        maxWidth: 'xs',\n        componentProps: {\n          hideCancelButton: true,\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(\"span\", {\n            children: utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 520,\n            columnNumber: 29\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary'\n          },\n          submitHandler: function submitHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  var proceedToSubmission = function proceedToSubmission() {\n    var _childRef$current6, _childRef$current6$pr, _businessProcesses$fi;\n\n    var formValues = (childRef === null || childRef === void 0 ? void 0 : (_childRef$current6 = childRef.current) === null || _childRef$current6 === void 0 ? void 0 : (_childRef$current6$pr = _childRef$current6.props) === null || _childRef$current6$pr === void 0 ? void 0 : _childRef$current6$pr.values) || {};\n    var updatedInstruction = getUpdatedInstruction(instruction, formValues);\n    var businessProcess = businessProcesses === null || businessProcesses === void 0 ? void 0 : (_businessProcesses$fi = businessProcesses.find(function (bp) {\n      return bp.businessProcessID === updatedInstruction.businessProcessId;\n    })) === null || _businessProcesses$fi === void 0 ? void 0 : _businessProcesses$fi.businessProcessName;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: 'processingInstructions.authorisations.form.title',\n        fullWidth: true,\n        maxWidth: 'sm',\n        componentProps: {\n          confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\n          cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\n          confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\n          confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\n          note: utils.string.t('processingInstructions.authorisations.form.note'),\n          submitHandler: function submitHandler() {\n            dispatch(submitProcessingInstruction(_objectSpread(_objectSpread({}, updatedInstruction), {}, {\n              businessProcess: businessProcess,\n              statusId: PI_STATUS_SUBMITTED_PROCESSING\n            }))).then(function (res) {\n              // check that the response was successful\n              history.push('/processing-instructions');\n              dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var toggleTab = function toggleTab(tab) {\n    setSelectedTab(tab);\n    history.replace(\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(id).concat(step ? \"/\".concat(step) : '').concat(tab ? \"/\".concat(tab) : ''));\n  }; // abort\n\n\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\n  return /*#__PURE__*/_jsxDEV(ProcessingInstructionsEndorseFaBorderView, {\n    instruction: instruction,\n    leadRef: leadRef,\n    tabs: tabs,\n    selectedTab: selectedTab,\n    fields: fields,\n    defaultValues: defaultValues,\n    isEndorsement: isEndorsement,\n    isBordereau: isBordereau,\n    isFeeAndAmendment: isFeeAndAmendment,\n    isReadOnly: isReadOnly,\n    isSubmittedProcessing: isSubmittedProcessing,\n    handlers: _objectSpread(_objectSpread({}, handlers), {}, {\n      cancel: handleCancel,\n      save: handleSave,\n      submit: handleSubmit,\n      toggleTab: toggleTab\n    }),\n    ref: childRef\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 579,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsEndorseFaBorder, \"GxT5r/FAixzoRwjElHqnXghJ3rM=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ProcessingInstructionsEndorseFaBorder;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsEndorseFaBorder\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsEndorseFaBorder/ProcessingInstructionsEndorseFaBorder.js"],"names":["React","useState","useEffect","PropTypes","useDispatch","useSelector","useHistory","useParams","moment","uniqBy","get","ProcessingInstructionsEndorseFaBorderView","showModal","getUsersForRole","selectUser","selectUserDetails","selectUsersInRoles","getBordereauPolicyTypes","updateProcessingInstruction","submitProcessingInstruction","getProcessingInstruction","enqueueNotification","selectPiAccountExecutives","selectWorkFlowFrontEndContactNamesForRiskReference","selectAccountExecutivesForRiskReference","updateReferenceDocumentCountLoading","getRiskReferenceDocumentsCount","PI_STATUS_SUBMITTED_PROCESSING","FRONT_END_CONTACT","OPERATIONS_LEAD","AUTHORISED_SIGNATORY","utils","config","constants","ProcessingInstructionsEndorseFaBorder","propTypes","instruction","object","isRequired","handlers","shape","back","func","childRef","dispatch","history","id","step","tab","user","users","currentUser","bordereauPolicyTypes","state","accountExecutivesFromRoles","piAccountExecutives","piFrontEndContactNames","documents","piWorkFlowFrontEndContactNames","map","type","name","value","accountExecutiveValues","generic","isValidArray","isDraft","processingInstructions","status","statusId","isRejectedDraft","isSubmittedProcessing","isReopened","businessProcesses","userHasWritePermission","app","access","feature","isEditable","isReadOnly","isEndorsement","processTypeId","isBordereau","isFeeAndAmendment","faBorderProcessType","defaultValues","setDefaultValues","isAnyRiskRefHavingNoDocument","setIsAnyRiskRefHavingNoDocument","riskReferences","leadRef","find","r","leadPolicy","leadFrontEndContactNameValue","workFlowFrontEndContactName","leadRefAccountExecutiveName","accountExecutive","bordereauTypes","label","string","t","feeAndAmendmentTypes","tabs","isValidTab","item","includes","selectedTab","setSelectedTab","reset","current","props","resetFunc","updatedDefaultValues","form","getInitialValues","fields","isFunction","keepDirty","getRiskReferenceDocumentCount","referenceList","refData","endorsementId","endorsementNumber","riskRefId","xbInstanceId","xbPolicyId","documentTypeValue","PI_ENDORSEMENT_TYPE_DOCUMENT","documentTypeDescription","PI_FABORDER_TYPE_DOCUMENT","PI_CLOSING_FDO_TYPE_DOCUMENT","then","response","API_RESPONSE_OK","data","some","a","documentCount","filterUsersByRole","roleNames","reduce","acc","cur","groupDepartXbInstanceIds","departmentId","filter","u","userRole","split","x","trim","userId","fullName","emailId","frontEndContactsForRoles","frontEndContacts","getFrontEndContactId","frontEndContactId","details","fec","frontEndContactValue","toLowerCase","getSelectedFrontEndContactName","frontEndContactd","selectedFrontEndContactName","frontEndContact","getAccountExecutiveId","accountExecutiveId","leadAccountExecutive","ae","getSelectedAccountExecutiveName","selectedAccountExecutiveName","accountExec","getBordereauPolicyTypeId","bordereauPolicyTypeId","bordereauPolicyTypeID","getBordereauTypeValue","defaultId","defaultType","bordereauTypeId","obj","options","optionKey","optionLabel","muiComponentProps","disabled","frontEndSendDocs","highPriority","notes","multiline","minRows","maxRows","ppwOrPpc","isNonPremium","title","feeOrAmendment","muiFormGroupProps","row","bordereauPeriod","outputFormat","placeholder","fullWidth","helperText","muiPickerProps","views","format","clearable","getUpdatedInstruction","formValues","instructionId","handleCancel","handleSubmitBordereau","values","isFrontEndIdSelected","Boolean","proceedToSubmission","handleSubmitEndorseFa","handleSave","updatedInstruction","handleSubmit","mandatoryDocumentsNotUploaded","component","maxWidth","componentProps","hideCancelButton","confirmLabel","confirmMessage","buttonColors","confirm","submitHandler","handleClose","businessProcess","bp","businessProcessID","businessProcessId","businessProcessName","cancelLabel","confirmMessageText","note","res","push","toggleTab","replace","routes","steps","isInvalidOrEmptyArray","cancel","save","submit"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport moment from 'moment';\r\nimport uniqBy from 'lodash/uniqBy';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport ProcessingInstructionsEndorseFaBorderView from './ProcessingInstructionsEndorseFaBorder.view';\r\nimport {\r\n  showModal,\r\n  getUsersForRole,\r\n  selectUser,\r\n  selectUserDetails,\r\n  selectUsersInRoles,\r\n  getBordereauPolicyTypes,\r\n  updateProcessingInstruction,\r\n  submitProcessingInstruction,\r\n  getProcessingInstruction,\r\n  enqueueNotification,\r\n  selectPiAccountExecutives,\r\n  selectWorkFlowFrontEndContactNamesForRiskReference,\r\n  selectAccountExecutivesForRiskReference,\r\n  updateReferenceDocumentCountLoading,\r\n  getRiskReferenceDocumentsCount,\r\n} from 'stores';\r\nimport { PI_STATUS_SUBMITTED_PROCESSING, FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\nProcessingInstructionsEndorseFaBorder.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsEndorseFaBorder({ instruction, handlers, childRef }) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const { id, step, tab } = useParams();\r\n\r\n  const user = useSelector(selectUser);\r\n  const users = useSelector(selectUsersInRoles);\r\n  const currentUser = useSelector(selectUserDetails);\r\n  const bordereauPolicyTypes = useSelector((state) => get(state, 'processingInstructions.bordereauPolicyTypes'));\r\n  const accountExecutivesFromRoles = useSelector(selectPiAccountExecutives);\r\n  const piAccountExecutives = useSelector(selectAccountExecutivesForRiskReference);\r\n  const piFrontEndContactNames = useSelector(selectWorkFlowFrontEndContactNamesForRiskReference);\r\n  const documents = useSelector((state) => get(state, 'processingInstructions.documents')) || {};\r\n\r\n  const piWorkFlowFrontEndContactNames = piFrontEndContactNames.map((type) => {\r\n    return {\r\n      id: type.id,\r\n      name: type.value,\r\n    };\r\n  });\r\n\r\n  const accountExecutiveValues = utils.generic.isValidArray(piAccountExecutives, true) ? piAccountExecutives : accountExecutivesFromRoles;\r\n\r\n  const isDraft = utils.processingInstructions.status.isDraft(instruction?.statusId);\r\n  const isRejectedDraft = utils.processingInstructions.status.isRejectedDraft(instruction?.statusId);\r\n  const isSubmittedProcessing = utils.processingInstructions.status.isSubmittedProcessing(instruction?.statusId);\r\n  const isReopened = utils.processingInstructions.status.isReopened(instruction?.statusId);\r\n  const businessProcesses = useSelector((state) => get(state, 'referenceData.businessProcesses'));\r\n\r\n  const userHasWritePermission = utils.app.access.feature('processingInstructions.processingInstructions', ['create', 'update'], user);\r\n  const isEditable = userHasWritePermission && (isDraft || isRejectedDraft || isReopened);\r\n  const isReadOnly = !isEditable;\r\n\r\n  const isEndorsement = utils.processingInstructions.isEndorsement(instruction?.processTypeId);\r\n  const isBordereau = utils.processingInstructions.isBordereau(instruction?.processTypeId);\r\n  const isFeeAndAmendment = utils.processingInstructions.isFeeAndAmendment(instruction?.processTypeId);\r\n  const faBorderProcessType = isBordereau || isFeeAndAmendment;\r\n\r\n  const [defaultValues, setDefaultValues] = useState();\r\n  const [isAnyRiskRefHavingNoDocument, setIsAnyRiskRefHavingNoDocument] = useState(false);\r\n\r\n  const riskReferences = instruction?.riskReferences;\r\n  const leadRef = instruction?.riskReferences?.find((r) => r.leadPolicy);\r\n\r\n  const leadFrontEndContactNameValue = leadRef?.workFlowFrontEndContactName;\r\n  const leadRefAccountExecutiveName = leadRef?.accountExecutive;\r\n\r\n  const bordereauTypes = [\r\n    {\r\n      id: 1,\r\n      name: 'premium',\r\n      value: 'premium',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.premium'),\r\n    },\r\n    {\r\n      id: 2,\r\n      name: 'claims',\r\n      value: 'claims',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.claims'),\r\n    },\r\n    {\r\n      id: 3,\r\n      name: 'combined',\r\n      value: 'combined',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.combined'),\r\n    },\r\n  ];\r\n\r\n  const feeAndAmendmentTypes = [\r\n    {\r\n      name: 'fee',\r\n      value: 'fee',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.fee'),\r\n    },\r\n    {\r\n      name: 'amendment',\r\n      value: 'amendment',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.amendment'),\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'processing-instruction', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.pi') },\r\n    { value: 'documents', label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.tabs.attachDoc') },\r\n  ];\r\n\r\n  const isValidTab = tabs.map((item) => item.value).includes(tab);\r\n\r\n  const [selectedTab, setSelectedTab] = useState(isValidTab ? tab : 'processing-instruction');\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersForRole([FRONT_END_CONTACT, OPERATIONS_LEAD, AUTHORISED_SIGNATORY]));\r\n    dispatch(getBordereauPolicyTypes());\r\n  }, [dispatch]);\r\n\r\n  useEffect(\r\n    () => {\r\n      const reset = childRef?.current?.props?.resetFunc;\r\n      const updatedDefaultValues = {\r\n        ...utils.form.getInitialValues(fields),\r\n      };\r\n\r\n      setDefaultValues(updatedDefaultValues);\r\n\r\n      if (utils.generic.isFunction(reset)) {\r\n        reset(updatedDefaultValues, {\r\n          keepDirty: false,\r\n        });\r\n      }\r\n    },\r\n    [instruction] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const getRiskReferenceDocumentCount = () => {\r\n    if (utils.generic.isValidArray(documents?.riskReferences, true)) {\r\n      dispatch(updateReferenceDocumentCountLoading(true));\r\n      const referenceList = documents?.riskReferences?.map((refData) => {\r\n        return {\r\n          endorsementId: refData.endorsementId,\r\n          endorsementNumber: refData.endorsementNumber,\r\n          riskRefId: refData.riskRefId,\r\n          xbInstanceId: refData.xbInstanceId,\r\n          xbPolicyId: refData.xbPolicyId,\r\n        };\r\n      });\r\n      const documentTypeValue = isEndorsement\r\n        ? constants.PI_ENDORSEMENT_TYPE_DOCUMENT.documentTypeDescription\r\n        : faBorderProcessType\r\n        ? constants.PI_FABORDER_TYPE_DOCUMENT.documentTypeDescription\r\n        : constants.PI_CLOSING_FDO_TYPE_DOCUMENT.documentTypeDescription;\r\n      dispatch(getRiskReferenceDocumentsCount(referenceList, documentTypeValue)).then((response) => {\r\n        if (response?.status === constants.API_RESPONSE_OK) {\r\n          setIsAnyRiskRefHavingNoDocument(response?.data?.some((a) => a.documentCount === 0));\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getRiskReferenceDocumentCount();\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const filterUsersByRole = (roleNames) => {\r\n    return riskReferences?.reduce((acc, cur) => {\r\n      const groupDepartXbInstanceIds = `${cur.departmentId}-${cur.xbInstanceId}`;\r\n      return [\r\n        ...acc,\r\n        ...users\r\n          .filter((u) => roleNames.includes(u.userRole))\r\n          .filter((u) =>\r\n            u.departmentId\r\n              ?.split(',')\r\n              .map((x) => x.trim())\r\n              .includes(groupDepartXbInstanceIds)\r\n          )\r\n          .map((u) => {\r\n            return { id: u.userId, name: u.fullName + ' - ' + u.emailId };\r\n          }),\r\n      ];\r\n    }, []);\r\n  };\r\n\r\n  const frontEndContactsForRoles = uniqBy(filterUsersByRole([FRONT_END_CONTACT, OPERATIONS_LEAD]), 'id');\r\n  const frontEndContacts = utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)\r\n    ? piWorkFlowFrontEndContactNames\r\n    : frontEndContactsForRoles;\r\n\r\n  const getFrontEndContactId = () => {\r\n    let frontEndContactId = instruction.details?.frontEndContactId;\r\n    const workFlowFrontEndContactName = instruction.details?.workFlowFrontEndContactName;\r\n    let user;\r\n\r\n    if (utils.generic.isValidArray(piWorkFlowFrontEndContactNames, true)) {\r\n      if (workFlowFrontEndContactName) {\r\n        user = piWorkFlowFrontEndContactNames.find((fec) => fec.id === frontEndContactId);\r\n        frontEndContactId = user?.id;\r\n      } else if (leadFrontEndContactNameValue) {\r\n        const frontEndContactValue = piWorkFlowFrontEndContactNames?.find(\r\n          (type) => type?.name?.toLowerCase() === leadFrontEndContactNameValue?.toLowerCase()\r\n        );\r\n        frontEndContactId = frontEndContactValue?.id;\r\n      }\r\n    } else if (!frontEndContactId && utils.generic.isValidArray(frontEndContacts, true)) {\r\n      user = frontEndContacts.find((fec) => fec.id === currentUser?.id);\r\n      frontEndContactId = user?.id;\r\n    }\r\n\r\n    return frontEndContactId || '';\r\n  };\r\n\r\n  const getSelectedFrontEndContactName = (frontEndContactd) => {\r\n    const selectedFrontEndContactName = piWorkFlowFrontEndContactNames?.find(\r\n      (frontEndContact) => frontEndContact?.id === frontEndContactd\r\n    )?.name;\r\n    return selectedFrontEndContactName;\r\n  };\r\n\r\n  const getAccountExecutiveId = () => {\r\n    let accountExecutiveId = instruction?.details?.accountExecutiveId;\r\n    let user;\r\n\r\n    if (utils.generic.isValidArray(piAccountExecutives, true) && leadRefAccountExecutiveName) {\r\n      if (accountExecutiveId) {\r\n        user = piAccountExecutives.find((type) => type.id === accountExecutiveId);\r\n        accountExecutiveId = user?.id;\r\n      } else if (leadRefAccountExecutiveName) {\r\n        const leadAccountExecutive = piAccountExecutives?.find(\r\n          (type) => type.value.toLowerCase() === leadRefAccountExecutiveName?.toLowerCase()\r\n        );\r\n        accountExecutiveId = leadAccountExecutive?.id;\r\n      }\r\n    } else if (!accountExecutiveId && utils.generic.isValidArray(accountExecutiveValues, true)) {\r\n      user = accountExecutiveValues.find((ae) => ae.userId === instruction?.details?.accountExecutiveId);\r\n      accountExecutiveId = user?.id;\r\n    }\r\n\r\n    return accountExecutiveId || '';\r\n  };\r\n\r\n  const getSelectedAccountExecutiveName = (accountExecutiveId) => {\r\n    const selectedAccountExecutiveName = piAccountExecutives?.find((accountExec) => accountExec?.id === accountExecutiveId)?.value;\r\n    return selectedAccountExecutiveName;\r\n  };\r\n\r\n  const getBordereauPolicyTypeId = () => {\r\n    let bordereauPolicyTypeId = instruction.details?.bordereauPolicyTypeId;\r\n\r\n    if (!bordereauPolicyTypeId && utils.generic.isValidArray(bordereauPolicyTypes, true)) {\r\n      const item = bordereauPolicyTypes.find((type) => type.bordereauPolicyTypeID === instruction?.details?.bordereauPolicyTypeId);\r\n      bordereauPolicyTypeId = item?.bordereauPolicyTypeID;\r\n    }\r\n\r\n    return bordereauPolicyTypeId || '';\r\n  };\r\n\r\n  const getBordereauTypeValue = () => {\r\n    const defaultId = 1;\r\n    const defaultType = 'premium';\r\n    const bordereauTypeId = instruction?.details?.bordereauTypeId || defaultId;\r\n\r\n    const obj = bordereauTypes.find((type) => type.id === bordereauTypeId);\r\n    return obj?.value || defaultType;\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'frontEndContactId',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndContact'),\r\n      value: getFrontEndContactId(),\r\n      options: frontEndContacts,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'accountExecutiveId',\r\n      type: 'select',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.accountExecutive'),\r\n      value: getAccountExecutiveId(),\r\n      options: accountExecutiveValues,\r\n      optionKey: 'id',\r\n      optionLabel: 'value',\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'frontEndSendDocs',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.frontEndSendDocuments'),\r\n      value: instruction?.details?.frontEndSendDocs || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'highPriority',\r\n      type: 'checkbox',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.highPriority'),\r\n      value: instruction?.details?.highPriority || false,\r\n      muiComponentProps: {\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    {\r\n      name: 'notes',\r\n      type: 'textarea',\r\n      label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.notes.label'),\r\n      value: instruction?.details?.notes || '',\r\n      muiComponentProps: {\r\n        multiline: true,\r\n        minRows: 5,\r\n        maxRows: 10,\r\n        disabled: isReadOnly,\r\n      },\r\n    },\r\n    ...(isEndorsement\r\n      ? [\r\n          {\r\n            name: 'ppwOrPpc',\r\n            type: 'checkbox',\r\n            value: instruction?.details?.ppwOrPpc || false,\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.ppwPpc'),\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isEndorsement || isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'isNonPremium',\r\n            type: 'checkbox',\r\n            value: leadRef?.isNonPremium === 'Yes',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.nonPremium'),\r\n            disabled: true,\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isFeeAndAmendment\r\n      ? [\r\n          {\r\n            name: 'feeOrAmendment',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.type.label'),\r\n            value: instruction?.details?.feeOrAmendment || 'fee',\r\n            options: feeAndAmendmentTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n    ...(isBordereau\r\n      ? [\r\n          {\r\n            name: 'bordereauPolicyTypeId',\r\n            type: 'select',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.policyType'),\r\n            value: getBordereauPolicyTypeId(),\r\n            options: bordereauPolicyTypes,\r\n            optionKey: 'bordereauPolicyTypeID',\r\n            optionLabel: 'bordereauPolicyTypeDetails',\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n          {\r\n            type: 'datepicker',\r\n            name: 'bordereauPeriod',\r\n            label: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.fields.bordereauPeriod'),\r\n            value: instruction?.details?.bordereauPeriod || null,\r\n            outputFormat: 'iso',\r\n            placeholder: 'MM YYYY',\r\n            muiComponentProps: {\r\n              fullWidth: true,\r\n              helperText: utils.string.t(\r\n                'processingInstructions.processingInstructionsForEndFaBorder.bordereauPeriod.helperTextBordereauPeriod'\r\n              ),\r\n              disabled: isReadOnly,\r\n            },\r\n            muiPickerProps: {\r\n              views: ['year', 'month'],\r\n              format: 'MM YYYY',\r\n              clearable: true,\r\n            },\r\n          },\r\n          {\r\n            name: 'bordereauTypeId',\r\n            type: 'radio',\r\n            title: utils.string.t('processingInstructions.processingInstructionsForEndFaBorder.bordereauType.label'),\r\n            value: getBordereauTypeValue(),\r\n            options: bordereauTypes,\r\n            muiFormGroupProps: {\r\n              row: true,\r\n            },\r\n            muiComponentProps: {\r\n              disabled: isReadOnly,\r\n            },\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  const getUpdatedInstruction = (instruction, formValues) => {\r\n    return {\r\n      ...instruction,\r\n      details: {\r\n        ...formValues,\r\n        instructionId: instruction?.id,\r\n        accountExecutive: getSelectedAccountExecutiveName(formValues.accountExecutiveId),\r\n        workFlowFrontEndContactName: getSelectedFrontEndContactName(formValues.frontEndContactId),\r\n\r\n        ...(isBordereau && {\r\n          bordereauPeriod: formValues.bordereauPeriod ? moment(formValues.bordereauPeriod).format('MMMM YYYY') : '',\r\n          bordereauTypeId: bordereauTypes.find((type) => type.value === formValues.bordereauTypeId)?.id || null,\r\n        }),\r\n      },\r\n    };\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    const reset = childRef?.current?.props?.resetFunc;\r\n\r\n    if (utils.generic.isFunction(reset)) {\r\n      reset(defaultValues, { keepDirty: false });\r\n    }\r\n  };\r\n\r\n  const handleSubmitBordereau = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    const bordereauTypeId = Boolean(formValues?.bordereauTypeId);\r\n    const bordereauPeriod = Boolean(formValues?.bordereauPeriod);\r\n    const bordereauPolicyTypeId = Boolean(formValues?.bordereauPolicyTypeId);\r\n\r\n    if (isFrontEndIdSelected && bordereauTypeId && bordereauPeriod && bordereauPolicyTypeId) {\r\n      proceedToSubmission();\r\n    } else if (!isFrontEndIdSelected) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n    } else if (!bordereauTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauTypeId', 'warning'));\r\n    } else if (!bordereauPeriod) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPeriod', 'warning'));\r\n    } else if (!bordereauPolicyTypeId) {\r\n      dispatch(enqueueNotification('processingInstructions.addRiskReference.noBordereauPolicyType', 'warning'));\r\n    }\r\n  };\r\n\r\n  const handleSubmitEndorseFa = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = Boolean(formValues?.frontEndContactId);\r\n    if (isFrontEndIdSelected) {\r\n      proceedToSubmission();\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSave = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const isFrontEndIdSelected = formValues?.frontEndContactId !== null;\r\n\r\n    if (isFrontEndIdSelected) {\r\n      const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n      dispatch(updateProcessingInstruction(updatedInstruction));\r\n    } else dispatch(enqueueNotification('processingInstructions.addRiskReference.noFrontEndContactIdValue', 'warning'));\r\n  };\r\n\r\n  const handleSubmit = async () => {\r\n    const response = await dispatch(getProcessingInstruction(id));\r\n    if (response) {\r\n      if (isEndorsement && isAnyRiskRefHavingNoDocument) {\r\n        mandatoryDocumentsNotUploaded();\r\n      } else {\r\n        if (isBordereau) {\r\n          handleSubmitBordereau();\r\n        } else {\r\n          handleSubmitEndorseFa();\r\n        }\r\n      }\r\n    }\r\n  };\r\n\r\n  const mandatoryDocumentsNotUploaded = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.mandatoryDocuments.error'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            hideCancelButton: true,\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessage: <span>{utils.string.t('processingInstructions.mandatoryDocuments.mandatoryDocumentUploaded')}</span>,\r\n            buttonColors: { confirm: 'secondary' },\r\n            submitHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const proceedToSubmission = () => {\r\n    const formValues = childRef?.current?.props?.values || {};\r\n    const updatedInstruction = getUpdatedInstruction(instruction, formValues);\r\n    const businessProcess = businessProcesses?.find(\r\n      (bp) => bp.businessProcessID === updatedInstruction.businessProcessId\r\n    )?.businessProcessName;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: 'processingInstructions.authorisations.form.title',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          componentProps: {\r\n            confirmMessage: utils.string.t('processingInstructions.authorisations.form.confirmText'),\r\n            cancelLabel: utils.string.t('processingInstructions.authorisations.form.cancel'),\r\n            confirmLabel: utils.string.t('processingInstructions.authorisations.form.confirm'),\r\n            confirmMessageText: utils.string.t('processingInstructions.authorisations.form.confirmMessage'),\r\n            note: utils.string.t('processingInstructions.authorisations.form.note'),\r\n\r\n            submitHandler: () => {\r\n              dispatch(\r\n                submitProcessingInstruction({\r\n                  ...updatedInstruction,\r\n                  businessProcess,\r\n                  statusId: PI_STATUS_SUBMITTED_PROCESSING,\r\n                })\r\n              ).then((res) => {\r\n                // check that the response was successful\r\n                history.push('/processing-instructions');\r\n                dispatch(enqueueNotification('processingInstructions.details.submittedSuccessfully', 'success'));\r\n              });\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const toggleTab = (tab) => {\r\n    setSelectedTab(tab);\r\n    history.replace(`${config.routes.processingInstructions.steps}/${id}${step ? `/${step}` : ''}${tab ? `/${tab}` : ''}`);\r\n  };\r\n\r\n  // abort\r\n  if (!defaultValues || !instruction || utils.generic.isInvalidOrEmptyArray(users) || !bordereauPolicyTypes) return null;\r\n\r\n  return (\r\n    <ProcessingInstructionsEndorseFaBorderView\r\n      instruction={instruction}\r\n      leadRef={leadRef}\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      fields={fields}\r\n      defaultValues={defaultValues}\r\n      isEndorsement={isEndorsement}\r\n      isBordereau={isBordereau}\r\n      isFeeAndAmendment={isFeeAndAmendment}\r\n      isReadOnly={isReadOnly}\r\n      isSubmittedProcessing={isSubmittedProcessing}\r\n      handlers={{\r\n        ...handlers,\r\n        cancel: handleCancel,\r\n        save: handleSave,\r\n        submit: handleSubmit,\r\n        toggleTab,\r\n      }}\r\n      ref={childRef}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}