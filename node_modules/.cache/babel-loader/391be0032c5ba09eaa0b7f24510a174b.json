{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTable\\\\ClaimsTableRow.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport moment from 'moment'; //app\n\nimport styles from './ClaimsTable.styles';\nimport { TableCell, PopoverMenu } from 'components';\nimport { showModal, getLossInformation, selectClaimsStatuses, hideModal, getStatuses, getCatCodes, selectCatCodes, selectClaimStatusObj } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { GXB_LOSS_ID_IDENTIFIER } from 'consts'; //mui\n\nimport { makeStyles, TableRow, Link, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport function ClaimsTableRowView(_ref) {\n  _s();\n\n  var _statuses$find, _data$claimStatusID, _data$claimStatusID2, _data$claimStatusID3, _data$claimStatusID4, _data$claimStatusID5;\n\n  var data = _ref.data,\n      handleViewClaimClick = _ref.handleViewClaimClick,\n      columnProps = _ref.columnProps,\n      handleCreateClaim = _ref.handleCreateClaim,\n      handleEditClaim = _ref.handleEditClaim;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTableRow'\n  })();\n  var dispatch = useDispatch();\n  var statuses = useSelector(selectClaimsStatuses);\n  var catCodes = useSelector(selectCatCodes);\n  var claimsStatusObj = useSelector(selectClaimStatusObj);\n\n  var handleEditLossClick = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(data) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              _context.next = 2;\n              return dispatch(getLossInformation(data.lossDetailID, data.sourceID));\n\n            case 2:\n              if (!utils.generic.isInvalidOrEmptyArray(catCodes)) {\n                _context.next = 5;\n                break;\n              }\n\n              _context.next = 5;\n              return dispatch(getCatCodes());\n\n            case 5:\n              _context.next = 7;\n              return dispatch(showModal({\n                component: 'EDIT_LOSS_INFORMATION',\n                props: {\n                  title: utils.string.t('claims.lossInformation.title'),\n                  hideCompOnBlur: false,\n                  fullWidth: true,\n                  maxWidth: 'xl',\n                  disableAutoFocus: true,\n                  componentProps: {\n                    clickOutSideHandler: function clickOutSideHandler() {\n                      return _clickOutSideHandler();\n                    }\n                  }\n                }\n              }));\n\n            case 7:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleEditLossClick(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleUpdateStatusClick = function handleUpdateStatusClick(data) {\n    dispatch(showModal({\n      component: 'UPDATE_STATUS',\n      props: {\n        title: utils.string.t('claims.updateStatus.title'),\n        fullWidth: true,\n        maxWidth: 'sm',\n        hideCompOnBlur: false,\n        disableAutoFocus: true,\n        componentProps: _objectSpread(_objectSpread({}, data), {}, {\n          clickOutSideHandler: function clickOutSideHandler() {\n            return _clickOutSideHandler();\n          }\n        })\n      }\n    }));\n  };\n\n  var _clickOutSideHandler = function _clickOutSideHandler() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        title: utils.string.t('status.alert'),\n        hint: utils.string.t('navigation.title'),\n        fullWidth: true,\n        maxWidth: 'xs',\n        componentProps: {\n          cancelLabel: utils.string.t('app.no'),\n          confirmLabel: utils.string.t('app.yes'),\n          submitHandler: function submitHandler() {\n            dispatch(hideModal());\n          },\n          cancelHandler: function cancelHandler() {}\n        }\n      }\n    }));\n  };\n\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(statuses)) dispatch(getStatuses());\n  }, [statuses]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    \"data-testid\": \"search-row-\".concat(data.lossRef),\n    hover: true,\n    children: [\"dwadwa\", /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossRef')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossRef),\n      children: data.lossRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('pasEventID')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.pasEventID),\n      children: data.pasEventID\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 106,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossName')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossName),\n      children: data.lossName\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossFromDate')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossFromDate),\n      children: utils.string.t('format.date', {\n        value: {\n          date: data === null || data === void 0 ? void 0 : data.lossFromDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 112,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossToDate')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossToDate),\n      children: utils.string.t('format.date', {\n        value: {\n          date: data === null || data === void 0 ? void 0 : data.lossToDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimReference')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.claimReference),\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"secondary\",\n        onClick: function onClick() {\n          return handleViewClaimClick(data);\n        },\n        children: data.claimReference\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 122,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimLossFromDate')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossRef),\n      children: utils.string.t('format.date', {\n        value: {\n          date: data === null || data === void 0 ? void 0 : data.claimLossFromDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 127,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimLossToDate')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossRef),\n      children: utils.string.t('format.date', {\n        value: {\n          date: data === null || data === void 0 ? void 0 : data.claimLossToDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimReceivedDateTime')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.lossRef),\n      children: data.claimReceivedDate && moment(data === null || data === void 0 ? void 0 : data.claimReceivedDate).format(config.ui.format.date.textTime)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 137,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimStatusName')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.claimStatusName),\n      children: data.claimStatusID && ((_statuses$find = statuses.find(function (status) {\n        return status.id.toString() === data.claimStatusID.toString();\n      })) === null || _statuses$find === void 0 ? void 0 : _statuses$find.name)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 140,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('catCodeDescription')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.catCodeDescription),\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        title: data.catCodeDescription,\n        className: classes.catCodeDescription,\n        children: data.catCodeDescription\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 144,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 143,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('ucr')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.ucr),\n      children: data.ucr\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimantName')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.claimantName),\n      title: data.claimantName,\n      children: data.claimantName\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 151,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('beAdjuster')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.beadjusterID),\n      children: /*#__PURE__*/_jsxDEV(Typography, {\n        title: data === null || data === void 0 ? void 0 : data.beAdjusterID,\n        className: classes.catCodeDescription,\n        children: data === null || data === void 0 ? void 0 : data.beAdjusterID\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 155,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyRef')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.policyRef),\n      children: data.policyRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 159,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyType')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.policyType),\n      children: data.policyType\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 162,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.insured),\n      title: data.insured,\n      children: data.insured\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 165,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('client')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.client),\n      children: data.client\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 168,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('company')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.company),\n      children: data.company\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 171,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.division),\n      children: data.division\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 174,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.team),\n      children: data.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 177,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdBy')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.createdBy),\n      children: data.createdBy\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 180,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      \"data-testid\": \"row-col-\".concat(data.priority),\n      children: data.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 183,\n      columnNumber: 7\n    }, this), (data === null || data === void 0 ? void 0 : data.lossRef) !== GXB_LOSS_ID_IDENTIFIER && /*#__PURE__*/_jsxDEV(TableCell, {\n      menu: true,\n      \"data-testid\": \"row-col-ellipsis-menu\",\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        data: {\n          placement: data,\n          title: utils.placement.getInsureds(data)\n        },\n        items: [{\n          id: 'editLoss',\n          label: utils.string.t('claims.editLoss'),\n          callback: function callback() {\n            return handleEditLossClick(data);\n          }\n        }, {\n          id: 'createClaims',\n          label: utils.string.t('claims.createClaim'),\n          callback: function callback() {\n            return handleCreateClaim(data);\n          }\n        }].concat(_toConsumableArray((data === null || data === void 0 ? void 0 : (_data$claimStatusID = data.claimStatusID) === null || _data$claimStatusID === void 0 ? void 0 : _data$claimStatusID.toString()) === claimsStatusObj.DRAFT || (data === null || data === void 0 ? void 0 : (_data$claimStatusID2 = data.claimStatusID) === null || _data$claimStatusID2 === void 0 ? void 0 : _data$claimStatusID2.toString()) === claimsStatusObj.Failed ? [{\n          id: 'editClaim',\n          label: utils.string.t('claims.editClaim'),\n          callback: function callback() {\n            return handleEditClaim(data);\n          }\n        }] : []), _toConsumableArray((data === null || data === void 0 ? void 0 : (_data$claimStatusID3 = data.claimStatusID) === null || _data$claimStatusID3 === void 0 ? void 0 : _data$claimStatusID3.toString()) === claimsStatusObj.DRAFT || (data === null || data === void 0 ? void 0 : (_data$claimStatusID4 = data.claimStatusID) === null || _data$claimStatusID4 === void 0 ? void 0 : _data$claimStatusID4.toString()) === claimsStatusObj.Failed || (data === null || data === void 0 ? void 0 : (_data$claimStatusID5 = data.claimStatusID) === null || _data$claimStatusID5 === void 0 ? void 0 : _data$claimStatusID5.toString()) === claimsStatusObj.Cancel ? [{\n          id: 'updateStatus',\n          label: utils.string.t('claims.updateStatus.title'),\n          callback: function callback() {\n            return handleUpdateStatusClick(data);\n          }\n        }] : []))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 188,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 187,\n      columnNumber: 9\n    }, this)]\n  }, data.claimID, true, {\n    fileName: _jsxFileName,\n    lineNumber: 100,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTableRowView, \"TAbm89TV4CbeqRnVwCUv63IB5do=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsTableRowView;\nClaimsTableRowView.displayName = \"ClaimsTableRowView\";\nClaimsTableRowView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsTableRowView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsTable\\\\ClaimsTableRow.view.js\"] = {\n    name: \"ClaimsTableRowView\",\n    docgenInfo: ClaimsTableRowView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsTable\\\\ClaimsTableRow.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTable/ClaimsTableRow.view.js"],"names":["React","useEffect","useDispatch","useSelector","moment","styles","TableCell","PopoverMenu","showModal","getLossInformation","selectClaimsStatuses","hideModal","getStatuses","getCatCodes","selectCatCodes","selectClaimStatusObj","utils","config","GXB_LOSS_ID_IDENTIFIER","makeStyles","TableRow","Link","Typography","ClaimsTableRowView","data","handleViewClaimClick","columnProps","handleCreateClaim","handleEditClaim","classes","name","dispatch","statuses","catCodes","claimsStatusObj","handleEditLossClick","lossDetailID","sourceID","generic","isInvalidOrEmptyArray","component","props","title","string","t","hideCompOnBlur","fullWidth","maxWidth","disableAutoFocus","componentProps","clickOutSideHandler","handleUpdateStatusClick","hint","cancelLabel","confirmLabel","submitHandler","cancelHandler","lossRef","pasEventID","lossName","lossFromDate","value","date","format","ui","text","lossToDate","claimReference","claimLossFromDate","claimLossToDate","claimReceivedDate","textTime","claimStatusName","claimStatusID","find","status","id","toString","catCodeDescription","ucr","claimantName","beadjusterID","beAdjusterID","policyRef","policyType","insured","client","company","division","team","createdBy","priority","placement","getInsureds","label","callback","DRAFT","Failed","Cancel","claimID"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport styles from './ClaimsTable.styles';\r\nimport { TableCell, PopoverMenu } from 'components';\r\nimport {\r\n  showModal,\r\n  getLossInformation,\r\n  selectClaimsStatuses,\r\n  hideModal,\r\n  getStatuses,\r\n  getCatCodes,\r\n  selectCatCodes,\r\n  selectClaimStatusObj,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { GXB_LOSS_ID_IDENTIFIER } from 'consts';\r\n\r\n//mui\r\nimport { makeStyles, TableRow, Link, Typography } from '@material-ui/core';\r\n\r\nexport function ClaimsTableRowView({ data, handleViewClaimClick, columnProps, handleCreateClaim, handleEditClaim }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTableRow' })();\r\n  const dispatch = useDispatch();\r\n  const statuses = useSelector(selectClaimsStatuses);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const claimsStatusObj = useSelector(selectClaimStatusObj);\r\n\r\n  const handleEditLossClick = async (data) => {\r\n    await dispatch(getLossInformation(data.lossDetailID, data.sourceID));\r\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\r\n      await dispatch(getCatCodes());\r\n    }\r\n    await dispatch(\r\n      showModal({\r\n        component: 'EDIT_LOSS_INFORMATION',\r\n        props: {\r\n          title: utils.string.t('claims.lossInformation.title'),\r\n          hideCompOnBlur: false,\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            clickOutSideHandler: () => clickOutSideHandler(),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleUpdateStatusClick = (data) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'UPDATE_STATUS',\r\n        props: {\r\n          title: utils.string.t('claims.updateStatus.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          hideCompOnBlur: false,\r\n          disableAutoFocus: true,\r\n          componentProps: {\r\n            ...data,\r\n            clickOutSideHandler: () => clickOutSideHandler(),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const clickOutSideHandler = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          title: utils.string.t('status.alert'),\r\n          hint: utils.string.t('navigation.title'),\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            submitHandler: () => {\r\n              dispatch(hideModal());\r\n            },\r\n            cancelHandler: () => { },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isInvalidOrEmptyArray(statuses)) dispatch(getStatuses());\r\n  }, [statuses]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <TableRow key={data.claimID} data-testid={`search-row-${data.lossRef}`} hover>\r\n\r\n      dwadwa\r\n      <TableCell {...columnProps('lossRef')} data-testid={`row-col-${data.lossRef}`}>\r\n        {data.lossRef}\r\n      </TableCell>\r\n      <TableCell {...columnProps('pasEventID')} data-testid={`row-col-${data.pasEventID}`}>\r\n        {data.pasEventID}\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossName')} data-testid={`row-col-${data.lossName}`}>\r\n        {data.lossName}\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossFromDate')} data-testid={`row-col-${data.lossFromDate}`}>\r\n        {utils.string.t('format.date', {\r\n          value: { date: data?.lossFromDate, format: config.ui.format.date.text },\r\n        })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossToDate')} data-testid={`row-col-${data.lossToDate}`}>\r\n        {utils.string.t('format.date', {\r\n          value: { date: data?.lossToDate, format: config.ui.format.date.text },\r\n        })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimReference')} data-testid={`row-col-${data.claimReference}`}>\r\n        <Link color=\"secondary\" onClick={() => handleViewClaimClick(data)}>\r\n          {data.claimReference}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimLossFromDate')} data-testid={`row-col-${data.lossRef}`}>\r\n        {utils.string.t('format.date', {\r\n          value: { date: data?.claimLossFromDate, format: config.ui.format.date.text },\r\n        })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimLossToDate')} data-testid={`row-col-${data.lossRef}`}>\r\n        {utils.string.t('format.date', {\r\n          value: { date: data?.claimLossToDate, format: config.ui.format.date.text },\r\n        })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimReceivedDateTime')} data-testid={`row-col-${data.lossRef}`}>\r\n        {data.claimReceivedDate && moment(data?.claimReceivedDate).format(config.ui.format.date.textTime)}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimStatusName')} data-testid={`row-col-${data.claimStatusName}`}>\r\n        {data.claimStatusID && statuses.find((status) => status.id.toString() === data.claimStatusID.toString())?.name}\r\n      </TableCell>\r\n      <TableCell {...columnProps('catCodeDescription')} data-testid={`row-col-${data.catCodeDescription}`}>\r\n        <Typography title={data.catCodeDescription} className={classes.catCodeDescription}>\r\n          {data.catCodeDescription}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell {...columnProps('ucr')} data-testid={`row-col-${data.ucr}`}>\r\n        {data.ucr}\r\n      </TableCell>\r\n      <TableCell {...columnProps('claimantName')} data-testid={`row-col-${data.claimantName}`} title={data.claimantName}>\r\n        {data.claimantName}\r\n      </TableCell>\r\n      <TableCell {...columnProps('beAdjuster')} data-testid={`row-col-${data.beadjusterID}`}>\r\n        <Typography title={data?.beAdjusterID} className={classes.catCodeDescription}>\r\n          {data?.beAdjusterID}\r\n        </Typography>\r\n      </TableCell>\r\n      <TableCell {...columnProps('policyRef')} data-testid={`row-col-${data.policyRef}`}>\r\n        {data.policyRef}\r\n      </TableCell>\r\n      <TableCell {...columnProps('policyType')} data-testid={`row-col-${data.policyType}`}>\r\n        {data.policyType}\r\n      </TableCell>\r\n      <TableCell {...columnProps('insured')} data-testid={`row-col-${data.insured}`} title={data.insured}>\r\n        {data.insured}\r\n      </TableCell>\r\n      <TableCell {...columnProps('client')} data-testid={`row-col-${data.client}`}>\r\n        {data.client}\r\n      </TableCell>\r\n      <TableCell {...columnProps('company')} data-testid={`row-col-${data.company}`}>\r\n        {data.company}\r\n      </TableCell>\r\n      <TableCell {...columnProps('division')} data-testid={`row-col-${data.division}`}>\r\n        {data.division}\r\n      </TableCell>\r\n      <TableCell {...columnProps('team')} data-testid={`row-col-${data.team}`}>\r\n        {data.team}\r\n      </TableCell>\r\n      <TableCell {...columnProps('createdBy')} data-testid={`row-col-${data.createdBy}`}>\r\n        {data.createdBy}\r\n      </TableCell>\r\n      <TableCell {...columnProps('priority')} data-testid={`row-col-${data.priority}`}>\r\n        {data.priority}\r\n      </TableCell>\r\n      {data?.lossRef !== GXB_LOSS_ID_IDENTIFIER && (\r\n        <TableCell menu data-testid={`row-col-ellipsis-menu`}>\r\n          <PopoverMenu\r\n            id=\"search-menu-list\"\r\n            data={{\r\n              placement: data,\r\n              title: utils.placement.getInsureds(data),\r\n            }}\r\n            items={[\r\n              {\r\n                id: 'editLoss',\r\n                label: utils.string.t('claims.editLoss'),\r\n                callback: () => handleEditLossClick(data),\r\n              },\r\n              {\r\n                id: 'createClaims',\r\n                label: utils.string.t('claims.createClaim'),\r\n                callback: () => handleCreateClaim(data),\r\n              },\r\n              ...(data?.claimStatusID?.toString() === claimsStatusObj.DRAFT || data?.claimStatusID?.toString() === claimsStatusObj.Failed\r\n                ? [\r\n                  {\r\n                    id: 'editClaim',\r\n                    label: utils.string.t('claims.editClaim'),\r\n                    callback: () => handleEditClaim(data),\r\n                  },\r\n                ]\r\n                : []),\r\n              ...(data?.claimStatusID?.toString() === claimsStatusObj.DRAFT ||\r\n                data?.claimStatusID?.toString() === claimsStatusObj.Failed ||\r\n                data?.claimStatusID?.toString() === claimsStatusObj.Cancel\r\n                ? [\r\n                  {\r\n                    id: 'updateStatus',\r\n                    label: utils.string.t('claims.updateStatus.title'),\r\n                    callback: () => handleUpdateStatusClick(data),\r\n                  },\r\n                ]\r\n                : []),\r\n            ]}\r\n          />\r\n        </TableCell>\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}