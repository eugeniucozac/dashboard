{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditClientOffice\\\\AddEditClientOffice.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; // app\n\nimport { createClientOffice, editClientOffice, getReferenceDataByType } from 'stores';\nimport { AddEditClientOfficeView } from './AddEditClientOffice.view';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AddEditClientOffice(_ref) {\n  _s();\n\n  var handleClose = _ref.handleClose,\n      _ref$office = _ref.office,\n      office = _ref$office === void 0 ? {} : _ref$office;\n  var dispatch = useDispatch();\n  var parentList = useSelector(function (state) {\n    return state.parent.list;\n  });\n  var accountList = useSelector(function (state) {\n    return state.referenceData.clients;\n  }) || [];\n\n  var handleSubmit = function handleSubmit(updatedClientOffice) {\n    if (office.id) {\n      return dispatch(editClientOffice(updatedClientOffice, office));\n    } else {\n      return dispatch(createClientOffice(updatedClientOffice));\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  useEffect(function () {\n    if (!office.parent || !office.parent.name) return;\n    dispatch(getReferenceDataByType('client', office.parent.name));\n  }, [office] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var getAccountOptions = function getAccountOptions(value) {\n    if (!utils.generic.isValidArray(value, true)) return;\n    dispatch(getReferenceDataByType('client', value[0].name));\n  };\n\n  var fields = [{\n    name: 'parent',\n    label: utils.string.t('admin.form.client.label'),\n    type: 'autocomplete',\n    value: office.parent ? [office.parent] : [],\n    options: parentList,\n    optionKey: 'id',\n    optionLabel: 'name',\n    innerComponentProps: {\n      maxMenuHeight: 120,\n      allowEmpty: true,\n      'data-testid': 'parent'\n    },\n    validation: Yup.array().min(1, utils.string.t('validation.required')).required(utils.string.t('validation.required'))\n  }, {\n    name: 'clients',\n    label: utils.string.t('admin.form.accounts.label'),\n    type: 'autocomplete',\n    value: office.clients || [],\n    options: accountList,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      'data-testid': 'clients'\n    },\n    innerComponentProps: {\n      isMulti: true,\n      allowEmpty: true,\n      maxMenuHeight: 120,\n      'data-testid': 'clients'\n    },\n    validation: Yup.array().min(1, utils.string.t('validation.required')).required(utils.string.t('validation.required'))\n  }, {\n    name: 'name',\n    label: utils.string.t('admin.form.office.label'),\n    value: office.name || '',\n    type: 'text',\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }];\n  var actions = [{\n    name: 'submit',\n    label: office.id ? utils.string.t('app.save') : utils.string.t('app.create'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(AddEditClientOfficeView, {\n    getAccountOptions: getAccountOptions,\n    actions: actions,\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 99,\n    columnNumber: 10\n  }, this);\n}\n\n_s(AddEditClientOffice, \"nmsp7D9W6MV0sq/fldjvxu1EBN8=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = AddEditClientOffice;\nAddEditClientOffice.displayName = \"AddEditClientOffice\";\nAddEditClientOffice.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddEditClientOffice\",\n  \"props\": {\n    \"office\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditClientOffice\\\\AddEditClientOffice.js\"] = {\n    name: \"AddEditClientOffice\",\n    docgenInfo: AddEditClientOffice.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditClientOffice\\\\AddEditClientOffice.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditClientOffice\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditClientOffice/AddEditClientOffice.js"],"names":["React","useEffect","useDispatch","useSelector","Yup","createClientOffice","editClientOffice","getReferenceDataByType","AddEditClientOfficeView","utils","AddEditClientOffice","handleClose","office","dispatch","parentList","state","parent","list","accountList","referenceData","clients","handleSubmit","updatedClientOffice","id","handleCancel","generic","isFunction","name","getAccountOptions","value","isValidArray","fields","label","string","t","type","options","optionKey","optionLabel","innerComponentProps","maxMenuHeight","allowEmpty","validation","array","min","required","muiComponentProps","isMulti","actions","handler"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport { createClientOffice, editClientOffice, getReferenceDataByType } from 'stores';\r\nimport { AddEditClientOfficeView } from './AddEditClientOffice.view';\r\nimport * as utils from 'utils';\r\n\r\nexport default function AddEditClientOffice({ handleClose, office = {} }) {\r\n  const dispatch = useDispatch();\r\n  const parentList = useSelector((state) => state.parent.list);\r\n  const accountList = useSelector((state) => state.referenceData.clients) || [];\r\n\r\n  const handleSubmit = (updatedClientOffice) => {\r\n    if (office.id) {\r\n      return dispatch(editClientOffice(updatedClientOffice, office));\r\n    } else {\r\n      return dispatch(createClientOffice(updatedClientOffice));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!office.parent || !office.parent.name) return;\r\n      dispatch(getReferenceDataByType('client', office.parent.name));\r\n    },\r\n    [office] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const getAccountOptions = (value) => {\r\n    if (!utils.generic.isValidArray(value, true)) return;\r\n    dispatch(getReferenceDataByType('client', value[0].name));\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'parent',\r\n      label: utils.string.t('admin.form.client.label'),\r\n      type: 'autocomplete',\r\n      value: office.parent ? [office.parent] : [],\r\n      options: parentList,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      innerComponentProps: {\r\n        maxMenuHeight: 120,\r\n        allowEmpty: true,\r\n        'data-testid': 'parent',\r\n      },\r\n      validation: Yup.array().min(1, utils.string.t('validation.required')).required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'clients',\r\n      label: utils.string.t('admin.form.accounts.label'),\r\n      type: 'autocomplete',\r\n      value: office.clients || [],\r\n      options: accountList,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        'data-testid': 'clients',\r\n      },\r\n      innerComponentProps: {\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 120,\r\n        'data-testid': 'clients',\r\n      },\r\n      validation: Yup.array().min(1, utils.string.t('validation.required')).required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'name',\r\n      label: utils.string.t('admin.form.office.label'),\r\n      value: office.name || '',\r\n      type: 'text',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: office.id ? utils.string.t('app.save') : utils.string.t('app.create'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <AddEditClientOfficeView getAccountOptions={getAccountOptions} actions={actions} fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}