{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport get from 'lodash/get';\nimport * as utils from 'utils';\nvar utilsLayer = {\n  getMarkets: function getMarkets(layer) {\n    if (!layer || !utils.generic.isValidArray(layer.markets, true)) return [];\n    return get(layer, 'markets', []);\n  },\n  getMarketById: function getMarketById(layer, id) {\n    if (!id || !layer) return;\n    var markets = utilsLayer.getMarkets(layer);\n    return markets.find(function (m) {\n      var _m$market;\n\n      return ((_m$market = m.market) === null || _m$market === void 0 ? void 0 : _m$market.id) === id;\n    });\n  },\n  getName: function getName(layer) {\n    if (!layer) return '';\n    var amount = utils.string.t('format.number', {\n      value: {\n        number: layer.amount,\n        format: {\n          average: true,\n          totalLength: 12,\n          lowPrecision: false\n        }\n      }\n    }).toUpperCase();\n    var excess = utils.string.t('format.number', {\n      value: {\n        number: layer.excess,\n        format: {\n          average: true,\n          totalLength: 12,\n          lowPrecision: false\n        }\n      }\n    }).toUpperCase();\n    var hasAmount = Boolean(layer.amount);\n    var hasExcess = Boolean(layer.excess);\n    var hasBoth = hasAmount && hasExcess;\n    var currency = utilsLayer.getCurrency(layer, '');\n\n    if (utilsLayer.isPrimary(layer)) {\n      return \"\".concat(utils.string.t('placement.generic.primary'), \" \").concat(amount).concat(currency ? \" \".concat(currency) : '');\n    } else if (hasBoth) {\n      return \"\".concat(amount, \" xs \").concat(excess).concat(currency ? \" \".concat(currency) : '');\n    } else if (hasExcess) {\n      return \"xs \".concat(excess).concat(currency ? \" \".concat(currency) : '');\n    } else {\n      return '--';\n    }\n  },\n  getCurrency: function getCurrency(layer) {\n    var defaultValue = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '---';\n    if (!layer) return defaultValue;\n    return layer.isoCurrencyCode || defaultValue;\n  },\n  isPrimary: function isPrimary(layer) {\n    return layer && layer.amount && !layer.excess;\n  }\n};\nexport default utilsLayer;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/layer/layer.js"],"names":["get","utils","utilsLayer","getMarkets","layer","generic","isValidArray","markets","getMarketById","id","find","m","market","getName","amount","string","t","value","number","format","average","totalLength","lowPrecision","toUpperCase","excess","hasAmount","Boolean","hasExcess","hasBoth","currency","getCurrency","isPrimary","defaultValue","isoCurrencyCode"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport * as utils from 'utils';\r\n\r\nconst utilsLayer = {\r\n  getMarkets: (layer) => {\r\n    if (!layer || !utils.generic.isValidArray(layer.markets, true)) return [];\r\n\r\n    return get(layer, 'markets', []);\r\n  },\r\n\r\n  getMarketById: (layer, id) => {\r\n    if (!id || !layer) return;\r\n\r\n    const markets = utilsLayer.getMarkets(layer);\r\n\r\n    return markets.find((m) => {\r\n      return m.market?.id === id;\r\n    });\r\n  },\r\n\r\n  getName: (layer) => {\r\n    if (!layer) return '';\r\n\r\n    const amount = utils.string\r\n      .t('format.number', { value: { number: layer.amount, format: { average: true, totalLength: 12, lowPrecision: false } } })\r\n      .toUpperCase();\r\n\r\n    const excess = utils.string\r\n      .t('format.number', { value: { number: layer.excess, format: { average: true, totalLength: 12, lowPrecision: false } } })\r\n      .toUpperCase();\r\n\r\n    const hasAmount = Boolean(layer.amount);\r\n    const hasExcess = Boolean(layer.excess);\r\n    const hasBoth = hasAmount && hasExcess;\r\n    const currency = utilsLayer.getCurrency(layer, '');\r\n\r\n    if (utilsLayer.isPrimary(layer)) {\r\n      return `${utils.string.t('placement.generic.primary')} ${amount}${currency ? ` ${currency}` : ''}`;\r\n    } else if (hasBoth) {\r\n      return `${amount} xs ${excess}${currency ? ` ${currency}` : ''}`;\r\n    } else if (hasExcess) {\r\n      return `xs ${excess}${currency ? ` ${currency}` : ''}`;\r\n    } else {\r\n      return '--';\r\n    }\r\n  },\r\n\r\n  getCurrency: (layer, defaultValue = '---') => {\r\n    if (!layer) return defaultValue;\r\n\r\n    return layer.isoCurrencyCode || defaultValue;\r\n  },\r\n\r\n  isPrimary: (layer) => {\r\n    return layer && layer.amount && !layer.excess;\r\n  },\r\n};\r\n\r\nexport default utilsLayer;\r\n"]},"metadata":{},"sourceType":"module"}