{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SetClaimPriority\\\\SetClaimPriority.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form'; //app\n\nimport * as utils from 'utils';\nimport { Button, FormContainer, FormFields, FormGrid, FormAutocompleteMui, FormLabel, FormActions } from 'components';\nimport { useFormActions } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSetClaimPriorityView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired\n};\nexport function SetClaimPriorityView(_ref) {\n  _s();\n\n  var actions = _ref.actions,\n      fields = _ref.fields;\n  var defaultValues = utils.form.getInitialValues(fields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit,\n      \"data-testid\": \"form-set-claim-priority\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 2,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t('claims.claimDetailsLabel.priority'),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                error: errors.priority,\n                \"data-testid\": \"set-priority-options\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: cancel.label,\n        variant: \"outlined\",\n        size: \"medium\",\n        disabled: formState.isSubmitting,\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 11\n      }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting || !formState.isDirty,\n        onClick: handleSubmit(submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 47,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 42,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SetClaimPriorityView, \"39vCvF8dj5u2YRGeQDDwyNLV7uY=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = SetClaimPriorityView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetClaimPriorityView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SetClaimPriority/SetClaimPriority.view.js"],"names":["React","PropTypes","useForm","utils","Button","FormContainer","FormFields","FormGrid","FormAutocompleteMui","FormLabel","FormActions","useFormActions","SetClaimPriorityView","propTypes","fields","array","isRequired","actions","defaultValues","form","getInitialValues","control","reset","errors","handleSubmit","formState","cancel","submit","string","t","getFieldProps","priority","label","isSubmitting","handler","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Button, FormContainer, FormFields, FormGrid, FormAutocompleteMui, FormLabel, FormActions } from 'components';\r\nimport { useFormActions } from 'hooks';\r\n\r\nSetClaimPriorityView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function SetClaimPriorityView({ actions, fields }) {\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState } = useForm({ defaultValues });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit} data-testid=\"form-set-claim-priority\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={2}>\r\n            <FormGrid container alignItems=\"center\">\r\n              <FormGrid item xs={2}>\r\n                <FormLabel label={utils.string.t('claims.claimDetailsLabel.priority')} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={10}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'priority', control)}\r\n                  error={errors.priority}\r\n                  data-testid=\"set-priority-options\"\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {cancel && (\r\n          <Button text={cancel.label} variant=\"outlined\" size=\"medium\" disabled={formState.isSubmitting} onClick={cancel.handler} />\r\n        )}\r\n        {submit && (\r\n          <Button\r\n            text={submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting || !formState.isDirty}\r\n            onClick={handleSubmit(submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}