{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { addLoader, removeLoader, authLogout } from 'stores';\nimport * as constants from 'consts';\nexport var getEmsExistingDocuments = function getEmsExistingDocuments(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/emailManagementService.actions.getEmsExistingDocuments'\n    };\n    dispatch(getEmsExistingDocumentsGetRequest(params));\n    dispatch(addLoader('getEmsExistingDocuments'));\n    var validFormData = (params === null || params === void 0 ? void 0 : params.referenceId) && (params === null || params === void 0 ? void 0 : params.sectionType) && (params === null || params === void 0 ? void 0 : params.policyRef) && (params === null || params === void 0 ? void 0 : params.instructionId);\n\n    if (!validFormData) {\n      dispatch(removeLoader('getEmsExistingDocuments'));\n      return;\n    }\n\n    var referenceId = params.referenceId,\n        sectionType = params.sectionType,\n        policyRef = params.policyRef,\n        instructionId = params.instructionId;\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/list?srcApplication=BOTH\",\n      data: [{\n        referenceId: referenceId,\n        sectionType: sectionType\n      }, {\n        referenceId: policyRef,\n        sectionType: constants.DMS_CONTEXT_POLICY\n      }, {\n        referenceId: instructionId,\n        sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION\n      }]\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getEmsExistingDocumentsSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data === null || data === void 0 ? void 0 : data.data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (dms.getViewTableDocuments)'\n      }));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getEmsExistingDocumentsError(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getEmsExistingDocuments'));\n    });\n  };\n};\nexport var getEmsExistingDocumentsGetRequest = function getEmsExistingDocumentsGetRequest(params) {\n  return {\n    type: 'EMS_EXISTING_DOCUMENTS_REQUEST',\n    payload: params\n  };\n};\nexport var getEmsExistingDocumentsSuccess = function getEmsExistingDocumentsSuccess(data) {\n  return {\n    type: 'EMS_EXISTING_DOCUMENTS_SUCCESS',\n    payload: data\n  };\n};\nexport var getEmsExistingDocumentsError = function getEmsExistingDocumentsError(error) {\n  return {\n    type: 'EMS_EXISTING_DOCUMENTS_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/emailManagementService/emailManagementService.actions.getEmsExistingDocuments.js"],"names":["utils","addLoader","removeLoader","authLogout","constants","getEmsExistingDocuments","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getEmsExistingDocumentsGetRequest","validFormData","referenceId","sectionType","policyRef","instructionId","api","post","token","accessToken","dmsService","path","data","DMS_CONTEXT_POLICY","DMS_CONTEXT_PROCESSING_INSTRUCTION","then","response","handleResponse","json","handleNewData","getEmsExistingDocumentsSuccess","err","handleError","message","handleUnauthorized","getEmsExistingDocumentsError","type","payload","error"],"mappings":"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","sourcesContent":["import * as utils from 'utils';\r\nimport { addLoader, removeLoader, authLogout } from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport const getEmsExistingDocuments = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/emailManagementService.actions.getEmsExistingDocuments',\r\n  };\r\n\r\n  dispatch(getEmsExistingDocumentsGetRequest(params));\r\n  dispatch(addLoader('getEmsExistingDocuments'));\r\n\r\n  const validFormData = params?.referenceId && params?.sectionType && params?.policyRef && params?.instructionId;\r\n\r\n  if (!validFormData) {\r\n    dispatch(removeLoader('getEmsExistingDocuments'));\r\n    return;\r\n  }\r\n\r\n  const { referenceId, sectionType, policyRef, instructionId } = params;\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/list?srcApplication=BOTH`,\r\n      data: [\r\n        {\r\n          referenceId: referenceId,\r\n          sectionType: sectionType,\r\n        },\r\n        {\r\n          referenceId: policyRef,\r\n          sectionType: constants.DMS_CONTEXT_POLICY,\r\n        },\r\n        {\r\n          referenceId: instructionId,\r\n          sectionType: constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n        },\r\n      ],\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getEmsExistingDocumentsSuccess(data?.data));\r\n      return data?.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, { ...defaultError, message: 'API fetch error (dms.getViewTableDocuments)' });\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getEmsExistingDocumentsError(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getEmsExistingDocuments'));\r\n    });\r\n};\r\n\r\nexport const getEmsExistingDocumentsGetRequest = (params) => {\r\n  return {\r\n    type: 'EMS_EXISTING_DOCUMENTS_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getEmsExistingDocumentsSuccess = (data) => {\r\n  return {\r\n    type: 'EMS_EXISTING_DOCUMENTS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getEmsExistingDocumentsError = (error) => {\r\n  return {\r\n    type: 'EMS_EXISTING_DOCUMENTS_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}