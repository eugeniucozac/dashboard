{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsUnderwritingGroups\\\\ClaimsUnderwritingGroups.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './ClaimsUnderwritingGroups.styles';\nimport { selectClaimsInformation } from 'stores';\nimport { FormAutocompleteMui, FormCheckbox, FormContainer, FormLabel, Overflow, TableHead, TableCell, Skeleton } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Table, TableBody, TableRow, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsUnderwritingGroupsView.prototypes = {\n  isSectionEnabled: PropTypes.bool.isRequired,\n  claimFields: PropTypes.array.isRequired,\n  claimForm: PropTypes.object,\n  uwResetKey: PropTypes.number,\n  underWritingGroups: PropTypes.object.isRequired,\n  sortingUnderwritingGroups: PropTypes.func.isRequired,\n  facilityKeys: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  isUwGroupsLoading: PropTypes.bool.isRequired\n};\nexport function ClaimsUnderwritingGroupsView(_ref) {\n  _s();\n\n  var _claimForm$errors,\n      _this = this;\n\n  var isSectionEnabled = _ref.isSectionEnabled,\n      claimFields = _ref.claimFields,\n      claimForm = _ref.claimForm,\n      uwResetKey = _ref.uwResetKey,\n      underWritingGroups = _ref.underWritingGroups,\n      sortingUnderwritingGroups = _ref.sortingUnderwritingGroups,\n      facilityKeys = _ref.facilityKeys,\n      cols = _ref.cols,\n      sort = _ref.sort,\n      isUwGroupsLoading = _ref.isUwGroupsLoading;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsUnderwritingGroups'\n  })();\n  var dispatch = useDispatch();\n  var existingClaimUWGInfo = useSelector(selectClaimsInformation).policyUnderWritingGroupDtoList;\n  var sectionSelected = claimForm === null || claimForm === void 0 ? void 0 : claimForm.watch('ugSections');\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var selectedGroups = (existingClaimUWGInfo === null || existingClaimUWGInfo === void 0 ? void 0 : existingClaimUWGInfo.map(function (item) {\n    return item === null || item === void 0 ? void 0 : item.groupRef;\n  })) || [];\n\n  var _useState = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []),\n      _useState2 = _slicedToArray(_useState, 2),\n      groups = _useState2[0],\n      setGroups = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      renderKey = _useState4[0],\n      setRenderKey = _useState4[1];\n\n  var isunderWritingEmpty = utils.generic.isInvalidOrEmptyArray(underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items);\n  var fields = utils.generic.isValidArray(underWritingGroups.items, true) ? underWritingGroups.items.map(function (field) {\n    return {\n      name: field.groupRef,\n      type: 'checkbox',\n      defaultValue: utils.generic.isValidArray(existingClaimUWGInfo, true) ? existingClaimUWGInfo.filter(function (item) {\n        return field.groupRef === item.groupRef;\n      }).length > 0 : sectionSelected === constants.CLAIM_POLICY_SECTION_DEFAULT ? true : field.selected\n    };\n  }) : [];\n\n  var checkedGroup = function checkedGroup(ug) {\n    ug.checked ? setGroups([].concat(_toConsumableArray(groups), [ug.id])) : setGroups(groups.filter(function (item) {\n      return item !== ug.id;\n    }));\n  };\n\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(groups)) {\n      setRenderKey(new Date().getTime());\n      setValue('ugSections', null);\n    }\n\n    dispatch(sortingUnderwritingGroups(groups));\n  }, [groups, isunderWritingEmpty]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (sectionSelected) {\n      var _sectionSelected$id;\n\n      if ((sectionSelected === null || sectionSelected === void 0 ? void 0 : (_sectionSelected$id = sectionSelected.id) === null || _sectionSelected$id === void 0 ? void 0 : _sectionSelected$id.toString()) === constants.CLAIM_POLICY_SECTION_DEFAULT) {\n        var _underWritingGroups$i;\n\n        var allFields = fields === null || fields === void 0 ? void 0 : fields.map(function (field) {\n          return field === null || field === void 0 ? void 0 : field.name;\n        });\n        var allSelectedFields = (underWritingGroups === null || underWritingGroups === void 0 ? void 0 : (_underWritingGroups$i = underWritingGroups.items) === null || _underWritingGroups$i === void 0 ? void 0 : _underWritingGroups$i.filter(function (eachUg) {\n          return eachUg.selected === true;\n        }).map(function (eachUgData) {\n          return eachUgData === null || eachUgData === void 0 ? void 0 : eachUgData.groupRef;\n        })) || [];\n        var allUnSelectedFields = !utils.generic.isInvalidOrEmptyArray(allSelectedFields) && allFields.filter(function (ref) {\n          return !allSelectedFields.includes(ref);\n        }) || [];\n\n        var selectedAllFields = _toConsumableArray(!utils.generic.isInvalidOrEmptyArray(allSelectedFields) ? allSelectedFields : allFields);\n\n        setGroups(selectedAllFields);\n        selectedAllFields === null || selectedAllFields === void 0 ? void 0 : selectedAllFields.forEach(function (grp) {\n          return setValue(grp, true);\n        });\n        allUnSelectedFields === null || allUnSelectedFields === void 0 ? void 0 : allUnSelectedFields.forEach(function (grp) {\n          return setValue(grp, false);\n        });\n        dispatch(sortingUnderwritingGroups(allFields));\n      } else if (sectionSelected === null || sectionSelected === void 0 ? void 0 : sectionSelected.id) {\n        var findMatchingUgs = underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items.filter(function (eachUg) {\n          return (eachUg === null || eachUg === void 0 ? void 0 : eachUg.policySectionID) === Number(sectionSelected === null || sectionSelected === void 0 ? void 0 : sectionSelected.id);\n        }).map(function (eachUgData) {\n          return eachUgData === null || eachUgData === void 0 ? void 0 : eachUgData.groupRef;\n        });\n        var existingMatchingSelected = (underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items.filter(function (eachUg) {\n          return eachUg.selected && (eachUg === null || eachUg === void 0 ? void 0 : eachUg.policySectionID) === Number(sectionSelected === null || sectionSelected === void 0 ? void 0 : sectionSelected.id);\n        }).map(function (eachUgData) {\n          return eachUgData === null || eachUgData === void 0 ? void 0 : eachUgData.groupRef;\n        })) || [];\n        var existingMatchingUnSelected = !utils.generic.isInvalidOrEmptyArray(existingMatchingSelected) && findMatchingUgs.filter(function (ref) {\n          return !existingMatchingSelected.includes(ref);\n        }) || [];\n        var unMatchingUgs = underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items.filter(function (eachUg) {\n          return existingMatchingUnSelected.includes(eachUg.groupRef) || (eachUg === null || eachUg === void 0 ? void 0 : eachUg.policySectionID) !== Number(sectionSelected === null || sectionSelected === void 0 ? void 0 : sectionSelected.id);\n        }).map(function (eachUgData) {\n          return eachUgData === null || eachUgData === void 0 ? void 0 : eachUgData.groupRef;\n        });\n\n        var selectedGrp = _toConsumableArray(!utils.generic.isInvalidOrEmptyArray(existingMatchingSelected) ? existingMatchingSelected : findMatchingUgs);\n\n        setGroups(selectedGrp);\n        selectedGrp === null || selectedGrp === void 0 ? void 0 : selectedGrp.forEach(function (grp) {\n          return setValue(grp, true);\n        });\n        unMatchingUgs === null || unMatchingUgs === void 0 ? void 0 : unMatchingUgs.forEach(function (grp) {\n          return setValue(grp, false);\n        });\n        dispatch(sortingUnderwritingGroups(selectedGrp));\n      }\n    }\n  }, [sectionSelected]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var resetUG = function resetUG() {\n    dispatch(sortingUnderwritingGroups([]));\n    setGroups([]);\n    fields.forEach(function (field) {\n      setValue(field.name, false);\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-search-table\",\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      nestedClasses: {\n        root: classes.form\n      },\n      children: /*#__PURE__*/_jsxDEV(Overflow, {\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: isSectionEnabled && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 2,\n              className: classes.ugSelectLabel,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('claims.underWritingGroups.section'), \" *\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 148,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 147,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              xs: 5,\n              className: classes.ugSelectField,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(claimFields, 'ugSections', claimForm === null || claimForm === void 0 ? void 0 : claimForm.control)), {}, {\n                error: claimForm === null || claimForm === void 0 ? void 0 : (_claimForm$errors = claimForm.errors) === null || _claimForm$errors === void 0 ? void 0 : _claimForm$errors.ugSections,\n                callback: function callback(e, data) {\n                  return !data && resetUG();\n                },\n                onSelect: function onSelect() {\n                  dispatch(sortingUnderwritingGroups([]));\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 151,\n                columnNumber: 19\n              }, this)\n            }, renderKey || uwResetKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 150,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 144,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Table, {\n          \"data-testid\": \"claims-under-writing-groups-table\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            columns: cols,\n            sorting: sort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 164,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            \"data-testid\": \"claims-list\",\n            children: isUwGroupsLoading ? /*#__PURE__*/_jsxDEV(TableRow, {\n              children: /*#__PURE__*/_jsxDEV(TableCell, {\n                colSpan: cols === null || cols === void 0 ? void 0 : cols.length,\n                children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                  height: 50,\n                  animation: \"wave\",\n                  displayNumber: 5\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 168,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 167,\n              columnNumber: 17\n            }, this) : utils.generic.isValidArray(underWritingGroups.items, true) && underWritingGroups.items.map(function (row, i) {\n              return /*#__PURE__*/_jsxDEV(TableRow, {\n                \"data-testid\": \"claims-under-writing-groups-row-\".concat(row.facilityRef),\n                children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"row-col-\".concat(row.facilityRef),\n                  children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, row.groupRef)), {}, {\n                    control: control,\n                    register: register,\n                    watch: watch,\n                    muiComponentProps: {\n                      onChange: function onChange(id, checked) {\n                        return checkedGroup({\n                          id: id,\n                          checked: checked\n                        });\n                      }\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 177,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 176,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.groupRef),\n                  children: row.groupRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 187,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.percentage),\n                  children: row.percentage\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 190,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.facility),\n                  children: row.facility ? utils.string.t('form.options.yesNoNa.yes') : utils.string.t('form.options.yesNoNa.no')\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.facilityRef),\n                  children: row.facilityRef\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 196,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.slipLeader),\n                  children: row.slipLeader\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 199,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.ucr),\n                  children: ''\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.narrative),\n                  children: row.narrative\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.dateValidFrom),\n                  children: utils.string.t('format.date', {\n                    value: {\n                      date: row.dateValidFrom,\n                      format: config.ui.format.date.text\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                  compact: true,\n                  \"data-testid\": \"claims-under-writing-groups-col-\".concat(row.dateValidTo),\n                  children: utils.string.t('format.date', {\n                    value: {\n                      date: row.dateValidTo,\n                      format: config.ui.format.date.text\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 213,\n                  columnNumber: 21\n                }, _this)]\n              }, facilityKeys[i], true, {\n                fileName: _jsxFileName,\n                lineNumber: 175,\n                columnNumber: 19\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, this)]\n        }, uwResetKey, true, {\n          fileName: _jsxFileName,\n          lineNumber: 163,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsUnderwritingGroupsView, \"aSik9snPD84c5n3CgyWUUIhaSxw=\", false, function () {\n  return [useDispatch, useSelector, useForm];\n});\n\n_c = ClaimsUnderwritingGroupsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsUnderwritingGroupsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsUnderwritingGroups/ClaimsUnderwritingGroups.view.js"],"names":["React","useEffect","useState","useForm","useDispatch","useSelector","PropTypes","styles","selectClaimsInformation","FormAutocompleteMui","FormCheckbox","FormContainer","FormLabel","Overflow","TableHead","TableCell","Skeleton","utils","config","constants","makeStyles","Table","TableBody","TableRow","Box","Grid","ClaimsUnderwritingGroupsView","prototypes","isSectionEnabled","bool","isRequired","claimFields","array","claimForm","object","uwResetKey","number","underWritingGroups","sortingUnderwritingGroups","func","facilityKeys","cols","sort","isUwGroupsLoading","classes","name","dispatch","existingClaimUWGInfo","policyUnderWritingGroupDtoList","sectionSelected","watch","control","register","setValue","selectedGroups","map","item","groupRef","generic","isInvalidOrEmptyArray","groups","setGroups","renderKey","setRenderKey","isunderWritingEmpty","items","fields","isValidArray","field","type","defaultValue","filter","length","CLAIM_POLICY_SECTION_DEFAULT","selected","checkedGroup","ug","checked","id","Date","getTime","toString","allFields","allSelectedFields","eachUg","eachUgData","allUnSelectedFields","ref","includes","selectedAllFields","forEach","grp","findMatchingUgs","policySectionID","Number","existingMatchingSelected","existingMatchingUnSelected","unMatchingUgs","selectedGrp","resetUG","root","form","ugSelectLabel","string","t","ugSelectField","getFieldProps","errors","ugSections","e","data","row","i","facilityRef","onChange","percentage","facility","slipLeader","ucr","narrative","dateValidFrom","value","date","format","ui","text","dateValidTo"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,mCAAnB;AACA,SAASC,uBAAT,QAAwC,QAAxC;AACA,SAASC,mBAAT,EAA8BC,YAA9B,EAA4CC,aAA5C,EAA2DC,SAA3D,EAAsEC,QAAtE,EAAgFC,SAAhF,EAA2FC,SAA3F,EAAsGC,QAAtG,QAAsH,YAAtH;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,KAArB,EAA4BC,SAA5B,EAAuCC,QAAvC,EAAiDC,GAAjD,EAAsDC,IAAtD,QAAkE,mBAAlE;;;AAEAC,4BAA4B,CAACC,UAA7B,GAA0C;AACxCC,EAAAA,gBAAgB,EAAEtB,SAAS,CAACuB,IAAV,CAAeC,UADO;AAExCC,EAAAA,WAAW,EAAEzB,SAAS,CAAC0B,KAAV,CAAgBF,UAFW;AAGxCG,EAAAA,SAAS,EAAE3B,SAAS,CAAC4B,MAHmB;AAIxCC,EAAAA,UAAU,EAAE7B,SAAS,CAAC8B,MAJkB;AAKxCC,EAAAA,kBAAkB,EAAE/B,SAAS,CAAC4B,MAAV,CAAiBJ,UALG;AAMxCQ,EAAAA,yBAAyB,EAAEhC,SAAS,CAACiC,IAAV,CAAeT,UANF;AAOxCU,EAAAA,YAAY,EAAElC,SAAS,CAAC0B,KAAV,CAAgBF,UAPU;AAQxCW,EAAAA,IAAI,EAAEnC,SAAS,CAAC0B,KAAV,CAAgBF,UARkB;AASxCY,EAAAA,IAAI,EAAEpC,SAAS,CAAC4B,MAAV,CAAiBJ,UATiB;AAUxCa,EAAAA,iBAAiB,EAAErC,SAAS,CAACuB,IAAV,CAAeC;AAVM,CAA1C;AAYA,OAAO,SAASJ,4BAAT,OAWJ;AAAA;;AAAA;AAAA;;AAAA,MAVDE,gBAUC,QAVDA,gBAUC;AAAA,MATDG,WASC,QATDA,WASC;AAAA,MARDE,SAQC,QARDA,SAQC;AAAA,MAPDE,UAOC,QAPDA,UAOC;AAAA,MANDE,kBAMC,QANDA,kBAMC;AAAA,MALDC,yBAKC,QALDA,yBAKC;AAAA,MAJDE,YAIC,QAJDA,YAIC;AAAA,MAHDC,IAGC,QAHDA,IAGC;AAAA,MAFDC,IAEC,QAFDA,IAEC;AAAA,MADDC,iBACC,QADDA,iBACC;AACD,MAAMC,OAAO,GAAGxB,UAAU,CAACb,MAAD,EAAS;AAAEsC,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;AAEA,MAAMC,QAAQ,GAAG1C,WAAW,EAA5B;AAEA,MAAM2C,oBAAoB,GAAG1C,WAAW,CAACG,uBAAD,CAAX,CAAqCwC,8BAAlE;AAEA,MAAMC,eAAe,GAAGhB,SAAH,aAAGA,SAAH,uBAAGA,SAAS,CAAEiB,KAAX,CAAiB,YAAjB,CAAxB;;AAPC,iBAS8C/C,OAAO,EATrD;AAAA,MASOgD,OATP,YASOA,OATP;AAAA,MASgBC,QAThB,YASgBA,QAThB;AAAA,MAS0BF,KAT1B,YAS0BA,KAT1B;AAAA,MASiCG,QATjC,YASiCA,QATjC;;AAWD,MAAMC,cAAc,GAAG,CAAAP,oBAAoB,SAApB,IAAAA,oBAAoB,WAApB,YAAAA,oBAAoB,CAAEQ,GAAtB,CAA0B,UAACC,IAAD;AAAA,WAAUA,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEC,QAAhB;AAAA,GAA1B,MAAuD,EAA9E;;AAXC,kBAa2BvD,QAAQ,CAAC,CAACe,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCL,cAApC,CAAD,GAAuDA,cAAvD,GAAwE,EAAzE,CAbnC;AAAA;AAAA,MAaMM,MAbN;AAAA,MAacC,SAbd;;AAAA,mBAeiC3D,QAAQ,CAAC,IAAD,CAfzC;AAAA;AAAA,MAeM4D,SAfN;AAAA,MAeiBC,YAfjB;;AAiBD,MAAMC,mBAAmB,GAAG/C,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCtB,kBAApC,aAAoCA,kBAApC,uBAAoCA,kBAAkB,CAAE4B,KAAxD,CAA5B;AAEA,MAAMC,MAAM,GAAGjD,KAAK,CAACyC,OAAN,CAAcS,YAAd,CAA2B9B,kBAAkB,CAAC4B,KAA9C,EAAqD,IAArD,IACX5B,kBAAkB,CAAC4B,KAAnB,CAAyBV,GAAzB,CAA6B,UAACa,KAAD;AAAA,WAAY;AACvCvB,MAAAA,IAAI,EAAEuB,KAAK,CAACX,QAD2B;AAEvCY,MAAAA,IAAI,EAAE,UAFiC;AAGvCC,MAAAA,YAAY,EAAErD,KAAK,CAACyC,OAAN,CAAcS,YAAd,CAA2BpB,oBAA3B,EAAiD,IAAjD,IACVA,oBAAoB,CAACwB,MAArB,CAA4B,UAACf,IAAD;AAAA,eAAUY,KAAK,CAACX,QAAN,KAAmBD,IAAI,CAACC,QAAlC;AAAA,OAA5B,EAAwEe,MAAxE,GAAiF,CADvE,GAEVvB,eAAe,KAAK9B,SAAS,CAACsD,4BAA9B,GACA,IADA,GAEAL,KAAK,CAACM;AAP6B,KAAZ;AAAA,GAA7B,CADW,GAUX,EAVJ;;AAYA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,EAAD,EAAQ;AAC3BA,IAAAA,EAAE,CAACC,OAAH,GAAahB,SAAS,8BAAKD,MAAL,IAAagB,EAAE,CAACE,EAAhB,GAAtB,GAA6CjB,SAAS,CAACD,MAAM,CAACW,MAAP,CAAc,UAACf,IAAD;AAAA,aAAUA,IAAI,KAAKoB,EAAE,CAACE,EAAtB;AAAA,KAAd,CAAD,CAAtD;AACD,GAFD;;AAIA7E,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgB,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCC,MAApC,CAAJ,EAAiD;AAC/CG,MAAAA,YAAY,CAAC,IAAIgB,IAAJ,GAAWC,OAAX,EAAD,CAAZ;AACA3B,MAAAA,QAAQ,CAAC,YAAD,EAAe,IAAf,CAAR;AACD;;AACDP,IAAAA,QAAQ,CAACR,yBAAyB,CAACsB,MAAD,CAA1B,CAAR;AACD,GANQ,EAMN,CAACA,MAAD,EAASI,mBAAT,CANM,CAAT,CAnCC,CAyCkC;;AAEnC/D,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIgD,eAAJ,EAAqB;AAAA;;AACnB,UAAI,CAAAA,eAAe,SAAf,IAAAA,eAAe,WAAf,mCAAAA,eAAe,CAAE6B,EAAjB,4EAAqBG,QAArB,QAAoC9D,SAAS,CAACsD,4BAAlD,EAAgF;AAAA;;AAC9E,YAAIS,SAAS,GAAGhB,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEX,GAAR,CAAY,UAACa,KAAD;AAAA,iBAAWA,KAAX,aAAWA,KAAX,uBAAWA,KAAK,CAAEvB,IAAlB;AAAA,SAAZ,CAAhB;AAEA,YAAIsC,iBAAiB,GACnB,CAAA9C,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,qCAAAA,kBAAkB,CAAE4B,KAApB,gFAA2BM,MAA3B,CAAkC,UAACa,MAAD;AAAA,iBAAYA,MAAM,CAACV,QAAP,KAAoB,IAAhC;AAAA,SAAlC,EAAwEnB,GAAxE,CAA4E,UAAC8B,UAAD;AAAA,iBAAgBA,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAE5B,QAA5B;AAAA,SAA5E,MAAqH,EADvH;AAEA,YAAI6B,mBAAmB,GACpB,CAACrE,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCwB,iBAApC,CAAD,IAA2DD,SAAS,CAACX,MAAV,CAAiB,UAACgB,GAAD;AAAA,iBAAS,CAACJ,iBAAiB,CAACK,QAAlB,CAA2BD,GAA3B,CAAV;AAAA,SAAjB,CAA5D,IAA4H,EAD9H;;AAGA,YAAIE,iBAAiB,sBAAQ,CAACxE,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCwB,iBAApC,CAAD,GAA0DA,iBAA1D,GAA8ED,SAAtF,CAArB;;AAEArB,QAAAA,SAAS,CAAC4B,iBAAD,CAAT;AACAA,QAAAA,iBAAiB,SAAjB,IAAAA,iBAAiB,WAAjB,YAAAA,iBAAiB,CAAEC,OAAnB,CAA2B,UAACC,GAAD;AAAA,iBAAStC,QAAQ,CAACsC,GAAD,EAAM,IAAN,CAAjB;AAAA,SAA3B;AACAL,QAAAA,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEI,OAArB,CAA6B,UAACC,GAAD;AAAA,iBAAStC,QAAQ,CAACsC,GAAD,EAAM,KAAN,CAAjB;AAAA,SAA7B;AAEA7C,QAAAA,QAAQ,CAACR,yBAAyB,CAAC4C,SAAD,CAA1B,CAAR;AACD,OAfD,MAeO,IAAIjC,eAAJ,aAAIA,eAAJ,uBAAIA,eAAe,CAAE6B,EAArB,EAAyB;AAC9B,YAAMc,eAAe,GAAGvD,kBAAH,aAAGA,kBAAH,uBAAGA,kBAAkB,CAAE4B,KAApB,CACrBM,MADqB,CACd,UAACa,MAAD;AAAA,iBAAY,CAAAA,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,eAAR,MAA4BC,MAAM,CAAC7C,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAE6B,EAAlB,CAA9C;AAAA,SADc,EAErBvB,GAFqB,CAEjB,UAAC8B,UAAD;AAAA,iBAAgBA,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAE5B,QAA5B;AAAA,SAFiB,CAAxB;AAIA,YAAMsC,wBAAwB,GAC5B,CAAA1D,kBAAkB,SAAlB,IAAAA,kBAAkB,WAAlB,YAAAA,kBAAkB,CAAE4B,KAApB,CACGM,MADH,CACU,UAACa,MAAD;AAAA,iBAAYA,MAAM,CAACV,QAAP,IAAmB,CAAAU,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,eAAR,MAA4BC,MAAM,CAAC7C,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAE6B,EAAlB,CAAjE;AAAA,SADV,EAEGvB,GAFH,CAEO,UAAC8B,UAAD;AAAA,iBAAgBA,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAE5B,QAA5B;AAAA,SAFP,MAEgD,EAHlD;AAKA,YAAMuC,0BAA0B,GAC7B,CAAC/E,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCoC,wBAApC,CAAD,IACCH,eAAe,CAACrB,MAAhB,CAAuB,UAACgB,GAAD;AAAA,iBAAS,CAACQ,wBAAwB,CAACP,QAAzB,CAAkCD,GAAlC,CAAV;AAAA,SAAvB,CADF,IAEA,EAHF;AAKA,YAAIU,aAAa,GAAG5D,kBAAH,aAAGA,kBAAH,uBAAGA,kBAAkB,CAAE4B,KAApB,CACjBM,MADiB,CAEhB,UAACa,MAAD;AAAA,iBAAYY,0BAA0B,CAACR,QAA3B,CAAoCJ,MAAM,CAAC3B,QAA3C,KAAwD,CAAA2B,MAAM,SAAN,IAAAA,MAAM,WAAN,YAAAA,MAAM,CAAES,eAAR,MAA4BC,MAAM,CAAC7C,eAAD,aAACA,eAAD,uBAACA,eAAe,CAAE6B,EAAlB,CAAtG;AAAA,SAFgB,EAIjBvB,GAJiB,CAIb,UAAC8B,UAAD;AAAA,iBAAgBA,UAAhB,aAAgBA,UAAhB,uBAAgBA,UAAU,CAAE5B,QAA5B;AAAA,SAJa,CAApB;;AAMA,YAAIyC,WAAW,sBACT,CAACjF,KAAK,CAACyC,OAAN,CAAcC,qBAAd,CAAoCoC,wBAApC,CAAD,GAAiEA,wBAAjE,GAA4FH,eADnF,CAAf;;AAGA/B,QAAAA,SAAS,CAACqC,WAAD,CAAT;AACAA,QAAAA,WAAW,SAAX,IAAAA,WAAW,WAAX,YAAAA,WAAW,CAAER,OAAb,CAAqB,UAACC,GAAD;AAAA,iBAAStC,QAAQ,CAACsC,GAAD,EAAM,IAAN,CAAjB;AAAA,SAArB;AACAM,QAAAA,aAAa,SAAb,IAAAA,aAAa,WAAb,YAAAA,aAAa,CAAEP,OAAf,CAAuB,UAACC,GAAD;AAAA,iBAAStC,QAAQ,CAACsC,GAAD,EAAM,KAAN,CAAjB;AAAA,SAAvB;AACA7C,QAAAA,QAAQ,CAACR,yBAAyB,CAAC4D,WAAD,CAA1B,CAAR;AACD;AACF;AACF,GA/CQ,EA+CN,CAACjD,eAAD,CA/CM,CAAT,CA3CC,CA0FsB;;AAEvB,MAAMkD,OAAO,GAAG,SAAVA,OAAU,GAAM;AACpBrD,IAAAA,QAAQ,CAACR,yBAAyB,CAAC,EAAD,CAA1B,CAAR;AACAuB,IAAAA,SAAS,CAAC,EAAD,CAAT;AACAK,IAAAA,MAAM,CAACwB,OAAP,CAAe,UAACtB,KAAD,EAAW;AACxBf,MAAAA,QAAQ,CAACe,KAAK,CAACvB,IAAP,EAAa,KAAb,CAAR;AACD,KAFD;AAGD,GAND;;AAQA,sBACE,QAAC,GAAD;AAAK,mBAAY,qBAAjB;AAAA,2BACE,QAAC,aAAD;AAAe,MAAA,aAAa,EAAE;AAAEuD,QAAAA,IAAI,EAAExD,OAAO,CAACyD;AAAhB,OAA9B;AAAA,6BACE,QAAC,QAAD;AAAA,gCACE,QAAC,IAAD;AAAM,UAAA,SAAS,MAAf;AAAA,oBACGzE,gBAAgB,iBACf;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,SAAS,EAAEgB,OAAO,CAAC0D,aAArC;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,KAAK,YAAKrF,KAAK,CAACsF,MAAN,CAAaC,CAAb,CAAe,mCAAf,CAAL;AAAhB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADF,eAIE,QAAC,IAAD;AAAM,cAAA,IAAI,MAAV;AAAW,cAAA,EAAE,EAAE,CAAf;AAAkB,cAAA,SAAS,EAAE5D,OAAO,CAAC6D,aAArC;AAAA,qCACE,QAAC,mBAAD,kCACMxF,KAAK,CAACoF,IAAN,CAAWK,aAAX,CAAyB3E,WAAzB,EAAsC,YAAtC,EAAoDE,SAApD,aAAoDA,SAApD,uBAAoDA,SAAS,CAAEkB,OAA/D,CADN;AAEE,gBAAA,KAAK,EAAElB,SAAF,aAAEA,SAAF,4CAAEA,SAAS,CAAE0E,MAAb,sDAAE,kBAAmBC,UAF5B;AAGE,gBAAA,QAAQ,EAAE,kBAACC,CAAD,EAAIC,IAAJ;AAAA,yBAAa,CAACA,IAAD,IAASX,OAAO,EAA7B;AAAA,iBAHZ;AAIE,gBAAA,QAAQ,EAAE,oBAAM;AACdrD,kBAAAA,QAAQ,CAACR,yBAAyB,CAAC,EAAD,CAA1B,CAAR;AACD;AANH;AAAA;AAAA;AAAA;AAAA;AADF,eAAyDwB,SAAS,IAAI3B,UAAtE;AAAA;AAAA;AAAA;AAAA,oBAJF;AAAA;AAFJ;AAAA;AAAA;AAAA;AAAA,gBADF,eAoBE,QAAC,KAAD;AAAO,yBAAY,mCAAnB;AAAA,kCACE,QAAC,SAAD;AAAW,YAAA,OAAO,EAAEM,IAApB;AAA0B,YAAA,OAAO,EAAEC;AAAnC;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,SAAD;AAAW,2BAAY,aAAvB;AAAA,sBACGC,iBAAiB,gBAChB,QAAC,QAAD;AAAA,qCACE,QAAC,SAAD;AAAW,gBAAA,OAAO,EAAEF,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAE+B,MAA1B;AAAA,uCACE,QAAC,QAAD;AAAU,kBAAA,MAAM,EAAE,EAAlB;AAAsB,kBAAA,SAAS,EAAC,MAAhC;AAAuC,kBAAA,aAAa,EAAE;AAAtD;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBADgB,GAOhBvD,KAAK,CAACyC,OAAN,CAAcS,YAAd,CAA2B9B,kBAAkB,CAAC4B,KAA9C,EAAqD,IAArD,KACA5B,kBAAkB,CAAC4B,KAAnB,CAAyBV,GAAzB,CAA6B,UAACwD,GAAD,EAAMC,CAAN;AAAA,kCAC3B,QAAC,QAAD;AAAgC,yEAAgDD,GAAG,CAACE,WAApD,CAAhC;AAAA,wCACE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,mDAAwBF,GAAG,CAACE,WAA5B,CAAnB;AAAA,yCACE,QAAC,YAAD,kCACMhG,KAAK,CAACoF,IAAN,CAAWK,aAAX,CAAyBxC,MAAzB,EAAiC6C,GAAG,CAACtD,QAArC,CADN;AAEE,oBAAA,OAAO,EAAEN,OAFX;AAGE,oBAAA,QAAQ,EAAEC,QAHZ;AAIE,oBAAA,KAAK,EAAEF,KAJT;AAKE,oBAAA,iBAAiB,EAAE;AACjBgE,sBAAAA,QAAQ,EAAE,kBAACpC,EAAD,EAAKD,OAAL;AAAA,+BAAiBF,YAAY,CAAC;AAAEG,0BAAAA,EAAE,EAAFA,EAAF;AAAMD,0BAAAA,OAAO,EAAPA;AAAN,yBAAD,CAA7B;AAAA;AADO;AALrB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,yBADF,eAYE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDkC,GAAG,CAACtD,QAApD,CAAnB;AAAA,4BACGsD,GAAG,CAACtD;AADP;AAAA;AAAA;AAAA;AAAA,yBAZF,eAeE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDsD,GAAG,CAACI,UAApD,CAAnB;AAAA,4BACGJ,GAAG,CAACI;AADP;AAAA;AAAA;AAAA;AAAA,yBAfF,eAkBE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDJ,GAAG,CAACK,QAApD,CAAnB;AAAA,4BACGL,GAAG,CAACK,QAAJ,GAAenG,KAAK,CAACsF,MAAN,CAAaC,CAAb,CAAe,0BAAf,CAAf,GAA4DvF,KAAK,CAACsF,MAAN,CAAaC,CAAb,CAAe,yBAAf;AAD/D;AAAA;AAAA;AAAA;AAAA,yBAlBF,eAqBE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDO,GAAG,CAACE,WAApD,CAAnB;AAAA,4BACGF,GAAG,CAACE;AADP;AAAA;AAAA;AAAA;AAAA,yBArBF,eAwBE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDF,GAAG,CAACM,UAApD,CAAnB;AAAA,4BACGN,GAAG,CAACM;AADP;AAAA;AAAA;AAAA;AAAA,yBAxBF,eA2BE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDN,GAAG,CAACO,GAApD,CAAnB;AAAA,4BACG;AADH;AAAA;AAAA;AAAA;AAAA,yBA3BF,eA8BE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDP,GAAG,CAACQ,SAApD,CAAnB;AAAA,4BACGR,GAAG,CAACQ;AADP;AAAA;AAAA;AAAA;AAAA,yBA9BF,eAiCE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDR,GAAG,CAACS,aAApD,CAAnB;AAAA,4BACGvG,KAAK,CAACsF,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAC7BiB,oBAAAA,KAAK,EAAE;AAAEC,sBAAAA,IAAI,EAAEX,GAAG,CAACS,aAAZ;AAA2BG,sBAAAA,MAAM,EAAEzG,MAAM,CAAC0G,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAAzD;AADsB,mBAA9B;AADH;AAAA;AAAA;AAAA;AAAA,yBAjCF,eAsCE,QAAC,SAAD;AAAW,kBAAA,OAAO,MAAlB;AAAmB,2EAAgDd,GAAG,CAACe,WAApD,CAAnB;AAAA,4BACG7G,KAAK,CAACsF,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAC7BiB,oBAAAA,KAAK,EAAE;AAAEC,sBAAAA,IAAI,EAAEX,GAAG,CAACe,WAAZ;AAAyBH,sBAAAA,MAAM,EAAEzG,MAAM,CAAC0G,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAAvD;AADsB,mBAA9B;AADH;AAAA;AAAA;AAAA;AAAA,yBAtCF;AAAA,iBAAerF,YAAY,CAACwE,CAAD,CAA3B;AAAA;AAAA;AAAA;AAAA,uBAD2B;AAAA,aAA7B;AATJ;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA,WAA4D7E,UAA5D;AAAA;AAAA;AAAA;AAAA,gBApBF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAuFD;;GAtMeT,4B;UAcGtB,W,EAEYC,W,EAIkBF,O;;;KApBjCuB,4B","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './ClaimsUnderwritingGroups.styles';\r\nimport { selectClaimsInformation } from 'stores';\r\nimport { FormAutocompleteMui, FormCheckbox, FormContainer, FormLabel, Overflow, TableHead, TableCell, Skeleton } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableBody, TableRow, Box, Grid } from '@material-ui/core';\r\n\r\nClaimsUnderwritingGroupsView.prototypes = {\r\n  isSectionEnabled: PropTypes.bool.isRequired,\r\n  claimFields: PropTypes.array.isRequired,\r\n  claimForm: PropTypes.object,\r\n  uwResetKey: PropTypes.number,\r\n  underWritingGroups: PropTypes.object.isRequired,\r\n  sortingUnderwritingGroups: PropTypes.func.isRequired,\r\n  facilityKeys: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  isUwGroupsLoading: PropTypes.bool.isRequired,\r\n};\r\nexport function ClaimsUnderwritingGroupsView({\r\n  isSectionEnabled,\r\n  claimFields,\r\n  claimForm,\r\n  uwResetKey,\r\n  underWritingGroups,\r\n  sortingUnderwritingGroups,\r\n  facilityKeys,\r\n  cols,\r\n  sort,\r\n  isUwGroupsLoading,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsUnderwritingGroups' })();\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const existingClaimUWGInfo = useSelector(selectClaimsInformation).policyUnderWritingGroupDtoList;\r\n\r\n  const sectionSelected = claimForm?.watch('ugSections');\r\n\r\n  const { control, register, watch, setValue } = useForm();\r\n\r\n  const selectedGroups = existingClaimUWGInfo?.map((item) => item?.groupRef) || [];\r\n\r\n  const [groups, setGroups] = useState(!utils.generic.isInvalidOrEmptyArray(selectedGroups) ? selectedGroups : []);\r\n\r\n  const [renderKey, setRenderKey] = useState(null);\r\n\r\n  const isunderWritingEmpty = utils.generic.isInvalidOrEmptyArray(underWritingGroups?.items);\r\n\r\n  const fields = utils.generic.isValidArray(underWritingGroups.items, true)\r\n    ? underWritingGroups.items.map((field) => ({\r\n        name: field.groupRef,\r\n        type: 'checkbox',\r\n        defaultValue: utils.generic.isValidArray(existingClaimUWGInfo, true)\r\n          ? existingClaimUWGInfo.filter((item) => field.groupRef === item.groupRef).length > 0\r\n          : sectionSelected === constants.CLAIM_POLICY_SECTION_DEFAULT\r\n          ? true\r\n          : field.selected,\r\n      }))\r\n    : [];\r\n\r\n  const checkedGroup = (ug) => {\r\n    ug.checked ? setGroups([...groups, ug.id]) : setGroups(groups.filter((item) => item !== ug.id));\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isInvalidOrEmptyArray(groups)) {\r\n      setRenderKey(new Date().getTime());\r\n      setValue('ugSections', null);\r\n    }\r\n    dispatch(sortingUnderwritingGroups(groups));\r\n  }, [groups, isunderWritingEmpty]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (sectionSelected) {\r\n      if (sectionSelected?.id?.toString() === constants.CLAIM_POLICY_SECTION_DEFAULT) {\r\n        let allFields = fields?.map((field) => field?.name);\r\n\r\n        let allSelectedFields =\r\n          underWritingGroups?.items?.filter((eachUg) => eachUg.selected === true).map((eachUgData) => eachUgData?.groupRef) || [];\r\n        let allUnSelectedFields =\r\n          (!utils.generic.isInvalidOrEmptyArray(allSelectedFields) && allFields.filter((ref) => !allSelectedFields.includes(ref))) || [];\r\n\r\n        let selectedAllFields = [...(!utils.generic.isInvalidOrEmptyArray(allSelectedFields) ? allSelectedFields : allFields)];\r\n\r\n        setGroups(selectedAllFields);\r\n        selectedAllFields?.forEach((grp) => setValue(grp, true));\r\n        allUnSelectedFields?.forEach((grp) => setValue(grp, false));\r\n\r\n        dispatch(sortingUnderwritingGroups(allFields));\r\n      } else if (sectionSelected?.id) {\r\n        const findMatchingUgs = underWritingGroups?.items\r\n          .filter((eachUg) => eachUg?.policySectionID === Number(sectionSelected?.id))\r\n          .map((eachUgData) => eachUgData?.groupRef);\r\n\r\n        const existingMatchingSelected =\r\n          underWritingGroups?.items\r\n            .filter((eachUg) => eachUg.selected && eachUg?.policySectionID === Number(sectionSelected?.id))\r\n            .map((eachUgData) => eachUgData?.groupRef) || [];\r\n\r\n        const existingMatchingUnSelected =\r\n          (!utils.generic.isInvalidOrEmptyArray(existingMatchingSelected) &&\r\n            findMatchingUgs.filter((ref) => !existingMatchingSelected.includes(ref))) ||\r\n          [];\r\n\r\n        let unMatchingUgs = underWritingGroups?.items\r\n          .filter(\r\n            (eachUg) => existingMatchingUnSelected.includes(eachUg.groupRef) || eachUg?.policySectionID !== Number(sectionSelected?.id)\r\n          )\r\n          .map((eachUgData) => eachUgData?.groupRef);\r\n\r\n        let selectedGrp = [\r\n          ...(!utils.generic.isInvalidOrEmptyArray(existingMatchingSelected) ? existingMatchingSelected : findMatchingUgs),\r\n        ];\r\n        setGroups(selectedGrp);\r\n        selectedGrp?.forEach((grp) => setValue(grp, true));\r\n        unMatchingUgs?.forEach((grp) => setValue(grp, false));\r\n        dispatch(sortingUnderwritingGroups(selectedGrp));\r\n      }\r\n    }\r\n  }, [sectionSelected]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const resetUG = () => {\r\n    dispatch(sortingUnderwritingGroups([]));\r\n    setGroups([]);\r\n    fields.forEach((field) => {\r\n      setValue(field.name, false);\r\n    });\r\n  };\r\n\r\n  return (\r\n    <Box data-testid=\"claims-search-table\">\r\n      <FormContainer nestedClasses={{ root: classes.form }}>\r\n        <Overflow>\r\n          <Grid container>\r\n            {isSectionEnabled && (\r\n              <>\r\n                <Grid item xs={2} className={classes.ugSelectLabel}>\r\n                  <FormLabel label={`${utils.string.t('claims.underWritingGroups.section')} *`} />\r\n                </Grid>\r\n                <Grid item xs={5} className={classes.ugSelectField} key={renderKey || uwResetKey}>\r\n                  <FormAutocompleteMui\r\n                    {...utils.form.getFieldProps(claimFields, 'ugSections', claimForm?.control)}\r\n                    error={claimForm?.errors?.ugSections}\r\n                    callback={(e, data) => !data && resetUG()}\r\n                    onSelect={() => {\r\n                      dispatch(sortingUnderwritingGroups([]));\r\n                    }}\r\n                  />\r\n                </Grid>\r\n              </>\r\n            )}\r\n          </Grid>\r\n          <Table data-testid=\"claims-under-writing-groups-table\" key={uwResetKey}>\r\n            <TableHead columns={cols} sorting={sort} />\r\n            <TableBody data-testid=\"claims-list\">\r\n              {isUwGroupsLoading ? (\r\n                <TableRow>\r\n                  <TableCell colSpan={cols?.length}>\r\n                    <Skeleton height={50} animation=\"wave\" displayNumber={5} />\r\n                  </TableCell>\r\n                </TableRow>\r\n              ) : (\r\n                utils.generic.isValidArray(underWritingGroups.items, true) &&\r\n                underWritingGroups.items.map((row, i) => (\r\n                  <TableRow key={facilityKeys[i]} data-testid={`claims-under-writing-groups-row-${row.facilityRef}`}>\r\n                    <TableCell compact data-testid={`row-col-${row.facilityRef}`}>\r\n                      <FormCheckbox\r\n                        {...utils.form.getFieldProps(fields, row.groupRef)}\r\n                        control={control}\r\n                        register={register}\r\n                        watch={watch}\r\n                        muiComponentProps={{\r\n                          onChange: (id, checked) => checkedGroup({ id, checked }),\r\n                        }}\r\n                      />\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.groupRef}`}>\r\n                      {row.groupRef}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.percentage}`}>\r\n                      {row.percentage}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.facility}`}>\r\n                      {row.facility ? utils.string.t('form.options.yesNoNa.yes') : utils.string.t('form.options.yesNoNa.no')}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.facilityRef}`}>\r\n                      {row.facilityRef}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.slipLeader}`}>\r\n                      {row.slipLeader}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.ucr}`}>\r\n                      {''}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.narrative}`}>\r\n                      {row.narrative}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.dateValidFrom}`}>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: row.dateValidFrom, format: config.ui.format.date.text },\r\n                      })}\r\n                    </TableCell>\r\n                    <TableCell compact data-testid={`claims-under-writing-groups-col-${row.dateValidTo}`}>\r\n                      {utils.string.t('format.date', {\r\n                        value: { date: row.dateValidTo, format: config.ui.format.date.text },\r\n                      })}\r\n                    </TableCell>\r\n                  </TableRow>\r\n                ))\r\n              )}\r\n            </TableBody>\r\n          </Table>\r\n        </Overflow>\r\n      </FormContainer>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}