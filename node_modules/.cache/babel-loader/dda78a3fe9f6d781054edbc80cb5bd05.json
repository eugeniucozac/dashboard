{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var editStatus = function editStatus(formData, claimID) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.editStatus',\n      message: 'Data missing for PUT request'\n    };\n    dispatch(editStatusRequest(formData));\n    dispatch(addLoader('editStatus'));\n\n    if (!formData) {\n      dispatch(editStatusFailure(defaultError));\n      dispatch(enqueueNotification('notification.lossInformation.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editStatus'));\n      return;\n    }\n\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/\".concat(claimID, \"/status\"),\n      data: formData\n    }).then(function (data) {\n      dispatch(editStatusSuccess(formData, claimID));\n      dispatch(enqueueNotification('notification.claimStatus.updatedSuccess', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editStatus'));\n      return data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(editStatusFailure(err));\n      dispatch(enqueueNotification('notification.claimStatus.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('editStatus'));\n      return err;\n    });\n  };\n};\nexport var editStatusRequest = function editStatusRequest(data) {\n  return {\n    type: 'CLAIM_STATUS_EDIT_REQUEST',\n    payload: data\n  };\n};\nexport var editStatusSuccess = function editStatusSuccess(data, id) {\n  return {\n    type: 'CLAIM_STATUS_EDIT_SUCCESS',\n    payload: {\n      data: data,\n      id: id\n    }\n  };\n};\nexport var editStatusFailure = function editStatusFailure(data) {\n  return {\n    type: 'CLAIM_STATUS_EDIT_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.editStatus.js"],"names":["authLogout","addLoader","enqueueNotification","hideModal","removeLoader","utils","editStatus","formData","claimID","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","editStatusRequest","editStatusFailure","api","put","token","accessToken","claimService","path","data","then","editStatusSuccess","catch","err","errorParams","handleError","handleUnauthorized","type","payload","id"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const editStatus = (formData, claimID) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.editStatus',\r\n    message: 'Data missing for PUT request',\r\n  };\r\n\r\n  dispatch(editStatusRequest(formData));\r\n  dispatch(addLoader('editStatus'));\r\n\r\n  if (!formData) {\r\n    dispatch(editStatusFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.lossInformation.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('editStatus'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/${claimID}/status`,\r\n      data: formData,\r\n    })\r\n    .then((data) => {\r\n      dispatch(editStatusSuccess(formData, claimID));\r\n      dispatch(enqueueNotification('notification.claimStatus.updatedSuccess', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editStatus'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API fetch error',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(editStatusFailure(err));\r\n      dispatch(enqueueNotification('notification.claimStatus.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('editStatus'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const editStatusRequest = (data) => {\r\n  return {\r\n    type: 'CLAIM_STATUS_EDIT_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const editStatusSuccess = (data, id) => {\r\n  return {\r\n    type: 'CLAIM_STATUS_EDIT_SUCCESS',\r\n    payload: {\r\n      data,\r\n      id,\r\n    },\r\n  };\r\n};\r\n\r\nexport const editStatusFailure = (data) => {\r\n  return {\r\n    type: 'CLAIM_STATUS_EDIT_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}