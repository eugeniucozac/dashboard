{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\CardList\\\\CardList.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './CardList.styles';\nimport { Card } from 'components'; // mui\n\nimport { makeStyles, Tab, Tabs as MuiTabs, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCardListView.propTypes = {\n  title: PropTypes.string,\n  data: PropTypes.array,\n  scrollable: PropTypes.bool,\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\n  hasValidData: PropTypes.func,\n  nestedClasses: PropTypes.object\n};\nexport function CardListView(_ref) {\n  var _this = this;\n\n  var title = _ref.title,\n      data = _ref.data,\n      scrollable = _ref.scrollable,\n      scrollButtons = _ref.scrollButtons,\n      hasValidData = _ref.hasValidData,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'CardList'\n  })({\n    scrollable: scrollable\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    \"data-testid\": \"cardlist\",\n    children: [title && /*#__PURE__*/_jsxDEV(Typography, {\n      variant: \"body2\",\n      className: classes.title,\n      children: title\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 27,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(MuiTabs, {\n      value: false,\n      variant: scrollable ? 'scrollable' : undefined,\n      scrollButtons: scrollButtons,\n      classes: {\n        root: classes.tabs,\n        flexContainer: classnames(_defineProperty({}, classes.tabsWrap, !Boolean(scrollable)))\n      },\n      children: data.map(function (card) {\n        // only render cards with content\n        if (hasValidData([card])) {\n          var _classnames2;\n\n          return /*#__PURE__*/_jsxDEV(Tab, {\n            component: /*#__PURE__*/React.forwardRef(function (_ref2, ref) {\n              var cardProps = _ref2.cardProps;\n              return /*#__PURE__*/_jsxDEV(Card, _objectSpread({\n                cardRef: ref\n              }, cardProps), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 26\n              }, _this);\n            }),\n            disableRipple: true,\n            disableFocusRipple: true,\n            cardProps: {\n              title: card.title,\n              subheader: card.subheader,\n              text: card.text,\n              compact: card.compact === undefined ? true : card.compact,\n              disabled: card.disabled,\n              active: card.active,\n              onClick: card.onClick,\n              children: card.children,\n              classes: {\n                root: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.card, true), _defineProperty(_classnames2, nestedClasses.card, Boolean(nestedClasses.card)), _classnames2))\n              },\n              'data-testid': \"card-\".concat(card.id)\n            }\n          }, card.id, false, {\n            fileName: _jsxFileName,\n            lineNumber: 44,\n            columnNumber: 15\n          }, _this);\n        }\n\n        return null;\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n}\n_c = CardListView;\nCardListView.displayName = \"CardListView\";\nCardListView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"CardListView\",\n  \"props\": {\n    \"title\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"data\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scrollable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"scrollButtons\": {\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'auto'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'desktop'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'on'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'off'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasValidData\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\CardList\\\\CardList.view.js\"] = {\n    name: \"CardListView\",\n    docgenInfo: CardListView.__docgenInfo,\n    path: \"src\\\\components\\\\CardList\\\\CardList.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"CardListView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/CardList/CardList.view.js"],"names":["React","PropTypes","classnames","styles","Card","makeStyles","Tab","Tabs","MuiTabs","Typography","CardListView","propTypes","title","string","data","array","scrollable","bool","scrollButtons","oneOf","hasValidData","func","nestedClasses","object","classes","name","root","undefined","tabs","flexContainer","tabsWrap","Boolean","map","card","forwardRef","ref","cardProps","subheader","text","compact","disabled","active","onClick","children","id"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './CardList.styles';\r\nimport { Card } from 'components';\r\n\r\n// mui\r\nimport { makeStyles, Tab, Tabs as MuiTabs, Typography } from '@material-ui/core';\r\n\r\nCardListView.propTypes = {\r\n  title: PropTypes.string,\r\n  data: PropTypes.array,\r\n  scrollable: PropTypes.bool,\r\n  scrollButtons: PropTypes.oneOf(['auto', 'desktop', 'on', 'off']),\r\n  hasValidData: PropTypes.func,\r\n  nestedClasses: PropTypes.object,\r\n};\r\n\r\nexport function CardListView({ title, data, scrollable, scrollButtons, hasValidData, nestedClasses }) {\r\n  const classes = makeStyles(styles, { name: 'CardList' })({ scrollable });\r\n\r\n  return (\r\n    <div className={classes.root} data-testid=\"cardlist\">\r\n      {title && (\r\n        <Typography variant=\"body2\" className={classes.title}>\r\n          {title}\r\n        </Typography>\r\n      )}\r\n      <MuiTabs\r\n        value={false}\r\n        variant={scrollable ? 'scrollable' : undefined}\r\n        scrollButtons={scrollButtons}\r\n        classes={{\r\n          root: classes.tabs,\r\n          flexContainer: classnames({ [classes.tabsWrap]: !Boolean(scrollable) }),\r\n        }}\r\n      >\r\n        {data.map((card) => {\r\n          // only render cards with content\r\n          if (hasValidData([card])) {\r\n            return (\r\n              <Tab\r\n                key={card.id}\r\n                component={React.forwardRef(({ cardProps }, ref) => {\r\n                  return <Card cardRef={ref} {...cardProps} />;\r\n                })}\r\n                disableRipple\r\n                disableFocusRipple\r\n                cardProps={{\r\n                  title: card.title,\r\n                  subheader: card.subheader,\r\n                  text: card.text,\r\n                  compact: card.compact === undefined ? true : card.compact,\r\n                  disabled: card.disabled,\r\n                  active: card.active,\r\n                  onClick: card.onClick,\r\n                  children: card.children,\r\n                  classes: {\r\n                    root: classnames({\r\n                      [classes.card]: true,\r\n                      [nestedClasses.card]: Boolean(nestedClasses.card),\r\n                    }),\r\n                  },\r\n                  'data-testid': `card-${card.id}`,\r\n                }}\r\n              />\r\n            );\r\n          }\r\n\r\n          return null;\r\n        })}\r\n      </MuiTabs>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}