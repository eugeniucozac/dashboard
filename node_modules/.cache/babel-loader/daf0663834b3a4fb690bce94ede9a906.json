{"ast":null,"code":"import { addLoader, authLogout, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getPriorityLevels = function getPriorityLevels() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getPriorityLevels'\n    };\n    dispatch(getPriorityLevelCodesRequest());\n    dispatch(addLoader('getPriorityLevels'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/gui/claims/priorities'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getPriorityLevelCodesSuccess(data.data));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getPriorityLevelCodesFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('getPriorityLevels'));\n    });\n  };\n};\nexport var getPriorityLevelCodesRequest = function getPriorityLevelCodesRequest() {\n  return {\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_REQUEST'\n  };\n};\nexport var getPriorityLevelCodesSuccess = function getPriorityLevelCodesSuccess(data) {\n  return {\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getPriorityLevelCodesFailure = function getPriorityLevelCodesFailure(err) {\n  return {\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_FAILURE',\n    payload: err\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getPriorityLevels.js"],"names":["addLoader","authLogout","removeLoader","utils","getPriorityLevels","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getPriorityLevelCodesRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","data","getPriorityLevelCodesSuccess","catch","err","getPriorityLevelCodesFailure","handleUnauthorized","finally","type","payload"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7D;AAD6D,oBAEFA,QAAQ,EAFN;AAAA,QAE7CC,IAF6C,aAErDC,IAFqD,CAE7CD,IAF6C;AAAA,QAEnBE,QAFmB,aAErCC,MAFqC,CAE3BC,IAF2B,CAEnBF,QAFmB;;AAI7D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,4BAA4B,EAA7B,CAAR;AACAT,IAAAA,QAAQ,CAACL,SAAS,CAAC,mBAAD,CAAV,CAAR;AAEA,WAAOG,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACY,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUrB,KAAK,CAACY,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,4BAA4B,CAACD,IAAI,CAACA,IAAN,CAA7B,CAAR;AACA,aAAOA,IAAI,CAACA,IAAZ;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACdxB,MAAAA,QAAQ,CAACyB,4BAA4B,CAACD,GAAD,EAAMjB,YAAN,CAA7B,CAAR;AACAT,MAAAA,KAAK,CAACY,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CJ,UAA5C;AACA,aAAO4B,GAAP;AACD,KAhBI,EAiBJG,OAjBI,CAiBI,YAAM;AACb3B,MAAAA,QAAQ,CAACH,YAAY,CAAC,mBAAD,CAAb,CAAR;AACD,KAnBI,CAAP;AAoBD,GA/BgC;AAAA,CAA1B;AAiCP,OAAO,IAAMY,4BAA4B,GAAG,SAA/BA,4BAA+B,GAAM;AAChD,SAAO;AACLmB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMN,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACD,IAAD,EAAU;AACpD,SAAO;AACLO,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAER;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMI,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACD,GAAD,EAAS;AACnD,SAAO;AACLI,IAAAA,IAAI,EAAE,oCADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getPriorityLevels = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getPriorityLevels',\r\n  };\r\n\r\n  dispatch(getPriorityLevelCodesRequest());\r\n  dispatch(addLoader('getPriorityLevels'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/gui/claims/priorities',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getPriorityLevelCodesSuccess(data.data));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getPriorityLevelCodesFailure(err, defaultError));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getPriorityLevels'));\r\n    });\r\n};\r\n\r\nexport const getPriorityLevelCodesRequest = () => {\r\n  return {\r\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getPriorityLevelCodesSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getPriorityLevelCodesFailure = (err) => {\r\n  return {\r\n    type: 'CLAIMS_PRIORITY_LEVELS_GET_FAILURE',\r\n    payload: err,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}