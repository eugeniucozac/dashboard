{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport * as utils from 'utils';\nimport * as Yup from 'yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\nimport { selectLossQualifiers, selectReferralValues, selectComplexityValues, selectReferralResponse, selectBEAdjusterList, selectPriorities, selectClaimBordereauPeriods, selectClaimantNames } from 'stores';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformation.prototype = {\n  policyInformation: PropTypes.object.isRequired,\n  currencies: PropTypes.array.isRequired,\n  resetKey: PropTypes.number\n};\nexport default function RegisterClaimCardInformation(_ref) {\n  _s();\n\n  var resetKey = _ref.resetKey;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var lossQualifiers = useSelector(selectLossQualifiers);\n  var referralValues = useSelector(selectReferralValues);\n  var complexityValues = useSelector(selectComplexityValues);\n  var referralResponse = useSelector(selectReferralResponse);\n  var claimantNames = useSelector(selectClaimantNames);\n  var beAdjusterList = useSelector(selectBEAdjusterList);\n  var priorities = useSelector(selectPriorities);\n  var claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\n  console.log(\"referralResponse \", referralResponse);\n  console.log(\"claimantNames \", claimantNames);\n  console.log(\"beAdjusterList \", beAdjusterList);\n  console.log(\"priorities \", priorities);\n  console.log(\"claimBordereauPeriods \", claimBordereauPeriods);\n  var fields = [{\n    name: 'claimantName',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.claimant'),\n    options: [],\n    ///claimantNames ||\n    value: null,\n    optionsCreatable: true,\n    optionKey: 'id',\n    optionLabel: 'name',\n    muiComponentProps: {\n      filterOptions: function filterOptions(options, params) {\n        /*  let filtered = createFilterOptions()(options, params);\r\n          if (params.inputValue) {\r\n            filtered = [\r\n              ...filtered,\r\n              {\r\n                id: filtered.length + 1,\r\n                name: `${utils.string.t('app.create')} - ${params.inputValue}`,\r\n              },\r\n            ];\r\n          }\r\n          return filtered; */\n      }\n    },\n    callback: function callback(event, data) {\n      var hasCreateString = \"\".concat(utils.string.t('app.create'), \" - \");\n      var name = data === null || data === void 0 ? void 0 : data.name.replace(hasCreateString, '');\n      var alreadyExists = claimantNames.find(function (claim) {\n        return claim.name === name;\n      });\n\n      if ((data === null || data === void 0 ? void 0 : data.name.includes(hasCreateString)) && !alreadyExists) {\n        var newClaimantName = {\n          id: Object.keys(claimantNames).length,\n          name: name\n        }; // dispatch(updateClaimantNamesSuccess(newClaimantName));\n      }\n    },\n    validation: Yup.object().nullable()\n  }, {\n    type: 'datepicker',\n    name: 'claimReceivedDate',\n    label: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\n    icon: 'TodayIcon',\n    value: utils.date.today(),\n    muiComponentProps: {\n      fullWidth: true\n    },\n    validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\n    outputFormat: 'iso'\n  }, {\n    type: 'time',\n    name: 'claimReceivedTime',\n    icon: 'AccessTimeIcon',\n    value: utils.string.t('format.date', {\n      value: {\n        date: new Date(),\n        format: 'HH:mm'\n      }\n    })\n  }, {\n    type: 'datepicker',\n    name: 'fromDate',\n    label: utils.string.t('claims.lossInformation.fromDate'),\n    value: null,\n    icon: 'TodayIcon',\n    muiPickerProps: {\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    outputFormat: 'iso'\n  }, {\n    type: 'datepicker',\n    name: 'toDate',\n    label: utils.string.t('claims.lossInformation.toDate'),\n    value: null,\n    muiPickerProps: {\n      disableToolbar: true,\n      clearable: false,\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    },\n    outputFormat: 'iso'\n  }, {\n    name: 'lossQualifierID',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.lossInformation.qualifier'),\n    value: null,\n    options: [],\n    //lossQualifiers ||\n    optionKey: 'id',\n    optionLabel: 'name',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'location',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.location'),\n    value: '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(200).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'adjusterReference',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.adjustorRef'),\n    value: '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference'))\n  }, {\n    name: 'complexity',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.complexity'),\n    options: [],\n    //complexityValues ||\n    value: null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    validation: Yup.object().nullable().required(utils.string.t('validation.required')).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.object().nullable();\n    })\n  }, {\n    name: 'referral',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.referral'),\n    options: [],\n    // referralValues ||\n    value: null,\n    optionKey: 'complexityRulesID',\n    optionLabel: 'complexityRulesValue',\n    validation: Yup.object().when('complexity', {\n      is: function is(val) {\n        var _complexityValues$fin;\n\n        return ((_complexityValues$fin = complexityValues.find(function (item) {\n          return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n        })) === null || _complexityValues$fin === void 0 ? void 0 : _complexityValues$fin.complexityRulesValue) === 'Referral Required';\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'rfiResponse',\n    type: 'autocompletemui',\n    // label: utils.string.t('claims.claimInformation.rfiResponse'),\n    options: [],\n    // referralResponse ||\n    value: null,\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().when('referral', {\n      is: function is(val) {\n        if (val !== null) {\n          var _referralValues$find;\n\n          var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n          var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n            return item.complexityRulesID === (val === null || val === void 0 ? void 0 : val.complexityRulesID);\n          })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n          var refResponseState = refValuesList.includes(getReferralValue);\n          return !refResponseState;\n        } else {\n          return false;\n        }\n      },\n      then: Yup.object().nullable().required(utils.string.t('validation.required')),\n      otherwise: Yup.object().nullable()\n    })\n  }, {\n    name: 'fguNarrative',\n    type: 'text',\n    label: utils.string.t('claims.claimInformation.fguNarrative'),\n    value: '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(50).when('$validation', function (validation, schema) {\n      return validation ? schema : Yup.string();\n    })\n  }, {\n    name: 'adjuster',\n    type: 'radio',\n    //label: utils.string.t('claims.claimInformation.adjustorType'),\n    value: 'beAdjuster',\n    validation: Yup.string().required(utils.string.t('validation.required')),\n    muiFormGroupProps: {\n      row: true,\n      nestedClasses: {\n        root: classes.adjusterRadioGroup\n      },\n      classes: {\n        root: classes.radioLabel\n      }\n    },\n    options: [{\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\n      value: 'beAdjuster'\n    }, {\n      label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\n      value: 'nonBeAdjuster'\n    }]\n  }, {\n    name: 'beAdjuster',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.adjustorName'),\n    value: [],\n    options: [],\n    // beAdjusterList ||\n    optionKey: 'id',\n    optionLabel: 'name',\n    callback: function callback(event, data) {// dispatch(setBEAdjusterValue(data));\n    }\n  }, {\n    name: 'nonBeAdjuster',\n    type: 'text',\n    value: '',\n    muiComponentProps: {\n      classes: {\n        root: classes.formInput\n      }\n    },\n    validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster'))\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.priority'),\n    options: [],\n    // priorities?.length ? priorities :\n    optionKey: 'id',\n    optionLabel: 'description',\n    value: null\n  }, {\n    name: 'bordereauClaim',\n    type: 'checkbox',\n    //  label: utils.string.t('claims.claimInformation.bordereauClaim'),\n    defaultValue: false,\n    muiComponentProps: {// onChange: (name, value) => setBordereauChecked(value),\n    }\n  }, {\n    name: 'bordereauPeriod',\n    type: 'autocompletemui',\n    label: utils.string.t('claims.claimInformation.bordereauPeriod'),\n    options: [],\n    //claimBordereauPeriods\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: null,\n    validation: Yup.object().nullable().required(utils.string.t('validation.required'))\n  }];\n  return /*#__PURE__*/_jsxDEV(RegisterClaimCardInformationView, {\n    resetKey: resetKey,\n    fields: fields,\n    claimantNames: claimantNames,\n    referralValues: referralValues,\n    lossQualifiers: lossQualifiers\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 315,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RegisterClaimCardInformation, \"QPtcwR7CyCL4nFqNworM/9avGyw=\", false, function () {\n  return [useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = RegisterClaimCardInformation;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformation\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.js"],"names":["React","useSelector","PropTypes","utils","Yup","styles","RegisterClaimCardInformationView","selectLossQualifiers","selectReferralValues","selectComplexityValues","selectReferralResponse","selectBEAdjusterList","selectPriorities","selectClaimBordereauPeriods","selectClaimantNames","makeStyles","RegisterClaimCardInformation","prototype","policyInformation","object","isRequired","currencies","array","resetKey","number","classes","name","lossQualifiers","referralValues","complexityValues","referralResponse","claimantNames","beAdjusterList","priorities","claimBordereauPeriods","console","log","fields","type","label","string","t","options","value","optionsCreatable","optionKey","optionLabel","muiComponentProps","filterOptions","params","callback","event","data","hasCreateString","replace","alreadyExists","find","claim","includes","newClaimantName","id","Object","keys","length","validation","nullable","icon","date","today","fullWidth","max","Date","outputFormat","format","muiPickerProps","disableToolbar","clearable","variant","required","when","schema","root","formInput","is","val","item","complexityRulesID","complexityRulesValue","then","otherwise","refValuesList","getReferralValue","refResponseState","muiFormGroupProps","row","nestedClasses","adjusterRadioGroup","radioLabel","defaultValue"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport * as utils from 'utils';\r\nimport * as Yup from 'yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport { RegisterClaimCardInformationView } from './RegisterClaimCardInformation.view';\r\nimport { \r\n  selectLossQualifiers, \r\n  selectReferralValues,\r\n  selectComplexityValues, \r\n  selectReferralResponse,\r\n  selectBEAdjusterList, \r\n  selectPriorities, \r\n  selectClaimBordereauPeriods, \r\n  selectClaimantNames \r\n} from 'stores';\r\nimport { makeStyles } from '@material-ui/core';\r\nRegisterClaimCardInformation.prototype = {\r\n  policyInformation: PropTypes.object.isRequired,\r\n  currencies: PropTypes.array.isRequired,\r\n  resetKey: PropTypes.number,\r\n};\r\n\r\nexport default function RegisterClaimCardInformation({\r\n  resetKey,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const lossQualifiers = useSelector(selectLossQualifiers);\r\n  const referralValues = useSelector(selectReferralValues);\r\n  const complexityValues = useSelector(selectComplexityValues);\r\n  const referralResponse = useSelector(selectReferralResponse);\r\n  const claimantNames = useSelector(selectClaimantNames);\r\n  const beAdjusterList = useSelector(selectBEAdjusterList);\r\n  const priorities = useSelector(selectPriorities);\r\n  const claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\r\n\r\n  console.log(\"referralResponse \", referralResponse)\r\n  console.log(\"claimantNames \", claimantNames)\r\n  console.log(\"beAdjusterList \", beAdjusterList)\r\n  console.log(\"priorities \", priorities)\r\n  console.log(\"claimBordereauPeriods \", claimBordereauPeriods)\r\n\r\n\r\n  const fields = [\r\n    {\r\n      name: 'claimantName',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.claimant'),\r\n      options:  [], ///claimantNames ||\r\n      value :null,\r\n      optionsCreatable: true,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      muiComponentProps: {\r\n        filterOptions: (options, params) => {\r\n        /*  let filtered = createFilterOptions()(options, params);\r\n          if (params.inputValue) {\r\n            filtered = [\r\n              ...filtered,\r\n              {\r\n                id: filtered.length + 1,\r\n                name: `${utils.string.t('app.create')} - ${params.inputValue}`,\r\n              },\r\n            ];\r\n          }\r\n          return filtered; */\r\n        },\r\n      },\r\n      callback: (event, data) => {\r\n        const hasCreateString = `${utils.string.t('app.create')} - `;\r\n        const name = data?.name.replace(hasCreateString, '');\r\n        const alreadyExists = claimantNames.find((claim) => claim.name === name);\r\n\r\n        if (data?.name.includes(hasCreateString) && !alreadyExists) {\r\n          const newClaimantName = { id: Object.keys(claimantNames).length, name };\r\n         // dispatch(updateClaimantNamesSuccess(newClaimantName));\r\n        }\r\n      },\r\n      validation: Yup.object().nullable(),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'claimReceivedDate',\r\n      label: utils.string.t('claims.claimInformation.claimReceivedDateTime'),\r\n      icon: 'TodayIcon',\r\n      value: utils.date.today(),\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n      },\r\n      validation: Yup.date().max(new Date(), utils.string.t('claims.lossInformation.validation.futureDate')),\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'time',\r\n      name: 'claimReceivedTime',\r\n      icon: 'AccessTimeIcon',\r\n      value: utils.string.t('format.date', {\r\n        value: { date: new Date(), format: 'HH:mm' },\r\n      }),\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'fromDate',\r\n      label: utils.string.t('claims.lossInformation.fromDate'),\r\n      value: null,\r\n      icon: 'TodayIcon',\r\n      muiPickerProps: {\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      type: 'datepicker',\r\n      name: 'toDate',\r\n      label: utils.string.t('claims.lossInformation.toDate'),\r\n      value: null,\r\n      muiPickerProps: {\r\n        disableToolbar: true,\r\n        clearable: false,\r\n        variant: 'inline',\r\n        format: 'DD-MM-YYYY',\r\n      },\r\n      outputFormat: 'iso',\r\n    },\r\n    {\r\n      name: 'lossQualifierID',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.lossInformation.qualifier'),\r\n      value: null,\r\n      options:  [],  //lossQualifiers ||\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      validation: Yup.object()\r\n        .nullable()\r\n        .required(utils.string.t('validation.required'))\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'location',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.location'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(200)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'adjusterReference',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.adjustorRef'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(20, utils.string.t('claims.claimInformation.validation.maxAdjusterReference')),\r\n    },\r\n    {\r\n      name: 'complexity',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.complexity'),\r\n      options: [],  //complexityValues ||\r\n      value:  null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      validation: Yup.object()\r\n            .nullable()\r\n            .required(utils.string.t('validation.required'))\r\n            .when('$validation', (validation, schema) => (validation ? schema : Yup.object().nullable())),\r\n    },\r\n    {\r\n      name: 'referral',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.referral'),\r\n      options: [], // referralValues ||\r\n      value: null,\r\n      optionKey: 'complexityRulesID',\r\n      optionLabel: 'complexityRulesValue',\r\n      validation: Yup.object().when('complexity', {\r\n        is: (val) =>\r\n          complexityValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue === 'Referral Required',\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'rfiResponse',\r\n      type: 'autocompletemui',\r\n     // label: utils.string.t('claims.claimInformation.rfiResponse'),\r\n      options: [], // referralResponse ||\r\n      value: null,\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().when('referral', {\r\n        is: (val) => {\r\n          if (val !== null) {\r\n            const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n            const getReferralValue = referralValues.find((item) => item.complexityRulesID === val?.complexityRulesID)?.complexityRulesValue;\r\n            const refResponseState = refValuesList.includes(getReferralValue);\r\n            return !refResponseState;\r\n          } else {\r\n            return false;\r\n          }\r\n        },\r\n        then: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n        otherwise: Yup.object().nullable(),\r\n      }),\r\n    },\r\n    {\r\n      name: 'fguNarrative',\r\n      type: 'text',\r\n      label: utils.string.t('claims.claimInformation.fguNarrative'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(50)\r\n        .when('$validation', (validation, schema) => (validation ? schema : Yup.string())),\r\n    },\r\n    {\r\n      name: 'adjuster',\r\n      type: 'radio',\r\n      //label: utils.string.t('claims.claimInformation.adjustorType'),\r\n      value:'beAdjuster',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n      muiFormGroupProps: {\r\n        row: true,\r\n        nestedClasses: { root: classes.adjusterRadioGroup },\r\n        classes: {\r\n          root: classes.radioLabel,\r\n        },\r\n      },\r\n      options: [\r\n        {\r\n          label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n          value: 'beAdjuster',\r\n        },\r\n        {\r\n          label: utils.string.t('claims.claimInformation.nonBeAdjuster'),\r\n          value: 'nonBeAdjuster',\r\n        },\r\n      ],\r\n    },\r\n    {\r\n      name: 'beAdjuster',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.adjustorName'),\r\n      value: [],\r\n      options: [],  // beAdjusterList ||\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      callback: (event, data) => {\r\n       // dispatch(setBEAdjusterValue(data));\r\n      },\r\n    },\r\n    {\r\n      name: 'nonBeAdjuster',\r\n      type: 'text',\r\n      value: '',\r\n      muiComponentProps: {\r\n        classes: {\r\n          root: classes.formInput,\r\n        },\r\n      },\r\n      validation: Yup.string().nullable().max(100, utils.string.t('claims.claimInformation.validation.maxNonBEAdjuster')),\r\n    },\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      options: [], // priorities?.length ? priorities :\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'bordereauClaim',\r\n      type: 'checkbox',\r\n    //  label: utils.string.t('claims.claimInformation.bordereauClaim'),\r\n      defaultValue: false,\r\n      muiComponentProps: {\r\n       // onChange: (name, value) => setBordereauChecked(value),\r\n      },\r\n    },\r\n    {\r\n      name: 'bordereauPeriod',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('claims.claimInformation.bordereauPeriod'),\r\n      options:[],  //claimBordereauPeriods\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value: null,\r\n      validation: Yup.object().nullable().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <RegisterClaimCardInformationView\r\n      resetKey={resetKey}\r\n      fields={fields}\r\n      claimantNames={claimantNames}\r\n      referralValues={referralValues}\r\n      lossQualifiers={lossQualifiers}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}