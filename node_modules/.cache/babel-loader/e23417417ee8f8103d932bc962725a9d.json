{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsFacility\\\\EditProductsFacilityLimits.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport FormSkeleton from '../AddEditQuoteBind/FormSkeleton';\nimport { Box } from '@material-ui/core'; // app\n\nimport { EditFacilityLimitsView } from './EditFacilityLimits.view';\nimport { selectFacilitiesById, getFacilityLimitsDefinition, selectFacilityLimits, postFacilityLimits, getFacilityLimits, selectIsLimitsLoading, selectFacilitiesLimitsLoading } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditProductsFacilityLimits.propTypes = {\n  facility: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nEditProductsFacilityLimits.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function EditProductsFacilityLimits(_ref) {\n  _s();\n\n  var _ref$facility = _ref.facility,\n      facilityItem = _ref$facility === void 0 ? {} : _ref$facility,\n      handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var facility = useSelector(selectFacilitiesById(facilityItem.id));\n  var defaultFacilityLimits = facility && facility.limits ? facility.limits : {};\n  var facilityLimitFields = useSelector(selectFacilityLimits);\n  var isLimitsLoading = useSelector(selectIsLimitsLoading);\n  var isFacilitiesLimitsLoading = useSelector(selectFacilitiesLimitsLoading);\n  useEffect(function () {\n    dispatch(getFacilityLimits(facilityItem.id));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!utils.generic.isValidArray(defaultFacilityLimits, true)) {\n      dispatch(getFacilityLimitsDefinition(facilityItem.id, facility === null || facility === void 0 ? void 0 : facility.productCode));\n    }\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var handleSubmit = function handleSubmit(values) {\n    if (values) {\n      dispatch(postFacilityLimits(values, facilityItem.id, defaultFacilityLimits === null || defaultFacilityLimits === void 0 ? void 0 : defaultFacilityLimits.id));\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('products.admin.facilities.update'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  if (isLimitsLoading || isFacilitiesLimitsLoading) return /*#__PURE__*/_jsxDEV(Box, {\n    margin: 5,\n    children: /*#__PURE__*/_jsxDEV(FormSkeleton, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 74,\n      columnNumber: 9\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 73,\n    columnNumber: 7\n  }, this);else return /*#__PURE__*/_jsxDEV(EditFacilityLimitsView, {\n    actions: actions,\n    facilityLimitFields: facilityLimitFields,\n    defaultFacilityLimits: defaultFacilityLimits\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 7\n  }, this);\n}\n\n_s(EditProductsFacilityLimits, \"CZbLvC0HlO8/R3Ew0Fwv9qivmQg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = EditProductsFacilityLimits;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductsFacilityLimits\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsFacility/EditProductsFacilityLimits.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","FormSkeleton","Box","EditFacilityLimitsView","selectFacilitiesById","getFacilityLimitsDefinition","selectFacilityLimits","postFacilityLimits","getFacilityLimits","selectIsLimitsLoading","selectFacilitiesLimitsLoading","utils","EditProductsFacilityLimits","propTypes","facility","object","isRequired","handleClose","func","defaultProps","facilityItem","dispatch","id","defaultFacilityLimits","limits","facilityLimitFields","isLimitsLoading","isFacilitiesLimitsLoading","generic","isValidArray","productCode","handleSubmit","values","handleCancel","isFunction","actions","name","label","string","t","handler"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport FormSkeleton from '../AddEditQuoteBind/FormSkeleton';\r\nimport { Box } from '@material-ui/core';\r\n// app\r\nimport { EditFacilityLimitsView } from './EditFacilityLimits.view';\r\nimport {\r\n  selectFacilitiesById,\r\n  getFacilityLimitsDefinition,\r\n  selectFacilityLimits,\r\n  postFacilityLimits,\r\n  getFacilityLimits,\r\n  selectIsLimitsLoading,\r\n  selectFacilitiesLimitsLoading,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nEditProductsFacilityLimits.propTypes = {\r\n  facility: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nEditProductsFacilityLimits.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function EditProductsFacilityLimits({ facility: facilityItem = {}, handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const facility = useSelector(selectFacilitiesById(facilityItem.id));\r\n  const defaultFacilityLimits = facility && facility.limits ? facility.limits : {};\r\n  const facilityLimitFields = useSelector(selectFacilityLimits);\r\n  const isLimitsLoading = useSelector(selectIsLimitsLoading);\r\n  const isFacilitiesLimitsLoading = useSelector(selectFacilitiesLimitsLoading);\r\n\r\n  useEffect(() => {\r\n    dispatch(getFacilityLimits(facilityItem.id));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isValidArray(defaultFacilityLimits, true)) {\r\n      dispatch(getFacilityLimitsDefinition(facilityItem.id, facility?.productCode));\r\n    }\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const handleSubmit = (values) => {\r\n    if (values) {\r\n      dispatch(postFacilityLimits(values, facilityItem.id, defaultFacilityLimits?.id));\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('products.admin.facilities.update'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  if (isLimitsLoading || isFacilitiesLimitsLoading)\r\n    return (\r\n      <Box margin={5}>\r\n        <FormSkeleton />\r\n      </Box>\r\n    );\r\n  else\r\n    return (\r\n      <EditFacilityLimitsView actions={actions} facilityLimitFields={facilityLimitFields} defaultFacilityLimits={defaultFacilityLimits} />\r\n    );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}