{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsEditComplexityRulesValue\\\\ClaimsEditComplexityRulesValue.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector } from 'react-redux'; // app\n\nimport { ClaimsEditComplexityRulesValueView } from './ClaimsEditComplexityRulesValue.view';\nimport * as constants from 'consts';\nimport { selectComplexityManagementTab } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsEditComplexityRulesValue.prototypes = {\n  canLoadMatrix: PropTypes.bool.isRequired,\n  initComplexityMatrixData: PropTypes.array.isRequired,\n  matrixDataDiff: PropTypes.object.isRequired,\n  resetMatrix: PropTypes.func.isRequired,\n  saveMatrix: PropTypes.func.isRequired,\n  saveEachMatrixChange: PropTypes.func.isRequired,\n  handleUpdateComplexityRuleValue: PropTypes.func.isRequired\n};\nexport default function ClaimsEditComplexityRulesValue(_ref) {\n  _s();\n\n  var canLoadMatrix = _ref.canLoadMatrix,\n      initComplexityMatrixData = _ref.initComplexityMatrixData,\n      matrixDataDiff = _ref.matrixDataDiff,\n      resetMatrix = _ref.resetMatrix,\n      saveMatrix = _ref.saveMatrix,\n      saveEachMatrixChange = _ref.saveEachMatrixChange,\n      handleUpdateComplexityRuleValue = _ref.handleUpdateComplexityRuleValue;\n  var currentTab = useSelector(selectComplexityManagementTab);\n  var isComplexityActive = currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3];\n  var matrixPrimaryKey = constants.CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY;\n  var matrixCheckboxValueKey = constants.CLAIM_DIVISIONS_MATRIX_CHECKBOX_VALUE_KEY;\n  var matrixPrimaryKeyId = constants.CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY_ID;\n  var matrixExceptionColumns = constants.CLAIM_DIVISIONS_MATRIX_COLUMN_EXCEPTIONS;\n  var constructMatrixProps = {\n    initMatrixData: initComplexityMatrixData,\n    matrixPrimaryKey: matrixPrimaryKey,\n    matrixCheckboxValueKey: matrixCheckboxValueKey,\n    matrixPrimaryKeyId: matrixPrimaryKeyId,\n    matrixExceptionColumns: matrixExceptionColumns,\n    resetMatrix: resetMatrix,\n    saveMatrix: saveMatrix,\n    saveEachMatrixChange: saveEachMatrixChange,\n    matrixDataDiff: matrixDataDiff\n  };\n  return /*#__PURE__*/_jsxDEV(ClaimsEditComplexityRulesValueView, {\n    isComplexityActive: isComplexityActive,\n    canLoadMatrix: canLoadMatrix,\n    constructMatrixProps: constructMatrixProps,\n    handleEditValues: handleUpdateComplexityRuleValue\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 49,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsEditComplexityRulesValue, \"Nmvi830cFOOe2OA8LM7U02pkR/E=\", false, function () {\n  return [useSelector];\n});\n\n_c = ClaimsEditComplexityRulesValue;\nClaimsEditComplexityRulesValue.displayName = \"ClaimsEditComplexityRulesValue\";\nClaimsEditComplexityRulesValue.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsEditComplexityRulesValue\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsEditComplexityRulesValue\\\\ClaimsEditComplexityRulesValue.js\"] = {\n    name: \"ClaimsEditComplexityRulesValue\",\n    docgenInfo: ClaimsEditComplexityRulesValue.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsEditComplexityRulesValue\\\\ClaimsEditComplexityRulesValue.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsEditComplexityRulesValue\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsEditComplexityRulesValue/ClaimsEditComplexityRulesValue.js"],"names":["React","PropTypes","useSelector","ClaimsEditComplexityRulesValueView","constants","selectComplexityManagementTab","ClaimsEditComplexityRulesValue","prototypes","canLoadMatrix","bool","isRequired","initComplexityMatrixData","array","matrixDataDiff","object","resetMatrix","func","saveMatrix","saveEachMatrixChange","handleUpdateComplexityRuleValue","currentTab","isComplexityActive","CLAIM_COMPLEXITY_MANAGEMENT_TABS","matrixPrimaryKey","CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY","matrixCheckboxValueKey","CLAIM_DIVISIONS_MATRIX_CHECKBOX_VALUE_KEY","matrixPrimaryKeyId","CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY_ID","matrixExceptionColumns","CLAIM_DIVISIONS_MATRIX_COLUMN_EXCEPTIONS","constructMatrixProps","initMatrixData"],"mappings":";;;AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,QAA4B,aAA5B,C,CAEA;;AACA,SAASC,kCAAT,QAAmD,uCAAnD;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,SAASC,6BAAT,QAA8C,QAA9C;;AAEAC,8BAA8B,CAACC,UAA/B,GAA4C;AAC1CC,EAAAA,aAAa,EAAEP,SAAS,CAACQ,IAAV,CAAeC,UADY;AAE1CC,EAAAA,wBAAwB,EAAEV,SAAS,CAACW,KAAV,CAAgBF,UAFA;AAG1CG,EAAAA,cAAc,EAAEZ,SAAS,CAACa,MAAV,CAAiBJ,UAHS;AAI1CK,EAAAA,WAAW,EAAEd,SAAS,CAACe,IAAV,CAAeN,UAJc;AAK1CO,EAAAA,UAAU,EAAEhB,SAAS,CAACe,IAAV,CAAeN,UALe;AAM1CQ,EAAAA,oBAAoB,EAAEjB,SAAS,CAACe,IAAV,CAAeN,UANK;AAO1CS,EAAAA,+BAA+B,EAAElB,SAAS,CAACe,IAAV,CAAeN;AAPN,CAA5C;AASA,eAAe,SAASJ,8BAAT,OAQZ;AAAA;;AAAA,MAPDE,aAOC,QAPDA,aAOC;AAAA,MANDG,wBAMC,QANDA,wBAMC;AAAA,MALDE,cAKC,QALDA,cAKC;AAAA,MAJDE,WAIC,QAJDA,WAIC;AAAA,MAHDE,UAGC,QAHDA,UAGC;AAAA,MAFDC,oBAEC,QAFDA,oBAEC;AAAA,MADDC,+BACC,QADDA,+BACC;AACD,MAAMC,UAAU,GAAGlB,WAAW,CAACG,6BAAD,CAA9B;AACA,MAAMgB,kBAAkB,GAAGD,UAAU,KAAKhB,SAAS,CAACkB,gCAAV,CAA2C,CAA3C,CAA1C;AAEA,MAAMC,gBAAgB,GAAGnB,SAAS,CAACoB,kCAAnC;AACA,MAAMC,sBAAsB,GAAGrB,SAAS,CAACsB,yCAAzC;AACA,MAAMC,kBAAkB,GAAGvB,SAAS,CAACwB,qCAArC;AACA,MAAMC,sBAAsB,GAAGzB,SAAS,CAAC0B,wCAAzC;AAEA,MAAMC,oBAAoB,GAAG;AAC3BC,IAAAA,cAAc,EAAErB,wBADW;AAE3BY,IAAAA,gBAAgB,EAAhBA,gBAF2B;AAG3BE,IAAAA,sBAAsB,EAAtBA,sBAH2B;AAI3BE,IAAAA,kBAAkB,EAAlBA,kBAJ2B;AAK3BE,IAAAA,sBAAsB,EAAtBA,sBAL2B;AAM3Bd,IAAAA,WAAW,EAAXA,WAN2B;AAO3BE,IAAAA,UAAU,EAAVA,UAP2B;AAQ3BC,IAAAA,oBAAoB,EAApBA,oBAR2B;AAS3BL,IAAAA,cAAc,EAAdA;AAT2B,GAA7B;AAYA,sBACE,QAAC,kCAAD;AACE,IAAA,kBAAkB,EAAEQ,kBADtB;AAEE,IAAA,aAAa,EAAEb,aAFjB;AAGE,IAAA,oBAAoB,EAAEuB,oBAHxB;AAIE,IAAA,gBAAgB,EAAEZ;AAJpB;AAAA;AAAA;AAAA;AAAA,UADF;AAQD;;GArCuBb,8B;UASHJ,W;;;KATGI,8B;AAAAA,8B","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { ClaimsEditComplexityRulesValueView } from './ClaimsEditComplexityRulesValue.view';\r\nimport * as constants from 'consts';\r\nimport { selectComplexityManagementTab } from 'stores';\r\n\r\nClaimsEditComplexityRulesValue.prototypes = {\r\n  canLoadMatrix: PropTypes.bool.isRequired,\r\n  initComplexityMatrixData: PropTypes.array.isRequired,\r\n  matrixDataDiff: PropTypes.object.isRequired,\r\n  resetMatrix: PropTypes.func.isRequired,\r\n  saveMatrix: PropTypes.func.isRequired,\r\n  saveEachMatrixChange: PropTypes.func.isRequired,\r\n  handleUpdateComplexityRuleValue: PropTypes.func.isRequired,\r\n};\r\nexport default function ClaimsEditComplexityRulesValue({\r\n  canLoadMatrix,\r\n  initComplexityMatrixData,\r\n  matrixDataDiff,\r\n  resetMatrix,\r\n  saveMatrix,\r\n  saveEachMatrixChange,\r\n  handleUpdateComplexityRuleValue,\r\n}) {\r\n  const currentTab = useSelector(selectComplexityManagementTab);\r\n  const isComplexityActive = currentTab === constants.CLAIM_COMPLEXITY_MANAGEMENT_TABS[3];\r\n\r\n  const matrixPrimaryKey = constants.CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY;\r\n  const matrixCheckboxValueKey = constants.CLAIM_DIVISIONS_MATRIX_CHECKBOX_VALUE_KEY;\r\n  const matrixPrimaryKeyId = constants.CLAIM_DIVISIONS_MATRIX_PRIMARY_KEY_ID;\r\n  const matrixExceptionColumns = constants.CLAIM_DIVISIONS_MATRIX_COLUMN_EXCEPTIONS;\r\n\r\n  const constructMatrixProps = {\r\n    initMatrixData: initComplexityMatrixData,\r\n    matrixPrimaryKey,\r\n    matrixCheckboxValueKey,\r\n    matrixPrimaryKeyId,\r\n    matrixExceptionColumns,\r\n    resetMatrix,\r\n    saveMatrix,\r\n    saveEachMatrixChange,\r\n    matrixDataDiff,\r\n  };\r\n\r\n  return (\r\n    <ClaimsEditComplexityRulesValueView\r\n      isComplexityActive={isComplexityActive}\r\n      canLoadMatrix={canLoadMatrix}\r\n      constructMatrixProps={constructMatrixProps}\r\n      handleEditValues={handleUpdateComplexityRuleValue}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}