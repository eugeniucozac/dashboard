{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './ClaimsTabTableRow.styles';\nimport { FormCheckbox, Link, TableCell, PopoverMenu } from 'components';\nimport * as utils from 'utils';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableRowView.prototype = {\n  claim: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  isMultiSelect: PropTypes.bool,\n  columnProps: PropTypes.object.isRequired,\n  rowActions: PropTypes.array.isRequired,\n  handlers: PropTypes.shape({\n    selectClaim: PropTypes.func.isRequired,\n    clickClaim: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableRowView(_ref) {\n  var _classesRow, _claim$claimReference;\n\n  var claim = _ref.claim,\n      isSelected = _ref.isSelected,\n      isMultiSelect = _ref.isMultiSelect,\n      columnProps = _ref.columnProps,\n      rowActions = _ref.rowActions,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTabTableRow'\n  })();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: handlers.selectClaim(claim),\n    className: classnames(classesRow),\n    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: [isMultiSelect && /*#__PURE__*/_jsxDEV(FormCheckbox, {\n          name: \"checkbox-\".concat(claim.claimReference),\n          type: \"checkbox\",\n          value: isSelected,\n          nestedClasses: {\n            root: classes.checkbox\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Link, {\n          text: ((_claim$claimReference = claim.claimReference) === null || _claim$claimReference === void 0 ? void 0 : _claim$claimReference.toString()) || '',\n          color: \"secondary\",\n          onClick: handlers.clickClaim(claim)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 46,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossRef')), {}, {\n      children: claim.lossRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 49,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lossDateFrom')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim.claimLossFromDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 50,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n      children: claim.insured\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('policyRef')), {}, {\n      children: claim.policyRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n      children: claim.division\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('claimStatus')), {}, {\n      children: claim.claimStatus\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 56,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('stage')), {}, {\n      children: claim.claimStage\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n      children: claim.assignedTo\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: claim.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 59,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('lastUpdated')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: claim.lastUpdatedDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: claim === null || claim === void 0 ? void 0 : claim.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        items: rowActions\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 65,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsTabTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTableRow.view.js"],"names":["React","PropTypes","classnames","styles","FormCheckbox","Link","TableCell","PopoverMenu","utils","config","makeStyles","Box","TableRow","ClaimsTabTableRowView","prototype","claim","object","isRequired","isSelected","bool","isMultiSelect","columnProps","rowActions","array","handlers","shape","selectClaim","func","clickClaim","classes","name","classesRow","row","rowSelected","claimReference","root","checkbox","toString","lossRef","string","t","value","date","claimLossFromDate","format","ui","text","insured","policyRef","division","claimStatus","claimStage","assignedTo","team","lastUpdatedDate","priority"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './ClaimsTabTableRow.styles';\r\nimport { FormCheckbox, Link, TableCell, PopoverMenu } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\r\n\r\nClaimsTabTableRowView.prototype = {\r\n  claim: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  isMultiSelect: PropTypes.bool,\r\n  columnProps: PropTypes.object.isRequired,\r\n  rowActions: PropTypes.array.isRequired,\r\n  handlers: PropTypes.shape({\r\n    selectClaim: PropTypes.func.isRequired,\r\n    clickClaim: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableRowView({ claim, isSelected, isMultiSelect, columnProps, rowActions, handlers }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTabTableRow' })();\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={handlers.selectClaim(claim)} className={classnames(classesRow)}>\r\n      <TableCell {...columnProps('claimRef')}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          {isMultiSelect && (\r\n            <FormCheckbox\r\n              name={`checkbox-${claim.claimReference}`}\r\n              type=\"checkbox\"\r\n              value={isSelected}\r\n              nestedClasses={{ root: classes.checkbox }}\r\n            />\r\n          )}\r\n          <Link text={claim.claimReference?.toString() || ''} color=\"secondary\" onClick={handlers.clickClaim(claim)} />\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell {...columnProps('lossRef')}>{claim.lossRef}</TableCell>\r\n      <TableCell {...columnProps('lossDateFrom')}>\r\n        {utils.string.t('format.date', { value: { date: claim.claimLossFromDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('insured')}>{claim.insured}</TableCell>\r\n      <TableCell {...columnProps('policyRef')}>{claim.policyRef}</TableCell>\r\n      <TableCell {...columnProps('division')}>{claim.division}</TableCell>\r\n      <TableCell {...columnProps('claimStatus')}>{claim.claimStatus}</TableCell>\r\n      <TableCell {...columnProps('stage')}>{claim.claimStage}</TableCell>\r\n      <TableCell {...columnProps('assignedTo')}>{claim.assignedTo}</TableCell>\r\n      <TableCell {...columnProps('team')}>{claim.team}</TableCell>\r\n      <TableCell {...columnProps('lastUpdated')}>\r\n        {utils.string.t('format.date', { value: { date: claim.lastUpdatedDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('priority')}>{claim?.priority}</TableCell>\r\n      <TableCell {...columnProps('actions')}>\r\n        <PopoverMenu id=\"search-menu-list\" items={rowActions} />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}