{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getComplexityInsured = function getComplexityInsured(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getComplexityInsured'\n    };\n    var prevDirection = get(claims, 'insured.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var prevQuery = get(claims, 'insured.query') || '';\n    var newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\n    var prevSortBy = get(claims, 'insured.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var data = {\n      page: params && params.page || 0,\n      pageSize: params && params.size || claims.insured.pageSize,\n      search: newQuery,\n      sortBy: newSortBy,\n      direction: newDirection\n    };\n    dispatch(getComplexityInsuredRequest());\n    dispatch(addLoader('getComplexityInsured'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/claims-triage/complex/insured/search',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getComplexityInsuredSuccess(data));\n      dispatch(removeLoader('getComplexityInsured'));\n      return data;\n    })[\"catch\"](function (err) {\n      dispatch(getComplexityInsuredFailure(err, defaultError));\n      dispatch(removeLoader('getComplexityInsured'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getComplexityInsuredRequest = function getComplexityInsuredRequest(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getComplexityInsuredSuccess = function getComplexityInsuredSuccess(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_SUCCESS',\n    payload: {\n      items: data.data,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getComplexityInsuredFailure = function getComplexityInsuredFailure(data) {\n  return {\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getComplexityInsured.js"],"names":["authLogout","addLoader","removeLoader","utils","get","getComplexityInsured","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","prevDirection","newDirection","hasOwnProperty","direction","prevQuery","newQuery","term","prevSortBy","newSortBy","sortBy","data","page","pageSize","size","insured","search","getComplexityInsuredRequest","api","post","token","accessToken","claimService","path","then","response","handleResponse","getComplexityInsuredSuccess","err","getComplexityInsuredFailure","handleUnauthorized","type","payload","items","pagination"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getComplexityInsured = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getComplexityInsured',\r\n  };\r\n\r\n  const prevDirection = get(claims, 'insured.sort.direction') || '';\r\n  const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n  const prevQuery = get(claims, 'insured.query') || '';\r\n  const newQuery = params.hasOwnProperty('term') ? params.term : prevQuery;\r\n\r\n  const prevSortBy = get(claims, 'insured.sort.by') || '';\r\n  const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n  const data = {\r\n    page: (params && params.page) || 0,\r\n    pageSize: (params && params.size) || claims.insured.pageSize,\r\n    search: newQuery,\r\n    sortBy: newSortBy,\r\n    direction: newDirection,\r\n  };\r\n\r\n  dispatch(getComplexityInsuredRequest());\r\n  dispatch(addLoader('getComplexityInsured'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/claims-triage/complex/insured/search',\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getComplexityInsuredSuccess(data));\r\n      dispatch(removeLoader('getComplexityInsured'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getComplexityInsuredFailure(err, defaultError));\r\n      dispatch(removeLoader('getComplexityInsured'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getComplexityInsuredRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getComplexityInsuredSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_SUCCESS',\r\n    payload: {\r\n      items: data.data,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getComplexityInsuredFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_COMPLEXITY_INSURED_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}