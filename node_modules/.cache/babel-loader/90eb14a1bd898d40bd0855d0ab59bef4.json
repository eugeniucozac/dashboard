{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DmsSearch\\\\DmsSearch.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { get } from 'lodash'; // app\n\nimport { DmsSearchView } from './DmsSearch.view';\nimport { searchDmsDocuments, selectRefDataNewDocumentTypesByContextSource, selectRefDataNewDocumentTypeLookUpByContextSource, resetDmsDocumentsSearch, viewDocumentsDownload, viewDocumentsMultiDownload, linkMultipleDmsDocuments, showModal, selectClaimsListFilterLoading, selectLossId, selectClaimsInformation, getDepartments, selectPiDepartmentList, selectDmsSearchDataLoader, selectDmsAdvSearchValues, setDmsAdvSearchData, resetDmsAdvSearchValues } from 'stores';\nimport { useFormActions, useFlexiColumns } from 'hooks';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { MultiSelect } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDmsSearch.propTypes = {\n  context: PropTypes.oneOf([constants.DMS_CONTEXT_CASE, constants.DMS_CONTEXT_CLAIM, constants.DMS_CONTEXT_LOSS, constants.DMS_CONTEXT_POLICY, constants.DMS_CONTEXT_TASK, constants.DMS_CONTEXT_PROCESSING_INSTRUCTION, constants.DMS_CONTEXT_INSTRUCTION, constants.DMS_CONTEXT_RFI]).isRequired,\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  referenceId: PropTypes.string.isRequired,\n  isAutoSearchScreen: PropTypes.bool,\n  isFnolDmsSearch: PropTypes.bool,\n  updateClaimFileListAfterLinking: PropTypes.func,\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\n  handleFormStatus: PropTypes.func.isRequired\n};\nDmsSearch.defaultProps = {\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\n  isFnolDmsSearch: false,\n  updateClaimFileListAfterLinking: function updateClaimFileListAfterLinking() {},\n  handleFormStatus: function handleFormStatus() {}\n};\nexport default function DmsSearch(_ref) {\n  _s();\n\n  var _useSelector, _useSelector2, _documentsList$filter, _documentsList$filter2, _documentsList$filter3, _documentsList$filter4, _documentsList$filter5, _documentsList$filter6, _documentsList$files, _documentsList$files$, _documentsList$files2, _documentsList$files3, _documentsList$files4, _documentsList$files5, _documentsList$files6, _documentsList$files7;\n\n  var context = _ref.context,\n      source = _ref.source,\n      referenceId = _ref.referenceId,\n      isAutoSearchScreen = _ref.isAutoSearchScreen,\n      documentTypeKey = _ref.documentTypeKey,\n      isFnolDmsSearch = _ref.isFnolDmsSearch,\n      updateClaimFileListAfterLinking = _ref.updateClaimFileListAfterLinking,\n      handleFormStatus = _ref.handleFormStatus;\n  var dispatch = useDispatch();\n  var isDmsFromPi = utils.dmsFormatter.isDmsFromPi(documentTypeKey);\n\n  var _utils$dmsFormatter$g = utils.dmsFormatter.getDocumentTypeFilterKeys(context, source, documentTypeKey),\n      dmsSectionKey = _utils$dmsFormatter$g.dmsSectionKey,\n      sourceId = _utils$dmsFormatter$g.sourceId,\n      documentTypeSource = _utils$dmsFormatter$g.dmsDocTypeSource; // redux\n\n\n  var documentTypesBeforeFilter = useSelector(dmsSectionKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy ? selectRefDataNewDocumentTypeLookUpByContextSource(dmsSectionKey, sourceId) : selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId, documentTypeSource));\n  var documentsList = useSelector(function (state) {\n    return get(state, 'dms.search');\n  }) || [];\n  var isFetchingFilters = useSelector(selectClaimsListFilterLoading);\n  var departmentList = useSelector(selectPiDepartmentList);\n  var lossRefID = (_useSelector = useSelector(selectLossId)) === null || _useSelector === void 0 ? void 0 : _useSelector.lossRef;\n  var claimRefID = (_useSelector2 = useSelector(selectClaimsInformation)) === null || _useSelector2 === void 0 ? void 0 : _useSelector2.claimReference;\n  var dmsSearchDataLoader = useSelector(selectDmsSearchDataLoader);\n  var dmsAdvSearchValues = useSelector(selectDmsAdvSearchValues); // state\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState({\n    isOpen: false,\n    timeStamp: new Date()\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchExpanded = _useState4[0],\n      setSearchExpanded = _useState4[1];\n\n  var _useState5 = useState(false),\n      _useState6 = _slicedToArray(_useState5, 2),\n      isMultiSelect = _useState6[0],\n      setIsMultiSelect = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      selectedDocs = _useState8[0],\n      setSelectedDocs = _useState8[1];\n\n  var _useState9 = useState({}),\n      _useState10 = _slicedToArray(_useState9, 2),\n      searchFields = _useState10[0],\n      setSearchFields = _useState10[1];\n\n  var _useState11 = useState([]),\n      _useState12 = _slicedToArray(_useState11, 2),\n      selectedDivisionOptions = _useState12[0],\n      setSelectDivisionOption = _useState12[1];\n\n  var _useState13 = useState(constants.DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS),\n      _useState14 = _slicedToArray(_useState13, 2),\n      searchRowsTotalPreference = _useState14[0],\n      setSearchRowsTotalPreference = _useState14[1];\n\n  var _useState15 = useState([]),\n      _useState16 = _slicedToArray(_useState15, 2),\n      filtersPreference = _useState16[0],\n      setFiltersPreference = _useState16[1];\n\n  var _useState17 = useState(dmsSearchDataLoader),\n      _useState18 = _slicedToArray(_useState17, 2),\n      isDmsSearchDataLoading = _useState18[0],\n      setIsDmsSearchDataLoading = _useState18[1];\n\n  var bothTypeCall = constants.CLAIM_PROCESSING_REQ_TYPES.both;\n  var contextReferenceObject = {\n    id: referenceId\n  };\n  var divOptions = departmentList.map(function (list) {\n    return {\n      id: list.id,\n      value: list.deptID,\n      label: list.name\n    };\n  });\n\n  var _ref2 = isDmsFromPi && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey, sourceId),\n      documentTypeDescription = _ref2.documentTypeDescription,\n      sectionKey = _ref2.sectionKey,\n      dmsSourceID = _ref2.dmsSourceID;\n\n  var documentTypesAfterFilter = (context === constants.DMS_CONTEXT_POLICY || context === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION) && isDmsFromPi ? documentTypesBeforeFilter === null || documentTypesBeforeFilter === void 0 ? void 0 : documentTypesBeforeFilter.filter(function (type) {\n    return type.documentTypeDescription === documentTypeDescription && type.sectionKey === sectionKey && type.sourceID === dmsSourceID;\n  }) : documentTypesBeforeFilter;\n  var documentTypes = documentTypesAfterFilter;\n  useEffect(function () {\n    if (!utils.generic.isValidArray(departmentList, true)) dispatch(getDepartments());\n    dispatch(setDmsAdvSearchData({\n      policyId: isAutoSearchScreen ? referenceId : ''\n    }));\n    return function () {\n      dispatch(resetDmsAdvSearchValues());\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (isAutoSearchScreen) {\n      var defaultSearchCriteria = context === constants.DMS_CONTEXT_POLICY ? {\n        policyId: referenceId,\n        pageSize: searchRowsTotalPreference\n      } : {};\n\n      if (utils.generic.isValidArray(Object.values(defaultSearchCriteria), true)) {\n        setSearchFields(defaultSearchCriteria);\n        dispatch(searchDmsDocuments(context, contextReferenceObject, defaultSearchCriteria));\n      }\n    }\n\n    dispatch(selectRefDataNewDocumentTypesByContextSource(context, source));\n    return function () {\n      dispatch(resetDmsDocumentsSearch());\n    };\n  }, [referenceId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (dmsSearchDataLoader !== isDmsSearchDataLoading) setIsDmsSearchDataLoading(dmsSearchDataLoader);\n  }, [dmsSearchDataLoader]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var cols = [{\n    id: 'multiSelect',\n    visible: true\n  }, {\n    id: 'fileName',\n    label: utils.string.t('dms.search.cols.fileName'),\n    sort: {\n      type: 'numeric',\n      direction: 'desc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'hDriveFolders',\n    label: utils.string.t('dms.search.cols.hDriveFolders'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'reference',\n    label: utils.string.t('dms.search.cols.reference'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'documentTypeDescription',\n    label: utils.string.t('dms.search.cols.documentType'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'version',\n    label: utils.string.t('dms.search.cols.version'),\n    sort: {\n      type: 'numeric',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: !isFnolDmsSearch\n  }, {\n    id: 'userDetails.fullName',\n    label: utils.string.t('dms.search.cols.uploadedBy'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  }].concat([isFnolDmsSearch ? {\n    id: 'uploadedDate',\n    label: utils.string.t('dms.search.cols.uploadedDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    visible: true\n  } : {}], [{\n    id: 'actionButtons',\n    menu: true,\n    nowrap: true\n  }]);\n\n  var _useFlexiColumns = useFlexiColumns(cols),\n      colsArray = _useFlexiColumns.columns;\n\n  var fields = [{\n    name: 'policyId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.policyReference.label'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.policyId\n  }, {\n    name: 'claimId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.claimReference.label'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.claimId\n  }, {\n    name: 'lossId',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.lossReference.label'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.lossId\n  }, {\n    name: 'insuredName',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.insuredName.label'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.insuredName\n  }, {\n    name: 'documentType',\n    type: 'autocompletemui',\n    label: utils.string.t('dms.search.fields.documentType.label'),\n    placeholder: utils.string.t('dms.search.fields.documentType.placeholder'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.documentType,\n    options: documentTypes,\n    optionKey: 'documentTypeID',\n    optionLabel: 'documentTypeDescription'\n  }, {\n    name: 'documentName',\n    type: 'text',\n    label: utils.string.t('dms.search.fields.documentName.label'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.documentName\n  }, {\n    name: 'year',\n    type: 'datepicker',\n    label: utils.string.t('dms.search.fields.inceptionYear.label'),\n    placeholder: utils.string.t('dms.search.fields.inceptionYear.placeholder'),\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.year,\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('dms.search.fields.inceptionYear.helperText')\n    },\n    muiPickerProps: {\n      views: ['year'],\n      format: 'YYYY',\n      clearable: true\n    }\n  }, {\n    name: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('dms.search.fields.division.label'),\n    options: divOptions,\n    tagType: 'quantity',\n    placeholder: 'Choose Division',\n    setSelectOption: setSelectDivisionOption,\n    selectedOptions: selectedDivisionOptions,\n    defaultValue: dmsAdvSearchValues === null || dmsAdvSearchValues === void 0 ? void 0 : dmsAdvSearchValues.division\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentDate\"),\n    type: 'datepicker',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.paymentDate.label'),\n    placeholder: utils.string.t('dms.search.fields.paymentDate.placeholder'),\n    defaultValue: dmsAdvSearchValues[\"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentDate\")],\n    muiComponentProps: {\n      fullWidth: true,\n      helperText: utils.string.t('dms.search.fields.paymentDate.helperText')\n    },\n    muiPickerProps: {\n      format: config.ui.format.date.slashNumeric,\n      clearable: true\n    }\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentReference\"),\n    type: 'text',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.paymentReference.label'),\n    defaultValue: dmsAdvSearchValues[\"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_paymentReference\")]\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_lossPayee\"),\n    type: 'text',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.lossPayee.label'),\n    defaultValue: dmsAdvSearchValues[\"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_lossPayee\")]\n  }, {\n    name: \"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_amount\"),\n    type: 'number',\n    group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\n    label: utils.string.t('dms.search.fields.amount.label'),\n    defaultValue: dmsAdvSearchValues[\"\".concat(constants.DMS_DOCUMENT_TYPE_PAYMENT, \"_amount\")]\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      setResetKey(new Date().getTime());\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('dms.search.btn'),\n    handler: function handler(data) {\n      setSearchFields(data);\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n      var divIDs = selectedDivisionOptions.map(function (div) {\n        return div.value;\n      });\n      dispatch(setDmsAdvSearchData(data));\n      dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, data), {}, {\n        divisionIds: divIDs,\n        pageSize: searchRowsTotalPreference,\n        requestType: bothTypeCall,\n        filterRequest: filtersPreference\n      })));\n    }\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var formProps = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  }));\n\n  var _useFormActions = useFormActions(actions, formProps.reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  var handleDownloadFile = function handleDownloadFile(e, file) {\n    e.stopPropagation();\n    dispatch(viewDocumentsDownload(file));\n  };\n\n  var handleLinkFile = function handleLinkFile(e, file) {\n    e.stopPropagation();\n\n    if (file.isLinked) {\n      return;\n    }\n\n    confirmDocumentlink([file]);\n  };\n\n  var handleFnolLinkFile = function handleFnolLinkFile(file, sectionType) {\n    if (file.isLinked) {\n      return;\n    }\n\n    confirmDocumentlink([file], sectionType);\n  };\n\n  var handleMultipleDownload = function handleMultipleDownload() {\n    var selectedDocIds = selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.map(function (docId) {\n      return docId.documentId;\n    });\n\n    if ((selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.length) !== 1) {\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\n      return;\n    }\n\n    dispatch(viewDocumentsDownload(selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs[0]));\n  };\n\n  var handleMutiplelinking = function handleMutiplelinking() {\n    var sectionType = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : '';\n    confirmDocumentlink(selectedDocs, sectionType);\n  };\n\n  var resetToDefaultValues = function resetToDefaultValues() {\n    setSelectedDocs([]);\n    setIsMultiSelect(false);\n  };\n\n  var confirmDocumentlink = function confirmDocumentlink(docs) {\n    var fnolSecType = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : '';\n    var requestParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n      return {\n        documentId: d.documentId,\n        referenceId: isFnolDmsSearch ? fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID : referenceId,\n        sectionType: isFnolDmsSearch ? fnolSecType : context\n      };\n    });\n\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\n      var claimParams = docs === null || docs === void 0 ? void 0 : docs.map(function (d) {\n        return {\n          documentId: d.documentId,\n          referenceId: claimRefID,\n          sectionType: constants.DMS_CONTEXT_CLAIM\n        };\n      });\n      requestParams.push.apply(requestParams, _toConsumableArray(claimParams));\n    }\n\n    var requestParamsLength = requestParams === null || requestParams === void 0 ? void 0 : requestParams.length;\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.search.linkDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.search.linkDocument.confirmLabel'),\n          confirmMessage: requestParamsLength === 1 || fnolSecType === constants.DMS_CONTEXT_LOSS && !isMultiSelect ? utils.string.t('dms.search.linkDocument.confirmMessage') : utils.string.t('dms.search.linkDocument.confirmMessageForMulti', {\n            count: isFnolDmsSearch && fnolSecType === constants.DMS_CONTEXT_LOSS ? requestParamsLength / 2 : requestParamsLength\n          }),\n          submitHandler: function submitHandler() {\n            return dispatch(linkMultipleDmsDocuments(requestParams)).then(function (response) {\n              if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                resetToDefaultValues();\n\n                if (utils.generic.isValidArray(Object.values(searchFields), true)) {\n                  dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n                    pageSize: searchRowsTotalPreference\n                  })));\n                }\n\n                updateClaimFileListAfterLinking();\n                handleFormStatus();\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var handleCheckboxClick = function handleCheckboxClick(e, doc) {\n    e.stopPropagation();\n    var newlySelectedDocs = [].concat(_toConsumableArray(selectedDocs), [doc]);\n\n    if (selectedDocs === null || selectedDocs === void 0 ? void 0 : selectedDocs.includes(doc)) {\n      newlySelectedDocs = newlySelectedDocs.filter(function (selectedDoc) {\n        return selectedDoc !== doc;\n      });\n    }\n\n    setSelectedDocs(newlySelectedDocs);\n    handleFormStatus();\n  };\n\n  var showCheckboxesClick = function showCheckboxesClick(event) {\n    var _event$target;\n\n    setIsMultiSelect(event === null || event === void 0 ? void 0 : (_event$target = event.target) === null || _event$target === void 0 ? void 0 : _event$target.checked);\n    handleFormStatus();\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      by: by,\n      dir: dir,\n      pageSize: searchRowsTotalPreference,\n      requestType: bothTypeCall,\n      filterRequest: filtersPreference\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var _useFlexiColumns2 = useFlexiColumns(cols),\n      columnProps = _useFlexiColumns2.columnProps;\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setSearchRowsTotalPreference(rowsPerPage);\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      requestType: bothTypeCall,\n      pageSize: rowsPerPage,\n      filterRequest: filtersPreference\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      page: newPage,\n      pageSize: searchRowsTotalPreference,\n      filterRequest: filtersPreference,\n      requestType: bothTypeCall\n    }))).then(function () {\n      setSearchExpanded({\n        isOpen: false,\n        timeStamp: new Date()\n      });\n    });\n  };\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      setValue = _useForm.setValue;\n\n  var managedTableFilterFields = [!isFnolDmsSearch && {\n    id: 'hdriveFolder',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.hDriveFolders'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter = documentsList.filters) === null || _documentsList$filter === void 0 ? void 0 : _documentsList$filter.hdriveFolder,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"hdriveFolder\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter2 = documentsList.filters) === null || _documentsList$filter2 === void 0 ? void 0 : _documentsList$filter2.hdriveFolder\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 523,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'documentTypeDescription',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.docType'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter3 = documentsList.filters) === null || _documentsList$filter3 === void 0 ? void 0 : _documentsList$filter3.documentTypeDescription,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"documentTypeDescription\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter4 = documentsList.filters) === null || _documentsList$filter4 === void 0 ? void 0 : _documentsList$filter4.documentTypeDescription\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 531,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'createdBy',\n    type: 'multiSelect',\n    label: utils.string.t('claims.list.tasksGridColumns.createdBy'),\n    value: [],\n    options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter5 = documentsList.filters) === null || _documentsList$filter5 === void 0 ? void 0 : _documentsList$filter5.createdBy,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"createdBy\",\n      search: true,\n      options: documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$filter6 = documentsList.filters) === null || _documentsList$filter6 === void 0 ? void 0 : _documentsList$filter6.createdBy\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 539,\n      columnNumber: 16\n    }, this)\n  }];\n\n  var resetFilter = function resetFilter() {\n    setValue('hdriveFolder', null);\n    setValue('documentTypeDescription', null);\n    setValue('createdBy', null);\n    setFiltersPreference([]);\n    if (!Object.keys(searchFields).length) return;\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread({}, searchFields)));\n  };\n\n  var handleSearchFilter = function handleSearchFilter(_ref3) {\n    var search = _ref3.search,\n        filters = _ref3.filters;\n    setFiltersPreference(filters);\n    dispatch(searchDmsDocuments(context, contextReferenceObject, _objectSpread(_objectSpread({}, searchFields), {}, {\n      pageSize: searchRowsTotalPreference,\n      requestType: bothTypeCall,\n      filterRequest: filters\n    })));\n  }; // TODO\n\n\n  var resetNotificationFilters = function resetNotificationFilters() {};\n\n  var viewDocLauncher = function viewDocLauncher(e, doc) {\n    e.preventDefault();\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(DmsSearchView, {\n    cols: colsArray,\n    columnPropsFunc: columnProps,\n    rows: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files = documentsList.files) === null || _documentsList$files === void 0 ? void 0 : (_documentsList$files$ = _documentsList$files.data) === null || _documentsList$files$ === void 0 ? void 0 : _documentsList$files$.searchValue) || [],\n    fields: fields,\n    buttons: {\n      cancel: cancel,\n      submit: submit\n    },\n    isFnolDmsSearch: isFnolDmsSearch,\n    formProps: formProps,\n    searchExpanded: searchExpanded,\n    handlers: {\n      download: handleDownloadFile,\n      link: handleLinkFile,\n      fnolLink: handleFnolLinkFile,\n      sort: handleSort,\n      handleCheckboxClick: handleCheckboxClick,\n      showCheckboxesClick: showCheckboxesClick,\n      handleMultipleDownload: handleMultipleDownload,\n      handleMutiplelinking: handleMutiplelinking,\n      resetFilter: resetFilter,\n      handleSearchFilter: handleSearchFilter,\n      resetNotificationFilters: resetNotificationFilters,\n      viewDocLauncher: viewDocLauncher\n    },\n    resetKey: resetKey,\n    isMultiSelect: isMultiSelect,\n    selectedDocs: selectedDocs,\n    pagination: {\n      page: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files2 = documentsList.files) === null || _documentsList$files2 === void 0 ? void 0 : (_documentsList$files3 = _documentsList$files2.pagination) === null || _documentsList$files3 === void 0 ? void 0 : _documentsList$files3.page) || 0,\n      rowsTotal: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files4 = documentsList.files) === null || _documentsList$files4 === void 0 ? void 0 : (_documentsList$files5 = _documentsList$files4.pagination) === null || _documentsList$files5 === void 0 ? void 0 : _documentsList$files5.totalElements) || 0,\n      rowsPerPage: (documentsList === null || documentsList === void 0 ? void 0 : (_documentsList$files6 = documentsList.files) === null || _documentsList$files6 === void 0 ? void 0 : (_documentsList$files7 = _documentsList$files6.pagination) === null || _documentsList$files7 === void 0 ? void 0 : _documentsList$files7.size) || searchRowsTotalPreference,\n      handlers: {\n        handleChangePage: handleChangePage,\n        handleChangeRowsPerPage: handleChangeRowsPerPage\n      }\n    },\n    tableFilterFields: managedTableFilterFields,\n    isFetchingFilters: isFetchingFilters,\n    isDmsSearchDataLoading: isDmsSearchDataLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 575,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsSearch, \"OG8drMlZYOglVqgvUayCBtqO72o=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useFlexiColumns, useForm, useFormActions, useFlexiColumns, useForm];\n});\n\n_c = DmsSearch;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsSearch\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DmsSearch/DmsSearch.js"],"names":["React","useEffect","useState","PropTypes","useSelector","useDispatch","useForm","yupResolver","get","DmsSearchView","searchDmsDocuments","selectRefDataNewDocumentTypesByContextSource","selectRefDataNewDocumentTypeLookUpByContextSource","resetDmsDocumentsSearch","viewDocumentsDownload","viewDocumentsMultiDownload","linkMultipleDmsDocuments","showModal","selectClaimsListFilterLoading","selectLossId","selectClaimsInformation","getDepartments","selectPiDepartmentList","selectDmsSearchDataLoader","selectDmsAdvSearchValues","setDmsAdvSearchData","resetDmsAdvSearchValues","useFormActions","useFlexiColumns","constants","utils","config","MultiSelect","DmsSearch","propTypes","context","oneOf","DMS_CONTEXT_CASE","DMS_CONTEXT_CLAIM","DMS_CONTEXT_LOSS","DMS_CONTEXT_POLICY","DMS_CONTEXT_TASK","DMS_CONTEXT_PROCESSING_INSTRUCTION","DMS_CONTEXT_INSTRUCTION","DMS_CONTEXT_RFI","isRequired","source","oneOfType","string","number","referenceId","isAutoSearchScreen","bool","isFnolDmsSearch","updateClaimFileListAfterLinking","func","documentTypeKey","Object","values","DMS_DOCUMENT_TYPE_SECTION_KEYS","handleFormStatus","defaultProps","policy","dispatch","isDmsFromPi","dmsFormatter","getDocumentTypeFilterKeys","dmsSectionKey","sourceId","documentTypeSource","dmsDocTypeSource","documentTypesBeforeFilter","documentsList","state","isFetchingFilters","departmentList","lossRefID","lossRef","claimRefID","claimReference","dmsSearchDataLoader","dmsAdvSearchValues","resetKey","setResetKey","isOpen","timeStamp","Date","searchExpanded","setSearchExpanded","isMultiSelect","setIsMultiSelect","selectedDocs","setSelectedDocs","searchFields","setSearchFields","selectedDivisionOptions","setSelectDivisionOption","DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS","searchRowsTotalPreference","setSearchRowsTotalPreference","filtersPreference","setFiltersPreference","isDmsSearchDataLoading","setIsDmsSearchDataLoading","bothTypeCall","CLAIM_PROCESSING_REQ_TYPES","both","contextReferenceObject","id","divOptions","map","list","value","deptID","label","name","getDocumentTypeInfo","documentTypeDescription","sectionKey","dmsSourceID","documentTypesAfterFilter","filter","type","sourceID","documentTypes","generic","isValidArray","policyId","defaultSearchCriteria","pageSize","cols","visible","t","sort","direction","nowrap","menu","colsArray","columns","fields","defaultValue","claimId","lossId","insuredName","placeholder","documentType","options","optionKey","optionLabel","documentName","year","muiComponentProps","fullWidth","helperText","muiPickerProps","views","format","clearable","tagType","setSelectOption","selectedOptions","division","DMS_DOCUMENT_TYPE_PAYMENT","group","ui","date","slashNumeric","actions","handler","getTime","data","divIDs","div","divisionIds","requestType","filterRequest","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","formProps","resolver","reset","cancel","submit","handleDownloadFile","e","file","stopPropagation","handleLinkFile","isLinked","confirmDocumentlink","handleFnolLinkFile","sectionType","handleMultipleDownload","selectedDocIds","docId","documentId","length","handleMutiplelinking","resetToDefaultValues","docs","fnolSecType","requestParams","d","claimParams","push","requestParamsLength","component","props","title","maxWidth","componentProps","confirmLabel","confirmMessage","count","submitHandler","then","response","status","API_RESPONSE_OK","handleCheckboxClick","doc","newlySelectedDocs","includes","selectedDoc","showCheckboxesClick","event","target","checked","handleSort","by","dir","columnProps","handleChangeRowsPerPage","rowsPerPage","handleChangePage","newPage","page","setValue","managedTableFilterFields","filters","hdriveFolder","content","createdBy","resetFilter","keys","handleSearchFilter","search","resetNotificationFilters","viewDocLauncher","preventDefault","dms","dmsDocumentViewLauncher","files","searchValue","download","link","fnolLink","pagination","rowsTotal","totalElements","size","handlers"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,SAASC,WAAT,QAA4B,yBAA5B;AACA,SAASC,GAAT,QAAoB,QAApB,C,CAEA;;AACA,SAASC,aAAT,QAA8B,kBAA9B;AACA,SACEC,kBADF,EAEEC,4CAFF,EAGEC,iDAHF,EAIEC,uBAJF,EAKEC,qBALF,EAMEC,0BANF,EAOEC,wBAPF,EAQEC,SARF,EASEC,6BATF,EAUEC,YAVF,EAWEC,uBAXF,EAYEC,cAZF,EAaEC,sBAbF,EAcEC,yBAdF,EAeEC,wBAfF,EAgBEC,mBAhBF,EAiBEC,uBAjBF,QAkBO,QAlBP;AAmBA,SAASC,cAAT,EAAyBC,eAAzB,QAAgD,OAAhD;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,SAASC,WAAT,QAA4B,YAA5B;;AAEAC,SAAS,CAACC,SAAV,GAAsB;AACpBC,EAAAA,OAAO,EAAEhC,SAAS,CAACiC,KAAV,CAAgB,CACvBP,SAAS,CAACQ,gBADa,EAEvBR,SAAS,CAACS,iBAFa,EAGvBT,SAAS,CAACU,gBAHa,EAIvBV,SAAS,CAACW,kBAJa,EAKvBX,SAAS,CAACY,gBALa,EAMvBZ,SAAS,CAACa,kCANa,EAOvBb,SAAS,CAACc,uBAPa,EAQvBd,SAAS,CAACe,eARa,CAAhB,EASNC,UAViB;AAWpBC,EAAAA,MAAM,EAAE3C,SAAS,CAAC4C,SAAV,CAAoB,CAAC5C,SAAS,CAAC6C,MAAX,EAAmB7C,SAAS,CAAC8C,MAA7B,CAApB,EAA0DJ,UAX9C;AAYpBK,EAAAA,WAAW,EAAE/C,SAAS,CAAC6C,MAAV,CAAiBH,UAZV;AAapBM,EAAAA,kBAAkB,EAAEhD,SAAS,CAACiD,IAbV;AAcpBC,EAAAA,eAAe,EAAElD,SAAS,CAACiD,IAdP;AAepBE,EAAAA,+BAA+B,EAAEnD,SAAS,CAACoD,IAfvB;AAgBpBC,EAAAA,eAAe,EAAErD,SAAS,CAACiC,KAAV,CAAgBqB,MAAM,CAACC,MAAP,CAAc7B,SAAS,CAAC8B,8BAAxB,CAAhB,CAhBG;AAiBpBC,EAAAA,gBAAgB,EAAEzD,SAAS,CAACoD,IAAV,CAAeV;AAjBb,CAAtB;AAoBAZ,SAAS,CAAC4B,YAAV,GAAyB;AACvBL,EAAAA,eAAe,EAAE3B,SAAS,CAAC8B,8BAAV,CAAyCG,MADnC;AAEvBT,EAAAA,eAAe,EAAE,KAFM;AAGvBC,EAAAA,+BAA+B,EAAE,2CAAM,CAAE,CAHlB;AAIvBM,EAAAA,gBAAgB,EAAE,4BAAM,CAAE;AAJH,CAAzB;AAOA,eAAe,SAAS3B,SAAT,OASZ;AAAA;;AAAA;;AAAA,MARDE,OAQC,QARDA,OAQC;AAAA,MAPDW,MAOC,QAPDA,MAOC;AAAA,MANDI,WAMC,QANDA,WAMC;AAAA,MALDC,kBAKC,QALDA,kBAKC;AAAA,MAJDK,eAIC,QAJDA,eAIC;AAAA,MAHDH,eAGC,QAHDA,eAGC;AAAA,MAFDC,+BAEC,QAFDA,+BAEC;AAAA,MADDM,gBACC,QADDA,gBACC;AACD,MAAMG,QAAQ,GAAG1D,WAAW,EAA5B;AAEA,MAAM2D,WAAW,GAAGlC,KAAK,CAACmC,YAAN,CAAmBD,WAAnB,CAA+BR,eAA/B,CAApB;;AAHC,8BASG1B,KAAK,CAACmC,YAAN,CAAmBC,yBAAnB,CAA6C/B,OAA7C,EAAsDW,MAAtD,EAA8DU,eAA9D,CATH;AAAA,MAMCW,aAND,yBAMCA,aAND;AAAA,MAOCC,QAPD,yBAOCA,QAPD;AAAA,MAQmBC,kBARnB,yBAQCC,gBARD,EAWD;;;AACA,MAAMC,yBAAyB,GAAGnE,WAAW,CAC3C+D,aAAa,KAAKtC,SAAS,CAAC8B,8BAAV,CAAyCG,MAA3D,GACIlD,iDAAiD,CAACuD,aAAD,EAAgBC,QAAhB,CADrD,GAEIzD,4CAA4C,CAACwD,aAAD,EAAgBC,QAAhB,EAA0BC,kBAA1B,CAHL,CAA7C;AAKA,MAAMG,aAAa,GAAGpE,WAAW,CAAC,UAACqE,KAAD;AAAA,WAAWjE,GAAG,CAACiE,KAAD,EAAQ,YAAR,CAAd;AAAA,GAAD,CAAX,IAAoD,EAA1E;AACA,MAAMC,iBAAiB,GAAGtE,WAAW,CAACc,6BAAD,CAArC;AACA,MAAMyD,cAAc,GAAGvE,WAAW,CAACkB,sBAAD,CAAlC;AACA,MAAMsD,SAAS,mBAAGxE,WAAW,CAACe,YAAD,CAAd,iDAAG,aAA2B0D,OAA7C;AACA,MAAMC,UAAU,oBAAG1E,WAAW,CAACgB,uBAAD,CAAd,kDAAG,cAAsC2D,cAAzD;AACA,MAAMC,mBAAmB,GAAG5E,WAAW,CAACmB,yBAAD,CAAvC;AACA,MAAM0D,kBAAkB,GAAG7E,WAAW,CAACoB,wBAAD,CAAtC,CAvBC,CAyBD;;AAzBC,kBA0B+BtB,QAAQ,EA1BvC;AAAA;AAAA,MA0BMgF,QA1BN;AAAA,MA0BgBC,WA1BhB;;AAAA,mBA2B2CjF,QAAQ,CAAC;AAAEkF,IAAAA,MAAM,EAAE,KAAV;AAAiBC,IAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,GAAD,CA3BnD;AAAA;AAAA,MA2BMC,cA3BN;AAAA,MA2BsBC,iBA3BtB;;AAAA,mBA4ByCtF,QAAQ,CAAC,KAAD,CA5BjD;AAAA;AAAA,MA4BMuF,aA5BN;AAAA,MA4BqBC,gBA5BrB;;AAAA,mBA6BuCxF,QAAQ,CAAC,EAAD,CA7B/C;AAAA;AAAA,MA6BMyF,YA7BN;AAAA,MA6BoBC,eA7BpB;;AAAA,mBA8BuC1F,QAAQ,CAAC,EAAD,CA9B/C;AAAA;AAAA,MA8BM2F,YA9BN;AAAA,MA8BoBC,eA9BpB;;AAAA,oBA+B0D5F,QAAQ,CAAC,EAAD,CA/BlE;AAAA;AAAA,MA+BM6F,uBA/BN;AAAA,MA+B+BC,uBA/B/B;;AAAA,oBAgCiE9F,QAAQ,CAAC2B,SAAS,CAACoE,kCAAX,CAhCzE;AAAA;AAAA,MAgCMC,yBAhCN;AAAA,MAgCiCC,4BAhCjC;;AAAA,oBAiCiDjG,QAAQ,CAAC,EAAD,CAjCzD;AAAA;AAAA,MAiCMkG,iBAjCN;AAAA,MAiCyBC,oBAjCzB;;AAAA,oBAkC2DnG,QAAQ,CAAC8E,mBAAD,CAlCnE;AAAA;AAAA,MAkCMsB,sBAlCN;AAAA,MAkC8BC,yBAlC9B;;AAmCD,MAAMC,YAAY,GAAG3E,SAAS,CAAC4E,0BAAV,CAAqCC,IAA1D;AACA,MAAMC,sBAAsB,GAAG;AAAEC,IAAAA,EAAE,EAAE1D;AAAN,GAA/B;AACA,MAAM2D,UAAU,GAAGlC,cAAc,CAACmC,GAAf,CAAmB,UAACC,IAAD,EAAU;AAC9C,WAAO;AAAEH,MAAAA,EAAE,EAAEG,IAAI,CAACH,EAAX;AAAeI,MAAAA,KAAK,EAAED,IAAI,CAACE,MAA3B;AAAmCC,MAAAA,KAAK,EAAEH,IAAI,CAACI;AAA/C,KAAP;AACD,GAFkB,CAAnB;;AArCC,cA0CCnD,WAAW,IAAIlC,KAAK,CAACmC,YAAN,CAAmBmD,mBAAnB,CAAuC5D,eAAvC,EAAwDY,QAAxD,CA1ChB;AAAA,MAyCOiD,uBAzCP,SAyCOA,uBAzCP;AAAA,MAyCgCC,UAzChC,SAyCgCA,UAzChC;AAAA,MAyC4CC,WAzC5C,SAyC4CA,WAzC5C;;AA4CD,MAAMC,wBAAwB,GAC5B,CAACrF,OAAO,KAAKN,SAAS,CAACW,kBAAtB,IAA4CL,OAAO,KAAKN,SAAS,CAACa,kCAAnE,KAA0GsB,WAA1G,GACIO,yBADJ,aACIA,yBADJ,uBACIA,yBAAyB,CAAEkD,MAA3B,CACE,UAACC,IAAD;AAAA,WACEA,IAAI,CAACL,uBAAL,KAAiCA,uBAAjC,IAA4DK,IAAI,CAACJ,UAAL,KAAoBA,UAAhF,IAA8FI,IAAI,CAACC,QAAL,KAAkBJ,WADlH;AAAA,GADF,CADJ,GAKIhD,yBANN;AAOA,MAAMqD,aAAa,GAAGJ,wBAAtB;AAEAvH,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAAC6B,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BnD,cAA3B,EAA2C,IAA3C,CAAL,EAAuDZ,QAAQ,CAAC1C,cAAc,EAAf,CAAR;AACvD0C,IAAAA,QAAQ,CAACtC,mBAAmB,CAAC;AAAEsG,MAAAA,QAAQ,EAAE5E,kBAAkB,GAAGD,WAAH,GAAiB;AAA/C,KAAD,CAApB,CAAR;AACA,WAAO,YAAM;AACXa,MAAAA,QAAQ,CAACrC,uBAAuB,EAAxB,CAAR;AACD,KAFD;AAGD,GANQ,EAMN,EANM,CAAT,CArDC,CA2DO;;AAERzB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIkD,kBAAJ,EAAwB;AACtB,UAAM6E,qBAAqB,GACzB7F,OAAO,KAAKN,SAAS,CAACW,kBAAtB,GAA2C;AAAEuF,QAAAA,QAAQ,EAAE7E,WAAZ;AAAyB+E,QAAAA,QAAQ,EAAE/B;AAAnC,OAA3C,GAA4G,EAD9G;;AAEA,UAAIpE,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BrE,MAAM,CAACC,MAAP,CAAcsE,qBAAd,CAA3B,EAAiE,IAAjE,CAAJ,EAA4E;AAC1ElC,QAAAA,eAAe,CAACkC,qBAAD,CAAf;AACAjE,QAAAA,QAAQ,CAACrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,EAAkCqB,qBAAlC,CAAnB,CAAR;AACD;AACF;;AACDjE,IAAAA,QAAQ,CAACpD,4CAA4C,CAACwB,OAAD,EAAUW,MAAV,CAA7C,CAAR;AACA,WAAO,YAAM;AACXiB,MAAAA,QAAQ,CAAClD,uBAAuB,EAAxB,CAAR;AACD,KAFD;AAGD,GAbQ,EAaN,CAACqC,WAAD,CAbM,CAAT,CA7DC,CA0EkB;;AAEnBjD,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI+E,mBAAmB,KAAKsB,sBAA5B,EAAoDC,yBAAyB,CAACvB,mBAAD,CAAzB;AACrD,GAFQ,EAEN,CAACA,mBAAD,CAFM,CAAT,CA5EC,CA8E0B;;AAE3B,MAAMkD,IAAI,IACR;AACEtB,IAAAA,EAAE,EAAE,aADN;AAEEuB,IAAAA,OAAO,EAAE;AAFX,GADQ,EAKR;AACEvB,IAAAA,EAAE,EAAE,UADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,0BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,SAAR;AAAmBY,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE;AALX,GALQ,EAYR;AACEvB,IAAAA,EAAE,EAAE,eADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,+BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,SAAR;AAAmBY,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE,CAAC9E;AALZ,GAZQ,EAmBR;AACEuD,IAAAA,EAAE,EAAE,WADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,2BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,SAAR;AAAmBY,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE,CAAC9E;AALZ,GAnBQ,EA0BR;AACEuD,IAAAA,EAAE,EAAE,yBADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,8BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,SAAR;AAAmBY,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE;AALX,GA1BQ,EAiCR;AACEvB,IAAAA,EAAE,EAAE,SADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,yBAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,SAAR;AAAmBY,MAAAA,SAAS,EAAE;AAA9B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE,CAAC9E;AALZ,GAjCQ,EAwCR;AACEuD,IAAAA,EAAE,EAAE,sBADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,4BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,MAAR;AAAgBY,MAAAA,SAAS,EAAE;AAA3B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE;AALX,GAxCQ,SA+CL,CACD9E,eAAe,GACX;AACEuD,IAAAA,EAAE,EAAE,cADN;AAEEM,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,8BAAf,CAFT;AAGEC,IAAAA,IAAI,EAAE;AAAEX,MAAAA,IAAI,EAAE,MAAR;AAAgBY,MAAAA,SAAS,EAAE;AAA3B,KAHR;AAIEC,IAAAA,MAAM,EAAE,IAJV;AAKEJ,IAAAA,OAAO,EAAE;AALX,GADW,GAQX,EATH,CA/CK,GA0DR;AAAEvB,IAAAA,EAAE,EAAE,eAAN;AAAuB4B,IAAAA,IAAI,EAAE,IAA7B;AAAmCD,IAAAA,MAAM,EAAE;AAA3C,GA1DQ,EAAV;;AAhFC,yBA6I8B3G,eAAe,CAACsG,IAAD,CA7I7C;AAAA,MA6IgBO,SA7IhB,oBA6IOC,OA7IP;;AA+ID,MAAMC,MAAM,GAAG,CACb;AACExB,IAAAA,IAAI,EAAE,UADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,yCAAf,CAHT;AAIEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE8C;AAJpC,GADa,EAOb;AACEZ,IAAAA,IAAI,EAAE,SADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,wCAAf,CAHT;AAIEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE4D;AAJpC,GAPa,EAab;AACE1B,IAAAA,IAAI,EAAE,QADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,uCAAf,CAHT;AAIEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE6D;AAJpC,GAba,EAmBb;AACE3B,IAAAA,IAAI,EAAE,aADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,qCAAf,CAHT;AAIEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAE8D;AAJpC,GAnBa,EAyBb;AACE5B,IAAAA,IAAI,EAAE,cADR;AAEEO,IAAAA,IAAI,EAAE,iBAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,sCAAf,CAHT;AAIEY,IAAAA,WAAW,EAAElH,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,4CAAf,CAJf;AAKEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEgE,YALpC;AAMEC,IAAAA,OAAO,EAAEtB,aANX;AAOEuB,IAAAA,SAAS,EAAE,gBAPb;AAQEC,IAAAA,WAAW,EAAE;AARf,GAzBa,EAmCb;AACEjC,IAAAA,IAAI,EAAE,cADR;AAEEO,IAAAA,IAAI,EAAE,MAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,sCAAf,CAHT;AAIEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEoE;AAJpC,GAnCa,EAyCb;AACElC,IAAAA,IAAI,EAAE,MADR;AAEEO,IAAAA,IAAI,EAAE,YAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,uCAAf,CAHT;AAIEY,IAAAA,WAAW,EAAElH,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,6CAAf,CAJf;AAKEQ,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEqE,IALpC;AAMEC,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,UAAU,EAAE3H,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,4CAAf;AAFK,KANrB;AAUEsB,IAAAA,cAAc,EAAE;AACdC,MAAAA,KAAK,EAAE,CAAC,MAAD,CADO;AAEdC,MAAAA,MAAM,EAAE,MAFM;AAGdC,MAAAA,SAAS,EAAE;AAHG;AAVlB,GAzCa,EAyDb;AACE1C,IAAAA,IAAI,EAAE,UADR;AAEEO,IAAAA,IAAI,EAAE,aAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,kCAAf,CAHT;AAIEc,IAAAA,OAAO,EAAErC,UAJX;AAKEiD,IAAAA,OAAO,EAAE,UALX;AAMEd,IAAAA,WAAW,EAAE,iBANf;AAOEe,IAAAA,eAAe,EAAE/D,uBAPnB;AAQEgE,IAAAA,eAAe,EAAEjE,uBARnB;AASE6C,IAAAA,YAAY,EAAE3D,kBAAF,aAAEA,kBAAF,uBAAEA,kBAAkB,CAAEgF;AATpC,GAzDa,EAoEb;AACE9C,IAAAA,IAAI,YAAKtF,SAAS,CAACqI,yBAAf,iBADN;AAEExC,IAAAA,IAAI,EAAE,YAFR;AAGEyC,IAAAA,KAAK,EAAEtI,SAAS,CAACqI,yBAHnB;AAIEhD,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,qCAAf,CAJT;AAKEY,IAAAA,WAAW,EAAElH,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,2CAAf,CALf;AAMEQ,IAAAA,YAAY,EAAE3D,kBAAkB,WAAIpD,SAAS,CAACqI,yBAAd,kBANlC;AAOEX,IAAAA,iBAAiB,EAAE;AACjBC,MAAAA,SAAS,EAAE,IADM;AAEjBC,MAAAA,UAAU,EAAE3H,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,0CAAf;AAFK,KAPrB;AAWEsB,IAAAA,cAAc,EAAE;AACdE,MAAAA,MAAM,EAAE7H,MAAM,CAACqI,EAAP,CAAUR,MAAV,CAAiBS,IAAjB,CAAsBC,YADhB;AAEdT,MAAAA,SAAS,EAAE;AAFG;AAXlB,GApEa,EAoFb;AACE1C,IAAAA,IAAI,YAAKtF,SAAS,CAACqI,yBAAf,sBADN;AAEExC,IAAAA,IAAI,EAAE,MAFR;AAGEyC,IAAAA,KAAK,EAAEtI,SAAS,CAACqI,yBAHnB;AAIEhD,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,0CAAf,CAJT;AAKEQ,IAAAA,YAAY,EAAE3D,kBAAkB,WAAIpD,SAAS,CAACqI,yBAAd;AALlC,GApFa,EA2Fb;AACE/C,IAAAA,IAAI,YAAKtF,SAAS,CAACqI,yBAAf,eADN;AAEExC,IAAAA,IAAI,EAAE,MAFR;AAGEyC,IAAAA,KAAK,EAAEtI,SAAS,CAACqI,yBAHnB;AAIEhD,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,mCAAf,CAJT;AAKEQ,IAAAA,YAAY,EAAE3D,kBAAkB,WAAIpD,SAAS,CAACqI,yBAAd;AALlC,GA3Fa,EAkGb;AACE/C,IAAAA,IAAI,YAAKtF,SAAS,CAACqI,yBAAf,YADN;AAEExC,IAAAA,IAAI,EAAE,QAFR;AAGEyC,IAAAA,KAAK,EAAEtI,SAAS,CAACqI,yBAHnB;AAIEhD,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,gCAAf,CAJT;AAKEQ,IAAAA,YAAY,EAAE3D,kBAAkB,WAAIpD,SAAS,CAACqI,yBAAd;AALlC,GAlGa,CAAf;AA2GA,MAAMK,OAAO,GAAG,CACd;AACEpD,IAAAA,IAAI,EAAE,QADR;AAEED,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,YAAf,CAFT;AAGEoC,IAAAA,OAAO,EAAE,mBAAM;AACbrF,MAAAA,WAAW,CAAC,IAAIG,IAAJ,GAAWmF,OAAX,EAAD,CAAX;AACAjF,MAAAA,iBAAiB,CAAC;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,OAAD,CAAjB;AACD;AANH,GADc,EASd;AACE6B,IAAAA,IAAI,EAAE,QADR;AAEED,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,gBAAf,CAFT;AAGEoC,IAAAA,OAAO,EAAE,iBAACE,IAAD,EAAU;AACjB5E,MAAAA,eAAe,CAAC4E,IAAD,CAAf;AACAlF,MAAAA,iBAAiB,CAAC;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,OAAD,CAAjB;AACA,UAAIqF,MAAM,GAAG5E,uBAAuB,CAACe,GAAxB,CAA4B,UAAC8D,GAAD;AAAA,eAASA,GAAG,CAAC5D,KAAb;AAAA,OAA5B,CAAb;AACAjD,MAAAA,QAAQ,CAACtC,mBAAmB,CAACiJ,IAAD,CAApB,CAAR;AACA3G,MAAAA,QAAQ,CACNrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCACb+D,IADa;AAEhBG,QAAAA,WAAW,EAAEF,MAFG;AAGhB1C,QAAAA,QAAQ,EAAE/B,yBAHM;AAIhB4E,QAAAA,WAAW,EAAEtE,YAJG;AAKhBuE,QAAAA,aAAa,EAAE3E;AALC,SADZ,CAAR;AASD;AAjBH,GATc,CAAhB;AA8BA,MAAM4E,aAAa,GAAGlJ,KAAK,CAACmJ,IAAN,CAAWC,gBAAX,CAA4BvC,MAA5B,CAAtB;AACA,MAAMwC,gBAAgB,GAAGrJ,KAAK,CAACmJ,IAAN,CAAWG,mBAAX,CAA+BzC,MAA/B,CAAzB;AAEA,MAAM0C,SAAS,GAAG/K,OAAO;AACvB0K,IAAAA,aAAa,EAAbA;AADuB,KAEnBG,gBAAgB,IAAI;AAAEG,IAAAA,QAAQ,EAAE/K,WAAW,CAAC4K,gBAAD;AAAvB,GAFD,EAAzB;;AA3RC,wBAgS0BxJ,cAAc,CAAC4I,OAAD,EAAUc,SAAS,CAACE,KAApB,CAhSxC;AAAA,MAgSOC,MAhSP,mBAgSOA,MAhSP;AAAA,MAgSeC,MAhSf,mBAgSeA,MAhSf;;AAkSD,MAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,CAAD,EAAIC,IAAJ,EAAa;AACtCD,IAAAA,CAAC,CAACE,eAAF;AACA9H,IAAAA,QAAQ,CAACjD,qBAAqB,CAAC8K,IAAD,CAAtB,CAAR;AACD,GAHD;;AAKA,MAAME,cAAc,GAAG,SAAjBA,cAAiB,CAACH,CAAD,EAAIC,IAAJ,EAAa;AAClCD,IAAAA,CAAC,CAACE,eAAF;;AACA,QAAID,IAAI,CAACG,QAAT,EAAmB;AACjB;AACD;;AACDC,IAAAA,mBAAmB,CAAC,CAACJ,IAAD,CAAD,CAAnB;AACD,GAND;;AAQA,MAAMK,kBAAkB,GAAG,SAArBA,kBAAqB,CAACL,IAAD,EAAOM,WAAP,EAAuB;AAChD,QAAIN,IAAI,CAACG,QAAT,EAAmB;AACjB;AACD;;AACDC,IAAAA,mBAAmB,CAAC,CAACJ,IAAD,CAAD,EAASM,WAAT,CAAnB;AACD,GALD;;AAOA,MAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB,GAAM;AACnC,QAAMC,cAAc,GAAGzG,YAAH,aAAGA,YAAH,uBAAGA,YAAY,CAAEmB,GAAd,CAAkB,UAACuF,KAAD;AAAA,aAAWA,KAAK,CAACC,UAAjB;AAAA,KAAlB,CAAvB;;AACA,QAAI,CAAA3G,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAE4G,MAAd,MAAyB,CAA7B,EAAgC;AAC9BxI,MAAAA,QAAQ,CAAChD,0BAA0B,CAACqL,cAAD,CAA3B,CAAR;AACA;AACD;;AACDrI,IAAAA,QAAQ,CAACjD,qBAAqB,CAAC6E,YAAD,aAACA,YAAD,uBAACA,YAAY,CAAG,CAAH,CAAb,CAAtB,CAAR;AACD,GAPD;;AASA,MAAM6G,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAsB;AAAA,QAArBN,WAAqB,uEAAP,EAAO;AACjDF,IAAAA,mBAAmB,CAACrG,YAAD,EAAeuG,WAAf,CAAnB;AACD,GAFD;;AAIA,MAAMO,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjC7G,IAAAA,eAAe,CAAC,EAAD,CAAf;AACAF,IAAAA,gBAAgB,CAAC,KAAD,CAAhB;AACD,GAHD;;AAKA,MAAMsG,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACU,IAAD,EAA4B;AAAA,QAArBC,WAAqB,uEAAP,EAAO;AACtD,QAAMC,aAAa,GAAGF,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE5F,GAAN,CAAU,UAAC+F,CAAD,EAAO;AACrC,aAAO;AACLP,QAAAA,UAAU,EAAEO,CAAC,CAACP,UADT;AAELpJ,QAAAA,WAAW,EAAEG,eAAe,GAAIsJ,WAAW,KAAK9K,SAAS,CAACU,gBAA1B,GAA6CqC,SAA7C,GAAyDE,UAA7D,GAA2E5B,WAFlG;AAGLgJ,QAAAA,WAAW,EAAE7I,eAAe,GAAGsJ,WAAH,GAAiBxK;AAHxC,OAAP;AAKD,KANqB,CAAtB;;AAOA,QAAIwK,WAAW,KAAK9K,SAAS,CAACU,gBAA9B,EAAgD;AAC9C,UAAMuK,WAAW,GAAGJ,IAAH,aAAGA,IAAH,uBAAGA,IAAI,CAAE5F,GAAN,CAAU,UAAC+F,CAAD,EAAO;AACnC,eAAO;AACLP,UAAAA,UAAU,EAAEO,CAAC,CAACP,UADT;AAELpJ,UAAAA,WAAW,EAAE4B,UAFR;AAGLoH,UAAAA,WAAW,EAAErK,SAAS,CAACS;AAHlB,SAAP;AAKD,OANmB,CAApB;AAOAsK,MAAAA,aAAa,CAACG,IAAd,OAAAH,aAAa,qBAASE,WAAT,EAAb;AACD;;AACD,QAAME,mBAAmB,GAAGJ,aAAH,aAAGA,aAAH,uBAAGA,aAAa,CAAEL,MAA3C;AAEAxI,IAAAA,QAAQ,CACN9C,SAAS,CAAC;AACRgM,MAAAA,SAAS,EAAE,SADH;AAERC,MAAAA,KAAK,EAAE;AACL1D,QAAAA,SAAS,EAAE,IADN;AAEL2D,QAAAA,KAAK,EAAErL,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,+BAAf,CAFF;AAGLgF,QAAAA,QAAQ,EAAE,IAHL;AAILC,QAAAA,cAAc,EAAE;AACdC,UAAAA,YAAY,EAAExL,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,sCAAf,CADA;AAEdmF,UAAAA,cAAc,EACZP,mBAAmB,KAAK,CAAxB,IAA8BL,WAAW,KAAK9K,SAAS,CAACU,gBAA1B,IAA8C,CAACkD,aAA7E,GACI3D,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,wCAAf,CADJ,GAEItG,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,gDAAf,EAAiE;AAC/DoF,YAAAA,KAAK,EAAEnK,eAAe,IAAIsJ,WAAW,KAAK9K,SAAS,CAACU,gBAA7C,GAAgEyK,mBAAmB,GAAG,CAAtF,GAA0FA;AADlC,WAAjE,CALQ;AAQdS,UAAAA,aAAa,EAAE;AAAA,mBACb1J,QAAQ,CAAC/C,wBAAwB,CAAC4L,aAAD,CAAzB,CAAR,CAAkDc,IAAlD,CAAuD,UAACC,QAAD,EAAc;AACnE,kBAAI,CAAAA,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEC,MAAV,MAAqB/L,SAAS,CAACgM,eAAnC,EAAoD;AAClDpB,gBAAAA,oBAAoB;;AACpB,oBAAI3K,KAAK,CAAC+F,OAAN,CAAcC,YAAd,CAA2BrE,MAAM,CAACC,MAAP,CAAcmC,YAAd,CAA3B,EAAwD,IAAxD,CAAJ,EAAmE;AACjE9B,kBAAAA,QAAQ,CAACrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCAAuCd,YAAvC;AAAqDoC,oBAAAA,QAAQ,EAAE/B;AAA/D,qBAAnB,CAAR;AACD;;AACD5C,gBAAAA,+BAA+B;AAC/BM,gBAAAA,gBAAgB;AACjB;AACF,aATD,CADa;AAAA;AARD;AAJX;AAFC,KAAD,CADH,CAAR;AA8BD,GAlDD;;AAoDA,MAAMkK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACnC,CAAD,EAAIoC,GAAJ,EAAY;AACtCpC,IAAAA,CAAC,CAACE,eAAF;AACA,QAAImC,iBAAiB,gCAAOrI,YAAP,IAAqBoI,GAArB,EAArB;;AACA,QAAIpI,YAAJ,aAAIA,YAAJ,uBAAIA,YAAY,CAAEsI,QAAd,CAAuBF,GAAvB,CAAJ,EAAiC;AAC/BC,MAAAA,iBAAiB,GAAGA,iBAAiB,CAACvG,MAAlB,CAAyB,UAACyG,WAAD;AAAA,eAAiBA,WAAW,KAAKH,GAAjC;AAAA,OAAzB,CAApB;AACD;;AACDnI,IAAAA,eAAe,CAACoI,iBAAD,CAAf;AACApK,IAAAA,gBAAgB;AACjB,GARD;;AAUA,MAAMuK,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,KAAD,EAAW;AAAA;;AACrC1I,IAAAA,gBAAgB,CAAC0I,KAAD,aAACA,KAAD,wCAACA,KAAK,CAAEC,MAAR,kDAAC,cAAeC,OAAhB,CAAhB;AACA1K,IAAAA,gBAAgB;AACjB,GAHD;;AAKA,MAAM2K,UAAU,GAAG,SAAbA,UAAa,CAACC,EAAD,EAAKC,GAAL,EAAa;AAC9B1K,IAAAA,QAAQ,CACNrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCACbd,YADa;AAEhB2I,MAAAA,EAAE,EAAFA,EAFgB;AAGhBC,MAAAA,GAAG,EAAHA,GAHgB;AAIhBxG,MAAAA,QAAQ,EAAE/B,yBAJM;AAKhB4E,MAAAA,WAAW,EAAEtE,YALG;AAMhBuE,MAAAA,aAAa,EAAE3E;AANC,OADZ,CAAR,CASEsH,IATF,CASO,YAAM;AACXlI,MAAAA,iBAAiB,CAAC;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,OAAD,CAAjB;AACD,KAXD;AAYD,GAbD;;AA3YC,0BA0ZuB1D,eAAe,CAACsG,IAAD,CA1ZtC;AAAA,MA0ZOwG,WA1ZP,qBA0ZOA,WA1ZP;;AA4ZD,MAAMC,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,WAAD,EAAiB;AAC/CzI,IAAAA,4BAA4B,CAACyI,WAAD,CAA5B;AACA7K,IAAAA,QAAQ,CACNrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCACbd,YADa;AAEhBiF,MAAAA,WAAW,EAAEtE,YAFG;AAGhByB,MAAAA,QAAQ,EAAE2G,WAHM;AAIhB7D,MAAAA,aAAa,EAAE3E;AAJC,OADZ,CAAR,CAOEsH,IAPF,CAOO,YAAM;AACXlI,MAAAA,iBAAiB,CAAC;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,OAAD,CAAjB;AACD,KATD;AAUD,GAZD;;AAcA,MAAMuJ,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,OAAD,EAAa;AACpC/K,IAAAA,QAAQ,CACNrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCACbd,YADa;AAEhBkJ,MAAAA,IAAI,EAAED,OAFU;AAGhB7G,MAAAA,QAAQ,EAAE/B,yBAHM;AAIhB6E,MAAAA,aAAa,EAAE3E,iBAJC;AAKhB0E,MAAAA,WAAW,EAAEtE;AALG,OADZ,CAAR,CAQEkH,IARF,CAQO,YAAM;AACXlI,MAAAA,iBAAiB,CAAC;AAAEJ,QAAAA,MAAM,EAAE,KAAV;AAAiBC,QAAAA,SAAS,EAAE,IAAIC,IAAJ;AAA5B,OAAD,CAAjB;AACD,KAVD;AAWD,GAZD;;AA1aC,iBAwboBhF,OAAO;AAC1B0K,IAAAA,aAAa,EAAbA;AAD0B,KAEtBG,gBAAgB,IAAI;AAAEG,IAAAA,QAAQ,EAAE/K,WAAW,CAAC4K,gBAAD;AAAvB,GAFE,EAxb3B;AAAA,MAwbO6D,QAxbP,YAwbOA,QAxbP;;AA6bD,MAAMC,wBAAwB,GAAG,CAC/B,CAAC5L,eAAD,IAAoB;AAClBuD,IAAAA,EAAE,EAAE,cADc;AAElBc,IAAAA,IAAI,EAAE,aAFY;AAGlBR,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,4CAAf,CAHW;AAIlBpB,IAAAA,KAAK,EAAE,EAJW;AAKlBkC,IAAAA,OAAO,EAAE1E,aAAF,aAAEA,aAAF,gDAAEA,aAAa,CAAE0K,OAAjB,0DAAE,sBAAwBC,YALf;AAMlBC,IAAAA,OAAO,eAAE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,cAAhB;AAA+B,MAAA,MAAM,MAArC;AAAsC,MAAA,OAAO,EAAE5K,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAE0K,OAAjB,2DAAE,uBAAwBC;AAAvE;AAAA;AAAA;AAAA;AAAA;AANS,GADW,EAS/B;AACEvI,IAAAA,EAAE,EAAE,yBADN;AAEEc,IAAAA,IAAI,EAAE,aAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,sCAAf,CAHT;AAIEpB,IAAAA,KAAK,EAAE,EAJT;AAKEkC,IAAAA,OAAO,EAAE1E,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAE0K,OAAjB,2DAAE,uBAAwB7H,uBALnC;AAME+H,IAAAA,OAAO,eAAE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,yBAAhB;AAA0C,MAAA,MAAM,MAAhD;AAAiD,MAAA,OAAO,EAAE5K,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAE0K,OAAjB,2DAAE,uBAAwB7H;AAAlF;AAAA;AAAA;AAAA;AAAA;AANX,GAT+B,EAiB/B;AACET,IAAAA,EAAE,EAAE,WADN;AAEEc,IAAAA,IAAI,EAAE,aAFR;AAGER,IAAAA,KAAK,EAAEpF,KAAK,CAACkB,MAAN,CAAaoF,CAAb,CAAe,wCAAf,CAHT;AAIEpB,IAAAA,KAAK,EAAE,EAJT;AAKEkC,IAAAA,OAAO,EAAE1E,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAE0K,OAAjB,2DAAE,uBAAwBG,SALnC;AAMED,IAAAA,OAAO,eAAE,QAAC,WAAD;AAAa,MAAA,EAAE,EAAC,WAAhB;AAA4B,MAAA,MAAM,MAAlC;AAAmC,MAAA,OAAO,EAAE5K,aAAF,aAAEA,aAAF,iDAAEA,aAAa,CAAE0K,OAAjB,2DAAE,uBAAwBG;AAApE;AAAA;AAAA;AAAA;AAAA;AANX,GAjB+B,CAAjC;;AA2BA,MAAMC,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxBN,IAAAA,QAAQ,CAAC,cAAD,EAAiB,IAAjB,CAAR;AACAA,IAAAA,QAAQ,CAAC,yBAAD,EAA4B,IAA5B,CAAR;AACAA,IAAAA,QAAQ,CAAC,WAAD,EAAc,IAAd,CAAR;AACA3I,IAAAA,oBAAoB,CAAC,EAAD,CAApB;AACA,QAAI,CAAC5C,MAAM,CAAC8L,IAAP,CAAY1J,YAAZ,EAA0B0G,MAA/B,EAAuC;AACvCxI,IAAAA,QAAQ,CAACrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,oBAAuCd,YAAvC,EAAnB,CAAR;AACD,GAPD;;AASA,MAAM2J,kBAAkB,GAAG,SAArBA,kBAAqB,QAAyB;AAAA,QAAtBC,MAAsB,SAAtBA,MAAsB;AAAA,QAAdP,OAAc,SAAdA,OAAc;AAClD7I,IAAAA,oBAAoB,CAAC6I,OAAD,CAApB;AAEAnL,IAAAA,QAAQ,CACNrD,kBAAkB,CAACyB,OAAD,EAAUwE,sBAAV,kCACbd,YADa;AAEhBoC,MAAAA,QAAQ,EAAE/B,yBAFM;AAGhB4E,MAAAA,WAAW,EAAEtE,YAHG;AAIhBuE,MAAAA,aAAa,EAAEmE;AAJC,OADZ,CAAR;AAQD,GAXD,CAjeC,CA8eD;;;AACA,MAAMQ,wBAAwB,GAAG,SAA3BA,wBAA2B,GAAM,CAAE,CAAzC;;AAEA,MAAMC,eAAe,GAAG,SAAlBA,eAAkB,CAAChE,CAAD,EAAIoC,GAAJ,EAAY;AAClCpC,IAAAA,CAAC,CAACiE,cAAF;AADkC,QAE1BtD,UAF0B,GAEGyB,GAFH,CAE1BzB,UAF0B;AAAA,QAEdjD,YAFc,GAEG0E,GAFH,CAEd1E,YAFc;AAGlCvH,IAAAA,KAAK,CAAC+N,GAAN,CAAUC,uBAAV,CAAkCxD,UAAlC,EAA8CjD,YAA9C;AACD,GAJD;;AAMA,sBACE,QAAC,aAAD;AACE,IAAA,IAAI,EAAEZ,SADR;AAEE,IAAA,eAAe,EAAEiG,WAFnB;AAGE,IAAA,IAAI,EAAE,CAAAlK,aAAa,SAAb,IAAAA,aAAa,WAAb,oCAAAA,aAAa,CAAEuL,KAAf,uGAAsBrF,IAAtB,gFAA4BsF,WAA5B,KAA2C,EAHnD;AAIE,IAAA,MAAM,EAAErH,MAJV;AAKE,IAAA,OAAO,EAAE;AAAE6C,MAAAA,MAAM,EAANA,MAAF;AAAUC,MAAAA,MAAM,EAANA;AAAV,KALX;AAME,IAAA,eAAe,EAAEpI,eANnB;AAOE,IAAA,SAAS,EAAEgI,SAPb;AAQE,IAAA,cAAc,EAAE9F,cARlB;AASE,IAAA,QAAQ,EAAE;AACR0K,MAAAA,QAAQ,EAAEvE,kBADF;AAERwE,MAAAA,IAAI,EAAEpE,cAFE;AAGRqE,MAAAA,QAAQ,EAAElE,kBAHF;AAIR5D,MAAAA,IAAI,EAAEkG,UAJE;AAKRT,MAAAA,mBAAmB,EAAEA,mBALb;AAMRK,MAAAA,mBAAmB,EAAEA,mBANb;AAORhC,MAAAA,sBAAsB,EAAEA,sBAPhB;AAQRK,MAAAA,oBAAoB,EAAEA,oBARd;AASR8C,MAAAA,WAAW,EAAXA,WATQ;AAURE,MAAAA,kBAAkB,EAAlBA,kBAVQ;AAWRE,MAAAA,wBAAwB,EAAxBA,wBAXQ;AAYRC,MAAAA,eAAe,EAAfA;AAZQ,KATZ;AAuBE,IAAA,QAAQ,EAAEzK,QAvBZ;AAwBE,IAAA,aAAa,EAAEO,aAxBjB;AAyBE,IAAA,YAAY,EAAEE,YAzBhB;AA0BE,IAAA,UAAU,EAAE;AACVoJ,MAAAA,IAAI,EAAE,CAAAvK,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAEuL,KAAf,yGAAsBK,UAAtB,gFAAkCrB,IAAlC,KAA0C,CADtC;AAEVsB,MAAAA,SAAS,EAAE,CAAA7L,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAEuL,KAAf,yGAAsBK,UAAtB,gFAAkCE,aAAlC,KAAmD,CAFpD;AAGV1B,MAAAA,WAAW,EAAE,CAAApK,aAAa,SAAb,IAAAA,aAAa,WAAb,qCAAAA,aAAa,CAAEuL,KAAf,yGAAsBK,UAAtB,gFAAkCG,IAAlC,KAA0CrK,yBAH7C;AAIVsK,MAAAA,QAAQ,EAAE;AACR3B,QAAAA,gBAAgB,EAAEA,gBADV;AAERF,QAAAA,uBAAuB,EAAEA;AAFjB;AAJA,KA1Bd;AAmCE,IAAA,iBAAiB,EAAEM,wBAnCrB;AAoCE,IAAA,iBAAiB,EAAEvK,iBApCrB;AAqCE,IAAA,sBAAsB,EAAE4B;AArC1B;AAAA;AAAA;AAAA;AAAA,UADF;AAyCD;;GAziBuBrE,S;UAUL5B,W,EAWiBD,W,EAKZA,W,EACIA,W,EACHA,W,EACLA,W,EACCA,W,EACSA,W,EACDA,W,EAsHIwB,e,EA8IbtB,O,EAKSqB,c,EA0HHC,e,EA8BHtB,O;;;KAjcC2B,S","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { get } from 'lodash';\r\n\r\n// app\r\nimport { DmsSearchView } from './DmsSearch.view';\r\nimport {\r\n  searchDmsDocuments,\r\n  selectRefDataNewDocumentTypesByContextSource,\r\n  selectRefDataNewDocumentTypeLookUpByContextSource,\r\n  resetDmsDocumentsSearch,\r\n  viewDocumentsDownload,\r\n  viewDocumentsMultiDownload,\r\n  linkMultipleDmsDocuments,\r\n  showModal,\r\n  selectClaimsListFilterLoading,\r\n  selectLossId,\r\n  selectClaimsInformation,\r\n  getDepartments,\r\n  selectPiDepartmentList,\r\n  selectDmsSearchDataLoader,\r\n  selectDmsAdvSearchValues,\r\n  setDmsAdvSearchData,\r\n  resetDmsAdvSearchValues,\r\n} from 'stores';\r\nimport { useFormActions, useFlexiColumns } from 'hooks';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { MultiSelect } from 'components';\r\n\r\nDmsSearch.propTypes = {\r\n  context: PropTypes.oneOf([\r\n    constants.DMS_CONTEXT_CASE,\r\n    constants.DMS_CONTEXT_CLAIM,\r\n    constants.DMS_CONTEXT_LOSS,\r\n    constants.DMS_CONTEXT_POLICY,\r\n    constants.DMS_CONTEXT_TASK,\r\n    constants.DMS_CONTEXT_PROCESSING_INSTRUCTION,\r\n    constants.DMS_CONTEXT_INSTRUCTION,\r\n    constants.DMS_CONTEXT_RFI,\r\n  ]).isRequired,\r\n  source: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  referenceId: PropTypes.string.isRequired,\r\n  isAutoSearchScreen: PropTypes.bool,\r\n  isFnolDmsSearch: PropTypes.bool,\r\n  updateClaimFileListAfterLinking: PropTypes.func,\r\n  documentTypeKey: PropTypes.oneOf(Object.values(constants.DMS_DOCUMENT_TYPE_SECTION_KEYS)),\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n};\r\n\r\nDmsSearch.defaultProps = {\r\n  documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy,\r\n  isFnolDmsSearch: false,\r\n  updateClaimFileListAfterLinking: () => {},\r\n  handleFormStatus: () => {},\r\n};\r\n\r\nexport default function DmsSearch({\r\n  context,\r\n  source,\r\n  referenceId,\r\n  isAutoSearchScreen,\r\n  documentTypeKey,\r\n  isFnolDmsSearch,\r\n  updateClaimFileListAfterLinking,\r\n  handleFormStatus,\r\n}) {\r\n  const dispatch = useDispatch();\r\n\r\n  const isDmsFromPi = utils.dmsFormatter.isDmsFromPi(documentTypeKey);\r\n\r\n  const {\r\n    dmsSectionKey,\r\n    sourceId,\r\n    dmsDocTypeSource: documentTypeSource,\r\n  } = utils.dmsFormatter.getDocumentTypeFilterKeys(context, source, documentTypeKey);\r\n\r\n  // redux\r\n  const documentTypesBeforeFilter = useSelector(\r\n    dmsSectionKey === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.policy\r\n      ? selectRefDataNewDocumentTypeLookUpByContextSource(dmsSectionKey, sourceId)\r\n      : selectRefDataNewDocumentTypesByContextSource(dmsSectionKey, sourceId, documentTypeSource)\r\n  );\r\n  const documentsList = useSelector((state) => get(state, 'dms.search')) || [];\r\n  const isFetchingFilters = useSelector(selectClaimsListFilterLoading);\r\n  const departmentList = useSelector(selectPiDepartmentList);\r\n  const lossRefID = useSelector(selectLossId)?.lossRef;\r\n  const claimRefID = useSelector(selectClaimsInformation)?.claimReference;\r\n  const dmsSearchDataLoader = useSelector(selectDmsSearchDataLoader);\r\n  const dmsAdvSearchValues = useSelector(selectDmsAdvSearchValues);\r\n\r\n  // state\r\n  const [resetKey, setResetKey] = useState();\r\n  const [searchExpanded, setSearchExpanded] = useState({ isOpen: false, timeStamp: new Date() });\r\n  const [isMultiSelect, setIsMultiSelect] = useState(false);\r\n  const [selectedDocs, setSelectedDocs] = useState([]);\r\n  const [searchFields, setSearchFields] = useState({});\r\n  const [selectedDivisionOptions, setSelectDivisionOption] = useState([]);\r\n  const [searchRowsTotalPreference, setSearchRowsTotalPreference] = useState(constants.DMS_SEARCH_TABLE_FNOL_DEFAULT_ROWS);\r\n  const [filtersPreference, setFiltersPreference] = useState([]);\r\n  const [isDmsSearchDataLoading, setIsDmsSearchDataLoading] = useState(dmsSearchDataLoader);\r\n  const bothTypeCall = constants.CLAIM_PROCESSING_REQ_TYPES.both;\r\n  const contextReferenceObject = { id: referenceId };\r\n  const divOptions = departmentList.map((list) => {\r\n    return { id: list.id, value: list.deptID, label: list.name };\r\n  });\r\n\r\n  const { documentTypeDescription, sectionKey, dmsSourceID } =\r\n    isDmsFromPi && utils.dmsFormatter.getDocumentTypeInfo(documentTypeKey, sourceId);\r\n\r\n  const documentTypesAfterFilter =\r\n    (context === constants.DMS_CONTEXT_POLICY || context === constants.DMS_CONTEXT_PROCESSING_INSTRUCTION) && isDmsFromPi\r\n      ? documentTypesBeforeFilter?.filter(\r\n          (type) =>\r\n            type.documentTypeDescription === documentTypeDescription && type.sectionKey === sectionKey && type.sourceID === dmsSourceID\r\n        )\r\n      : documentTypesBeforeFilter;\r\n  const documentTypes = documentTypesAfterFilter;\r\n\r\n  useEffect(() => {\r\n    if (!utils.generic.isValidArray(departmentList, true)) dispatch(getDepartments());\r\n    dispatch(setDmsAdvSearchData({ policyId: isAutoSearchScreen ? referenceId : '' }));\r\n    return () => {\r\n      dispatch(resetDmsAdvSearchValues());\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (isAutoSearchScreen) {\r\n      const defaultSearchCriteria =\r\n        context === constants.DMS_CONTEXT_POLICY ? { policyId: referenceId, pageSize: searchRowsTotalPreference } : {};\r\n      if (utils.generic.isValidArray(Object.values(defaultSearchCriteria), true)) {\r\n        setSearchFields(defaultSearchCriteria);\r\n        dispatch(searchDmsDocuments(context, contextReferenceObject, defaultSearchCriteria));\r\n      }\r\n    }\r\n    dispatch(selectRefDataNewDocumentTypesByContextSource(context, source));\r\n    return () => {\r\n      dispatch(resetDmsDocumentsSearch());\r\n    };\r\n  }, [referenceId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (dmsSearchDataLoader !== isDmsSearchDataLoading) setIsDmsSearchDataLoading(dmsSearchDataLoader);\r\n  }, [dmsSearchDataLoader]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const cols = [\r\n    {\r\n      id: 'multiSelect',\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'fileName',\r\n      label: utils.string.t('dms.search.cols.fileName'),\r\n      sort: { type: 'numeric', direction: 'desc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'hDriveFolders',\r\n      label: utils.string.t('dms.search.cols.hDriveFolders'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'reference',\r\n      label: utils.string.t('dms.search.cols.reference'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'documentTypeDescription',\r\n      label: utils.string.t('dms.search.cols.documentType'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'version',\r\n      label: utils.string.t('dms.search.cols.version'),\r\n      sort: { type: 'numeric', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: !isFnolDmsSearch,\r\n    },\r\n    {\r\n      id: 'userDetails.fullName',\r\n      label: utils.string.t('dms.search.cols.uploadedBy'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    ...[\r\n      isFnolDmsSearch\r\n        ? {\r\n            id: 'uploadedDate',\r\n            label: utils.string.t('dms.search.cols.uploadedDate'),\r\n            sort: { type: 'date', direction: 'asc' },\r\n            nowrap: true,\r\n            visible: true,\r\n          }\r\n        : {},\r\n    ],\r\n    { id: 'actionButtons', menu: true, nowrap: true },\r\n  ];\r\n\r\n  const { columns: colsArray } = useFlexiColumns(cols);\r\n\r\n  const fields = [\r\n    {\r\n      name: 'policyId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.policyReference.label'),\r\n      defaultValue: dmsAdvSearchValues?.policyId,\r\n    },\r\n    {\r\n      name: 'claimId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.claimReference.label'),\r\n      defaultValue: dmsAdvSearchValues?.claimId,\r\n    },\r\n    {\r\n      name: 'lossId',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.lossReference.label'),\r\n      defaultValue: dmsAdvSearchValues?.lossId,\r\n    },\r\n    {\r\n      name: 'insuredName',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.insuredName.label'),\r\n      defaultValue: dmsAdvSearchValues?.insuredName,\r\n    },\r\n    {\r\n      name: 'documentType',\r\n      type: 'autocompletemui',\r\n      label: utils.string.t('dms.search.fields.documentType.label'),\r\n      placeholder: utils.string.t('dms.search.fields.documentType.placeholder'),\r\n      defaultValue: dmsAdvSearchValues?.documentType,\r\n      options: documentTypes,\r\n      optionKey: 'documentTypeID',\r\n      optionLabel: 'documentTypeDescription',\r\n    },\r\n    {\r\n      name: 'documentName',\r\n      type: 'text',\r\n      label: utils.string.t('dms.search.fields.documentName.label'),\r\n      defaultValue: dmsAdvSearchValues?.documentName,\r\n    },\r\n    {\r\n      name: 'year',\r\n      type: 'datepicker',\r\n      label: utils.string.t('dms.search.fields.inceptionYear.label'),\r\n      placeholder: utils.string.t('dms.search.fields.inceptionYear.placeholder'),\r\n      defaultValue: dmsAdvSearchValues?.year,\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('dms.search.fields.inceptionYear.helperText'),\r\n      },\r\n      muiPickerProps: {\r\n        views: ['year'],\r\n        format: 'YYYY',\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('dms.search.fields.division.label'),\r\n      options: divOptions,\r\n      tagType: 'quantity',\r\n      placeholder: 'Choose Division',\r\n      setSelectOption: setSelectDivisionOption,\r\n      selectedOptions: selectedDivisionOptions,\r\n      defaultValue: dmsAdvSearchValues?.division,\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentDate`,\r\n      type: 'datepicker',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.paymentDate.label'),\r\n      placeholder: utils.string.t('dms.search.fields.paymentDate.placeholder'),\r\n      defaultValue: dmsAdvSearchValues[`${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentDate`],\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        helperText: utils.string.t('dms.search.fields.paymentDate.helperText'),\r\n      },\r\n      muiPickerProps: {\r\n        format: config.ui.format.date.slashNumeric,\r\n        clearable: true,\r\n      },\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentReference`,\r\n      type: 'text',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.paymentReference.label'),\r\n      defaultValue: dmsAdvSearchValues[`${constants.DMS_DOCUMENT_TYPE_PAYMENT}_paymentReference`],\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_lossPayee`,\r\n      type: 'text',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.lossPayee.label'),\r\n      defaultValue: dmsAdvSearchValues[`${constants.DMS_DOCUMENT_TYPE_PAYMENT}_lossPayee`],\r\n    },\r\n    {\r\n      name: `${constants.DMS_DOCUMENT_TYPE_PAYMENT}_amount`,\r\n      type: 'number',\r\n      group: constants.DMS_DOCUMENT_TYPE_PAYMENT,\r\n      label: utils.string.t('dms.search.fields.amount.label'),\r\n      defaultValue: dmsAdvSearchValues[`${constants.DMS_DOCUMENT_TYPE_PAYMENT}_amount`],\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => {\r\n        setResetKey(new Date().getTime());\r\n        setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('dms.search.btn'),\r\n      handler: (data) => {\r\n        setSearchFields(data);\r\n        setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n        let divIDs = selectedDivisionOptions.map((div) => div.value);\r\n        dispatch(setDmsAdvSearchData(data));\r\n        dispatch(\r\n          searchDmsDocuments(context, contextReferenceObject, {\r\n            ...data,\r\n            divisionIds: divIDs,\r\n            pageSize: searchRowsTotalPreference,\r\n            requestType: bothTypeCall,\r\n            filterRequest: filtersPreference,\r\n          })\r\n        );\r\n      },\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const formProps = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const { cancel, submit } = useFormActions(actions, formProps.reset);\r\n\r\n  const handleDownloadFile = (e, file) => {\r\n    e.stopPropagation();\r\n    dispatch(viewDocumentsDownload(file));\r\n  };\r\n\r\n  const handleLinkFile = (e, file) => {\r\n    e.stopPropagation();\r\n    if (file.isLinked) {\r\n      return;\r\n    }\r\n    confirmDocumentlink([file]);\r\n  };\r\n\r\n  const handleFnolLinkFile = (file, sectionType) => {\r\n    if (file.isLinked) {\r\n      return;\r\n    }\r\n    confirmDocumentlink([file], sectionType);\r\n  };\r\n\r\n  const handleMultipleDownload = () => {\r\n    const selectedDocIds = selectedDocs?.map((docId) => docId.documentId);\r\n    if (selectedDocs?.length !== 1) {\r\n      dispatch(viewDocumentsMultiDownload(selectedDocIds));\r\n      return;\r\n    }\r\n    dispatch(viewDocumentsDownload(selectedDocs?.[0]));\r\n  };\r\n\r\n  const handleMutiplelinking = (sectionType = '') => {\r\n    confirmDocumentlink(selectedDocs, sectionType);\r\n  };\r\n\r\n  const resetToDefaultValues = () => {\r\n    setSelectedDocs([]);\r\n    setIsMultiSelect(false);\r\n  };\r\n\r\n  const confirmDocumentlink = (docs, fnolSecType = '') => {\r\n    const requestParams = docs?.map((d) => {\r\n      return {\r\n        documentId: d.documentId,\r\n        referenceId: isFnolDmsSearch ? (fnolSecType === constants.DMS_CONTEXT_LOSS ? lossRefID : claimRefID) : referenceId,\r\n        sectionType: isFnolDmsSearch ? fnolSecType : context,\r\n      };\r\n    });\r\n    if (fnolSecType === constants.DMS_CONTEXT_LOSS) {\r\n      const claimParams = docs?.map((d) => {\r\n        return {\r\n          documentId: d.documentId,\r\n          referenceId: claimRefID,\r\n          sectionType: constants.DMS_CONTEXT_CLAIM,\r\n        };\r\n      });\r\n      requestParams.push(...claimParams);\r\n    }\r\n    const requestParamsLength = requestParams?.length;\r\n\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.search.linkDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.search.linkDocument.confirmLabel'),\r\n            confirmMessage:\r\n              requestParamsLength === 1 || (fnolSecType === constants.DMS_CONTEXT_LOSS && !isMultiSelect)\r\n                ? utils.string.t('dms.search.linkDocument.confirmMessage')\r\n                : utils.string.t('dms.search.linkDocument.confirmMessageForMulti', {\r\n                    count: isFnolDmsSearch && fnolSecType === constants.DMS_CONTEXT_LOSS ? requestParamsLength / 2 : requestParamsLength,\r\n                  }),\r\n            submitHandler: () =>\r\n              dispatch(linkMultipleDmsDocuments(requestParams)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  resetToDefaultValues();\r\n                  if (utils.generic.isValidArray(Object.values(searchFields), true)) {\r\n                    dispatch(searchDmsDocuments(context, contextReferenceObject, { ...searchFields, pageSize: searchRowsTotalPreference }));\r\n                  }\r\n                  updateClaimFileListAfterLinking();\r\n                  handleFormStatus();\r\n                }\r\n              }),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleCheckboxClick = (e, doc) => {\r\n    e.stopPropagation();\r\n    let newlySelectedDocs = [...selectedDocs, doc];\r\n    if (selectedDocs?.includes(doc)) {\r\n      newlySelectedDocs = newlySelectedDocs.filter((selectedDoc) => selectedDoc !== doc);\r\n    }\r\n    setSelectedDocs(newlySelectedDocs);\r\n    handleFormStatus();\r\n  };\r\n\r\n  const showCheckboxesClick = (event) => {\r\n    setIsMultiSelect(event?.target?.checked);\r\n    handleFormStatus();\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        by,\r\n        dir,\r\n        pageSize: searchRowsTotalPreference,\r\n        requestType: bothTypeCall,\r\n        filterRequest: filtersPreference,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const { columnProps } = useFlexiColumns(cols);\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setSearchRowsTotalPreference(rowsPerPage);\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        requestType: bothTypeCall,\r\n        pageSize: rowsPerPage,\r\n        filterRequest: filtersPreference,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        page: newPage,\r\n        pageSize: searchRowsTotalPreference,\r\n        filterRequest: filtersPreference,\r\n        requestType: bothTypeCall,\r\n      })\r\n    ).then(() => {\r\n      setSearchExpanded({ isOpen: false, timeStamp: new Date() });\r\n    });\r\n  };\r\n\r\n  const { setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const managedTableFilterFields = [\r\n    !isFnolDmsSearch && {\r\n      id: 'hdriveFolder',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.hDriveFolders'),\r\n      value: [],\r\n      options: documentsList?.filters?.hdriveFolder,\r\n      content: <MultiSelect id=\"hdriveFolder\" search options={documentsList?.filters?.hdriveFolder} />,\r\n    },\r\n    {\r\n      id: 'documentTypeDescription',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.docType'),\r\n      value: [],\r\n      options: documentsList?.filters?.documentTypeDescription,\r\n      content: <MultiSelect id=\"documentTypeDescription\" search options={documentsList?.filters?.documentTypeDescription} />,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.list.tasksGridColumns.createdBy'),\r\n      value: [],\r\n      options: documentsList?.filters?.createdBy,\r\n      content: <MultiSelect id=\"createdBy\" search options={documentsList?.filters?.createdBy} />,\r\n    },\r\n  ];\r\n\r\n  const resetFilter = () => {\r\n    setValue('hdriveFolder', null);\r\n    setValue('documentTypeDescription', null);\r\n    setValue('createdBy', null);\r\n    setFiltersPreference([]);\r\n    if (!Object.keys(searchFields).length) return;\r\n    dispatch(searchDmsDocuments(context, contextReferenceObject, { ...searchFields }));\r\n  };\r\n\r\n  const handleSearchFilter = ({ search, filters }) => {\r\n    setFiltersPreference(filters);\r\n\r\n    dispatch(\r\n      searchDmsDocuments(context, contextReferenceObject, {\r\n        ...searchFields,\r\n        pageSize: searchRowsTotalPreference,\r\n        requestType: bothTypeCall,\r\n        filterRequest: filters,\r\n      })\r\n    );\r\n  };\r\n\r\n  // TODO\r\n  const resetNotificationFilters = () => {};\r\n\r\n  const viewDocLauncher = (e, doc) => {\r\n    e.preventDefault();\r\n    const { documentId, documentName } = doc;\r\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\r\n  };\r\n\r\n  return (\r\n    <DmsSearchView\r\n      cols={colsArray}\r\n      columnPropsFunc={columnProps}\r\n      rows={documentsList?.files?.data?.searchValue || []}\r\n      fields={fields}\r\n      buttons={{ cancel, submit }}\r\n      isFnolDmsSearch={isFnolDmsSearch}\r\n      formProps={formProps}\r\n      searchExpanded={searchExpanded}\r\n      handlers={{\r\n        download: handleDownloadFile,\r\n        link: handleLinkFile,\r\n        fnolLink: handleFnolLinkFile,\r\n        sort: handleSort,\r\n        handleCheckboxClick: handleCheckboxClick,\r\n        showCheckboxesClick: showCheckboxesClick,\r\n        handleMultipleDownload: handleMultipleDownload,\r\n        handleMutiplelinking: handleMutiplelinking,\r\n        resetFilter,\r\n        handleSearchFilter,\r\n        resetNotificationFilters,\r\n        viewDocLauncher,\r\n      }}\r\n      resetKey={resetKey}\r\n      isMultiSelect={isMultiSelect}\r\n      selectedDocs={selectedDocs}\r\n      pagination={{\r\n        page: documentsList?.files?.pagination?.page || 0,\r\n        rowsTotal: documentsList?.files?.pagination?.totalElements || 0,\r\n        rowsPerPage: documentsList?.files?.pagination?.size || searchRowsTotalPreference,\r\n        handlers: {\r\n          handleChangePage: handleChangePage,\r\n          handleChangeRowsPerPage: handleChangeRowsPerPage,\r\n        },\r\n      }}\r\n      tableFilterFields={managedTableFilterFields}\r\n      isFetchingFilters={isFetchingFilters}\r\n      isDmsSearchDataLoading={isDmsSearchDataLoading}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}