{"ast":null,"code":"import \"core-js/modules/es.promise\";\nimport { addLoader, authLogout, removeLoader, setDepartmentSelected } from 'stores';\nimport * as utils from 'utils';\nimport get from 'lodash/get';\nexport var getUser = function getUser(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/user.actions.get'\n    };\n    dispatch(getUserRequest());\n    dispatch(addLoader('getUser'));\n    return new Promise(function (resolve, reject) {\n      utils.api.get({\n        token: auth.accessToken,\n        endpoint: endpoint.edge,\n        path: 'api/user'\n      }).then(function (response) {\n        return utils.api.handleResponse(response);\n      }).then(function (json) {\n        return utils.api.handleData(json);\n      }).then(function (data) {\n        dispatch(getUserSuccess(data)); // checking that the logged in user departments and saved dept (localStorage) match\n        // if the saved department in localStorage isn't one of the user, we replace it\n\n        var depts = data ? get(data, 'departmentIds') || [] : [];\n        var firstDept = get(data, 'departmentIds[0]', '').toString();\n        var savedDept = (localStorage.getItem('edge-department') || '').toString();\n\n        if (!depts.map(function (d) {\n          return d.toString();\n        }).includes(savedDept)) {\n          dispatch(setDepartmentSelected(firstDept));\n        }\n\n        dispatch(removeLoader('getUser'));\n        resolve(data);\n      })[\"catch\"](function (err) {\n        utils.api.handleError(err, defaultError);\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\n        dispatch(getUserFailure(err));\n        dispatch(removeLoader('getUser'));\n        reject(err);\n      });\n    });\n  };\n};\nexport var getUserRequest = function getUserRequest() {\n  return {\n    type: 'USER_GET_REQUEST'\n  };\n};\nexport var getUserSuccess = function getUserSuccess(userData) {\n  return {\n    type: 'USER_GET_SUCCESS',\n    payload: userData\n  };\n};\nexport var getUserFailure = function getUserFailure(error) {\n  return {\n    type: 'USER_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/user/user.actions.get.js"],"names":["addLoader","authLogout","removeLoader","setDepartmentSelected","utils","get","getUser","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getUserRequest","Promise","resolve","reject","api","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getUserSuccess","depts","firstDept","toString","savedDept","localStorage","getItem","map","d","includes","err","handleError","handleUnauthorized","getUserFailure","type","userData","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, setDepartmentSelected } from 'stores';\r\nimport * as utils from 'utils';\r\nimport get from 'lodash/get';\r\n\r\nexport const getUser = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/user.actions.get',\r\n  };\r\n\r\n  dispatch(getUserRequest());\r\n  dispatch(addLoader('getUser'));\r\n\r\n  return new Promise((resolve, reject) => {\r\n    utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.edge,\r\n        path: 'api/user',\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((json) => utils.api.handleData(json))\r\n      .then((data) => {\r\n        dispatch(getUserSuccess(data));\r\n\r\n        // checking that the logged in user departments and saved dept (localStorage) match\r\n        // if the saved department in localStorage isn't one of the user, we replace it\r\n        const depts = data ? get(data, 'departmentIds') || [] : [];\r\n        const firstDept = get(data, 'departmentIds[0]', '').toString();\r\n        const savedDept = (localStorage.getItem('edge-department') || '').toString();\r\n\r\n        if (!depts.map((d) => d.toString()).includes(savedDept)) {\r\n          dispatch(setDepartmentSelected(firstDept));\r\n        }\r\n\r\n        dispatch(removeLoader('getUser'));\r\n\r\n        resolve(data);\r\n      })\r\n      .catch((err) => {\r\n        utils.api.handleError(err, defaultError);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        dispatch(getUserFailure(err));\r\n        dispatch(removeLoader('getUser'));\r\n        reject(err);\r\n      });\r\n  });\r\n};\r\n\r\nexport const getUserRequest = () => {\r\n  return {\r\n    type: 'USER_GET_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getUserSuccess = (userData) => {\r\n  return {\r\n    type: 'USER_GET_SUCCESS',\r\n    payload: userData,\r\n  };\r\n};\r\n\r\nexport const getUserFailure = (error) => {\r\n  return {\r\n    type: 'USER_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}