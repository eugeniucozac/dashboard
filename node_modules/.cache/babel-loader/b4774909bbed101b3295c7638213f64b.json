{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimsComplexityRules\\\\ClaimsComplexityRules.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport { Layout, Tabs, SectionHeader, Translate } from 'components';\nimport { ClaimsComplexityContractPolicyRef, ClaimsComplexityDivision, ClaimsComplexityInsured, ClaimsComplexityReferralValues, ClaimsComplexityValues } from 'modules';\nimport * as utils from 'utils'; //mui\n\nimport { Box } from '@material-ui/core';\nimport SettingsIcon from '@material-ui/icons/Settings';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsComplexityRulesView.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  handleSelectTab: PropTypes.func,\n  setIsSelectedTabDirty: PropTypes.func.isRequired\n};\nexport function ClaimsComplexityRulesView(_ref) {\n  var tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      handleSelectTab = _ref.handleSelectTab,\n      setIsSelectedTabDirty = _ref.setIsSelectedTabDirty;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"complexityRulesManagement\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: /*#__PURE__*/_jsxDEV(Translate, {\n            label: utils.string.t('claims.complexityRulesManagementDetails.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 20\n          }, this),\n          icon: SettingsIcon,\n          testid: \"claims\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n          tabs: tabs,\n          value: selectedTab,\n          onChange: function onChange(tabName) {\n            return handleSelectTab(tabName);\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this), selectedTab === 'contractPolicyRef' && /*#__PURE__*/_jsxDEV(ClaimsComplexityContractPolicyRef, {\n          setIsSelectedTabDirty: setIsSelectedTabDirty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 37,\n          columnNumber: 51\n        }, this), selectedTab === 'insured' && /*#__PURE__*/_jsxDEV(ClaimsComplexityInsured, {\n          setIsSelectedTabDirty: setIsSelectedTabDirty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 38,\n          columnNumber: 41\n        }, this), selectedTab === 'division' && /*#__PURE__*/_jsxDEV(ClaimsComplexityDivision, {\n          setIsSelectedTabDirty: setIsSelectedTabDirty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 42\n        }, this), selectedTab === 'complexityValues' && /*#__PURE__*/_jsxDEV(ClaimsComplexityValues, {\n          setIsSelectedTabDirty: setIsSelectedTabDirty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 50\n        }, this), selectedTab === 'referralValues' && /*#__PURE__*/_jsxDEV(ClaimsComplexityReferralValues, {\n          setIsSelectedTabDirty: setIsSelectedTabDirty\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 48\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = ClaimsComplexityRulesView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsComplexityRulesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimsComplexityRules/ClaimsComplexityRules.view.js"],"names":["React","PropTypes","Layout","Tabs","SectionHeader","Translate","ClaimsComplexityContractPolicyRef","ClaimsComplexityDivision","ClaimsComplexityInsured","ClaimsComplexityReferralValues","ClaimsComplexityValues","utils","Box","SettingsIcon","ClaimsComplexityRulesView","propTypes","tabs","array","isRequired","selectedTab","string","handleSelectTab","func","setIsSelectedTabDirty","t","tabName"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,MAAT,EAAiBC,IAAjB,EAAuBC,aAAvB,EAAsCC,SAAtC,QAAuD,YAAvD;AACA,SACEC,iCADF,EAEEC,wBAFF,EAGEC,uBAHF,EAIEC,8BAJF,EAKEC,sBALF,QAMO,SANP;AAOA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,GAAT,QAAoB,mBAApB;AACA,OAAOC,YAAP,MAAyB,6BAAzB;;AAEAC,yBAAyB,CAACC,SAA1B,GAAsC;AACpCC,EAAAA,IAAI,EAAEf,SAAS,CAACgB,KAAV,CAAgBC,UADc;AAEpCC,EAAAA,WAAW,EAAElB,SAAS,CAACmB,MAAV,CAAiBF,UAFM;AAGpCG,EAAAA,eAAe,EAAEpB,SAAS,CAACqB,IAHS;AAIpCC,EAAAA,qBAAqB,EAAEtB,SAAS,CAACqB,IAAV,CAAeJ;AAJF,CAAtC;AAOA,OAAO,SAASJ,yBAAT,OAAkG;AAAA,MAA7DE,IAA6D,QAA7DA,IAA6D;AAAA,MAAvDG,WAAuD,QAAvDA,WAAuD;AAAA,MAA1CE,eAA0C,QAA1CA,eAA0C;AAAA,MAAzBE,qBAAyB,QAAzBA,qBAAyB;AACvG,sBACE,QAAC,GAAD;AAAA,2BACE,QAAC,MAAD;AAAQ,MAAA,MAAM,EAAC,2BAAf;AAAA,6BACE,QAAC,MAAD;AAAQ,QAAA,IAAI,MAAZ;AAAA,gCACE,QAAC,aAAD;AACE,UAAA,KAAK,eAAE,QAAC,SAAD;AAAW,YAAA,KAAK,EAAEZ,KAAK,CAACS,MAAN,CAAaI,CAAb,CAAe,+CAAf;AAAlB;AAAA;AAAA;AAAA;AAAA,kBADT;AAEE,UAAA,IAAI,EAAEX,YAFR;AAGE,UAAA,MAAM,EAAC;AAHT;AAAA;AAAA;AAAA;AAAA,gBADF,eAME,QAAC,IAAD;AAAM,UAAA,IAAI,EAAEG,IAAZ;AAAkB,UAAA,KAAK,EAAEG,WAAzB;AAAsC,UAAA,QAAQ,EAAE,kBAACM,OAAD;AAAA,mBAAaJ,eAAe,CAACI,OAAD,CAA5B;AAAA;AAAhD;AAAA;AAAA;AAAA;AAAA,gBANF,EAOGN,WAAW,KAAK,mBAAhB,iBAAuC,QAAC,iCAAD;AAAmC,UAAA,qBAAqB,EAAEI;AAA1D;AAAA;AAAA;AAAA;AAAA,gBAP1C,EAQGJ,WAAW,KAAK,SAAhB,iBAA6B,QAAC,uBAAD;AAAyB,UAAA,qBAAqB,EAAEI;AAAhD;AAAA;AAAA;AAAA;AAAA,gBARhC,EASGJ,WAAW,KAAK,UAAhB,iBAA8B,QAAC,wBAAD;AAA0B,UAAA,qBAAqB,EAAEI;AAAjD;AAAA;AAAA;AAAA;AAAA,gBATjC,EAUGJ,WAAW,KAAK,kBAAhB,iBAAsC,QAAC,sBAAD;AAAwB,UAAA,qBAAqB,EAAEI;AAA/C;AAAA;AAAA;AAAA;AAAA,gBAVzC,EAWGJ,WAAW,KAAK,gBAAhB,iBAAoC,QAAC,8BAAD;AAAgC,UAAA,qBAAqB,EAAEI;AAAvD;AAAA;AAAA;AAAA;AAAA,gBAXvC;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;KApBeT,yB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { Layout, Tabs, SectionHeader, Translate } from 'components';\r\nimport {\r\n  ClaimsComplexityContractPolicyRef,\r\n  ClaimsComplexityDivision,\r\n  ClaimsComplexityInsured,\r\n  ClaimsComplexityReferralValues,\r\n  ClaimsComplexityValues,\r\n} from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n//mui\r\nimport { Box } from '@material-ui/core';\r\nimport SettingsIcon from '@material-ui/icons/Settings';\r\n\r\nClaimsComplexityRulesView.propTypes = {\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  handleSelectTab: PropTypes.func,\r\n  setIsSelectedTabDirty: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsComplexityRulesView({ tabs, selectedTab, handleSelectTab, setIsSelectedTabDirty }) {\r\n  return (\r\n    <Box>\r\n      <Layout testid=\"complexityRulesManagement\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={<Translate label={utils.string.t('claims.complexityRulesManagementDetails.title')} />}\r\n            icon={SettingsIcon}\r\n            testid=\"claims\"\r\n          />\r\n          <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n          {selectedTab === 'contractPolicyRef' && <ClaimsComplexityContractPolicyRef setIsSelectedTabDirty={setIsSelectedTabDirty} />}\r\n          {selectedTab === 'insured' && <ClaimsComplexityInsured setIsSelectedTabDirty={setIsSelectedTabDirty} />}\r\n          {selectedTab === 'division' && <ClaimsComplexityDivision setIsSelectedTabDirty={setIsSelectedTabDirty} />}\r\n          {selectedTab === 'complexityValues' && <ClaimsComplexityValues setIsSelectedTabDirty={setIsSelectedTabDirty} />}\r\n          {selectedTab === 'referralValues' && <ClaimsComplexityReferralValues setIsSelectedTabDirty={setIsSelectedTabDirty} />}\r\n        </Layout>\r\n      </Layout>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}