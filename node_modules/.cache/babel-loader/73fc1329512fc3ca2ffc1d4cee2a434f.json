{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossActions = function getLossActions(lossData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossActions'\n    };\n    var endpointParams = {\n      claimId: lossData.claimID || ''\n    };\n    var lossDetailId = (lossData === null || lossData === void 0 ? void 0 : lossData.lossDetailId) || (lossData === null || lossData === void 0 ? void 0 : lossData.lossDetailID);\n    dispatch(getLossActionsRequest());\n    dispatch(addLoader('getLossActions'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/loss/\".concat(lossDetailId, \"/action\"),\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      console.log('data ', data);\n      dispatch(getLossActionsSuccess(data));\n      dispatch(removeLoader('getLossActions'));\n      return data;\n    }).catch(function (err) {\n      console.log('error');\n      dispatch(getLossActionsFailure(err, defaultError));\n      dispatch(removeLoader('getLossActions'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getLossActionsRequest = function getLossActionsRequest(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getLossActionsSuccess = function getLossActionsSuccess(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossActionsFailure = function getLossActionsFailure(data) {\n  return {\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossActions.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossActions","lossData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","endpointParams","claimId","claimID","lossDetailId","lossDetailID","getLossActionsRequest","api","get","token","accessToken","claimService","path","params","then","response","handleResponse","data","console","log","getLossActionsSuccess","catch","err","getLossActionsFailure","handleUnauthorized","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,cAAc,GAAG,SAAjBA,cAAiB,CAACC,QAAD;AAAA,SAAc,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAClE;AADkE,oBAETA,QAAQ,EAFC;AAAA,QAElDC,IAFkD,aAE1DC,IAF0D,CAElDD,IAFkD;AAAA,QAExBE,QAFwB,aAE1CC,MAF0C,CAEhCC,IAFgC,CAExBF,QAFwB;;AAIlE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,cAAc,GAAG;AACrBC,MAAAA,OAAO,EAAEX,QAAQ,CAACY,OAAT,IAAoB;AADR,KAAvB;AAIA,QAAMC,YAAY,GAAG,CAAAb,QAAQ,SAAR,IAAAA,QAAQ,WAAR,YAAAA,QAAQ,CAAEa,YAAV,MAA0Bb,QAA1B,aAA0BA,QAA1B,uBAA0BA,QAAQ,CAAEc,YAApC,CAArB;AAEAb,IAAAA,QAAQ,CAACc,qBAAqB,EAAtB,CAAR;AACAd,IAAAA,QAAQ,CAACL,SAAS,CAAC,gBAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACkB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEf,IAAI,CAACgB,WADT;AAEHd,MAAAA,QAAQ,EAAEA,QAAQ,CAACe,YAFhB;AAGHC,MAAAA,IAAI,0BAAmBR,YAAnB,YAHD;AAIHS,MAAAA,MAAM,EAAEZ;AAJL,KADA,EAOJa,IAPI,CAOC,UAACC,QAAD;AAAA,aAAc1B,KAAK,CAACkB,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD,EAAU;AACdC,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ,EAAqBF,IAArB;AACAzB,MAAAA,QAAQ,CAAC4B,qBAAqB,CAACH,IAAD,CAAtB,CAAR;AACAzB,MAAAA,QAAQ,CAACJ,YAAY,CAAC,gBAAD,CAAb,CAAR;AACA,aAAO6B,IAAP;AACD,KAbI,EAcJI,KAdI,CAcE,UAACC,GAAD,EAAS;AACdJ,MAAAA,OAAO,CAACC,GAAR,CAAY,OAAZ;AACA3B,MAAAA,QAAQ,CAAC+B,qBAAqB,CAACD,GAAD,EAAMvB,YAAN,CAAtB,CAAR;AACAP,MAAAA,QAAQ,CAACJ,YAAY,CAAC,gBAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACkB,GAAN,CAAUiB,kBAAV,CAA6BF,GAA7B,EAAkC9B,QAAlC,EAA4CN,UAA5C;AACA,aAAOoC,GAAP;AACD,KApBI,CAAP;AAqBD,GAtC6B;AAAA,CAAvB;AAwCP,OAAO,IAAMhB,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACW,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACH,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACN,IAAD,EAAU;AAC7C,SAAO;AACLQ,IAAAA,IAAI,EAAE,iCADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossActions = (lossData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getLossActions',\r\n  };\r\n\r\n  const endpointParams = {\r\n    claimId: lossData.claimID || '',\r\n  };\r\n\r\n  const lossDetailId = lossData?.lossDetailId || lossData?.lossDetailID;\r\n\r\n  dispatch(getLossActionsRequest());\r\n  dispatch(addLoader('getLossActions'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/loss/${lossDetailId}/action`,\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      console.log('data ', data);\r\n      dispatch(getLossActionsSuccess(data));\r\n      dispatch(removeLoader('getLossActions'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      console.log('error');\r\n      dispatch(getLossActionsFailure(err, defaultError));\r\n      dispatch(removeLoader('getLossActions'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getLossActionsRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossActionsFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_LOSS_ACTIONS_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}