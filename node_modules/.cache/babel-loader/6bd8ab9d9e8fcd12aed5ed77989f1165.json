{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskColumn\\\\AddRiskColumn.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types';\nimport { useFieldArray } from 'react-hook-form';\nimport classnames from 'classnames';\nimport omit from 'lodash/omit';\nimport mapValues from 'lodash/mapValues'; // app\n\nimport styles from './AddRiskColumn.styles';\nimport { Button, FormGrid, FormLegend } from 'components';\nimport { AddRiskFormField } from 'modules';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Divider, makeStyles } from '@material-ui/core';\nimport AddIcon from '@material-ui/icons/Add';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport isString from 'lodash/isString';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { createElement as _createElement } from \"react\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nAddRiskColumnView.propTypes = {\n  field: PropTypes.object.isRequired,\n  formProps: PropTypes.object.isRequired\n};\nexport function AddRiskColumnView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var field = _ref.field,\n      formProps = _ref.formProps;\n  var classes = makeStyles(styles, {\n    name: 'AddRiskColumn'\n  })();\n  var validFields = ['text', 'number', 'datepicker', 'select', 'autocomplete', 'radio', 'checkbox', 'toggle', 'hidden', 'spacer'];\n\n  var _useFieldArray = useFieldArray({\n    control: formProps.control,\n    name: field.name\n  }),\n      fields = _useFieldArray.fields,\n      append = _useFieldArray.append,\n      remove = _useFieldArray.remove;\n\n  var getEmptyObject = function getEmptyObject() {\n    return mapValues(omit(fields[0], ['id']), function () {\n      return '';\n    });\n  };\n\n  var appendHandler = function appendHandler() {\n    append(getEmptyObject());\n  };\n\n  var removeHandler = function removeHandler(idx) {\n    if (fields && fields.length === 1 && idx === 0) {\n      formProps.setValue(field.name, [getEmptyObject()]);\n    } else {\n      remove(idx);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [fields.map(function (item, index) {\n      return /*#__PURE__*/_jsxDEV(Fragment, {\n        children: [fields.length > 1 && index > 0 && /*#__PURE__*/_jsxDEV(Box, {\n          mt: 4.5,\n          mb: 3.5,\n          children: /*#__PURE__*/_jsxDEV(Divider, {\n            classes: {\n              root: classes.divider\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 15\n        }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 4,\n          children: field.arrayItemDef.map(function (def, idx) {\n            if (!validFields.includes(def.type)) return null;\n            var condition = utils.risk.getCondition(def, field.arrayItemDef);\n            var conditionValue = condition && formProps.watch(\"\".concat(field.name, \"[\").concat(index, \"].\").concat(condition.name));\n            var isValid = !condition || condition && utils.risk.isConditionValid(condition, conditionValue);\n            var hasLegend = isString(def.header);\n            var classesHighlight = classnames(_defineProperty({}, classes.highlight, condition)); // grid spacer\n\n            if (utils.risk.isGridSpacer(def)) {\n              return /*#__PURE__*/_createElement(FormGrid, _objectSpread(_objectSpread({\n                item: true,\n                xs: 12\n              }, def.gridSize), {}, {\n                nestedClasses: {\n                  root: classes.spacer\n                },\n                key: \"\".concat(field.name, \"-spacer-\").concat(idx),\n                \"data-testid\": \"spacer-\".concat(field.name, \"-\").concat(idx),\n                __self: _this,\n                __source: {\n                  fileName: _jsxFileName,\n                  lineNumber: 78,\n                  columnNumber: 21\n                }\n              }), /*#__PURE__*/_jsxDEV(\"span\", {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 86,\n                columnNumber: 23\n              }, _this));\n            }\n\n            return /*#__PURE__*/_jsxDEV(Fragment, {\n              children: [hasLegend && /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                nestedClasses: {\n                  root: classes.legend\n                },\n                children: /*#__PURE__*/_jsxDEV(FormLegend, {\n                  text: def.header\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 95,\n                  columnNumber: 25\n                }, _this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 94,\n                columnNumber: 23\n              }, _this), isValid && /*#__PURE__*/_jsxDEV(FormGrid, _objectSpread(_objectSpread({\n                item: true,\n                xs: 12\n              }, def.gridSize || {}), {}, {\n                children: /*#__PURE__*/_jsxDEV(\"div\", {\n                  className: classesHighlight,\n                  children: /*#__PURE__*/_jsxDEV(AddRiskFormField, {\n                    field: _objectSpread(_objectSpread({}, def), {}, {\n                      name: \"\".concat(field.name, \"[\").concat(index, \"].\").concat(def.name),\n                      defaultValue: item[def.name]\n                    }),\n                    formProps: formProps\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 101,\n                    columnNumber: 27\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 100,\n                  columnNumber: 25\n                }, _this)\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 99,\n                columnNumber: 23\n              }, _this)]\n            }, def.name, true, {\n              fileName: _jsxFileName,\n              lineNumber: 92,\n              columnNumber: 19\n            }, _this);\n          })\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 62,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          mt: 2,\n          mb: 4.5,\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            danger: true,\n            disabled: fields.length === 1,\n            icon: HighlightOffIcon,\n            variant: 'outlined',\n            size: \"small\",\n            text: utils.string.t('app.delete'),\n            onClick: function onClick() {\n              return removeHandler(index);\n            },\n            \"data-testid\": \"btn-delete\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, _this)]\n      }, item.id, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 11\n      }, _this);\n    }), /*#__PURE__*/_jsxDEV(Box, {\n      mt: 2,\n      mb: 5,\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        color: \"secondary\",\n        size: \"small\",\n        icon: AddIcon,\n        text: utils.string.t('risks.add', {\n          name: field.name\n        }),\n        onClick: appendHandler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 134,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 133,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(AddRiskColumnView, \"ZUdpHmDLsHW29pYmVu7vZWnnIQg=\", false, function () {\n  return [useFieldArray];\n});\n\n_c = AddRiskColumnView;\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskColumnView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskColumn/AddRiskColumn.view.js"],"names":["React","Fragment","PropTypes","useFieldArray","classnames","omit","mapValues","styles","Button","FormGrid","FormLegend","AddRiskFormField","utils","Box","Divider","makeStyles","AddIcon","HighlightOffIcon","isString","AddRiskColumnView","propTypes","field","object","isRequired","formProps","classes","name","validFields","control","fields","append","remove","getEmptyObject","appendHandler","removeHandler","idx","length","setValue","map","item","index","root","divider","arrayItemDef","def","includes","type","condition","risk","getCondition","conditionValue","watch","isValid","isConditionValid","hasLegend","header","classesHighlight","highlight","isGridSpacer","gridSize","spacer","legend","defaultValue","string","t","id"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useFieldArray } from 'react-hook-form';\r\nimport classnames from 'classnames';\r\nimport omit from 'lodash/omit';\r\nimport mapValues from 'lodash/mapValues';\r\n\r\n// app\r\nimport styles from './AddRiskColumn.styles';\r\nimport { Button, FormGrid, FormLegend } from 'components';\r\nimport { AddRiskFormField } from 'modules';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Box, Divider, makeStyles } from '@material-ui/core';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport isString from 'lodash/isString';\r\n\r\nAddRiskColumnView.propTypes = {\r\n  field: PropTypes.object.isRequired,\r\n  formProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function AddRiskColumnView({ field, formProps }) {\r\n  const classes = makeStyles(styles, { name: 'AddRiskColumn' })();\r\n\r\n  const validFields = ['text', 'number', 'datepicker', 'select', 'autocomplete', 'radio', 'checkbox', 'toggle', 'hidden', 'spacer'];\r\n\r\n  const { fields, append, remove } = useFieldArray({\r\n    control: formProps.control,\r\n    name: field.name,\r\n  });\r\n\r\n  const getEmptyObject = () => {\r\n    return mapValues(omit(fields[0], ['id']), () => '');\r\n  };\r\n\r\n  const appendHandler = () => {\r\n    append(getEmptyObject());\r\n  };\r\n\r\n  const removeHandler = (idx) => {\r\n    if (fields && fields.length === 1 && idx === 0) {\r\n      formProps.setValue(field.name, [getEmptyObject()]);\r\n    } else {\r\n      remove(idx);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {fields.map((item, index) => {\r\n        return (\r\n          <Fragment key={item.id}>\r\n            {fields.length > 1 && index > 0 && (\r\n              <Box mt={4.5} mb={3.5}>\r\n                <Divider classes={{ root: classes.divider }} />\r\n              </Box>\r\n            )}\r\n\r\n            <FormGrid container spacing={4}>\r\n              {field.arrayItemDef.map((def, idx) => {\r\n                if (!validFields.includes(def.type)) return null;\r\n\r\n                const condition = utils.risk.getCondition(def, field.arrayItemDef);\r\n                const conditionValue = condition && formProps.watch(`${field.name}[${index}].${condition.name}`);\r\n                const isValid = !condition || (condition && utils.risk.isConditionValid(condition, conditionValue));\r\n                const hasLegend = isString(def.header);\r\n\r\n                const classesHighlight = classnames({\r\n                  [classes.highlight]: condition,\r\n                });\r\n\r\n                // grid spacer\r\n                if (utils.risk.isGridSpacer(def)) {\r\n                  return (\r\n                    <FormGrid\r\n                      item\r\n                      xs={12}\r\n                      {...def.gridSize}\r\n                      nestedClasses={{ root: classes.spacer }}\r\n                      key={`${field.name}-spacer-${idx}`}\r\n                      data-testid={`spacer-${field.name}-${idx}`}\r\n                    >\r\n                      <span />\r\n                    </FormGrid>\r\n                  );\r\n                }\r\n\r\n                return (\r\n                  <Fragment key={def.name}>\r\n                    {hasLegend && (\r\n                      <FormGrid item xs={12} nestedClasses={{ root: classes.legend }}>\r\n                        <FormLegend text={def.header} />\r\n                      </FormGrid>\r\n                    )}\r\n                    {isValid && (\r\n                      <FormGrid item xs={12} {...(def.gridSize || {})}>\r\n                        <div className={classesHighlight}>\r\n                          <AddRiskFormField\r\n                            field={{\r\n                              ...def,\r\n                              name: `${field.name}[${index}].${def.name}`,\r\n                              defaultValue: item[def.name],\r\n                            }}\r\n                            formProps={formProps}\r\n                          />\r\n                        </div>\r\n                      </FormGrid>\r\n                    )}\r\n                  </Fragment>\r\n                );\r\n              })}\r\n            </FormGrid>\r\n\r\n            <Box mt={2} mb={4.5}>\r\n              <Button\r\n                danger\r\n                disabled={fields.length === 1}\r\n                icon={HighlightOffIcon}\r\n                variant={'outlined'}\r\n                size=\"small\"\r\n                text={utils.string.t('app.delete')}\r\n                onClick={() => removeHandler(index)}\r\n                data-testid=\"btn-delete\"\r\n              />\r\n            </Box>\r\n          </Fragment>\r\n        );\r\n      })}\r\n\r\n      <Box mt={2} mb={5}>\r\n        <Button\r\n          color=\"secondary\"\r\n          size=\"small\"\r\n          icon={AddIcon}\r\n          text={utils.string.t('risks.add', { name: field.name })}\r\n          onClick={appendHandler}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}