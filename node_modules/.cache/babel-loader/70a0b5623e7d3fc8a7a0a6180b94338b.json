{"ast":null,"code":"import \"core-js/modules/es.object.keys\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\schemas\\\\productAdmin.js\";\nimport React from 'react';\nimport * as Yup from 'yup';\nimport difference from 'lodash/difference'; // app\n\nimport { Translate } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { ROLE_BROKER, ROLE_COVERHOLDER, ROLE_COBROKER, ROLE_UNDERWRITER, ROLE_ADMIN } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\n\nvar checkDependencies = function checkDependencies(dependencies, options) {\n  return difference(dependencies, Object.keys(options)).length === 0;\n};\n\nvar permissionOptions = [{\n  value: ROLE_BROKER,\n  label: 'Broker',\n  fixed: false\n}, {\n  value: ROLE_COVERHOLDER,\n  label: 'Coverholder',\n  fixed: false\n}, {\n  value: ROLE_COBROKER,\n  label: 'Co-Broker',\n  fixed: false\n}, {\n  value: ROLE_UNDERWRITER,\n  label: 'Underwriter',\n  fixed: true\n}, {\n  value: ROLE_ADMIN,\n  label: 'Admin',\n  fixed: false\n}];\nvar fixedOptions = permissionOptions.filter(function (option) {\n  return option.fixed;\n});\nvar schema = {\n  insureds: {\n    key: 'insureds',\n    dependenciesLoaded: function dependenciesLoaded(options) {\n      return checkDependencies(['countries'], options);\n    },\n    items: null,\n    fields: [{\n      id: 'name',\n      name: 'name',\n      type: 'text',\n      cellProps: {\n        nowrap: true\n      },\n      value: '',\n      label: 'products.admin.insureds.tableCols.name',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.insureds.tableCols.name', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 5\n      }\n    }, {\n      id: 'clientId',\n      name: 'clientId',\n      transform: 'option',\n      type: 'autocompletemui',\n      value: null,\n      options: [],\n      optionKey: 'value',\n      optionLabel: 'label',\n      cellProps: {\n        nowrap: true\n      },\n      defaultValue: '',\n      optionsDynamicKey: 'clients',\n      label: 'products.admin.facilities.tableCols.clientId',\n      gridSize: {\n        xs: 12,\n        sm: 4\n      }\n    }, {\n      id: 'partyType',\n      name: 'partyType',\n      label: 'products.admin.insureds.tableCols.partyType',\n      value: [],\n      type: 'autocompletemui',\n      options: [{\n        value: 'BUSINESS',\n        label: 'products.admin.insureds.typeOptions.business'\n      }, {\n        value: 'INDIVIDUAL',\n        label: 'products.admin.insureds.typeOptions.individual'\n      }],\n      validation: Yup.object().nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.insureds.tableCols.partyType', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 3\n      }\n    }, {\n      id: 'genderType',\n      name: 'genderType',\n      label: 'products.admin.insureds.gender',\n      value: [],\n      type: 'autocompletemui',\n      options: [{\n        value: 'MALE',\n        label: 'products.admin.insureds.genderOptions.male'\n      }, {\n        value: 'FEMALE',\n        label: 'products.admin.insureds.genderOptions.female'\n      }, {\n        value: 'UNKNOWN',\n        label: 'products.admin.insureds.genderOptions.unknown'\n      }, {\n        value: 'NONE',\n        label: 'products.admin.insureds.genderOptions.none'\n      }],\n      conditional: {\n        conditional: true,\n        conditionalField: 'partyType',\n        conditionValue: 'INDIVIDUAL'\n      },\n      gridSize: {\n        xs: 12,\n        md: 5\n      }\n    }, {\n      id: 'dateOfBirth',\n      name: 'dateOfBirth',\n      transform: 'date',\n      label: 'products.admin.insureds.dateOfBirth',\n      conditional: {\n        conditional: true,\n        conditionalField: 'partyType',\n        conditionValue: 'INDIVIDUAL'\n      },\n      type: 'datepicker',\n      value: null,\n      gridSize: {\n        xs: 12,\n        md: 3\n      }\n    }, {\n      id: 'street',\n      name: 'street',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.street',\n      gridSize: {\n        xs: 12,\n        md: 5\n      }\n    }, {\n      id: 'city',\n      name: 'city',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.city',\n      gridSize: {\n        xs: 12,\n        sm: 8,\n        md: 4\n      }\n    }, {\n      id: 'zipCode',\n      name: 'zipCode',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.zipCode',\n      gridSize: {\n        xs: 12,\n        sm: 4,\n        md: 3\n      }\n    }, {\n      id: 'county',\n      name: 'county',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.county',\n      gridSize: {\n        xs: 12,\n        sm: 4\n      }\n    }, {\n      id: 'state',\n      name: 'state',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.state',\n      gridSize: {\n        xs: 12,\n        sm: 3\n      }\n    }, {\n      id: 'country',\n      name: 'country',\n      type: 'autocompletemui',\n      value: [],\n      options: [],\n      optionsDynamicKey: 'countries',\n      label: 'products.admin.insureds.tableCols.country',\n      validation: Yup.object().nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.insureds.tableCols.country', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 5\n      }\n    }, {\n      id: 'distanceToCoast',\n      name: 'distanceToCoast',\n      type: 'hidden',\n      value: ''\n    }]\n  },\n  clients: {\n    key: 'clients',\n    dependenciesLoaded: function dependenciesLoaded(options) {\n      return checkDependencies(['countries'], options);\n    },\n    items: null,\n    fields: [{\n      id: 'name',\n      name: 'name',\n      type: 'text',\n      cellProps: {\n        nowrap: true\n      },\n      value: '',\n      label: 'products.admin.clients.tableCols.name',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.clients.tableCols.name', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 12\n      }\n    }, {\n      id: 'street',\n      name: 'street',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.street',\n      gridSize: {\n        xs: 12,\n        md: 4\n      }\n    }, {\n      id: 'city',\n      name: 'city',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.city',\n      gridSize: {\n        xs: 12,\n        sm: 4,\n        md: 4\n      }\n    }, {\n      id: 'zipCode',\n      name: 'zipCode',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.zipCode',\n      gridSize: {\n        xs: 12,\n        sm: 4,\n        md: 4\n      }\n    }, {\n      id: 'county',\n      name: 'county',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.county',\n      gridSize: {\n        xs: 12,\n        sm: 4\n      }\n    }, {\n      id: 'state',\n      name: 'state',\n      type: 'text',\n      value: '',\n      label: 'products.admin.insureds.tableCols.state',\n      gridSize: {\n        xs: 12,\n        sm: 4\n      }\n    }, {\n      id: 'country',\n      name: 'country',\n      type: 'autocompletemui',\n      value: null,\n      options: [],\n      optionKey: 'value',\n      optionLabel: 'label',\n      optionsDynamicKey: 'countries',\n      label: 'products.admin.insureds.tableCols.country',\n      validation: Yup.object().nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.insureds.tableCols.country', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 4\n      }\n    }]\n  },\n  // start\n  carriers: {\n    key: 'carriers',\n    dependenciesLoaded: function dependenciesLoaded() {\n      return true;\n    },\n    items: null,\n    fields: [{\n      id: 'name',\n      name: 'name',\n      type: 'text',\n      cellProps: {\n        nowrap: true\n      },\n      value: '',\n      label: 'products.admin.carriers.tableCols.name',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.carriers.tableCols.name', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 6\n      }\n    }]\n  },\n  facilities: {\n    key: 'facilities',\n    dependenciesLoaded: function dependenciesLoaded(options) {\n      return checkDependencies(['products', 'carriers'], options);\n    },\n    items: null,\n    fields: [{\n      id: 'name',\n      name: 'name',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.name',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.name', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      }\n    }, {\n      id: 'brokerCode',\n      name: 'brokerCode',\n      cellProps: {\n        nowrap: true\n      },\n      type: 'text',\n      label: 'products.admin.facilities.tableCols.brokerCode',\n      defaultValue: '',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.brokerCode', 'required');\n      }),\n      gridSize: {\n        xs: 5,\n        sm: 4,\n        md: 2\n      }\n    }, {\n      id: 'carrierId',\n      name: 'carrierId',\n      transform: 'option',\n      type: 'select',\n      defaultValue: '',\n      options: [],\n      optionsDynamicKey: 'carriers',\n      label: 'products.admin.facilities.tableCols.carrierId',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.carrierId', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 6,\n        md: 3\n      }\n    }, {\n      id: 'productCode',\n      name: 'productCode',\n      transform: 'option',\n      type: 'select',\n      defaultValue: '',\n      options: [],\n      optionKey: 'value',\n      optionLabel: 'label',\n      optionsDynamicKey: 'products',\n      label: 'products.admin.facilities.tableCols.productCode',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.productCode', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        sm: 6,\n        md: 3\n      }\n    }, {\n      id: 'capacity',\n      name: 'capacity',\n      transform: 'currency',\n      defaultValue: '',\n      type: 'number',\n      label: 'products.admin.facilities.tableCols.capacity',\n      validation: Yup.number().currency( /*#__PURE__*/_jsxDEV(Translate, {\n        label: \"validation.number.format\",\n        options: config.ui.format.currency\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 328,\n        columnNumber: 21\n      }, this)).nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.capacity', 'required');\n      }).transform(function (value) {\n        return Number.isNaN(value) ? null : value;\n      }),\n      gridSize: {\n        xs: 7,\n        sm: 8,\n        md: 4\n      }\n    }, {\n      id: 'quoteValidDays',\n      name: 'quoteValidDays',\n      cellProps: {\n        nowrap: true\n      },\n      type: 'number',\n      label: 'products.admin.facilities.tableCols.quoteValidDays',\n      defaultValue: '',\n      validation: Yup.number().nullable().min(0).transform(function (value) {\n        return Number.isNaN(value) ? null : value;\n      }).required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.quoteValidDays', 'required');\n      }),\n      gridSize: {\n        xs: 5,\n        sm: 4,\n        md: 2\n      }\n    }, {\n      id: 'liveFrom',\n      name: 'liveFrom',\n      transform: 'date',\n      cellProps: {\n        nowrap: true\n      },\n      type: 'datepicker',\n      label: 'products.admin.facilities.tableCols.liveFrom',\n      icon: 'TodayIcon',\n      defaultValue: null,\n      muiComponentProps: {\n        fullWidth: true\n      },\n      validation: Yup.date().nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.liveFrom', 'required');\n      }),\n      gridSize: {\n        xs: 6,\n        md: 3\n      }\n    }, {\n      id: 'liveTo',\n      name: 'liveTo',\n      transform: 'date',\n      defaultValue: null,\n      cellProps: {\n        nowrap: true\n      },\n      type: 'datepicker',\n      label: 'products.admin.facilities.tableCols.liveTo',\n      muiComponentProps: {\n        fullWidth: true\n      },\n      validation: Yup.date().nullable().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.liveTo', 'required');\n      }),\n      gridSize: {\n        xs: 6,\n        md: 3\n      }\n    }, {\n      id: 'broker',\n      name: 'broker',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.broker',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.broker', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      },\n      displayColumn: false\n    }, {\n      id: 'coverholderName',\n      name: 'coverholderName',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.coverholderName',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.coverholderName', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      },\n      displayColumn: false\n    }, {\n      id: 'coverholderPin',\n      name: 'coverholderPin',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.coverholderPin',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.coverholderPin', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      },\n      displayColumn: false\n    }, {\n      id: 'umr',\n      name: 'umr',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.umr',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.umr', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      },\n      displayColumn: false\n    }, {\n      id: 'agreementNumber',\n      name: 'agreementNumber',\n      type: 'text',\n      defaultValue: '',\n      cellProps: {\n        nowrap: true\n      },\n      label: 'products.admin.facilities.tableCols.agreementNumber',\n      validation: Yup.string().required(function () {\n        return utils.form.getValidationLabel('products.admin.facilities.tableCols.agreementNumber', 'required');\n      }),\n      gridSize: {\n        xs: 12,\n        md: 4\n      },\n      displayColumn: false\n    }, {\n      id: 'pricerCode',\n      name: 'pricerCode',\n      transform: 'option',\n      type: 'select',\n      cellProps: {\n        nowrap: true\n      },\n      defaultValue: '',\n      options: [],\n      optionsDynamicKey: 'pricerModule',\n      label: 'products.admin.facilities.tableCols.pricerModule',\n      gridSize: {\n        xs: 12,\n        sm: 6\n      },\n      displayColumn: false\n    }, {\n      id: 'permissionToBindGroups',\n      name: 'permissionToBindGroups',\n      label: 'products.admin.facilities.tableCols.permissionToBind',\n      value: fixedOptions,\n      type: 'autocompletemui',\n      options: permissionOptions,\n      gridSize: {\n        xs: 12,\n        sm: 6\n      },\n      innerComponentProps: {\n        isMulti: true,\n        allowEmpty: true,\n        maxMenuHeight: 120\n      },\n      muiComponentProps: {\n        multiple: true,\n        variant: 'outlined',\n        filterSelectedOptions: true\n      }\n    }, {\n      id: 'notifiedUsers',\n      name: 'notifiedUsers',\n      type: 'autocompletemui',\n      value: [],\n      options: [],\n      optionsDynamicKey: 'notifiedUsers',\n      optionKey: 'email',\n      optionLabel: 'name',\n      label: 'products.admin.facilities.tableCols.notifiedUsers',\n      gridSize: {\n        xs: 12,\n        sm: 6\n      },\n      innerComponentProps: {\n        isMulti: true,\n        allowEmpty: true,\n        maxMenuHeight: 120\n      },\n      muiComponentProps: {\n        multiple: true,\n        filterSelectedOptions: true\n      }\n    }, {\n      id: 'permissionToDismissIssuesGroups',\n      name: 'permissionToDismissIssuesGroups',\n      label: 'products.admin.facilities.tableCols.permissionToDismiss',\n      value: fixedOptions,\n      type: 'autocompletemui',\n      options: permissionOptions,\n      gridSize: {\n        xs: 12,\n        sm: 6\n      },\n      innerComponentProps: {\n        isMulti: true,\n        allowEmpty: true,\n        maxMenuHeight: 120\n      },\n      muiComponentProps: {\n        multiple: true,\n        variant: 'outlined',\n        filterSelectedOptions: true\n      }\n    }, {\n      id: 'preBind',\n      name: 'preBind',\n      type: 'checkbox',\n      value: false,\n      label: 'products.admin.facilities.tableCols.preBindInfo',\n      gridSize: {\n        xs: 6,\n        sm: 6\n      }\n    }]\n  }\n};\nvar schemasProductAdmin = {\n  getSchema: function getSchema(key) {\n    return schema[key] ? schema[key] : {};\n  }\n};\nexport default schemasProductAdmin;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/schemas/productAdmin.js"],"names":["React","Yup","difference","Translate","utils","config","ROLE_BROKER","ROLE_COVERHOLDER","ROLE_COBROKER","ROLE_UNDERWRITER","ROLE_ADMIN","checkDependencies","dependencies","options","Object","keys","length","permissionOptions","value","label","fixed","fixedOptions","filter","option","schema","insureds","key","dependenciesLoaded","items","fields","id","name","type","cellProps","nowrap","validation","string","required","form","getValidationLabel","gridSize","xs","sm","transform","optionKey","optionLabel","defaultValue","optionsDynamicKey","object","nullable","conditional","conditionalField","conditionValue","md","clients","carriers","facilities","number","currency","ui","format","Number","isNaN","min","icon","muiComponentProps","fullWidth","date","displayColumn","innerComponentProps","isMulti","allowEmpty","maxMenuHeight","multiple","variant","filterSelectedOptions","schemasProductAdmin","getSchema"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport * as Yup from 'yup';\r\nimport difference from 'lodash/difference';\r\n\r\n// app\r\nimport { Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { ROLE_BROKER, ROLE_COVERHOLDER, ROLE_COBROKER, ROLE_UNDERWRITER, ROLE_ADMIN } from 'consts';\r\n\r\nconst checkDependencies = (dependencies, options) => difference(dependencies, Object.keys(options)).length === 0;\r\n\r\nconst permissionOptions = [\r\n  { value: ROLE_BROKER, label: 'Broker', fixed: false },\r\n  { value: ROLE_COVERHOLDER, label: 'Coverholder', fixed: false },\r\n  { value: ROLE_COBROKER, label: 'Co-Broker', fixed: false },\r\n  { value: ROLE_UNDERWRITER, label: 'Underwriter', fixed: true },\r\n  { value: ROLE_ADMIN, label: 'Admin', fixed: false },\r\n];\r\nconst fixedOptions = permissionOptions.filter((option) => option.fixed);\r\n\r\nconst schema = {\r\n  insureds: {\r\n    key: 'insureds',\r\n    dependenciesLoaded: (options) => checkDependencies(['countries'], options),\r\n    items: null,\r\n    fields: [\r\n      {\r\n        id: 'name',\r\n        name: 'name',\r\n        type: 'text',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.name',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.insureds.tableCols.name', 'required')),\r\n        gridSize: { xs: 12, sm: 5 },\r\n      },\r\n      {\r\n        id: 'clientId',\r\n        name: 'clientId',\r\n        transform: 'option',\r\n        type: 'autocompletemui',\r\n        value: null,\r\n        options: [],\r\n        optionKey: 'value',\r\n        optionLabel: 'label',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        defaultValue: '',\r\n        optionsDynamicKey: 'clients',\r\n        label: 'products.admin.facilities.tableCols.clientId',\r\n        gridSize: { xs: 12, sm: 4 },\r\n      },\r\n\r\n      {\r\n        id: 'partyType',\r\n        name: 'partyType',\r\n        label: 'products.admin.insureds.tableCols.partyType',\r\n        value: [],\r\n        type: 'autocompletemui',\r\n        options: [\r\n          { value: 'BUSINESS', label: 'products.admin.insureds.typeOptions.business' },\r\n          { value: 'INDIVIDUAL', label: 'products.admin.insureds.typeOptions.individual' },\r\n        ],\r\n        validation: Yup.object()\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.insureds.tableCols.partyType', 'required')),\r\n        gridSize: { xs: 12, sm: 3 },\r\n      },\r\n      {\r\n        id: 'genderType',\r\n        name: 'genderType',\r\n        label: 'products.admin.insureds.gender',\r\n        value: [],\r\n        type: 'autocompletemui',\r\n        options: [\r\n          { value: 'MALE', label: 'products.admin.insureds.genderOptions.male' },\r\n          { value: 'FEMALE', label: 'products.admin.insureds.genderOptions.female' },\r\n          { value: 'UNKNOWN', label: 'products.admin.insureds.genderOptions.unknown' },\r\n          { value: 'NONE', label: 'products.admin.insureds.genderOptions.none' },\r\n        ],\r\n        conditional: {\r\n          conditional: true,\r\n          conditionalField: 'partyType',\r\n          conditionValue: 'INDIVIDUAL',\r\n        },\r\n        gridSize: { xs: 12, md: 5 },\r\n      },\r\n      {\r\n        id: 'dateOfBirth',\r\n        name: 'dateOfBirth',\r\n        transform: 'date',\r\n        label: 'products.admin.insureds.dateOfBirth',\r\n        conditional: {\r\n          conditional: true,\r\n          conditionalField: 'partyType',\r\n          conditionValue: 'INDIVIDUAL',\r\n        },\r\n        type: 'datepicker',\r\n        value: null,\r\n        gridSize: { xs: 12, md: 3 },\r\n      },\r\n      {\r\n        id: 'street',\r\n        name: 'street',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.street',\r\n        gridSize: { xs: 12, md: 5 },\r\n      },\r\n      {\r\n        id: 'city',\r\n        name: 'city',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.city',\r\n        gridSize: { xs: 12, sm: 8, md: 4 },\r\n      },\r\n      {\r\n        id: 'zipCode',\r\n        name: 'zipCode',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.zipCode',\r\n        gridSize: { xs: 12, sm: 4, md: 3 },\r\n      },\r\n      {\r\n        id: 'county',\r\n        name: 'county',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.county',\r\n        gridSize: { xs: 12, sm: 4 },\r\n      },\r\n      {\r\n        id: 'state',\r\n        name: 'state',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.state',\r\n        gridSize: { xs: 12, sm: 3 },\r\n      },\r\n      {\r\n        id: 'country',\r\n        name: 'country',\r\n        type: 'autocompletemui',\r\n        value: [],\r\n        options: [],\r\n        optionsDynamicKey: 'countries',\r\n        label: 'products.admin.insureds.tableCols.country',\r\n        validation: Yup.object()\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.insureds.tableCols.country', 'required')),\r\n        gridSize: { xs: 12, sm: 5 },\r\n      },\r\n      {\r\n        id: 'distanceToCoast',\r\n        name: 'distanceToCoast',\r\n        type: 'hidden',\r\n        value: '',\r\n      },\r\n    ],\r\n  },\r\n  clients: {\r\n    key: 'clients',\r\n    dependenciesLoaded: (options) => checkDependencies(['countries'], options),\r\n    items: null,\r\n    fields: [\r\n      {\r\n        id: 'name',\r\n        name: 'name',\r\n        type: 'text',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        value: '',\r\n        label: 'products.admin.clients.tableCols.name',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.clients.tableCols.name', 'required')),\r\n        gridSize: { xs: 12, sm: 12 },\r\n      },\r\n      {\r\n        id: 'street',\r\n        name: 'street',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.street',\r\n        gridSize: { xs: 12, md: 4 },\r\n      },\r\n      {\r\n        id: 'city',\r\n        name: 'city',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.city',\r\n        gridSize: { xs: 12, sm: 4, md: 4 },\r\n      },\r\n      {\r\n        id: 'zipCode',\r\n        name: 'zipCode',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.zipCode',\r\n        gridSize: { xs: 12, sm: 4, md: 4 },\r\n      },\r\n      {\r\n        id: 'county',\r\n        name: 'county',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.county',\r\n        gridSize: { xs: 12, sm: 4 },\r\n      },\r\n      {\r\n        id: 'state',\r\n        name: 'state',\r\n        type: 'text',\r\n        value: '',\r\n        label: 'products.admin.insureds.tableCols.state',\r\n        gridSize: { xs: 12, sm: 4 },\r\n      },\r\n      {\r\n        id: 'country',\r\n        name: 'country',\r\n        type: 'autocompletemui',\r\n        value: null,\r\n        options: [],\r\n        optionKey: 'value',\r\n        optionLabel: 'label',\r\n        optionsDynamicKey: 'countries',\r\n        label: 'products.admin.insureds.tableCols.country',\r\n        validation: Yup.object()\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.insureds.tableCols.country', 'required')),\r\n        gridSize: { xs: 12, sm: 4 },\r\n      },\r\n    ],\r\n  },\r\n  // start\r\n  carriers: {\r\n    key: 'carriers',\r\n    dependenciesLoaded: () => true,\r\n    items: null,\r\n    fields: [\r\n      {\r\n        id: 'name',\r\n        name: 'name',\r\n        type: 'text',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        value: '',\r\n        label: 'products.admin.carriers.tableCols.name',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.carriers.tableCols.name', 'required')),\r\n        gridSize: { xs: 12, sm: 6 },\r\n      },\r\n    ],\r\n  },\r\n  facilities: {\r\n    key: 'facilities',\r\n    dependenciesLoaded: (options) => checkDependencies(['products', 'carriers'], options),\r\n    items: null,\r\n    fields: [\r\n      {\r\n        id: 'name',\r\n        name: 'name',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.name',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.name', 'required')),\r\n        gridSize: { xs: 12, md: 4 },\r\n      },\r\n      {\r\n        id: 'brokerCode',\r\n        name: 'brokerCode',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        type: 'text',\r\n        label: 'products.admin.facilities.tableCols.brokerCode',\r\n        defaultValue: '',\r\n        validation: Yup.string().required(() =>\r\n          utils.form.getValidationLabel('products.admin.facilities.tableCols.brokerCode', 'required')\r\n        ),\r\n        gridSize: { xs: 5, sm: 4, md: 2 },\r\n      },\r\n      {\r\n        id: 'carrierId',\r\n        name: 'carrierId',\r\n        transform: 'option',\r\n        type: 'select',\r\n        defaultValue: '',\r\n        options: [],\r\n        optionsDynamicKey: 'carriers',\r\n        label: 'products.admin.facilities.tableCols.carrierId',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.carrierId', 'required')),\r\n        gridSize: { xs: 12, sm: 6, md: 3 },\r\n      },\r\n      {\r\n        id: 'productCode',\r\n        name: 'productCode',\r\n        transform: 'option',\r\n        type: 'select',\r\n        defaultValue: '',\r\n        options: [],\r\n        optionKey: 'value',\r\n        optionLabel: 'label',\r\n        optionsDynamicKey: 'products',\r\n        label: 'products.admin.facilities.tableCols.productCode',\r\n        validation: Yup.string().required(() =>\r\n          utils.form.getValidationLabel('products.admin.facilities.tableCols.productCode', 'required')\r\n        ),\r\n        gridSize: { xs: 12, sm: 6, md: 3 },\r\n      },\r\n      {\r\n        id: 'capacity',\r\n        name: 'capacity',\r\n        transform: 'currency',\r\n        defaultValue: '',\r\n        type: 'number',\r\n        label: 'products.admin.facilities.tableCols.capacity',\r\n        validation: Yup.number()\r\n          .currency(<Translate label=\"validation.number.format\" options={config.ui.format.currency} />)\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.capacity', 'required'))\r\n          .transform((value) => (Number.isNaN(value) ? null : value)),\r\n        gridSize: { xs: 7, sm: 8, md: 4 },\r\n      },\r\n      {\r\n        id: 'quoteValidDays',\r\n        name: 'quoteValidDays',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        type: 'number',\r\n        label: 'products.admin.facilities.tableCols.quoteValidDays',\r\n        defaultValue: '',\r\n        validation: Yup.number()\r\n          .nullable()\r\n          .min(0)\r\n          .transform((value) => (Number.isNaN(value) ? null : value))\r\n          .required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.quoteValidDays', 'required')),\r\n        gridSize: { xs: 5, sm: 4, md: 2 },\r\n      },\r\n      {\r\n        id: 'liveFrom',\r\n        name: 'liveFrom',\r\n        transform: 'date',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        type: 'datepicker',\r\n        label: 'products.admin.facilities.tableCols.liveFrom',\r\n        icon: 'TodayIcon',\r\n        defaultValue: null,\r\n        muiComponentProps: {\r\n          fullWidth: true,\r\n        },\r\n        validation: Yup.date()\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.liveFrom', 'required')),\r\n        gridSize: { xs: 6, md: 3 },\r\n      },\r\n      {\r\n        id: 'liveTo',\r\n        name: 'liveTo',\r\n        transform: 'date',\r\n        defaultValue: null,\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        type: 'datepicker',\r\n        label: 'products.admin.facilities.tableCols.liveTo',\r\n        muiComponentProps: {\r\n          fullWidth: true,\r\n        },\r\n        validation: Yup.date()\r\n          .nullable()\r\n          .required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.liveTo', 'required')),\r\n        gridSize: { xs: 6, md: 3 },\r\n      },\r\n      {\r\n        id: 'broker',\r\n        name: 'broker',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.broker',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.broker', 'required')),\r\n        gridSize: { xs: 12, md: 4 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'coverholderName',\r\n        name: 'coverholderName',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.coverholderName',\r\n        validation: Yup.string().required(() =>\r\n          utils.form.getValidationLabel('products.admin.facilities.tableCols.coverholderName', 'required')\r\n        ),\r\n        gridSize: { xs: 12, md: 4 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'coverholderPin',\r\n        name: 'coverholderPin',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.coverholderPin',\r\n        validation: Yup.string().required(() =>\r\n          utils.form.getValidationLabel('products.admin.facilities.tableCols.coverholderPin', 'required')\r\n        ),\r\n        gridSize: { xs: 12, md: 4 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'umr',\r\n        name: 'umr',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.umr',\r\n        validation: Yup.string().required(() => utils.form.getValidationLabel('products.admin.facilities.tableCols.umr', 'required')),\r\n        gridSize: { xs: 12, md: 4 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'agreementNumber',\r\n        name: 'agreementNumber',\r\n        type: 'text',\r\n        defaultValue: '',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        label: 'products.admin.facilities.tableCols.agreementNumber',\r\n        validation: Yup.string().required(() =>\r\n          utils.form.getValidationLabel('products.admin.facilities.tableCols.agreementNumber', 'required')\r\n        ),\r\n        gridSize: { xs: 12, md: 4 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'pricerCode',\r\n        name: 'pricerCode',\r\n        transform: 'option',\r\n        type: 'select',\r\n        cellProps: {\r\n          nowrap: true,\r\n        },\r\n        defaultValue: '',\r\n        options: [],\r\n        optionsDynamicKey: 'pricerModule',\r\n        label: 'products.admin.facilities.tableCols.pricerModule',\r\n        gridSize: { xs: 12, sm: 6 },\r\n        displayColumn: false,\r\n      },\r\n      {\r\n        id: 'permissionToBindGroups',\r\n        name: 'permissionToBindGroups',\r\n        label: 'products.admin.facilities.tableCols.permissionToBind',\r\n        value: fixedOptions,\r\n        type: 'autocompletemui',\r\n        options: permissionOptions,\r\n        gridSize: { xs: 12, sm: 6 },\r\n        innerComponentProps: {\r\n          isMulti: true,\r\n          allowEmpty: true,\r\n          maxMenuHeight: 120,\r\n        },\r\n\r\n        muiComponentProps: {\r\n          multiple: true,\r\n          variant: 'outlined',\r\n          filterSelectedOptions: true,\r\n        },\r\n      },\r\n      {\r\n        id: 'notifiedUsers',\r\n        name: 'notifiedUsers',\r\n        type: 'autocompletemui',\r\n        value: [],\r\n        options: [],\r\n        optionsDynamicKey: 'notifiedUsers',\r\n        optionKey: 'email',\r\n        optionLabel: 'name',\r\n        label: 'products.admin.facilities.tableCols.notifiedUsers',\r\n        gridSize: { xs: 12, sm: 6 },\r\n        innerComponentProps: {\r\n          isMulti: true,\r\n          allowEmpty: true,\r\n          maxMenuHeight: 120,\r\n        },\r\n\r\n        muiComponentProps: {\r\n          multiple: true,\r\n          filterSelectedOptions: true,\r\n        },\r\n      },\r\n      {\r\n        id: 'permissionToDismissIssuesGroups',\r\n        name: 'permissionToDismissIssuesGroups',\r\n        label: 'products.admin.facilities.tableCols.permissionToDismiss',\r\n        value: fixedOptions,\r\n        type: 'autocompletemui',\r\n        options: permissionOptions,\r\n        gridSize: { xs: 12, sm: 6 },\r\n        innerComponentProps: {\r\n          isMulti: true,\r\n          allowEmpty: true,\r\n          maxMenuHeight: 120,\r\n        },\r\n\r\n        muiComponentProps: {\r\n          multiple: true,\r\n          variant: 'outlined',\r\n          filterSelectedOptions: true,\r\n        },\r\n      },\r\n      {\r\n        id: 'preBind',\r\n        name: 'preBind',\r\n        type: 'checkbox',\r\n        value: false,\r\n        label: 'products.admin.facilities.tableCols.preBindInfo',\r\n        gridSize: { xs: 6, sm: 6 },\r\n      },\r\n    ],\r\n  },\r\n};\r\n\r\nconst schemasProductAdmin = {\r\n  getSchema: (key) => (schema[key] ? schema[key] : {}),\r\n};\r\n\r\nexport default schemasProductAdmin;\r\n"]},"metadata":{},"sourceType":"module"}