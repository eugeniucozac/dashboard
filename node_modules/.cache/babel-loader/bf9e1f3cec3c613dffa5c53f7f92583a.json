{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTabTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport { Empty, Overflow, TableHead, Pagination, TableCell, Skeleton, FormLabel, FormSwitch } from 'components';\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { useSort } from 'hooks';\nimport * as utils from 'utils';\nimport { useSelector } from 'react-redux';\nimport { selectClaimsTabData } from 'stores';\nimport styles from './ClaimsTabTable.styles'; // mui\n\nimport { makeStyles, Table, TableBody, Box, TableRow, Grid } from '@material-ui/core';\nimport { useMedia } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsTabTableView.prototype = {\n  claims: PropTypes.array.isRequired,\n  claimsSelected: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.shape({\n      handleChangePage: PropTypes.func.isRequired,\n      handleChangeRowsPerPage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  handlers: PropTypes.shape({\n    clickClaim: PropTypes.func.isRequired,\n    selectClaim: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function ClaimsTabTableView(_ref) {\n  _s();\n\n  var _claimsTabData$tableD,\n      _this = this;\n\n  var claims = _ref.claims,\n      claimsSelected = _ref.claimsSelected,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      handlers = _ref.handlers,\n      viewFields = _ref.viewFields,\n      control = _ref.control;\n\n  var _useSort = useSort(colsArr, sortObj, handlers.sort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var hasNotSearchClaims = !claims;\n  var hasClaims = utils.generic.isValidArray(claims, true);\n  var claimsTabData = useSelector(selectClaimsTabData);\n  var isClaimsLoading = claimsTabData === null || claimsTabData === void 0 ? void 0 : (_claimsTabData$tableD = claimsTabData.tableDetails) === null || _claimsTabData$tableD === void 0 ? void 0 : _claimsTabData$tableD.isloadingTable;\n  var media = useMedia();\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTabTable'\n  })({\n    isMobile: media.mobile\n  });\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-tab-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 65,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          \"data-testid\": \"claims-list-body\",\n          children: [isClaimsLoading && /*#__PURE__*/_jsxDEV(TableRow, {\n            children: /*#__PURE__*/_jsxDEV(TableCell, {\n              colSpan: cols.length,\n              children: /*#__PURE__*/_jsxDEV(Skeleton, {\n                height: 40,\n                animation: \"wave\",\n                displayNumber: 10\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 69,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 68,\n            columnNumber: 15\n          }, this), hasClaims && !isClaimsLoading && claims.map(function (claim) {\n            return /*#__PURE__*/_jsxDEV(ClaimsTabTableRow, {\n              claim: claim,\n              isSelected: Boolean(claimsSelected.map(function (c) {\n                return c.processID;\n              }).includes(claim.processID)),\n              columnProps: columnProps,\n              handlers: {\n                clickClaim: handlers.clickClaim,\n                selectClaim: handlers.selectClaim\n              }\n            }, claims === null || claims === void 0 ? void 0 : claims.processID, false, {\n              fileName: _jsxFileName,\n              lineNumber: 78,\n              columnNumber: 19\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 64,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 63,\n      columnNumber: 7\n    }, this), hasNotSearchClaims ? /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.searchLossAndClaims'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 94,\n        columnNumber: 75\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 9\n    }, this) : hasClaims ? /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      className: classes.bottomContainer,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        className: classes.multiselectContainer,\n        children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n          label: utils.string.t('claims.claimsTab.multiSelect'),\n          align: \"left\",\n          nestedClasses: {\n            root: classes.viewLabel\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 98,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(FormSwitch, _objectSpread({}, utils.form.getFieldProps(viewFields, 'multiSelect', control)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 99,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 97,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Pagination, {\n        page: get(pagination, 'obj.page'),\n        count: get(pagination, 'obj.rowsTotal'),\n        rowsPerPage: get(pagination, 'obj.rowsPerPage'),\n        onChangePage: get(pagination, 'handlers.handleChangePage'),\n        onChangeRowsPerPage: get(pagination, 'handlers.handleChangeRowsPerPage')\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 9\n    }, this) : !isClaimsLoading && /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 88\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 110,\n      columnNumber: 29\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 62,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsTabTableView, \"hikvpz0C45/2RisV9f6JDyHdZgU=\", false, function () {\n  return [useSort, useSelector, useMedia];\n});\n\n_c = ClaimsTabTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTabTable.view.js"],"names":["React","PropTypes","get","Empty","Overflow","TableHead","Pagination","TableCell","Skeleton","FormLabel","FormSwitch","ClaimsTabTableRow","useSort","utils","useSelector","selectClaimsTabData","styles","makeStyles","Table","TableBody","Box","TableRow","Grid","useMedia","ClaimsTabTableView","prototype","claims","array","isRequired","claimsSelected","cols","columnProps","func","sort","object","pagination","shape","obj","handlers","handleChangePage","handleChangeRowsPerPage","clickClaim","selectClaim","colsArr","sortObj","viewFields","control","hasNotSearchClaims","hasClaims","generic","isValidArray","claimsTabData","isClaimsLoading","tableDetails","isloadingTable","media","classes","name","isMobile","mobile","length","map","claim","Boolean","c","processID","includes","string","t","bottomContainer","multiselectContainer","root","viewLabel","form","getFieldProps"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { Empty, Overflow, TableHead, Pagination, TableCell, Skeleton, FormLabel, FormSwitch } from 'components';\r\nimport { ClaimsTabTableRow } from './ClaimsTabTableRow';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport { useSelector } from 'react-redux';\r\nimport { selectClaimsTabData } from 'stores';\r\nimport styles from './ClaimsTabTable.styles';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableBody, Box, TableRow, Grid } from '@material-ui/core';\r\nimport { useMedia } from 'hooks';\r\n\r\nClaimsTabTableView.prototype = {\r\n  claims: PropTypes.array.isRequired,\r\n  claimsSelected: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.shape({\r\n      handleChangePage: PropTypes.func.isRequired,\r\n      handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  handlers: PropTypes.shape({\r\n    clickClaim: PropTypes.func.isRequired,\r\n    selectClaim: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function ClaimsTabTableView({\r\n  claims,\r\n  claimsSelected,\r\n  cols: colsArr,\r\n  columnProps,\r\n  sort: sortObj,\r\n  pagination,\r\n  handlers,\r\n  viewFields,\r\n  control,\r\n}) {\r\n  const { cols, sort } = useSort(colsArr, sortObj, handlers.sort);\r\n\r\n  const hasNotSearchClaims = !claims;\r\n  const hasClaims = utils.generic.isValidArray(claims, true);\r\n\r\n  const claimsTabData = useSelector(selectClaimsTabData);\r\n  const isClaimsLoading = claimsTabData?.tableDetails?.isloadingTable;\r\n\r\n  const media = useMedia();\r\n  const classes = makeStyles(styles, { name: 'ClaimsTabTable' })({ isMobile: media.mobile });\r\n\r\n  return (\r\n    <Box data-testid=\"claims-tab-table\">\r\n      <Overflow>\r\n        <Table size=\"small\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody data-testid=\"claims-list-body\">\r\n            {isClaimsLoading && (\r\n              <TableRow>\r\n                <TableCell colSpan={cols.length}>\r\n                  <Skeleton height={40} animation=\"wave\" displayNumber={10} />\r\n                </TableCell>\r\n              </TableRow>\r\n            )}\r\n            {hasClaims &&\r\n              !isClaimsLoading &&\r\n              claims.map((claim) => {\r\n                return (\r\n                  <ClaimsTabTableRow\r\n                    key={claims?.processID}\r\n                    claim={claim}\r\n                    isSelected={Boolean(claimsSelected.map((c) => c.processID).includes(claim.processID))}\r\n                    columnProps={columnProps}\r\n                    handlers={{\r\n                      clickClaim: handlers.clickClaim,\r\n                      selectClaim: handlers.selectClaim,\r\n                    }}\r\n                  />\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n      {hasNotSearchClaims ? (\r\n        <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n      ) : hasClaims ? (\r\n        <Grid container className={classes.bottomContainer}>\r\n          <Grid item className={classes.multiselectContainer}>\r\n            <FormLabel label={utils.string.t('claims.claimsTab.multiSelect')} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n            <FormSwitch {...utils.form.getFieldProps(viewFields, 'multiSelect', control)} />\r\n          </Grid>\r\n          <Pagination\r\n            page={get(pagination, 'obj.page')}\r\n            count={get(pagination, 'obj.rowsTotal')}\r\n            rowsPerPage={get(pagination, 'obj.rowsPerPage')}\r\n            onChangePage={get(pagination, 'handlers.handleChangePage')}\r\n            onChangeRowsPerPage={get(pagination, 'handlers.handleChangeRowsPerPage')}\r\n          />\r\n        </Grid>\r\n      ) : (\r\n        !isClaimsLoading && <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}