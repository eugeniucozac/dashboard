{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormText\\\\FormText.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { Controller } from 'react-hook-form';\nimport NumberFormat from 'react-number-format'; // app\n\nimport * as utils from 'utils';\nimport styles from './FormText.styles'; // mui\n\nimport { makeStyles, TextField } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nFormTextView.propTypes = {\n  control: PropTypes.object,\n  name: PropTypes.string.isRequired,\n  value: PropTypes.any,\n  defaultValue: PropTypes.any,\n  type: PropTypes.oneOf(['text', 'textarea', 'number', 'date', 'time']).isRequired,\n  label: PropTypes.string,\n  placeholder: PropTypes.string,\n  disabled: PropTypes.bool,\n  hint: PropTypes.string,\n  error: PropTypes.object,\n  compact: PropTypes.bool,\n  muiComponentProps: PropTypes.object,\n  onChange: PropTypes.func,\n  classes: PropTypes.object,\n  variant: PropTypes.string,\n  omitThousandSeparator: PropTypes.bool\n};\nFormTextView.defaultProps = {\n  type: 'text',\n  muiComponentProps: {},\n  compact: false,\n  omitThousandSeparator: false,\n  disabled: false\n};\nexport function FormTextView(_ref) {\n  var _muiComponentProps$In,\n      _muiComponentProps$In2,\n      _muiComponentProps$In3,\n      _muiComponentProps$In4,\n      _muiComponentProps$In5,\n      _muiComponentProps$In6,\n      _classnames2,\n      _this = this;\n\n  var control = _ref.control,\n      name = _ref.name,\n      value = _ref.value,\n      defaultValue = _ref.defaultValue,\n      type = _ref.type,\n      label = _ref.label,\n      placeholder = _ref.placeholder,\n      disabled = _ref.disabled,\n      hint = _ref.hint,\n      error = _ref.error,\n      compact = _ref.compact,\n      muiComponentProps = _ref.muiComponentProps,\n      onChange = _ref.onChange,\n      classes = _ref.classes,\n      variant = _ref.variant,\n      omitThousandSeparator = _ref.omitThousandSeparator;\n  var componentClasses = makeStyles(styles, {\n    name: 'FormText'\n  })();\n  var handleOnChange = onChange ? onChange : null;\n\n  var fieldClasses = _objectSpread(_objectSpread({}, muiComponentProps.classes), classes);\n\n  var isNumericField = type === 'number';\n  var thousandSeparator = omitThousandSeparator ? false : isNumericField;\n\n  var props = _objectSpread(_objectSpread({\n    type: isNumericField ? 'text' : type,\n    id: name,\n    name: name,\n    label: label,\n    placeholder: placeholder,\n    variant: variant || 'outlined'\n  }, muiComponentProps), {}, {\n    InputLabelProps: _objectSpread({\n      shrink: true\n    }, muiComponentProps.InputLabelProps),\n    margin: 'normal',\n    fullWidth: typeof muiComponentProps.fullWidth !== 'undefined' ? muiComponentProps.fullWidth : true,\n    classes: _objectSpread(_objectSpread({}, fieldClasses), {}, {\n      root: classnames(fieldClasses.root, componentClasses.root, _defineProperty({}, componentClasses.compact, compact))\n    }),\n    InputProps: _objectSpread(_objectSpread({}, muiComponentProps === null || muiComponentProps === void 0 ? void 0 : muiComponentProps.InputProps), {}, {\n      classes: _objectSpread(_objectSpread({}, muiComponentProps === null || muiComponentProps === void 0 ? void 0 : (_muiComponentProps$In = muiComponentProps.InputProps) === null || _muiComponentProps$In === void 0 ? void 0 : _muiComponentProps$In.classes), {}, {\n        root: classnames((_classnames2 = {}, _defineProperty(_classnames2, muiComponentProps === null || muiComponentProps === void 0 ? void 0 : (_muiComponentProps$In2 = muiComponentProps.InputProps) === null || _muiComponentProps$In2 === void 0 ? void 0 : (_muiComponentProps$In3 = _muiComponentProps$In2.classes) === null || _muiComponentProps$In3 === void 0 ? void 0 : _muiComponentProps$In3.root, Boolean(muiComponentProps === null || muiComponentProps === void 0 ? void 0 : (_muiComponentProps$In4 = muiComponentProps.InputProps) === null || _muiComponentProps$In4 === void 0 ? void 0 : (_muiComponentProps$In5 = _muiComponentProps$In4.classes) === null || _muiComponentProps$In5 === void 0 ? void 0 : _muiComponentProps$In5.root)), _defineProperty(_classnames2, componentClasses.readonly, Boolean(muiComponentProps === null || muiComponentProps === void 0 ? void 0 : (_muiComponentProps$In6 = muiComponentProps.InputProps) === null || _muiComponentProps$In6 === void 0 ? void 0 : _muiComponentProps$In6.readOnly)), _classnames2))\n      })\n    })\n  });\n\n  var helperTextProps = {\n    error: Boolean(error),\n    helperText: error && error.message || hint\n  };\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: control ? isNumericField ? /*#__PURE__*/_jsxDEV(Controller, {\n      render: function render(_ref2) {\n        var onChange = _ref2.onChange,\n            value = _ref2.value;\n        return /*#__PURE__*/_jsxDEV(NumberFormat, _objectSpread(_objectSpread(_objectSpread({\n          value: value,\n          customInput: TextField,\n          isNumericString: true\n        }, props), helperTextProps), {}, {\n          thousandSeparator: thousandSeparator,\n          onValueChange: function onValueChange(v) {\n            onChange(v.value);\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 112,\n          columnNumber: 17\n        }, _this);\n      },\n      onChange: function onChange(_ref3) {\n        var _ref4 = _slicedToArray(_ref3, 1),\n            data = _ref4[0];\n\n        return data.value;\n      },\n      control: control,\n      name: name,\n      value: value,\n      defaultValue: defaultValue\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Controller, _objectSpread({\n      render: function render(renderProps) {\n        return /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({\n          onChange: function onChange(e) {\n            if (utils.generic.isFunction(handleOnChange)) e.target.value = handleOnChange(e.target.value, control);\n            renderProps.onChange(e);\n          },\n          name: renderProps.name,\n          value: renderProps.value\n        }, props), helperTextProps), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 136,\n          columnNumber: 15\n        }, _this);\n      },\n      control: control,\n      name: name,\n      defaultValue: defaultValue\n    }, props), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 134,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(TextField, _objectSpread(_objectSpread({}, props), {}, {\n      value: value\n    }, helperTextProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 154,\n      columnNumber: 9\n    }, this)\n  }, void 0, false);\n}\n_c = FormTextView;\nFormTextView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"FormTextView\",\n  \"props\": {\n    \"type\": {\n      \"defaultValue\": {\n        \"value\": \"'text'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"enum\",\n        \"value\": [{\n          \"value\": \"'text'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'textarea'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'number'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'date'\",\n          \"computed\": false\n        }, {\n          \"value\": \"'time'\",\n          \"computed\": false\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"muiComponentProps\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compact\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"omitThousandSeparator\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"disabled\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"control\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"name\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"defaultValue\": {\n      \"type\": {\n        \"name\": \"any\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"label\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hint\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"error\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"classes\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormText\\\\FormText.view.js\"] = {\n    name: \"FormTextView\",\n    docgenInfo: FormTextView.__docgenInfo,\n    path: \"src\\\\components\\\\FormText\\\\FormText.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"FormTextView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormText/FormText.view.js"],"names":["React","PropTypes","classnames","Controller","NumberFormat","utils","styles","makeStyles","TextField","FormTextView","propTypes","control","object","name","string","isRequired","value","any","defaultValue","type","oneOf","label","placeholder","disabled","bool","hint","error","compact","muiComponentProps","onChange","func","classes","variant","omitThousandSeparator","defaultProps","componentClasses","handleOnChange","fieldClasses","isNumericField","thousandSeparator","props","id","InputLabelProps","shrink","margin","fullWidth","root","InputProps","Boolean","readonly","readOnly","helperTextProps","helperText","message","v","data","renderProps","e","generic","isFunction","target"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { Controller } from 'react-hook-form';\r\nimport NumberFormat from 'react-number-format';\r\n// app\r\nimport * as utils from 'utils';\r\nimport styles from './FormText.styles';\r\n\r\n// mui\r\nimport { makeStyles, TextField } from '@material-ui/core';\r\n\r\nFormTextView.propTypes = {\r\n  control: PropTypes.object,\r\n  name: PropTypes.string.isRequired,\r\n  value: PropTypes.any,\r\n  defaultValue: PropTypes.any,\r\n  type: PropTypes.oneOf(['text', 'textarea', 'number', 'date', 'time']).isRequired,\r\n  label: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  disabled: PropTypes.bool,\r\n  hint: PropTypes.string,\r\n  error: PropTypes.object,\r\n  compact: PropTypes.bool,\r\n  muiComponentProps: PropTypes.object,\r\n  onChange: PropTypes.func,\r\n  classes: PropTypes.object,\r\n  variant: PropTypes.string,\r\n  omitThousandSeparator: PropTypes.bool,\r\n};\r\n\r\nFormTextView.defaultProps = {\r\n  type: 'text',\r\n  muiComponentProps: {},\r\n  compact: false,\r\n  omitThousandSeparator: false,\r\n  disabled: false,\r\n};\r\n\r\nexport function FormTextView({\r\n  control,\r\n  name,\r\n  value,\r\n  defaultValue,\r\n  type,\r\n  label,\r\n  placeholder,\r\n  disabled,\r\n  hint,\r\n  error,\r\n  compact,\r\n  muiComponentProps,\r\n  onChange,\r\n  classes,\r\n  variant,\r\n  omitThousandSeparator,\r\n}) {\r\n  const componentClasses = makeStyles(styles, { name: 'FormText' })();\r\n\r\n  const handleOnChange = onChange ? onChange : null;\r\n\r\n  const fieldClasses = {\r\n    ...muiComponentProps.classes,\r\n    ...classes,\r\n  };\r\n  const isNumericField = type === 'number';\r\n\r\n  const thousandSeparator = omitThousandSeparator ? false : isNumericField;\r\n\r\n  const props = {\r\n    type: isNumericField ? 'text' : type,\r\n    id: name,\r\n    name,\r\n    label,\r\n    placeholder,\r\n    variant: variant || 'outlined',\r\n    ...muiComponentProps,\r\n    InputLabelProps: {\r\n      shrink: true,\r\n      ...muiComponentProps.InputLabelProps,\r\n    },\r\n    margin: 'normal',\r\n    fullWidth: typeof muiComponentProps.fullWidth !== 'undefined' ? muiComponentProps.fullWidth : true,\r\n    classes: {\r\n      ...fieldClasses,\r\n      root: classnames(fieldClasses.root, componentClasses.root, { [componentClasses.compact]: compact }),\r\n    },\r\n    InputProps: {\r\n      ...muiComponentProps?.InputProps,\r\n      classes: {\r\n        ...muiComponentProps?.InputProps?.classes,\r\n        root: classnames({\r\n          [muiComponentProps?.InputProps?.classes?.root]: Boolean(muiComponentProps?.InputProps?.classes?.root),\r\n          [componentClasses.readonly]: Boolean(muiComponentProps?.InputProps?.readOnly),\r\n        }),\r\n      },\r\n    },\r\n  };\r\n\r\n  const helperTextProps = {\r\n    error: Boolean(error),\r\n    helperText: (error && error.message) || hint,\r\n  };\r\n\r\n  return (\r\n    <>\r\n      {control ? (\r\n        isNumericField ? (\r\n          <Controller\r\n            render={({ onChange, value }) => {\r\n              return (\r\n                <NumberFormat\r\n                  value={value}\r\n                  customInput={TextField}\r\n                  isNumericString\r\n                  {...props}\r\n                  {...helperTextProps}\r\n                  thousandSeparator={thousandSeparator}\r\n                  onValueChange={(v) => {\r\n                    onChange(v.value);\r\n                  }}\r\n                />\r\n              );\r\n            }}\r\n            onChange={([data]) => {\r\n              return data.value;\r\n            }}\r\n            control={control}\r\n            name={name}\r\n            value={value}\r\n            defaultValue={defaultValue}\r\n          />\r\n        ) : (\r\n          <Controller\r\n            render={(renderProps) => (\r\n              <TextField\r\n                onChange={(e) => {\r\n                  if (utils.generic.isFunction(handleOnChange)) e.target.value = handleOnChange(e.target.value, control);\r\n                  renderProps.onChange(e);\r\n                }}\r\n                name={renderProps.name}\r\n                value={renderProps.value}\r\n                {...props}\r\n                {...helperTextProps}\r\n              />\r\n            )}\r\n            control={control}\r\n            name={name}\r\n            defaultValue={defaultValue}\r\n            {...props}\r\n          />\r\n        )\r\n      ) : (\r\n        <TextField {...props} value={value} {...helperTextProps} />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}