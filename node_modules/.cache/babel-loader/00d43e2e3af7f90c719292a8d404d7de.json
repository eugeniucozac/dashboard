{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsMovementType\\\\ClaimsMovementType.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './ClaimsMovementType.styles';\nimport { FormContainer, FormRadio, FormText, FormLabel, FormToggle } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsMovementTypeView.prototypes = {\n  fields: PropTypes.array,\n  underWritingGroups: PropTypes.object,\n  claimForm: PropTypes.object,\n  enforceValueSet: PropTypes.bool\n};\nexport function ClaimsMovementTypeView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      claimForm = _ref.claimForm,\n      underWritingGroups = _ref.underWritingGroups,\n      enforceValueSet = _ref.enforceValueSet;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsMovementType'\n  })();\n  var control = claimForm.control,\n      errors = claimForm.errors,\n      setValue = claimForm.setValue,\n      watch = claimForm.watch;\n  var order = watch('order');\n  useEffect(function () {\n    setValue('orderPercentage', underWritingGroups.percentageOfSelected);\n  }, [order, underWritingGroups.percentageOfSelected]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      display: \"flex\",\n      children: [/*#__PURE__*/_jsxDEV(Box, {\n        width: \"30%\",\n        maxWidth: \"200px\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.title,\n          children: utils.string.t('claims.typeOfSettlement.title')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 33,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormToggle, _objectSpread(_objectSpread({\n          control: control,\n          buttonGroupProps: {\n            exclusive: true\n          }\n        }, utils.form.getFieldProps(fields, 'movementType')), {}, {\n          enforceValueSet: enforceValueSet,\n          size: \"small\"\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 36,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 32,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        width: \"60%\",\n        ml: 4,\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"body2\",\n          className: classes.title,\n          children: utils.string.t('claims.typeOfSettlement.orderBasis')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 45,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          children: [/*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'order', control)), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              mr: 2,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t('claims.typeOfSettlement.order')\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              width: 60,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'orderPercentage', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 55,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 54,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 50,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 44,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 31,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 30,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsMovementTypeView, \"OD7bBpZva5O2jO+Puf00hKivP7c=\");\n\n_c = ClaimsMovementTypeView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsMovementTypeView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsMovementType/ClaimsMovementType.view.js"],"names":["React","useEffect","PropTypes","styles","FormContainer","FormRadio","FormText","FormLabel","FormToggle","utils","makeStyles","Typography","Box","ClaimsMovementTypeView","prototypes","fields","array","underWritingGroups","object","claimForm","enforceValueSet","bool","classes","name","control","errors","setValue","watch","order","percentageOfSelected","title","string","t","exclusive","form","getFieldProps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './ClaimsMovementType.styles';\r\nimport { FormContainer, FormRadio, FormText, FormLabel, FormToggle } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography, Box } from '@material-ui/core';\r\n\r\nClaimsMovementTypeView.prototypes = {\r\n  fields: PropTypes.array,\r\n  underWritingGroups: PropTypes.object,\r\n  claimForm: PropTypes.object,\r\n  enforceValueSet: PropTypes.bool,\r\n};\r\n\r\nexport function ClaimsMovementTypeView({ fields, claimForm, underWritingGroups, enforceValueSet }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsMovementType' })();\r\n\r\n  const { control, errors, setValue, watch } = claimForm;\r\n  const order = watch('order');\r\n\r\n  useEffect(() => {\r\n    setValue('orderPercentage', underWritingGroups.percentageOfSelected);\r\n  }, [order, underWritingGroups.percentageOfSelected]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <FormContainer>\r\n      <Box display=\"flex\">\r\n        <Box width=\"30%\" maxWidth=\"200px\">\r\n          <Typography variant=\"body2\" className={classes.title}>\r\n            {utils.string.t('claims.typeOfSettlement.title')}\r\n          </Typography>\r\n          <FormToggle\r\n            control={control}\r\n            buttonGroupProps={{ exclusive: true }}\r\n            {...utils.form.getFieldProps(fields, 'movementType')}\r\n            enforceValueSet={enforceValueSet}\r\n            size=\"small\"\r\n          />\r\n        </Box>\r\n        <Box width=\"60%\" ml={4}>\r\n          <Typography variant=\"body2\" className={classes.title}>\r\n            {utils.string.t('claims.typeOfSettlement.orderBasis')}\r\n          </Typography>\r\n          <Box>\r\n            <FormRadio {...utils.form.getFieldProps(fields, 'order', control)} />\r\n            <Box display=\"flex\" alignItems=\"center\">\r\n              <Box mr={2}>\r\n                <FormLabel label={utils.string.t('claims.typeOfSettlement.order')} />\r\n              </Box>\r\n              <Box width={60}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'orderPercentage', control, errors)} />\r\n              </Box>\r\n            </Box>\r\n          </Box>\r\n        </Box>\r\n      </Box>\r\n    </FormContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}