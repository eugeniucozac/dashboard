{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RegisterClaimCardInformation\\\\RegisterClaimCardInformation.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './RegisterClaimCardInformation.styles';\nimport * as utils from 'utils';\nimport { FormContainer, FormText, FormGrid, FormLabel, FormDate, FormAutocompleteMui, FormRadio, FormCheckbox, FormFields, FormLegend } from 'components';\nimport { selectClaimPolicyInsures, postEditClaimDetailsInformation, selectClaimsInformation, selectClaimData } from 'stores';\nimport { RegisterNewLossFixedBottomBar, ClaimsUploadViewSearchDocs } from 'modules';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nRegisterClaimCardInformationView.prototype = {\n  fields: PropTypes.array.isRequired,\n  referralValues: PropTypes.array.isRequired,\n  activeStep: PropTypes.number,\n  isAllStepsCompleted: PropTypes.bool,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  save: PropTypes.func.isRequired,\n  index: PropTypes.number\n};\nexport function RegisterClaimCardInformationView(_ref) {\n  _s();\n\n  var _claimInsurance$, _claimInsurance$2, _ref2;\n\n  var fields = _ref.fields,\n      referralValues = _ref.referralValues,\n      activeStep = _ref.activeStep,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleBack = _ref.handleBack,\n      handleSave = _ref.handleSave,\n      handleNext = _ref.handleNext,\n      index = _ref.index,\n      claimsDocsList = _ref.claimsDocsList;\n  var classes = makeStyles(styles, {\n    name: 'EnterClaimCardInformation'\n  })();\n  var dispatch = useDispatch();\n  var claimsInformation = useSelector(selectClaimsInformation);\n  var claimInsurance = useSelector(selectClaimPolicyInsures);\n  var claimRefId = useSelector(selectClaimData);\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var claimData = useSelector(selectClaimData);\n  var claimForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  }));\n  var control = claimForm.control,\n      errors = claimForm.errors,\n      setValue = claimForm.setValue,\n      handleSubmit = claimForm.handleSubmit;\n\n  var getRefValues = function getRefValues(referralValue) {\n    if (referralValue) {\n      var _referralValues$find;\n\n      var getReferralValue = (_referralValues$find = referralValues.find(function (item) {\n        return item.complexityRulesID === (referralValue === null || referralValue === void 0 ? void 0 : referralValue.complexityRulesID);\n      })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue;\n      var refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\n      var refResponseState = refValuesList.includes(getReferralValue);\n\n      if (refResponseState) {\n        setValue('rfiResponse', null);\n      }\n    } else if (referralValue === null || !referralValue) {\n      setValue('rfiResponse', null);\n    }\n  };\n\n  var handleSubmitForm = function handleSubmitForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleNext(index);\n    });\n  };\n\n  var handleSaveForm = function handleSaveForm(values) {\n    dispatch(postEditClaimDetailsInformation(values)).then(function (response) {\n      if (response) handleSave();\n    });\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Box, {\n      m: 3,\n      mb: 0,\n      \"data-testid\": \"register-claim-card-information\",\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        direction: \"row\",\n        justify: \"space-between\",\n        alignItems: \"center\",\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          className: classes.legendContainer,\n          children: /*#__PURE__*/_jsxDEV(FormLegend, {\n            text: utils.string.t('claims.claimInformation.title'),\n            nestedClasses: {\n              root: classes.formLegend\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 103,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n          label: \"\".concat((claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference) || (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimRef), \" | \").concat(claimInsurance === null || claimInsurance === void 0 ? void 0 : (_claimInsurance$ = claimInsurance[0]) === null || _claimInsurance$ === void 0 ? void 0 : _claimInsurance$.id, \" | \").concat(claimInsurance === null || claimInsurance === void 0 ? void 0 : (_claimInsurance$2 = claimInsurance[0]) === null || _claimInsurance$2 === void 0 ? void 0 : _claimInsurance$2.name),\n          align: \"left\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 102,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      \"data-testid\": \"form-claimsCardInformation\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 6,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.claimInformation.claimRef'),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 115,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (_ref2 = (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimReference) || (claimsInformation === null || claimsInformation === void 0 ? void 0 : claimsInformation.claimRef)) !== null && _ref2 !== void 0 ? _ref2 : utils.string.t('claims.claimInformation.autoGenerated'),\n                  nestedClasses: {\n                    root: classes.claimRef\n                  },\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 116,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 114,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 113,\n              columnNumber: 13\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fromDate', control)), {}, {\n                  error: errors.toDate,\n                  muiComponentProps: {\n                    fullWidth: true,\n                    classes: {\n                      root: classes.datepicker\n                    }\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 121,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 120,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'location', control)), {}, {\n                  error: errors.location\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread({}, utils.form.getFieldProps(fields, 'adjuster', control)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 140,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 139,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 138,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'complexity', control)), {}, {\n                  error: errors.complexity\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 145,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 144,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 143,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauClaim', control)), {}, {\n                  error: errors.bordereauClaim,\n                  nestedClasses: {\n                    root: classes.checkbox\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 112,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                      container: true,\n                      alignItems: \"center\",\n                      spacing: 2,\n                      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 7,\n                        children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedDate', control)), {}, {\n                          error: errors.claimReceivedDate\n                        }), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 161,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 160,\n                        columnNumber: 25\n                      }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                        item: true,\n                        xs: 5,\n                        nestedClasses: {\n                          root: classes.lossTime\n                        },\n                        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'claimReceivedTime', control)), void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 164,\n                          columnNumber: 27\n                        }, this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 163,\n                        columnNumber: 25\n                      }, this)]\n                    }, void 0, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 159,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 158,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 157,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'toDate', control)), {}, {\n                      error: errors.toDate,\n                      muiComponentProps: {\n                        fullWidth: true,\n                        classes: {\n                          root: classes.datepicker\n                        }\n                      }\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 171,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 170,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 169,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'fgunarrative', control)), {}, {\n                      error: errors.fgunarrative\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 185,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 184,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 183,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'beAdjuster', control)), {}, {\n                      error: errors.beAdjuster\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 190,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 189,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 188,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'rfiResponse', control)), {}, {\n                      error: errors.rfiResponse\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 195,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 194,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 193,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  container: true,\n                  children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                    item: true,\n                    xs: 12,\n                    children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'bordereauPeriod', control)), {}, {\n                      error: errors.bordereauPeriod\n                    }), void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 200,\n                      columnNumber: 23\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 199,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 198,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 156,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 155,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 154,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 4,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'claimantName', control)), {}, {\n                  error: errors.claimantName\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 209,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'lossQualifierID', control)), {}, {\n                  error: errors.lossQualifierID\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 213,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                  error: errors.priority\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 219,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 218,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 217,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'adjusterReference', control)), {}, {\n                  error: errors.adjusterReference\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 12,\n                children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'referral', control)), {}, {\n                  error: errors.referral,\n                  callback: function callback(e, data) {\n                    getRefValues(data);\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 228,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 227,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 111,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 110,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Box, {\n      className: classes.claimsContainer,\n      children: /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        spacing: 2,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n            refData: claimData,\n            refIdName: (claimData === null || claimData === void 0 ? void 0 : claimData.claimRef) ? 'claimRef' : 'claimReference' //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\n            ,\n            dmsContext: constants.DMS_CONTEXT_CLAIM,\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims,\n            isTabView: false,\n            isClaims: true,\n            isClaimsUploadDisabled: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef),\n            claimsUploadWarningMsg: !(claimRefId === null || claimRefId === void 0 ? void 0 : claimRefId.claimRef) ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : '',\n            claimsSearchDocumentsTxt: utils.string.t('claims.claimInformation.dms.searchDocuments'),\n            uploadDocumentsTitle: utils.string.t('claims.claimInformation.dms.uploadDocuments'),\n            docList: claimsDocsList\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 243,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 242,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 241,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 240,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n      activeStep: activeStep,\n      isAllStepsCompleted: isAllStepsCompleted,\n      handleBack: function handleBack() {\n        _handleBack(index);\n      },\n      handleSave: handleSubmit(handleSaveForm),\n      handleNextSubmit: handleSubmit(handleSubmitForm),\n      save: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 259,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(RegisterClaimCardInformationView, \"oXdGfbMJazVkLQsaEpLwlA4Ao+Q=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = RegisterClaimCardInformationView;\n\nvar _c;\n\n$RefreshReg$(_c, \"RegisterClaimCardInformationView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RegisterClaimCardInformation/RegisterClaimCardInformation.view.js"],"names":["React","useDispatch","useSelector","PropTypes","useForm","yupResolver","styles","utils","FormContainer","FormText","FormGrid","FormLabel","FormDate","FormAutocompleteMui","FormRadio","FormCheckbox","FormFields","FormLegend","selectClaimPolicyInsures","postEditClaimDetailsInformation","selectClaimsInformation","selectClaimData","RegisterNewLossFixedBottomBar","ClaimsUploadViewSearchDocs","constants","makeStyles","Box","Grid","RegisterClaimCardInformationView","prototype","fields","array","isRequired","referralValues","activeStep","number","isAllStepsCompleted","bool","handleBack","func","handleSave","handleNext","save","index","claimsDocsList","classes","name","dispatch","claimsInformation","claimInsurance","claimRefId","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","claimData","claimForm","resolver","control","errors","setValue","handleSubmit","getRefValues","referralValue","getReferralValue","find","item","complexityRulesID","complexityRulesValue","refValuesList","refResponseState","includes","handleSubmitForm","values","then","response","handleSaveForm","legendContainer","string","t","root","formLegend","claimReference","claimRef","id","getFieldProps","toDate","fullWidth","datepicker","location","complexity","bordereauClaim","checkbox","claimReceivedDate","lossTime","fgunarrative","beAdjuster","rfiResponse","bordereauPeriod","claimantName","lossQualifierID","priority","adjusterReference","referral","e","data","claimsContainer","DMS_CONTEXT_CLAIM","DMS_DOCUMENT_TYPE_SECTION_KEYS","type","claims"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './RegisterClaimCardInformation.styles';\r\nimport * as utils from 'utils';\r\nimport {\r\n  FormContainer,\r\n  FormText,\r\n  FormGrid,\r\n  FormLabel,\r\n  FormDate,\r\n  FormAutocompleteMui,\r\n  FormRadio,\r\n  FormCheckbox,\r\n  FormFields,\r\n  FormLegend,\r\n} from 'components';\r\nimport { \r\n  selectClaimPolicyInsures, \r\n  postEditClaimDetailsInformation,\r\n  selectClaimsInformation,\r\n  selectClaimData\r\n} from 'stores';\r\nimport { RegisterNewLossFixedBottomBar, ClaimsUploadViewSearchDocs } from 'modules';\r\nimport * as constants from 'consts';\r\n\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\nRegisterClaimCardInformationView.prototype = {\r\n  fields: PropTypes.array.isRequired,\r\n  referralValues: PropTypes.array.isRequired,\r\n  activeStep: PropTypes.number,\r\n  isAllStepsCompleted: PropTypes.bool,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  save: PropTypes.func.isRequired,\r\n  index: PropTypes.number,\r\n};\r\n\r\nexport function RegisterClaimCardInformationView({\r\n  fields,\r\n  referralValues,\r\n  activeStep, \r\n  isAllStepsCompleted,\r\n  handleBack,\r\n  handleSave,\r\n  handleNext,\r\n  index,\r\n  claimsDocsList\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'EnterClaimCardInformation' })();\r\n  const dispatch = useDispatch();\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n  const claimInsurance = useSelector(selectClaimPolicyInsures);\r\n  const claimRefId = useSelector(selectClaimData);\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const claimData = useSelector(selectClaimData);\r\n\r\n  const claimForm = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n  const { control, errors, setValue, handleSubmit } = claimForm;\r\n\r\n  const getRefValues = (referralValue) => {\r\n    if (referralValue) {\r\n      const getReferralValue = referralValues.find(\r\n        (item) => item.complexityRulesID === referralValue?.complexityRulesID\r\n      )?.complexityRulesValue;\r\n      const refValuesList = ['Referral Not Required', 'Referral Not Required: Assign to Myself', 'Unsure'];\r\n      const refResponseState = refValuesList.includes(getReferralValue);\r\n      if (refResponseState) {\r\n        setValue('rfiResponse', null);\r\n      }\r\n    } else if (referralValue === null || !referralValue) {\r\n      setValue('rfiResponse', null);\r\n    }\r\n  };\r\n\r\n  const handleSubmitForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleNext(index)\r\n    });\r\n  }\r\n\r\n  const handleSaveForm = (values) => {\r\n    dispatch(postEditClaimDetailsInformation(values)).then((response)=>{\r\n      if(response) handleSave()\r\n    });\r\n  }\r\n\r\n  return (\r\n    <>\r\n      <Box m={3} mb={0} data-testid=\"register-claim-card-information\">\r\n        <Grid container direction=\"row\" justify=\"space-between\" alignItems=\"center\">\r\n          <Grid item className={classes.legendContainer}>\r\n            <FormLegend text={utils.string.t('claims.claimInformation.title')} nestedClasses={{ root: classes.formLegend }} />\r\n          </Grid>\r\n          <FormLabel label={`${(claimsInformation?.claimReference || claimsInformation?.claimRef)} | ${claimInsurance?.[0]?.id} | ${claimInsurance?.[0]?.name}`} align=\"left\" />\r\n        </Grid>\r\n      </Box>\r\n      <FormContainer data-testid=\"form-claimsCardInformation\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container spacing={6}>\r\n            <FormGrid item xs={12} sm={4}>\r\n            <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormLabel label={utils.string.t('claims.claimInformation.claimRef')} align=\"left\" />\r\n                  <FormLabel label={(claimsInformation?.claimReference || claimsInformation?.claimRef) ?? utils.string.t('claims.claimInformation.autoGenerated')} nestedClasses={{ root: classes.claimRef }} align=\"left\" />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormDate\r\n                    {...utils.form.getFieldProps(fields, 'fromDate', control)}\r\n                    error={errors.toDate}\r\n                    muiComponentProps={{\r\n                      fullWidth: true,\r\n                      classes: {\r\n                          root: classes.datepicker,\r\n                        },\r\n                      }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'location', control)} error={errors.location} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormRadio {...utils.form.getFieldProps(fields, 'adjuster', control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'complexity', control)} error={errors.complexity} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormCheckbox {...utils.form.getFieldProps(fields, 'bordereauClaim', control)} error={errors.bordereauClaim} nestedClasses={{ root: classes.checkbox }}/>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormGrid container alignItems=\"center\" spacing={2}>\r\n                        <FormGrid item xs={7}>\r\n                          <FormDate {...utils.form.getFieldProps(fields, 'claimReceivedDate', control)} error={errors.claimReceivedDate} />\r\n                        </FormGrid>\r\n                        <FormGrid item xs={5} nestedClasses={{ root: classes.lossTime }}>\r\n                          <FormText {...utils.form.getFieldProps(fields, 'claimReceivedTime', control)} />\r\n                        </FormGrid>\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormDate\r\n                        {...utils.form.getFieldProps(fields, 'toDate', control)}\r\n                        error={errors.toDate}\r\n                        muiComponentProps={{\r\n                          fullWidth: true,\r\n                          classes: {\r\n                            root: classes.datepicker,\r\n                          },\r\n                        }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'fgunarrative', control)} error={errors.fgunarrative} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'beAdjuster', control)} error={errors.beAdjuster} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'rfiResponse', control)} error={errors.rfiResponse} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12}>\r\n                      <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'bordereauPeriod', control)} error={errors.bordereauPeriod} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={4}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'claimantName', control)} error={errors.claimantName} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'lossQualifierID', control)} error={errors.lossQualifierID} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'priority', control)} error={errors.priority} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'adjusterReference', control)} error={errors.adjusterReference} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container>\r\n                <FormGrid item xs={12}>\r\n                  <FormAutocompleteMui {...utils.form.getFieldProps(fields, 'referral', control)} error={errors.referral}\r\n                    callback={(e, data) => {\r\n                      getRefValues(data);\r\n                    }}\r\n                  />\r\n                </FormGrid>\r\n              </FormGrid>\r\n          </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n      </FormContainer>\r\n      <Box className={classes.claimsContainer}>\r\n        <Grid container spacing={2}>\r\n          <Grid item xs={12}>\r\n            <ClaimsUploadViewSearchDocs\r\n                refData={claimData}\r\n                refIdName={claimData?.claimRef ? 'claimRef' : 'claimReference'} //added temp condition as claimRef and claimReference keys are inconsistent, need to be fixed permanently later\r\n                dmsContext={constants.DMS_CONTEXT_CLAIM}\r\n                documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n                isTabView={false}\r\n                isClaims\r\n                isClaimsUploadDisabled={!claimRefId?.claimRef}\r\n                claimsUploadWarningMsg={!claimRefId?.claimRef ? utils.string.t('claims.claimInformation.dms.fileUploadWarning') : ''}\r\n                claimsSearchDocumentsTxt={utils.string.t('claims.claimInformation.dms.searchDocuments')}\r\n                uploadDocumentsTitle={utils.string.t('claims.claimInformation.dms.uploadDocuments')}\r\n                docList={claimsDocsList}\r\n              />       \r\n            </Grid>\r\n          </Grid>\r\n        </Box>\r\n        <RegisterNewLossFixedBottomBar\r\n          activeStep={activeStep}\r\n          isAllStepsCompleted={isAllStepsCompleted}\r\n          handleBack={() => { handleBack(index) }}\r\n          handleSave={handleSubmit(handleSaveForm)} \r\n          handleNextSubmit={handleSubmit(handleSubmitForm)} \r\n          save={true}\r\n      />\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}