{"ast":null,"code":"import \"core-js/modules/es.object.keys\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsSelectMatrix\\\\ClaimsSelectMatrix.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useForm } from 'react-hook-form';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './ClaimsSelectMatrix.styles';\nimport { Button, Overflow, TableHead, TableCell, FormCheckbox, FormContainer } from 'components';\nimport * as utils from 'utils'; //mui\n\nimport { makeStyles, Box, Grid, Table, TableContainer, TableBody, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsSelectMatrixView.prototypes = {\n  cols: PropTypes.array.isRequired,\n  rows: PropTypes.array.isRequired,\n  matrixRowKeys: PropTypes.array.isRequired,\n  matrixPrimaryKey: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n  resetMatrix: PropTypes.func.isRequired,\n  saveMatrix: PropTypes.func.isRequired,\n  matrixDataDiff: PropTypes.object.isRequired\n};\nexport function ClaimsSelectMatrixView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var cols = _ref.cols,\n      rows = _ref.rows,\n      matrixRowKeys = _ref.matrixRowKeys,\n      matrixPrimaryKey = _ref.matrixPrimaryKey,\n      fields = _ref.fields,\n      resetMatrix = _ref.resetMatrix,\n      saveMatrix = _ref.saveMatrix,\n      matrixDataDiff = _ref.matrixDataDiff;\n  var classes = makeStyles(styles, {\n    name: 'SelectMatrix'\n  })();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch,\n      handleSubmit = _useForm.handleSubmit,\n      reset = _useForm.reset;\n\n  useEffect(function () {\n    if (!Object.keys(matrixDataDiff).length) {\n      reset({\n        fields: fields\n      });\n    }\n  }, [matrixDataDiff]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"claims-complexity-table\",\n    className: classes.wrapper,\n    children: /*#__PURE__*/_jsxDEV(Grid, {\n      container: true,\n      children: [/*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(FormContainer, {\n          nestedClasses: {\n            root: classes.formContainer\n          },\n          children: /*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                stickyHeader: true,\n                \"aria-label\": \"select matrix table\",\n                \"data-testid\": \"select-matrix-table\",\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: cols,\n                  nestedClasses: {\n                    tableHead: classes.tableHead\n                  },\n                  \"data-testid\": \"select-matrix-thead\",\n                  compact: true,\n                  nowrap: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 43,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  \"data-testid\": \"select-matrix-tbody\",\n                  children: rows.map(function (eachRow, ind) {\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      hover: true,\n                      \"data-testid\": \"select-matrix-trow\",\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        compact: true,\n                        className: classes.tableFirstCell,\n                        \"data-testid\": \"select-matrix-tcell-division\",\n                        children: eachRow[matrixPrimaryKey]\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 54,\n                        columnNumber: 27\n                      }, _this), Object.entries(eachRow).slice(1).map(function (eachData, idx) {\n                        return /*#__PURE__*/_jsxDEV(TableCell, {\n                          compact: true,\n                          className: classes.tableCell,\n                          \"data-testid\": \"select-matrix-tcell-\".concat(ind + 1, \"-\").concat(idx + 1),\n                          children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields[ind], fields[ind][idx].name)), {}, {\n                            control: control,\n                            register: register,\n                            watch: watch\n                          }), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 67,\n                            columnNumber: 35\n                          }, _this)\n                        }, eachData[0], false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 61,\n                          columnNumber: 33\n                        }, _this);\n                      })]\n                    }, matrixRowKeys[ind], true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 53,\n                      columnNumber: 25\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 50,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 41,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 39,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 38,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        item: true,\n        xs: 12,\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          mt: 3,\n          display: \"flex\",\n          justifyContent: \"flex-end\",\n          children: [/*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.reset'),\n            onClick: resetMatrix,\n            size: \"medium\",\n            nestedClasses: {\n              btn: classes.actionButton\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 87,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.save'),\n            onClick: handleSubmit(saveMatrix),\n            size: \"medium\",\n            nestedClasses: {\n              btn: classes.actionButton\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 88,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 86,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 37,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 36,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsSelectMatrixView, \"0L6vCAW0bAvvagwekZkVvW4gb2g=\", false, function () {\n  return [useForm];\n});\n\n_c = ClaimsSelectMatrixView;\nClaimsSelectMatrixView.displayName = \"ClaimsSelectMatrixView\";\nClaimsSelectMatrixView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ClaimsSelectMatrixView\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ClaimsSelectMatrix\\\\ClaimsSelectMatrix.view.js\"] = {\n    name: \"ClaimsSelectMatrixView\",\n    docgenInfo: ClaimsSelectMatrixView.__docgenInfo,\n    path: \"src\\\\modules\\\\ClaimsSelectMatrix\\\\ClaimsSelectMatrix.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsSelectMatrixView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsSelectMatrix/ClaimsSelectMatrix.view.js"],"names":["React","useEffect","useForm","PropTypes","styles","Button","Overflow","TableHead","TableCell","FormCheckbox","FormContainer","utils","makeStyles","Box","Grid","Table","TableContainer","TableBody","TableRow","ClaimsSelectMatrixView","prototypes","cols","array","isRequired","rows","matrixRowKeys","matrixPrimaryKey","string","fields","resetMatrix","func","saveMatrix","matrixDataDiff","object","classes","name","control","register","watch","handleSubmit","reset","Object","keys","length","wrapper","root","formContainer","tableContainer","tableHead","map","eachRow","ind","tableFirstCell","entries","slice","eachData","idx","tableCell","form","getFieldProps","t","btn","actionButton"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,OAAT,QAAwB,iBAAxB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,6BAAnB;AACA,SAASC,MAAT,EAAiBC,QAAjB,EAA2BC,SAA3B,EAAsCC,SAAtC,EAAiDC,YAAjD,EAA+DC,aAA/D,QAAoF,YAApF;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,KAAhC,EAAuCC,cAAvC,EAAuDC,SAAvD,EAAkEC,QAAlE,QAAkF,mBAAlF;;AAEAC,sBAAsB,CAACC,UAAvB,GAAoC;AAClCC,EAAAA,IAAI,EAAElB,SAAS,CAACmB,KAAV,CAAgBC,UADY;AAElCC,EAAAA,IAAI,EAAErB,SAAS,CAACmB,KAAV,CAAgBC,UAFY;AAGlCE,EAAAA,aAAa,EAAEtB,SAAS,CAACmB,KAAV,CAAgBC,UAHG;AAIlCG,EAAAA,gBAAgB,EAAEvB,SAAS,CAACwB,MAAV,CAAiBJ,UAJD;AAKlCK,EAAAA,MAAM,EAAEzB,SAAS,CAACmB,KAAV,CAAgBC,UALU;AAMlCM,EAAAA,WAAW,EAAE1B,SAAS,CAAC2B,IAAV,CAAeP,UANM;AAOlCQ,EAAAA,UAAU,EAAE5B,SAAS,CAAC2B,IAAV,CAAeP,UAPO;AAQlCS,EAAAA,cAAc,EAAE7B,SAAS,CAAC8B,MAAV,CAAiBV;AARC,CAApC;AAWA,OAAO,SAASJ,sBAAT,OAAkI;AAAA;;AAAA;;AAAA,MAAhGE,IAAgG,QAAhGA,IAAgG;AAAA,MAA1FG,IAA0F,QAA1FA,IAA0F;AAAA,MAApFC,aAAoF,QAApFA,aAAoF;AAAA,MAArEC,gBAAqE,QAArEA,gBAAqE;AAAA,MAAnDE,MAAmD,QAAnDA,MAAmD;AAAA,MAA3CC,WAA2C,QAA3CA,WAA2C;AAAA,MAA9BE,UAA8B,QAA9BA,UAA8B;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;AACvI,MAAME,OAAO,GAAGtB,UAAU,CAACR,MAAD,EAAS;AAAE+B,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AADuI,iBAG7EjC,OAAO,EAHsE;AAAA,MAG/HkC,OAH+H,YAG/HA,OAH+H;AAAA,MAGtHC,QAHsH,YAGtHA,QAHsH;AAAA,MAG5GC,KAH4G,YAG5GA,KAH4G;AAAA,MAGrGC,YAHqG,YAGrGA,YAHqG;AAAA,MAGvFC,KAHuF,YAGvFA,KAHuF;;AAKvIvC,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACwC,MAAM,CAACC,IAAP,CAAYV,cAAZ,EAA4BW,MAAjC,EAAyC;AACvCH,MAAAA,KAAK,CAAC;AAAEZ,QAAAA,MAAM,EAANA;AAAF,OAAD,CAAL;AACD;AACF,GAJQ,EAIN,CAACI,cAAD,CAJM,CAAT,CALuI,CASjH;;AAEtB,sBACE,QAAC,GAAD;AAAK,mBAAY,yBAAjB;AAA2C,IAAA,SAAS,EAAEE,OAAO,CAACU,OAA9D;AAAA,2BACE,QAAC,IAAD;AAAM,MAAA,SAAS,MAAf;AAAA,8BACE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,aAAD;AAAe,UAAA,aAAa,EAAE;AAAEC,YAAAA,IAAI,EAAEX,OAAO,CAACY;AAAhB,WAA9B;AAAA,iCACE,QAAC,QAAD;AAAA,mCACE,QAAC,cAAD;AAAgB,cAAA,SAAS,EAAEZ,OAAO,CAACa,cAAnC;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,YAAY,MAAnB;AAAoB,8BAAW,qBAA/B;AAAqD,+BAAY,qBAAjE;AAAA,wCACE,QAAC,SAAD;AACE,kBAAA,OAAO,EAAE1B,IADX;AAEE,kBAAA,aAAa,EAAE;AAAE2B,oBAAAA,SAAS,EAAEd,OAAO,CAACc;AAArB,mBAFjB;AAGE,iCAAY,qBAHd;AAIE,kBAAA,OAAO,MAJT;AAKE,kBAAA,MAAM;AALR;AAAA;AAAA;AAAA;AAAA,wBADF,eAQE,QAAC,SAAD;AAAW,iCAAY,qBAAvB;AAAA,4BACGxB,IAAI,CAACyB,GAAL,CAAS,UAACC,OAAD,EAAUC,GAAV,EAAkB;AAC1B,wCACE,QAAC,QAAD;AAAmC,sBAAA,KAAK,MAAxC;AAAyC,qCAAY,oBAArD;AAAA,8CACE,QAAC,SAAD;AAAW,wBAAA,OAAO,MAAlB;AAAmB,wBAAA,SAAS,EAAEjB,OAAO,CAACkB,cAAtC;AAAsD,uCAAY,8BAAlE;AAAA,kCACGF,OAAO,CAACxB,gBAAD;AADV;AAAA;AAAA;AAAA;AAAA,+BADF,EAIGe,MAAM,CAACY,OAAP,CAAeH,OAAf,EACEI,KADF,CACQ,CADR,EAEEL,GAFF,CAEM,UAACM,QAAD,EAAWC,GAAX,EAAmB;AACtB,4CACE,QAAC,SAAD;AAEE,0BAAA,OAAO,MAFT;AAGE,0BAAA,SAAS,EAAEtB,OAAO,CAACuB,SAHrB;AAIE,uEAAoCN,GAAG,GAAG,CAA1C,cAA+CK,GAAG,GAAG,CAArD,CAJF;AAAA,iDAME,QAAC,YAAD,kCACM7C,KAAK,CAAC+C,IAAN,CAAWC,aAAX,CAAyB/B,MAAM,CAACuB,GAAD,CAA/B,EAAsCvB,MAAM,CAACuB,GAAD,CAAN,CAAYK,GAAZ,EAAiBrB,IAAvD,CADN;AAEE,4BAAA,OAAO,EAAEC,OAFX;AAGE,4BAAA,QAAQ,EAAEC,QAHZ;AAIE,4BAAA,KAAK,EAAEC;AAJT;AAAA;AAAA;AAAA;AAAA;AANF,2BACOiB,QAAQ,CAAC,CAAD,CADf;AAAA;AAAA;AAAA;AAAA,iCADF;AAeD,uBAlBF,CAJH;AAAA,uBAAe9B,aAAa,CAAC0B,GAAD,CAA5B;AAAA;AAAA;AAAA;AAAA,6BADF;AA0BD,mBA3BA;AADH;AAAA;AAAA;AAAA;AAAA,wBARF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF,eAgDE,QAAC,IAAD;AAAM,QAAA,IAAI,MAAV;AAAW,QAAA,EAAE,EAAE,EAAf;AAAA,+BACE,QAAC,GAAD;AAAK,UAAA,EAAE,EAAE,CAAT;AAAY,UAAA,OAAO,EAAC,MAApB;AAA2B,UAAA,cAAc,EAAC,UAA1C;AAAA,kCACE,QAAC,MAAD;AAAQ,YAAA,IAAI,EAAExC,KAAK,CAACgB,MAAN,CAAaiC,CAAb,CAAe,WAAf,CAAd;AAA2C,YAAA,OAAO,EAAE/B,WAApD;AAAiE,YAAA,IAAI,EAAC,QAAtE;AAA+E,YAAA,aAAa,EAAE;AAAEgC,cAAAA,GAAG,EAAE3B,OAAO,CAAC4B;AAAf;AAA9F;AAAA;AAAA;AAAA;AAAA,kBADF,eAEE,QAAC,MAAD;AACE,YAAA,IAAI,EAAEnD,KAAK,CAACgB,MAAN,CAAaiC,CAAb,CAAe,UAAf,CADR;AAEE,YAAA,OAAO,EAAErB,YAAY,CAACR,UAAD,CAFvB;AAGE,YAAA,IAAI,EAAC,QAHP;AAIE,YAAA,aAAa,EAAE;AAAE8B,cAAAA,GAAG,EAAE3B,OAAO,CAAC4B;AAAf;AAJjB;AAAA;AAAA;AAAA;AAAA,kBAFF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cAhDF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,UADF;AAgED;;GA3Ee3C,sB;UAG4CjB,O;;;KAH5CiB,sB;AAAAA,sB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useForm } from 'react-hook-form';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './ClaimsSelectMatrix.styles';\r\nimport { Button, Overflow, TableHead, TableCell, FormCheckbox, FormContainer } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n//mui\r\nimport { makeStyles, Box, Grid, Table, TableContainer, TableBody, TableRow } from '@material-ui/core';\r\n\r\nClaimsSelectMatrixView.prototypes = {\r\n  cols: PropTypes.array.isRequired,\r\n  rows: PropTypes.array.isRequired,\r\n  matrixRowKeys: PropTypes.array.isRequired,\r\n  matrixPrimaryKey: PropTypes.string.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  resetMatrix: PropTypes.func.isRequired,\r\n  saveMatrix: PropTypes.func.isRequired,\r\n  matrixDataDiff: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function ClaimsSelectMatrixView({ cols, rows, matrixRowKeys, matrixPrimaryKey, fields, resetMatrix, saveMatrix, matrixDataDiff }) {\r\n  const classes = makeStyles(styles, { name: 'SelectMatrix' })();\r\n\r\n  const { control, register, watch, handleSubmit, reset } = useForm();\r\n\r\n  useEffect(() => {\r\n    if (!Object.keys(matrixDataDiff).length) {\r\n      reset({ fields });\r\n    }\r\n  }, [matrixDataDiff]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <Box data-testid=\"claims-complexity-table\" className={classes.wrapper}>\r\n      <Grid container>\r\n        <Grid item xs={12}>\r\n          <FormContainer nestedClasses={{ root: classes.formContainer }}>\r\n            <Overflow>\r\n              <TableContainer className={classes.tableContainer}>\r\n                <Table stickyHeader aria-label=\"select matrix table\" data-testid=\"select-matrix-table\">\r\n                  <TableHead\r\n                    columns={cols}\r\n                    nestedClasses={{ tableHead: classes.tableHead }}\r\n                    data-testid=\"select-matrix-thead\"\r\n                    compact\r\n                    nowrap\r\n                  />\r\n                  <TableBody data-testid=\"select-matrix-tbody\">\r\n                    {rows.map((eachRow, ind) => {\r\n                      return (\r\n                        <TableRow key={matrixRowKeys[ind]} hover data-testid=\"select-matrix-trow\">\r\n                          <TableCell compact className={classes.tableFirstCell} data-testid=\"select-matrix-tcell-division\">\r\n                            {eachRow[matrixPrimaryKey]}\r\n                          </TableCell>\r\n                          {Object.entries(eachRow)\r\n                            .slice(1)\r\n                            .map((eachData, idx) => {\r\n                              return (\r\n                                <TableCell\r\n                                  key={eachData[0]}\r\n                                  compact\r\n                                  className={classes.tableCell}\r\n                                  data-testid={`select-matrix-tcell-${ind + 1}-${idx + 1}`}\r\n                                >\r\n                                  <FormCheckbox\r\n                                    {...utils.form.getFieldProps(fields[ind], fields[ind][idx].name)}\r\n                                    control={control}\r\n                                    register={register}\r\n                                    watch={watch}\r\n                                  />\r\n                                </TableCell>\r\n                              );\r\n                            })}\r\n                        </TableRow>\r\n                      );\r\n                    })}\r\n                  </TableBody>\r\n                </Table>\r\n              </TableContainer>\r\n            </Overflow>\r\n          </FormContainer>\r\n        </Grid>\r\n        <Grid item xs={12}>\r\n          <Box mt={3} display=\"flex\" justifyContent=\"flex-end\">\r\n            <Button text={utils.string.t('app.reset')} onClick={resetMatrix} size=\"medium\" nestedClasses={{ btn: classes.actionButton }} />\r\n            <Button\r\n              text={utils.string.t('app.save')}\r\n              onClick={handleSubmit(saveMatrix)}\r\n              size=\"medium\"\r\n              nestedClasses={{ btn: classes.actionButton }}\r\n            />\r\n          </Box>\r\n        </Grid>\r\n      </Grid>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}