{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SetClaimsTaskSelection\\\\SetClaimsTaskSelection.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form'; //app\n\nimport * as utils from 'utils';\nimport { Button, FormContainer, FormFields, FormGrid, FormHidden, FormSelect, FormLabel, FormActions } from 'components';\nimport { useFormActions } from 'hooks';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSetClaimsTaskSelectionView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired\n};\nexport function SetClaimsTaskSelectionView(_ref) {\n  _s();\n\n  var actions = _ref.actions,\n      fields = _ref.fields;\n  var defaultValues = utils.form.getInitialValues(fields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState;\n\n  var _useFormActions = useFormActions(actions, reset),\n      cancel = _useFormActions.cancel,\n      submit = _useFormActions.submit;\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit,\n      \"data-testid\": \"form-set-claim-task-selection\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t('claims.claimDetailsLabel.taskSelection'),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 29,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 28,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 7,\n              children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'taskSelection', control)), {}, {\n                error: errors.taskSelection,\n                \"data-testid\": \"set-task-selection-options\"\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 32,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 27,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 26,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'processID', control)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 25,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 24,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: cancel.label,\n        variant: \"outlined\",\n        size: \"medium\",\n        disabled: formState.isSubmitting,\n        onClick: cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 45,\n        columnNumber: 11\n      }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting || !formState.isDirty,\n        onClick: handleSubmit(submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 48,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 43,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 23,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SetClaimsTaskSelectionView, \"39vCvF8dj5u2YRGeQDDwyNLV7uY=\", false, function () {\n  return [useForm, useFormActions];\n});\n\n_c = SetClaimsTaskSelectionView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetClaimsTaskSelectionView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SetClaimsTaskSelection/SetClaimsTaskSelection.view.js"],"names":["React","PropTypes","useForm","utils","Button","FormContainer","FormFields","FormGrid","FormHidden","FormSelect","FormLabel","FormActions","useFormActions","SetClaimsTaskSelectionView","propTypes","fields","array","isRequired","actions","defaultValues","form","getInitialValues","control","reset","errors","handleSubmit","formState","cancel","submit","string","t","getFieldProps","taskSelection","label","isSubmitting","handler","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Button, FormContainer, FormFields, FormGrid, FormHidden, FormSelect, FormLabel, FormActions } from 'components';\r\nimport { useFormActions } from 'hooks';\r\n\r\nSetClaimsTaskSelectionView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n};\r\n\r\nexport function SetClaimsTaskSelectionView({ actions, fields }) {\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState } = useForm({ defaultValues });\r\n\r\n  const { cancel, submit } = useFormActions(actions, reset);\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit} data-testid=\"form-set-claim-task-selection\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid container alignItems=\"center\">\r\n              <FormGrid item xs={3}>\r\n                <FormLabel label={utils.string.t('claims.claimDetailsLabel.taskSelection')} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={7}>\r\n                <FormSelect\r\n                  {...utils.form.getFieldProps(fields, 'taskSelection', control)}\r\n                  error={errors.taskSelection}\r\n                  data-testid=\"set-task-selection-options\"\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'processID', control)} />\r\n        </FormFields>\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {cancel && (\r\n          <Button text={cancel.label} variant=\"outlined\" size=\"medium\" disabled={formState.isSubmitting} onClick={cancel.handler} />\r\n        )}\r\n        {submit && (\r\n          <Button\r\n            text={submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting || !formState.isDirty}\r\n            onClick={handleSubmit(submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}