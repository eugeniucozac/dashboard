{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditProductsClient\\\\EditProductsClient.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; // app\n\nimport { EditProductsClientView } from './EditProductsClient.view';\nimport { postClient, getRiskCountries, getClient, selectRiskCountries } from 'stores';\nimport * as utils from 'utils';\nimport { productAdminSchema } from 'schemas';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditProductsClient.propTypes = {\n  handleClose: PropTypes.func.isRequired,\n  id: PropTypes.string.isRequired,\n  submitHandler: PropTypes.func\n};\nEditProductsClient.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function EditProductsClient(_ref) {\n  _s();\n\n  var id = _ref.id,\n      submitHandler = _ref.submitHandler,\n      handleClose = _ref.handleClose,\n      _ref$isCreateClientMo = _ref.isCreateClientModal,\n      isCreateClientModal = _ref$isCreateClientMo === void 0 ? false : _ref$isCreateClientMo;\n  var dispatch = useDispatch();\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      item = _useState2[0],\n      setItem = _useState2[1];\n\n  var countries = useSelector(selectRiskCountries);\n\n  var _useState3 = useState({\n    countries: countries\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      options = _useState4[0],\n      setOptions = _useState4[1];\n\n  var submitLabel = 'products.admin.clients.update';\n\n  var _productAdminSchema$g = productAdminSchema.getSchema('clients'),\n      fields = _productAdminSchema$g.fields;\n\n  var hydrateLabels = function hydrateLabels(fields) {\n    return fields.map(function (field) {\n      return _objectSpread(_objectSpread({}, field), {}, {\n        label: utils.string.t(field.label)\n      }, field.options && {\n        options: field.options.map(function (option) {\n          return _objectSpread(_objectSpread({}, option), {}, {\n            label: utils.string.t(option.label)\n          });\n        })\n      });\n    });\n  };\n\n  var schema = {\n    fields: hydrateLabels(fields)\n  };\n  useEffect(function () {\n    var isSubscribed = true;\n\n    var fetchData = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(id) {\n        var data, address, rest, insuredItem;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(getClient(id));\n\n              case 2:\n                data = _context.sent;\n\n                if (data) {\n                  address = data.address, rest = _objectWithoutProperties(data, [\"address\"]);\n                  insuredItem = _objectSpread(_objectSpread({}, rest), address);\n                  isSubscribed && setItem(insuredItem);\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function fetchData(_x) {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    fetchData(id);\n    return function () {\n      return isSubscribed = false;\n    };\n  }, [id] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(options.countries)) {\n      dispatch(getRiskCountries());\n    }\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    setOptions({\n      countries: countries\n    });\n  }, [countries] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var hydrateOptions = function hydrateOptions(fields) {\n    if (!fields || !item) return [];\n\n    var getOptionValue = function getOptionValue(field, itemValue) {\n      var optionsList = field.optionsDynamicKey ? utils.form.getSelectOptions(field.optionsDynamicKey, _defineProperty({}, field.optionsDynamicKey, options[field.optionsDynamicKey])) : field === null || field === void 0 ? void 0 : field.options;\n\n      var _optionsList$filter = optionsList.filter(function (option) {\n        return option.value === itemValue;\n      }),\n          _optionsList$filter2 = _slicedToArray(_optionsList$filter, 1),\n          result = _optionsList$filter2[0];\n\n      return result;\n    };\n\n    return fields === null || fields === void 0 ? void 0 : fields.map(function (field) {\n      return _objectSpread(_objectSpread(_objectSpread({}, field), {}, {\n        value: field.type === 'autocompletemui' ? getOptionValue(field, item[field.name]) : item[field.name] || ''\n      }, field.type !== 'autocompletemui' && {\n        muiComponentProps: _objectSpread({}, field.muiComponentProps)\n      }), field.optionsDynamicKey && {\n        options: utils.form.getSelectOptions(field.optionsDynamicKey, _defineProperty({}, field.optionsDynamicKey, options[field.optionsDynamicKey]))\n      });\n    });\n  };\n\n  var handleSubmit = function handleSubmit(values) {\n    var updateValues = _objectSpread({\n      id: item === null || item === void 0 ? void 0 : item.id\n    }, values);\n\n    return dispatch(postClient(updateValues, isCreateClientModal, true)).then(function (response) {\n      var isSuccess = response && response.id && !response.ok; // success\n\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\n        if (utils.generic.isFunction(handleClose)) {\n          handleClose();\n        }\n\n        return submitHandler(response);\n      } // fail\n\n\n      handleCancel();\n    });\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t(submitLabel),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  var hasFields = utils.generic.isValidArray(schema.fields, true); // abort\n\n  if (!hasFields || !item || utils.generic.isInvalidOrEmptyArray(options === null || options === void 0 ? void 0 : options.countries)) return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"empty-placeholder\",\n    style: {\n      minHeight: 400\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 156,\n    columnNumber: 12\n  }, this);\n  var hydratedFields = [hydrateOptions(schema.fields)];\n  var defaultValues = utils.form.getInitialValues(hydratedFields);\n  return /*#__PURE__*/_jsxDEV(EditProductsClientView, {\n    fields: hydratedFields,\n    actions: actions,\n    loading: false,\n    defaultValues: defaultValues,\n    validationSchema: utils.form.getValidationSchema(hydratedFields)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 163,\n    columnNumber: 5\n  }, this);\n}\n\n_s(EditProductsClient, \"7PRUy331kEQ6dyljM7acEdo9/ws=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = EditProductsClient;\nEditProductsClient.displayName = \"EditProductsClient\";\nEditProductsClient.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"EditProductsClient\",\n  \"props\": {\n    \"isCreateClientModal\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"submitHandler\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\EditProductsClient\\\\EditProductsClient.js\"] = {\n    name: \"EditProductsClient\",\n    docgenInfo: EditProductsClient.__docgenInfo,\n    path: \"src\\\\forms\\\\EditProductsClient\\\\EditProductsClient.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"EditProductsClient\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditProductsClient/EditProductsClient.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","EditProductsClientView","postClient","getRiskCountries","getClient","selectRiskCountries","utils","productAdminSchema","EditProductsClient","propTypes","handleClose","func","isRequired","id","string","submitHandler","defaultProps","isCreateClientModal","dispatch","item","setItem","countries","options","setOptions","submitLabel","getSchema","fields","hydrateLabels","map","field","label","t","option","schema","isSubscribed","fetchData","data","address","rest","insuredItem","generic","isInvalidOrEmptyArray","hydrateOptions","getOptionValue","itemValue","optionsList","optionsDynamicKey","form","getSelectOptions","filter","value","result","type","name","muiComponentProps","handleSubmit","values","updateValues","then","response","isSuccess","ok","isFunction","handleCancel","actions","handler","hasFields","isValidArray","minHeight","hydratedFields","defaultValues","getInitialValues","getValidationSchema"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { EditProductsClientView } from './EditProductsClient.view';\r\nimport { postClient, getRiskCountries, getClient, selectRiskCountries } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nimport { productAdminSchema } from 'schemas';\r\n\r\nEditProductsClient.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  id: PropTypes.string.isRequired,\r\n  submitHandler: PropTypes.func,\r\n};\r\n\r\nEditProductsClient.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function EditProductsClient({ id, submitHandler, handleClose, isCreateClientModal = false }) {\r\n  const dispatch = useDispatch();\r\n  const [item, setItem] = useState(null);\r\n  const countries = useSelector(selectRiskCountries);\r\n\r\n  const [options, setOptions] = useState({ countries });\r\n\r\n  const submitLabel = 'products.admin.clients.update';\r\n\r\n  const { fields } = productAdminSchema.getSchema('clients');\r\n\r\n  const hydrateLabels = (fields) =>\r\n    fields.map((field) => {\r\n      return {\r\n        ...field,\r\n        label: utils.string.t(field.label),\r\n        ...(field.options && { options: field.options.map((option) => ({ ...option, label: utils.string.t(option.label) })) }),\r\n      };\r\n    });\r\n\r\n  const schema = { fields: hydrateLabels(fields) };\r\n\r\n  useEffect(\r\n    () => {\r\n      let isSubscribed = true;\r\n\r\n      const fetchData = async (id) => {\r\n        const data = await dispatch(getClient(id));\r\n        if (data) {\r\n          const { address, ...rest } = data;\r\n          const insuredItem = { ...rest, ...address };\r\n\r\n          isSubscribed && setItem(insuredItem);\r\n        }\r\n      };\r\n\r\n      fetchData(id);\r\n\r\n      return () => (isSubscribed = false);\r\n    },\r\n    [id] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (utils.generic.isInvalidOrEmptyArray(options.countries)) {\r\n        dispatch(getRiskCountries());\r\n      }\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      setOptions({ countries });\r\n    },\r\n    [countries] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const hydrateOptions = (fields) => {\r\n    if (!fields || !item) return [];\r\n\r\n    const getOptionValue = (field, itemValue) => {\r\n      const optionsList = field.optionsDynamicKey\r\n        ? utils.form.getSelectOptions(field.optionsDynamicKey, {\r\n            [field.optionsDynamicKey]: options[field.optionsDynamicKey],\r\n          })\r\n        : field?.options;\r\n      const [result] = optionsList.filter((option) => option.value === itemValue);\r\n\r\n      return result;\r\n    };\r\n\r\n    return fields?.map((field) => {\r\n      return {\r\n        ...field,\r\n        value: field.type === 'autocompletemui' ? getOptionValue(field, item[field.name]) : item[field.name] || '',\r\n        ...(field.type !== 'autocompletemui' && {\r\n          muiComponentProps: {\r\n            ...field.muiComponentProps,\r\n          },\r\n        }),\r\n\r\n        ...(field.optionsDynamicKey && {\r\n          options: utils.form.getSelectOptions(field.optionsDynamicKey, {\r\n            [field.optionsDynamicKey]: options[field.optionsDynamicKey],\r\n          }),\r\n        }),\r\n      };\r\n    });\r\n  };\r\n\r\n  const handleSubmit = (values) => {\r\n    const updateValues = { id: item?.id, ...values };\r\n\r\n    return dispatch(postClient(updateValues, isCreateClientModal, true)).then((response) => {\r\n      const isSuccess = response && response.id && !response.ok;\r\n\r\n      // success\r\n      if (isSuccess && utils.generic.isFunction(submitHandler)) {\r\n        if (utils.generic.isFunction(handleClose)) {\r\n          handleClose();\r\n        }\r\n        return submitHandler(response);\r\n      }\r\n\r\n      // fail\r\n      handleCancel();\r\n    });\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t(submitLabel),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  const hasFields = utils.generic.isValidArray(schema.fields, true);\r\n\r\n  // abort\r\n  if (!hasFields || !item || utils.generic.isInvalidOrEmptyArray(options?.countries))\r\n    return <div data-testid=\"empty-placeholder\" style={{ minHeight: 400 }}></div>;\r\n\r\n  const hydratedFields = [hydrateOptions(schema.fields)];\r\n\r\n  const defaultValues = utils.form.getInitialValues(hydratedFields);\r\n\r\n  return (\r\n    <EditProductsClientView\r\n      fields={hydratedFields}\r\n      actions={actions}\r\n      loading={false}\r\n      defaultValues={defaultValues}\r\n      validationSchema={utils.form.getValidationSchema(hydratedFields)}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}