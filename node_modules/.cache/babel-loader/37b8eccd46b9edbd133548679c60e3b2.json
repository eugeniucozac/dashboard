{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TableRowHeader\\\\TableRowHeader.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport { useHistory, useLocation } from 'react-router'; // app\n\nimport styles from './TableRowHeader.styles';\nimport { TableCell, Button } from 'components';\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\nimport { setClaimsStepperControl, setClaimData } from 'stores';\nimport config from 'config'; // mui\n\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTableRowHeaderView.propTypes = {\n  title: PropTypes.string.isRequired,\n  subtitle: PropTypes.string.isRequired,\n  expanded: PropTypes.bool,\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\n  setIsOpen: PropTypes.func,\n  claimInformation: PropTypes.object\n};\nexport function TableRowHeaderView(_ref) {\n  _s();\n\n  var title = _ref.title,\n      subtitle = _ref.subtitle,\n      isOpen = _ref.isOpen,\n      onClick = _ref.onClick,\n      children = _ref.children,\n      color = _ref.color,\n      claimInformation = _ref.claimInformation;\n  var classes = makeStyles(styles, {\n    name: 'TableRowHeader'\n  })({\n    expanded: isOpen\n  });\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var location = useLocation();\n\n  var handleEditClaim = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(claim) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              //console.log(claim);\n              dispatch(setClaimData({\n                lossId: claim.lossDetailID,\n                claimId: claim.claimID,\n                policyRef: claim.policyRef,\n                policyNumber: claim.policyRef,\n                xbInstanceID: claim.xbInstanceID,\n                xbPolicyID: claim.xbPolicyID,\n                divisionID: claim.divisionID,\n                sourceID: claim.sourceID,\n                claimReference: claim.claimReference\n              }));\n              _context.next = 3;\n              return dispatch(setClaimsStepperControl(2));\n\n            case 3:\n              _context.next = 5;\n              return history.push(config.routes.claimsFNOL.newLoss);\n\n            case 5:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleEditClaim(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(TableRow, {\n      className: classes.wrapper,\n      onClick: onClick,\n      \"data-testid\": \"table-row-header\",\n      style: {\n        background: color\n      },\n      children: /*#__PURE__*/_jsxDEV(TableCell, {\n        colSpan: \"100\",\n        children: /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.panel,\n          children: [/*#__PURE__*/_jsxDEV(KeyboardArrowDownIcon, {\n            className: classes.arrow\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"h2\",\n            className: classes.title,\n            children: title\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 77,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body2\",\n            color: \"textSecondary\",\n            children: subtitle\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 80,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Button, {\n            icon: OpenInNewOutlinedIcon,\n            color: \"default\",\n            size: \"medium\",\n            variant: \"outlined\",\n            style: {\n              border: 'none'\n            },\n            nestedClasses: {\n              btn: classes.button\n            },\n            onClick: function onClick() {\n              return handleEditClaim(claimInformation);\n            },\n            disabled: (claimInformation === null || claimInformation === void 0 ? void 0 : claimInformation.claimStatus) === STATUS_CLAIMS_DRAFT\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), children]\n  }, void 0, true);\n}\n\n_s(TableRowHeaderView, \"yEYUSERZA799NiWkmNlqbj7vzGc=\", false, function () {\n  return [useDispatch, useHistory, useLocation];\n});\n\n_c = TableRowHeaderView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableRowHeaderView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TableRowHeader/TableRowHeader.view.js"],"names":["React","useDispatch","PropTypes","useHistory","useLocation","styles","TableCell","Button","STATUS_CLAIMS_DRAFT","setClaimsStepperControl","setClaimData","config","makeStyles","Box","TableRow","Typography","OpenInNewOutlinedIcon","KeyboardArrowDownIcon","TableRowHeaderView","propTypes","title","string","isRequired","subtitle","expanded","bool","children","oneOfType","arrayOf","node","setIsOpen","func","claimInformation","object","isOpen","onClick","color","classes","name","dispatch","history","location","handleEditClaim","claim","lossId","lossDetailID","claimId","claimID","policyRef","policyNumber","xbInstanceID","xbPolicyID","divisionID","sourceID","claimReference","push","routes","claimsFNOL","newLoss","wrapper","background","panel","arrow","border","btn","button","claimStatus"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport { useHistory, useLocation } from 'react-router';\r\n\r\n// app\r\nimport styles from './TableRowHeader.styles';\r\nimport { TableCell, Button } from 'components';\r\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\r\nimport { setClaimsStepperControl, setClaimData } from 'stores';\r\nimport config from 'config';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow, Typography } from '@material-ui/core';\r\nimport OpenInNewOutlinedIcon from '@material-ui/icons/OpenInNewOutlined';\r\nimport KeyboardArrowDownIcon from '@material-ui/icons/KeyboardArrowDown';\r\n\r\nTableRowHeaderView.propTypes = {\r\n  title: PropTypes.string.isRequired,\r\n  subtitle: PropTypes.string.isRequired,\r\n  expanded: PropTypes.bool,\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]).isRequired,\r\n  setIsOpen: PropTypes.func,\r\n  claimInformation: PropTypes.object,\r\n};\r\n\r\nexport function TableRowHeaderView({ title, subtitle, isOpen, onClick, children, color, claimInformation }) {\r\n  const classes = makeStyles(styles, { name: 'TableRowHeader' })({ expanded: isOpen });\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const location = useLocation();\r\n\r\n  const handleEditClaim = async (claim) => {\r\n    //console.log(claim);\r\n\r\n    dispatch(\r\n      setClaimData({\r\n        lossId: claim.lossDetailID,\r\n        claimId: claim.claimID,\r\n        policyRef: claim.policyRef,\r\n        policyNumber: claim.policyRef,\r\n        xbInstanceID: claim.xbInstanceID,\r\n        xbPolicyID: claim.xbPolicyID,\r\n        divisionID: claim.divisionID,\r\n        sourceID: claim.sourceID,\r\n        claimReference: claim.claimReference,\r\n      })\r\n    );\r\n\r\n    await dispatch(setClaimsStepperControl(2));\r\n    await history.push(config.routes.claimsFNOL.newLoss);\r\n    /*\r\n    dispatch(setClaimsStepperControl(2));\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        linkPolicy: {\r\n          isSearchTerm: true,\r\n          claimObj: {\r\n            ...claim,\r\n            claimReference: claim.claimRef,\r\n            divisionId: claim.divisionID,\r\n            sourceId: claim.instanceID,\r\n          },\r\n        },\r\n        redirectUrl: location?.pathname,\r\n      },\r\n    }); */\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <TableRow className={classes.wrapper} onClick={onClick} data-testid=\"table-row-header\" style={{ background: color }}>\r\n        <TableCell colSpan=\"100\">\r\n          <Box className={classes.panel}>\r\n            <KeyboardArrowDownIcon className={classes.arrow} />\r\n            <Typography variant=\"h2\" className={classes.title}>\r\n              {title}\r\n            </Typography>\r\n            <Typography variant=\"body2\" color=\"textSecondary\">\r\n              {subtitle}\r\n            </Typography>\r\n            <Button\r\n              icon={OpenInNewOutlinedIcon}\r\n              color=\"default\"\r\n              size=\"medium\"\r\n              variant=\"outlined\"\r\n              style={{ border: 'none' }}\r\n              nestedClasses={{ btn: classes.button }}\r\n              onClick={() => handleEditClaim(claimInformation)}\r\n              disabled={claimInformation?.claimStatus === STATUS_CLAIMS_DRAFT}\r\n            />\r\n          </Box>\r\n        </TableCell>\r\n      </TableRow>\r\n      {children}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}