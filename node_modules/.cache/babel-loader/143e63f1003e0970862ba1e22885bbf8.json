{"ast":null,"code":"import \"core-js/modules/es.parse-float\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var postPlacementAddPolicy = function postPlacementAddPolicy(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.addPolicy',\n      message: 'Data missing for POST request'\n    };\n    dispatch(postPlacementAddPolicyRequest(formData));\n    dispatch(addLoader('postPlacementAddPolicy'));\n\n    if (!formData || !formData.businessType) {\n      dispatch(postPlacementAddPolicyFailure(defaultError));\n      dispatch(enqueueNotification('notification.addPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementAddPolicy'));\n      return;\n    } // get the data for POST\n\n\n    var body = {\n      parentPlacementId: get(getState(), 'placement.selected.id'),\n      sourceSystemId: get(getState(), 'placement.selected.sourceSystemId'),\n      departmentId: get(getState(), 'placement.selected.departmentId'),\n      businessTypeId: get(formData, 'businessType[0].id'),\n      isoCurrencyCode: get(formData, 'currency'),\n      notes: formData.notes,\n      amount: !formData.buydown ? parseFloat(formData.amount) : '',\n      excess: !formData.buydown ? parseFloat(formData.excess) : ''\n    };\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/policy',\n      data: body\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postPlacementAddPolicySuccess(data));\n      dispatch(enqueueNotification('notification.addPolicy.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementAddPolicy'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error (placement.addPolicy)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postPlacementAddPolicyFailure(err));\n      dispatch(enqueueNotification('notification.addPolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('postPlacementAddPolicy'));\n      return err;\n    });\n  };\n};\nexport var postPlacementAddPolicyRequest = function postPlacementAddPolicyRequest(data) {\n  return {\n    type: 'PLACEMENT_ADD_POLICY_POST_REQUEST',\n    payload: data\n  };\n};\nexport var postPlacementAddPolicySuccess = function postPlacementAddPolicySuccess(data) {\n  return {\n    type: 'PLACEMENT_POLICY_POST_SUCCESS',\n    payload: data\n  };\n};\nexport var postPlacementAddPolicyFailure = function postPlacementAddPolicyFailure(error) {\n  return {\n    type: 'PLACEMENT_ADD_POLICY_POST_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.addPolicy.js"],"names":["get","addLoader","authLogout","enqueueNotification","hideModal","removeLoader","utils","postPlacementAddPolicy","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postPlacementAddPolicyRequest","businessType","postPlacementAddPolicyFailure","body","parentPlacementId","sourceSystemId","departmentId","businessTypeId","isoCurrencyCode","notes","amount","buydown","parseFloat","excess","api","post","token","accessToken","edge","path","data","then","response","handleResponse","json","handleData","postPlacementAddPolicySuccess","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { addLoader, authLogout, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postPlacementAddPolicy = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.addPolicy',\r\n    message: 'Data missing for POST request',\r\n  };\r\n\r\n  dispatch(postPlacementAddPolicyRequest(formData));\r\n  dispatch(addLoader('postPlacementAddPolicy'));\r\n\r\n  if (!formData || !formData.businessType) {\r\n    dispatch(postPlacementAddPolicyFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.addPolicy.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('postPlacementAddPolicy'));\r\n    return;\r\n  }\r\n\r\n  // get the data for POST\r\n  const body = {\r\n    parentPlacementId: get(getState(), 'placement.selected.id'),\r\n    sourceSystemId: get(getState(), 'placement.selected.sourceSystemId'),\r\n    departmentId: get(getState(), 'placement.selected.departmentId'),\r\n    businessTypeId: get(formData, 'businessType[0].id'),\r\n    isoCurrencyCode: get(formData, 'currency'),\r\n    notes: formData.notes,\r\n    amount: !formData.buydown ? parseFloat(formData.amount) : '',\r\n    excess: !formData.buydown ? parseFloat(formData.excess) : '',\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/policy',\r\n      data: body,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postPlacementAddPolicySuccess(data));\r\n      dispatch(enqueueNotification('notification.addPolicy.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postPlacementAddPolicy'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error (placement.addPolicy)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postPlacementAddPolicyFailure(err));\r\n      dispatch(enqueueNotification('notification.addPolicy.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('postPlacementAddPolicy'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postPlacementAddPolicyRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_ADD_POLICY_POST_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementAddPolicySuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_POST_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementAddPolicyFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_ADD_POLICY_POST_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}