{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\EditLossNotesRow\\\\EditLossNotesRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport styles from './EditLossNotesRow.styles';\nimport { Button, FormContainer, FormFields, FormGrid, FormText, FormLabel, FormActions, FormHidden } from 'components';\nimport config from 'config';\nimport * as utils from 'utils'; //mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nEditLossNotesRowView.propTypes = {\n  fields: PropTypes.array,\n  buttons: PropTypes.shape({\n    cancel: PropTypes.object.isRequired,\n    submit: PropTypes.object.isRequired\n  }),\n  formProps: PropTypes.object.isRequired,\n  note: PropTypes.object\n};\nexport function EditLossNotesRowView(_ref) {\n  var fields = _ref.fields,\n      _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? {} : _ref$buttons,\n      formProps = _ref.formProps,\n      note = _ref.note;\n  var classes = makeStyles(styles, {\n    name: 'EditLossNotesRow'\n  })();\n  var control = formProps.control,\n      errors = formProps.errors,\n      handleSubmit = formProps.handleSubmit,\n      formState = formProps.formState;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(buttons.submit.handler),\n      \"data-testid\": \"edit-loss-notes\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.processing.tasksGridColumns.dateAndTimeCreated')),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 35,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 34,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  classes: {\n                    root: classes.textOnly\n                  },\n                  children: utils.string.t('format.date', {\n                    value: {\n                      date: note === null || note === void 0 ? void 0 : note.createdDate,\n                      format: config.ui.format.date.textTime\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 38,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 33,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.audits.columns.createdBy')),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 48,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 47,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  classes: {\n                    root: classes.textOnly\n                  },\n                  children: note === null || note === void 0 ? void 0 : note.createdByName\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 51,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 50,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 46,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.notes.noteDetails'), \"*\"),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 59,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 58,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'notesDescription', control, errors)), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 62,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 61,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 57,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.notes.columns.dateUpdated')),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 68,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 67,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  classes: {\n                    root: classes.textOnly\n                  },\n                  children: (note === null || note === void 0 ? void 0 : note.createdDate) !== (note === null || note === void 0 ? void 0 : note.updatedDate) && (note === null || note === void 0 ? void 0 : note.updatedDate) && utils.string.t('format.date', {\n                    value: {\n                      date: note === null || note === void 0 ? void 0 : note.updatedDate,\n                      format: config.ui.format.date.textTime\n                    }\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 71,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 70,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 66,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.notes.columns.updatedBy')),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 83,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 82,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: /*#__PURE__*/_jsxDEV(Typography, {\n                  variant: \"body2\",\n                  classes: {\n                    root: classes.textOnly\n                  },\n                  children: (note === null || note === void 0 ? void 0 : note.createdDate) !== (note === null || note === void 0 ? void 0 : note.updatedDate) && (note === null || note === void 0 ? void 0 : note.updatedByName)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 86,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 81,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 32,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 31,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'caseIncidentNotesID', control)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 30,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 29,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      type: \"dialog\",\n      children: [buttons.cancel && /*#__PURE__*/_jsxDEV(Button, {\n        text: buttons.cancel.label,\n        variant: \"text\",\n        disabled: formState.isSubmitting,\n        onClick: buttons.cancel.handler\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 98,\n        columnNumber: 11\n      }, this), buttons.submit && /*#__PURE__*/_jsxDEV(Button, {\n        text: buttons.submit.label,\n        type: \"submit\",\n        disabled: formState.isSubmitting || !formState.isDirty,\n        onClick: handleSubmit(buttons.submit.handler),\n        color: \"primary\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 101,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 96,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 28,\n    columnNumber: 5\n  }, this);\n}\n_c = EditLossNotesRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"EditLossNotesRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/EditLossNotesRow/EditLossNotesRow.view.js"],"names":["React","PropTypes","styles","Button","FormContainer","FormFields","FormGrid","FormText","FormLabel","FormActions","FormHidden","config","utils","makeStyles","Typography","EditLossNotesRowView","propTypes","fields","array","buttons","shape","cancel","object","isRequired","submit","formProps","note","classes","name","control","errors","handleSubmit","formState","root","handler","string","t","textOnly","value","date","createdDate","format","ui","textTime","createdByName","form","getFieldProps","updatedDate","updatedByName","label","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport styles from './EditLossNotesRow.styles';\r\nimport { Button, FormContainer, FormFields, FormGrid, FormText, FormLabel, FormActions, FormHidden } from 'components';\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\n\r\n//mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nEditLossNotesRowView.propTypes = {\r\n  fields: PropTypes.array,\r\n  buttons: PropTypes.shape({\r\n    cancel: PropTypes.object.isRequired,\r\n    submit: PropTypes.object.isRequired,\r\n  }),\r\n  formProps: PropTypes.object.isRequired,\r\n  note: PropTypes.object,\r\n};\r\n\r\nexport function EditLossNotesRowView({ fields, buttons = {}, formProps, note }) {\r\n  const classes = makeStyles(styles, { name: 'EditLossNotesRow' })();\r\n  const { control, errors, handleSubmit, formState } = formProps;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(buttons.submit.handler)} data-testid=\"edit-loss-notes\">\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container>\r\n            <FormGrid item xs={12}>\r\n              <FormGrid container alignItems=\"center\">\r\n                <FormGrid item xs={4}>\r\n                  <FormLabel label={`${utils.string.t('claims.processing.tasksGridColumns.dateAndTimeCreated')}`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={8}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {utils.string.t('format.date', {\r\n                      value: { date: note?.createdDate, format: config.ui.format.date.textTime },\r\n                    })}\r\n                  </Typography>\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid container alignItems=\"center\">\r\n                <FormGrid item xs={4}>\r\n                  <FormLabel label={`${utils.string.t('claims.audits.columns.createdBy')}`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={8}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {note?.createdByName}\r\n                  </Typography>\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid container>\r\n                <FormGrid item xs={4}>\r\n                  <FormLabel label={`${utils.string.t('claims.notes.noteDetails')}*`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={8}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'notesDescription', control, errors)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid container alignItems=\"center\">\r\n                <FormGrid item xs={4}>\r\n                  <FormLabel label={`${utils.string.t('claims.notes.columns.dateUpdated')}`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={8}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {note?.createdDate !== note?.updatedDate &&\r\n                      note?.updatedDate &&\r\n                      utils.string.t('format.date', {\r\n                        value: { date: note?.updatedDate, format: config.ui.format.date.textTime },\r\n                      })}\r\n                  </Typography>\r\n                </FormGrid>\r\n              </FormGrid>\r\n\r\n              <FormGrid container alignItems=\"center\">\r\n                <FormGrid item xs={4}>\r\n                  <FormLabel label={`${utils.string.t('claims.notes.columns.updatedBy')}`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={8}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {note?.createdDate !== note?.updatedDate && note?.updatedByName}\r\n                  </Typography>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n          <FormHidden {...utils.form.getFieldProps(fields, 'caseIncidentNotesID', control)} />\r\n        </FormFields>\r\n      </FormContainer>\r\n      <FormActions type=\"dialog\">\r\n        {buttons.cancel && (\r\n          <Button text={buttons.cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={buttons.cancel.handler} />\r\n        )}\r\n        {buttons.submit && (\r\n          <Button\r\n            text={buttons.submit.label}\r\n            type=\"submit\"\r\n            disabled={formState.isSubmitting || !formState.isDirty}\r\n            onClick={handleSubmit(buttons.submit.handler)}\r\n            color=\"primary\"\r\n          />\r\n        )}\r\n      </FormActions>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}