{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\DynamicValue\\\\DynamicValue.js\",\n    _this = this;\n\nimport React from 'react';\nimport get from 'lodash/get'; // app\n\nimport { Translate } from 'components';\nimport { CURRENCY_USD } from 'consts';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function DynamicValue(_ref) {\n  var values = _ref.values,\n      field = _ref.field;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    \"data-testid\": \"dynamic-table-component-total\",\n    children: getValue(field, values)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 11,\n    columnNumber: 10\n  }, this);\n}\n_c = DynamicValue;\n\nvar getValue = function getValue(field, values) {\n  if (!field || !field.dynamicValue || typeof values !== 'object') return 0;\n  var variant = field.dynamicValue.variant;\n\n  if (variant === 'sum') {\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [utils.generic.getSumOfArray(Object.values(values), config.ui.format.percent.decimal), field.variant === 'percent' && '%']\n    }, void 0, true);\n  }\n\n  if (variant === 'retainedBrokerageAmount') {\n    var premiumCurrency = get(values, 'lineItems.retainedBrokerageAmount.premiumCurrency') || CURRENCY_USD;\n    var grossPremium = get(values, 'lineItems.grossPremium.accountHandler');\n    var slipOrder = get(values, 'lineItems.slipOrder.accountHandler');\n    var totalRetainedBrokerage = get(values, 'lineItems.totalRetainedBrokerage.accountHandler');\n    var brokerageAmount = utils.openingMemo.getRetainedBrokerageValue(grossPremium, slipOrder, totalRetainedBrokerage);\n    var convertedBrokerage = utils.openingMemo.getRetainedBrokerageConvertedValue(premiumCurrency, brokerageAmount);\n    return /*#__PURE__*/_jsxDEV(\"div\", {\n      children: [/*#__PURE__*/_jsxDEV(Translate, {\n        label: \"format.currency\",\n        options: {\n          value: {\n            number: brokerageAmount,\n            currency: premiumCurrency\n          }\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 37,\n        columnNumber: 9\n      }, _this), convertedBrokerage && /*#__PURE__*/_jsxDEV(_Fragment, {\n        children: [/*#__PURE__*/_jsxDEV(\"br\", {}, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 40,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.currency\",\n          options: {\n            value: {\n              number: convertedBrokerage.value,\n              currency: 'GBP'\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 13\n        }, _this), \" @\", /*#__PURE__*/_jsxDEV(Translate, {\n          label: \"format.number\",\n          options: {\n            value: {\n              number: convertedBrokerage.rate,\n              format: {\n                trimMantissa: false\n              }\n            }\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 42,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 36,\n      columnNumber: 7\n    }, _this);\n  }\n\n  return 0;\n};\n\nexport default DynamicValue;\n\nvar _c;\n\n$RefreshReg$(_c, \"DynamicValue\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/DynamicValue/DynamicValue.js"],"names":["React","get","Translate","CURRENCY_USD","utils","config","DynamicValue","values","field","getValue","dynamicValue","variant","generic","getSumOfArray","Object","ui","format","percent","decimal","premiumCurrency","grossPremium","slipOrder","totalRetainedBrokerage","brokerageAmount","openingMemo","getRetainedBrokerageValue","convertedBrokerage","getRetainedBrokerageConvertedValue","value","number","currency","rate","trimMantissa"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { Translate } from 'components';\r\nimport { CURRENCY_USD } from 'consts';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport function DynamicValue({ values, field }) {\r\n  return <div data-testid=\"dynamic-table-component-total\">{getValue(field, values)}</div>;\r\n}\r\n\r\nconst getValue = (field, values) => {\r\n  if (!field || !field.dynamicValue || typeof values !== 'object') return 0;\r\n  const { variant } = field.dynamicValue;\r\n\r\n  if (variant === 'sum') {\r\n    return (\r\n      <>\r\n        {utils.generic.getSumOfArray(Object.values(values), config.ui.format.percent.decimal)}\r\n        {field.variant === 'percent' && '%'}\r\n      </>\r\n    );\r\n  }\r\n  if (variant === 'retainedBrokerageAmount') {\r\n    const premiumCurrency = get(values, 'lineItems.retainedBrokerageAmount.premiumCurrency') || CURRENCY_USD;\r\n    const grossPremium = get(values, 'lineItems.grossPremium.accountHandler');\r\n    const slipOrder = get(values, 'lineItems.slipOrder.accountHandler');\r\n    const totalRetainedBrokerage = get(values, 'lineItems.totalRetainedBrokerage.accountHandler');\r\n\r\n    const brokerageAmount = utils.openingMemo.getRetainedBrokerageValue(grossPremium, slipOrder, totalRetainedBrokerage);\r\n    const convertedBrokerage = utils.openingMemo.getRetainedBrokerageConvertedValue(premiumCurrency, brokerageAmount);\r\n\r\n    return (\r\n      <div>\r\n        <Translate label=\"format.currency\" options={{ value: { number: brokerageAmount, currency: premiumCurrency } }} />\r\n        {convertedBrokerage && (\r\n          <>\r\n            <br />\r\n            <Translate label=\"format.currency\" options={{ value: { number: convertedBrokerage.value, currency: 'GBP' } }} /> @\r\n            <Translate label=\"format.number\" options={{ value: { number: convertedBrokerage.rate, format: { trimMantissa: false } } }} />\r\n          </>\r\n        )}\r\n      </div>\r\n    );\r\n  }\r\n  return 0;\r\n};\r\n\r\nexport default DynamicValue;\r\n"]},"metadata":{},"sourceType":"module"}