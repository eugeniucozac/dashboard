{"ast":null,"code":"import * as utils from 'utils';\nimport { authLogout } from 'stores';\nexport var getMultipleContextDocuments = function getMultipleContextDocuments(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/dms.actions.getMultipleContextDocuments'\n    };\n    dispatch(getMultipleContextDocumentsRequest(params));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/list?srcApplication=BOTH\",\n      data: params\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getMultipleContextDocumentsSuccess(data.data));\n      return data;\n    }).catch(function (error) {\n      dispatch(getMultipleContextDocumentsFailure(error, defaultError));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    });\n  };\n};\nexport var getMultipleContextDocumentsRequest = function getMultipleContextDocumentsRequest(payload) {\n  return {\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_REQUEST',\n    payload: payload\n  };\n};\nexport var getMultipleContextDocumentsSuccess = function getMultipleContextDocumentsSuccess(data) {\n  return {\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_SUCCESS',\n    payload: data\n  };\n};\nexport var getMultipleContextDocumentsFailure = function getMultipleContextDocumentsFailure(error) {\n  return {\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.getMultipleContextDocuments.js"],"names":["utils","authLogout","getMultipleContextDocuments","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getMultipleContextDocumentsRequest","api","post","token","accessToken","dmsService","path","data","then","response","handleResponse","json","handleNewData","getMultipleContextDocumentsSuccess","catch","error","getMultipleContextDocumentsFailure","handleUnauthorized","payload","type"],"mappings":"AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,QAA2B,QAA3B;AAEA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC7E;AAD6E,oBAElBA,QAAQ,EAFU;AAAA,QAE7DC,IAF6D,aAErEC,IAFqE,CAE7DD,IAF6D;AAAA,QAEnCE,QAFmC,aAErDC,MAFqD,CAE3CC,IAF2C,CAEnCF,QAFmC;;AAI7E,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,kCAAkC,CAACV,MAAD,CAAnC,CAAR;AAEA,WAAOH,KAAK,CAACc,GAAN,CACJC,IADI,CACC;AACJC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADR;AAEJT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,UAFf;AAGJC,MAAAA,IAAI,yCAHA;AAIJC,MAAAA,IAAI,EAAEjB;AAJF,KADD,EAOJkB,IAPI,CAOC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACc,GAAN,CAAUS,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUxB,KAAK,CAACc,GAAN,CAAUW,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACD,IAAD,EAAU;AACdhB,MAAAA,QAAQ,CAACsB,kCAAkC,CAACN,IAAI,CAACA,IAAN,CAAnC,CAAR;AACA,aAAOA,IAAP;AACD,KAZI,EAaJO,KAbI,CAaE,UAACC,KAAD,EAAW;AAChBxB,MAAAA,QAAQ,CAACyB,kCAAkC,CAACD,KAAD,EAAQjB,YAAR,CAAnC,CAAR;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAUgB,kBAAV,CAA6BF,KAA7B,EAAoCxB,QAApC,EAA8CH,UAA9C;AACA,aAAO2B,KAAP;AACD,KAjBI,CAAP;AAkBD,GA5B0C;AAAA,CAApC;AA8BP,OAAO,IAAMf,kCAAkC,GAAG,SAArCA,kCAAqC,CAACkB,OAAD,EAAa;AAC7D,SAAO;AACLC,IAAAA,IAAI,EAAE,4CADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAML,kCAAkC,GAAG,SAArCA,kCAAqC,CAACN,IAAD,EAAU;AAC1D,SAAO;AACLY,IAAAA,IAAI,EAAE,4CADD;AAELD,IAAAA,OAAO,EAAEX;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMS,kCAAkC,GAAG,SAArCA,kCAAqC,CAACD,KAAD,EAAW;AAC3D,SAAO;AACLI,IAAAA,IAAI,EAAE,4CADD;AAELD,IAAAA,OAAO,EAAEH;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout } from 'stores';\r\n\r\nexport const getMultipleContextDocuments = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/dms.actions.getMultipleContextDocuments',\r\n  };\r\n\r\n  dispatch(getMultipleContextDocumentsRequest(params));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/list?srcApplication=BOTH`,\r\n      data: params,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getMultipleContextDocumentsSuccess(data.data));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(getMultipleContextDocumentsFailure(error, defaultError));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    });\r\n};\r\n\r\nexport const getMultipleContextDocumentsRequest = (payload) => {\r\n  return {\r\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getMultipleContextDocumentsSuccess = (data) => {\r\n  return {\r\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getMultipleContextDocumentsFailure = (error) => {\r\n  return {\r\n    type: 'DMS_GET_MULTIPLE_CONTEXT_DOCUMENTS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}