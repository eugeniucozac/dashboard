{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nimport { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\nimport * as utils from 'utils';\nexport var userCreate = function userCreate(user, setError) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/administration.actions.userCreate'\n    };\n    dispatch(userCreateRequest(user));\n    dispatch(addLoader('userCreate'));\n\n    if (!utils.generic.isValidObject(user)) {\n      dispatch(invalidUserCreateRequest(defaultError));\n      dispatch(enqueueNotification('notification.user.invalidRequest', 'error'));\n      dispatch(removeLoader('userCreate'));\n      dispatch(hideModal());\n      return;\n    }\n\n    var role = user.role,\n        departments = user.departments,\n        businessProcesses = user.businessProcesses,\n        team = user.team,\n        xbInstances = user.xbInstances,\n        groups = user.groups,\n        otherProps = _objectWithoutProperties(user, [\"role\", \"departments\", \"businessProcesses\", \"team\", \"xbInstances\", \"groups\"]);\n\n    var postBody = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, otherProps), role && {\n      role: parseInt(role)\n    }), departments && {\n      departments: departments.map(function (d) {\n        return d.id;\n      })\n    }), businessProcesses && {\n      businessProcesses: user.businessProcesses.map(function (bp) {\n        return bp.businessProcessID;\n      })\n    }), xbInstances && {\n      xbInstances: user.xbInstances.map(function (xbi) {\n        return xbi.sourceID;\n      })\n    }), groups && {\n      groups: user.groups.map(function (g) {\n        return g.id;\n      })\n    }), {}, {\n      organisation: 0\n    }, (team === null || team === void 0 ? void 0 : team[0]) && {\n      organisation: team[0]\n    });\n\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: 'api/users/',\n      data: postBody\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (data) {\n      dispatch(userCreateSuccess(data.data));\n      dispatch(enqueueNotification('notification.user.create.ok', 'success'));\n      dispatch(hideModal());\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(userCreateError(err));\n      if (err.response.status !== 400) dispatch(enqueueNotification('notification.user.create.fail', 'error'));\n      setError('emailId', {\n        type: 'manual',\n        message: utils.string.t('validation.emailAlreadyInUse')\n      });\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('userCreate'));\n    });\n  };\n};\nexport var userCreateRequest = function userCreateRequest(payload) {\n  return {\n    type: 'USER_CREATE_REQUEST',\n    payload: payload\n  };\n};\nexport var userCreateSuccess = function userCreateSuccess(payload) {\n  return {\n    type: 'ADMINISTRATION_USER_CREATE_SUCCESS',\n    payload: payload\n  };\n};\nexport var userCreateError = function userCreateError(error) {\n  return {\n    type: 'USER_CREATE_ERROR',\n    payload: error\n  };\n};\nexport var invalidUserCreateRequest = function invalidUserCreateRequest(error) {\n  return {\n    type: 'USER_CREATE_INVALID_REQUEST',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/administration/administration.actions.createUser.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","hideModal","utils","userCreate","user","setError","dispatch","getState","auth","endpoint","config","vars","defaultError","file","userCreateRequest","generic","isValidObject","invalidUserCreateRequest","role","departments","businessProcesses","team","xbInstances","groups","otherProps","postBody","parseInt","map","d","id","bp","businessProcessID","xbi","sourceID","g","organisation","api","post","token","accessToken","authService","path","data","then","response","handleResponse","handleNewData","userCreateSuccess","catch","err","handleError","handleUnauthorized","userCreateError","status","type","message","string","t","finally","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, removeLoader, enqueueNotification, hideModal } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const userCreate = (user, setError) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n  const defaultError = { file: 'stores/administration.actions.userCreate' };\r\n\r\n  dispatch(userCreateRequest(user));\r\n  dispatch(addLoader('userCreate'));\r\n\r\n  if (!utils.generic.isValidObject(user)) {\r\n    dispatch(invalidUserCreateRequest(defaultError));\r\n    dispatch(enqueueNotification('notification.user.invalidRequest', 'error'));\r\n    dispatch(removeLoader('userCreate'));\r\n    dispatch(hideModal());\r\n    return;\r\n  }\r\n\r\n  const { role, departments, businessProcesses, team, xbInstances, groups, ...otherProps } = user;\r\n  const postBody = {\r\n    ...otherProps,\r\n    ...(role && { role: parseInt(role) }),\r\n    ...(departments && { departments: departments.map((d) => d.id) }),\r\n    ...(businessProcesses && { businessProcesses: user.businessProcesses.map((bp) => bp.businessProcessID) }),\r\n    ...(xbInstances && { xbInstances: user.xbInstances.map((xbi) => xbi.sourceID) }),\r\n    ...(groups && { groups: user.groups.map((g) => g.id) }),\r\n    organisation: 0,\r\n    ...(team?.[0] && { organisation: team[0] }),\r\n  };\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: 'api/users/',\r\n      data: postBody,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => utils.api.handleNewData(data))\r\n    .then((data) => {\r\n      dispatch(userCreateSuccess(data.data));\r\n      dispatch(enqueueNotification('notification.user.create.ok', 'success'));\r\n      dispatch(hideModal());\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(userCreateError(err));\r\n      if (err.response.status !== 400) dispatch(enqueueNotification('notification.user.create.fail', 'error'));\r\n\r\n      setError('emailId', {\r\n        type: 'manual',\r\n        message: utils.string.t('validation.emailAlreadyInUse'),\r\n      });\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('userCreate'));\r\n    });\r\n};\r\n\r\nexport const userCreateRequest = (payload) => {\r\n  return {\r\n    type: 'USER_CREATE_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const userCreateSuccess = (payload) => {\r\n  return {\r\n    type: 'ADMINISTRATION_USER_CREATE_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const userCreateError = (error) => {\r\n  return {\r\n    type: 'USER_CREATE_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const invalidUserCreateRequest = (error) => {\r\n  return {\r\n    type: 'USER_CREATE_INVALID_REQUEST',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}