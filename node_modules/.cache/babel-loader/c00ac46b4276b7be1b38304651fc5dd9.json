{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nexport var postEditClaimDetailsInformation = function postEditClaimDetailsInformation(formData) {\n  return function (dispatch, getState) {\n    var _get, _get$items$, _get2, _referralValues$find, _referralResponse$fin, _formData$lossQualifi, _formData$lossQualifi2, _formData$settlementC, _formData$claimantNam, _formData$ugSections, _formData$ugSections2, _formData$priority, _formData$priority2, _formData$complexity, _formData$complexity2, _formData$complexity3, _formData$referral, _formData$complexity4, _formData$referral2, _formData$complexity5, _formData$rfiResponse, _formData$complexity6, _formData$rfiResponse2, _formData$bordereauPe, _formData$insured, _formData$client;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        user = _getState.user,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postEditClaimDetailsInformation'\n    };\n    dispatch(postEditClaimDetailsInformationRequest(formData));\n    dispatch(addLoader('postEditClaimDetailsInformation'));\n    var nowIsoString = utils.date.toISOString(new Date());\n    var assignedFullName = get(user, 'fullName');\n    var defaultValues = get(claims, 'allClaimDetails');\n    var claimantNames = get(claims, 'claimantNames');\n    var referralValues = get(claims, 'referralValues');\n    var referralResponse = get(claims, 'referralResponse');\n    var underWritingGroups = get(claims, 'underWritingGroups.items');\n    var newClaimants = claimantNames.filter(function (claimant) {\n      return typeof claimant.id === 'number';\n    }).map(function (claimant) {\n      return claimant.name;\n    });\n    var policyUnderWritingGroupDtoList = underWritingGroups.filter(function (ug) {\n      return ug.selected;\n    });\n    var selectedbeAdjuster = get(claims, 'beAdjuster.selectedbeAdjuster');\n    var beAdjusterID = (formData === null || formData === void 0 ? void 0 : formData.adjuster) === 'beAdjuster' ? selectedbeAdjuster === null || selectedbeAdjuster === void 0 ? void 0 : selectedbeAdjuster.id : null;\n    var nonBEAdjusterName = (formData === null || formData === void 0 ? void 0 : formData.adjuster) === 'nonBeAdjuster' ? formData.nonBeAdjuster : null;\n    var policyInterestID = (_get = get(claims, 'interest')) === null || _get === void 0 ? void 0 : (_get$items$ = _get.items[0]) === null || _get$items$ === void 0 ? void 0 : _get$items$.policyInterestID;\n    var claimSubmissionId = get(claims, 'claimData').claimId || '';\n    var claimStatusId = ((_get2 = get(claims, 'claimsInformation')) === null || _get2 === void 0 ? void 0 : _get2.claimStatusID) || '';\n    var referralValuesAssignedTo = (_referralValues$find = referralValues.find(function (item) {\n      return item.complexityRulesID === Number(formData.referral);\n    })) === null || _referralValues$find === void 0 ? void 0 : _referralValues$find.complexityRulesValue.includes('Assign to Myself');\n    var referralResponseAssignedTo = (_referralResponse$fin = referralResponse.find(function (item) {\n      return item.id === formData.rfiResponse;\n    })) === null || _referralResponse$fin === void 0 ? void 0 : _referralResponse$fin.description.includes('Assign to Myself');\n    var refRequired = 'Referral Required';\n\n    var addDateAndTime = function addDateAndTime(date, time) {\n      if (!date) return date;\n      var actualDate = new Date(utils.string.t('format.date', {\n        value: {\n          date: date,\n          format: 'D MMM YYYY'\n        }\n      }) + ' ' + (time ? time + ':00' : '00:00:00'));\n      return actualDate || date;\n    };\n\n    var data = _objectSpread(_objectSpread({}, defaultValues), {}, {\n      assignedTo: referralValuesAssignedTo || referralResponseAssignedTo ? assignedFullName : 'Unassigned',\n      basisOfOrder: (formData === null || formData === void 0 ? void 0 : formData.order) || '0',\n      claimID: claimSubmissionId,\n      adjusterName: formData.adjusterName,\n      adjusterReference: formData === null || formData === void 0 ? void 0 : formData.adjusterReference,\n      fgunarrative: formData === null || formData === void 0 ? void 0 : formData.fgunarrative,\n      location: formData.location,\n      lossQualifierID: (formData === null || formData === void 0 ? void 0 : (_formData$lossQualifi = formData.lossQualifierID) === null || _formData$lossQualifi === void 0 ? void 0 : _formData$lossQualifi.id) || '',\n      lossQualifierName: (formData === null || formData === void 0 ? void 0 : (_formData$lossQualifi2 = formData.lossQualifierID) === null || _formData$lossQualifi2 === void 0 ? void 0 : _formData$lossQualifi2.name) || '',\n      movementType: formData.movementType,\n      orderPercentage: formData.orderPercentage,\n      settlementCurrencyCode: formData === null || formData === void 0 ? void 0 : (_formData$settlementC = formData.settlementCurrencyCode) === null || _formData$settlementC === void 0 ? void 0 : _formData$settlementC.id,\n      newClaimants: newClaimants,\n      createdBy: user.id,\n      claimantName: (_formData$claimantNam = formData.claimantName) === null || _formData$claimantNam === void 0 ? void 0 : _formData$claimantNam.name,\n      createdDate: nowIsoString,\n      policySectionID: (formData === null || formData === void 0 ? void 0 : (_formData$ugSections = formData.ugSections) === null || _formData$ugSections === void 0 ? void 0 : _formData$ugSections.id) === constants.CLAIM_POLICY_SECTION_DEFAULT ? null : formData === null || formData === void 0 ? void 0 : (_formData$ugSections2 = formData.ugSections) === null || _formData$ugSections2 === void 0 ? void 0 : _formData$ugSections2.id,\n      //??\n      policyUnderWritingGroupDtoList: policyUnderWritingGroupDtoList,\n      updatedBy: user.id,\n      updatedDate: nowIsoString,\n      submittedDate: nowIsoString,\n      claimStatusID: claimStatusId,\n      lossFromDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.fromDate),\n      lossToDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.toDate),\n      priorityDescription: (formData === null || formData === void 0 ? void 0 : (_formData$priority = formData.priority) === null || _formData$priority === void 0 ? void 0 : _formData$priority.description) || 'Medium',\n      priorityID: (formData === null || formData === void 0 ? void 0 : (_formData$priority2 = formData.priority) === null || _formData$priority2 === void 0 ? void 0 : _formData$priority2.id) || 3,\n      beAdjusterID: beAdjusterID,\n      nonBEAdjusterName: nonBEAdjusterName,\n      policyInterestID: policyInterestID,\n      certificateExpiryDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.certificateExpiryDate),\n      certificateInceptionDate: utils.date.toISOString(formData === null || formData === void 0 ? void 0 : formData.certificateInceptionDate),\n      certificateNumber: formData === null || formData === void 0 ? void 0 : formData.certificateNumber,\n      complexityValueID: formData === null || formData === void 0 ? void 0 : (_formData$complexity = formData.complexity) === null || _formData$complexity === void 0 ? void 0 : _formData$complexity.complexityRulesID,\n      complexityValue: formData === null || formData === void 0 ? void 0 : (_formData$complexity2 = formData.complexity) === null || _formData$complexity2 === void 0 ? void 0 : _formData$complexity2.complexityRulesValue,\n      referralValueID: (formData === null || formData === void 0 ? void 0 : (_formData$complexity3 = formData.complexity) === null || _formData$complexity3 === void 0 ? void 0 : _formData$complexity3.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$referral = formData.referral) === null || _formData$referral === void 0 ? void 0 : _formData$referral.complexityRulesID : null,\n      referralValue: (formData === null || formData === void 0 ? void 0 : (_formData$complexity4 = formData.complexity) === null || _formData$complexity4 === void 0 ? void 0 : _formData$complexity4.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$referral2 = formData.referral) === null || _formData$referral2 === void 0 ? void 0 : _formData$referral2.complexityRulesValue : null,\n      referralResponseID: (formData === null || formData === void 0 ? void 0 : (_formData$complexity5 = formData.complexity) === null || _formData$complexity5 === void 0 ? void 0 : _formData$complexity5.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$rfiResponse = formData.rfiResponse) === null || _formData$rfiResponse === void 0 ? void 0 : _formData$rfiResponse.id : null,\n      referralResponseDescription: (formData === null || formData === void 0 ? void 0 : (_formData$complexity6 = formData.complexity) === null || _formData$complexity6 === void 0 ? void 0 : _formData$complexity6.complexityRulesValue) === refRequired ? formData === null || formData === void 0 ? void 0 : (_formData$rfiResponse2 = formData.rfiResponse) === null || _formData$rfiResponse2 === void 0 ? void 0 : _formData$rfiResponse2.description : null,\n      claimReceivedDate: addDateAndTime(formData === null || formData === void 0 ? void 0 : formData.claimReceivedDate, formData === null || formData === void 0 ? void 0 : formData.claimReceivedTime),\n      bordereauPeriod: (formData === null || formData === void 0 ? void 0 : (_formData$bordereauPe = formData.bordereauPeriod) === null || _formData$bordereauPe === void 0 ? void 0 : _formData$bordereauPe.id) || null,\n      bordereauClaim: (formData === null || formData === void 0 ? void 0 : formData.bordereauClaim) ? 1 : 0,\n      insuredID: parseInt(formData === null || formData === void 0 ? void 0 : (_formData$insured = formData.insured) === null || _formData$insured === void 0 ? void 0 : _formData$insured.id) || null,\n      clientID: parseInt(formData === null || formData === void 0 ? void 0 : (_formData$client = formData.client) === null || _formData$client === void 0 ? void 0 : _formData$client.id) || null\n    });\n\n    return utils.api.put({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/claims/\".concat(claimSubmissionId, \"/update\"),\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(postEditClaimDetailsInformationSuccess(data.data));\n      dispatch(enqueueNotification('notification.claimEditDetails.success', 'success'));\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\n      return data.data;\n    }).catch(function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API post error'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postEditClaimDetailsInformationFailure(err));\n      dispatch(enqueueNotification('notification.claimEditDetails.fail', 'error'));\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\n      return err;\n    });\n  };\n};\nexport var postEditClaimDetailsInformationRequest = function postEditClaimDetailsInformationRequest(data) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_REQUEST',\n    payload: data\n  };\n};\nexport var postEditClaimDetailsInformationSuccess = function postEditClaimDetailsInformationSuccess(responseData) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_SUCCESS',\n    payload: responseData\n  };\n};\nexport var postEditClaimDetailsInformationFailure = function postEditClaimDetailsInformationFailure(error) {\n  return {\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postEditClaimDetailsInformation.js"],"names":["get","authLogout","addLoader","enqueueNotification","removeLoader","utils","constants","postEditClaimDetailsInformation","formData","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","postEditClaimDetailsInformationRequest","nowIsoString","date","toISOString","Date","assignedFullName","defaultValues","claimantNames","referralValues","referralResponse","underWritingGroups","newClaimants","filter","claimant","id","map","name","policyUnderWritingGroupDtoList","ug","selected","selectedbeAdjuster","beAdjusterID","adjuster","nonBEAdjusterName","nonBeAdjuster","policyInterestID","items","claimSubmissionId","claimId","claimStatusId","claimStatusID","referralValuesAssignedTo","find","item","complexityRulesID","Number","referral","complexityRulesValue","includes","referralResponseAssignedTo","rfiResponse","description","refRequired","addDateAndTime","time","actualDate","string","t","value","format","data","assignedTo","basisOfOrder","order","claimID","adjusterName","adjusterReference","fgunarrative","location","lossQualifierID","lossQualifierName","movementType","orderPercentage","settlementCurrencyCode","createdBy","claimantName","createdDate","policySectionID","ugSections","CLAIM_POLICY_SECTION_DEFAULT","updatedBy","updatedDate","submittedDate","lossFromDate","fromDate","lossToDate","toDate","priorityDescription","priority","priorityID","certificateExpiryDate","certificateInceptionDate","certificateNumber","complexityValueID","complexity","complexityValue","referralValueID","referralValue","referralResponseID","referralResponseDescription","claimReceivedDate","claimReceivedTime","bordereauPeriod","bordereauClaim","insuredID","parseInt","insured","clientID","client","api","put","token","accessToken","claimService","path","then","response","handleResponse","json","handleNewData","postEditClaimDetailsInformationSuccess","catch","err","errorParams","message","handleError","handleUnauthorized","postEditClaimDetailsInformationFailure","type","payload","responseData","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\nimport { authLogout, addLoader, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport const postEditClaimDetailsInformation = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, user, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postEditClaimDetailsInformation',\r\n  };\r\n\r\n  dispatch(postEditClaimDetailsInformationRequest(formData));\r\n  dispatch(addLoader('postEditClaimDetailsInformation'));\r\n\r\n  const nowIsoString = utils.date.toISOString(new Date());\r\n\r\n  const assignedFullName = get(user, 'fullName');\r\n  const defaultValues = get(claims, 'allClaimDetails');\r\n  const claimantNames = get(claims, 'claimantNames');\r\n  const referralValues = get(claims, 'referralValues');\r\n  const referralResponse = get(claims, 'referralResponse');\r\n  const underWritingGroups = get(claims, 'underWritingGroups.items');\r\n  const newClaimants = claimantNames.filter((claimant) => typeof claimant.id === 'number').map((claimant) => claimant.name);\r\n  const policyUnderWritingGroupDtoList = underWritingGroups.filter((ug) => ug.selected);\r\n  const selectedbeAdjuster = get(claims, 'beAdjuster.selectedbeAdjuster');\r\n  const beAdjusterID = formData?.adjuster === 'beAdjuster' ? selectedbeAdjuster?.id : null;\r\n  const nonBEAdjusterName = formData?.adjuster === 'nonBeAdjuster' ? formData.nonBeAdjuster : null;\r\n  const policyInterestID = get(claims, 'interest')?.items[0]?.policyInterestID;\r\n  const claimSubmissionId = get(claims, 'claimData').claimId || '';\r\n  const claimStatusId = get(claims, 'claimsInformation')?.claimStatusID || '';\r\n\r\n  const referralValuesAssignedTo = referralValues\r\n    .find((item) => item.complexityRulesID === Number(formData.referral))\r\n    ?.complexityRulesValue.includes('Assign to Myself');\r\n\r\n  const referralResponseAssignedTo = referralResponse\r\n    .find((item) => item.id === formData.rfiResponse)\r\n    ?.description.includes('Assign to Myself');\r\n\r\n  const refRequired = 'Referral Required';\r\n  const addDateAndTime = (date, time) => {\r\n    if (!date) return date;\r\n    let actualDate = new Date(\r\n      utils.string.t('format.date', { value: { date: date, format: 'D MMM YYYY' } }) + ' ' + (time ? time + ':00' : '00:00:00')\r\n    );\r\n    return actualDate || date;\r\n  };\r\n\r\n  const data = {\r\n    ...defaultValues,\r\n    assignedTo: referralValuesAssignedTo || referralResponseAssignedTo ? assignedFullName : 'Unassigned',\r\n    basisOfOrder: formData?.order || '0',\r\n    claimID: claimSubmissionId,\r\n    adjusterName: formData.adjusterName,\r\n    adjusterReference: formData?.adjusterReference,\r\n    fgunarrative: formData?.fgunarrative,\r\n    location: formData.location,\r\n    lossQualifierID: formData?.lossQualifierID?.id || '',\r\n    lossQualifierName: formData?.lossQualifierID?.name || '',\r\n    movementType: formData.movementType,\r\n    orderPercentage: formData.orderPercentage,\r\n    settlementCurrencyCode: formData?.settlementCurrencyCode?.id,\r\n    newClaimants,\r\n    createdBy: user.id,\r\n    claimantName: formData.claimantName?.name,\r\n    createdDate: nowIsoString,\r\n    policySectionID: formData?.ugSections?.id === constants.CLAIM_POLICY_SECTION_DEFAULT ? null : formData?.ugSections?.id, //??\r\n    policyUnderWritingGroupDtoList,\r\n    updatedBy: user.id,\r\n    updatedDate: nowIsoString,\r\n    submittedDate: nowIsoString,\r\n    claimStatusID: claimStatusId,\r\n    lossFromDate: utils.date.toISOString(formData?.fromDate),\r\n    lossToDate: utils.date.toISOString(formData?.toDate),\r\n    priorityDescription: formData?.priority?.description || 'Medium',\r\n    priorityID: formData?.priority?.id || 3,\r\n    beAdjusterID,\r\n    nonBEAdjusterName,\r\n    policyInterestID,\r\n    certificateExpiryDate: utils.date.toISOString(formData?.certificateExpiryDate),\r\n    certificateInceptionDate: utils.date.toISOString(formData?.certificateInceptionDate),\r\n    certificateNumber: formData?.certificateNumber,\r\n    complexityValueID: formData?.complexity?.complexityRulesID,\r\n    complexityValue: formData?.complexity?.complexityRulesValue,\r\n    referralValueID: formData?.complexity?.complexityRulesValue === refRequired ? formData?.referral?.complexityRulesID : null,\r\n    referralValue: formData?.complexity?.complexityRulesValue === refRequired ? formData?.referral?.complexityRulesValue : null,\r\n    referralResponseID: formData?.complexity?.complexityRulesValue === refRequired ? formData?.rfiResponse?.id : null,\r\n    referralResponseDescription: formData?.complexity?.complexityRulesValue === refRequired ? formData?.rfiResponse?.description : null,\r\n    claimReceivedDate: addDateAndTime(formData?.claimReceivedDate, formData?.claimReceivedTime),\r\n    bordereauPeriod: formData?.bordereauPeriod?.id || null,\r\n    bordereauClaim: formData?.bordereauClaim ? 1 : 0,\r\n    insuredID: parseInt(formData?.insured?.id) || null,\r\n    clientID: parseInt(formData?.client?.id) || null,\r\n  };\r\n\r\n  return utils.api\r\n    .put({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/claims/${claimSubmissionId}/update`,\r\n      data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(postEditClaimDetailsInformationSuccess(data.data));\r\n      dispatch(enqueueNotification('notification.claimEditDetails.success', 'success'));\r\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API post error',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postEditClaimDetailsInformationFailure(err));\r\n      dispatch(enqueueNotification('notification.claimEditDetails.fail', 'error'));\r\n      dispatch(removeLoader('postEditClaimDetailsInformation'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postEditClaimDetailsInformationRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postEditClaimDetailsInformationSuccess = (responseData) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_SUCCESS',\r\n    payload: responseData,\r\n  };\r\n};\r\n\r\nexport const postEditClaimDetailsInformationFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_DETAILS_INFORMATION_UPDATE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}