{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DetailsCard\\\\DetailsCard.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { DetailCardView } from './DetailsCard.view';\nimport { enqueueNotification } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nDetailsCard.propTypes = {\n  title: PropTypes.node,\n  details: PropTypes.string,\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  isLoading: PropTypes.bool,\n  canCopyText: PropTypes.bool,\n  link: PropTypes.bool,\n  handleClick: PropTypes.func,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    title: PropTypes.string,\n    text: PropTypes.string\n  })\n};\nDetailsCard.defaultProps = {\n  width: '100%',\n  canCopyText: false,\n  isLoading: false,\n  handleClick: function handleClick() {},\n  nestedClasses: {}\n};\nexport function DetailsCard(_ref) {\n  _s();\n\n  var title = _ref.title,\n      details = _ref.details,\n      nestedClasses = _ref.nestedClasses,\n      link = _ref.link,\n      handleClick = _ref.handleClick,\n      width = _ref.width,\n      isLoading = _ref.isLoading,\n      canCopyText = _ref.canCopyText;\n  var dispatch = useDispatch();\n\n  var handleClipBoard = function handleClipBoard() {\n    if (navigator.clipboard !== undefined) {\n      //Chrome and other\n      navigator.clipboard.writeText(details).then(function () {\n        dispatch(enqueueNotification(\"Copied to clipboard successfully\", 'success'));\n      }, function (err) {\n        dispatch(enqueueNotification(err, 'error'));\n      });\n    } else if (window.clipboardData) {\n      // Internet Explorer\n      window.clipboardData.setData('Text', details);\n      dispatch(enqueueNotification(\"Copied to clipboard successfully\", 'success'));\n    }\n  }; // this function will be replaced in soon when POC is complete\n\n\n  return /*#__PURE__*/_jsxDEV(DetailCardView, {\n    title: title,\n    details: details,\n    isLoading: isLoading,\n    canCopyText: canCopyText,\n    width: width,\n    link: link,\n    handleClick: handleClick,\n    handleClipBoard: handleClipBoard,\n    nestedClasses: nestedClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 54,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DetailsCard, \"rgTLoBID190wEKCp9+G8W6F7A5M=\", false, function () {\n  return [useDispatch];\n});\n\n_c = DetailsCard;\nDetailsCard.displayName = \"DetailsCard\";\nDetailsCard.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"DetailsCard\",\n  \"props\": {\n    \"width\": {\n      \"defaultValue\": {\n        \"value\": \"'100%'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"canCopyText\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClick\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"title\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"text\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"title\": {\n      \"type\": {\n        \"name\": \"node\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"details\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"link\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default DetailsCard;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\DetailsCard\\\\DetailsCard.js\"] = {\n    name: \"DetailsCard\",\n    docgenInfo: DetailsCard.__docgenInfo,\n    path: \"src\\\\modules\\\\DetailsCard\\\\DetailsCard.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"DetailsCard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DetailsCard/DetailsCard.js"],"names":["React","PropTypes","useDispatch","DetailCardView","enqueueNotification","DetailsCard","propTypes","title","node","details","string","width","oneOfType","number","isLoading","bool","canCopyText","link","handleClick","func","nestedClasses","shape","root","text","defaultProps","dispatch","handleClipBoard","navigator","clipboard","undefined","writeText","then","err","window","clipboardData","setData"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { DetailCardView } from './DetailsCard.view';\r\nimport { enqueueNotification } from 'stores';\r\n\r\nDetailsCard.propTypes = {\r\n  title: PropTypes.node,\r\n  details: PropTypes.string,\r\n  width: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n  isLoading: PropTypes.bool,\r\n  canCopyText: PropTypes.bool,\r\n  link: PropTypes.bool,\r\n  handleClick: PropTypes.func,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    title: PropTypes.string,\r\n    text: PropTypes.string,\r\n  }),\r\n};\r\n\r\nDetailsCard.defaultProps = {\r\n  width: '100%',\r\n  canCopyText: false,\r\n  isLoading: false,\r\n  handleClick: () => {},\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function DetailsCard({ title, details, nestedClasses, link, handleClick, width, isLoading, canCopyText }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const handleClipBoard = () => {\r\n    if (navigator.clipboard !== undefined) {\r\n      //Chrome and other\r\n      navigator.clipboard.writeText(details).then(\r\n        function () {\r\n          dispatch(enqueueNotification(`Copied to clipboard successfully`, 'success'));\r\n        },\r\n        function (err) {\r\n          dispatch(enqueueNotification(err, 'error'));\r\n        }\r\n      );\r\n    } else if (window.clipboardData) {\r\n      // Internet Explorer\r\n      window.clipboardData.setData('Text', details);\r\n      dispatch(enqueueNotification(`Copied to clipboard successfully`, 'success'));\r\n    }\r\n  }; // this function will be replaced in soon when POC is complete\r\n\r\n  return (\r\n    <DetailCardView\r\n      title={title}\r\n      details={details}\r\n      isLoading={isLoading}\r\n      canCopyText={canCopyText}\r\n      width={width}\r\n      link={link}\r\n      handleClick={handleClick}\r\n      handleClipBoard={handleClipBoard}\r\n      nestedClasses={nestedClasses}\r\n    />\r\n  );\r\n}\r\n\r\nexport default DetailsCard;\r\n"]},"metadata":{},"sourceType":"module"}