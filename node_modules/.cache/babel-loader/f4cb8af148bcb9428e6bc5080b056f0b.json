{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { authLogout, resetRiskSelected } from 'stores';\nimport * as utils from 'utils';\nexport var getDraftList = function getDraftList(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getDraftList'\n    };\n    var state = getState();\n    var prevQuery = get(state, 'risk.draftlist.query') || '';\n    var isNewQuery = params && params.hasOwnProperty('query');\n    var newQuery = isNewQuery ? params.query : prevQuery;\n    var paramsSize = params && params.size || get(state, 'risk.draftList.pageSize');\n    var paramsOrderBy = params && params.orderBy || get(state, 'risk.draftList.sortBy');\n    var paramsDirection = params && params.direction || get(state, 'risk.draftList.sortDirection');\n\n    var endpointParams = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      page: params && params.page || 1\n    }, paramsSize && {\n      size: paramsSize\n    }), paramsOrderBy && {\n      orderBy: paramsOrderBy\n    }), paramsDirection && {\n      direction: paramsDirection\n    }), newQuery && {\n      query: newQuery\n    });\n\n    dispatch(getDraftListRequest(endpointParams));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: 'api/v1/risks/drafts',\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleResponseJsonObject(json, 'content');\n    }).then(function (data) {\n      dispatch(getDraftListSuccess(data));\n      dispatch(resetRiskSelected());\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getDraftListFailure(err));\n      return err;\n    });\n  };\n};\nexport var getDraftListRequest = function getDraftListRequest(params) {\n  return {\n    type: 'DRAFT_LIST_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getDraftListSuccess = function getDraftListSuccess(data) {\n  return {\n    type: 'DRAFT_LIST_GET_SUCCESS',\n    payload: {\n      content: data.content,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getDraftListFailure = function getDraftListFailure(error) {\n  return {\n    type: 'DRAFT_LIST_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getDraftList.js"],"names":["get","authLogout","resetRiskSelected","utils","getDraftList","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","state","prevQuery","isNewQuery","hasOwnProperty","newQuery","query","paramsSize","size","paramsOrderBy","orderBy","paramsDirection","direction","endpointParams","page","getDraftListRequest","api","token","accessToken","path","then","response","handleResponse","json","handleResponseJsonObject","data","getDraftListSuccess","err","handleError","handleUnauthorized","getDraftListFailure","type","payload","content","pagination","error"],"mappings":";AAAA,OAAOA,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,iBAArB,QAA8C,QAA9C;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC9D;AAD8D,oBAELA,QAAQ,EAFH;AAAA,QAE9CC,IAF8C,aAEtDC,IAFsD,CAE9CD,IAF8C;AAAA,QAEpBE,QAFoB,aAEtCC,MAFsC,CAE5BC,IAF4B,CAEpBF,QAFoB;;AAI9D,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIA,QAAMC,KAAK,GAAGR,QAAQ,EAAtB;AACA,QAAMS,SAAS,GAAGhB,GAAG,CAACe,KAAD,EAAQ,sBAAR,CAAH,IAAsC,EAAxD;AACA,QAAME,UAAU,GAAGZ,MAAM,IAAIA,MAAM,CAACa,cAAP,CAAsB,OAAtB,CAA7B;AACA,QAAMC,QAAQ,GAAGF,UAAU,GAAGZ,MAAM,CAACe,KAAV,GAAkBJ,SAA7C;AAEA,QAAMK,UAAU,GAAIhB,MAAM,IAAIA,MAAM,CAACiB,IAAlB,IAA2BtB,GAAG,CAACe,KAAD,EAAQ,yBAAR,CAAjD;AACA,QAAMQ,aAAa,GAAIlB,MAAM,IAAIA,MAAM,CAACmB,OAAlB,IAA8BxB,GAAG,CAACe,KAAD,EAAQ,uBAAR,CAAvD;AACA,QAAMU,eAAe,GAAIpB,MAAM,IAAIA,MAAM,CAACqB,SAAlB,IAAgC1B,GAAG,CAACe,KAAD,EAAQ,8BAAR,CAA3D;;AAEA,QAAMY,cAAc;AAClBC,MAAAA,IAAI,EAAGvB,MAAM,IAAIA,MAAM,CAACuB,IAAlB,IAA2B;AADf,OAEdP,UAAU,IAAI;AAAEC,MAAAA,IAAI,EAAED;AAAR,KAFA,GAGdE,aAAa,IAAI;AAAEC,MAAAA,OAAO,EAAED;AAAX,KAHH,GAIdE,eAAe,IAAI;AAAEC,MAAAA,SAAS,EAAED;AAAb,KAJL,GAKdN,QAAQ,IAAI;AAAEC,MAAAA,KAAK,EAAED;AAAT,KALE,CAApB;;AAQAb,IAAAA,QAAQ,CAACuB,mBAAmB,CAACF,cAAD,CAApB,CAAR;AAEA,WAAOxB,KAAK,CAAC2B,GAAN,CACJ9B,GADI,CACA;AACH+B,MAAAA,KAAK,EAAEvB,IAAI,CAACwB,WADT;AAEHtB,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHyB,MAAAA,IAAI,EAAE,qBAHH;AAIH5B,MAAAA,MAAM,EAAEsB;AAJL,KADA,EAOJO,IAPI,CAOC,UAACC,QAAD;AAAA,aAAchC,KAAK,CAAC2B,GAAN,CAAUM,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAPD,EAQJD,IARI,CAQC,UAACG,IAAD;AAAA,aAAUlC,KAAK,CAAC2B,GAAN,CAAUQ,wBAAV,CAAmCD,IAAnC,EAAyC,SAAzC,CAAV;AAAA,KARD,EASJH,IATI,CASC,UAACK,IAAD,EAAU;AACdjC,MAAAA,QAAQ,CAACkC,mBAAmB,CAACD,IAAD,CAApB,CAAR;AACAjC,MAAAA,QAAQ,CAACJ,iBAAiB,EAAlB,CAAR;AACD,KAZI,WAaE,UAACuC,GAAD,EAAS;AACdtC,MAAAA,KAAK,CAAC2B,GAAN,CAAUY,WAAV,CAAsBD,GAAtB,EAA2B5B,YAA3B;AACAV,MAAAA,KAAK,CAAC2B,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCnC,QAAlC,EAA4CL,UAA5C;AACAK,MAAAA,QAAQ,CAACsC,mBAAmB,CAACH,GAAD,CAApB,CAAR;AACA,aAAOA,GAAP;AACD,KAlBI,CAAP;AAmBD,GA9C2B;AAAA,CAArB;AAgDP,OAAO,IAAMZ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACxB,MAAD,EAAY;AAC7C,SAAO;AACLwC,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEzC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMmC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACD,IAAD,EAAU;AAC3C,SAAO;AACLM,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAE;AACPC,MAAAA,OAAO,EAAER,IAAI,CAACQ,OADP;AAEPC,MAAAA,UAAU,EAAET,IAAI,CAACS;AAFV;AAFJ,GAAP;AAOD,CARM;AAUP,OAAO,IAAMJ,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACK,KAAD,EAAW;AAC5C,SAAO;AACLJ,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEG;AAFJ,GAAP;AAID,CALM","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { authLogout, resetRiskSelected } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getDraftList = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getDraftList',\r\n  };\r\n\r\n  const state = getState();\r\n  const prevQuery = get(state, 'risk.draftlist.query') || '';\r\n  const isNewQuery = params && params.hasOwnProperty('query');\r\n  const newQuery = isNewQuery ? params.query : prevQuery;\r\n\r\n  const paramsSize = (params && params.size) || get(state, 'risk.draftList.pageSize');\r\n  const paramsOrderBy = (params && params.orderBy) || get(state, 'risk.draftList.sortBy');\r\n  const paramsDirection = (params && params.direction) || get(state, 'risk.draftList.sortDirection');\r\n\r\n  const endpointParams = {\r\n    page: (params && params.page) || 1,\r\n    ...(paramsSize && { size: paramsSize }),\r\n    ...(paramsOrderBy && { orderBy: paramsOrderBy }),\r\n    ...(paramsDirection && { direction: paramsDirection }),\r\n    ...(newQuery && { query: newQuery }),\r\n  };\r\n\r\n  dispatch(getDraftListRequest(endpointParams));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: 'api/v1/risks/drafts',\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleResponseJsonObject(json, 'content'))\r\n    .then((data) => {\r\n      dispatch(getDraftListSuccess(data));\r\n      dispatch(resetRiskSelected());\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getDraftListFailure(err));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getDraftListRequest = (params) => {\r\n  return {\r\n    type: 'DRAFT_LIST_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getDraftListSuccess = (data) => {\r\n  return {\r\n    type: 'DRAFT_LIST_GET_SUCCESS',\r\n    payload: {\r\n      content: data.content,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getDraftListFailure = (error) => {\r\n  return {\r\n    type: 'DRAFT_LIST_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}