{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ConfigLoader\\\\ConfigLoader.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './ConfigLoader.styles';\nimport { Button, Loader, Logo, Translate } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Grid, Paper } from '@material-ui/core';\nimport { Alert } from '@material-ui/lab';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nConfigLoaderView.propTypes = {\n  isLoading: PropTypes.bool,\n  hasConfig: PropTypes.bool\n};\nexport function ConfigLoaderView(_ref) {\n  var isLoading = _ref.isLoading,\n      hasConfig = _ref.hasConfig,\n      children = _ref.children;\n  var classes = makeStyles(styles, {\n    name: 'ConfigLoader'\n  })();\n\n  if (isLoading) {\n    return /*#__PURE__*/_jsxDEV(Loader, {\n      label: utils.string.t('app.configuring')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 12\n    }, this);\n  } else {\n    if (hasConfig) {\n      return children;\n    } else {\n      return /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        justifyContent: \"center\",\n        alignItems: \"center\",\n        className: classes.grid,\n        children: /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          children: /*#__PURE__*/_jsxDEV(Paper, {\n            elevation: 1,\n            className: classes.paper,\n            children: [/*#__PURE__*/_jsxDEV(Logo, {\n              height: 60,\n              className: classes.logo,\n              \"data-testid\": \"edge-logo\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 31,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: -2,\n              mb: 3,\n              children: /*#__PURE__*/_jsxDEV(Alert, {\n                severity: \"warning\",\n                icon: false,\n                children: /*#__PURE__*/_jsxDEV(Translate, {\n                  label: \"notification.loadConfig.fail\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 34,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 33,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              color: \"primary\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: \"app.tryAgain\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 37,\n                columnNumber: 45\n              }, this),\n              onClick: function onClick() {\n                return window.location.reload();\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 37,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 30,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 29,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 28,\n        columnNumber: 9\n      }, this);\n    }\n  }\n}\n_c = ConfigLoaderView;\nConfigLoaderView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ConfigLoaderView\",\n  \"props\": {\n    \"isLoading\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"hasConfig\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\ConfigLoader\\\\ConfigLoader.view.js\"] = {\n    name: \"ConfigLoaderView\",\n    docgenInfo: ConfigLoaderView.__docgenInfo,\n    path: \"src\\\\modules\\\\ConfigLoader\\\\ConfigLoader.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ConfigLoaderView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ConfigLoader/ConfigLoader.view.js"],"names":["React","PropTypes","styles","Button","Loader","Logo","Translate","utils","makeStyles","Box","Grid","Paper","Alert","ConfigLoaderView","propTypes","isLoading","bool","hasConfig","children","classes","name","string","t","grid","paper","logo","window","location","reload"],"mappings":";AAAA,OAAOA,KAAP,MAAkB,OAAlB;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,uBAAnB;AACA,SAASC,MAAT,EAAiBC,MAAjB,EAAyBC,IAAzB,EAA+BC,SAA/B,QAAgD,YAAhD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB,C,CAEA;;AACA,SAASC,UAAT,EAAqBC,GAArB,EAA0BC,IAA1B,EAAgCC,KAAhC,QAA6C,mBAA7C;AACA,SAASC,KAAT,QAAsB,kBAAtB;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,SAAS,EAAEd,SAAS,CAACe,IADM;AAE3BC,EAAAA,SAAS,EAAEhB,SAAS,CAACe;AAFM,CAA7B;AAKA,OAAO,SAASH,gBAAT,OAA8D;AAAA,MAAlCE,SAAkC,QAAlCA,SAAkC;AAAA,MAAvBE,SAAuB,QAAvBA,SAAuB;AAAA,MAAZC,QAAY,QAAZA,QAAY;AACnE,MAAMC,OAAO,GAAGX,UAAU,CAACN,MAAD,EAAS;AAAEkB,IAAAA,IAAI,EAAE;AAAR,GAAT,CAAV,EAAhB;;AAEA,MAAIL,SAAJ,EAAe;AACb,wBAAO,QAAC,MAAD;AAAQ,MAAA,KAAK,EAAER,KAAK,CAACc,MAAN,CAAaC,CAAb,CAAe,iBAAf;AAAf;AAAA;AAAA;AAAA;AAAA,YAAP;AACD,GAFD,MAEO;AACL,QAAIL,SAAJ,EAAe;AACb,aAAOC,QAAP;AACD,KAFD,MAEO;AACL,0BACE,QAAC,IAAD;AAAM,QAAA,SAAS,MAAf;AAAgB,QAAA,cAAc,EAAC,QAA/B;AAAwC,QAAA,UAAU,EAAC,QAAnD;AAA4D,QAAA,SAAS,EAAEC,OAAO,CAACI,IAA/E;AAAA,+BACE,QAAC,IAAD;AAAM,UAAA,IAAI,MAAV;AAAW,UAAA,EAAE,EAAE,EAAf;AAAA,iCACE,QAAC,KAAD;AAAO,YAAA,SAAS,EAAE,CAAlB;AAAqB,YAAA,SAAS,EAAEJ,OAAO,CAACK,KAAxC;AAAA,oCACE,QAAC,IAAD;AAAM,cAAA,MAAM,EAAE,EAAd;AAAkB,cAAA,SAAS,EAAEL,OAAO,CAACM,IAArC;AAA2C,6BAAY;AAAvD;AAAA;AAAA;AAAA;AAAA,oBADF,eAEE,QAAC,GAAD;AAAK,cAAA,EAAE,EAAE,CAAC,CAAV;AAAa,cAAA,EAAE,EAAE,CAAjB;AAAA,qCACE,QAAC,KAAD;AAAO,gBAAA,QAAQ,EAAC,SAAhB;AAA0B,gBAAA,IAAI,EAAE,KAAhC;AAAA,uCACE,QAAC,SAAD;AAAW,kBAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,oBAFF,eAOE,QAAC,MAAD;AAAQ,cAAA,KAAK,EAAC,SAAd;AAAwB,cAAA,IAAI,eAAE,QAAC,SAAD;AAAW,gBAAA,KAAK,EAAC;AAAjB;AAAA;AAAA;AAAA;AAAA,sBAA9B;AAAkE,cAAA,OAAO,EAAE;AAAA,uBAAMC,MAAM,CAACC,QAAP,CAAgBC,MAAhB,EAAN;AAAA;AAA3E;AAAA;AAAA;AAAA;AAAA,oBAPF;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,cADF;AAeD;AACF;AACF;KA1Bef,gB","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './ConfigLoader.styles';\r\nimport { Button, Loader, Logo, Translate } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid, Paper } from '@material-ui/core';\r\nimport { Alert } from '@material-ui/lab';\r\n\r\nConfigLoaderView.propTypes = {\r\n  isLoading: PropTypes.bool,\r\n  hasConfig: PropTypes.bool,\r\n};\r\n\r\nexport function ConfigLoaderView({ isLoading, hasConfig, children }) {\r\n  const classes = makeStyles(styles, { name: 'ConfigLoader' })();\r\n\r\n  if (isLoading) {\r\n    return <Loader label={utils.string.t('app.configuring')} />;\r\n  } else {\r\n    if (hasConfig) {\r\n      return children;\r\n    } else {\r\n      return (\r\n        <Grid container justifyContent=\"center\" alignItems=\"center\" className={classes.grid}>\r\n          <Grid item xs={12}>\r\n            <Paper elevation={1} className={classes.paper}>\r\n              <Logo height={60} className={classes.logo} data-testid=\"edge-logo\" />\r\n              <Box mt={-2} mb={3}>\r\n                <Alert severity=\"warning\" icon={false}>\r\n                  <Translate label=\"notification.loadConfig.fail\" />\r\n                </Alert>\r\n              </Box>\r\n              <Button color=\"primary\" text={<Translate label=\"app.tryAgain\" />} onClick={() => window.location.reload()} />\r\n            </Paper>\r\n          </Grid>\r\n        </Grid>\r\n      );\r\n    }\r\n  }\r\n}\r\n"]},"metadata":{},"sourceType":"module"}