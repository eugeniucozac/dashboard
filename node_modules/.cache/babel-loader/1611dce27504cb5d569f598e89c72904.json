{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossActionTable\\\\LossActionTableRow.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react'; //app\n\nimport styles from './LossActionTable.styles';\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\nimport { TableRowHeader } from 'modules';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function LossActionTableRowView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var data = _ref.data,\n      columnProps = _ref.columnProps;\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      isOpen = _useState2[0],\n      setIsOpen = _useState2[1];\n\n  var classes = makeStyles(styles, {\n    name: 'LossActionTable'\n  })({\n    expanded: isOpen\n  });\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(TableRowHeader, {\n      title: \"Claim UA13798A01\",\n      subtitle: \"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\",\n      expanded: isOpen,\n      setIsOpen: setIsOpen,\n      children: data.claimsItems.map(function (item, idx) {\n        return /*#__PURE__*/_jsxDEV(TableRow, {\n          className: classes.row,\n          \"data-testid\": \"search-row-\".concat(item.actionId),\n          hover: true,\n          children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actionId')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.actionId),\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              text: \"\".concat(item.actionId, \"7685437547734567\"),\n              color: \"secondary\",\n              onClick: function onClick() {}\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 29,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 28,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('name')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.name),\n            children: /*#__PURE__*/_jsxDEV(Chip, {\n              label: item.name,\n              size: \"small\",\n              type: \"error\",\n              color: \"primary\",\n              variant: \"outlined\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 32,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 31,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.description),\n            children: item.description\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 40,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.team),\n            children: item.team\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 43,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignedTo')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.assignedTo),\n            children: item.assignedTo\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 46,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdDate')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.createdDate),\n            children: utils.string.t('format.date', {\n              value: {\n                date: item === null || item === void 0 ? void 0 : item.createdDate,\n                format: config.ui.format.date.textTime\n              }\n            })\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDate')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.targetDate),\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"body2\",\n              color: \"error\",\n              children: utils.string.t('format.date', {\n                value: {\n                  date: item === null || item === void 0 ? void 0 : item.targetDate,\n                  format: config.ui.format.date.text\n                }\n              })\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 55,\n              columnNumber: 15\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 54,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.priority),\n            children: item.priority\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.status),\n            children: (item === null || item === void 0 ? void 0 : item.status) && /*#__PURE__*/_jsxDEV(Status, {\n              size: \"sm\",\n              text: /*#__PURE__*/_jsxDEV(Translate, {\n                label: item === null || item === void 0 ? void 0 : item.status\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 65,\n                columnNumber: 56\n              }, _this),\n              status: (item === null || item === void 0 ? void 0 : item.status) === \"Completed\" ? 'success' : 'error'\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 32\n            }, _this)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('insured')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.insured),\n            children: item.insured\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('division')), {}, {\n            \"data-testid\": \"row-col-\".concat(item.division),\n            children: item.division\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 13\n          }, _this)]\n        }, item.claimID, true, {\n          fileName: _jsxFileName,\n          lineNumber: 27,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 20,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n\n_s(LossActionTableRowView, \"+sus0Lb0ewKHdwiUhiTAJFoFyQ0=\");\n\n_c = LossActionTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossActionTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossActionTable/LossActionTableRow.view.js"],"names":["React","useState","styles","TableCell","Status","Translate","Chip","Link","TableRowHeader","utils","config","makeStyles","TableRow","Typography","LossActionTableRowView","data","columnProps","isOpen","setIsOpen","classes","name","expanded","claimsItems","map","item","idx","row","actionId","description","team","assignedTo","createdDate","string","t","value","date","format","ui","textTime","targetDate","text","priority","status","insured","division","claimID"],"mappings":"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","sourcesContent":["import React, {useState} from 'react';\r\n\r\n//app\r\nimport styles from './LossActionTable.styles';\r\nimport { TableCell, Status, Translate, Chip, Link } from 'components';\r\nimport { TableRowHeader } from 'modules';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport { makeStyles, TableRow, Typography } from '@material-ui/core';\r\n\r\nexport function LossActionTableRowView({ data, columnProps}) {\r\n  const [isOpen, setIsOpen] = useState(false);\r\n  const classes = makeStyles(styles, { name: 'LossActionTable' })({ expanded: isOpen });\r\n\r\n  return (\r\n    <>\r\n    \r\n      <TableRowHeader \r\n        title=\"Claim UA13798A01\"\r\n        subtitle=\"International Energy - Plant, Machinery and Equipment - Terraseis 1040 Limited\"\r\n        expanded={isOpen}\r\n        setIsOpen={setIsOpen}\r\n      >\r\n        {data.claimsItems.map((item, idx) => \r\n          <TableRow className={classes.row} key={item.claimID} data-testid={`search-row-${item.actionId}`} hover>\r\n            <TableCell {...columnProps('actionId')} data-testid={`row-col-${item.actionId}`}>\r\n              <Link text={`${item.actionId}7685437547734567`} color=\"secondary\" onClick={() => {}} />\r\n            </TableCell>\r\n            <TableCell {...columnProps('name')} data-testid={`row-col-${item.name}`}>\r\n              <Chip\r\n                label={item.name}\r\n                size=\"small\"\r\n                type=\"error\"\r\n                color='primary'\r\n                variant=\"outlined\"\r\n              />\r\n            </TableCell>\r\n            <TableCell {...columnProps('description')} data-testid={`row-col-${item.description}`}>\r\n              {item.description}\r\n            </TableCell>\r\n            <TableCell {...columnProps('team')} data-testid={`row-col-${item.team}`}>\r\n              {item.team}\r\n            </TableCell>\r\n            <TableCell {...columnProps('assignedTo')} data-testid={`row-col-${item.assignedTo}`}>\r\n              {item.assignedTo}\r\n            </TableCell>\r\n            <TableCell {...columnProps('createdDate')} data-testid={`row-col-${item.createdDate}`}>\r\n              {utils.string.t('format.date', {\r\n                value: { date: item?.createdDate, format: config.ui.format.date.textTime },\r\n              })}\r\n            </TableCell>\r\n            <TableCell {...columnProps('targetDate')} data-testid={`row-col-${item.targetDate}`}>\r\n              <Typography variant=\"body2\" color=\"error\">\r\n                {utils.string.t('format.date', {\r\n                  value: { date: item?.targetDate, format: config.ui.format.date.text },\r\n                })}\r\n              </Typography>\r\n            </TableCell>\r\n            <TableCell {...columnProps('priority')} data-testid={`row-col-${item.priority}`}>\r\n              {item.priority}\r\n            </TableCell>\r\n            <TableCell {...columnProps('status')} data-testid={`row-col-${item.status}`}>\r\n              {item?.status && <Status size=\"sm\" text={<Translate label={item?.status} />} status={item?.status === \"Completed\" ? 'success' : 'error'} />}\r\n            </TableCell>\r\n            <TableCell {...columnProps('insured')} data-testid={`row-col-${item.insured}`}>\r\n              {item.insured}\r\n            </TableCell>\r\n            <TableCell {...columnProps('division')} data-testid={`row-col-${item.division}`}>\r\n              {item.division}\r\n            </TableCell>\r\n          </TableRow>\r\n        )}\r\n      </TableRowHeader>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}