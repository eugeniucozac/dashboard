{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\n// app\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var deleteSingleNotification = function deleteSingleNotification(userNotificationId, userId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/notification.actions.deleteSingleNotification'\n    };\n    dispatch(deleteSingleNotificationRequest(userId));\n    dispatch(addLoader('deleteSingleNotification'));\n\n    if (!userNotificationId || !userId) {\n      dispatch(deleteSingleNotificationFailure(defaultError));\n      dispatch(removeLoader('deleteSingleNotification'));\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.notificationService,\n      path: \"user?userNotificationId=\".concat(userNotificationId, \"&userId=\").concat(userId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(deleteSingleNotificationSuccess(data));\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(deleteSingleNotificationFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('deleteSingleNotification'));\n    });\n  };\n};\nexport var deleteSingleNotificationRequest = function deleteSingleNotificationRequest(userId) {\n  return {\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_REQUEST',\n    userId: userId\n  };\n};\nexport var deleteSingleNotificationSuccess = function deleteSingleNotificationSuccess(data) {\n  return {\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_SUCCESS',\n    data: data\n  };\n};\nexport var deleteSingleNotificationFailure = function deleteSingleNotificationFailure(error) {\n  return {\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/notification/notification.actions.deleteSingleNotification.js"],"names":["authLogout","addLoader","removeLoader","utils","deleteSingleNotification","userNotificationId","userId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","deleteSingleNotificationRequest","deleteSingleNotificationFailure","api","token","accessToken","notificationService","path","then","response","handleResponse","json","handleNewData","data","deleteSingleNotificationSuccess","err","handleError","handleUnauthorized","type","error","payload"],"mappings":";AAAA;AACA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,kBAAD,EAAqBC,MAArB;AAAA,SAAgC,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC9F;AAD8F,oBAErCA,QAAQ,EAF6B;AAAA,QAE9EC,IAF8E,aAEtFC,IAFsF,CAE9ED,IAF8E;AAAA,QAEpDE,QAFoD,aAEtEC,MAFsE,CAE5DC,IAF4D,CAEpDF,QAFoD;;AAI9F,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,+BAA+B,CAACV,MAAD,CAAhC,CAAR;AACAC,IAAAA,QAAQ,CAACN,SAAS,CAAC,0BAAD,CAAV,CAAR;;AAEA,QAAI,CAACI,kBAAD,IAAuB,CAACC,MAA5B,EAAoC;AAClCC,MAAAA,QAAQ,CAACU,+BAA+B,CAACH,YAAD,CAAhC,CAAR;AACAP,MAAAA,QAAQ,CAACL,YAAY,CAAC,0BAAD,CAAb,CAAR;AACD;;AAED,WAAOC,KAAK,CAACe,GAAN,WACG;AACNC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADN;AAENT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,mBAFb;AAGNC,MAAAA,IAAI,oCAA6BjB,kBAA7B,qBAA0DC,MAA1D;AAHE,KADH,EAMJiB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACe,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUvB,KAAK,CAACe,GAAN,CAAUS,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,+BAA+B,CAACD,IAAD,CAAhC,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACd3B,MAAAA,KAAK,CAACe,GAAN,CAAUa,WAAV,CAAsBD,GAAtB,EAA2BhB,YAA3B;AACAX,MAAAA,KAAK,CAACe,GAAN,CAAUc,kBAAV,CAA6BF,GAA7B,EAAkCvB,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACU,+BAA+B,CAACa,GAAD,CAAhC,CAAR;AACA,aAAOA,GAAP;AACD,KAjBI,aAkBI,YAAM;AACbvB,MAAAA,QAAQ,CAACL,YAAY,CAAC,0BAAD,CAAb,CAAR;AACD,KApBI,CAAP;AAqBD,GArCuC;AAAA,CAAjC;AAuCP,OAAO,IAAMc,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACV,MAAD,EAAY;AACzD,SAAO;AACL2B,IAAAA,IAAI,EAAE,iDADD;AAEL3B,IAAAA,MAAM,EAANA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMuB,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACD,IAAD,EAAU;AACvD,SAAO;AACLK,IAAAA,IAAI,EAAE,iDADD;AAELL,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMX,+BAA+B,GAAG,SAAlCA,+BAAkC,CAACiB,KAAD,EAAW;AACxD,SAAO;AACLD,IAAAA,IAAI,EAAE,iDADD;AAELE,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM","sourcesContent":["// app\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deleteSingleNotification = (userNotificationId, userId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/notification.actions.deleteSingleNotification',\r\n  };\r\n\r\n  dispatch(deleteSingleNotificationRequest(userId));\r\n  dispatch(addLoader('deleteSingleNotification'));\r\n\r\n  if (!userNotificationId || !userId) {\r\n    dispatch(deleteSingleNotificationFailure(defaultError));\r\n    dispatch(removeLoader('deleteSingleNotification'));\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.notificationService,\r\n      path: `user?userNotificationId=${userNotificationId}&userId=${userId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(deleteSingleNotificationSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(deleteSingleNotificationFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('deleteSingleNotification'));\r\n    });\r\n};\r\n\r\nexport const deleteSingleNotificationRequest = (userId) => {\r\n  return {\r\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_REQUEST',\r\n    userId,\r\n  };\r\n};\r\n\r\nexport const deleteSingleNotificationSuccess = (data) => {\r\n  return {\r\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_SUCCESS',\r\n    data,\r\n  };\r\n};\r\n\r\nexport const deleteSingleNotificationFailure = (error) => {\r\n  return {\r\n    type: 'NOTIFICATION_DELETE_SINGLE_NOTIFICATION_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}