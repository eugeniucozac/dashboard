{"ast":null,"code":"import \"core-js/modules/es.string.search\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Search\\\\Search.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport { SearchView } from './Search.view';\nimport styles from './Search.styles';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSearch.propTypes = {\n  text: PropTypes.string,\n  placeholder: PropTypes.string,\n  submitButton: PropTypes.bool,\n  submitButtonProps: PropTypes.object,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    reset: PropTypes.func.isRequired,\n    focus: PropTypes.func\n  }).isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    formControlRoot: PropTypes.string,\n    inputPropsRoot: PropTypes.string\n  }),\n  minChars: PropTypes.number\n};\nSearch.defaultProps = {\n  submitButton: true,\n  handlers: {},\n  nestedClasses: {},\n  minChars: 1\n};\nexport default function Search(_ref) {\n  var _classnames;\n\n  var text = _ref.text,\n      minChars = _ref.minChars,\n      placeholder = _ref.placeholder,\n      submitButton = _ref.submitButton,\n      submitButtonProps = _ref.submitButtonProps,\n      handlers = _ref.handlers,\n      nestedClasses = _ref.nestedClasses;\n  var classes = makeStyles(styles, {\n    name: 'Search'\n  })();\n\n  var handleClear = function handleClear(reset) {\n    return function (event) {\n      reset();\n\n      if (utils.generic.isFunction(handlers.reset)) {\n        handlers.reset();\n      }\n    };\n  };\n\n  var handleSubmit = function handleSubmit() {\n    var values = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var query = values.query;\n\n    if (query && text !== query) {\n      return handlers.search(query);\n    }\n  };\n\n  var fields = [{\n    name: 'query',\n    type: 'text',\n    placeholder: placeholder || '',\n    defaultValue: submitButton ? text || '' : '',\n    onChange: submitButton ? undefined : function (value) {\n      var searchTerm = value ? value.trim() : '';\n      handlers.search(searchTerm);\n      return value;\n    },\n    muiComponentProps: _objectSpread(_objectSpread({\n      autoComplete: 'off'\n    }, utils.generic.isFunction(handlers.focus) && {\n      onFocus: function onFocus() {\n        handlers.focus();\n      }\n    }), {}, {\n      classes: {\n        root: classnames((_classnames = {}, _defineProperty(_classnames, classes.input, true), _defineProperty(_classnames, nestedClasses.formControlRoot, Boolean(nestedClasses.formControlRoot)), _classnames))\n      },\n      InputProps: {\n        classes: {\n          root: classnames(_defineProperty({}, nestedClasses.inputPropsRoot, Boolean(nestedClasses.inputPropsRoot)))\n        }\n      },\n      'data-testid': 'search-field'\n    })\n  }];\n  return /*#__PURE__*/_jsxDEV(SearchView, {\n    query: text,\n    fields: fields,\n    submitButton: submitButton,\n    submitButtonProps: submitButtonProps,\n    minChars: minChars,\n    handlers: {\n      clear: handleClear,\n      search: handleSubmit\n    },\n    nestedClasses: nestedClasses\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 97,\n    columnNumber: 5\n  }, this);\n}\n_c = Search;\nSearch.displayName = \"Search\";\nSearch.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Search\",\n  \"props\": {\n    \"submitButton\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handlers\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"search\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"reset\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"focus\": {\n            \"name\": \"func\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"formControlRoot\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"inputPropsRoot\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"minChars\": {\n      \"defaultValue\": {\n        \"value\": \"1\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"text\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placeholder\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"submitButtonProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Search\\\\Search.js\"] = {\n    name: \"Search\",\n    docgenInfo: Search.__docgenInfo,\n    path: \"src\\\\components\\\\Search\\\\Search.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Search\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Search/Search.js"],"names":["React","PropTypes","classnames","SearchView","styles","utils","makeStyles","Search","propTypes","text","string","placeholder","submitButton","bool","submitButtonProps","object","handlers","shape","search","func","isRequired","reset","focus","nestedClasses","root","formControlRoot","inputPropsRoot","minChars","number","defaultProps","classes","name","handleClear","event","generic","isFunction","handleSubmit","values","query","fields","type","defaultValue","onChange","undefined","value","searchTerm","trim","muiComponentProps","autoComplete","onFocus","input","Boolean","InputProps","clear"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport { SearchView } from './Search.view';\r\nimport styles from './Search.styles';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nSearch.propTypes = {\r\n  text: PropTypes.string,\r\n  placeholder: PropTypes.string,\r\n  submitButton: PropTypes.bool,\r\n  submitButtonProps: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    reset: PropTypes.func.isRequired,\r\n    focus: PropTypes.func,\r\n  }).isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    formControlRoot: PropTypes.string,\r\n    inputPropsRoot: PropTypes.string,\r\n  }),\r\n  minChars: PropTypes.number,\r\n};\r\n\r\nSearch.defaultProps = {\r\n  submitButton: true,\r\n  handlers: {},\r\n  nestedClasses: {},\r\n  minChars: 1,\r\n};\r\n\r\nexport default function Search({ text, minChars, placeholder, submitButton, submitButtonProps, handlers, nestedClasses }) {\r\n  const classes = makeStyles(styles, { name: 'Search' })();\r\n\r\n  const handleClear = (reset) => (event) => {\r\n    reset();\r\n\r\n    if (utils.generic.isFunction(handlers.reset)) {\r\n      handlers.reset();\r\n    }\r\n  };\r\n\r\n  const handleSubmit = (values = {}) => {\r\n    const { query } = values;\r\n\r\n    if (query && text !== query) {\r\n      return handlers.search(query);\r\n    }\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'query',\r\n      type: 'text',\r\n      placeholder: placeholder || '',\r\n      defaultValue: submitButton ? text || '' : '',\r\n      onChange: submitButton\r\n        ? undefined\r\n        : (value) => {\r\n            const searchTerm = value ? value.trim() : '';\r\n            handlers.search(searchTerm);\r\n\r\n            return value;\r\n          },\r\n      muiComponentProps: {\r\n        autoComplete: 'off',\r\n        ...(utils.generic.isFunction(handlers.focus) && {\r\n          onFocus: () => {\r\n            handlers.focus();\r\n          },\r\n        }),\r\n        classes: {\r\n          root: classnames({\r\n            [classes.input]: true,\r\n            [nestedClasses.formControlRoot]: Boolean(nestedClasses.formControlRoot),\r\n          }),\r\n        },\r\n        InputProps: {\r\n          classes: {\r\n            root: classnames({\r\n              [nestedClasses.inputPropsRoot]: Boolean(nestedClasses.inputPropsRoot),\r\n            }),\r\n          },\r\n        },\r\n        'data-testid': 'search-field',\r\n      },\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <SearchView\r\n      query={text}\r\n      fields={fields}\r\n      submitButton={submitButton}\r\n      submitButtonProps={submitButtonProps}\r\n      minChars={minChars}\r\n      handlers={{\r\n        clear: handleClear,\r\n        search: handleSubmit,\r\n      }}\r\n      nestedClasses={nestedClasses}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}