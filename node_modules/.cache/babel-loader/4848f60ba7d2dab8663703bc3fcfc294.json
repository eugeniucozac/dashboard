{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\HeaderNav\\\\HeaderNav.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useContext } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useLocation } from 'react-router';\nimport debounce from 'lodash/debounce';\nimport get from 'lodash/get'; // app\n\nimport { HeaderNavView } from './HeaderNav.view';\nimport { expandNav, collapseNav, showModal, getSearchResults, resetSearch } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { AuthContext } from 'components';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nHeaderNav.propTypes = {\n  showFloatingButton: PropTypes.bool,\n  showMagnifierButton: PropTypes.bool\n};\nHeaderNav.defaultProps = {\n  showFloatingButton: true,\n  showMagnifierButton: true\n};\nexport default function HeaderNav(_ref) {\n  _s();\n\n  var showFloatingButton = _ref.showFloatingButton,\n      showMagnifierButton = _ref.showMagnifierButton;\n  var dispatch = useDispatch();\n  var location = useLocation();\n  var uiNavExpanded = useSelector(function (state) {\n    return get(state, 'ui.nav.expanded');\n  });\n  var uiSidebarExpanded = useSelector(function (state) {\n    return get(state, 'ui.sidebar.expanded');\n  });\n  var configVars = useSelector(function (state) {\n    return get(state, 'config.vars');\n  });\n  var context = useContext(AuthContext);\n  var pathname = location.pathname;\n  var isDev = utils.app.isDevelopment(configVars);\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchResultsVisible = _useState2[0],\n      setSearchResultsVisible = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchMobileVisible = _useState4[0],\n      setSearchMobileVisible = _useState4[1];\n\n  var _useState5 = useState(new Date().getTime()),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resetKey = _useState6[0],\n      setResetKey = _useState6[1];\n\n  var _useState7 = useState(null),\n      _useState8 = _slicedToArray(_useState7, 2),\n      displayUserMenu = _useState8[0],\n      setDisplayUserMenu = _useState8[1];\n\n  var toggleNav = function toggleNav() {\n    if (uiNavExpanded) {\n      dispatch(collapseNav());\n    } else {\n      dispatch(expandNav());\n    }\n  };\n\n  var clickNewEnquiry = function clickNewEnquiry(event) {\n    dispatch(showModal({\n      component: 'NEW_ENQUIRY',\n      props: {\n        title: 'submission.createNew',\n        fullWidth: true,\n        maxWidth: 'sm',\n        disableAutoFocus: true\n      }\n    }));\n  };\n\n  var searchMobileToggle = function searchMobileToggle() {\n    setSearchResultsVisible(false);\n    setSearchMobileVisible(!searchMobileVisible);\n  };\n\n  var searchSubmit = debounce(function (query) {\n    if (query.length >= 2) {\n      dispatch(getSearchResults(query));\n      setSearchResultsVisible(true);\n    } else setSearchResultsVisible(false);\n  }, config.ui.autocomplete.delay);\n\n  var searchReset = function searchReset() {\n    setSearchResultsVisible(false);\n    setResetKey(new Date().getTime());\n    dispatch(resetSearch());\n  };\n\n  var handleClickUserMenu = function handleClickUserMenu(event) {\n    setDisplayUserMenu(event.currentTarget);\n  };\n\n  var handleCloseUserMenu = function handleCloseUserMenu() {\n    setDisplayUserMenu(null);\n  };\n\n  return /*#__PURE__*/_jsxDEV(HeaderNavView, {\n    resetKey: resetKey,\n    context: context,\n    isDev: isDev,\n    isSidebarExpanded: uiSidebarExpanded,\n    isFabVisible: showFloatingButton,\n    isMagnifierVisible: showMagnifierButton,\n    isSearchMobileVisible: searchMobileVisible,\n    isSearchResultsVisible: searchResultsVisible,\n    displayUserMenu: displayUserMenu,\n    pathname: pathname,\n    handlers: {\n      searchMobileToggle: searchMobileToggle,\n      searchSubmit: searchSubmit,\n      searchReset: searchReset,\n      toggleNav: toggleNav,\n      clickNewEnquiry: clickNewEnquiry,\n      handleClickUserMenu: handleClickUserMenu,\n      handleCloseUserMenu: handleCloseUserMenu\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 91,\n    columnNumber: 5\n  }, this);\n}\n\n_s(HeaderNav, \"eFfgf1UngorbFZfBHsQZjXKQymc=\", false, function () {\n  return [useDispatch, useLocation, useSelector, useSelector, useSelector];\n});\n\n_c = HeaderNav;\n\nvar _c;\n\n$RefreshReg$(_c, \"HeaderNav\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/HeaderNav/HeaderNav.js"],"names":["React","useState","useContext","PropTypes","useDispatch","useSelector","useLocation","debounce","get","HeaderNavView","expandNav","collapseNav","showModal","getSearchResults","resetSearch","config","utils","AuthContext","HeaderNav","propTypes","showFloatingButton","bool","showMagnifierButton","defaultProps","dispatch","location","uiNavExpanded","state","uiSidebarExpanded","configVars","context","pathname","isDev","app","isDevelopment","searchResultsVisible","setSearchResultsVisible","searchMobileVisible","setSearchMobileVisible","Date","getTime","resetKey","setResetKey","displayUserMenu","setDisplayUserMenu","toggleNav","clickNewEnquiry","event","component","props","title","fullWidth","maxWidth","disableAutoFocus","searchMobileToggle","searchSubmit","query","length","ui","autocomplete","delay","searchReset","handleClickUserMenu","currentTarget","handleCloseUserMenu"],"mappings":"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","sourcesContent":["import React, { useState, useContext } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useLocation } from 'react-router';\r\nimport debounce from 'lodash/debounce';\r\nimport get from 'lodash/get';\r\n// app\r\nimport { HeaderNavView } from './HeaderNav.view';\r\n\r\nimport { expandNav, collapseNav, showModal, getSearchResults, resetSearch } from 'stores';\r\n\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\nimport { AuthContext } from 'components';\r\n\r\nHeaderNav.propTypes = {\r\n  showFloatingButton: PropTypes.bool,\r\n  showMagnifierButton: PropTypes.bool,\r\n};\r\n\r\nHeaderNav.defaultProps = {\r\n  showFloatingButton: true,\r\n  showMagnifierButton: true,\r\n};\r\n\r\nexport default function HeaderNav({ showFloatingButton, showMagnifierButton }) {\r\n  const dispatch = useDispatch();\r\n  const location = useLocation();\r\n\r\n  const uiNavExpanded = useSelector((state) => get(state, 'ui.nav.expanded'));\r\n  const uiSidebarExpanded = useSelector((state) => get(state, 'ui.sidebar.expanded'));\r\n  const configVars = useSelector((state) => get(state, 'config.vars'));\r\n  const context = useContext(AuthContext);\r\n  const { pathname } = location;\r\n\r\n  const isDev = utils.app.isDevelopment(configVars);\r\n  const [searchResultsVisible, setSearchResultsVisible] = useState(false);\r\n  const [searchMobileVisible, setSearchMobileVisible] = useState(false);\r\n  const [resetKey, setResetKey] = useState(new Date().getTime());\r\n  const [displayUserMenu, setDisplayUserMenu] = useState(null);\r\n\r\n  const toggleNav = () => {\r\n    if (uiNavExpanded) {\r\n      dispatch(collapseNav());\r\n    } else {\r\n      dispatch(expandNav());\r\n    }\r\n  };\r\n\r\n  const clickNewEnquiry = (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'NEW_ENQUIRY',\r\n        props: {\r\n          title: 'submission.createNew',\r\n          fullWidth: true,\r\n          maxWidth: 'sm',\r\n          disableAutoFocus: true,\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const searchMobileToggle = () => {\r\n    setSearchResultsVisible(false);\r\n    setSearchMobileVisible(!searchMobileVisible);\r\n  };\r\n\r\n  const searchSubmit = debounce((query) => {\r\n    if (query.length >= 2) {\r\n      dispatch(getSearchResults(query));\r\n      setSearchResultsVisible(true);\r\n    } else setSearchResultsVisible(false);\r\n  }, config.ui.autocomplete.delay);\r\n\r\n  const searchReset = () => {\r\n    setSearchResultsVisible(false);\r\n    setResetKey(new Date().getTime());\r\n    dispatch(resetSearch());\r\n  };\r\n\r\n  const handleClickUserMenu = (event) => {\r\n    setDisplayUserMenu(event.currentTarget);\r\n  };\r\n\r\n  const handleCloseUserMenu = () => {\r\n    setDisplayUserMenu(null);\r\n  };\r\n\r\n  return (\r\n    <HeaderNavView\r\n      resetKey={resetKey}\r\n      context={context}\r\n      isDev={isDev}\r\n      isSidebarExpanded={uiSidebarExpanded}\r\n      isFabVisible={showFloatingButton}\r\n      isMagnifierVisible={showMagnifierButton}\r\n      isSearchMobileVisible={searchMobileVisible}\r\n      isSearchResultsVisible={searchResultsVisible}\r\n      displayUserMenu={displayUserMenu}\r\n      pathname={pathname}\r\n      handlers={{\r\n        searchMobileToggle,\r\n        searchSubmit,\r\n        searchReset,\r\n        toggleNav,\r\n        clickNewEnquiry,\r\n        handleClickUserMenu,\r\n        handleCloseUserMenu,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}