{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\SelectPopover\\\\SelectPopover.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useCallback, useEffect, useRef, useState } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './SelectPopover.styles';\nimport { Button } from 'components'; // mui\n\nimport { Box, makeStyles, Popover } from '@material-ui/core';\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSelectPopoverView.propTypes = {\n  id: PropTypes.string.isRequired,\n  text: PropTypes.string,\n  buttonText: PropTypes.string,\n  buttonVariant: PropTypes.string,\n  buttonDisabled: PropTypes.bool,\n  showButtonTextOnly: PropTypes.bool,\n  toolTip: PropTypes.string,\n  displaySelectedText: PropTypes.shape({\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    name: PropTypes.string\n  }),\n  handlers: PropTypes.shape({\n    onToggleOption: PropTypes.func.isRequired,\n    onTogglePopOver: PropTypes.func\n  }),\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\n  error: PropTypes.shape({\n    message: PropTypes.string.isRequired\n  })\n};\nexport function SelectPopoverView(_ref) {\n  _s();\n\n  var id = _ref.id,\n      handlers = _ref.handlers,\n      text = _ref.text,\n      buttonText = _ref.buttonText,\n      showButtonTextOnly = _ref.showButtonTextOnly,\n      displaySelectedText = _ref.displaySelectedText,\n      buttonVariant = _ref.buttonVariant,\n      children = _ref.children,\n      buttonDisabled = _ref.buttonDisabled,\n      showSubmitButton = _ref.showSubmitButton,\n      toolTip = _ref.toolTip,\n      error = _ref.error;\n  var classes = makeStyles(styles, {\n    name: 'SelectPopover'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      openPopover = _useState2[0],\n      setOpenPopover = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchorEl = _useState4[0],\n      setAnchorEl = _useState4[1];\n\n  var popoverButtonRef = useRef(null);\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      displayLabel = _useState6[0],\n      setDisplayLabel = _useState6[1];\n\n  var toggleOpenPopover = useCallback(function (event) {\n    setOpenPopover(!openPopover);\n    setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n    handlers.onTogglePopOver(!openPopover);\n  }, [openPopover, setOpenPopover, setAnchorEl, handlers]);\n  useEffect(function () {\n    setDisplayLabel(text);\n  }, [text]);\n  var onButtonClick = useCallback(function (event) {\n    handlers.onToggleOption(displaySelectedText);\n\n    if (!showButtonTextOnly) {\n      setDisplayLabel(displaySelectedText === null || displaySelectedText === void 0 ? void 0 : displaySelectedText.name);\n    } else {\n      setDisplayLabel(text);\n    }\n\n    setOpenPopover(!openPopover);\n    setAnchorEl(event === null || event === void 0 ? void 0 : event.currentTarget);\n  }, [handlers, displaySelectedText, showButtonTextOnly, setDisplayLabel, text, openPopover, setOpenPopover, setAnchorEl]);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    className: classes.root,\n    children: [/*#__PURE__*/_jsxDEV(Button, {\n      refProp: popoverButtonRef,\n      icon: ArrowDropDownIcon,\n      iconPosition: \"right\",\n      text: displayLabel || text,\n      disabled: buttonDisabled,\n      size: \"xsmall\",\n      variant: buttonVariant,\n      light: true,\n      color: \"primary\",\n      \"aria-owns\": openPopover ? \"\".concat(id, \"-popover\") : null,\n      \"aria-haspopup\": \"true\",\n      onClick: toggleOpenPopover,\n      title: toolTip || displayLabel,\n      nestedClasses: {\n        btn: classes.selectButton\n      },\n      classes: {\n        btnDangerText: !!error ? classes.error : null\n      },\n      danger: !!error\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Popover, {\n      id: \"select-popover-modal-\".concat(id),\n      open: Boolean(openPopover),\n      anchorEl: anchorEl,\n      onClose: toggleOpenPopover,\n      classes: {\n        paper: classes.popoverFrame\n      },\n      anchorOrigin: {\n        vertical: 'bottom',\n        horizontal: 'center'\n      },\n      transformOrigin: {\n        vertical: 'center',\n        horizontal: 'center'\n      },\n      children: [children, showSubmitButton && /*#__PURE__*/_jsxDEV(Box, {\n        justifyContent: \"flex-end\",\n        direction: \"row\",\n        alignItems: \"center\",\n        display: \"flex\",\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          text: buttonText,\n          disabled: !displaySelectedText,\n          onClick: function onClick(e) {\n            return onButtonClick(e);\n          },\n          type: \"submit\",\n          color: \"primary\",\n          size: \"xsmall\",\n          \"data-testid\": \"popover-submit-button-\".concat(id)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 5\n  }, this);\n}\n\n_s(SelectPopoverView, \"A08TeZx8ZXdM0CzOUCDRHy9i5jk=\");\n\n_c = SelectPopoverView;\n\nvar _c;\n\n$RefreshReg$(_c, \"SelectPopoverView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SelectPopover/SelectPopover.view.js"],"names":["React","useCallback","useEffect","useRef","useState","PropTypes","styles","Button","Box","makeStyles","Popover","ArrowDropDownIcon","SelectPopoverView","propTypes","id","string","isRequired","text","buttonText","buttonVariant","buttonDisabled","bool","showButtonTextOnly","toolTip","displaySelectedText","shape","oneOfType","number","name","handlers","onToggleOption","func","onTogglePopOver","children","arrayOf","node","error","message","showSubmitButton","classes","openPopover","setOpenPopover","anchorEl","setAnchorEl","popoverButtonRef","displayLabel","setDisplayLabel","toggleOpenPopover","event","currentTarget","onButtonClick","root","btn","selectButton","btnDangerText","Boolean","paper","popoverFrame","vertical","horizontal","e"],"mappings":"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","sourcesContent":["import React, { useCallback, useEffect, useRef, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './SelectPopover.styles';\r\nimport { Button } from 'components';\r\n\r\n// mui\r\nimport { Box, makeStyles, Popover } from '@material-ui/core';\r\nimport ArrowDropDownIcon from '@material-ui/icons/ArrowDropDown';\r\n\r\nSelectPopoverView.propTypes = {\r\n  id: PropTypes.string.isRequired,\r\n  text: PropTypes.string,\r\n  buttonText: PropTypes.string,\r\n  buttonVariant: PropTypes.string,\r\n  buttonDisabled: PropTypes.bool,\r\n  showButtonTextOnly: PropTypes.bool,\r\n  toolTip: PropTypes.string,\r\n  displaySelectedText: PropTypes.shape({\r\n    id: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    name: PropTypes.string,\r\n  }),\r\n  handlers: PropTypes.shape({\r\n    onToggleOption: PropTypes.func.isRequired,\r\n    onTogglePopOver: PropTypes.func,\r\n  }),\r\n  children: PropTypes.oneOfType([PropTypes.arrayOf(PropTypes.node), PropTypes.node]),\r\n  error: PropTypes.shape({\r\n    message: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport function SelectPopoverView({\r\n  id,\r\n  handlers,\r\n  text,\r\n  buttonText,\r\n  showButtonTextOnly,\r\n  displaySelectedText,\r\n  buttonVariant,\r\n  children,\r\n  buttonDisabled,\r\n  showSubmitButton,\r\n  toolTip,\r\n  error,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'SelectPopover' })();\r\n  const [openPopover, setOpenPopover] = useState(false);\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const popoverButtonRef = useRef(null);\r\n  const [displayLabel, setDisplayLabel] = useState(null);\r\n\r\n  const toggleOpenPopover = useCallback(\r\n    (event) => {\r\n      setOpenPopover(!openPopover);\r\n      setAnchorEl(event?.currentTarget);\r\n      handlers.onTogglePopOver(!openPopover);\r\n    },\r\n    [openPopover, setOpenPopover, setAnchorEl, handlers]\r\n  );\r\n\r\n  useEffect(() => {\r\n    setDisplayLabel(text);\r\n  }, [text]);\r\n\r\n  const onButtonClick = useCallback(\r\n    (event) => {\r\n      handlers.onToggleOption(displaySelectedText);\r\n      if (!showButtonTextOnly) {\r\n        setDisplayLabel(displaySelectedText?.name);\r\n      } else {\r\n        setDisplayLabel(text);\r\n      }\r\n      setOpenPopover(!openPopover);\r\n      setAnchorEl(event?.currentTarget);\r\n    },\r\n    [handlers, displaySelectedText, showButtonTextOnly, setDisplayLabel, text, openPopover, setOpenPopover, setAnchorEl]\r\n  );\r\n\r\n  return (\r\n    <Box className={classes.root}>\r\n      <Button\r\n        refProp={popoverButtonRef}\r\n        icon={ArrowDropDownIcon}\r\n        iconPosition=\"right\"\r\n        text={displayLabel || text}\r\n        disabled={buttonDisabled}\r\n        size=\"xsmall\"\r\n        variant={buttonVariant}\r\n        light\r\n        color=\"primary\"\r\n        aria-owns={openPopover ? `${id}-popover` : null}\r\n        aria-haspopup=\"true\"\r\n        onClick={toggleOpenPopover}\r\n        title={toolTip || displayLabel}\r\n        nestedClasses={{ btn: classes.selectButton }}\r\n        classes={{ btnDangerText: !!error ? classes.error : null }}\r\n        danger={!!error}\r\n      />\r\n      <Popover\r\n        id={`select-popover-modal-${id}`}\r\n        open={Boolean(openPopover)}\r\n        anchorEl={anchorEl}\r\n        onClose={toggleOpenPopover}\r\n        classes={{ paper: classes.popoverFrame }}\r\n        anchorOrigin={{\r\n          vertical: 'bottom',\r\n          horizontal: 'center',\r\n        }}\r\n        transformOrigin={{\r\n          vertical: 'center',\r\n          horizontal: 'center',\r\n        }}\r\n      >\r\n        {children}\r\n        {showSubmitButton && (\r\n          <Box justifyContent=\"flex-end\" direction=\"row\" alignItems=\"center\" display=\"flex\">\r\n            <Button\r\n              text={buttonText}\r\n              disabled={!displaySelectedText}\r\n              onClick={(e) => onButtonClick(e)}\r\n              type=\"submit\"\r\n              color=\"primary\"\r\n              size=\"xsmall\"\r\n              data-testid={`popover-submit-button-${id}`}\r\n            />\r\n          </Box>\r\n        )}\r\n      </Popover>\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}