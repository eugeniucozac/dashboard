{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { addLoader, authLogout, storeProcessingInstructionDocuments, enqueueNotification, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nexport var removePremiumTaxSignedLinesDocument = function removePremiumTaxSignedLinesDocument(formData) {\n  return function (dispatch, getState) {\n    var state = getState(); // prettier-ignore\n\n    var auth = state.user.auth,\n        endpoint = state.config.vars.endpoint;\n    var docIds = formData.docIds,\n        removeDocumentType = formData.removeDocumentType,\n        documents = formData.documents;\n    var defaultError = {\n      file: 'stores/processingInstructions.actions.removePremiumTaxSignedLinesDocument'\n    };\n    dispatch(removePremiumTaxSignedLinesDocumentRequest(docIds));\n    dispatch(addLoader({\n      key: 'removePremiumTaxSignedLinesDocument',\n      message: utils.string.t('fileRemove.removing')\n    }));\n\n    if (!docIds) {\n      dispatch(removePremiumTaxSignedLinesDocumentFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: utils.string.t('processingInstructions.missingRemoveFileDataParameters')\n      })));\n      dispatch(enqueueNotification('notification.fileUpload.upload.fail', 'error'));\n      dispatch(removeLoader('removePremiumTaxSignedLinesDocument'));\n      return;\n    }\n\n    return utils.api.delete({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/\".concat(docIds)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      var updatedDocuments = _objectSpread(_objectSpread(_objectSpread({}, documents), removeDocumentType === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation && {\n        premiumTaxDocument: null\n      }), removeDocumentType === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned && {\n        signedLinesDocument: null\n      });\n\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\n      dispatch(removePremiumTaxSignedLinesDocumentSuccess(data.data));\n      dispatch(enqueueNotification(data.message, 'success'));\n      return data;\n    }).catch(function (err) {\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(removePremiumTaxSignedLinesDocumentFailure(err));\n      dispatch(enqueueNotification('notification.fileRemove.remove.fail', 'error'));\n      return err;\n    }).finally(function () {\n      dispatch(removeLoader('removePremiumTaxSignedLinesDocument'));\n    });\n  };\n};\nexport var removePremiumTaxSignedLinesDocumentRequest = function removePremiumTaxSignedLinesDocumentRequest(payload) {\n  return {\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_REQUEST',\n    payload: payload\n  };\n};\nexport var removePremiumTaxSignedLinesDocumentSuccess = function removePremiumTaxSignedLinesDocumentSuccess(data) {\n  return {\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_SUCCESS',\n    payload: data\n  };\n};\nexport var removePremiumTaxSignedLinesDocumentFailure = function removePremiumTaxSignedLinesDocumentFailure(error) {\n  return {\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/processingInstructions/processingInstructions.actions.removePremiumTaxSignedLinesDocument.js"],"names":["addLoader","authLogout","storeProcessingInstructionDocuments","enqueueNotification","removeLoader","utils","constants","removePremiumTaxSignedLinesDocument","formData","dispatch","getState","state","auth","user","endpoint","config","vars","docIds","removeDocumentType","documents","defaultError","file","removePremiumTaxSignedLinesDocumentRequest","key","message","string","t","removePremiumTaxSignedLinesDocumentFailure","api","delete","token","accessToken","dmsService","path","then","response","handleResponse","json","handleNewData","data","updatedDocuments","DMS_DOCUMENT_TYPE_SECTION_KEYS","piPremiumCalculation","premiumTaxDocument","piMarketSigned","signedLinesDocument","removePremiumTaxSignedLinesDocumentSuccess","catch","err","handleUnauthorized","finally","payload","type","error"],"mappings":"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","sourcesContent":["// app\r\nimport { addLoader, authLogout, storeProcessingInstructionDocuments, enqueueNotification, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport const removePremiumTaxSignedLinesDocument = (formData) => (dispatch, getState) => {\r\n  const state = getState();\r\n\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } },  } = state;\r\n  const { docIds, removeDocumentType, documents } = formData;\r\n\r\n  const defaultError = {\r\n    file: 'stores/processingInstructions.actions.removePremiumTaxSignedLinesDocument',\r\n  };\r\n\r\n  dispatch(removePremiumTaxSignedLinesDocumentRequest(docIds));\r\n  dispatch(addLoader({ key: 'removePremiumTaxSignedLinesDocument', message: utils.string.t('fileRemove.removing') }));\r\n\r\n  if (!docIds) {\r\n    dispatch(\r\n      removePremiumTaxSignedLinesDocumentFailure({\r\n        ...defaultError,\r\n        message: utils.string.t('processingInstructions.missingRemoveFileDataParameters'),\r\n      })\r\n    );\r\n    dispatch(enqueueNotification('notification.fileUpload.upload.fail', 'error'));\r\n    dispatch(removeLoader('removePremiumTaxSignedLinesDocument'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.dmsService,\r\n      path: `dms/document/${docIds}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      const updatedDocuments = {\r\n        ...documents,\r\n        ...(removeDocumentType === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piPremiumCalculation && { premiumTaxDocument: null }),\r\n        ...(removeDocumentType === constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piMarketSigned && { signedLinesDocument: null }),\r\n      };\r\n\r\n      dispatch(storeProcessingInstructionDocuments(updatedDocuments));\r\n      dispatch(removePremiumTaxSignedLinesDocumentSuccess(data.data));\r\n      dispatch(enqueueNotification(data.message, 'success'));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(removePremiumTaxSignedLinesDocumentFailure(err));\r\n      dispatch(enqueueNotification('notification.fileRemove.remove.fail', 'error'));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('removePremiumTaxSignedLinesDocument'));\r\n    });\r\n};\r\n\r\nexport const removePremiumTaxSignedLinesDocumentRequest = (payload) => {\r\n  return {\r\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const removePremiumTaxSignedLinesDocumentSuccess = (data) => {\r\n  return {\r\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const removePremiumTaxSignedLinesDocumentFailure = (error) => {\r\n  return {\r\n    type: 'REMOVE_PREMIUM_TAX_SIGNED_LINES_DOCUMENT_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}