{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Tabs\\\\Tabs.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport SwipeableViews from 'react-swipeable-views';\nimport get from 'lodash/get';\nimport isNumber from 'lodash/isNumber'; // app\n\nimport * as utils from 'utils';\nimport styles from './Tabs.styles'; // mui\n\nimport { Tabs as MuiTabs, Tab, Badge, makeStyles } from '@material-ui/core';\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTabsView.propTypes = {\n  tabs: PropTypes.arrayOf(PropTypes.shape({\n    label: PropTypes.string.isRequired,\n    errors: PropTypes.number,\n    value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    total: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    complete: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n    disabled: PropTypes.bool\n  })).isRequired,\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\n  light: PropTypes.bool,\n  compact: PropTypes.bool,\n  swipeable: PropTypes.bool,\n  variant: PropTypes.string,\n  componentProps: PropTypes.object,\n  nestedClasses: PropTypes.shape({\n    tabs: PropTypes.shape({\n      root: PropTypes.string,\n      content: PropTypes.string\n    }),\n    tab: PropTypes.string,\n    root: PropTypes.string\n  }),\n  onChange: PropTypes.func.isRequired\n};\nTabsView.defaultProps = {\n  tabs: [],\n  variant: 'scrollable',\n  nestedClasses: {}\n};\nexport function TabsView(_ref) {\n  var _this = this,\n      _classnames;\n\n  var tabs = _ref.tabs,\n      verticalAlignBool = _ref.verticalAlignBool,\n      value = _ref.value,\n      light = _ref.light,\n      compact = _ref.compact,\n      swipeable = _ref.swipeable,\n      variant = _ref.variant,\n      componentProps = _ref.componentProps,\n      nestedClasses = _ref.nestedClasses,\n      onChange = _ref.onChange,\n      props = _objectWithoutProperties(_ref, [\"tabs\", \"verticalAlignBool\", \"value\", \"light\", \"compact\", \"swipeable\", \"variant\", \"componentProps\", \"nestedClasses\", \"onChange\"]);\n\n  var classes = makeStyles(styles, {\n    name: 'Tabs'\n  })({\n    light: light,\n    compact: compact\n  });\n\n  var TabLabel = function TabLabel(_ref2) {\n    var label = _ref2.label,\n        subLabel = _ref2.subLabel,\n        total = _ref2.total,\n        complete = _ref2.complete,\n        count = _ref2.count,\n        errors = _ref2.errors;\n    return /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.label,\n        children: [isNumber(count) ? /*#__PURE__*/_jsxDEV(Badge, {\n          badgeContent: count,\n          color: \"error\",\n          children: label\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, _this) : label, ' ', isNumber(complete) && isNumber(total) && /*#__PURE__*/_jsxDEV(TabCount, {\n          total: total,\n          complete: complete\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 77,\n          columnNumber: 53\n        }, _this), Boolean(errors) && /*#__PURE__*/_jsxDEV(InfoOutlinedIcon, {\n          color: \"error\",\n          className: classes.iconError\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 78,\n          columnNumber: 31\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, _this), subLabel && /*#__PURE__*/_jsxDEV(\"div\", {\n        className: classes.sublabel,\n        children: subLabel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 22\n      }, _this)]\n    }, void 0, true);\n  };\n\n  var TabCount = function TabCount(_ref3) {\n    var complete = _ref3.complete,\n        total = _ref3.total;\n    return /*#__PURE__*/_jsxDEV(\"span\", {\n      className: classes.labelCount,\n      children: [\"(\", complete, \"/\", total, \")\"]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 87,\n      columnNumber: 7\n    }, _this);\n  };\n\n  var TabContent = function TabContent() {\n    var elements = React.Children.toArray(props.children);\n    var disconnectedTabContent = elements.every(function (el) {\n      return get(el, 'props.value') === undefined;\n    });\n    if (!props.children) return null; // if none of the children have a value props, then render whatever is there\n    // this allows to display any components as tab content (ex: OpeningMemoContent)\n    // this content can manage itself what it renders based on its own selected tab state\n\n    if (disconnectedTabContent) {\n      return props.children;\n    } // if any of the child have a value props\n    // then the Tabs component controls which one to display based on the current value\n\n\n    return React.Children.map(props.children, function (child) {\n      return /*#__PURE__*/React.cloneElement(child, {\n        style: {\n          display: value === child.props.value ? 'block' : 'none'\n        }\n      });\n    });\n  };\n\n  var getValueIndex = function getValueIndex(value) {\n    return tabs.findIndex(function (tab) {\n      return tab.value === value;\n    });\n  };\n\n  var getIndexValue = function getIndexValue(index) {\n    return get(tabs, \"[\".concat(index, \"].value\"));\n  }; // abort\n\n\n  if (!utils.generic.isValidArray(tabs)) return null;\n  return tabs.length ? /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classnames((_classnames = {}, _defineProperty(_classnames, classes.root, true), _defineProperty(_classnames, nestedClasses.root, Boolean(nestedClasses.root)), _classnames)),\n    \"data-testid\": \"tabs\",\n    children: [/*#__PURE__*/_jsxDEV(MuiTabs, _objectSpread(_objectSpread({\n      orientation: verticalAlignBool ? 'vertical' : 'horizontal'\n    }, props), {}, {\n      value: value,\n      onChange: onChange,\n      variant: variant,\n      classes: {\n        root: classnames([classes.tabs, get(nestedClasses, 'tabs.root')]),\n        scrollButtons: classnames(variant === 'scrollable' ? classes.scrollButtons : undefined)\n      },\n      \"data-testid\": \"tabs-mui\",\n      children: tabs.map(function (tab, index) {\n        var subLabel = tab.subLabel,\n            tabProps = _objectWithoutProperties(tab, [\"subLabel\"]);\n\n        return /*#__PURE__*/_jsxDEV(Tab, _objectSpread(_objectSpread({}, tabProps), {}, {\n          value: tab.value,\n          disabled: tab === null || tab === void 0 ? void 0 : tab.disabled,\n          label: /*#__PURE__*/_jsxDEV(TabLabel, _objectSpread(_objectSpread({}, tab), {}, {\n            subLabel: subLabel,\n            label: utils.string.t(tab.label)\n          }), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 156,\n            columnNumber: 22\n          }, _this),\n          \"data-testid\": \"tabs-mui-item\",\n          classes: {\n            root: get(nestedClasses, 'tab.root')\n          }\n        }), index, false, {\n          fileName: _jsxFileName,\n          lineNumber: 151,\n          columnNumber: 13\n        }, _this);\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 136,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      \"data-testid\": \"tabs-content\",\n      className: get(nestedClasses, 'tabs.content'),\n      children: [swipeable && /*#__PURE__*/_jsxDEV(SwipeableViews, _objectSpread(_objectSpread({\n        index: getValueIndex(value),\n        enableMouseEvents: true,\n        hysteresis: 0.3,\n        onChangeIndex: function onChangeIndex(index) {\n          return onChange(null, getIndexValue(index));\n        }\n      }, componentProps), {}, {\n        children: props.children\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 166,\n        columnNumber: 11\n      }, this), !swipeable && /*#__PURE__*/_jsxDEV(TabContent, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 177,\n        columnNumber: 24\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 164,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 129,\n    columnNumber: 5\n  }, this) : null;\n}\n_c = TabsView;\nTabsView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TabsView\",\n  \"props\": {\n    \"tabs\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"errors\": {\n              \"name\": \"number\",\n              \"required\": false\n            },\n            \"value\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"total\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"complete\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"count\": {\n              \"name\": \"union\",\n              \"value\": [{\n                \"name\": \"string\"\n              }, {\n                \"name\": \"number\"\n              }],\n              \"required\": false\n            },\n            \"disabled\": {\n              \"name\": \"bool\",\n              \"required\": false\n            }\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"variant\": {\n      \"defaultValue\": {\n        \"value\": \"'scrollable'\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"tabs\": {\n            \"name\": \"shape\",\n            \"value\": {\n              \"root\": {\n                \"name\": \"string\",\n                \"required\": false\n              },\n              \"content\": {\n                \"name\": \"string\",\n                \"required\": false\n              }\n            },\n            \"required\": false\n          },\n          \"tab\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"root\": {\n            \"name\": \"string\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"value\": {\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"light\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"compact\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"swipeable\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"componentProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\Tabs\\\\Tabs.view.js\"] = {\n    name: \"TabsView\",\n    docgenInfo: TabsView.__docgenInfo,\n    path: \"src\\\\components\\\\Tabs\\\\Tabs.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TabsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Tabs/Tabs.view.js"],"names":["React","PropTypes","classnames","SwipeableViews","get","isNumber","utils","styles","Tabs","MuiTabs","Tab","Badge","makeStyles","InfoOutlinedIcon","TabsView","propTypes","tabs","arrayOf","shape","label","string","isRequired","errors","number","value","oneOfType","total","complete","count","disabled","bool","light","compact","swipeable","variant","componentProps","object","nestedClasses","root","content","tab","onChange","func","defaultProps","verticalAlignBool","props","classes","name","TabLabel","subLabel","Boolean","iconError","sublabel","TabCount","labelCount","TabContent","elements","Children","toArray","children","disconnectedTabContent","every","el","undefined","map","child","cloneElement","style","display","getValueIndex","findIndex","getIndexValue","index","generic","isValidArray","length","scrollButtons","tabProps","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport SwipeableViews from 'react-swipeable-views';\r\nimport get from 'lodash/get';\r\nimport isNumber from 'lodash/isNumber';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport styles from './Tabs.styles';\r\n\r\n// mui\r\nimport { Tabs as MuiTabs, Tab, Badge, makeStyles } from '@material-ui/core';\r\nimport InfoOutlinedIcon from '@material-ui/icons/InfoOutlined';\r\n\r\nTabsView.propTypes = {\r\n  tabs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      label: PropTypes.string.isRequired,\r\n      errors: PropTypes.number,\r\n      value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      total: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      complete: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      count: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n      disabled: PropTypes.bool,\r\n    })\r\n  ).isRequired,\r\n  value: PropTypes.oneOfType([PropTypes.string, PropTypes.number]).isRequired,\r\n  light: PropTypes.bool,\r\n  compact: PropTypes.bool,\r\n  swipeable: PropTypes.bool,\r\n  variant: PropTypes.string,\r\n  componentProps: PropTypes.object,\r\n  nestedClasses: PropTypes.shape({\r\n    tabs: PropTypes.shape({\r\n      root: PropTypes.string,\r\n      content: PropTypes.string,\r\n    }),\r\n    tab: PropTypes.string,\r\n    root: PropTypes.string,\r\n  }),\r\n  onChange: PropTypes.func.isRequired,\r\n};\r\n\r\nTabsView.defaultProps = {\r\n  tabs: [],\r\n  variant: 'scrollable',\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function TabsView({\r\n  tabs,\r\n  verticalAlignBool,\r\n  value,\r\n  light,\r\n  compact,\r\n  swipeable,\r\n  variant,\r\n  componentProps,\r\n  nestedClasses,\r\n  onChange,\r\n  ...props\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'Tabs' })({ light, compact });\r\n\r\n  const TabLabel = ({ label, subLabel, total, complete, count, errors }) => {\r\n    return (\r\n      <>\r\n        <div className={classes.label}>\r\n          {isNumber(count) ? (\r\n            <Badge badgeContent={count} color=\"error\">\r\n              {label}\r\n            </Badge>\r\n          ) : (\r\n            label\r\n          )}{' '}\r\n          {isNumber(complete) && isNumber(total) && <TabCount total={total} complete={complete} />}\r\n          {Boolean(errors) && <InfoOutlinedIcon color=\"error\" className={classes.iconError} />}\r\n        </div>\r\n        {subLabel && <div className={classes.sublabel}>{subLabel}</div>}\r\n      </>\r\n    );\r\n  };\r\n\r\n  const TabCount = ({ complete, total }) => {\r\n    return (\r\n      <span className={classes.labelCount}>\r\n        ({complete}/{total})\r\n      </span>\r\n    );\r\n  };\r\n\r\n  const TabContent = () => {\r\n    const elements = React.Children.toArray(props.children);\r\n    const disconnectedTabContent = elements.every((el) => get(el, 'props.value') === undefined);\r\n\r\n    if (!props.children) return null;\r\n\r\n    // if none of the children have a value props, then render whatever is there\r\n    // this allows to display any components as tab content (ex: OpeningMemoContent)\r\n    // this content can manage itself what it renders based on its own selected tab state\r\n    if (disconnectedTabContent) {\r\n      return props.children;\r\n    }\r\n\r\n    // if any of the child have a value props\r\n    // then the Tabs component controls which one to display based on the current value\r\n    return React.Children.map(props.children, (child) => {\r\n      return React.cloneElement(child, {\r\n        style: { display: value === child.props.value ? 'block' : 'none' },\r\n      });\r\n    });\r\n  };\r\n\r\n  const getValueIndex = (value) => {\r\n    return tabs.findIndex((tab) => {\r\n      return tab.value === value;\r\n    });\r\n  };\r\n\r\n  const getIndexValue = (index) => {\r\n    return get(tabs, `[${index}].value`);\r\n  };\r\n\r\n  // abort\r\n  if (!utils.generic.isValidArray(tabs)) return null;\r\n\r\n  return tabs.length ? (\r\n    <div\r\n      className={classnames({\r\n        [classes.root]: true,\r\n        [nestedClasses.root]: Boolean(nestedClasses.root),\r\n      })}\r\n      data-testid=\"tabs\"\r\n    >\r\n      <MuiTabs\r\n        orientation={verticalAlignBool ? 'vertical' : 'horizontal'}\r\n        {...props}\r\n        value={value}\r\n        onChange={onChange}\r\n        variant={variant}\r\n        classes={{\r\n          root: classnames([classes.tabs, get(nestedClasses, 'tabs.root')]),\r\n          scrollButtons: classnames(variant === 'scrollable' ? classes.scrollButtons : undefined),\r\n        }}\r\n        data-testid=\"tabs-mui\"\r\n      >\r\n        {tabs.map((tab, index) => {\r\n          const { subLabel, ...tabProps } = tab;\r\n          return (\r\n            <Tab\r\n              key={index}\r\n              {...tabProps}\r\n              value={tab.value}\r\n              disabled={tab?.disabled}\r\n              label={<TabLabel {...tab} subLabel={subLabel} label={utils.string.t(tab.label)} />}\r\n              data-testid=\"tabs-mui-item\"\r\n              classes={{ root: get(nestedClasses, 'tab.root') }}\r\n            />\r\n          );\r\n        })}\r\n      </MuiTabs>\r\n\r\n      <div data-testid=\"tabs-content\" className={get(nestedClasses, 'tabs.content')}>\r\n        {swipeable && (\r\n          <SwipeableViews\r\n            index={getValueIndex(value)}\r\n            enableMouseEvents\r\n            hysteresis={0.3}\r\n            onChangeIndex={(index) => onChange(null, getIndexValue(index))}\r\n            {...componentProps}\r\n          >\r\n            {props.children}\r\n          </SwipeableViews>\r\n        )}\r\n\r\n        {!swipeable && <TabContent />}\r\n      </div>\r\n    </div>\r\n  ) : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}