{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\CreateAdHocTask\\\\CreateAdHocTask.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport * as utils from 'utils';\nimport { Button, FormContainer, FormFields, FormGrid, FormAutocompleteMui, FormText, FormLabel, FormDate, FormActions } from 'components';\nimport { ClaimsUploadViewSearchDocs } from 'modules';\nimport * as constants from 'consts';\nimport { useFormActions } from 'hooks';\nimport styles from './CreateAdHocTask.styles'; //mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nCreateAdHocTaskView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  docsPromptActions: PropTypes.array.isRequired,\n  control: PropTypes.object.isRequired,\n  errors: PropTypes.object.isRequired,\n  formState: PropTypes.object.isRequired,\n  handleSubmit: PropTypes.object.isRequired,\n  reset: PropTypes.object.isRequired,\n  claimRef: PropTypes.string.isRequired,\n  taskDetails: PropTypes.string.isRequired,\n  resetKey: PropTypes.number,\n  additionalResetKey: PropTypes.number,\n  isEditFlag: PropTypes.bool,\n  adHocTaskData: PropTypes.object,\n  isTaskSubmitted: PropTypes.bool,\n  isUploadDocuments: PropTypes.bool,\n  handlers: PropTypes.shape({\n    onClosingUploadModal: PropTypes.func\n  })\n};\nexport function CreateAdHocTaskView(_ref) {\n  _s();\n\n  var actions = _ref.actions,\n      fields = _ref.fields,\n      control = _ref.control,\n      errors = _ref.errors,\n      formState = _ref.formState,\n      handleSubmit = _ref.handleSubmit,\n      reset = _ref.reset,\n      claimRef = _ref.claimRef,\n      taskDetails = _ref.taskDetails,\n      resetKey = _ref.resetKey,\n      additionalResetKey = _ref.additionalResetKey,\n      isEditFlag = _ref.isEditFlag,\n      adHocTaskData = _ref.adHocTaskData,\n      isTaskSubmitted = _ref.isTaskSubmitted,\n      docsPromptActions = _ref.docsPromptActions,\n      isUploadDocuments = _ref.isUploadDocuments,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'CreateAdHocTask'\n  })();\n\n  var _useFormActions = useFormActions(actions, reset),\n      secondary = _useFormActions.secondary,\n      submit = _useFormActions.submit;\n\n  var uploadYes = docsPromptActions.yes,\n      uploadNo = docsPromptActions.no;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      onSubmit: handleSubmit,\n      \"data-testid\": \"form-edit-loss-information\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(Typography, {\n          variant: \"h5\",\n          className: classes.sectionheader,\n          children: utils.string.t('claims.processing.taskFunctionalityTabs.taskDetails')\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          spacing: 2,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t('claims.processing.taskDetailsLabels.claimRef'),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 69,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 68,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: claimRef,\n                align: \"left\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 72,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 67,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 2,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.taskName'), \"*\"),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 77,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 76,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 10,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'taskName', control)), {}, {\n                error: errors.taskName\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 80,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 79,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 75,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.priority'), \"*\"),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 85,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 84,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'priority', control)), {}, {\n                error: errors.priority,\n                nestedClasses: {\n                  root: classes.catCodeSelect\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 88,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 87,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 83,\n            columnNumber: 13\n          }, this), utils.generic.isValidObject(taskDetails) && taskDetails !== null && /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 12,\n            sm: 6,\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t('app.status'),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 97,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'status', control)), {}, {\n                error: errors.status,\n                nestedClasses: {\n                  root: classes.catCodeSelect\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 100,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 99,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 95,\n            columnNumber: 83\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            xs: 12,\n            sm: 12,\n            alignItems: \"center\",\n            nestedClasses: {\n              root: classes.assignees\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              nestedClasses: {\n                root: classes.assigneeItem\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.assignedTo'), \" \").concat(!taskDetails ? '*' : ''),\n                  align: \"right\",\n                  nowrap: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 110,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 109,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: isEditFlag ? /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.assigneeFullName),\n                  align: \"left\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 118,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'assignedTo', control, errors)), {}, {\n                  nestedClasses: {\n                    root: classes.catCodeSelect\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 120,\n                  columnNumber: 21\n                }, this)\n              }, resetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 116,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              alignItems: \"center\",\n              nestedClasses: {\n                root: classes.assigneeItem\n              },\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                sm: 4,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: utils.string.t('claims.processing.taskDetailsLabels.additionalAssignee'),\n                  align: \"right\",\n                  nowrap: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 129,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 128,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 8,\n                children: isEditFlag ? /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: (taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.additionalAssigneeFullName) ? \"\".concat(taskDetails === null || taskDetails === void 0 ? void 0 : taskDetails.additionalAssigneeFullName) : '',\n                  align: \"left\",\n                  nowrap: true\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 133,\n                  columnNumber: 21\n                }, this) : /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'addtlAssignee', control, errors)), {}, {\n                  nestedClasses: {\n                    root: classes.catCodeSelect\n                  }\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 139,\n                  columnNumber: 21\n                }, this)\n              }, additionalResetKey, false, {\n                fileName: _jsxFileName,\n                lineNumber: 131,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 127,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            xs: 12,\n            sm: 12,\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              container: true,\n              children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 2,\n                children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                  label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.description'), \"*\"),\n                  align: \"right\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 150,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 149,\n                columnNumber: 17\n              }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                item: true,\n                xs: 10,\n                children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'description', control)), {}, {\n                  error: errors.description\n                }), void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 153,\n                  columnNumber: 19\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 152,\n                columnNumber: 17\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 148,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 147,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            xs: 12,\n            sm: 12,\n            alignItems: \"center\",\n            nestedClasses: {\n              root: classes.greyGrid\n            },\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    label: \"\".concat(utils.string.t('claims.processing.taskDetailsLabels.targetDueDate'), \"*\"),\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 161,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 160,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 8,\n                  children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'targetDueDate', control)), {}, {\n                    error: errors.targetDueDate\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 159,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 158,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              sm: 6,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                alignItems: \"center\",\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 4,\n                  children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                    label: utils.string.t('claims.processing.taskDetailsLabels.reminder'),\n                    align: \"right\"\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 19\n                }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 8,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'reminder', control)), {}, {\n                    nestedClasses: {\n                      root: classes.catCodeSelect\n                    }\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 174,\n                    columnNumber: 21\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 173,\n                  columnNumber: 19\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 169,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 157,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 66,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n          type: \"dialog\",\n          children: [secondary && /*#__PURE__*/_jsxDEV(Button, {\n            text: secondary.label,\n            variant: \"outlined\",\n            size: \"medium\",\n            disabled: formState.isSubmitting,\n            onClick: secondary.handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 185,\n            columnNumber: 15\n          }, this), submit && /*#__PURE__*/_jsxDEV(Button, {\n            text: submit.label,\n            type: \"submit\",\n            disabled: formState.isSubmitting || isTaskSubmitted,\n            onClick: handleSubmit(submit.handler),\n            color: \"primary\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 194,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 11\n        }, this), isTaskSubmitted && /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            container: true,\n            alignItems: \"center\",\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              variant: \"h5\",\n              label: utils.string.t('dms.wrapper.uploadDocsPrompt'),\n              align: \"left\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 6,\n            children: [uploadNo && /*#__PURE__*/_jsxDEV(Button, {\n              text: uploadNo.label,\n              variant: \"outlined\",\n              size: \"medium\",\n              onClick: uploadNo.handler\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 30\n            }, this), uploadYes && /*#__PURE__*/_jsxDEV(Button, {\n              text: uploadYes.label,\n              color: \"primary\",\n              size: \"medium\",\n              onClick: uploadYes.handler,\n              nestedClasses: {\n                btn: classes.uploadYesBtn\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 212,\n              columnNumber: 19\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 209,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 205,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 62,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 61,\n      columnNumber: 7\n    }, this), isUploadDocuments && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.dmsView,\n      children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n        refData: adHocTaskData,\n        refIdName: constants.DMS_CONTEXT_TASK_ID,\n        dmsContext: constants.DMS_CONTEXT_TASK,\n        documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims,\n        handlers: {\n          onClosingUploadModal: handlers.onClosingUploadModal\n        }\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 227,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 60,\n    columnNumber: 5\n  }, this);\n}\n\n_s(CreateAdHocTaskView, \"H+XxpqIWRsIYU82jpehTnL5/3wc=\", false, function () {\n  return [useFormActions];\n});\n\n_c = CreateAdHocTaskView;\n\nvar _c;\n\n$RefreshReg$(_c, \"CreateAdHocTaskView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/CreateAdHocTask/CreateAdHocTask.view.js"],"names":["React","PropTypes","utils","Button","FormContainer","FormFields","FormGrid","FormAutocompleteMui","FormText","FormLabel","FormDate","FormActions","ClaimsUploadViewSearchDocs","constants","useFormActions","styles","makeStyles","Typography","CreateAdHocTaskView","propTypes","fields","array","isRequired","actions","docsPromptActions","control","object","errors","formState","handleSubmit","reset","claimRef","string","taskDetails","resetKey","number","additionalResetKey","isEditFlag","bool","adHocTaskData","isTaskSubmitted","isUploadDocuments","handlers","shape","onClosingUploadModal","func","classes","name","secondary","submit","uploadYes","yes","uploadNo","no","sectionheader","t","form","getFieldProps","taskName","priority","root","catCodeSelect","generic","isValidObject","status","assignees","assigneeItem","assigneeFullName","additionalAssigneeFullName","description","greyGrid","targetDueDate","label","isSubmitting","handler","btn","uploadYesBtn","dmsView","DMS_CONTEXT_TASK_ID","DMS_CONTEXT_TASK","DMS_DOCUMENT_TYPE_SECTION_KEYS","type","claims"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { Button, FormContainer, FormFields, FormGrid, FormAutocompleteMui, FormText, FormLabel, FormDate, FormActions } from 'components';\r\nimport { ClaimsUploadViewSearchDocs } from 'modules';\r\nimport * as constants from 'consts';\r\nimport { useFormActions } from 'hooks';\r\nimport styles from './CreateAdHocTask.styles';\r\n\r\n//mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nCreateAdHocTaskView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  docsPromptActions: PropTypes.array.isRequired,\r\n  control: PropTypes.object.isRequired,\r\n  errors: PropTypes.object.isRequired,\r\n  formState: PropTypes.object.isRequired,\r\n  handleSubmit: PropTypes.object.isRequired,\r\n  reset: PropTypes.object.isRequired,\r\n  claimRef: PropTypes.string.isRequired,\r\n  taskDetails: PropTypes.string.isRequired,\r\n  resetKey: PropTypes.number,\r\n  additionalResetKey: PropTypes.number,\r\n  isEditFlag: PropTypes.bool,\r\n  adHocTaskData: PropTypes.object,\r\n  isTaskSubmitted: PropTypes.bool,\r\n  isUploadDocuments: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    onClosingUploadModal: PropTypes.func,\r\n  }),\r\n};\r\n\r\nexport function CreateAdHocTaskView({\r\n  actions,\r\n  fields,\r\n  control,\r\n  errors,\r\n  formState,\r\n  handleSubmit,\r\n  reset,\r\n  claimRef,\r\n  taskDetails,\r\n  resetKey,\r\n  additionalResetKey,\r\n  isEditFlag,\r\n  adHocTaskData,\r\n  isTaskSubmitted,\r\n  docsPromptActions,\r\n  isUploadDocuments,\r\n  handlers,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'CreateAdHocTask' })();\r\n  const { secondary, submit } = useFormActions(actions, reset);\r\n  const { yes: uploadYes, no: uploadNo } = docsPromptActions;\r\n  return (\r\n    <div>\r\n      <FormContainer onSubmit={handleSubmit} data-testid=\"form-edit-loss-information\">\r\n        <FormFields type=\"dialog\">\r\n          <Typography variant=\"h5\" className={classes.sectionheader}>\r\n            {utils.string.t('claims.processing.taskFunctionalityTabs.taskDetails')}\r\n          </Typography>\r\n          <FormGrid container spacing={2}>\r\n            <FormGrid container alignItems=\"center\">\r\n              <FormGrid item xs={2}>\r\n                <FormLabel label={utils.string.t('claims.processing.taskDetailsLabels.claimRef')} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={10}>\r\n                <FormLabel label={claimRef} align=\"left\" />\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid container alignItems=\"center\">\r\n              <FormGrid item xs={2}>\r\n                <FormLabel label={`${utils.string.t('claims.processing.taskDetailsLabels.taskName')}*`} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={10}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'taskName', control)} error={errors.taskName} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid item xs={12} sm={6} container alignItems=\"center\">\r\n              <FormGrid item xs={4}>\r\n                <FormLabel label={`${utils.string.t('claims.processing.taskDetailsLabels.priority')}*`} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={8}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'priority', control)}\r\n                  error={errors.priority}\r\n                  nestedClasses={{ root: classes.catCodeSelect }}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n            {utils.generic.isValidObject(taskDetails) && taskDetails !== null && (<FormGrid item xs={12} sm={6} container alignItems=\"center\">\r\n              <FormGrid item xs={4}>\r\n                <FormLabel label={utils.string.t('app.status')} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={8}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'status', control)}\r\n                  error={errors.status}\r\n                  nestedClasses={{ root: classes.catCodeSelect }}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>)}\r\n            <FormGrid xs={12} sm={12} alignItems=\"center\" nestedClasses={{ root: classes.assignees }}>\r\n              <FormGrid container alignItems=\"center\" nestedClasses={{ root: classes.assigneeItem }}>\r\n                <FormGrid item sm={4}>\r\n                  <FormLabel\r\n                    label={`${utils.string.t('claims.processing.taskDetailsLabels.assignedTo')} ${!taskDetails ? '*' : ''}`}\r\n                    align=\"right\"\r\n                    nowrap\r\n                  />\r\n                </FormGrid>\r\n                <FormGrid item xs={8} key={resetKey}>\r\n                  {isEditFlag ? (\r\n                    <FormLabel label={`${taskDetails?.assigneeFullName}`} align=\"left\" />\r\n                  ) : (\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'assignedTo', control, errors)}\r\n                      nestedClasses={{ root: classes.catCodeSelect }}\r\n                    />\r\n                  )}\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid container alignItems=\"center\" nestedClasses={{ root: classes.assigneeItem }}>\r\n                <FormGrid item sm={4}>\r\n                  <FormLabel label={utils.string.t('claims.processing.taskDetailsLabels.additionalAssignee')} align=\"right\" nowrap />\r\n                </FormGrid>\r\n                <FormGrid item xs={8} key={additionalResetKey}>\r\n                  {isEditFlag ? (\r\n                    <FormLabel\r\n                      label={taskDetails?.additionalAssigneeFullName ? `${taskDetails?.additionalAssigneeFullName}` : ''}\r\n                      align=\"left\"\r\n                      nowrap\r\n                    />\r\n                  ) : (\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'addtlAssignee', control, errors)}\r\n                      nestedClasses={{ root: classes.catCodeSelect }}\r\n                    />\r\n                  )}\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid xs={12} sm={12}>\r\n              <FormGrid container>\r\n                <FormGrid item xs={2}>\r\n                  <FormLabel label={`${utils.string.t('claims.processing.taskDetailsLabels.description')}*`} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={10}>\r\n                  <FormText {...utils.form.getFieldProps(fields, 'description', control)} error={errors.description} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n            <FormGrid xs={12} sm={12} alignItems=\"center\" nestedClasses={{ root: classes.greyGrid }}>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormGrid container alignItems=\"center\">\r\n                  <FormGrid item xs={4}>\r\n                    <FormLabel label={`${utils.string.t('claims.processing.taskDetailsLabels.targetDueDate')}*`} align=\"right\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={8}>\r\n                    <FormDate {...utils.form.getFieldProps(fields, 'targetDueDate', control)} error={errors.targetDueDate} />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n              <FormGrid item xs={12} sm={6}>\r\n                <FormGrid container alignItems=\"center\">\r\n                  <FormGrid item xs={4}>\r\n                    <FormLabel label={utils.string.t('claims.processing.taskDetailsLabels.reminder')} align=\"right\" />\r\n                  </FormGrid>\r\n                  <FormGrid item xs={8}>\r\n                    <FormAutocompleteMui\r\n                      {...utils.form.getFieldProps(fields, 'reminder', control)}\r\n                      nestedClasses={{ root: classes.catCodeSelect }}\r\n                    />\r\n                  </FormGrid>\r\n                </FormGrid>\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n          <FormActions type=\"dialog\">\r\n            {secondary && (\r\n              <Button\r\n                text={secondary.label}\r\n                variant=\"outlined\"\r\n                size=\"medium\"\r\n                disabled={formState.isSubmitting}\r\n                onClick={secondary.handler}\r\n              />\r\n            )}\r\n            {submit && (\r\n              <Button\r\n                text={submit.label}\r\n                type=\"submit\"\r\n                disabled={formState.isSubmitting || isTaskSubmitted}\r\n                onClick={handleSubmit(submit.handler)}\r\n                color=\"primary\"\r\n              />\r\n            )}\r\n          </FormActions>\r\n\r\n          {isTaskSubmitted && (\r\n            <FormGrid container>\r\n              <FormGrid item xs={6} container alignItems=\"center\">\r\n                <FormLabel variant=\"h5\" label={utils.string.t('dms.wrapper.uploadDocsPrompt')} align=\"left\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={6}>\r\n                {uploadNo && <Button text={uploadNo.label} variant=\"outlined\" size=\"medium\" onClick={uploadNo.handler} />}\r\n                {uploadYes && (\r\n                  <Button\r\n                    text={uploadYes.label}\r\n                    color=\"primary\"\r\n                    size=\"medium\"\r\n                    onClick={uploadYes.handler}\r\n                    nestedClasses={{ btn: classes.uploadYesBtn }}\r\n                  />\r\n                )}\r\n              </FormGrid>\r\n            </FormGrid>\r\n          )}\r\n        </FormFields>\r\n      </FormContainer>\r\n      {isUploadDocuments && (\r\n        <div className={classes.dmsView}>\r\n          <ClaimsUploadViewSearchDocs\r\n            refData={adHocTaskData}\r\n            refIdName={constants.DMS_CONTEXT_TASK_ID}\r\n            dmsContext={constants.DMS_CONTEXT_TASK}\r\n            documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.type.claims}\r\n            handlers={{ onClosingUploadModal: handlers.onClosingUploadModal }}\r\n          />\r\n        </div>\r\n      )}\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}