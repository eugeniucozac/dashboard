{"ast":null,"code":"import \"core-js/modules/es.array.concat\";\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getFacilityLimitsDefinition = function getFacilityLimitsDefinition(facilityId, productCode) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/risk.actions.getFacilityLimitsDefinition'\n    };\n    dispatch(getFacilityLimitsRequest(facilityId));\n\n    if (!facilityId || !productCode) {\n      dispatch(getFacilityLimitsFailure(defaultError));\n      return;\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.auth,\n      path: \"api/v1/products/\".concat(productCode, \"?type=LIMIT_APPLICABLE&facilityId=\").concat(facilityId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      dispatch(getFacilityLimitsSuccess(json.data));\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getFacilityLimitsFailure(err, facilityId));\n      return err;\n    });\n  };\n};\nexport var getFacilityLimitsRequest = function getFacilityLimitsRequest(facilityId) {\n  return {\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_REQUEST',\n    payload: facilityId\n  };\n};\nexport var getFacilityLimitsSuccess = function getFacilityLimitsSuccess(data) {\n  return {\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_SUCCESS',\n    payload: data === null || data === void 0 ? void 0 : data.product\n  };\n};\nexport var getFacilityLimitsFailure = function getFacilityLimitsFailure(error, facilityId) {\n  return {\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_FAILURE',\n    payload: {\n      error: error,\n      facilityId: facilityId\n    }\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/risk/risk.actions.getFacilityLimitsDefinition.js"],"names":["authLogout","utils","getFacilityLimitsDefinition","facilityId","productCode","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getFacilityLimitsRequest","getFacilityLimitsFailure","api","get","token","accessToken","path","then","response","handleResponse","json","getFacilityLimitsSuccess","data","err","handleError","handleUnauthorized","type","payload","product","error"],"mappings":";AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACC,UAAD,EAAaC,WAAb;AAAA,SAA6B,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAC9F;AAD8F,oBAEnCA,QAAQ,EAF2B;AAAA,QAE9EC,IAF8E,aAEtFC,IAFsF,CAE9ED,IAF8E;AAAA,QAEpDE,QAFoD,aAEtEC,MAFsE,CAE5DC,IAF4D,CAEpDF,QAFoD;;AAI9F,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,wBAAwB,CAACX,UAAD,CAAzB,CAAR;;AAEA,QAAI,CAACA,UAAD,IAAe,CAACC,WAApB,EAAiC;AAC/BC,MAAAA,QAAQ,CAACU,wBAAwB,CAACH,YAAD,CAAzB,CAAR;AACA;AACD;;AAED,WAAOX,KAAK,CAACe,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEX,IAAI,CAACY,WADT;AAEHV,MAAAA,QAAQ,EAAEA,QAAQ,CAACF,IAFhB;AAGHa,MAAAA,IAAI,4BAAqBhB,WAArB,+CAAqED,UAArE;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACe,GAAN,CAAUO,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,wBAAwB,CAACD,IAAI,CAACE,IAAN,CAAzB,CAAR;AACD,KATI,WAUE,UAACC,GAAD,EAAS;AACd1B,MAAAA,KAAK,CAACe,GAAN,CAAUY,WAAV,CAAsBD,GAAtB,EAA2Bf,YAA3B;AACAX,MAAAA,KAAK,CAACe,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCtB,QAAlC,EAA4CL,UAA5C;AACAK,MAAAA,QAAQ,CAACU,wBAAwB,CAACY,GAAD,EAAMxB,UAAN,CAAzB,CAAR;AACA,aAAOwB,GAAP;AACD,KAfI,CAAP;AAgBD,GA/B0C;AAAA,CAApC;AAiCP,OAAO,IAAMb,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACX,UAAD,EAAgB;AACtD,SAAO;AACL2B,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAE5B;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMsB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACC,IAAD,EAAU;AAChD,SAAO;AACLI,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAEL,IAAF,aAAEA,IAAF,uBAAEA,IAAI,CAAEM;AAFV,GAAP;AAID,CALM;AAOP,OAAO,IAAMjB,wBAAwB,GAAG,SAA3BA,wBAA2B,CAACkB,KAAD,EAAQ9B,UAAR,EAAuB;AAC7D,SAAO;AACL2B,IAAAA,IAAI,EAAE,sCADD;AAELC,IAAAA,OAAO,EAAE;AAAEE,MAAAA,KAAK,EAALA,KAAF;AAAS9B,MAAAA,UAAU,EAAVA;AAAT;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getFacilityLimitsDefinition = (facilityId, productCode) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/risk.actions.getFacilityLimitsDefinition',\r\n  };\r\n\r\n  dispatch(getFacilityLimitsRequest(facilityId));\r\n\r\n  if (!facilityId || !productCode) {\r\n    dispatch(getFacilityLimitsFailure(defaultError));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.auth,\r\n      path: `api/v1/products/${productCode}?type=LIMIT_APPLICABLE&facilityId=${facilityId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => {\r\n      dispatch(getFacilityLimitsSuccess(json.data));\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getFacilityLimitsFailure(err, facilityId));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getFacilityLimitsRequest = (facilityId) => {\r\n  return {\r\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_REQUEST',\r\n    payload: facilityId,\r\n  };\r\n};\r\n\r\nexport const getFacilityLimitsSuccess = (data) => {\r\n  return {\r\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_SUCCESS',\r\n    payload: data?.product,\r\n  };\r\n};\r\n\r\nexport const getFacilityLimitsFailure = (error, facilityId) => {\r\n  return {\r\n    type: 'RISK_FACILITY_LIMITS_DEF_GET_FAILURE',\r\n    payload: { error, facilityId },\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}