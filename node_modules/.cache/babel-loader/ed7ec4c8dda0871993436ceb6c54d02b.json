{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimAction\\\\ClaimAction.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport compact from 'lodash/compact';\nimport uniq from 'lodash/uniq'; // app\n\nimport { ClaimActionView } from './ClaimAction.view';\nimport { selectPriorities, getPriorityLevels, selectClaimsInformation } from 'stores';\nimport { MultiSelect, FormDate } from 'components';\nimport { useFlexiColumns } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function ClaimsAction(_ref) {\n  _s();\n\n  var claim = _ref.claim,\n      lossSelected = _ref.lossSelected;\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities);\n  var claimsInformation = useSelector(selectClaimsInformation);\n  console.log('claim ', claim);\n  console.log('loss ', claimsInformation);\n  useEffect(function () {\n    dispatch(getPriorityLevels());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimActionsItems = {\n    pagination: {\n      page: 0,\n      size: 10,\n      totalPages: 23,\n      totalElements: 221,\n      direction: 'DESC',\n      orderBy: 'lossRef',\n      searchBy: 'lossName'\n    },\n    items: [{\n      actionID: null,\n      actionName: null,\n      description: null,\n      assignedTo: 'Arun Arumugam',\n      assignedToEmail: 'arun.arumugam@ardonaghspecialty.com',\n      claimId: 4972,\n      claimLossFromDate: '2022-01-27T09:00:49.788+00:00',\n      claimReference: 'DZE00002A01',\n      claimStage: 'Capture Claim Data',\n      client: 'International Jewelers Underwriters Agency Ltd',\n      complexity: 'Unsure',\n      division: 'Property & Casualty',\n      divisionID: 1,\n      department: null,\n      lossDetailID: null,\n      dateCreated: '2022-01-03T09:03:32.903+00:00',\n      targetDueDate: '2022-02-03T09:03:32.903+00:00',\n      insured: 'As May Be Declared By Price Forbes Marine',\n      lastUpdatedDate: '2022-01-27T09:00:49.788+00:00',\n      lossRef: 'DZE00002',\n      policyId: 71033,\n      policyRef: 'FIC2000008',\n      priority: 'Medium',\n      priorityId: null,\n      instanceID: null,\n      isClaim: true,\n      processID: '195c8bb4-7de9-11ec-964a-0242ac100202',\n      sourceId: 4,\n      status: 'Draft',\n      team: 'Ardonagh',\n      xbInstance: 'London',\n      riskDetail: null,\n      actionChildItemList: [{\n        actionID: 'T2111010707499140153',\n        actionName: 'Gxb Sync',\n        description: 'Action First Advice',\n        team: 'Mphasis',\n        assignedTo: 'Arun Arumugam',\n        dateCreated: '2022-01-04T09:03:32.903+00:00',\n        targetDueDate: '2022-02-04T09:03:32.903+00:00',\n        priority: 'Medium',\n        status: 'In-progress',\n        insured: null,\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: null\n      }, {\n        actionID: 'Q2222999948173442263',\n        actionName: 'RFI',\n        description: 'Query Code',\n        team: 'Ardonagh',\n        assignedTo: 'Eugeniu Cozac',\n        dateCreated: '2022-01-05T09:03:32.903+00:00',\n        targetDueDate: '2022-02-05T09:03:32.903+00:00',\n        priority: 'High',\n        status: 'Complete',\n        insured: null,\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: null\n      }, {\n        actionID: 'T2111010707499140153',\n        actionName: 'Sanction Check',\n        description: 'Task Grid Visible',\n        team: 'Mphasis',\n        dateCreated: '2022-01-06T09:03:32.903+00:00',\n        targetDueDate: '2022-02-06T09:03:32.903+00:00',\n        priority: 'Medium',\n        status: 'New',\n        insured: null,\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: null\n      }, {\n        actionID: 'T211101070744072672153',\n        actionName: 'First Advice',\n        description: 'Test',\n        team: 'Mphasis',\n        assignedTo: 'Arun Arumugam',\n        dateCreated: '2022-01-07T09:03:32.903+00:00',\n        targetDueDate: '2022-02-07T09:03:32.903+00:00',\n        priority: 'Medium',\n        status: 'Pending',\n        insured: null,\n        department: null,\n        lossDetailID: null,\n        claimId: null,\n        processID: null,\n        divisionID: null,\n        instanceID: null,\n        isClaim: false,\n        claimRef: null,\n        riskDetail: null,\n        actionChildItemList: [{\n          actionID: 'Q2111100948173442263',\n          actionName: 'RFI',\n          description: 'Query Code',\n          team: 'Ardonagh',\n          assignedTo: 'Clare Abbott',\n          dateCreated: '2022-01-08T09:03:32.903+00:00',\n          targetDueDate: '2022-02-08T09:03:32.903+00:00',\n          priority: 'Low',\n          status: 'Complete',\n          insured: null,\n          department: null,\n          lossDetailID: null,\n          claimId: null,\n          processID: null,\n          divisionID: null,\n          instanceID: null,\n          isClaim: false,\n          claimRef: null,\n          riskDetail: null,\n          actionChildItemList: null\n        }]\n      }]\n    }]\n  };\n\n  var getItemsFlat = function getItemsFlat(items, propName) {\n    return items.reduce(function (acc, cur) {\n      var item = _objectSpread({}, cur);\n\n      var itemChildren = utils.generic.isValidArray(item === null || item === void 0 ? void 0 : item[propName], true) ? _toConsumableArray(item[propName]) : null;\n      return [].concat(_toConsumableArray(acc), [item], _toConsumableArray(itemChildren ? getItemsFlat(itemChildren, propName) : []));\n    }, []);\n  };\n\n  var _useState = useState(claimActionsItems.items),\n      _useState2 = _slicedToArray(_useState, 2),\n      itemsFiltered = _useState2[0],\n      setItemsFiltered = _useState2[1];\n\n  var _useState3 = useState(''),\n      _useState4 = _slicedToArray(_useState3, 2),\n      searchQuery = _useState4[0],\n      setSearchQuery = _useState4[1];\n\n  var _useState5 = useState(null),\n      _useState6 = _slicedToArray(_useState5, 2),\n      filters = _useState6[0],\n      setFilters = _useState6[1];\n\n  var searchableColumns = ['actionID', 'actionName', 'team', 'assignedTo', 'priority', 'status', 'description', 'divisionName', 'insured'];\n  var filterableColumns = [{\n    name: 'assignedTo',\n    type: 'array'\n  }, {\n    name: 'priority',\n    type: 'array'\n  }, {\n    name: 'status',\n    type: 'array'\n  }, {\n    name: 'description',\n    type: 'array'\n  }, {\n    name: 'divisionName',\n    type: 'array'\n  }, {\n    name: 'insured',\n    type: 'array'\n  }, {\n    name: 'dateCreated',\n    type: 'date'\n  }, {\n    name: 'targetDueDate',\n    type: 'date'\n  }];\n\n  var hasFilters = function hasFilters(filter) {\n    return filter.type === 'array' && utils.generic.isValidArray(filters === null || filters === void 0 ? void 0 : filters[filter.name], true) || filter.type === 'date' && Boolean(filters === null || filters === void 0 ? void 0 : filters[filter.name]);\n  };\n\n  useEffect(function () {\n    var unfilteredItems = (claimActionsItems === null || claimActionsItems === void 0 ? void 0 : claimActionsItems.items) || [];\n    var nestedArrayKey = 'actionChildItemList';\n    var hasSearchFilters = filterableColumns.some(hasFilters);\n\n    if (searchQuery || hasSearchFilters) {\n      setItemsFiltered(filterItems(unfilteredItems, searchQuery, searchableColumns, nestedArrayKey, filters));\n    } else {\n      setItemsFiltered(unfilteredItems);\n    }\n  }, [searchQuery, filters]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var allItems = getItemsFlat((claimActionsItems === null || claimActionsItems === void 0 ? void 0 : claimActionsItems.items) || [], 'actionChildItemList');\n  var optionsAssignedTo = uniq(compact(allItems.map(function (i) {\n    return i.assignedTo;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsStatus = uniq(compact(allItems.map(function (i) {\n    return i.status;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsDivision = uniq(compact(allItems.map(function (i) {\n    return i.divisionName;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsInsured = uniq(compact(allItems.map(function (i) {\n    return i.insured;\n  }))).map(function (i) {\n    return {\n      id: i,\n      name: i\n    };\n  });\n  var optionsPriorities = priorities.map(function (i) {\n    return {\n      id: i.id,\n      name: i.description\n    };\n  });\n  var viewFields = [{\n    name: 'dateCreated',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'targetDueDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(viewFields);\n  var validationSchema = utils.form.getValidationSchema(viewFields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset;\n\n  var datePickerProps = {\n    type: 'datepicker',\n    value: '',\n    label: '',\n    plainText: true,\n    plainTextIcon: true,\n    placeholder: utils.string.t('app.selectDate'),\n    muiComponentProps: {\n      fullWidth: false,\n      margin: 'dense'\n    },\n    muiPickerProps: {\n      variant: 'inline',\n      format: 'DD-MM-YYYY'\n    }\n  };\n  var tableFilterFields = [{\n    id: 'assignedTo',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.assignedTo'),\n    value: [],\n    options: optionsAssignedTo,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"assignedTo\",\n      search: true,\n      options: optionsAssignedTo\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 288,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'dateCreated',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({\n      control: control,\n      id: \"creationdatepicker\",\n      name: \"dateCreated\"\n    }, datePickerProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 295,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'targetDueDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.targetDueDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread({\n      control: control,\n      id: \"targetduedatepicker\",\n      name: \"targetDueDate\"\n    }, datePickerProps), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 302,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'priority',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.priority'),\n    value: [],\n    options: optionsPriorities,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"priority\",\n      options: optionsPriorities\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 310,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'status',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    value: [],\n    options: optionsStatus,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"status\",\n      options: optionsStatus\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 318,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    value: [],\n    options: optionsDivision,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: optionsDivision\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'insured',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.insured'),\n    value: [],\n    options: optionsInsured,\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"insured\",\n      search: true,\n      options: optionsInsured\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 334,\n      columnNumber: 16\n    }, this)\n  }]; // check if any of the nested items have a match with the search query\n\n  var hasMatchDeep = function hasMatchDeep(items, query, columns, nestedKey) {\n    var filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    return items.reduce(function (acc, cur) {\n      var options = cur[nestedKey] || [];\n\n      if (hasMatch(cur, columns, query, filters)) {\n        return true;\n      } else {\n        return acc || hasMatchDeep(options, query, columns, nestedKey, filters);\n      }\n    }, false);\n  };\n\n  var hasMatch = function hasMatch(obj) {\n    var columns = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : [];\n    var query = arguments.length > 2 && arguments[2] !== undefined ? arguments[2] : '';\n    var filters = arguments.length > 3 && arguments[3] !== undefined ? arguments[3] : {};\n    var values = Object.entries(obj).reduce(function (acc, _ref2) {\n      var _ref3 = _slicedToArray(_ref2, 2),\n          key = _ref3[0],\n          value = _ref3[1];\n\n      return columns.includes(key) ? [].concat(_toConsumableArray(acc), [value]) : acc;\n    }, []);\n    var activeFilters = filterableColumns.filter(hasFilters);\n    var hasActiveFilters = (activeFilters === null || activeFilters === void 0 ? void 0 : activeFilters.length) > 0;\n    var hasSearchQuery = (query === null || query === void 0 ? void 0 : query.length) > 0;\n\n    if (hasSearchQuery && !hasActiveFilters) {\n      return utils.filters.matchQuery(values, query);\n    }\n\n    if (hasSearchQuery && hasActiveFilters) {\n      return utils.filters.matchQuery(values, query) && utils.filters.matchFilters(activeFilters, filters, obj);\n    }\n\n    if (!hasSearchQuery && hasActiveFilters) {\n      return utils.filters.matchFilters(activeFilters, filters, obj);\n    }\n  };\n\n  var filterItems = function filterItems() {\n    var items = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : [];\n    var query = arguments.length > 1 ? arguments[1] : undefined;\n    var columns = arguments.length > 2 ? arguments[2] : undefined;\n    var nestedKey = arguments.length > 3 ? arguments[3] : undefined;\n    var filters = arguments.length > 4 && arguments[4] !== undefined ? arguments[4] : {};\n    return items.reduce(function (acc, item) {\n      var options = item[nestedKey] || [];\n\n      if (hasMatch(item, columns, query, filters)) {\n        return [].concat(_toConsumableArray(acc), [item]);\n      } else {\n        if (hasMatchDeep(options, query, columns, nestedKey, filters)) {\n          return [].concat(_toConsumableArray(acc), [_objectSpread(_objectSpread({}, item), {}, _defineProperty({}, nestedKey, filterItems(options, query, columns, nestedKey, filters)))]);\n        } else {\n          return acc;\n        }\n      }\n    }, []);\n  };\n\n  var handleSearch = function handleSearch(searchObj) {\n    setSearchQuery((searchObj === null || searchObj === void 0 ? void 0 : searchObj.search) || '');\n  };\n\n  var handleResetSearch = function handleResetSearch() {\n    setSearchQuery('');\n  };\n\n  var handleFilter = function handleFilter(filters) {\n    setFilters(filters === null || filters === void 0 ? void 0 : filters.filters);\n  };\n\n  var handleResetFilter = function handleResetFilter() {\n    setFilters(null);\n    reset();\n  };\n\n  var columns = [{\n    id: 'actionId',\n    label: utils.string.t('app.actionId'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'name',\n    label: utils.string.t('app.name'),\n    visible: true,\n    ellipsis: true\n  }, {\n    id: 'description',\n    label: utils.string.t('claims.processing.tasksGridColumns.description'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsManagement.team'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'assignedTo',\n    label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'dateCreated',\n    label: utils.string.t('claims.columns.claimsManagement.createdDate'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'targetDate',\n    label: utils.string.t('claims.columns.claimsList.targetDueDate'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsManagement.priority'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'status',\n    label: utils.string.t('claims.columns.claimsManagement.status'),\n    nowrap: true,\n    visible: true\n  }, {\n    id: 'taskCompleted',\n    label: utils.string.t('claims.columns.claimsManagement.taskCompleted'),\n    nowrap: true,\n    visible: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      columnProps = _useFlexiColumns.columnProps;\n\n  return /*#__PURE__*/_jsxDEV(ClaimActionView, {\n    items: _objectSpread(_objectSpread({}, claimActionsItems), {}, {\n      items: itemsFiltered\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    tableFilterFields: tableFilterFields,\n    handlers: {\n      search: handleSearch,\n      filter: handleFilter,\n      resetFilter: handleResetFilter,\n      resetSearch: handleResetSearch\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 473,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsAction, \"uiM9cs/dRk8M5UVa4WTzCyHO7nw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = ClaimsAction;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsAction\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimAction/ClaimAction.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","yupResolver","compact","uniq","ClaimActionView","selectPriorities","getPriorityLevels","selectClaimsInformation","MultiSelect","FormDate","useFlexiColumns","utils","ClaimsAction","claim","lossSelected","dispatch","priorities","claimsInformation","console","log","claimActionsItems","pagination","page","size","totalPages","totalElements","direction","orderBy","searchBy","items","actionID","actionName","description","assignedTo","assignedToEmail","claimId","claimLossFromDate","claimReference","claimStage","client","complexity","division","divisionID","department","lossDetailID","dateCreated","targetDueDate","insured","lastUpdatedDate","lossRef","policyId","policyRef","priority","priorityId","instanceID","isClaim","processID","sourceId","status","team","xbInstance","riskDetail","actionChildItemList","claimRef","getItemsFlat","propName","reduce","acc","cur","item","itemChildren","generic","isValidArray","itemsFiltered","setItemsFiltered","searchQuery","setSearchQuery","filters","setFilters","searchableColumns","filterableColumns","name","type","hasFilters","filter","Boolean","unfilteredItems","nestedArrayKey","hasSearchFilters","some","filterItems","allItems","optionsAssignedTo","map","i","id","optionsStatus","optionsDivision","divisionName","optionsInsured","optionsPriorities","viewFields","value","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","datePickerProps","label","plainText","plainTextIcon","placeholder","string","t","muiComponentProps","fullWidth","margin","muiPickerProps","variant","format","tableFilterFields","options","content","hasMatchDeep","query","columns","nestedKey","hasMatch","obj","values","Object","entries","key","includes","activeFilters","hasActiveFilters","length","hasSearchQuery","matchQuery","matchFilters","handleSearch","searchObj","search","handleResetSearch","handleFilter","handleResetFilter","nowrap","visible","ellipsis","columnsArray","columnProps","resetFilter","resetSearch"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport compact from 'lodash/compact';\r\nimport uniq from 'lodash/uniq';\r\n\r\n// app\r\nimport { ClaimActionView } from './ClaimAction.view';\r\nimport { selectPriorities, getPriorityLevels, selectClaimsInformation } from 'stores';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nexport default function ClaimsAction({ claim, lossSelected }) {\r\n  const dispatch = useDispatch();\r\n\r\n  const priorities = useSelector(selectPriorities);\r\n  const claimsInformation = useSelector(selectClaimsInformation);\r\n\r\n  console.log('claim ', claim);\r\n  console.log('loss ', claimsInformation);\r\n\r\n  useEffect(() => {\r\n    dispatch(getPriorityLevels());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimActionsItems = {\r\n    pagination: {\r\n      page: 0,\r\n      size: 10,\r\n      totalPages: 23,\r\n      totalElements: 221,\r\n      direction: 'DESC',\r\n      orderBy: 'lossRef',\r\n      searchBy: 'lossName',\r\n    },\r\n    items: [\r\n      {\r\n        actionID: null,\r\n        actionName: null,\r\n        description: null,\r\n        assignedTo: 'Arun Arumugam',\r\n        assignedToEmail: 'arun.arumugam@ardonaghspecialty.com',\r\n        claimId: 4972,\r\n        claimLossFromDate: '2022-01-27T09:00:49.788+00:00',\r\n        claimReference: 'DZE00002A01',\r\n        claimStage: 'Capture Claim Data',\r\n        client: 'International Jewelers Underwriters Agency Ltd',\r\n        complexity: 'Unsure',\r\n        division: 'Property & Casualty',\r\n        divisionID: 1,\r\n        department: null,\r\n        lossDetailID: null,\r\n        dateCreated: '2022-01-03T09:03:32.903+00:00',\r\n        targetDueDate: '2022-02-03T09:03:32.903+00:00',\r\n        insured: 'As May Be Declared By Price Forbes Marine',\r\n        lastUpdatedDate: '2022-01-27T09:00:49.788+00:00',\r\n        lossRef: 'DZE00002',\r\n        policyId: 71033,\r\n        policyRef: 'FIC2000008',\r\n        priority: 'Medium',\r\n        priorityId: null,\r\n        instanceID: null,\r\n        isClaim: true,\r\n        processID: '195c8bb4-7de9-11ec-964a-0242ac100202',\r\n        sourceId: 4,\r\n        status: 'Draft',\r\n        team: 'Ardonagh',\r\n        xbInstance: 'London',\r\n        riskDetail: null,\r\n        actionChildItemList: [\r\n          {\r\n            actionID: 'T2111010707499140153',\r\n            actionName: 'Gxb Sync',\r\n            description: 'Action First Advice',\r\n            team: 'Mphasis',\r\n            assignedTo: 'Arun Arumugam',\r\n            dateCreated: '2022-01-04T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-04T09:03:32.903+00:00',\r\n            priority: 'Medium',\r\n            status: 'In-progress',\r\n            insured: null,\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: null,\r\n          },\r\n          {\r\n            actionID: 'Q2222999948173442263',\r\n            actionName: 'RFI',\r\n            description: 'Query Code',\r\n            team: 'Ardonagh',\r\n            assignedTo: 'Eugeniu Cozac',\r\n            dateCreated: '2022-01-05T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-05T09:03:32.903+00:00',\r\n            priority: 'High',\r\n            status: 'Complete',\r\n            insured: null,\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: null,\r\n          },\r\n          {\r\n            actionID: 'T2111010707499140153',\r\n            actionName: 'Sanction Check',\r\n            description: 'Task Grid Visible',\r\n            team: 'Mphasis',\r\n            dateCreated: '2022-01-06T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-06T09:03:32.903+00:00',\r\n            priority: 'Medium',\r\n            status: 'New',\r\n            insured: null,\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: null,\r\n          },\r\n          {\r\n            actionID: 'T211101070744072672153',\r\n            actionName: 'First Advice',\r\n            description: 'Test',\r\n            team: 'Mphasis',\r\n            assignedTo: 'Arun Arumugam',\r\n            dateCreated: '2022-01-07T09:03:32.903+00:00',\r\n            targetDueDate: '2022-02-07T09:03:32.903+00:00',\r\n            priority: 'Medium',\r\n            status: 'Pending',\r\n            insured: null,\r\n            department: null,\r\n            lossDetailID: null,\r\n            claimId: null,\r\n            processID: null,\r\n            divisionID: null,\r\n            instanceID: null,\r\n            isClaim: false,\r\n            claimRef: null,\r\n            riskDetail: null,\r\n            actionChildItemList: [\r\n              {\r\n                actionID: 'Q2111100948173442263',\r\n                actionName: 'RFI',\r\n                description: 'Query Code',\r\n                team: 'Ardonagh',\r\n                assignedTo: 'Clare Abbott',\r\n                dateCreated: '2022-01-08T09:03:32.903+00:00',\r\n                targetDueDate: '2022-02-08T09:03:32.903+00:00',\r\n                priority: 'Low',\r\n                status: 'Complete',\r\n                insured: null,\r\n                department: null,\r\n                lossDetailID: null,\r\n                claimId: null,\r\n                processID: null,\r\n                divisionID: null,\r\n                instanceID: null,\r\n                isClaim: false,\r\n                claimRef: null,\r\n                riskDetail: null,\r\n                actionChildItemList: null,\r\n              },\r\n            ],\r\n          },\r\n        ],\r\n      },\r\n    ],\r\n  };\r\n\r\n  const getItemsFlat = (items, propName) => {\r\n    return items.reduce((acc, cur) => {\r\n      const item = { ...cur };\r\n      const itemChildren = utils.generic.isValidArray(item?.[propName], true) ? [...item[propName]] : null;\r\n\r\n      return [...acc, item, ...(itemChildren ? getItemsFlat(itemChildren, propName) : [])];\r\n    }, []);\r\n  };\r\n\r\n  const [itemsFiltered, setItemsFiltered] = useState(claimActionsItems.items);\r\n  const [searchQuery, setSearchQuery] = useState('');\r\n  const [filters, setFilters] = useState(null);\r\n\r\n  const searchableColumns = [\r\n    'actionID',\r\n    'actionName',\r\n    'team',\r\n    'assignedTo',\r\n    'priority',\r\n    'status',\r\n    'description',\r\n    'divisionName',\r\n    'insured',\r\n  ];\r\n\r\n  const filterableColumns = [\r\n    { name: 'assignedTo', type: 'array' },\r\n    { name: 'priority', type: 'array' },\r\n    { name: 'status', type: 'array' },\r\n    { name: 'description', type: 'array' },\r\n    { name: 'divisionName', type: 'array' },\r\n    { name: 'insured', type: 'array' },\r\n    { name: 'dateCreated', type: 'date' },\r\n    { name: 'targetDueDate', type: 'date' },\r\n  ];\r\n\r\n  const hasFilters = (filter) => {\r\n    return (\r\n      (filter.type === 'array' && utils.generic.isValidArray(filters?.[filter.name], true)) ||\r\n      (filter.type === 'date' && Boolean(filters?.[filter.name]))\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    const unfilteredItems = claimActionsItems?.items || [];\r\n    const nestedArrayKey = 'actionChildItemList';\r\n    const hasSearchFilters = filterableColumns.some(hasFilters);\r\n\r\n    if (searchQuery || hasSearchFilters) {\r\n      setItemsFiltered(filterItems(unfilteredItems, searchQuery, searchableColumns, nestedArrayKey, filters));\r\n    } else {\r\n      setItemsFiltered(unfilteredItems);\r\n    }\r\n  }, [searchQuery, filters]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const allItems = getItemsFlat(claimActionsItems?.items || [], 'actionChildItemList');\r\n\r\n  const optionsAssignedTo = uniq(compact(allItems.map((i) => i.assignedTo))).map((i) => ({ id: i, name: i }));\r\n  const optionsStatus = uniq(compact(allItems.map((i) => i.status))).map((i) => ({ id: i, name: i }));\r\n  const optionsDivision = uniq(compact(allItems.map((i) => i.divisionName))).map((i) => ({ id: i, name: i }));\r\n  const optionsInsured = uniq(compact(allItems.map((i) => i.insured))).map((i) => ({ id: i, name: i }));\r\n  const optionsPriorities = priorities.map((i) => ({ id: i.id, name: i.description }));\r\n\r\n  const viewFields = [\r\n    { name: 'dateCreated', type: 'datepicker', value: null },\r\n    { name: 'targetDueDate', type: 'datepicker', value: null },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(viewFields);\r\n  const validationSchema = utils.form.getValidationSchema(viewFields);\r\n\r\n  const { control, reset } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const datePickerProps = {\r\n    type: 'datepicker',\r\n    value: '',\r\n    label: '',\r\n    plainText: true,\r\n    plainTextIcon: true,\r\n    placeholder: utils.string.t('app.selectDate'),\r\n    muiComponentProps: {\r\n      fullWidth: false,\r\n      margin: 'dense',\r\n    },\r\n    muiPickerProps: {\r\n      variant: 'inline',\r\n      format: 'DD-MM-YYYY',\r\n    },\r\n  };\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'assignedTo',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.assignedTo'),\r\n      value: [],\r\n      options: optionsAssignedTo,\r\n      content: <MultiSelect id=\"assignedTo\" search options={optionsAssignedTo} />,\r\n    },\r\n    {\r\n      id: 'dateCreated',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.dateAndTimeCreated'),\r\n      value: '',\r\n      content: <FormDate control={control} id=\"creationdatepicker\" name=\"dateCreated\" {...datePickerProps} />,\r\n    },\r\n    {\r\n      id: 'targetDueDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.targetDueDate'),\r\n      value: '',\r\n      content: <FormDate control={control} id=\"targetduedatepicker\" name=\"targetDueDate\" {...datePickerProps} />,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.priority'),\r\n      value: [],\r\n      options: optionsPriorities,\r\n      content: <MultiSelect id=\"priority\" options={optionsPriorities} />,\r\n    },\r\n    {\r\n      id: 'status',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      value: [],\r\n      options: optionsStatus,\r\n      content: <MultiSelect id=\"status\" options={optionsStatus} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      value: [],\r\n      options: optionsDivision,\r\n      content: <MultiSelect id=\"division\" search options={optionsDivision} />,\r\n    },\r\n    {\r\n      id: 'insured',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.insured'),\r\n      value: [],\r\n      options: optionsInsured,\r\n      content: <MultiSelect id=\"insured\" search options={optionsInsured} />,\r\n    },\r\n  ];\r\n\r\n  // check if any of the nested items have a match with the search query\r\n  const hasMatchDeep = (items, query, columns, nestedKey, filters = {}) => {\r\n    return items.reduce((acc, cur) => {\r\n      const options = cur[nestedKey] || [];\r\n\r\n      if (hasMatch(cur, columns, query, filters)) {\r\n        return true;\r\n      } else {\r\n        return acc || hasMatchDeep(options, query, columns, nestedKey, filters);\r\n      }\r\n    }, false);\r\n  };\r\n\r\n  const hasMatch = (obj, columns = [], query = '', filters = {}) => {\r\n    const values = Object.entries(obj).reduce((acc, [key, value]) => {\r\n      return columns.includes(key) ? [...acc, value] : acc;\r\n    }, []);\r\n\r\n    const activeFilters = filterableColumns.filter(hasFilters);\r\n    const hasActiveFilters = activeFilters?.length > 0;\r\n    const hasSearchQuery = query?.length > 0;\r\n\r\n    if (hasSearchQuery && !hasActiveFilters) {\r\n      return utils.filters.matchQuery(values, query);\r\n    }\r\n\r\n    if (hasSearchQuery && hasActiveFilters) {\r\n      return utils.filters.matchQuery(values, query) && utils.filters.matchFilters(activeFilters, filters, obj);\r\n    }\r\n\r\n    if (!hasSearchQuery && hasActiveFilters) {\r\n      return utils.filters.matchFilters(activeFilters, filters, obj);\r\n    }\r\n  };\r\n\r\n  const filterItems = (items = [], query, columns, nestedKey, filters = {}) => {\r\n    return items.reduce((acc, item) => {\r\n      const options = item[nestedKey] || [];\r\n\r\n      if (hasMatch(item, columns, query, filters)) {\r\n        return [...acc, item];\r\n      } else {\r\n        if (hasMatchDeep(options, query, columns, nestedKey, filters)) {\r\n          return [...acc, { ...item, [nestedKey]: filterItems(options, query, columns, nestedKey, filters) }];\r\n        } else {\r\n          return acc;\r\n        }\r\n      }\r\n    }, []);\r\n  };\r\n\r\n  const handleSearch = (searchObj) => {\r\n    setSearchQuery(searchObj?.search || '');\r\n  };\r\n\r\n  const handleResetSearch = () => {\r\n    setSearchQuery('');\r\n  };\r\n\r\n  const handleFilter = (filters) => {\r\n    setFilters(filters?.filters);\r\n  };\r\n\r\n  const handleResetFilter = () => {\r\n    setFilters(null);\r\n    reset();\r\n  };\r\n\r\n  const columns = [\r\n    {\r\n      id: 'actionId',\r\n      label: utils.string.t('app.actionId'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'name',\r\n      label: utils.string.t('app.name'),\r\n      visible: true,\r\n      ellipsis: true,\r\n    },\r\n\r\n    {\r\n      id: 'description',\r\n      label: utils.string.t('claims.processing.tasksGridColumns.description'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsManagement.team'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'assignedTo',\r\n      label: utils.string.t('claims.columns.claimsManagement.assignedTo'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateCreated',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdDate'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'targetDate',\r\n      label: utils.string.t('claims.columns.claimsList.targetDueDate'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'priority',\r\n      label: utils.string.t('claims.columns.claimsManagement.priority'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'status',\r\n      label: utils.string.t('claims.columns.claimsManagement.status'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'taskCompleted',\r\n      label: utils.string.t('claims.columns.claimsManagement.taskCompleted'),\r\n      nowrap: true,\r\n      visible: true,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray, columnProps } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <ClaimActionView\r\n      items={{ ...claimActionsItems, items: itemsFiltered }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      tableFilterFields={tableFilterFields}\r\n      handlers={{\r\n        search: handleSearch,\r\n        filter: handleFilter,\r\n        resetFilter: handleResetFilter,\r\n        resetSearch: handleResetSearch,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}