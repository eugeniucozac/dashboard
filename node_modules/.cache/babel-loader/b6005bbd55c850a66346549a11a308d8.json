{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\SingleSelect\\\\SingleSelect.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { withKnobs, text, boolean as _boolean } from '@storybook/addon-knobs';\nimport { SingleSelect } from 'components';\nimport isEqual from 'lodash/isEqual';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'SingleSelect',\n  component: SingleSelect,\n  decorators: [withKnobs]\n};\nexport var Default = function Default() {\n  _s();\n\n  var options = [{\n    id: 'astonmartin',\n    name: 'Aston Martin'\n  }, {\n    id: 'audi',\n    name: 'Audi'\n  }, {\n    id: 'bentley',\n    name: 'Bentley'\n  }, {\n    id: 'bmw',\n    name: 'BMW (Bayerische Motoren Werke AG)'\n  }, {\n    id: 'chevrolet',\n    name: 'Chevrolet'\n  }, {\n    id: 'citroen',\n    name: 'Citroen'\n  }, {\n    id: 'dodge',\n    name: 'Dodge'\n  }, {\n    id: 'ferrari',\n    name: 'Ferrari'\n  }, {\n    id: 'ford',\n    name: 'Ford'\n  }, {\n    id: 'honda',\n    name: 'Honda'\n  }, {\n    id: 'hyundai',\n    name: 'Hyundai'\n  }, {\n    id: 'infiniti',\n    name: 'Infiniti'\n  }, {\n    id: 'jaguar',\n    name: 'Jaguar'\n  }, {\n    id: 'kia',\n    name: 'Kia'\n  }, {\n    id: 'lotus',\n    name: 'Lotus'\n  }];\n  var initialValue = {};\n\n  var _useState = useState(options[1]),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedListItem = _useState2[0],\n      setSelectedListItem = _useState2[1];\n\n  var toggle = function toggle(selectedValue) {\n    if (isEqual(selectedValue, selectedListItem)) {\n      setSelectedListItem(_objectSpread({}, initialValue));\n    } else {\n      setSelectedListItem(selectedValue);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(SingleSelect, {\n    id: \"stories\",\n    search: _boolean('Search', true),\n    options: options,\n    value: selectedListItem,\n    placeholder: text('Placeholder', 'Search'),\n    handlers: {\n      onToggleOption: toggle\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 43,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Default, \"oIs9Ga/cVAXwVNbbvmIWnoAALvU=\");\n\nDefault.displayName = \"Default\";\n_c = Default;\nDefault.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Default\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\SingleSelect\\\\SingleSelect.stories.js\"] = {\n    name: \"Default\",\n    docgenInfo: Default.__docgenInfo,\n    path: \"src\\\\components\\\\SingleSelect\\\\SingleSelect.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Default\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/SingleSelect/SingleSelect.stories.js"],"names":["React","useState","withKnobs","text","boolean","SingleSelect","isEqual","title","component","decorators","Default","options","id","name","initialValue","selectedListItem","setSelectedListItem","toggle","selectedValue","onToggleOption"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,SAAT,EAAoBC,IAApB,EAA0BC,OAAO,IAAPA,QAA1B,QAAyC,wBAAzC;AACA,SAASC,YAAT,QAA6B,YAA7B;AACA,OAAOC,OAAP,MAAoB,gBAApB;;AAEA,eAAe;AACbC,EAAAA,KAAK,EAAE,cADM;AAEbC,EAAAA,SAAS,EAAEH,YAFE;AAGbI,EAAAA,UAAU,EAAE,CAACP,SAAD;AAHC,CAAf;AAMA,OAAO,IAAMQ,OAAO,GAAG,SAAVA,OAAU,GAAM;AAAA;;AAC3B,MAAMC,OAAO,GAAG,CACd;AAAEC,IAAAA,EAAE,EAAE,aAAN;AAAqBC,IAAAA,IAAI,EAAE;AAA3B,GADc,EAEd;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE;AAApB,GAFc,EAGd;AAAED,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAHc,EAId;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAJc,EAKd;AAAED,IAAAA,EAAE,EAAE,WAAN;AAAmBC,IAAAA,IAAI,EAAE;AAAzB,GALc,EAMd;AAAED,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GANc,EAOd;AAAED,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAPc,EAQd;AAAED,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GARc,EASd;AAAED,IAAAA,EAAE,EAAE,MAAN;AAAcC,IAAAA,IAAI,EAAE;AAApB,GATc,EAUd;AAAED,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAVc,EAWd;AAAED,IAAAA,EAAE,EAAE,SAAN;AAAiBC,IAAAA,IAAI,EAAE;AAAvB,GAXc,EAYd;AAAED,IAAAA,EAAE,EAAE,UAAN;AAAkBC,IAAAA,IAAI,EAAE;AAAxB,GAZc,EAad;AAAED,IAAAA,EAAE,EAAE,QAAN;AAAgBC,IAAAA,IAAI,EAAE;AAAtB,GAbc,EAcd;AAAED,IAAAA,EAAE,EAAE,KAAN;AAAaC,IAAAA,IAAI,EAAE;AAAnB,GAdc,EAed;AAAED,IAAAA,EAAE,EAAE,OAAN;AAAeC,IAAAA,IAAI,EAAE;AAArB,GAfc,CAAhB;AAkBA,MAAMC,YAAY,GAAG,EAArB;;AAnB2B,kBAoBqBb,QAAQ,CAACU,OAAO,CAAC,CAAD,CAAR,CApB7B;AAAA;AAAA,MAoBpBI,gBApBoB;AAAA,MAoBFC,mBApBE;;AAsB3B,MAAMC,MAAM,GAAG,SAATA,MAAS,CAACC,aAAD,EAAmB;AAChC,QAAIZ,OAAO,CAACY,aAAD,EAAgBH,gBAAhB,CAAX,EAA8C;AAC5CC,MAAAA,mBAAmB,mBAAMF,YAAN,EAAnB;AACD,KAFD,MAEO;AACLE,MAAAA,mBAAmB,CAACE,aAAD,CAAnB;AACD;AACF,GAND;;AAQA,sBACE,QAAC,YAAD;AACE,IAAA,EAAE,EAAC,SADL;AAEE,IAAA,MAAM,EAAEd,QAAO,CAAC,QAAD,EAAW,IAAX,CAFjB;AAGE,IAAA,OAAO,EAAEO,OAHX;AAIE,IAAA,KAAK,EAAEI,gBAJT;AAKE,IAAA,WAAW,EAAEZ,IAAI,CAAC,aAAD,EAAgB,QAAhB,CALnB;AAME,IAAA,QAAQ,EAAE;AAAEgB,MAAAA,cAAc,EAAEF;AAAlB;AANZ;AAAA;AAAA;AAAA;AAAA,WADF;AAUD,CAxCM;;GAAMP,O;;AAAAA,O;KAAAA,O","sourcesContent":["import React, { useState } from 'react';\r\nimport { withKnobs, text, boolean } from '@storybook/addon-knobs';\r\nimport { SingleSelect } from 'components';\r\nimport isEqual from 'lodash/isEqual';\r\n\r\nexport default {\r\n  title: 'SingleSelect',\r\n  component: SingleSelect,\r\n  decorators: [withKnobs],\r\n};\r\n\r\nexport const Default = () => {\r\n  const options = [\r\n    { id: 'astonmartin', name: 'Aston Martin' },\r\n    { id: 'audi', name: 'Audi' },\r\n    { id: 'bentley', name: 'Bentley' },\r\n    { id: 'bmw', name: 'BMW (Bayerische Motoren Werke AG)' },\r\n    { id: 'chevrolet', name: 'Chevrolet' },\r\n    { id: 'citroen', name: 'Citroen' },\r\n    { id: 'dodge', name: 'Dodge' },\r\n    { id: 'ferrari', name: 'Ferrari' },\r\n    { id: 'ford', name: 'Ford' },\r\n    { id: 'honda', name: 'Honda' },\r\n    { id: 'hyundai', name: 'Hyundai' },\r\n    { id: 'infiniti', name: 'Infiniti' },\r\n    { id: 'jaguar', name: 'Jaguar' },\r\n    { id: 'kia', name: 'Kia' },\r\n    { id: 'lotus', name: 'Lotus' },\r\n  ];\r\n\r\n  const initialValue = {};\r\n  const [selectedListItem, setSelectedListItem] = useState(options[1]);\r\n\r\n  const toggle = (selectedValue) => {\r\n    if (isEqual(selectedValue, selectedListItem)) {\r\n      setSelectedListItem({ ...initialValue });\r\n    } else {\r\n      setSelectedListItem(selectedValue);\r\n    }\r\n  };\r\n\r\n  return (\r\n    <SingleSelect\r\n      id=\"stories\"\r\n      search={boolean('Search', true)}\r\n      options={options}\r\n      value={selectedListItem}\r\n      placeholder={text('Placeholder', 'Search')}\r\n      handlers={{ onToggleOption: toggle }}\r\n    />\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}