{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskClaimDetailsSidebar\\\\TaskClaimDetailsSidebar.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; // app\n\nimport { TaskClaimDetailsSidebarView } from './TaskClaimDetailsSidebar.view';\nimport { selectClaimsTasksProcessingSelected, getClaimsPreviewInformation, selectClaimsInformation } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskClaimDetailsSidebar.propTypes = {\n  isClaimsTabSelected: PropTypes.bool\n};\nexport default function TaskClaimDetailsSidebar() {\n  _s();\n\n  var dispatch = useDispatch();\n  var claimsTaskProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\n  var claimPreviewInfo = useSelector(selectClaimsInformation);\n  var claimsTaskProcessingSelectedLength = (claimsTaskProcessingSelected === null || claimsTaskProcessingSelected === void 0 ? void 0 : claimsTaskProcessingSelected.length) || 0;\n  var taskSelected = claimsTaskProcessingSelected === null || claimsTaskProcessingSelected === void 0 ? void 0 : claimsTaskProcessingSelected[0];\n  useEffect(function () {\n    if (claimsTaskProcessingSelectedLength === 1) {\n      dispatch(getClaimsPreviewInformation({\n        claimId: taskSelected === null || taskSelected === void 0 ? void 0 : taskSelected.businessProcessID,\n        claimRefParams: taskSelected === null || taskSelected === void 0 ? void 0 : taskSelected.processRef,\n        sourceIdParams: taskSelected === null || taskSelected === void 0 ? void 0 : taskSelected.sourceID,\n        divisionIDParams: taskSelected === null || taskSelected === void 0 ? void 0 : taskSelected.departmentID\n      }));\n    }\n  }, [claimsTaskProcessingSelectedLength, dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(TaskClaimDetailsSidebarView, {\n    claimPreviewInfo: claimPreviewInfo,\n    taskDetails: taskSelected\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 35,\n    columnNumber: 10\n  }, this);\n}\n\n_s(TaskClaimDetailsSidebar, \"m6JENqKpyNRRYA/vQqx2UmhlI0c=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = TaskClaimDetailsSidebar;\nTaskClaimDetailsSidebar.displayName = \"TaskClaimDetailsSidebar\";\nTaskClaimDetailsSidebar.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskClaimDetailsSidebar\",\n  \"props\": {\n    \"isClaimsTabSelected\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskClaimDetailsSidebar\\\\TaskClaimDetailsSidebar.js\"] = {\n    name: \"TaskClaimDetailsSidebar\",\n    docgenInfo: TaskClaimDetailsSidebar.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskClaimDetailsSidebar\\\\TaskClaimDetailsSidebar.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskClaimDetailsSidebar\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskClaimDetailsSidebar/TaskClaimDetailsSidebar.js"],"names":["React","useEffect","useDispatch","useSelector","PropTypes","TaskClaimDetailsSidebarView","selectClaimsTasksProcessingSelected","getClaimsPreviewInformation","selectClaimsInformation","TaskClaimDetailsSidebar","propTypes","isClaimsTabSelected","bool","dispatch","claimsTaskProcessingSelected","claimPreviewInfo","claimsTaskProcessingSelectedLength","length","taskSelected","claimId","businessProcessID","claimRefParams","processRef","sourceIdParams","sourceID","divisionIDParams","departmentID"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,SAAP,MAAsB,YAAtB,C,CAEA;;AACA,SAASC,2BAAT,QAA4C,gCAA5C;AACA,SAASC,mCAAT,EAA8CC,2BAA9C,EAA2EC,uBAA3E,QAA0G,QAA1G;;AAEAC,uBAAuB,CAACC,SAAxB,GAAoC;AAClCC,EAAAA,mBAAmB,EAAEP,SAAS,CAACQ;AADG,CAApC;AAIA,eAAe,SAASH,uBAAT,GAAmC;AAAA;;AAChD,MAAMI,QAAQ,GAAGX,WAAW,EAA5B;AACA,MAAMY,4BAA4B,GAAGX,WAAW,CAACG,mCAAD,CAAhD;AACA,MAAMS,gBAAgB,GAAGZ,WAAW,CAACK,uBAAD,CAApC;AACA,MAAMQ,kCAAkC,GAAG,CAAAF,4BAA4B,SAA5B,IAAAA,4BAA4B,WAA5B,YAAAA,4BAA4B,CAAEG,MAA9B,KAAwC,CAAnF;AACA,MAAMC,YAAY,GAAGJ,4BAAH,aAAGA,4BAAH,uBAAGA,4BAA4B,CAAG,CAAH,CAAjD;AAEAb,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIe,kCAAkC,KAAK,CAA3C,EAA8C;AAC5CH,MAAAA,QAAQ,CACNN,2BAA2B,CACzB;AACEY,QAAAA,OAAO,EAAED,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEE,iBADzB;AAEEC,QAAAA,cAAc,EAAEH,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEI,UAFhC;AAGEC,QAAAA,cAAc,EAAEL,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEM,QAHhC;AAIEC,QAAAA,gBAAgB,EAAEP,YAAF,aAAEA,YAAF,uBAAEA,YAAY,CAAEQ;AAJlC,OADyB,CADrB,CAAR;AAUD;AACF,GAbQ,EAaN,CAACV,kCAAD,EAAqCH,QAArC,CAbM,CAAT,CAPgD,CAoBI;;AAEpD,sBAAO,QAAC,2BAAD;AAA6B,IAAA,gBAAgB,EAAEE,gBAA/C;AAAiE,IAAA,WAAW,EAAEG;AAA9E;AAAA;AAAA;AAAA;AAAA,UAAP;AACD;;GAvBuBT,uB;UACLP,W,EACoBC,W,EACZA,W;;;KAHHM,uB;AAAAA,uB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { TaskClaimDetailsSidebarView } from './TaskClaimDetailsSidebar.view';\r\nimport { selectClaimsTasksProcessingSelected, getClaimsPreviewInformation, selectClaimsInformation } from 'stores';\r\n\r\nTaskClaimDetailsSidebar.propTypes = {\r\n  isClaimsTabSelected: PropTypes.bool,\r\n};\r\n\r\nexport default function TaskClaimDetailsSidebar() {\r\n  const dispatch = useDispatch();\r\n  const claimsTaskProcessingSelected = useSelector(selectClaimsTasksProcessingSelected);\r\n  const claimPreviewInfo = useSelector(selectClaimsInformation);\r\n  const claimsTaskProcessingSelectedLength = claimsTaskProcessingSelected?.length || 0;\r\n  const taskSelected = claimsTaskProcessingSelected?.[0];\r\n\r\n  useEffect(() => {\r\n    if (claimsTaskProcessingSelectedLength === 1) {\r\n      dispatch(\r\n        getClaimsPreviewInformation(\r\n          {\r\n            claimId: taskSelected?.businessProcessID,\r\n            claimRefParams: taskSelected?.processRef,\r\n            sourceIdParams: taskSelected?.sourceID,\r\n            divisionIDParams: taskSelected?.departmentID\r\n          }\r\n        )\r\n      );\r\n    }\r\n  }, [claimsTaskProcessingSelectedLength, dispatch]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return <TaskClaimDetailsSidebarView claimPreviewInfo={claimPreviewInfo} taskDetails={taskSelected} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}