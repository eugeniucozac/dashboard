{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LossesTab\\\\LossesTabTable.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get'; // app\n\nimport { LossesTabTableRow } from './LossesTabTableRow.view';\nimport { Empty, Overflow, TableHead, Pagination, Skeleton } from 'components';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\";\nimport { usePagination, useSort } from 'hooks';\nimport * as utils from 'utils'; // mui\n\nimport { Table, TableBody, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLossesTabTableView.prototype = {\n  rows: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.shape({\n    obj: PropTypes.object.isRequired,\n    handlers: PropTypes.shape({\n      handleChangePage: PropTypes.func.isRequired,\n      handleChangeRowsPerPage: PropTypes.func.isRequired\n    }).isRequired\n  }).isRequired,\n  cols: PropTypes.array.isRequired,\n  columnProps: PropTypes.object.isRequired,\n  handleSort: PropTypes.func.isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  handleViewClaimClick: PropTypes.func.isRequired,\n  isTableHidden: PropTypes.bool.isRequired\n};\nexport function LossesTabTableView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var tableData = _ref.tableData,\n      sortObj = _ref.sort,\n      pagination = _ref.pagination,\n      colsArr = _ref.cols,\n      columnProps = _ref.columnProps,\n      handleSort = _ref.handleSort,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      handleViewClaimClick = _ref.handleViewClaimClick,\n      isTblLoader = _ref.isTblLoader,\n      emptyData = _ref.emptyData;\n  var rows = tableData || [];\n\n  var _useSort = useSort(colsArr, sortObj, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var hasRows = utils.generic.isValidArray(rows, true);\n  var paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(Box, {\n    \"data-testid\": \"losses-search-table\",\n    children: [/*#__PURE__*/_jsxDEV(Overflow, {\n      children: /*#__PURE__*/_jsxDEV(Table, {\n        size: \"small\",\n        \"data-testid\": \"losses-table\",\n        children: [/*#__PURE__*/_jsxDEV(TableHead, {\n          columns: cols,\n          sorting: sort\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 56,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n          children: !isTblLoader && !emptyData && hasRows && (rows === null || rows === void 0 ? void 0 : rows.map(function (row) {\n            return /*#__PURE__*/_jsxDEV(LossesTabTableRow, {\n              data: row,\n              handleViewClaimClick: handleViewClaimClick,\n              columnProps: columnProps\n            }, row.lossDetailId, false, {\n              fileName: _jsxFileName,\n              lineNumber: 63,\n              columnNumber: 19\n            }, _this);\n          }))\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this), !isTblLoader && !emptyData && rows ? rows.length ? /*#__PURE__*/_jsxDEV(Pagination, {\n      page: get(paginationObj, 'obj.page'),\n      count: get(paginationObj, 'obj.rowsTotal'),\n      rowsPerPage: get(paginationObj, 'obj.rowsPerPage'),\n      onChangePage: get(paginationObj, 'handlers.handleChangePage'),\n      onChangeRowsPerPage: get(paginationObj, 'handlers.handleChangeRowsPerPage')\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 11\n    }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 70\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 85,\n      columnNumber: 11\n    }, this) : isTblLoader ? /*#__PURE__*/_jsxDEV(Skeleton, {\n      height: 40,\n      animation: \"wave\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 88,\n      columnNumber: 9\n    }, this) : emptyData ? /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.noMatchFound'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 90,\n        columnNumber: 68\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 9\n    }, this) : /*#__PURE__*/_jsxDEV(Empty, {\n      title: utils.string.t('claims.searchLossAndClaims'),\n      icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 75\n      }, this),\n      padding: true\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 53,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossesTabTableView, \"r9oCVsFugBvUAXABi3SRi+4GYfU=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = LossesTabTableView;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossesTabTableView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LossesTab/LossesTabTable.view.js"],"names":["React","PropTypes","get","LossesTabTableRow","Empty","Overflow","TableHead","Pagination","Skeleton","usePagination","useSort","utils","Table","TableBody","Box","LossesTabTableView","prototype","rows","array","isRequired","sort","object","pagination","shape","obj","handlers","handleChangePage","func","handleChangeRowsPerPage","cols","columnProps","handleSort","handleViewClaimClick","isTableHidden","bool","tableData","sortObj","colsArr","isTblLoader","emptyData","hasRows","generic","isValidArray","paginationObj","map","row","lossDetailId","length","string","t"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { LossesTabTableRow } from './LossesTabTableRow.view';\r\nimport { Empty, Overflow, TableHead, Pagination, Skeleton } from 'components';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\nimport { usePagination, useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { Table, TableBody, Box } from '@material-ui/core';\r\n\r\nLossesTabTableView.prototype = {\r\n  rows: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.shape({\r\n    obj: PropTypes.object.isRequired,\r\n    handlers: PropTypes.shape({\r\n      handleChangePage: PropTypes.func.isRequired,\r\n      handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n    }).isRequired,\r\n  }).isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.object.isRequired,\r\n  handleSort: PropTypes.func.isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  handleViewClaimClick: PropTypes.func.isRequired,\r\n  isTableHidden: PropTypes.bool.isRequired,\r\n};\r\n\r\nexport function LossesTabTableView({\r\n  tableData,\r\n  sort: sortObj,\r\n  pagination,\r\n  cols: colsArr,\r\n  columnProps,\r\n  handleSort,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  handleViewClaimClick,\r\n  isTblLoader,\r\n  emptyData,\r\n}) {\r\n  const rows = tableData || [];\r\n  const { cols, sort } = useSort(colsArr, sortObj, handleSort);\r\n  const hasRows = utils.generic.isValidArray(rows, true);\r\n  const paginationObj = usePagination(rows, pagination, handleChangePage, handleChangeRowsPerPage);\r\n\r\n  return (\r\n    <Box data-testid=\"losses-search-table\">\r\n      <Overflow>\r\n        <Table size=\"small\" data-testid=\"losses-table\">\r\n          <TableHead columns={cols} sorting={sort} />\r\n          <TableBody>\r\n            {!isTblLoader &&\r\n              !emptyData &&\r\n              hasRows &&\r\n              rows?.map((row) => {\r\n                return (\r\n                  <LossesTabTableRow\r\n                    key={row.lossDetailId}\r\n                    data={row}\r\n                    handleViewClaimClick={handleViewClaimClick}\r\n                    columnProps={columnProps}\r\n                  />\r\n                );\r\n              })}\r\n          </TableBody>\r\n        </Table>\r\n      </Overflow>\r\n\r\n      {!isTblLoader && !emptyData && rows ? (\r\n        rows.length ? (\r\n          <Pagination\r\n            page={get(paginationObj, 'obj.page')}\r\n            count={get(paginationObj, 'obj.rowsTotal')}\r\n            rowsPerPage={get(paginationObj, 'obj.rowsPerPage')}\r\n            onChangePage={get(paginationObj, 'handlers.handleChangePage')}\r\n            onChangeRowsPerPage={get(paginationObj, 'handlers.handleChangeRowsPerPage')}\r\n          />\r\n        ) : (\r\n          <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n        )\r\n      ) : isTblLoader ? (\r\n        <Skeleton height={40} animation=\"wave\" />\r\n      ) : emptyData ? (\r\n        <Empty title={utils.string.t('claims.noMatchFound')} icon={<IconSearchFile />} padding />\r\n      ) : (\r\n        <Empty title={utils.string.t('claims.searchLossAndClaims')} icon={<IconSearchFile />} padding />\r\n      )}\r\n    </Box>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}