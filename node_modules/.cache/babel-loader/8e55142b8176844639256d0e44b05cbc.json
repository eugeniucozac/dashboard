{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport get from 'lodash/get'; // app\n\nimport styles from './AddEditUmr.styles';\nimport { AddEditUmrView } from './AddEditUmr.view';\nimport { searchOpeningMemoList, patchOpeningMemo } from 'stores';\nimport * as utils from 'utils';\nimport { KEYCODE } from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddEditUmr.propTypes = {\n  origin: PropTypes.shape({\n    path: PropTypes.string.isRequired,\n    id: PropTypes.number\n  }),\n  openingMemo: PropTypes.object.isRequired,\n  handleClose: PropTypes.func.isRequired\n};\nexport default function AddEditUmr(_ref) {\n  _s();\n\n  var origin = _ref.origin,\n      _ref$openingMemo = _ref.openingMemo,\n      openingMemo = _ref$openingMemo === void 0 ? {} : _ref$openingMemo,\n      handleClose = _ref.handleClose;\n  var classes = makeStyles(styles, {\n    name: 'AddEditUmr'\n  })();\n  var dispatch = useDispatch();\n  var umr = get(openingMemo, 'uniqueMarketReference') || '';\n  var btnRef = useRef(null);\n\n  var _useState = useState(umr.split(',')),\n      _useState2 = _slicedToArray(_useState, 2),\n      umrList = _useState2[0],\n      setUmrList = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      error = _useState4[0],\n      setError = _useState4[1];\n\n  var _useState5 = useState({\n    query: '',\n    valid: false\n  }),\n      _useState6 = _slicedToArray(_useState5, 2),\n      search = _useState6[0],\n      setSearch = _useState6[1];\n\n  var addUmr = function addUmr(id) {\n    if (id && !umrList.includes(id)) {\n      setUmrList([].concat(_toConsumableArray(umrList), [id]));\n      setError('');\n    }\n  };\n\n  var removeUmr = function removeUmr(_ref2) {\n    var _ref3 = _slicedToArray(_ref2, 1),\n        value = _ref3[0].value;\n\n    setUmrList(umrList.filter(function (umr) {\n      return umr !== value;\n    }));\n  };\n\n  var resetUmr = function resetUmr() {\n    setSearch({});\n  };\n\n  var handleSubmit = function handleSubmit() {\n    if (!umrList || !utils.generic.isValidArray(umrList, true)) {\n      setError(utils.string.t('openingMemo.addEditUmr.errorEmptyList'));\n      return;\n    }\n\n    return dispatch(patchOpeningMemo({\n      uniqueMarketReference: umrList.join(',')\n    }, openingMemo.id));\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var checkIfUmrExist = function checkIfUmrExist(value) {\n    var path = origin.path,\n        id = origin.id;\n\n    var searchList = /*#__PURE__*/function () {\n      var _ref4 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var res;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(searchOpeningMemoList({\n                  type: 'uniqueMarketReference',\n                  query: value,\n                  origin: {\n                    path: path,\n                    id: path === 'department' ? openingMemo.departmentId : id\n                  }\n                }));\n\n              case 2:\n                res = _context.sent;\n\n                if (utils.generic.isValidArray(res)) {\n                  setSearch({\n                    query: value,\n                    valid: res.filter(function (r) {\n                      var umr = r.uniqueMarketReference || '';\n                      return umr.split(',').includes(value);\n                    }).length !== 1\n                  });\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function searchList() {\n        return _ref4.apply(this, arguments);\n      };\n    }();\n\n    if (value) {\n      searchList();\n    } else {\n      setSearch({\n        query: '',\n        valid: false\n      });\n    }\n\n    return value ? value.toUpperCase() : '';\n  };\n\n  var fields = [{\n    name: 'umr',\n    type: 'text',\n    label: utils.string.t('openingMemo.addEditUmr.label'),\n    value: '',\n    muiComponentProps: {\n      autoFocus: true,\n      onKeyDown: function onKeyDown(event) {\n        if (event.keyCode === KEYCODE.Enter) {\n          event.preventDefault();\n          event.stopPropagation();\n          btnRef.current.click();\n        }\n      },\n      classes: {\n        root: classes.textField\n      },\n      'data-testid': 'umr'\n    },\n    onChange: checkIfUmrExist\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('app.save'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(AddEditUmrView, {\n    actions: actions,\n    fields: fields,\n    list: umrList,\n    query: search.query,\n    valid: search.valid,\n    error: error,\n    refs: {\n      btn: btnRef\n    },\n    handlers: {\n      add: addUmr,\n      remove: removeUmr,\n      reset: resetUmr\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 141,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddEditUmr, \"wl5jNZgGLgyncMYcA1OBrRh4j1Y=\", false, function () {\n  return [useDispatch];\n});\n\n_c = AddEditUmr;\nAddEditUmr.displayName = \"AddEditUmr\";\nAddEditUmr.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddEditUmr\",\n  \"props\": {\n    \"openingMemo\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"origin\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"path\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"id\": {\n            \"name\": \"number\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"handleClose\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.js\"] = {\n    name: \"AddEditUmr\",\n    docgenInfo: AddEditUmr.__docgenInfo,\n    path: \"src\\\\forms\\\\AddEditUmr\\\\AddEditUmr.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddEditUmr\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddEditUmr/AddEditUmr.js"],"names":["React","useState","useRef","PropTypes","useDispatch","get","styles","AddEditUmrView","searchOpeningMemoList","patchOpeningMemo","utils","KEYCODE","makeStyles","AddEditUmr","propTypes","origin","shape","path","string","isRequired","id","number","openingMemo","object","handleClose","func","classes","name","dispatch","umr","btnRef","split","umrList","setUmrList","error","setError","query","valid","search","setSearch","addUmr","includes","removeUmr","value","filter","resetUmr","handleSubmit","generic","isValidArray","t","uniqueMarketReference","join","handleCancel","isFunction","checkIfUmrExist","searchList","type","departmentId","res","r","length","toUpperCase","fields","label","muiComponentProps","autoFocus","onKeyDown","event","keyCode","Enter","preventDefault","stopPropagation","current","click","root","textField","onChange","actions","handler","btn","add","remove","reset"],"mappings":"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","sourcesContent":["import React, { useState, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport styles from './AddEditUmr.styles';\r\nimport { AddEditUmrView } from './AddEditUmr.view';\r\nimport { searchOpeningMemoList, patchOpeningMemo } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { KEYCODE } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nAddEditUmr.propTypes = {\r\n  origin: PropTypes.shape({\r\n    path: PropTypes.string.isRequired,\r\n    id: PropTypes.number,\r\n  }),\r\n  openingMemo: PropTypes.object.isRequired,\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function AddEditUmr({ origin, openingMemo = {}, handleClose }) {\r\n  const classes = makeStyles(styles, { name: 'AddEditUmr' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const umr = get(openingMemo, 'uniqueMarketReference') || '';\r\n  const btnRef = useRef(null);\r\n  const [umrList, setUmrList] = useState(umr.split(','));\r\n  const [error, setError] = useState(null);\r\n  const [search, setSearch] = useState({ query: '', valid: false });\r\n\r\n  const addUmr = (id) => {\r\n    if (id && !umrList.includes(id)) {\r\n      setUmrList([...umrList, id]);\r\n      setError('');\r\n    }\r\n  };\r\n\r\n  const removeUmr = ([{ value }]) => {\r\n    setUmrList(umrList.filter((umr) => umr !== value));\r\n  };\r\n\r\n  const resetUmr = () => {\r\n    setSearch({});\r\n  };\r\n\r\n  const handleSubmit = () => {\r\n    if (!umrList || !utils.generic.isValidArray(umrList, true)) {\r\n      setError(utils.string.t('openingMemo.addEditUmr.errorEmptyList'));\r\n      return;\r\n    }\r\n\r\n    return dispatch(patchOpeningMemo({ uniqueMarketReference: umrList.join(',') }, openingMemo.id));\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const checkIfUmrExist = (value) => {\r\n    const { path, id } = origin;\r\n    const searchList = async () => {\r\n      const res = await dispatch(\r\n        searchOpeningMemoList({\r\n          type: 'uniqueMarketReference',\r\n          query: value,\r\n          origin: {\r\n            path,\r\n            id: path === 'department' ? openingMemo.departmentId : id,\r\n          },\r\n        })\r\n      );\r\n\r\n      if (utils.generic.isValidArray(res)) {\r\n        setSearch({\r\n          query: value,\r\n          valid:\r\n            res.filter((r) => {\r\n              const umr = r.uniqueMarketReference || '';\r\n              return umr.split(',').includes(value);\r\n            }).length !== 1,\r\n        });\r\n      }\r\n    };\r\n\r\n    if (value) {\r\n      searchList();\r\n    } else {\r\n      setSearch({\r\n        query: '',\r\n        valid: false,\r\n      });\r\n    }\r\n\r\n    return value ? value.toUpperCase() : '';\r\n  };\r\n\r\n  const fields = [\r\n    {\r\n      name: 'umr',\r\n      type: 'text',\r\n      label: utils.string.t('openingMemo.addEditUmr.label'),\r\n      value: '',\r\n      muiComponentProps: {\r\n        autoFocus: true,\r\n        onKeyDown: (event) => {\r\n          if (event.keyCode === KEYCODE.Enter) {\r\n            event.preventDefault();\r\n            event.stopPropagation();\r\n            btnRef.current.click();\r\n          }\r\n        },\r\n        classes: {\r\n          root: classes.textField,\r\n        },\r\n        'data-testid': 'umr',\r\n      },\r\n      onChange: checkIfUmrExist,\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.save'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <AddEditUmrView\r\n      actions={actions}\r\n      fields={fields}\r\n      list={umrList}\r\n      query={search.query}\r\n      valid={search.valid}\r\n      error={error}\r\n      refs={{\r\n        btn: btnRef,\r\n      }}\r\n      handlers={{\r\n        add: addUmr,\r\n        remove: removeUmr,\r\n        reset: resetUmr,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}