{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\PremiumProcessingCheckSigningReject\\\\PremiumProcessingCheckSigningReject.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup';\nimport PropTypes from 'prop-types'; // app\n\nimport { selectRefDataMarketTypes, premiumProcessingCheckSigningRejectCase, getPremiumProcessingTasksDetails, selectCaseTaskTypeView, premiumProcessingCheckSigningRejectCreateCase } from 'stores';\nimport styles from './PremiumProcessingCheckSigningReject.styles';\nimport { PremiumProcessingCheckSigningRejectView } from './PremiumProcessingCheckSigningReject.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nPremiumProcessingCheckSigningReject.prototypes = {\n  handleClose: PropTypes.func.isRequired,\n  selectedCases: PropTypes.array,\n  notesFieldValue: PropTypes.string\n};\nexport default function PremiumProcessingCheckSigningReject(_ref) {\n  _s();\n\n  var handleClose = _ref.handleClose,\n      selectedCases = _ref.selectedCases,\n      notesFieldValue = _ref.notesFieldValue;\n  var classes = makeStyles(styles, {\n    name: 'PremiumProcessingCheckSigningReject'\n  })();\n  var dispatch = useDispatch();\n  var BureauNameData = useSelector(selectRefDataMarketTypes);\n  var caseTaskTypeView = useSelector(selectCaseTaskTypeView);\n  var optionsBureauList = utils.generic.isValidArray(BureauNameData, true) && BureauNameData.filter(function (item) {\n    return item.marketTypeID !== 4;\n  }).map(function (type) {\n    return {\n      id: type.marketTypeID,\n      name: type.marketTypeDescription\n    };\n  });\n\n  var handleSubmit = function handleSubmit(checkSignData) {\n    var rejectCase = /*#__PURE__*/function () {\n      var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(premiumProcessingCheckSigningRejectCase({\n                  checkSignData: checkSignData,\n                  selectedCases: selectedCases,\n                  notesFieldValue: notesFieldValue\n                }));\n\n              case 2:\n                response = _context.sent;\n\n                if (response && (response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                  dispatch(getPremiumProcessingTasksDetails({\n                    requestType: 'search',\n                    taskType: caseTaskTypeView,\n                    filterTerm: []\n                  }));\n                  dispatch(getPremiumProcessingTasksDetails({\n                    requestType: 'filter',\n                    taskType: caseTaskTypeView,\n                    filterTerm: []\n                  }));\n                }\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      return function rejectCase() {\n        return _ref2.apply(this, arguments);\n      };\n    }();\n\n    var rejectCreateCase = /*#__PURE__*/function () {\n      var _ref3 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee2() {\n        var response;\n        return _regeneratorRuntime.wrap(function _callee2$(_context2) {\n          while (1) {\n            switch (_context2.prev = _context2.next) {\n              case 0:\n                _context2.next = 2;\n                return dispatch(premiumProcessingCheckSigningRejectCreateCase({\n                  checkSignData: checkSignData,\n                  selectedCases: selectedCases,\n                  notesFieldValue: notesFieldValue\n                }));\n\n              case 2:\n                response = _context2.sent;\n\n                if (response && (response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                  dispatch(getPremiumProcessingTasksDetails({\n                    requestType: 'search',\n                    taskType: caseTaskTypeView,\n                    filterTerm: []\n                  }));\n                  dispatch(getPremiumProcessingTasksDetails({\n                    requestType: 'filter',\n                    taskType: caseTaskTypeView,\n                    filterTerm: []\n                  }));\n                }\n\n              case 4:\n              case \"end\":\n                return _context2.stop();\n            }\n          }\n        }, _callee2);\n      }));\n\n      return function rejectCreateCase() {\n        return _ref3.apply(this, arguments);\n      };\n    }();\n\n    if (checkSignData === null || checkSignData === void 0 ? void 0 : checkSignData.checkBoxMessage) {\n      rejectCreateCase();\n    } else {\n      rejectCase();\n    }\n  };\n\n  var handleCancel = function handleCancel() {\n    if (utils.generic.isFunction(handleClose)) {\n      handleClose();\n    }\n  };\n\n  var currentDate = new Date();\n  currentDate.setDate(currentDate.getDate() + 10);\n  var packageSubmittedDate = utils.string.t('format.date', {\n    value: {\n      date: currentDate,\n      format: config.ui.format.date.iso\n    }\n  });\n  var fields = [{\n    name: 'chooseReason',\n    label: utils.string.t('premiumProcessing.checkSigningReject.chooseReason'),\n    options: [{\n      label: 'Reason code 1',\n      value: 'RC1'\n    }, {\n      label: 'Reason code 2',\n      value: 'RC2'\n    }, {\n      label: 'Reason code 3',\n      value: 'RC3'\n    }],\n    type: 'select',\n    validation: Yup.string().required(utils.string.t('validation.required'))\n  }, {\n    name: 'workPackageReference',\n    label: utils.string.t('premiumProcessing.checkSigningReject.workPackageRef'),\n    value: '',\n    type: 'text',\n    validation: Yup.string().when('checkBoxMessage', {\n      is: true,\n      then: Yup.string().required(utils.string.t('validation.required'))\n    }),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 30\n      }\n    }\n  }, {\n    name: 'bureauList',\n    label: utils.string.t('premiumProcessing.checkSigningCase.bureauList'),\n    value: optionsBureauList || [],\n    type: 'autocomplete',\n    options: optionsBureauList,\n    optionKey: 'id',\n    optionLabel: 'name',\n    innerComponentProps: {\n      isMulti: true,\n      allowEmpty: true,\n      maxMenuHeight: 200\n    },\n    validation: Yup.array().when('checkBoxMessage', {\n      is: true,\n      then: Yup.array().required(utils.string.t('validation.required'))\n    })\n  }, {\n    name: 'checkBoxMessage',\n    type: 'checkbox',\n    value: false,\n    label: utils.string.t('premiumProcessing.checkSigningReject.checkBoxMessage')\n  }, {\n    name: 'packageSubmittedDate',\n    label: utils.string.t('premiumProcessing.checkSigningCase.packageSubmittedOn'),\n    type: 'datepicker',\n    value: packageSubmittedDate,\n    validation: Yup.string().when('checkBoxMessage', {\n      is: true,\n      then: Yup.string().nullable().required(utils.string.t('validation.required'))\n    }),\n    outputFormat: '',\n    placeholder: utils.string.t('app.selectDate'),\n    icon: 'TodayIcon',\n    muiComponentProps: {\n      fullWidth: true,\n      classes: {\n        root: classes.datepicker\n      }\n    }\n  }];\n  var actions = [{\n    name: 'submit',\n    label: utils.string.t('premiumProcessing.checkSigningReject.rejectCreateNew'),\n    handler: handleSubmit\n  }, {\n    name: 'cancel',\n    label: utils.string.t('premiumProcessing.checkSigningReject.cancel'),\n    handler: handleCancel\n  }];\n  return /*#__PURE__*/_jsxDEV(PremiumProcessingCheckSigningRejectView, {\n    actions: actions,\n    fields: fields\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 160,\n    columnNumber: 10\n  }, this);\n}\n\n_s(PremiumProcessingCheckSigningReject, \"1kkPv/EldHVyrV2Q/7v71eqsMgY=\", false, function () {\n  return [useDispatch, useSelector, useSelector];\n});\n\n_c = PremiumProcessingCheckSigningReject;\nPremiumProcessingCheckSigningReject.displayName = \"PremiumProcessingCheckSigningReject\";\nPremiumProcessingCheckSigningReject.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"PremiumProcessingCheckSigningReject\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\PremiumProcessingCheckSigningReject\\\\PremiumProcessingCheckSigningReject.js\"] = {\n    name: \"PremiumProcessingCheckSigningReject\",\n    docgenInfo: PremiumProcessingCheckSigningReject.__docgenInfo,\n    path: \"src\\\\forms\\\\PremiumProcessingCheckSigningReject\\\\PremiumProcessingCheckSigningReject.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"PremiumProcessingCheckSigningReject\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/PremiumProcessingCheckSigningReject/PremiumProcessingCheckSigningReject.js"],"names":["React","useDispatch","useSelector","Yup","PropTypes","selectRefDataMarketTypes","premiumProcessingCheckSigningRejectCase","getPremiumProcessingTasksDetails","selectCaseTaskTypeView","premiumProcessingCheckSigningRejectCreateCase","styles","PremiumProcessingCheckSigningRejectView","utils","config","constants","makeStyles","PremiumProcessingCheckSigningReject","prototypes","handleClose","func","isRequired","selectedCases","array","notesFieldValue","string","classes","name","dispatch","BureauNameData","caseTaskTypeView","optionsBureauList","generic","isValidArray","filter","item","marketTypeID","map","type","id","marketTypeDescription","handleSubmit","checkSignData","rejectCase","response","status","API_RESPONSE_OK","requestType","taskType","filterTerm","rejectCreateCase","checkBoxMessage","handleCancel","isFunction","currentDate","Date","setDate","getDate","packageSubmittedDate","t","value","date","format","ui","iso","fields","label","options","validation","required","when","is","then","muiComponentProps","inputProps","maxLength","optionKey","optionLabel","innerComponentProps","isMulti","allowEmpty","maxMenuHeight","nullable","outputFormat","placeholder","icon","fullWidth","root","datepicker","actions","handler"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport {\r\n  selectRefDataMarketTypes,\r\n  premiumProcessingCheckSigningRejectCase,\r\n  getPremiumProcessingTasksDetails,\r\n  selectCaseTaskTypeView,\r\n  premiumProcessingCheckSigningRejectCreateCase,\r\n} from 'stores';\r\nimport styles from './PremiumProcessingCheckSigningReject.styles';\r\nimport { PremiumProcessingCheckSigningRejectView } from './PremiumProcessingCheckSigningReject.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nPremiumProcessingCheckSigningReject.prototypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n  selectedCases: PropTypes.array,\r\n  notesFieldValue: PropTypes.string,\r\n};\r\n\r\nexport default function PremiumProcessingCheckSigningReject({ handleClose, selectedCases, notesFieldValue }) {\r\n  const classes = makeStyles(styles, { name: 'PremiumProcessingCheckSigningReject' })();\r\n  const dispatch = useDispatch();\r\n  const BureauNameData = useSelector(selectRefDataMarketTypes);\r\n  const caseTaskTypeView = useSelector(selectCaseTaskTypeView);\r\n  const optionsBureauList =\r\n    utils.generic.isValidArray(BureauNameData, true) &&\r\n    BureauNameData.filter((item) => item.marketTypeID !== 4).map((type) => ({\r\n      id: type.marketTypeID,\r\n      name: type.marketTypeDescription,\r\n    }));\r\n\r\n  const handleSubmit = (checkSignData) => {\r\n    const rejectCase = async () => {\r\n      const response = await dispatch(premiumProcessingCheckSigningRejectCase({ checkSignData, selectedCases, notesFieldValue }));\r\n      if (response && response?.status === constants.API_RESPONSE_OK) {\r\n        dispatch(getPremiumProcessingTasksDetails({ requestType: 'search', taskType: caseTaskTypeView, filterTerm: [] }));\r\n        dispatch(getPremiumProcessingTasksDetails({ requestType: 'filter', taskType: caseTaskTypeView, filterTerm: [] }));\r\n      }\r\n    };\r\n\r\n    const rejectCreateCase = async () => {\r\n      const response = await dispatch(premiumProcessingCheckSigningRejectCreateCase({ checkSignData, selectedCases, notesFieldValue }));\r\n      if (response && response?.status === constants.API_RESPONSE_OK) {\r\n        dispatch(getPremiumProcessingTasksDetails({ requestType: 'search', taskType: caseTaskTypeView, filterTerm: [] }));\r\n        dispatch(getPremiumProcessingTasksDetails({ requestType: 'filter', taskType: caseTaskTypeView, filterTerm: [] }));\r\n      }\r\n    };\r\n\r\n    if (checkSignData?.checkBoxMessage) {\r\n      rejectCreateCase();\r\n    } else {\r\n      rejectCase();\r\n    }\r\n  };\r\n\r\n  const handleCancel = () => {\r\n    if (utils.generic.isFunction(handleClose)) {\r\n      handleClose();\r\n    }\r\n  };\r\n\r\n  const currentDate = new Date();\r\n  currentDate.setDate(currentDate.getDate() + 10);\r\n  const packageSubmittedDate = utils.string.t('format.date', { value: { date: currentDate, format: config.ui.format.date.iso } });\r\n\r\n  const fields = [\r\n    {\r\n      name: 'chooseReason',\r\n      label: utils.string.t('premiumProcessing.checkSigningReject.chooseReason'),\r\n      options: [\r\n        { label: 'Reason code 1', value: 'RC1' },\r\n        { label: 'Reason code 2', value: 'RC2' },\r\n        { label: 'Reason code 3', value: 'RC3' },\r\n      ],\r\n      type: 'select',\r\n      validation: Yup.string().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'workPackageReference',\r\n      label: utils.string.t('premiumProcessing.checkSigningReject.workPackageRef'),\r\n      value: '',\r\n      type: 'text',\r\n      validation: Yup.string().when('checkBoxMessage', {\r\n        is: true,\r\n        then: Yup.string().required(utils.string.t('validation.required')),\r\n      }),\r\n      muiComponentProps: {\r\n        inputProps: {\r\n          maxLength: 30,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'bureauList',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.bureauList'),\r\n      value: optionsBureauList || [],\r\n      type: 'autocomplete',\r\n      options: optionsBureauList,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      innerComponentProps: {\r\n        isMulti: true,\r\n        allowEmpty: true,\r\n        maxMenuHeight: 200,\r\n      },\r\n      validation: Yup.array().when('checkBoxMessage', {\r\n        is: true,\r\n        then: Yup.array().required(utils.string.t('validation.required')),\r\n      }),\r\n    },\r\n    {\r\n      name: 'checkBoxMessage',\r\n      type: 'checkbox',\r\n      value: false,\r\n      label: utils.string.t('premiumProcessing.checkSigningReject.checkBoxMessage'),\r\n    },\r\n    {\r\n      name: 'packageSubmittedDate',\r\n      label: utils.string.t('premiumProcessing.checkSigningCase.packageSubmittedOn'),\r\n      type: 'datepicker',\r\n      value: packageSubmittedDate,\r\n      validation: Yup.string().when('checkBoxMessage', {\r\n        is: true,\r\n        then: Yup.string().nullable().required(utils.string.t('validation.required')),\r\n      }),\r\n      outputFormat: '',\r\n      placeholder: utils.string.t('app.selectDate'),\r\n      icon: 'TodayIcon',\r\n      muiComponentProps: {\r\n        fullWidth: true,\r\n        classes: {\r\n          root: classes.datepicker,\r\n        },\r\n      },\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('premiumProcessing.checkSigningReject.rejectCreateNew'),\r\n      handler: handleSubmit,\r\n    },\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('premiumProcessing.checkSigningReject.cancel'),\r\n      handler: handleCancel,\r\n    },\r\n  ];\r\n\r\n  return <PremiumProcessingCheckSigningRejectView actions={actions} fields={fields} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}