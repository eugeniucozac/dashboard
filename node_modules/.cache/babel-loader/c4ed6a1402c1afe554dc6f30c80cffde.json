{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\FormAutocomplete\\\\FormAutocomplete.stories.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { FormAutocomplete } from 'components';\nimport { withKnobs, boolean as _boolean, text, number } from '@storybook/addon-knobs';\nimport * as utils from 'utils';\nimport { useForm } from 'react-hook-form';\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default {\n  title: 'Form',\n  decorators: [withKnobs]\n};\nvar countries = [{\n  label: 'Afghanistan',\n  value: 'AF'\n}, {\n  label: 'Albania',\n  value: 'AL'\n}, {\n  label: 'Algeria',\n  value: 'DZ'\n}, {\n  label: 'Angola',\n  value: 'AO'\n}, {\n  label: 'Argentina',\n  value: 'AR'\n}, {\n  label: 'Armenia',\n  value: 'AM'\n}, {\n  label: 'Australia',\n  value: 'AU'\n}, {\n  label: 'Austria',\n  value: 'AT'\n}, {\n  label: 'Azerbaijan',\n  value: 'AZ'\n}, {\n  label: 'Bahrain',\n  value: 'BH'\n}, {\n  label: 'Bangladesh',\n  value: 'BD'\n}, {\n  label: 'Belarus',\n  value: 'BY'\n}, {\n  label: 'Belgium',\n  value: 'BE'\n}, {\n  label: 'Belize',\n  value: 'BZ'\n}, {\n  label: 'Benin',\n  value: 'BJ'\n}, {\n  label: 'Bermuda',\n  value: 'BM'\n}, {\n  label: 'Bolivia',\n  value: 'BO'\n}, {\n  label: 'Bosnia and Herzegovina',\n  value: 'BA'\n}, {\n  label: 'Brazil',\n  value: 'BR'\n}, {\n  label: 'Bulgaria',\n  value: 'BG'\n}, {\n  label: 'Cambodia',\n  value: 'KH'\n}, {\n  label: 'Cameroon',\n  value: 'CM'\n}, {\n  label: 'Canada',\n  value: 'CA'\n}, {\n  label: 'Cape Verde',\n  value: 'CV'\n}, {\n  label: 'Central African Republic',\n  value: 'CF'\n}, {\n  label: 'Chile',\n  value: 'CL'\n}, {\n  label: 'China',\n  value: 'CN'\n}, {\n  label: 'Colombia',\n  value: 'CO'\n}, {\n  label: 'Congo',\n  value: 'CG'\n}, {\n  label: 'Costa Rica',\n  value: 'CR'\n}, {\n  label: \"Cote D'Ivoire\",\n  value: 'CI'\n}, {\n  label: 'Croatia',\n  value: 'HR'\n}, {\n  label: 'Cuba',\n  value: 'CU'\n}, {\n  label: 'Cyprus',\n  value: 'CY'\n}, {\n  label: 'Czech Republic',\n  value: 'CZ'\n}, {\n  label: 'Denmark',\n  value: 'DK'\n}, {\n  label: 'Dominican Republic',\n  value: 'DO'\n}, {\n  label: 'Ecuador',\n  value: 'EC'\n}, {\n  label: 'Egypt',\n  value: 'EG'\n}, {\n  label: 'Equatorial Guinea',\n  value: 'GQ'\n}, {\n  label: 'Estonia',\n  value: 'EE'\n}, {\n  label: 'Ethiopia',\n  value: 'ET'\n}, {\n  label: 'Finland',\n  value: 'FI'\n}, {\n  label: 'France',\n  value: 'FR'\n}, {\n  label: 'Gabon',\n  value: 'GA'\n}, {\n  label: 'Gambia',\n  value: 'GM'\n}, {\n  label: 'Georgia',\n  value: 'GE'\n}, {\n  label: 'Germany',\n  value: 'DE'\n}, {\n  label: 'Ghana',\n  value: 'GH'\n}, {\n  label: 'Greece',\n  value: 'GR'\n}, {\n  label: 'Haiti',\n  value: 'HT'\n}, {\n  label: 'Honduras',\n  value: 'HN'\n}, {\n  label: 'Hungary',\n  value: 'HU'\n}, {\n  label: 'Iceland',\n  value: 'IS'\n}, {\n  label: 'India',\n  value: 'IN'\n}, {\n  label: 'Indonesia',\n  value: 'ID'\n}, {\n  label: 'Iran, Islamic Republic Of',\n  value: 'IR'\n}, {\n  label: 'Iraq',\n  value: 'IQ'\n}, {\n  label: 'Ireland',\n  value: 'IE'\n}, {\n  label: 'Israel',\n  value: 'IL'\n}, {\n  label: 'Italy',\n  value: 'IT'\n}, {\n  label: 'Jamaica',\n  value: 'JM'\n}, {\n  label: 'Japan',\n  value: 'JP'\n}, {\n  label: 'Jordan',\n  value: 'JO'\n}, {\n  label: 'Kazakhstan',\n  value: 'KZ'\n}, {\n  label: 'Kenya',\n  value: 'KE'\n}, {\n  label: \"Korea, Democratic People'S Republic of\",\n  value: 'KP'\n}, {\n  label: 'Korea, Republic of',\n  value: 'KR'\n}, {\n  label: 'Kuwait',\n  value: 'KW'\n}, {\n  label: 'Kyrgyzstan',\n  value: 'KG'\n}, {\n  label: 'Latvia',\n  value: 'LV'\n}, {\n  label: 'Lebanon',\n  value: 'LB'\n}, {\n  label: 'Liechtenstein',\n  value: 'LI'\n}, {\n  label: 'Lithuania',\n  value: 'LT'\n}, {\n  label: 'Luxembourg',\n  value: 'LU'\n}, {\n  label: 'Macedonia, The Former Yugoslav Republic of',\n  value: 'MK'\n}, {\n  label: 'Madagascar',\n  value: 'MG'\n}, {\n  label: 'Malaysia',\n  value: 'MY'\n}, {\n  label: 'Malta',\n  value: 'MT'\n}, {\n  label: 'Mexico',\n  value: 'MX'\n}, {\n  label: 'Micronesia, Federated States of',\n  value: 'FM'\n}, {\n  label: 'Moldova, Republic of',\n  value: 'MD'\n}, {\n  label: 'Mongolia',\n  value: 'MN'\n}, {\n  label: 'Morocco',\n  value: 'MA'\n}, {\n  label: 'Mozambique',\n  value: 'MZ'\n}, {\n  label: 'Namibia',\n  value: 'NA'\n}, {\n  label: 'Nepal',\n  value: 'NP'\n}, {\n  label: 'Netherlands',\n  value: 'NL'\n}, {\n  label: 'New Zealand',\n  value: 'NZ'\n}, {\n  label: 'Nicaragua',\n  value: 'NI'\n}, {\n  label: 'Nigeria',\n  value: 'NG'\n}, {\n  label: 'Norway',\n  value: 'NO'\n}, {\n  label: 'Oman',\n  value: 'OM'\n}, {\n  label: 'Pakistan',\n  value: 'PK'\n}, {\n  label: 'Panama',\n  value: 'PA'\n}, {\n  label: 'Paraguay',\n  value: 'PY'\n}, {\n  label: 'Peru',\n  value: 'PE'\n}, {\n  label: 'Philippines',\n  value: 'PH'\n}, {\n  label: 'Poland',\n  value: 'PL'\n}, {\n  label: 'Portugal',\n  value: 'PT'\n}, {\n  label: 'Qatar',\n  value: 'QA'\n}, {\n  label: 'Romania',\n  value: 'RO'\n}, {\n  label: 'Russian Federation',\n  value: 'RU'\n}, {\n  label: 'Rwanda',\n  value: 'RW'\n}, {\n  label: 'Saudi Arabia',\n  value: 'SA'\n}, {\n  label: 'Senegal',\n  value: 'SN'\n}, {\n  label: 'Serbia and Montenegro',\n  value: 'CS'\n}, {\n  label: 'Sierra Leone',\n  value: 'SL'\n}, {\n  label: 'Singapore',\n  value: 'SG'\n}, {\n  label: 'Slovakia',\n  value: 'SK'\n}, {\n  label: 'Slovenia',\n  value: 'SI'\n}, {\n  label: 'Somalia',\n  value: 'SO'\n}, {\n  label: 'South Africa',\n  value: 'ZA'\n}, {\n  label: 'Spain',\n  value: 'ES'\n}, {\n  label: 'Sri Lanka',\n  value: 'LK'\n}, {\n  label: 'Sudan',\n  value: 'SD'\n}, {\n  label: 'Suriname',\n  value: 'SR'\n}, {\n  label: 'Swaziland',\n  value: 'SZ'\n}, {\n  label: 'Sweden',\n  value: 'SE'\n}, {\n  label: 'Switzerland',\n  value: 'CH'\n}, {\n  label: 'Tajikistan',\n  value: 'TJ'\n}, {\n  label: 'Thailand',\n  value: 'TH'\n}, {\n  label: 'Tonga',\n  value: 'TO'\n}, {\n  label: 'Tunisia',\n  value: 'TN'\n}, {\n  label: 'Turkey',\n  value: 'TR'\n}, {\n  label: 'Turkmenistan',\n  value: 'TM'\n}, {\n  label: 'Uganda',\n  value: 'UG'\n}, {\n  label: 'Ukraine',\n  value: 'UA'\n}, {\n  label: 'United Arab Emirates',\n  value: 'AE'\n}, {\n  label: 'United Kingdom',\n  value: 'GB'\n}, {\n  label: 'United States',\n  value: 'US'\n}, {\n  label: 'Uruguay',\n  value: 'UY'\n}, {\n  label: 'Uzbekistan',\n  value: 'UZ'\n}, {\n  label: 'Venezuela',\n  value: 'VE'\n}, {\n  label: 'Vietnam',\n  value: 'VN'\n}, {\n  label: 'Yemen',\n  value: 'YE'\n}, {\n  label: 'Zambia',\n  value: 'ZM'\n}, {\n  label: 'Zimbabwe',\n  value: 'ZW'\n}];\nexport var Autocomplete = function Autocomplete() {\n  _s();\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      fieldValue = _useState2[0],\n      setFieldValue = _useState2[1];\n\n  var label = text('Label', 'Autocomplete Field');\n  var hint = text('Hint', 'Type to refine options...');\n  var placeholder = text('Placeholder', 'Custom autocomplete placeholder...');\n  var error = _boolean('Error', false) ? {\n    message: 'Dummy error',\n    type: 'required'\n  } : undefined;\n\n  var fullWidth = _boolean('Fullwidth', true);\n\n  var maxHeight = number('Max Height', 300, {\n    range: true,\n    min: 100,\n    max: 600,\n    step: 20\n  });\n\n  var isClearable = _boolean('Clearable', false);\n\n  var isMulti = _boolean('Multi', false);\n\n  var isCreatable = _boolean('Creatable', false);\n\n  var isAsync = _boolean('Async', false);\n\n  var rhf = _boolean('React Hook Form', true); // prettier-ignore\n\n\n  var fields = [{\n    name: 'fieldAutocomplete',\n    type: 'autocomplete',\n    value: [],\n    options: countries\n  }];\n  var defaultValues = utils.form.getInitialValues(fields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      setValue = _useForm.setValue;\n\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    children: [rhf && /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({\n      control: control\n    }, fields[0]), {}, {\n      label: label,\n      hint: hint,\n      error: error,\n      placeholder: placeholder,\n      handleUpdate: function handleUpdate(id, value) {\n        return setValue(id, value);\n      },\n      muiComponentProps: {\n        fullWidth: fullWidth\n      },\n      innerComponentProps: _objectSpread({\n        maxMenuHeight: maxHeight,\n        isMulti: isMulti,\n        isClearable: isClearable,\n        isCreatable: isCreatable,\n        allowEmpty: isAsync\n      }, isAsync && {\n        async: {\n          handler: function handler(type, term) {\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(term, \"\\n\")).then(function (response) {\n              return utils.api.handleResponse(response);\n            }).then(function (data) {\n              return data.map(function (c) {\n                return {\n                  label: c.name,\n                  value: c.alpha2Code\n                };\n              });\n            });\n          },\n          type: ''\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 185,\n      columnNumber: 9\n    }, _this), !rhf && /*#__PURE__*/_jsxDEV(FormAutocomplete, _objectSpread(_objectSpread({}, fields[0]), {}, {\n      value: fieldValue,\n      label: label,\n      hint: hint,\n      error: error,\n      placeholder: placeholder,\n      handleUpdate: function handleUpdate(id, value) {\n        console.log('[FormAutocomplete.stories]', id);\n        console.log('[FormAutocomplete.stories]', value);\n        setFieldValue(value);\n      },\n      muiComponentProps: {\n        fullWidth: fullWidth\n      },\n      innerComponentProps: _objectSpread({\n        maxMenuHeight: maxHeight,\n        isMulti: isMulti,\n        isClearable: isClearable,\n        isCreatable: isCreatable,\n        allowEmpty: isAsync\n      }, isAsync && {\n        async: {\n          handler: function handler(type, term) {\n            return fetch(\"https://restcountries.eu/rest/v2/name/\".concat(term, \"\\n\")).then(function (response) {\n              return utils.api.handleResponse(response);\n            }).then(function (data) {\n              return data.map(function (c) {\n                return {\n                  label: c.name,\n                  value: c.alpha2Code\n                };\n              });\n            });\n          },\n          type: ''\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 218,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 183,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(Autocomplete, \"CoV5qKneAYBmp0bo7bGQO+Zy+2E=\", false, function () {\n  return [useForm];\n});\n\nAutocomplete.displayName = \"Autocomplete\";\n_c = Autocomplete;\nAutocomplete.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Autocomplete\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\FormAutocomplete\\\\FormAutocomplete.stories.js\"] = {\n    name: \"Autocomplete\",\n    docgenInfo: Autocomplete.__docgenInfo,\n    path: \"src\\\\components\\\\FormAutocomplete\\\\FormAutocomplete.stories.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Autocomplete\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/FormAutocomplete/FormAutocomplete.stories.js"],"names":["React","useState","FormAutocomplete","withKnobs","boolean","text","number","utils","useForm","Box","title","decorators","countries","label","value","Autocomplete","fieldValue","setFieldValue","hint","placeholder","error","message","type","undefined","fullWidth","maxHeight","range","min","max","step","isClearable","isMulti","isCreatable","isAsync","rhf","fields","name","options","defaultValues","form","getInitialValues","control","setValue","id","maxMenuHeight","allowEmpty","async","handler","term","fetch","then","response","api","handleResponse","data","map","c","alpha2Code","console","log"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { FormAutocomplete } from 'components';\r\nimport { withKnobs, boolean, text, number } from '@storybook/addon-knobs';\r\nimport * as utils from 'utils';\r\nimport { useForm } from 'react-hook-form';\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default {\r\n  title: 'Form',\r\n  decorators: [withKnobs],\r\n};\r\n\r\nconst countries = [\r\n  { label: 'Afghanistan', value: 'AF' },\r\n  { label: 'Albania', value: 'AL' },\r\n  { label: 'Algeria', value: 'DZ' },\r\n  { label: 'Angola', value: 'AO' },\r\n  { label: 'Argentina', value: 'AR' },\r\n  { label: 'Armenia', value: 'AM' },\r\n  { label: 'Australia', value: 'AU' },\r\n  { label: 'Austria', value: 'AT' },\r\n  { label: 'Azerbaijan', value: 'AZ' },\r\n  { label: 'Bahrain', value: 'BH' },\r\n  { label: 'Bangladesh', value: 'BD' },\r\n  { label: 'Belarus', value: 'BY' },\r\n  { label: 'Belgium', value: 'BE' },\r\n  { label: 'Belize', value: 'BZ' },\r\n  { label: 'Benin', value: 'BJ' },\r\n  { label: 'Bermuda', value: 'BM' },\r\n  { label: 'Bolivia', value: 'BO' },\r\n  { label: 'Bosnia and Herzegovina', value: 'BA' },\r\n  { label: 'Brazil', value: 'BR' },\r\n  { label: 'Bulgaria', value: 'BG' },\r\n  { label: 'Cambodia', value: 'KH' },\r\n  { label: 'Cameroon', value: 'CM' },\r\n  { label: 'Canada', value: 'CA' },\r\n  { label: 'Cape Verde', value: 'CV' },\r\n  { label: 'Central African Republic', value: 'CF' },\r\n  { label: 'Chile', value: 'CL' },\r\n  { label: 'China', value: 'CN' },\r\n  { label: 'Colombia', value: 'CO' },\r\n  { label: 'Congo', value: 'CG' },\r\n  { label: 'Costa Rica', value: 'CR' },\r\n  { label: \"Cote D'Ivoire\", value: 'CI' },\r\n  { label: 'Croatia', value: 'HR' },\r\n  { label: 'Cuba', value: 'CU' },\r\n  { label: 'Cyprus', value: 'CY' },\r\n  { label: 'Czech Republic', value: 'CZ' },\r\n  { label: 'Denmark', value: 'DK' },\r\n  { label: 'Dominican Republic', value: 'DO' },\r\n  { label: 'Ecuador', value: 'EC' },\r\n  { label: 'Egypt', value: 'EG' },\r\n  { label: 'Equatorial Guinea', value: 'GQ' },\r\n  { label: 'Estonia', value: 'EE' },\r\n  { label: 'Ethiopia', value: 'ET' },\r\n  { label: 'Finland', value: 'FI' },\r\n  { label: 'France', value: 'FR' },\r\n  { label: 'Gabon', value: 'GA' },\r\n  { label: 'Gambia', value: 'GM' },\r\n  { label: 'Georgia', value: 'GE' },\r\n  { label: 'Germany', value: 'DE' },\r\n  { label: 'Ghana', value: 'GH' },\r\n  { label: 'Greece', value: 'GR' },\r\n  { label: 'Haiti', value: 'HT' },\r\n  { label: 'Honduras', value: 'HN' },\r\n  { label: 'Hungary', value: 'HU' },\r\n  { label: 'Iceland', value: 'IS' },\r\n  { label: 'India', value: 'IN' },\r\n  { label: 'Indonesia', value: 'ID' },\r\n  { label: 'Iran, Islamic Republic Of', value: 'IR' },\r\n  { label: 'Iraq', value: 'IQ' },\r\n  { label: 'Ireland', value: 'IE' },\r\n  { label: 'Israel', value: 'IL' },\r\n  { label: 'Italy', value: 'IT' },\r\n  { label: 'Jamaica', value: 'JM' },\r\n  { label: 'Japan', value: 'JP' },\r\n  { label: 'Jordan', value: 'JO' },\r\n  { label: 'Kazakhstan', value: 'KZ' },\r\n  { label: 'Kenya', value: 'KE' },\r\n  { label: \"Korea, Democratic People'S Republic of\", value: 'KP' },\r\n  { label: 'Korea, Republic of', value: 'KR' },\r\n  { label: 'Kuwait', value: 'KW' },\r\n  { label: 'Kyrgyzstan', value: 'KG' },\r\n  { label: 'Latvia', value: 'LV' },\r\n  { label: 'Lebanon', value: 'LB' },\r\n  { label: 'Liechtenstein', value: 'LI' },\r\n  { label: 'Lithuania', value: 'LT' },\r\n  { label: 'Luxembourg', value: 'LU' },\r\n  { label: 'Macedonia, The Former Yugoslav Republic of', value: 'MK' },\r\n  { label: 'Madagascar', value: 'MG' },\r\n  { label: 'Malaysia', value: 'MY' },\r\n  { label: 'Malta', value: 'MT' },\r\n  { label: 'Mexico', value: 'MX' },\r\n  { label: 'Micronesia, Federated States of', value: 'FM' },\r\n  { label: 'Moldova, Republic of', value: 'MD' },\r\n  { label: 'Mongolia', value: 'MN' },\r\n  { label: 'Morocco', value: 'MA' },\r\n  { label: 'Mozambique', value: 'MZ' },\r\n  { label: 'Namibia', value: 'NA' },\r\n  { label: 'Nepal', value: 'NP' },\r\n  { label: 'Netherlands', value: 'NL' },\r\n  { label: 'New Zealand', value: 'NZ' },\r\n  { label: 'Nicaragua', value: 'NI' },\r\n  { label: 'Nigeria', value: 'NG' },\r\n  { label: 'Norway', value: 'NO' },\r\n  { label: 'Oman', value: 'OM' },\r\n  { label: 'Pakistan', value: 'PK' },\r\n  { label: 'Panama', value: 'PA' },\r\n  { label: 'Paraguay', value: 'PY' },\r\n  { label: 'Peru', value: 'PE' },\r\n  { label: 'Philippines', value: 'PH' },\r\n  { label: 'Poland', value: 'PL' },\r\n  { label: 'Portugal', value: 'PT' },\r\n  { label: 'Qatar', value: 'QA' },\r\n  { label: 'Romania', value: 'RO' },\r\n  { label: 'Russian Federation', value: 'RU' },\r\n  { label: 'Rwanda', value: 'RW' },\r\n  { label: 'Saudi Arabia', value: 'SA' },\r\n  { label: 'Senegal', value: 'SN' },\r\n  { label: 'Serbia and Montenegro', value: 'CS' },\r\n  { label: 'Sierra Leone', value: 'SL' },\r\n  { label: 'Singapore', value: 'SG' },\r\n  { label: 'Slovakia', value: 'SK' },\r\n  { label: 'Slovenia', value: 'SI' },\r\n  { label: 'Somalia', value: 'SO' },\r\n  { label: 'South Africa', value: 'ZA' },\r\n  { label: 'Spain', value: 'ES' },\r\n  { label: 'Sri Lanka', value: 'LK' },\r\n  { label: 'Sudan', value: 'SD' },\r\n  { label: 'Suriname', value: 'SR' },\r\n  { label: 'Swaziland', value: 'SZ' },\r\n  { label: 'Sweden', value: 'SE' },\r\n  { label: 'Switzerland', value: 'CH' },\r\n  { label: 'Tajikistan', value: 'TJ' },\r\n  { label: 'Thailand', value: 'TH' },\r\n  { label: 'Tonga', value: 'TO' },\r\n  { label: 'Tunisia', value: 'TN' },\r\n  { label: 'Turkey', value: 'TR' },\r\n  { label: 'Turkmenistan', value: 'TM' },\r\n  { label: 'Uganda', value: 'UG' },\r\n  { label: 'Ukraine', value: 'UA' },\r\n  { label: 'United Arab Emirates', value: 'AE' },\r\n  { label: 'United Kingdom', value: 'GB' },\r\n  { label: 'United States', value: 'US' },\r\n  { label: 'Uruguay', value: 'UY' },\r\n  { label: 'Uzbekistan', value: 'UZ' },\r\n  { label: 'Venezuela', value: 'VE' },\r\n  { label: 'Vietnam', value: 'VN' },\r\n  { label: 'Yemen', value: 'YE' },\r\n  { label: 'Zambia', value: 'ZM' },\r\n  { label: 'Zimbabwe', value: 'ZW' },\r\n];\r\n\r\nexport const Autocomplete = () => {\r\n  const [fieldValue, setFieldValue] = useState([]);\r\n\r\n  const label = text('Label', 'Autocomplete Field');\r\n  const hint = text('Hint', 'Type to refine options...');\r\n  const placeholder = text('Placeholder', 'Custom autocomplete placeholder...');\r\n  const error = boolean('Error', false) ? { message: 'Dummy error', type: 'required' } : undefined;\r\n  const fullWidth = boolean('Fullwidth', true);\r\n  const maxHeight = number('Max Height', 300, { range: true, min: 100, max: 600, step: 20 });\r\n  const isClearable = boolean('Clearable', false);\r\n  const isMulti = boolean('Multi', false);\r\n  const isCreatable = boolean('Creatable', false);\r\n  const isAsync = boolean('Async', false);\r\n  const rhf = boolean('React Hook Form', true);\r\n\r\n  // prettier-ignore\r\n  const fields = [\r\n    {\r\n      name: 'fieldAutocomplete',\r\n      type: 'autocomplete',\r\n      value: [],\r\n      options: countries,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const { control, setValue } = useForm({ defaultValues });\r\n\r\n  return (\r\n    <Box width={1}>\r\n      {rhf && (\r\n        <FormAutocomplete\r\n          control={control}\r\n          {...fields[0]}\r\n          label={label}\r\n          hint={hint}\r\n          error={error}\r\n          placeholder={placeholder}\r\n          handleUpdate={(id, value) => setValue(id, value)}\r\n          muiComponentProps={{\r\n            fullWidth: fullWidth,\r\n          }}\r\n          innerComponentProps={{\r\n            maxMenuHeight: maxHeight,\r\n            isMulti: isMulti,\r\n            isClearable: isClearable,\r\n            isCreatable: isCreatable,\r\n            allowEmpty: isAsync,\r\n            ...(isAsync && {\r\n              async: {\r\n                handler: (type, term) => {\r\n                  return fetch(`https://restcountries.eu/rest/v2/name/${term}\r\n`)\r\n                    .then((response) => utils.api.handleResponse(response))\r\n                    .then((data) => data.map((c) => ({ label: c.name, value: c.alpha2Code })));\r\n                },\r\n                type: '',\r\n              },\r\n            }),\r\n          }}\r\n        />\r\n      )}\r\n\r\n      {!rhf && (\r\n        <FormAutocomplete\r\n          {...fields[0]}\r\n          value={fieldValue}\r\n          label={label}\r\n          hint={hint}\r\n          error={error}\r\n          placeholder={placeholder}\r\n          handleUpdate={(id, value) => {\r\n            console.log('[FormAutocomplete.stories]', id);\r\n            console.log('[FormAutocomplete.stories]', value);\r\n\r\n            setFieldValue(value);\r\n          }}\r\n          muiComponentProps={{\r\n            fullWidth: fullWidth,\r\n          }}\r\n          innerComponentProps={{\r\n            maxMenuHeight: maxHeight,\r\n            isMulti: isMulti,\r\n            isClearable: isClearable,\r\n            isCreatable: isCreatable,\r\n            allowEmpty: isAsync,\r\n            ...(isAsync && {\r\n              async: {\r\n                handler: (type, term) => {\r\n                  return fetch(`https://restcountries.eu/rest/v2/name/${term}\r\n`)\r\n                    .then((response) => utils.api.handleResponse(response))\r\n                    .then((data) => data.map((c) => ({ label: c.name, value: c.alpha2Code })));\r\n                },\r\n                type: '',\r\n              },\r\n            }),\r\n          }}\r\n        />\r\n      )}\r\n    </Box>\r\n  );\r\n};\r\n"]},"metadata":{},"sourceType":"module"}