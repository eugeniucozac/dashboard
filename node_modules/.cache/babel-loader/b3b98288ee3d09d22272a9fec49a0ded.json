{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\Admin\\\\Admin.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useSelector } from 'react-redux';\nimport { Helmet } from 'react-helmet';\nimport get from 'lodash/get'; // app\n\nimport * as utils from 'utils';\nimport { AdminView } from './Admin.view';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport function Admin() {\n  _s();\n\n  var _useState = useState('users'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var brand = useSelector(function (state) {\n    return state.ui.brand;\n  });\n  var configVars = useSelector(function (state) {\n    return get(state, 'config.vars', {});\n  });\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Helmet, {\n      children: /*#__PURE__*/_jsxDEV(\"title\", {\n        children: \"\".concat(utils.string.t('admin.title'), \" - \").concat(utils.app.getAppName(brand))\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 23,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 22,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(AdminView, {\n      selectedTab: selectedTab,\n      handleSelectTab: handleSelectTab,\n      isDev: utils.app.isDevelopment(configVars)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 25,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(Admin, \"wUu/50OQ2GgjWkUhBgRGTycXLxc=\", false, function () {\n  return [useSelector, useSelector];\n});\n\n_c = Admin;\nexport default Admin;\n\nvar _c;\n\n$RefreshReg$(_c, \"Admin\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/Admin/Admin.js"],"names":["React","useState","useSelector","Helmet","get","utils","AdminView","Admin","selectedTab","setSelectedTab","brand","state","ui","configVars","handleSelectTab","tabName","string","t","app","getAppName","isDevelopment"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,SAASC,WAAT,QAA4B,aAA5B;AACA,SAASC,MAAT,QAAuB,cAAvB;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SAASC,SAAT,QAA0B,cAA1B;;;AAEA,OAAO,SAASC,KAAT,GAAiB;AAAA;;AAAA,kBACgBN,QAAQ,CAAC,OAAD,CADxB;AAAA;AAAA,MACfO,WADe;AAAA,MACFC,cADE;;AAGtB,MAAMC,KAAK,GAAGR,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWA,KAAK,CAACC,EAAN,CAASF,KAApB;AAAA,GAAD,CAAzB;AACA,MAAMG,UAAU,GAAGX,WAAW,CAAC,UAACS,KAAD;AAAA,WAAWP,GAAG,CAACO,KAAD,EAAQ,aAAR,EAAuB,EAAvB,CAAd;AAAA,GAAD,CAA9B;;AAEA,MAAMG,eAAe,GAAG,SAAlBA,eAAkB,CAACC,OAAD,EAAa;AACnCN,IAAAA,cAAc,CAACM,OAAD,CAAd;AACD,GAFD;;AAIA,sBACE;AAAA,4BACE,QAAC,MAAD;AAAA,6BACE;AAAA,4BAAWV,KAAK,CAACW,MAAN,CAAaC,CAAb,CAAe,aAAf,CAAX,gBAA8CZ,KAAK,CAACa,GAAN,CAAUC,UAAV,CAAqBT,KAArB,CAA9C;AAAA;AAAA;AAAA;AAAA;AAAA;AADF;AAAA;AAAA;AAAA;AAAA,YADF,eAIE,QAAC,SAAD;AAAW,MAAA,WAAW,EAAEF,WAAxB;AAAqC,MAAA,eAAe,EAAEM,eAAtD;AAAuE,MAAA,KAAK,EAAET,KAAK,CAACa,GAAN,CAAUE,aAAV,CAAwBP,UAAxB;AAA9E;AAAA;AAAA;AAAA;AAAA,YAJF;AAAA,kBADF;AAQD;;GAlBeN,K;UAGAL,W,EACKA,W;;;KAJLK,K;AAoBhB,eAAeA,KAAf","sourcesContent":["import React, { useState } from 'react';\r\nimport { useSelector } from 'react-redux';\r\nimport { Helmet } from 'react-helmet';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport * as utils from 'utils';\r\nimport { AdminView } from './Admin.view';\r\n\r\nexport function Admin() {\r\n  const [selectedTab, setSelectedTab] = useState('users');\r\n\r\n  const brand = useSelector((state) => state.ui.brand);\r\n  const configVars = useSelector((state) => get(state, 'config.vars', {}));\r\n\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Helmet>\r\n        <title>{`${utils.string.t('admin.title')} - ${utils.app.getAppName(brand)}`}</title>\r\n      </Helmet>\r\n      <AdminView selectedTab={selectedTab} handleSelectTab={handleSelectTab} isDev={utils.app.isDevelopment(configVars)} />\r\n    </>\r\n  );\r\n}\r\n\r\nexport default Admin;\r\n"]},"metadata":{},"sourceType":"module"}