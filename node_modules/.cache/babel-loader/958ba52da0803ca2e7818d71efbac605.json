{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsCreateRFIDocs\\\\ClaimsCreateRFIDocs.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport ClaimsCreateRFIDocsView from './ClaimsCreateRFIDocs.view';\nimport { setDmsTaskContextType, setRFIDocuments, selectorDmsViewFiles } from 'stores';\nimport { DMS_TASK_CONTEXT_TYPE_RFI } from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsCreateRFIDocs.propTypes = {\n  createRfiInfo: PropTypes.object.isRequired,\n  activeStep: PropTypes.number.isRequired,\n  isAllStepsCompleted: PropTypes.bool,\n  index: PropTypes.number.isRequired,\n  save: PropTypes.bool,\n  claim: PropTypes.object,\n  handlers: PropTypes.shape({\n    handleBack: PropTypes.func.isRequired,\n    handleSave: PropTypes.func.isRequired,\n    handleCancel: PropTypes.func.isRequired,\n    handleNextSubmit: PropTypes.func.isRequired\n  })\n};\nexport default function ClaimsCreateRFIDocs(_ref) {\n  _s();\n\n  var createRfiInfo = _ref.createRfiInfo,\n      activeStep = _ref.activeStep,\n      index = _ref.index,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      handlers = _ref.handlers,\n      save = _ref.save,\n      claim = _ref.claim;\n  var dispatch = useDispatch();\n  var viewDmsDocuments = useSelector(selectorDmsViewFiles);\n  useEffect(function () {\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\n      dispatch(setRFIDocuments(viewDmsDocuments));\n    }\n  }, [viewDmsDocuments]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    dispatch(setDmsTaskContextType({\n      type: DMS_TASK_CONTEXT_TYPE_RFI,\n      refId: createRfiInfo === null || createRfiInfo === void 0 ? void 0 : createRfiInfo.taskId\n    }));\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(ClaimsCreateRFIDocsView, {\n    createRfiInfo: createRfiInfo,\n    activeStep: activeStep,\n    index: index,\n    isAllStepsCompleted: isAllStepsCompleted,\n    handlers: handlers,\n    save: save,\n    sourceId: (claim === null || claim === void 0 ? void 0 : claim.sourceID) || (claim === null || claim === void 0 ? void 0 : claim.sourceId)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsCreateRFIDocs, \"AqCCi6qUCoaI015vuom+dxs69RE=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = ClaimsCreateRFIDocs;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsCreateRFIDocs\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsCreateRFIDocs/ClaimsCreateRFIDocs.js"],"names":["React","useEffect","PropTypes","useDispatch","useSelector","ClaimsCreateRFIDocsView","setDmsTaskContextType","setRFIDocuments","selectorDmsViewFiles","DMS_TASK_CONTEXT_TYPE_RFI","utils","ClaimsCreateRFIDocs","propTypes","createRfiInfo","object","isRequired","activeStep","number","isAllStepsCompleted","bool","index","save","claim","handlers","shape","handleBack","func","handleSave","handleCancel","handleNextSubmit","dispatch","viewDmsDocuments","generic","isInvalidOrEmptyArray","type","refId","taskId","sourceID","sourceId"],"mappings":";;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,OAAOC,uBAAP,MAAoC,4BAApC;AACA,SAASC,qBAAT,EAAgCC,eAAhC,EAAiDC,oBAAjD,QAA6E,QAA7E;AACA,SACEC,yBADF,QAEO,QAFP;AAGA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,mBAAmB,CAACC,SAApB,GAAgC;AAC9BC,EAAAA,aAAa,EAAEX,SAAS,CAACY,MAAV,CAAiBC,UADF;AAE9BC,EAAAA,UAAU,EAAEd,SAAS,CAACe,MAAV,CAAiBF,UAFC;AAG9BG,EAAAA,mBAAmB,EAAEhB,SAAS,CAACiB,IAHD;AAI9BC,EAAAA,KAAK,EAAElB,SAAS,CAACe,MAAV,CAAiBF,UAJM;AAK9BM,EAAAA,IAAI,EAAEnB,SAAS,CAACiB,IALc;AAM9BG,EAAAA,KAAK,EAAEpB,SAAS,CAACY,MANa;AAO9BS,EAAAA,QAAQ,EAAErB,SAAS,CAACsB,KAAV,CAAgB;AACxBC,IAAAA,UAAU,EAAEvB,SAAS,CAACwB,IAAV,CAAeX,UADH;AAExBY,IAAAA,UAAU,EAAEzB,SAAS,CAACwB,IAAV,CAAeX,UAFH;AAGxBa,IAAAA,YAAY,EAAE1B,SAAS,CAACwB,IAAV,CAAeX,UAHL;AAIxBc,IAAAA,gBAAgB,EAAE3B,SAAS,CAACwB,IAAV,CAAeX;AAJT,GAAhB;AAPoB,CAAhC;AAeA,eAAe,SAASJ,mBAAT,OAQZ;AAAA;;AAAA,MAPDE,aAOC,QAPDA,aAOC;AAAA,MANDG,UAMC,QANDA,UAMC;AAAA,MALDI,KAKC,QALDA,KAKC;AAAA,MAJDF,mBAIC,QAJDA,mBAIC;AAAA,MAHDK,QAGC,QAHDA,QAGC;AAAA,MAFDF,IAEC,QAFDA,IAEC;AAAA,MADDC,KACC,QADDA,KACC;AAED,MAAMQ,QAAQ,GAAG3B,WAAW,EAA5B;AAEA,MAAM4B,gBAAgB,GAAG3B,WAAW,CAACI,oBAAD,CAApC;AACAP,EAAAA,SAAS,CAAC,YAAM;AACd,QAAI,CAACS,KAAK,CAACsB,OAAN,CAAcC,qBAAd,CAAoCF,gBAApC,CAAL,EAA4D;AAC1DD,MAAAA,QAAQ,CAACvB,eAAe,CAACwB,gBAAD,CAAhB,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,gBAAD,CAJM,CAAT,CALC,CASuB;;AAExB9B,EAAAA,SAAS,CAAC,YAAM;AACd6B,IAAAA,QAAQ,CAACxB,qBAAqB,CAAC;AAAE4B,MAAAA,IAAI,EAAEzB,yBAAR;AAAmC0B,MAAAA,KAAK,EAAEtB,aAAF,aAAEA,aAAF,uBAAEA,aAAa,CAAEuB;AAAzD,KAAD,CAAtB,CAAR;AACD,GAFQ,EAEN,EAFM,CAAT,CAXC,CAaO;;AAER,sBACE,QAAC,uBAAD;AACE,IAAA,aAAa,EAAEvB,aADjB;AAEE,IAAA,UAAU,EAAEG,UAFd;AAGE,IAAA,KAAK,EAAEI,KAHT;AAIE,IAAA,mBAAmB,EAAEF,mBAJvB;AAKE,IAAA,QAAQ,EAAEK,QALZ;AAME,IAAA,IAAI,EAAEF,IANR;AAOE,IAAA,QAAQ,EAAE,CAAAC,KAAK,SAAL,IAAAA,KAAK,WAAL,YAAAA,KAAK,CAAEe,QAAP,MAAmBf,KAAnB,aAAmBA,KAAnB,uBAAmBA,KAAK,CAAEgB,QAA1B;AAPZ;AAAA;AAAA;AAAA;AAAA,UADF;AAWD;;GAlCuB3B,mB;UAULR,W,EAEQC,W;;;KAZHO,mB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport ClaimsCreateRFIDocsView from './ClaimsCreateRFIDocs.view';\r\nimport { setDmsTaskContextType, setRFIDocuments, selectorDmsViewFiles } from 'stores';\r\nimport {\r\n  DMS_TASK_CONTEXT_TYPE_RFI\r\n} from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nClaimsCreateRFIDocs.propTypes = {\r\n  createRfiInfo: PropTypes.object.isRequired,\r\n  activeStep: PropTypes.number.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool,\r\n  index: PropTypes.number.isRequired,\r\n  save: PropTypes.bool,\r\n  claim: PropTypes.object,\r\n  handlers: PropTypes.shape({\r\n    handleBack: PropTypes.func.isRequired,\r\n    handleSave: PropTypes.func.isRequired,\r\n    handleCancel: PropTypes.func.isRequired,\r\n    handleNextSubmit: PropTypes.func.isRequired\r\n  })\r\n}\r\n\r\nexport default function ClaimsCreateRFIDocs({\r\n  createRfiInfo,\r\n  activeStep,\r\n  index,\r\n  isAllStepsCompleted,\r\n  handlers,\r\n  save,\r\n  claim\r\n}) {\r\n\r\n  const dispatch = useDispatch();\r\n\r\n  const viewDmsDocuments = useSelector(selectorDmsViewFiles);\r\n  useEffect(() => {\r\n    if (!utils.generic.isInvalidOrEmptyArray(viewDmsDocuments)) {\r\n      dispatch(setRFIDocuments(viewDmsDocuments));\r\n    }\r\n  }, [viewDmsDocuments]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    dispatch(setDmsTaskContextType({ type: DMS_TASK_CONTEXT_TYPE_RFI, refId: createRfiInfo?.taskId }));\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <ClaimsCreateRFIDocsView\r\n      createRfiInfo={createRfiInfo}\r\n      activeStep={activeStep}\r\n      index={index}\r\n      isAllStepsCompleted={isAllStepsCompleted}\r\n      handlers={handlers}\r\n      save={save}\r\n      sourceId={claim?.sourceID || claim?.sourceId}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}