{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimRefTasksTableRow\\\\ClaimRefTasksTableRow.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useForm } from 'react-hook-form';\nimport { useHistory } from 'react-router';\nimport { useDispatch } from 'react-redux'; // app\n\nimport styles from './ClaimRefTasksTableRow.styles';\nimport { FormCheckbox, TableCell, Translate, Status } from 'components';\nimport { selectClaimsProcessingTasksSelected, getSancCheckAssociatedTask } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { SANCTIONS_CHECK_KEY, TASK_ROW_TYPE } from 'consts'; // mui\n\nimport { makeStyles, Box, TableRow, Link } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimRefTasksTableRowView.propTypes = {\n  task: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  columnProps: PropTypes.func.isRequired,\n  getStatus: PropTypes.func.isRequired,\n  selectTask: PropTypes.func.isRequired\n};\nexport function ClaimRefTasksTableRowView(_ref) {\n  _s();\n\n  var _classesRow, _task$taskId, _task$taskId2, _getStatus, _getStatus2;\n\n  var task = _ref.task,\n      isSelected = _ref.isSelected,\n      columnProps = _ref.columnProps,\n      getStatus = _ref.getStatus,\n      selectTask = _ref.selectTask;\n  var classes = makeStyles(styles, {\n    name: 'ClaimRefTasksTableRow'\n  })();\n\n  var _useForm = useForm(),\n      control = _useForm.control,\n      register = _useForm.register,\n      watch = _useForm.watch;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n  var field = [{\n    name: task === null || task === void 0 ? void 0 : (_task$taskId = task.taskId) === null || _task$taskId === void 0 ? void 0 : _task$taskId.toString(),\n    type: 'checkbox',\n    defaultValue: ''\n  }];\n\n  var clickTask = function clickTask(taskobj) {\n    return function (event) {\n      if (taskobj === null || taskobj === void 0 ? void 0 : taskobj.taskId) {\n        event.stopPropagation();\n\n        if ((taskobj === null || taskobj === void 0 ? void 0 : taskobj.taskDefKey) === SANCTIONS_CHECK_KEY) {\n          dispatch(getSancCheckAssociatedTask(taskobj === null || taskobj === void 0 ? void 0 : taskobj.parentTaskId));\n        }\n\n        dispatch(selectClaimsProcessingTasksSelected(taskobj));\n\n        if (taskobj.taskType === TASK_ROW_TYPE.rfi) {\n          history.push(\"\".concat(config.routes.claimsProcessing.rfi, \"/\").concat(taskobj.taskRef));\n        } else {\n          history.push(\"\".concat(config.routes.claimsProcessing.task, \"/\").concat(taskobj.taskRef));\n        }\n      }\n    };\n  };\n\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: selectTask(task),\n    className: classnames(classesRow),\n    children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(FormCheckbox, _objectSpread(_objectSpread({}, utils.form.getFieldProps(field, task === null || task === void 0 ? void 0 : (_task$taskId2 = task.taskId) === null || _task$taskId2 === void 0 ? void 0 : _task$taskId2.toString())), {}, {\n          control: control,\n          register: register,\n          watch: watch,\n          nestedClasses: {\n            root: classes.checkbox\n          }\n        }), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 64,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 62,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        color: \"secondary\",\n        onClick: clickTask(task),\n        children: task === null || task === void 0 ? void 0 : task.taskRef\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 74,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 73,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdOn')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: task === null || task === void 0 ? void 0 : task.createdOn,\n          format: config.ui.format.date.textTime\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 78,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskType')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.taskType\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 82,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n      title: task === null || task === void 0 ? void 0 : task.description,\n      nestedClasses: {\n        root: classes.description\n      },\n      children: task === null || task === void 0 ? void 0 : task.description\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDueDate')), {}, {\n      className: ((_getStatus = getStatus(task)) === null || _getStatus === void 0 ? void 0 : _getStatus.dateAlert) ? classes.dateAlert : '',\n      children: utils.string.t('format.date', {\n        value: {\n          date: task === null || task === void 0 ? void 0 : task.targetDueDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 86,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.assigneeFullName\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 89,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('additionalAssignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.additionalAssignee\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 90,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Status, {\n        size: \"sm\",\n        text: /*#__PURE__*/_jsxDEV(Translate, {\n          label: task === null || task === void 0 ? void 0 : task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 93,\n          columnNumber: 33\n        }, this),\n        status: (_getStatus2 = getStatus(task)) === null || _getStatus2 === void 0 ? void 0 : _getStatus2.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 93,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 92,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 61,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimRefTasksTableRowView, \"Cu0bQS+unIbuhzY0983q08czkI8=\", false, function () {\n  return [useForm, useDispatch, useHistory];\n});\n\n_c = ClaimRefTasksTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimRefTasksTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimRefTasksTableRow/ClaimRefTasksTableRow.view.js"],"names":["React","PropTypes","classnames","useForm","useHistory","useDispatch","styles","FormCheckbox","TableCell","Translate","Status","selectClaimsProcessingTasksSelected","getSancCheckAssociatedTask","utils","config","SANCTIONS_CHECK_KEY","TASK_ROW_TYPE","makeStyles","Box","TableRow","Link","ClaimRefTasksTableRowView","propTypes","task","object","isRequired","isSelected","bool","columnProps","func","getStatus","selectTask","classes","name","control","register","watch","dispatch","history","classesRow","row","rowSelected","field","taskId","toString","type","defaultValue","clickTask","taskobj","event","stopPropagation","taskDefKey","parentTaskId","taskType","rfi","push","routes","claimsProcessing","taskRef","form","getFieldProps","root","checkbox","string","t","value","date","createdOn","format","ui","textTime","team","description","dateAlert","targetDueDate","text","assigneeFullName","additionalAssignee","priority","status"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useHistory } from 'react-router';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport styles from './ClaimRefTasksTableRow.styles';\r\nimport { FormCheckbox, TableCell, Translate, Status } from 'components';\r\nimport { selectClaimsProcessingTasksSelected, getSancCheckAssociatedTask } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { SANCTIONS_CHECK_KEY, TASK_ROW_TYPE } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow, Link } from '@material-ui/core';\r\n\r\nClaimRefTasksTableRowView.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  columnProps: PropTypes.func.isRequired,\r\n  getStatus: PropTypes.func.isRequired,\r\n  selectTask: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimRefTasksTableRowView({ task, isSelected, columnProps, getStatus, selectTask }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimRefTasksTableRow' })();\r\n  const { control, register, watch } = useForm();\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  const field = [\r\n    {\r\n      name: task?.taskId?.toString(),\r\n      type: 'checkbox',\r\n      defaultValue: '',\r\n    },\r\n  ];\r\n\r\n  const clickTask = (taskobj) => (event) => {\r\n    if (taskobj?.taskId) {\r\n      event.stopPropagation();\r\n      if (taskobj?.taskDefKey === SANCTIONS_CHECK_KEY) {\r\n        dispatch(getSancCheckAssociatedTask(taskobj?.parentTaskId));\r\n      }\r\n      dispatch(selectClaimsProcessingTasksSelected(taskobj));\r\n      if (taskobj.taskType === TASK_ROW_TYPE.rfi) {\r\n        history.push(`${config.routes.claimsProcessing.rfi}/${taskobj.taskRef}`);\r\n      } else {\r\n        history.push(`${config.routes.claimsProcessing.task}/${taskobj.taskRef}`);\r\n      }\r\n    }\r\n  };\r\n\r\n  return (\r\n    <TableRow hover onClick={selectTask(task)} className={classnames(classesRow)}>\r\n      <TableCell {...columnProps('taskRef')}>\r\n        <Box display=\"flex\" alignItems=\"center\">\r\n          <FormCheckbox\r\n            {...utils.form.getFieldProps(field, task?.taskId?.toString())}\r\n            control={control}\r\n            register={register}\r\n            watch={watch}\r\n            nestedClasses={{ root: classes.checkbox }}\r\n          />\r\n        </Box>\r\n      </TableCell>\r\n      <TableCell {...columnProps('taskRef')}>\r\n        <Link color=\"secondary\" onClick={clickTask(task)}>\r\n          {task?.taskRef}\r\n        </Link>\r\n      </TableCell>\r\n      <TableCell {...columnProps('createdOn')}>\r\n        {utils.string.t('format.date', { value: { date: task?.createdOn, format: config.ui.format.date.textTime } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('team')}>{task?.team}</TableCell>\r\n      <TableCell {...columnProps('taskType')}>{task?.taskType}</TableCell>\r\n      <TableCell {...columnProps('description')} title={task?.description} nestedClasses={{ root: classes.description }}>\r\n        {task?.description}\r\n      </TableCell>\r\n      <TableCell {...columnProps('targetDueDate')} className={getStatus(task)?.dateAlert ? classes.dateAlert : ''}>\r\n        {utils.string.t('format.date', { value: { date: task?.targetDueDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('assignee')}>{task?.assigneeFullName}</TableCell>\r\n      <TableCell {...columnProps('additionalAssignee')}>{task?.additionalAssignee}</TableCell>\r\n      <TableCell {...columnProps('priority')}>{task?.priority}</TableCell>\r\n      <TableCell {...columnProps('status')}>\r\n        <Status size=\"sm\" text={<Translate label={task?.status} />} status={getStatus(task)?.type} />\r\n      </TableCell>\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}