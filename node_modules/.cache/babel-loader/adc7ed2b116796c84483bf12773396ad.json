{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\MarketSheet\\\\MarketSheet.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect, useRef } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport debounce from 'lodash/debounce';\nimport groupBy from 'lodash/groupBy';\nimport toNumber from 'lodash/toNumber';\nimport get from 'lodash/get'; // app\n\nimport { MarketSheetView } from './MarketSheet.view';\nimport { selectRefDataDepartmentById, selectRefDataStatusIdByCode, selectRefDataCapacityTypes, filterReferenceDataBusinessTypes, editPlacementConfig, resetMarket, showModal } from 'stores';\nimport { MarketSheetPDF } from 'modules';\nimport { KEYCODE, STATUS_MARKET_QUOTED, STATUS_POLICY_NTU } from 'consts';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function MarketSheet() {\n  _s();\n\n  var dispatch = useDispatch();\n  var placement = useSelector(function (state) {\n    return get(state, 'placement');\n  });\n  var policies = useSelector(function (state) {\n    return get(state, 'placement.selected.policies', []);\n  });\n  var department = useSelector(selectRefDataDepartmentById(get(placement, 'selected.departmentId')));\n  var statusMarketQuoted = useSelector(selectRefDataStatusIdByCode('market', STATUS_MARKET_QUOTED));\n  var statusPolicyNtu = useSelector(selectRefDataStatusIdByCode('policy', STATUS_POLICY_NTU));\n  var refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\n  var configVars = useSelector(function (state) {\n    return get(state, 'config.vars');\n  });\n  var placementConfig = get(placement, 'selected.config') || {};\n  var isFullscreen = useRef(false);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      tab = _useState2[0],\n      setTab = _useState2[1];\n\n  var _useState3 = useState({\n    w: 0,\n    h: 0\n  }),\n      _useState4 = _slicedToArray(_useState3, 2),\n      dimensions = _useState4[0],\n      setDimensions = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      capacity = _useState6[0],\n      setCapacity = _useState6[1];\n\n  var _useState7 = useState(placementConfig.capacity || refDataCapacityTypes),\n      _useState8 = _slicedToArray(_useState7, 2),\n      capacityTypes = _useState8[0],\n      setCapacityTypes = _useState8[1];\n\n  var _useState9 = useState([{\n    id: 2019,\n    label: '2019',\n    selected: true,\n    options: [{\n      id: 'all',\n      label: utils.string.t('app.all'),\n      selected: true\n    }]\n  }]),\n      _useState10 = _slicedToArray(_useState9, 1),\n      years = _useState10[0]; // TODO added on 17/06/2020: try to get currency from policies\n\n\n  var _useState11 = useState({\n    // currency: '$',\n    fullscreen: false,\n    policies: [],\n    visible: Boolean(JSON.parse(localStorage.getItem('edge-mudmap-expanded') || true))\n  }),\n      _useState12 = _slicedToArray(_useState11, 2),\n      mudmap = _useState12[0],\n      setMudmap = _useState12[1]; // first render\n\n\n  useEffect(function () {\n    dispatch(resetMarket());\n    windowResize();\n    window.addEventListener('resize', windowResize);\n    document.addEventListener('keydown', keyDownEscape); // cleanup\n\n    return function () {\n      dispatch(resetMarket());\n      window.removeEventListener('resize', windowResize);\n      document.removeEventListener('keydown', keyDownEscape);\n    };\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (!placementConfig.capacity && utils.generic.isValidArray(refDataCapacityTypes, true)) {\n      setCapacityTypes(refDataCapacityTypes);\n    }\n  }, [refDataCapacityTypes] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  var windowResize = debounce(function () {\n    setDimensions({\n      w: window.innerWidth,\n      h: window.innerHeight\n    });\n  }, 200);\n\n  var keyDownEscape = function keyDownEscape(event) {\n    if (isFullscreen.current && event.keyCode === KEYCODE.Escape) {\n      event.preventDefault();\n      setFullscreen(false);\n    }\n  };\n\n  var setFullscreen = function setFullscreen(bool) {\n    isFullscreen.current = bool;\n    setMudmap(_objectSpread(_objectSpread({}, mudmap), {}, {\n      fullscreen: bool\n    }));\n  };\n\n  var getOptions = function getOptions(year) {\n    return utils.generic.isValidArray(year && year.options, true) ? year.options : [];\n  };\n\n  var handleToggleMudmapVisible = function handleToggleMudmapVisible(event) {\n    var isVisible = !mudmap.visible;\n    localStorage.setItem('edge-mudmap-expanded', isVisible ? 'true' : 'false');\n    setMudmap(_objectSpread(_objectSpread({}, mudmap), {}, {\n      visible: isVisible\n    }));\n  };\n\n  var handleToggleMudmapFullscreen = function handleToggleMudmapFullscreen(event) {\n    setFullscreen(!isFullscreen.current);\n  };\n\n  var handleOpenColorPicker = function handleOpenColorPicker(e, item) {\n    setCapacity({\n      target: e.target,\n      item: item\n    });\n  };\n\n  var handleChangeColorPicker = function handleChangeColorPicker(styles) {\n    if (!styles) {\n      setCapacity({});\n      return;\n    }\n\n    var updatedTypes = capacityTypes.map(function (type) {\n      var isMatch = type.id === styles.id;\n      var obj = isMatch ? styles : type;\n      return {\n        id: obj.id,\n        color: obj.color,\n        name: isMatch ? styles.label : obj.name\n      };\n    });\n    setCapacity({});\n    setCapacityTypes(updatedTypes);\n    dispatch(editPlacementConfig({\n      capacity: updatedTypes\n    }));\n  };\n\n  var handleToggleTab = function handleToggleTab(tabSelected) {\n    setTab(tabSelected);\n  };\n\n  var handleReorderMudmap = function handleReorderMudmap(policiesObj) {\n    var policies = Object.values(policiesObj);\n    dispatch(editPlacementConfig({\n      mudmap: _objectSpread(_objectSpread({}, placementConfig.mudmap), {}, _defineProperty({}, selectedTab, policies.map(function (policy) {\n        return {\n          id: policy.id,\n          order: policy.order,\n          capacityId: policy.capacityId\n        };\n      })))\n    }));\n  };\n\n  var handleToggleMudmapForCobrokers = function handleToggleMudmapForCobrokers(value) {\n    return function (event) {\n      dispatch(editPlacementConfig({\n        visibleToCobrokers: value\n      }));\n    };\n  };\n\n  var handleAddLayerClick = function handleAddLayerClick() {\n    var popoverData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function () {\n      dispatch(filterReferenceDataBusinessTypes());\n      dispatch(showModal({\n        component: 'ADD_LAYER',\n        props: {\n          title: 'placement.sheet.addLayer',\n          subtitle: popoverData.title,\n          fullWidth: true,\n          maxWidth: 'sm',\n          disableAutoFocus: true,\n          componentProps: {\n            businessTypeId: popoverData.id\n          }\n        }\n      }));\n    };\n  };\n\n  var handleBulkUpdateClick = function handleBulkUpdateClick(event) {\n    dispatch(showModal({\n      component: 'BULK_UPDATE_POLICY',\n      props: {\n        title: 'placement.sheet.bulkEdit',\n        fullWidth: true,\n        maxWidth: 'xs'\n      }\n    }));\n  }; // abort\n\n\n  if (!placement.selected || !department || utils.generic.isInvalidOrEmptyArray(refDataCapacityTypes)) return null;\n  var year = years ? years.find(function (y) {\n    return y.selected;\n  }) || years[0] : {};\n  var policiesFiltered = policies.filter(function (policy) {\n    return utils.policy.isOriginEdge(policy);\n  });\n  var groups = groupBy(policiesFiltered, function (policy) {\n    return policy.businessTypeId;\n  });\n  var tabs = Object.keys(groups).map(function (group) {\n    var businessTypeId = toNumber(group);\n    var businessTypeName = utils.referenceData.businessTypes.getNameById(department.businessTypes, businessTypeId);\n    return {\n      value: businessTypeId,\n      label: businessTypeName\n    };\n  });\n  var selectedTab = tab && tabs.map(function (tab) {\n    return tab.value;\n  }).includes(tab) ? tab : tabs && tabs.length && get(tabs, '[0].value');\n  var groupPolicies = groups[selectedTab] || [];\n  var mudmapConfig = get(placementConfig, \"mudmap[\".concat(selectedTab, \"]\"), []);\n  var policiesMudmap = utils.policies.getMudmap(policiesFiltered.filter(function (policy) {\n    var isValidStatus = policy.statusId !== statusPolicyNtu;\n    var isSelectedGroup = policy.businessTypeId === selectedTab;\n    return isValidStatus && isSelectedGroup;\n  }), mudmapConfig, statusMarketQuoted, 'written');\n\n  var handleLaunchPDFModal = function handleLaunchPDFModal() {\n    dispatch(showModal({\n      component: 'PLACEMENT_PDF',\n      props: {\n        title: 'placement.sheet.downloadMarketSheet',\n        fullWidth: true,\n        maxWidth: 'md',\n        componentProps: {\n          component: MarketSheetPDF,\n          placement: placement.selected,\n          policiesFiltered: policiesFiltered,\n          layers: groups,\n          mudmaps: placementConfig.mudmap,\n          year: year,\n          capacity: capacity,\n          mudmapConfig: _objectSpread(_objectSpread({}, mudmap), {}, {\n            capacities: capacityTypes\n          })\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(MarketSheetView, {\n    placement: placement,\n    policies: groupPolicies,\n    tabs: tabs,\n    selectedTab: selectedTab,\n    year: year,\n    capacity: capacity,\n    options: getOptions(year),\n    mudmap: _objectSpread(_objectSpread({}, mudmap), {}, {\n      capacities: capacityTypes,\n      dimensions: dimensions,\n      policies: policiesMudmap,\n      visibleToCobrokers: placementConfig.visibleToCobrokers || false\n    }),\n    handlers: {\n      openColorPicker: handleOpenColorPicker,\n      changeColorPicker: handleChangeColorPicker,\n      reorderMudmap: handleReorderMudmap,\n      toggleMudmapVisible: handleToggleMudmapVisible,\n      toggleMudmapFullscreen: handleToggleMudmapFullscreen,\n      toggleMudmapForCobrokers: handleToggleMudmapForCobrokers,\n      toggleTab: handleToggleTab,\n      addLayerClick: handleAddLayerClick,\n      bulkUpdateClick: handleBulkUpdateClick,\n      launchPDFModal: handleLaunchPDFModal\n    },\n    isDev: utils.app.isDevelopment(configVars)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 268,\n    columnNumber: 5\n  }, this);\n}\n\n_s(MarketSheet, \"89unA7Yunwiwes9dSLJ1u0/UQbw=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = MarketSheet;\nMarketSheet.displayName = \"MarketSheet\";\nMarketSheet.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"MarketSheet\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\MarketSheet\\\\MarketSheet.js\"] = {\n    name: \"MarketSheet\",\n    docgenInfo: MarketSheet.__docgenInfo,\n    path: \"src\\\\modules\\\\MarketSheet\\\\MarketSheet.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"MarketSheet\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/MarketSheet/MarketSheet.js"],"names":["React","useState","useEffect","useRef","useDispatch","useSelector","debounce","groupBy","toNumber","get","MarketSheetView","selectRefDataDepartmentById","selectRefDataStatusIdByCode","selectRefDataCapacityTypes","filterReferenceDataBusinessTypes","editPlacementConfig","resetMarket","showModal","MarketSheetPDF","KEYCODE","STATUS_MARKET_QUOTED","STATUS_POLICY_NTU","utils","MarketSheet","dispatch","placement","state","policies","department","statusMarketQuoted","statusPolicyNtu","refDataCapacityTypes","configVars","placementConfig","isFullscreen","tab","setTab","w","h","dimensions","setDimensions","capacity","setCapacity","capacityTypes","setCapacityTypes","id","label","selected","options","string","t","years","fullscreen","visible","Boolean","JSON","parse","localStorage","getItem","mudmap","setMudmap","windowResize","window","addEventListener","document","keyDownEscape","removeEventListener","generic","isValidArray","innerWidth","innerHeight","event","current","keyCode","Escape","preventDefault","setFullscreen","bool","getOptions","year","handleToggleMudmapVisible","isVisible","setItem","handleToggleMudmapFullscreen","handleOpenColorPicker","e","item","target","handleChangeColorPicker","styles","updatedTypes","map","type","isMatch","obj","color","name","handleToggleTab","tabSelected","handleReorderMudmap","policiesObj","Object","values","selectedTab","policy","order","capacityId","handleToggleMudmapForCobrokers","value","visibleToCobrokers","handleAddLayerClick","popoverData","component","props","title","subtitle","fullWidth","maxWidth","disableAutoFocus","componentProps","businessTypeId","handleBulkUpdateClick","isInvalidOrEmptyArray","find","y","policiesFiltered","filter","isOriginEdge","groups","tabs","keys","group","businessTypeName","referenceData","businessTypes","getNameById","includes","length","groupPolicies","mudmapConfig","policiesMudmap","getMudmap","isValidStatus","statusId","isSelectedGroup","handleLaunchPDFModal","layers","mudmaps","capacities","openColorPicker","changeColorPicker","reorderMudmap","toggleMudmapVisible","toggleMudmapFullscreen","toggleMudmapForCobrokers","toggleTab","addLayerClick","bulkUpdateClick","launchPDFModal","app","isDevelopment"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,EAA0BC,SAA1B,EAAqCC,MAArC,QAAmD,OAAnD;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,OAAP,MAAoB,gBAApB;AACA,OAAOC,QAAP,MAAqB,iBAArB;AACA,OAAOC,GAAP,MAAgB,YAAhB,C,CACA;;AACA,SAASC,eAAT,QAAgC,oBAAhC;AACA,SACEC,2BADF,EAEEC,2BAFF,EAGEC,0BAHF,EAIEC,gCAJF,EAKEC,mBALF,EAMEC,WANF,EAOEC,SAPF,QAQO,QARP;AASA,SAASC,cAAT,QAA+B,SAA/B;AACA,SAASC,OAAT,EAAkBC,oBAAlB,EAAwCC,iBAAxC,QAAiE,QAAjE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,eAAe,SAASC,WAAT,GAAuB;AAAA;;AACpC,MAAMC,QAAQ,GAAGpB,WAAW,EAA5B;AACA,MAAMqB,SAAS,GAAGpB,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAWjB,GAAG,CAACiB,KAAD,EAAQ,WAAR,CAAd;AAAA,GAAD,CAA7B;AACA,MAAMC,QAAQ,GAAGtB,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAWjB,GAAG,CAACiB,KAAD,EAAQ,6BAAR,EAAuC,EAAvC,CAAd;AAAA,GAAD,CAA5B;AACA,MAAME,UAAU,GAAGvB,WAAW,CAACM,2BAA2B,CAACF,GAAG,CAACgB,SAAD,EAAY,uBAAZ,CAAJ,CAA5B,CAA9B;AACA,MAAMI,kBAAkB,GAAGxB,WAAW,CAACO,2BAA2B,CAAC,QAAD,EAAWQ,oBAAX,CAA5B,CAAtC;AACA,MAAMU,eAAe,GAAGzB,WAAW,CAACO,2BAA2B,CAAC,QAAD,EAAWS,iBAAX,CAA5B,CAAnC;AACA,MAAMU,oBAAoB,GAAG1B,WAAW,CAACQ,0BAAD,CAAxC;AACA,MAAMmB,UAAU,GAAG3B,WAAW,CAAC,UAACqB,KAAD;AAAA,WAAWjB,GAAG,CAACiB,KAAD,EAAQ,aAAR,CAAd;AAAA,GAAD,CAA9B;AAEA,MAAMO,eAAe,GAAGxB,GAAG,CAACgB,SAAD,EAAY,iBAAZ,CAAH,IAAqC,EAA7D;AAEA,MAAMS,YAAY,GAAG/B,MAAM,CAAC,KAAD,CAA3B;;AAZoC,kBAadF,QAAQ,EAbM;AAAA;AAAA,MAa7BkC,GAb6B;AAAA,MAaxBC,MAbwB;;AAAA,mBAcAnC,QAAQ,CAAC;AAAEoC,IAAAA,CAAC,EAAE,CAAL;AAAQC,IAAAA,CAAC,EAAE;AAAX,GAAD,CAdR;AAAA;AAAA,MAc7BC,UAd6B;AAAA,MAcjBC,aAdiB;;AAAA,mBAeJvC,QAAQ,CAAC,EAAD,CAfJ;AAAA;AAAA,MAe7BwC,QAf6B;AAAA,MAenBC,WAfmB;;AAAA,mBAgBMzC,QAAQ,CAACgC,eAAe,CAACQ,QAAhB,IAA4BV,oBAA7B,CAhBd;AAAA;AAAA,MAgB7BY,aAhB6B;AAAA,MAgBdC,gBAhBc;;AAAA,mBAiBpB3C,QAAQ,CAAC,CACvB;AACE4C,IAAAA,EAAE,EAAE,IADN;AAEEC,IAAAA,KAAK,EAAE,MAFT;AAGEC,IAAAA,QAAQ,EAAE,IAHZ;AAIEC,IAAAA,OAAO,EAAE,CAAC;AAAEH,MAAAA,EAAE,EAAE,KAAN;AAAaC,MAAAA,KAAK,EAAExB,KAAK,CAAC2B,MAAN,CAAaC,CAAb,CAAe,SAAf,CAApB;AAA+CH,MAAAA,QAAQ,EAAE;AAAzD,KAAD;AAJX,GADuB,CAAD,CAjBY;AAAA;AAAA,MAiB7BI,KAjB6B,mBA0BpC;;;AA1BoC,oBA2BRlD,QAAQ,CAAC;AACnC;AACAmD,IAAAA,UAAU,EAAE,KAFuB;AAGnCzB,IAAAA,QAAQ,EAAE,EAHyB;AAInC0B,IAAAA,OAAO,EAAEC,OAAO,CAACC,IAAI,CAACC,KAAL,CAAWC,YAAY,CAACC,OAAb,CAAqB,sBAArB,KAAgD,IAA3D,CAAD;AAJmB,GAAD,CA3BA;AAAA;AAAA,MA2B7BC,MA3B6B;AAAA,MA2BrBC,SA3BqB,mBAkCpC;;;AACA1D,EAAAA,SAAS,CAAC,YAAM;AACdsB,IAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACA6C,IAAAA,YAAY;AACZC,IAAAA,MAAM,CAACC,gBAAP,CAAwB,QAAxB,EAAkCF,YAAlC;AACAG,IAAAA,QAAQ,CAACD,gBAAT,CAA0B,SAA1B,EAAqCE,aAArC,EAJc,CAMd;;AACA,WAAO,YAAM;AACXzC,MAAAA,QAAQ,CAACR,WAAW,EAAZ,CAAR;AACA8C,MAAAA,MAAM,CAACI,mBAAP,CAA2B,QAA3B,EAAqCL,YAArC;AACAG,MAAAA,QAAQ,CAACE,mBAAT,CAA6B,SAA7B,EAAwCD,aAAxC;AACD,KAJD;AAKD,GAZQ,EAYN,EAZM,CAAT,CAnCoC,CA+C5B;;AAER/D,EAAAA,SAAS,CACP,YAAM;AACJ,QAAI,CAAC+B,eAAe,CAACQ,QAAjB,IAA6BnB,KAAK,CAAC6C,OAAN,CAAcC,YAAd,CAA2BrC,oBAA3B,EAAiD,IAAjD,CAAjC,EAAyF;AACvFa,MAAAA,gBAAgB,CAACb,oBAAD,CAAhB;AACD;AACF,GALM,EAMP,CAACA,oBAAD,CANO,CAMgB;AANhB,GAAT;AASA,MAAM8B,YAAY,GAAGvD,QAAQ,CAAC,YAAM;AAClCkC,IAAAA,aAAa,CAAC;AAAEH,MAAAA,CAAC,EAAEyB,MAAM,CAACO,UAAZ;AAAwB/B,MAAAA,CAAC,EAAEwB,MAAM,CAACQ;AAAlC,KAAD,CAAb;AACD,GAF4B,EAE1B,GAF0B,CAA7B;;AAIA,MAAML,aAAa,GAAG,SAAhBA,aAAgB,CAACM,KAAD,EAAW;AAC/B,QAAIrC,YAAY,CAACsC,OAAb,IAAwBD,KAAK,CAACE,OAAN,KAAkBtD,OAAO,CAACuD,MAAtD,EAA8D;AAC5DH,MAAAA,KAAK,CAACI,cAAN;AACAC,MAAAA,aAAa,CAAC,KAAD,CAAb;AACD;AACF,GALD;;AAOA,MAAMA,aAAa,GAAG,SAAhBA,aAAgB,CAACC,IAAD,EAAU;AAC9B3C,IAAAA,YAAY,CAACsC,OAAb,GAAuBK,IAAvB;AACAjB,IAAAA,SAAS,iCACJD,MADI;AAEPP,MAAAA,UAAU,EAAEyB;AAFL,OAAT;AAID,GAND;;AAQA,MAAMC,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B,WAAOzD,KAAK,CAAC6C,OAAN,CAAcC,YAAd,CAA2BW,IAAI,IAAIA,IAAI,CAAC/B,OAAxC,EAAiD,IAAjD,IAAyD+B,IAAI,CAAC/B,OAA9D,GAAwE,EAA/E;AACD,GAFD;;AAIA,MAAMgC,yBAAyB,GAAG,SAA5BA,yBAA4B,CAACT,KAAD,EAAW;AAC3C,QAAMU,SAAS,GAAG,CAACtB,MAAM,CAACN,OAA1B;AACAI,IAAAA,YAAY,CAACyB,OAAb,CAAqB,sBAArB,EAA6CD,SAAS,GAAG,MAAH,GAAY,OAAlE;AAEArB,IAAAA,SAAS,iCACJD,MADI;AAEPN,MAAAA,OAAO,EAAE4B;AAFF,OAAT;AAID,GARD;;AAUA,MAAME,4BAA4B,GAAG,SAA/BA,4BAA+B,CAACZ,KAAD,EAAW;AAC9CK,IAAAA,aAAa,CAAC,CAAC1C,YAAY,CAACsC,OAAf,CAAb;AACD,GAFD;;AAIA,MAAMY,qBAAqB,GAAG,SAAxBA,qBAAwB,CAACC,CAAD,EAAIC,IAAJ,EAAa;AACzC5C,IAAAA,WAAW,CAAC;AAAE6C,MAAAA,MAAM,EAAEF,CAAC,CAACE,MAAZ;AAAoBD,MAAAA,IAAI,EAAJA;AAApB,KAAD,CAAX;AACD,GAFD;;AAIA,MAAME,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,MAAD,EAAY;AAC1C,QAAI,CAACA,MAAL,EAAa;AACX/C,MAAAA,WAAW,CAAC,EAAD,CAAX;AACA;AACD;;AAED,QAAMgD,YAAY,GAAG/C,aAAa,CAACgD,GAAd,CAAkB,UAACC,IAAD,EAAU;AAC/C,UAAMC,OAAO,GAAGD,IAAI,CAAC/C,EAAL,KAAY4C,MAAM,CAAC5C,EAAnC;AACA,UAAMiD,GAAG,GAAGD,OAAO,GAAGJ,MAAH,GAAYG,IAA/B;AAEA,aAAO;AACL/C,QAAAA,EAAE,EAAEiD,GAAG,CAACjD,EADH;AAELkD,QAAAA,KAAK,EAAED,GAAG,CAACC,KAFN;AAGLC,QAAAA,IAAI,EAAEH,OAAO,GAAGJ,MAAM,CAAC3C,KAAV,GAAkBgD,GAAG,CAACE;AAH9B,OAAP;AAKD,KAToB,CAArB;AAWAtD,IAAAA,WAAW,CAAC,EAAD,CAAX;AACAE,IAAAA,gBAAgB,CAAC8C,YAAD,CAAhB;AAEAlE,IAAAA,QAAQ,CACNT,mBAAmB,CAAC;AAClB0B,MAAAA,QAAQ,EAAEiD;AADQ,KAAD,CADb,CAAR;AAKD,GAzBD;;AA2BA,MAAMO,eAAe,GAAG,SAAlBA,eAAkB,CAACC,WAAD,EAAiB;AACvC9D,IAAAA,MAAM,CAAC8D,WAAD,CAAN;AACD,GAFD;;AAIA,MAAMC,mBAAmB,GAAG,SAAtBA,mBAAsB,CAACC,WAAD,EAAiB;AAC3C,QAAMzE,QAAQ,GAAG0E,MAAM,CAACC,MAAP,CAAcF,WAAd,CAAjB;AAEA5E,IAAAA,QAAQ,CACNT,mBAAmB,CAAC;AAClB4C,MAAAA,MAAM,kCACD1B,eAAe,CAAC0B,MADf,2BAEH4C,WAFG,EAEW5E,QAAQ,CAACgE,GAAT,CAAa,UAACa,MAAD,EAAY;AACtC,eAAO;AACL3D,UAAAA,EAAE,EAAE2D,MAAM,CAAC3D,EADN;AAEL4D,UAAAA,KAAK,EAAED,MAAM,CAACC,KAFT;AAGLC,UAAAA,UAAU,EAAEF,MAAM,CAACE;AAHd,SAAP;AAKD,OANc,CAFX;AADY,KAAD,CADb,CAAR;AAcD,GAjBD;;AAmBA,MAAMC,8BAA8B,GAAG,SAAjCA,8BAAiC,CAACC,KAAD;AAAA,WAAW,UAACrC,KAAD,EAAW;AAC3D/C,MAAAA,QAAQ,CACNT,mBAAmB,CAAC;AAClB8F,QAAAA,kBAAkB,EAAED;AADF,OAAD,CADb,CAAR;AAKD,KANsC;AAAA,GAAvC;;AAQA,MAAME,mBAAmB,GACvB,SADIA,mBACJ;AAAA,QAACC,WAAD,uEAAe,EAAf;AAAA,WACA,YAAM;AACJvF,MAAAA,QAAQ,CAACV,gCAAgC,EAAjC,CAAR;AACAU,MAAAA,QAAQ,CACNP,SAAS,CAAC;AACR+F,QAAAA,SAAS,EAAE,WADH;AAERC,QAAAA,KAAK,EAAE;AACLC,UAAAA,KAAK,EAAE,0BADF;AAELC,UAAAA,QAAQ,EAAEJ,WAAW,CAACG,KAFjB;AAGLE,UAAAA,SAAS,EAAE,IAHN;AAILC,UAAAA,QAAQ,EAAE,IAJL;AAKLC,UAAAA,gBAAgB,EAAE,IALb;AAMLC,UAAAA,cAAc,EAAE;AACdC,YAAAA,cAAc,EAAET,WAAW,CAAClE;AADd;AANX;AAFC,OAAD,CADH,CAAR;AAeD,KAlBD;AAAA,GADF;;AAqBA,MAAM4E,qBAAqB,GAAG,SAAxBA,qBAAwB,CAAClD,KAAD,EAAW;AACvC/C,IAAAA,QAAQ,CACNP,SAAS,CAAC;AACR+F,MAAAA,SAAS,EAAE,oBADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,0BADF;AAELE,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,QAAQ,EAAE;AAHL;AAFC,KAAD,CADH,CAAR;AAUD,GAXD,CAlLoC,CA+LpC;;;AACA,MAAI,CAAC5F,SAAS,CAACsB,QAAX,IAAuB,CAACnB,UAAxB,IAAsCN,KAAK,CAAC6C,OAAN,CAAcuD,qBAAd,CAAoC3F,oBAApC,CAA1C,EAAqG,OAAO,IAAP;AAErG,MAAMgD,IAAI,GAAG5B,KAAK,GAAGA,KAAK,CAACwE,IAAN,CAAW,UAACC,CAAD;AAAA,WAAOA,CAAC,CAAC7E,QAAT;AAAA,GAAX,KAAiCI,KAAK,CAAC,CAAD,CAAzC,GAA+C,EAAjE;AACA,MAAM0E,gBAAgB,GAAGlG,QAAQ,CAACmG,MAAT,CAAgB,UAACtB,MAAD;AAAA,WAAYlF,KAAK,CAACkF,MAAN,CAAauB,YAAb,CAA0BvB,MAA1B,CAAZ;AAAA,GAAhB,CAAzB;AACA,MAAMwB,MAAM,GAAGzH,OAAO,CAACsH,gBAAD,EAAmB,UAACrB,MAAD;AAAA,WAAYA,MAAM,CAACgB,cAAnB;AAAA,GAAnB,CAAtB;AAEA,MAAMS,IAAI,GAAG5B,MAAM,CAAC6B,IAAP,CAAYF,MAAZ,EAAoBrC,GAApB,CAAwB,UAACwC,KAAD,EAAW;AAC9C,QAAMX,cAAc,GAAGhH,QAAQ,CAAC2H,KAAD,CAA/B;AACA,QAAMC,gBAAgB,GAAG9G,KAAK,CAAC+G,aAAN,CAAoBC,aAApB,CAAkCC,WAAlC,CAA8C3G,UAAU,CAAC0G,aAAzD,EAAwEd,cAAxE,CAAzB;AACA,WAAO;AAAEZ,MAAAA,KAAK,EAAEY,cAAT;AAAyB1E,MAAAA,KAAK,EAAEsF;AAAhC,KAAP;AACD,GAJY,CAAb;AAMA,MAAM7B,WAAW,GAAGpE,GAAG,IAAI8F,IAAI,CAACtC,GAAL,CAAS,UAACxD,GAAD;AAAA,WAASA,GAAG,CAACyE,KAAb;AAAA,GAAT,EAA6B4B,QAA7B,CAAsCrG,GAAtC,CAAP,GAAoDA,GAApD,GAA0D8F,IAAI,IAAIA,IAAI,CAACQ,MAAb,IAAuBhI,GAAG,CAACwH,IAAD,EAAO,WAAP,CAAxG;AACA,MAAMS,aAAa,GAAGV,MAAM,CAACzB,WAAD,CAAN,IAAuB,EAA7C;AACA,MAAMoC,YAAY,GAAGlI,GAAG,CAACwB,eAAD,mBAA4BsE,WAA5B,QAA4C,EAA5C,CAAxB;AAEA,MAAMqC,cAAc,GAAGtH,KAAK,CAACK,QAAN,CAAekH,SAAf,CACrBhB,gBAAgB,CAACC,MAAjB,CAAwB,UAACtB,MAAD,EAAY;AAClC,QAAMsC,aAAa,GAAGtC,MAAM,CAACuC,QAAP,KAAoBjH,eAA1C;AACA,QAAMkH,eAAe,GAAGxC,MAAM,CAACgB,cAAP,KAA0BjB,WAAlD;AACA,WAAOuC,aAAa,IAAIE,eAAxB;AACD,GAJD,CADqB,EAMrBL,YANqB,EAOrB9G,kBAPqB,EAQrB,SARqB,CAAvB;;AAWA,MAAMoH,oBAAoB,GAAG,SAAvBA,oBAAuB,GAAM;AACjCzH,IAAAA,QAAQ,CACNP,SAAS,CAAC;AACR+F,MAAAA,SAAS,EAAE,eADH;AAERC,MAAAA,KAAK,EAAE;AACLC,QAAAA,KAAK,EAAE,qCADF;AAELE,QAAAA,SAAS,EAAE,IAFN;AAGLC,QAAAA,QAAQ,EAAE,IAHL;AAILE,QAAAA,cAAc,EAAE;AACdP,UAAAA,SAAS,EAAE9F,cADG;AAEdO,UAAAA,SAAS,EAAEA,SAAS,CAACsB,QAFP;AAGd8E,UAAAA,gBAAgB,EAAhBA,gBAHc;AAIdqB,UAAAA,MAAM,EAAElB,MAJM;AAKdmB,UAAAA,OAAO,EAAElH,eAAe,CAAC0B,MALX;AAMdoB,UAAAA,IAAI,EAAJA,IANc;AAOdtC,UAAAA,QAAQ,EAARA,QAPc;AAQdkG,UAAAA,YAAY,kCACPhF,MADO;AAEVyF,YAAAA,UAAU,EAAEzG;AAFF;AARE;AAJX;AAFC,KAAD,CADH,CAAR;AAuBD,GAxBD;;AA0BA,sBACE,QAAC,eAAD;AACE,IAAA,SAAS,EAAElB,SADb;AAEE,IAAA,QAAQ,EAAEiH,aAFZ;AAGE,IAAA,IAAI,EAAET,IAHR;AAIE,IAAA,WAAW,EAAE1B,WAJf;AAKE,IAAA,IAAI,EAAExB,IALR;AAME,IAAA,QAAQ,EAAEtC,QANZ;AAOE,IAAA,OAAO,EAAEqC,UAAU,CAACC,IAAD,CAPrB;AAQE,IAAA,MAAM,kCACDpB,MADC;AAEJyF,MAAAA,UAAU,EAAEzG,aAFR;AAGJJ,MAAAA,UAAU,EAAVA,UAHI;AAIJZ,MAAAA,QAAQ,EAAEiH,cAJN;AAKJ/B,MAAAA,kBAAkB,EAAE5E,eAAe,CAAC4E,kBAAhB,IAAsC;AALtD,MARR;AAeE,IAAA,QAAQ,EAAE;AACRwC,MAAAA,eAAe,EAAEjE,qBADT;AAERkE,MAAAA,iBAAiB,EAAE9D,uBAFX;AAGR+D,MAAAA,aAAa,EAAEpD,mBAHP;AAIRqD,MAAAA,mBAAmB,EAAExE,yBAJb;AAKRyE,MAAAA,sBAAsB,EAAEtE,4BALhB;AAMRuE,MAAAA,wBAAwB,EAAE/C,8BANlB;AAORgD,MAAAA,SAAS,EAAE1D,eAPH;AAQR2D,MAAAA,aAAa,EAAE9C,mBARP;AASR+C,MAAAA,eAAe,EAAEpC,qBATT;AAURqC,MAAAA,cAAc,EAAEb;AAVR,KAfZ;AA2BE,IAAA,KAAK,EAAE3H,KAAK,CAACyI,GAAN,CAAUC,aAAV,CAAwBhI,UAAxB;AA3BT;AAAA;AAAA;AAAA;AAAA,UADF;AA+BD;;GApRuBT,W;UACLnB,W,EACCC,W,EACDA,W,EACEA,W,EACQA,W,EACHA,W,EACKA,W,EACVA,W;;;KARGkB,W;AAAAA,W","sourcesContent":["import React, { useState, useEffect, useRef } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport debounce from 'lodash/debounce';\r\nimport groupBy from 'lodash/groupBy';\r\nimport toNumber from 'lodash/toNumber';\r\nimport get from 'lodash/get';\r\n// app\r\nimport { MarketSheetView } from './MarketSheet.view';\r\nimport {\r\n  selectRefDataDepartmentById,\r\n  selectRefDataStatusIdByCode,\r\n  selectRefDataCapacityTypes,\r\n  filterReferenceDataBusinessTypes,\r\n  editPlacementConfig,\r\n  resetMarket,\r\n  showModal,\r\n} from 'stores';\r\nimport { MarketSheetPDF } from 'modules';\r\nimport { KEYCODE, STATUS_MARKET_QUOTED, STATUS_POLICY_NTU } from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nexport default function MarketSheet() {\r\n  const dispatch = useDispatch();\r\n  const placement = useSelector((state) => get(state, 'placement'));\r\n  const policies = useSelector((state) => get(state, 'placement.selected.policies', []));\r\n  const department = useSelector(selectRefDataDepartmentById(get(placement, 'selected.departmentId')));\r\n  const statusMarketQuoted = useSelector(selectRefDataStatusIdByCode('market', STATUS_MARKET_QUOTED));\r\n  const statusPolicyNtu = useSelector(selectRefDataStatusIdByCode('policy', STATUS_POLICY_NTU));\r\n  const refDataCapacityTypes = useSelector(selectRefDataCapacityTypes);\r\n  const configVars = useSelector((state) => get(state, 'config.vars'));\r\n\r\n  const placementConfig = get(placement, 'selected.config') || {};\r\n\r\n  const isFullscreen = useRef(false);\r\n  const [tab, setTab] = useState();\r\n  const [dimensions, setDimensions] = useState({ w: 0, h: 0 });\r\n  const [capacity, setCapacity] = useState({});\r\n  const [capacityTypes, setCapacityTypes] = useState(placementConfig.capacity || refDataCapacityTypes);\r\n  const [years] = useState([\r\n    {\r\n      id: 2019,\r\n      label: '2019',\r\n      selected: true,\r\n      options: [{ id: 'all', label: utils.string.t('app.all'), selected: true }],\r\n    },\r\n  ]);\r\n\r\n  // TODO added on 17/06/2020: try to get currency from policies\r\n  const [mudmap, setMudmap] = useState({\r\n    // currency: '$',\r\n    fullscreen: false,\r\n    policies: [],\r\n    visible: Boolean(JSON.parse(localStorage.getItem('edge-mudmap-expanded') || true)),\r\n  });\r\n\r\n  // first render\r\n  useEffect(() => {\r\n    dispatch(resetMarket());\r\n    windowResize();\r\n    window.addEventListener('resize', windowResize);\r\n    document.addEventListener('keydown', keyDownEscape);\r\n\r\n    // cleanup\r\n    return () => {\r\n      dispatch(resetMarket());\r\n      window.removeEventListener('resize', windowResize);\r\n      document.removeEventListener('keydown', keyDownEscape);\r\n    };\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!placementConfig.capacity && utils.generic.isValidArray(refDataCapacityTypes, true)) {\r\n        setCapacityTypes(refDataCapacityTypes);\r\n      }\r\n    },\r\n    [refDataCapacityTypes] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const windowResize = debounce(() => {\r\n    setDimensions({ w: window.innerWidth, h: window.innerHeight });\r\n  }, 200);\r\n\r\n  const keyDownEscape = (event) => {\r\n    if (isFullscreen.current && event.keyCode === KEYCODE.Escape) {\r\n      event.preventDefault();\r\n      setFullscreen(false);\r\n    }\r\n  };\r\n\r\n  const setFullscreen = (bool) => {\r\n    isFullscreen.current = bool;\r\n    setMudmap({\r\n      ...mudmap,\r\n      fullscreen: bool,\r\n    });\r\n  };\r\n\r\n  const getOptions = (year) => {\r\n    return utils.generic.isValidArray(year && year.options, true) ? year.options : [];\r\n  };\r\n\r\n  const handleToggleMudmapVisible = (event) => {\r\n    const isVisible = !mudmap.visible;\r\n    localStorage.setItem('edge-mudmap-expanded', isVisible ? 'true' : 'false');\r\n\r\n    setMudmap({\r\n      ...mudmap,\r\n      visible: isVisible,\r\n    });\r\n  };\r\n\r\n  const handleToggleMudmapFullscreen = (event) => {\r\n    setFullscreen(!isFullscreen.current);\r\n  };\r\n\r\n  const handleOpenColorPicker = (e, item) => {\r\n    setCapacity({ target: e.target, item });\r\n  };\r\n\r\n  const handleChangeColorPicker = (styles) => {\r\n    if (!styles) {\r\n      setCapacity({});\r\n      return;\r\n    }\r\n\r\n    const updatedTypes = capacityTypes.map((type) => {\r\n      const isMatch = type.id === styles.id;\r\n      const obj = isMatch ? styles : type;\r\n\r\n      return {\r\n        id: obj.id,\r\n        color: obj.color,\r\n        name: isMatch ? styles.label : obj.name,\r\n      };\r\n    });\r\n\r\n    setCapacity({});\r\n    setCapacityTypes(updatedTypes);\r\n\r\n    dispatch(\r\n      editPlacementConfig({\r\n        capacity: updatedTypes,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleToggleTab = (tabSelected) => {\r\n    setTab(tabSelected);\r\n  };\r\n\r\n  const handleReorderMudmap = (policiesObj) => {\r\n    const policies = Object.values(policiesObj);\r\n\r\n    dispatch(\r\n      editPlacementConfig({\r\n        mudmap: {\r\n          ...placementConfig.mudmap,\r\n          [selectedTab]: policies.map((policy) => {\r\n            return {\r\n              id: policy.id,\r\n              order: policy.order,\r\n              capacityId: policy.capacityId,\r\n            };\r\n          }),\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleToggleMudmapForCobrokers = (value) => (event) => {\r\n    dispatch(\r\n      editPlacementConfig({\r\n        visibleToCobrokers: value,\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAddLayerClick =\r\n    (popoverData = {}) =>\r\n    () => {\r\n      dispatch(filterReferenceDataBusinessTypes());\r\n      dispatch(\r\n        showModal({\r\n          component: 'ADD_LAYER',\r\n          props: {\r\n            title: 'placement.sheet.addLayer',\r\n            subtitle: popoverData.title,\r\n            fullWidth: true,\r\n            maxWidth: 'sm',\r\n            disableAutoFocus: true,\r\n            componentProps: {\r\n              businessTypeId: popoverData.id,\r\n            },\r\n          },\r\n        })\r\n      );\r\n    };\r\n\r\n  const handleBulkUpdateClick = (event) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'BULK_UPDATE_POLICY',\r\n        props: {\r\n          title: 'placement.sheet.bulkEdit',\r\n          fullWidth: true,\r\n          maxWidth: 'xs',\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  // abort\r\n  if (!placement.selected || !department || utils.generic.isInvalidOrEmptyArray(refDataCapacityTypes)) return null;\r\n\r\n  const year = years ? years.find((y) => y.selected) || years[0] : {};\r\n  const policiesFiltered = policies.filter((policy) => utils.policy.isOriginEdge(policy));\r\n  const groups = groupBy(policiesFiltered, (policy) => policy.businessTypeId);\r\n\r\n  const tabs = Object.keys(groups).map((group) => {\r\n    const businessTypeId = toNumber(group);\r\n    const businessTypeName = utils.referenceData.businessTypes.getNameById(department.businessTypes, businessTypeId);\r\n    return { value: businessTypeId, label: businessTypeName };\r\n  });\r\n\r\n  const selectedTab = tab && tabs.map((tab) => tab.value).includes(tab) ? tab : tabs && tabs.length && get(tabs, '[0].value');\r\n  const groupPolicies = groups[selectedTab] || [];\r\n  const mudmapConfig = get(placementConfig, `mudmap[${selectedTab}]`, []);\r\n\r\n  const policiesMudmap = utils.policies.getMudmap(\r\n    policiesFiltered.filter((policy) => {\r\n      const isValidStatus = policy.statusId !== statusPolicyNtu;\r\n      const isSelectedGroup = policy.businessTypeId === selectedTab;\r\n      return isValidStatus && isSelectedGroup;\r\n    }),\r\n    mudmapConfig,\r\n    statusMarketQuoted,\r\n    'written'\r\n  );\r\n\r\n  const handleLaunchPDFModal = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'PLACEMENT_PDF',\r\n        props: {\r\n          title: 'placement.sheet.downloadMarketSheet',\r\n          fullWidth: true,\r\n          maxWidth: 'md',\r\n          componentProps: {\r\n            component: MarketSheetPDF,\r\n            placement: placement.selected,\r\n            policiesFiltered,\r\n            layers: groups,\r\n            mudmaps: placementConfig.mudmap,\r\n            year,\r\n            capacity,\r\n            mudmapConfig: {\r\n              ...mudmap,\r\n              capacities: capacityTypes,\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  return (\r\n    <MarketSheetView\r\n      placement={placement}\r\n      policies={groupPolicies}\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      year={year}\r\n      capacity={capacity}\r\n      options={getOptions(year)}\r\n      mudmap={{\r\n        ...mudmap,\r\n        capacities: capacityTypes,\r\n        dimensions,\r\n        policies: policiesMudmap,\r\n        visibleToCobrokers: placementConfig.visibleToCobrokers || false,\r\n      }}\r\n      handlers={{\r\n        openColorPicker: handleOpenColorPicker,\r\n        changeColorPicker: handleChangeColorPicker,\r\n        reorderMudmap: handleReorderMudmap,\r\n        toggleMudmapVisible: handleToggleMudmapVisible,\r\n        toggleMudmapFullscreen: handleToggleMudmapFullscreen,\r\n        toggleMudmapForCobrokers: handleToggleMudmapForCobrokers,\r\n        toggleTab: handleToggleTab,\r\n        addLayerClick: handleAddLayerClick,\r\n        bulkUpdateClick: handleBulkUpdateClick,\r\n        launchPDFModal: handleLaunchPDFModal,\r\n      }}\r\n      isDev={utils.app.isDevelopment(configVars)}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}