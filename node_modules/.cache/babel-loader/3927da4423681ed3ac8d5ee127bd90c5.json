{"ast":null,"code":"// app\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getNotifications = function getNotifications(userId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/notification.actions.getNotifications'\n    };\n    dispatch(getNotificationsRequest(userId));\n    dispatch(getNotificationsLoading(true));\n\n    if (!userId) {\n      dispatch(getNotificationsFailure(defaultError));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.notificationService,\n      path: \"user?userId=\".concat(userId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getNotificationsSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data === null || data === void 0 ? void 0 : data.data;\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getNotificationsFailure(utils.string.t('globalNotification.fetchError')));\n      return err;\n    }).finally(function () {\n      dispatch(getNotificationsLoading(false));\n    });\n  };\n};\nexport var getNotificationsRequest = function getNotificationsRequest(payload) {\n  return {\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_REQUEST',\n    payload: payload\n  };\n};\nexport var getNotificationsSuccess = function getNotificationsSuccess(payload) {\n  return {\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_SUCCESS',\n    payload: payload\n  };\n};\nexport var getNotificationsFailure = function getNotificationsFailure(error) {\n  return {\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_FAILURE',\n    payload: error\n  };\n};\nexport var getNotificationsLoading = function getNotificationsLoading(loading) {\n  return {\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_LOADING',\n    payload: loading\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/notification/notification.actions.getNotifications.js"],"names":["authLogout","utils","getNotifications","userId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getNotificationsRequest","getNotificationsLoading","getNotificationsFailure","api","get","token","accessToken","notificationService","path","then","response","handleResponse","json","handleNewData","data","getNotificationsSuccess","catch","err","handleError","handleUnauthorized","string","t","finally","payload","type","error","loading"],"mappings":"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","sourcesContent":["// app\r\nimport { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getNotifications = (userId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/notification.actions.getNotifications',\r\n  };\r\n\r\n  dispatch(getNotificationsRequest(userId));\r\n  dispatch(getNotificationsLoading(true));\r\n\r\n  if (!userId) {\r\n    dispatch(getNotificationsFailure(defaultError));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.notificationService,\r\n      path: `user?userId=${userId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getNotificationsSuccess(data?.data));\r\n      return data?.data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getNotificationsFailure(utils.string.t('globalNotification.fetchError')));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(getNotificationsLoading(false));\r\n    });\r\n};\r\n\r\nexport const getNotificationsRequest = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getNotificationsSuccess = (payload) => {\r\n  return {\r\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_SUCCESS',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getNotificationsFailure = (error) => {\r\n  return {\r\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n\r\nexport const getNotificationsLoading = (loading) => {\r\n  return {\r\n    type: 'NOTIFICATION_GET_NOTIFICATIONS_LOADING',\r\n    payload: loading,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}