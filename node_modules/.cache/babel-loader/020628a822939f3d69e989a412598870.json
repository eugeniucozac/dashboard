{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\LocationsTable\\\\LocationsTable.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { firstBy } from 'thenby'; // app\n\nimport { LocationsTableView } from './LocationsTable.view';\nimport { usePagination, useSort } from 'hooks';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nLocationsTable.propTypes = {\n  rows: PropTypes.array.isRequired,\n  cols: PropTypes.array.isRequired,\n  sort: PropTypes.object.isRequired,\n  pagination: PropTypes.object.isRequired,\n  handleClickRow: PropTypes.func.isRequired\n};\nexport default function LocationsTable(_ref) {\n  _s();\n\n  var _ref$rows = _ref.rows,\n      rows = _ref$rows === void 0 ? [] : _ref$rows,\n      colsArr = _ref.cols,\n      sortObj = _ref.sort,\n      paginationObj = _ref.pagination,\n      handleClickRow = _ref.handleClickRow;\n\n  var _useState = useState(null),\n      _useState2 = _slicedToArray(_useState, 2),\n      selected = _useState2[0],\n      setSelected = _useState2[1];\n\n  var clickRow = function clickRow(location) {\n    return function (event) {\n      handleClickRow(location);\n      setSelected(location.id);\n    };\n  };\n\n  var _useSort = useSort(colsArr, sortObj),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var pagination = usePagination(rows, paginationObj);\n  var rowsSorted = rows.sort(firstBy(utils.sort.array(sort.type, sort.by, sort.direction)));\n  var rowsPaginated = rowsSorted.slice(pagination.obj.page * pagination.obj.rowsPerPage, pagination.obj.page * pagination.obj.rowsPerPage + pagination.obj.rowsPerPage);\n  return /*#__PURE__*/_jsxDEV(LocationsTableView, {\n    items: rowsPaginated,\n    cols: cols,\n    sort: sort,\n    pagination: pagination,\n    selected: selected,\n    handleClickRow: clickRow\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LocationsTable, \"say0eW0y9qvmptwlkNlO6r7s9uQ=\", false, function () {\n  return [useSort, usePagination];\n});\n\n_c = LocationsTable;\n\nvar _c;\n\n$RefreshReg$(_c, \"LocationsTable\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/LocationsTable/LocationsTable.js"],"names":["React","useState","PropTypes","firstBy","LocationsTableView","usePagination","useSort","utils","LocationsTable","propTypes","rows","array","isRequired","cols","sort","object","pagination","handleClickRow","func","colsArr","sortObj","paginationObj","selected","setSelected","clickRow","location","event","id","rowsSorted","type","by","direction","rowsPaginated","slice","obj","page","rowsPerPage"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,QAAhB,QAAgC,OAAhC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,OAAT,QAAwB,QAAxB,C,CAEA;;AACA,SAASC,kBAAT,QAAmC,uBAAnC;AACA,SAASC,aAAT,EAAwBC,OAAxB,QAAuC,OAAvC;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,cAAc,CAACC,SAAf,GAA2B;AACzBC,EAAAA,IAAI,EAAER,SAAS,CAACS,KAAV,CAAgBC,UADG;AAEzBC,EAAAA,IAAI,EAAEX,SAAS,CAACS,KAAV,CAAgBC,UAFG;AAGzBE,EAAAA,IAAI,EAAEZ,SAAS,CAACa,MAAV,CAAiBH,UAHE;AAIzBI,EAAAA,UAAU,EAAEd,SAAS,CAACa,MAAV,CAAiBH,UAJJ;AAKzBK,EAAAA,cAAc,EAAEf,SAAS,CAACgB,IAAV,CAAeN;AALN,CAA3B;AAQA,eAAe,SAASJ,cAAT,OAAgH;AAAA;;AAAA,uBAAtFE,IAAsF;AAAA,MAAtFA,IAAsF,0BAA/E,EAA+E;AAAA,MAArES,OAAqE,QAA3EN,IAA2E;AAAA,MAAtDO,OAAsD,QAA5DN,IAA4D;AAAA,MAAjCO,aAAiC,QAA7CL,UAA6C;AAAA,MAAlBC,cAAkB,QAAlBA,cAAkB;;AAAA,kBAC7FhB,QAAQ,CAAC,IAAD,CADqF;AAAA;AAAA,MACtHqB,QADsH;AAAA,MAC5GC,WAD4G;;AAG7H,MAAMC,QAAQ,GAAG,SAAXA,QAAW,CAACC,QAAD;AAAA,WAAc,UAACC,KAAD,EAAW;AACxCT,MAAAA,cAAc,CAACQ,QAAD,CAAd;AACAF,MAAAA,WAAW,CAACE,QAAQ,CAACE,EAAV,CAAX;AACD,KAHgB;AAAA,GAAjB;;AAH6H,iBAQtGrB,OAAO,CAACa,OAAD,EAAUC,OAAV,CAR+F;AAAA,MAQrHP,IARqH,YAQrHA,IARqH;AAAA,MAQ/GC,IAR+G,YAQ/GA,IAR+G;;AAU7H,MAAME,UAAU,GAAGX,aAAa,CAACK,IAAD,EAAOW,aAAP,CAAhC;AAEA,MAAMO,UAAU,GAAGlB,IAAI,CAACI,IAAL,CAAUX,OAAO,CAACI,KAAK,CAACO,IAAN,CAAWH,KAAX,CAAiBG,IAAI,CAACe,IAAtB,EAA4Bf,IAAI,CAACgB,EAAjC,EAAqChB,IAAI,CAACiB,SAA1C,CAAD,CAAjB,CAAnB;AAEA,MAAMC,aAAa,GAAGJ,UAAU,CAACK,KAAX,CACpBjB,UAAU,CAACkB,GAAX,CAAeC,IAAf,GAAsBnB,UAAU,CAACkB,GAAX,CAAeE,WADjB,EAEpBpB,UAAU,CAACkB,GAAX,CAAeC,IAAf,GAAsBnB,UAAU,CAACkB,GAAX,CAAeE,WAArC,GAAmDpB,UAAU,CAACkB,GAAX,CAAeE,WAF9C,CAAtB;AAKA,sBACE,QAAC,kBAAD;AACE,IAAA,KAAK,EAAEJ,aADT;AAEE,IAAA,IAAI,EAAEnB,IAFR;AAGE,IAAA,IAAI,EAAEC,IAHR;AAIE,IAAA,UAAU,EAAEE,UAJd;AAKE,IAAA,QAAQ,EAAEM,QALZ;AAME,IAAA,cAAc,EAAEE;AANlB;AAAA;AAAA;AAAA;AAAA,UADF;AAUD;;GA7BuBhB,c;UAQCF,O,EAEJD,a;;;KAVGG,c","sourcesContent":["import React, { useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { firstBy } from 'thenby';\r\n\r\n// app\r\nimport { LocationsTableView } from './LocationsTable.view';\r\nimport { usePagination, useSort } from 'hooks';\r\nimport * as utils from 'utils';\r\n\r\nLocationsTable.propTypes = {\r\n  rows: PropTypes.array.isRequired,\r\n  cols: PropTypes.array.isRequired,\r\n  sort: PropTypes.object.isRequired,\r\n  pagination: PropTypes.object.isRequired,\r\n  handleClickRow: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function LocationsTable({ rows = [], cols: colsArr, sort: sortObj, pagination: paginationObj, handleClickRow }) {\r\n  const [selected, setSelected] = useState(null);\r\n\r\n  const clickRow = (location) => (event) => {\r\n    handleClickRow(location);\r\n    setSelected(location.id);\r\n  };\r\n\r\n  const { cols, sort } = useSort(colsArr, sortObj);\r\n\r\n  const pagination = usePagination(rows, paginationObj);\r\n\r\n  const rowsSorted = rows.sort(firstBy(utils.sort.array(sort.type, sort.by, sort.direction)));\r\n\r\n  const rowsPaginated = rowsSorted.slice(\r\n    pagination.obj.page * pagination.obj.rowsPerPage,\r\n    pagination.obj.page * pagination.obj.rowsPerPage + pagination.obj.rowsPerPage\r\n  );\r\n\r\n  return (\r\n    <LocationsTableView\r\n      items={rowsPaginated}\r\n      cols={cols}\r\n      sort={sort}\r\n      pagination={pagination}\r\n      selected={selected}\r\n      handleClickRow={clickRow}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}