{"ast":null,"code":"import \"core-js/modules/es.array.map\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\AddClaimTaskNote\\\\AddClaimTaskNote.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './AddClaimTaskNote.styles';\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormHidden, FormLabel, FormText } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Typography } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddClaimTaskNoteView.propTypes = {\n  fields: PropTypes.array,\n  buttons: PropTypes.shape({\n    cancel: PropTypes.object.isRequired,\n    submit: PropTypes.object.isRequired\n  }),\n  formProps: PropTypes.object.isRequired\n};\nexport function AddClaimTaskNoteView(_ref) {\n  var _this = this;\n\n  var fields = _ref.fields,\n      _ref$buttons = _ref.buttons,\n      buttons = _ref$buttons === void 0 ? {} : _ref$buttons,\n      formProps = _ref.formProps;\n  var classes = makeStyles(styles, {\n    name: 'AddClaimTaskNote'\n  })();\n  var control = formProps.control,\n      errors = formProps.errors,\n      handleSubmit = formProps.handleSubmit,\n      formState = formProps.formState;\n  var textOnlyFields = fields.filter(function (f) {\n    return f.textOnly;\n  }).map(function (f) {\n    return f.name;\n  });\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit(buttons.submit.handler),\n      \"data-testid\": \"form-addClaimTaskNote\",\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [textOnlyFields.map(function (field) {\n          var _utils$form$getFieldP;\n\n          return /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 3,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: utils.string.t(\"claims.notes.addNoteFields.\".concat(field, \".label\")),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 36,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 35,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 9,\n              children: [/*#__PURE__*/_jsxDEV(Typography, {\n                variant: \"body2\",\n                classes: {\n                  root: classes.textOnly\n                },\n                children: (_utils$form$getFieldP = utils.form.getFieldProps(fields, field)) === null || _utils$form$getFieldP === void 0 ? void 0 : _utils$form$getFieldP.value\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 39,\n                columnNumber: 19\n              }, _this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, field, control)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 42,\n                columnNumber: 19\n              }, _this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 38,\n              columnNumber: 17\n            }, _this)]\n          }, field, true, {\n            fileName: _jsxFileName,\n            lineNumber: 34,\n            columnNumber: 15\n          }, _this);\n        }), /*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 3,\n            children: /*#__PURE__*/_jsxDEV(FormLabel, {\n              label: utils.string.t('claims.notes.addNoteFields.details.label'),\n              align: \"right\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 50,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 49,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 9,\n            children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'details', control, errors)), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 53,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 52,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 48,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 31,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [buttons.cancel && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.cancel.label,\n          variant: \"text\",\n          disabled: formState.isSubmitting,\n          onClick: buttons.cancel.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 13\n        }, this), buttons.submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: buttons.submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting || !formState.isDirty,\n          onClick: handleSubmit(buttons.submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 58,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 30,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 29,\n    columnNumber: 5\n  }, this);\n}\n_c = AddClaimTaskNoteView;\nAddClaimTaskNoteView.displayName = \"AddClaimTaskNoteView\";\nAddClaimTaskNoteView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddClaimTaskNoteView\",\n  \"props\": {\n    \"buttons\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"cancel\": {\n            \"name\": \"object\",\n            \"required\": true\n          },\n          \"submit\": {\n            \"name\": \"object\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"formProps\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\forms\\\\AddClaimTaskNote\\\\AddClaimTaskNote.view.js\"] = {\n    name: \"AddClaimTaskNoteView\",\n    docgenInfo: AddClaimTaskNoteView.__docgenInfo,\n    path: \"src\\\\forms\\\\AddClaimTaskNote\\\\AddClaimTaskNote.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddClaimTaskNoteView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/AddClaimTaskNote/AddClaimTaskNote.view.js"],"names":["React","PropTypes","styles","Button","FormActions","FormContainer","FormFields","FormGrid","FormHidden","FormLabel","FormText","utils","makeStyles","Typography","AddClaimTaskNoteView","propTypes","fields","array","buttons","shape","cancel","object","isRequired","submit","formProps","classes","name","control","errors","handleSubmit","formState","textOnlyFields","filter","f","textOnly","map","root","handler","field","string","t","form","getFieldProps","value","label","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './AddClaimTaskNote.styles';\r\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormHidden, FormLabel, FormText } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Typography } from '@material-ui/core';\r\n\r\nAddClaimTaskNoteView.propTypes = {\r\n  fields: PropTypes.array,\r\n  buttons: PropTypes.shape({\r\n    cancel: PropTypes.object.isRequired,\r\n    submit: PropTypes.object.isRequired,\r\n  }),\r\n  formProps: PropTypes.object.isRequired,\r\n};\r\n\r\nexport function AddClaimTaskNoteView({ fields, buttons = {}, formProps }) {\r\n  const classes = makeStyles(styles, { name: 'AddClaimTaskNote' })();\r\n\r\n  const { control, errors, handleSubmit, formState } = formProps;\r\n\r\n  const textOnlyFields = fields.filter((f) => f.textOnly).map((f) => f.name);\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit(buttons.submit.handler)} data-testid=\"form-addClaimTaskNote\">\r\n        <FormFields type=\"dialog\">\r\n          {textOnlyFields.map((field) => {\r\n            return (\r\n              <FormGrid container alignItems=\"center\" key={field}>\r\n                <FormGrid item xs={3}>\r\n                  <FormLabel label={utils.string.t(`claims.notes.addNoteFields.${field}.label`)} align=\"right\" />\r\n                </FormGrid>\r\n                <FormGrid item xs={9}>\r\n                  <Typography variant=\"body2\" classes={{ root: classes.textOnly }}>\r\n                    {utils.form.getFieldProps(fields, field)?.value}\r\n                  </Typography>\r\n                  <FormHidden {...utils.form.getFieldProps(fields, field, control)} />\r\n                </FormGrid>\r\n              </FormGrid>\r\n            );\r\n          })}\r\n\r\n          <FormGrid container>\r\n            <FormGrid item xs={3}>\r\n              <FormLabel label={utils.string.t('claims.notes.addNoteFields.details.label')} align=\"right\" />\r\n            </FormGrid>\r\n            <FormGrid item xs={9}>\r\n              <FormText {...utils.form.getFieldProps(fields, 'details', control, errors)} />\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {buttons.cancel && (\r\n            <Button text={buttons.cancel.label} variant=\"text\" disabled={formState.isSubmitting} onClick={buttons.cancel.handler} />\r\n          )}\r\n          {buttons.submit && (\r\n            <Button\r\n              text={buttons.submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting || !formState.isDirty}\r\n              onClick={handleSubmit(buttons.submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n        </FormActions>\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}