{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getLossInformation = function getLossInformation(lossDetailsId, sourceIdParams, divisionIdParam, claimRefParam) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getLossInformation'\n    };\n    var requestObj = {\n      lossDetailsId: lossDetailsId !== null && lossDetailsId !== void 0 ? lossDetailsId : '0',\n      sourceIdParams: sourceIdParams\n    };\n    dispatch(getLossInformationRequest(requestObj));\n    dispatch(addLoader('getLossInformation'));\n    var sourceId = sourceIdParams ? sourceIdParams : '';\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/data/loss/\".concat(lossDetailsId !== null && lossDetailsId !== void 0 ? lossDetailsId : '0'),\n      params: {\n        sourceId: sourceId,\n        divisionId: divisionIdParam ? divisionIdParam : '',\n        claimRef: claimRefParam ? claimRefParam : ''\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getLossInformationSuccess(data.data));\n      dispatch(removeLoader('getLossInformation'));\n      return data.data;\n    }).catch(function (err) {\n      dispatch(getLossInformationFailure(err, defaultError));\n      dispatch(removeLoader('getLossInformation'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getLossInformationRequest = function getLossInformationRequest(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_REQUEST',\n    payload: data\n  };\n};\nexport var getLossInformationSuccess = function getLossInformationSuccess(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_SUCCESS',\n    payload: data\n  };\n};\nexport var getLossInformationFailure = function getLossInformationFailure(data) {\n  return {\n    type: 'GET_LOSS_INFORMATION_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getLossInformation.js"],"names":["authLogout","addLoader","removeLoader","utils","getLossInformation","lossDetailsId","sourceIdParams","divisionIdParam","claimRefParam","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","requestObj","getLossInformationRequest","sourceId","api","get","token","accessToken","claimService","path","params","divisionId","claimRef","then","response","handleResponse","data","getLossInformationSuccess","catch","err","getLossInformationFailure","handleUnauthorized","type","payload"],"mappings":"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","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getLossInformation = (lossDetailsId, sourceIdParams, divisionIdParam, claimRefParam) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint } } } = getState();\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getLossInformation',\r\n  };\r\n\r\n  let requestObj = {\r\n    lossDetailsId: lossDetailsId ?? '0',\r\n    sourceIdParams: sourceIdParams,\r\n  };\r\n  dispatch(getLossInformationRequest(requestObj));\r\n  dispatch(addLoader('getLossInformation'));\r\n  const sourceId = sourceIdParams ? sourceIdParams : '';\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: `api/data/loss/${lossDetailsId ?? '0'}`,\r\n      params: {\r\n        sourceId,\r\n        divisionId: divisionIdParam ? divisionIdParam : '',\r\n        claimRef: claimRefParam ? claimRefParam : '',\r\n      },\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getLossInformationSuccess(data.data));\r\n      dispatch(removeLoader('getLossInformation'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getLossInformationFailure(err, defaultError));\r\n      dispatch(removeLoader('getLossInformation'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getLossInformationRequest = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossInformationSuccess = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getLossInformationFailure = (data) => {\r\n  return {\r\n    type: 'GET_LOSS_INFORMATION_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}