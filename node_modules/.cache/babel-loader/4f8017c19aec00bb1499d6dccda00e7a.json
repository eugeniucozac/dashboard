{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\Layout\\\\Layout.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport get from 'lodash/get'; // app\n\nimport { LayoutView } from './Layout.view';\nimport { expandSidebar, collapseSidebar } from 'stores';\nimport { useMedia } from 'hooks';\nimport * as constants from 'consts'; // context\n\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport var LayoutContext = /*#__PURE__*/React.createContext({});\nLayout.propTypes = {\n  main: PropTypes.bool,\n  sidebar: PropTypes.bool,\n  isCentered: PropTypes.bool,\n  showDesktopControls: PropTypes.bool,\n  disableDesktopControls: PropTypes.bool,\n  testid: PropTypes.string\n};\nexport default function Layout(_ref) {\n  _s();\n\n  var main = _ref.main,\n      sidebar = _ref.sidebar,\n      isCentered = _ref.isCentered,\n      showDesktopControls = _ref.showDesktopControls,\n      disableDesktopControls = _ref.disableDesktopControls,\n      testid = _ref.testid,\n      children = _ref.children;\n  var dispatch = useDispatch();\n  var media = useMedia();\n  var refMain = useRef(null);\n  var refSidebar = useRef(null);\n  var uiSidebarExpanded = useSelector(function (state) {\n    return get(state, 'ui.sidebar.expanded');\n  });\n  var uiModalVisible = useSelector(function (state) {\n    return get(state, 'ui.modal.visible');\n  });\n  var uiModalType = useSelector(function (state) {\n    return get(state, 'ui.modal.type');\n  });\n  var hasMobileControls = Boolean(media.mobile || media.tablet);\n  var hasDesktopControls = Boolean(media.desktopUp && showDesktopControls);\n  useEffect(function () {\n    document.addEventListener('keydown', handleEscape); // cleanup\n\n    return function () {\n      document.removeEventListener('keydown', handleEscape);\n    };\n  }, [uiSidebarExpanded] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleSidebarClick = function handleSidebarClick(forcedStatus) {\n    return function (event) {\n      var shouldCollapse = forcedStatus === 'collapsed' ? true : uiSidebarExpanded;\n\n      if (hasMobileControls || hasDesktopControls && !disableDesktopControls) {\n        if (shouldCollapse) {\n          dispatch(collapseSidebar());\n        } else {\n          dispatch(expandSidebar());\n        }\n      }\n    };\n  };\n\n  var handleEscape = function handleEscape(event) {\n    if (!hasDesktopControls && hasMobileControls && uiSidebarExpanded && event.keyCode === constants.KEYCODE.Escape) {\n      event.preventDefault();\n      dispatch(collapseSidebar());\n    }\n  }; // abort\n\n\n  if (main || sidebar) return children;\n  var childrenArray = children ? Array.isArray(children) ? children : [children] : [];\n  var childrenMain = childrenArray.filter(function (c) {\n    return c.props && c.props.main;\n  });\n  var childrenSidebar = childrenArray.filter(function (c) {\n    return c.props && c.props.sidebar;\n  });\n  return /*#__PURE__*/_jsxDEV(LayoutContext.Provider, {\n    value: {\n      refMain: refMain,\n      refSidebar: refSidebar\n    },\n    children: /*#__PURE__*/_jsxDEV(LayoutView, {\n      main: main,\n      sidebar: sidebar,\n      isCentered: isCentered,\n      mobile: media.mobile,\n      tablet: media.tablet,\n      desktop: media.desktopUp,\n      showDesktopControls: showDesktopControls,\n      disableDesktopControls: showDesktopControls && disableDesktopControls,\n      collapsed: !uiSidebarExpanded,\n      hasSidebar: childrenSidebar && childrenSidebar.length > 0,\n      hasModal: Boolean(uiModalVisible && uiModalType),\n      childrenMain: childrenMain,\n      childrenSidebar: childrenSidebar,\n      testid: testid,\n      handleSidebarClick: handleSidebarClick\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 80,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 74,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Layout, \"p9jPxdvKOMYyXkVh0XIbR5POBJ4=\", false, function () {\n  return [useDispatch, useMedia, useSelector, useSelector, useSelector];\n});\n\n_c = Layout;\n\nvar _c;\n\n$RefreshReg$(_c, \"Layout\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/Layout/Layout.js"],"names":["React","useEffect","useRef","PropTypes","useDispatch","useSelector","get","LayoutView","expandSidebar","collapseSidebar","useMedia","constants","LayoutContext","createContext","Layout","propTypes","main","bool","sidebar","isCentered","showDesktopControls","disableDesktopControls","testid","string","children","dispatch","media","refMain","refSidebar","uiSidebarExpanded","state","uiModalVisible","uiModalType","hasMobileControls","Boolean","mobile","tablet","hasDesktopControls","desktopUp","document","addEventListener","handleEscape","removeEventListener","handleSidebarClick","forcedStatus","event","shouldCollapse","keyCode","KEYCODE","Escape","preventDefault","childrenArray","Array","isArray","childrenMain","filter","c","props","childrenSidebar","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { LayoutView } from './Layout.view';\r\nimport { expandSidebar, collapseSidebar } from 'stores';\r\nimport { useMedia } from 'hooks';\r\nimport * as constants from 'consts';\r\n\r\n// context\r\nexport const LayoutContext = React.createContext({});\r\n\r\nLayout.propTypes = {\r\n  main: PropTypes.bool,\r\n  sidebar: PropTypes.bool,\r\n  isCentered: PropTypes.bool,\r\n  showDesktopControls: PropTypes.bool,\r\n  disableDesktopControls: PropTypes.bool,\r\n  testid: PropTypes.string,\r\n};\r\n\r\nexport default function Layout({ main, sidebar, isCentered, showDesktopControls, disableDesktopControls, testid, children }) {\r\n  const dispatch = useDispatch();\r\n  const media = useMedia();\r\n  const refMain = useRef(null);\r\n  const refSidebar = useRef(null);\r\n  const uiSidebarExpanded = useSelector((state) => get(state, 'ui.sidebar.expanded'));\r\n  const uiModalVisible = useSelector((state) => get(state, 'ui.modal.visible'));\r\n  const uiModalType = useSelector((state) => get(state, 'ui.modal.type'));\r\n  const hasMobileControls = Boolean(media.mobile || media.tablet);\r\n  const hasDesktopControls = Boolean(media.desktopUp && showDesktopControls);\r\n\r\n  useEffect(\r\n    () => {\r\n      document.addEventListener('keydown', handleEscape);\r\n\r\n      // cleanup\r\n      return () => {\r\n        document.removeEventListener('keydown', handleEscape);\r\n      };\r\n    },\r\n    [uiSidebarExpanded] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleSidebarClick = (forcedStatus) => (event) => {\r\n    const shouldCollapse = forcedStatus === 'collapsed' ? true : uiSidebarExpanded;\r\n\r\n    if (hasMobileControls || (hasDesktopControls && !disableDesktopControls)) {\r\n      if (shouldCollapse) {\r\n        dispatch(collapseSidebar());\r\n      } else {\r\n        dispatch(expandSidebar());\r\n      }\r\n    }\r\n  };\r\n\r\n  const handleEscape = (event) => {\r\n    if (!hasDesktopControls && hasMobileControls && uiSidebarExpanded && event.keyCode === constants.KEYCODE.Escape) {\r\n      event.preventDefault();\r\n      dispatch(collapseSidebar());\r\n    }\r\n  };\r\n\r\n  // abort\r\n  if (main || sidebar) return children;\r\n\r\n  const childrenArray = children ? (Array.isArray(children) ? children : [children]) : [];\r\n  const childrenMain = childrenArray.filter((c) => c.props && c.props.main);\r\n  const childrenSidebar = childrenArray.filter((c) => c.props && c.props.sidebar);\r\n\r\n  return (\r\n    <LayoutContext.Provider\r\n      value={{\r\n        refMain: refMain,\r\n        refSidebar: refSidebar,\r\n      }}\r\n    >\r\n      <LayoutView\r\n        main={main}\r\n        sidebar={sidebar}\r\n        isCentered={isCentered}\r\n        mobile={media.mobile}\r\n        tablet={media.tablet}\r\n        desktop={media.desktopUp}\r\n        showDesktopControls={showDesktopControls}\r\n        disableDesktopControls={showDesktopControls && disableDesktopControls}\r\n        collapsed={!uiSidebarExpanded}\r\n        hasSidebar={childrenSidebar && childrenSidebar.length > 0}\r\n        hasModal={Boolean(uiModalVisible && uiModalType)}\r\n        childrenMain={childrenMain}\r\n        childrenSidebar={childrenSidebar}\r\n        testid={testid}\r\n        handleSidebarClick={handleSidebarClick}\r\n      />\r\n    </LayoutContext.Provider>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}