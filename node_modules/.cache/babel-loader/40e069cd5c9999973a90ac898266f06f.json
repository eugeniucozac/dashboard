{"ast":null,"code":"import \"core-js/modules/es.array.sort\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\Reporting\\\\Reporting.view.js\";\nimport React, { Fragment } from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport { Layout, Overflow, SectionHeader, TableCell, TableHead, Button, PopoverMenu, Pagination, Empty } from 'components';\nimport * as utils from 'utils';\nimport styles from './Reporting.styles';\nimport { ReactComponent as IconSearchFile } from \"@svgr/webpack?-svgo,+titleProp,+ref!../../assets/svg/line-icon-search-file.svg\"; // mui\n\nimport { makeStyles, Table, TableRow, TableBody, Grid, Box } from '@material-ui/core';\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\nimport AddIcon from '@material-ui/icons/Add';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nReportingView.propTypes = {\n  list: PropTypes.array.isRequired,\n  handleClickRow: PropTypes.func.isRequired,\n  handleEdit: PropTypes.func.isRequired,\n  handleDelete: PropTypes.func.isRequired,\n  pagination: PropTypes.shape({\n    page: PropTypes.number.isRequired,\n    rowsPerPage: PropTypes.number.isRequired,\n    rowsTotal: PropTypes.number\n  }).isRequired,\n  handleChangePage: PropTypes.func.isRequired,\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\n  isReportAdmin: PropTypes.bool.isRequired,\n  sort: PropTypes.shape({\n    by: PropTypes.string.isRequired,\n    direction: PropTypes.string.isRequired\n  })\n};\nexport function ReportingView(_ref) {\n  var _this = this;\n\n  var list = _ref.list,\n      handleClickRow = _ref.handleClickRow,\n      handleEdit = _ref.handleEdit,\n      handleDelete = _ref.handleDelete,\n      pagination = _ref.pagination,\n      handleChangePage = _ref.handleChangePage,\n      handleChangeRowsPerPage = _ref.handleChangeRowsPerPage,\n      isReportAdmin = _ref.isReportAdmin,\n      sort = _ref.sort;\n  var classes = makeStyles(styles, {\n    name: 'ReportingGroup'\n  })();\n  var cols = [{\n    id: 'name',\n    label: utils.string.t('app.reportingGroup')\n  }, {\n    id: 'description',\n    label: utils.string.t('app.description')\n  }, {\n    id: 'count',\n    label: utils.string.t('app.count')\n  }];\n  return /*#__PURE__*/_jsxDEV(Layout, {\n    isCentered: true,\n    testid: \"reporting\",\n    children: /*#__PURE__*/_jsxDEV(Layout, {\n      main: true,\n      children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n        title: utils.string.t('reporting.title'),\n        icon: DonutLargeIcon,\n        testid: \"reporting_header\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 54,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n        children: list && (list.length > 0 || isReportAdmin) ? /*#__PURE__*/_jsxDEV(Table, {\n          size: \"small\",\n          children: [/*#__PURE__*/_jsxDEV(TableHead, {\n            columns: cols,\n            sorting: sort\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n            \"data-testid\": \"reporting-list\",\n            children: list.map(function (repoGrp) {\n              return /*#__PURE__*/_jsxDEV(Fragment, {\n                children: /*#__PURE__*/_jsxDEV(TableRow, {\n                  className: classes.row,\n                  onClick: handleClickRow(repoGrp),\n                  hover: true,\n                  \"data-testid\": \"reporting-row-\".concat(repoGrp.id),\n                  children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.idCell\n                    },\n                    \"data-testid\": \"reporting-reportingGroup-\".concat(repoGrp.id),\n                    children: repoGrp.name\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 64,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    \"data-testid\": \"reporting-reportingGroup-\".concat(repoGrp.id),\n                    children: repoGrp.description\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 67,\n                    columnNumber: 25\n                  }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.dateCell\n                    },\n                    \"data-testid\": \"reporting-count-\".concat(repoGrp.id),\n                    children: repoGrp.count\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 68,\n                    columnNumber: 25\n                  }, _this), isReportAdmin && /*#__PURE__*/_jsxDEV(TableCell, {\n                    nestedClasses: {\n                      root: classes.dataCellLast\n                    },\n                    menu: true,\n                    \"data-testid\": \"reporting-isReportAdmin\",\n                    children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n                      id: \"renewal-list\",\n                      data: {\n                        id: repoGrp.id,\n                        name: repoGrp.name,\n                        description: repoGrp.description\n                      },\n                      items: [{\n                        id: 'edit',\n                        label: 'app.edit',\n                        callback: function callback(e) {\n                          return handleEdit(true, repoGrp);\n                        }\n                      }, {\n                        id: 'delete',\n                        label: 'app.delete',\n                        callback: handleDelete\n                      }]\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 73,\n                      columnNumber: 29\n                    }, _this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 72,\n                    columnNumber: 27\n                  }, _this)]\n                }, void 0, true, {\n                  fileName: _jsxFileName,\n                  lineNumber: 63,\n                  columnNumber: 23\n                }, _this)\n              }, \"reporting-table-row-\".concat(repoGrp.id), false, {\n                fileName: _jsxFileName,\n                lineNumber: 62,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 59,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 13\n        }, this) : /*#__PURE__*/_jsxDEV(Fragment, {\n          children: !isReportAdmin && /*#__PURE__*/_jsxDEV(Empty, {\n            title: utils.string.t('reporting.noAccess'),\n            text: utils.string.t('reporting.noAccessHint'),\n            icon: /*#__PURE__*/_jsxDEV(IconSearchFile, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 107,\n              columnNumber: 25\n            }, this),\n            padding: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 104,\n            columnNumber: 17\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 102,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 55,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [isReportAdmin && /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 4,\n          className: classes.addButton,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(Button, {\n              icon: AddIcon,\n              size: \"small\",\n              text: utils.string.t('app.reportGroup'),\n              variant: \"contained\",\n              color: \"primary\",\n              onClick: function onClick(e) {\n                return handleEdit(false);\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 119,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 118,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 117,\n          columnNumber: 13\n        }, this), list && (list.length > 0 || isReportAdmin) ? /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 12,\n          sm: 8,\n          children: /*#__PURE__*/_jsxDEV(Pagination, {\n            page: pagination.page,\n            count: pagination.rowsTotal,\n            rowsPerPage: pagination.rowsPerPage,\n            onChangePage: handleChangePage,\n            onChangeRowsPerPage: handleChangeRowsPerPage\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 132,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 131,\n          columnNumber: 13\n        }, this) : null]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 115,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 53,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 52,\n    columnNumber: 5\n  }, this);\n}\n_c = ReportingView;\nReportingView.displayName = \"ReportingView\";\nReportingView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"ReportingView\",\n  \"props\": {\n    \"list\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleClickRow\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleEdit\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleDelete\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"pagination\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"page\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsPerPage\": {\n            \"name\": \"number\",\n            \"required\": true\n          },\n          \"rowsTotal\": {\n            \"name\": \"number\",\n            \"required\": false\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleChangePage\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleChangeRowsPerPage\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isReportAdmin\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"sort\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"by\": {\n            \"name\": \"string\",\n            \"required\": true\n          },\n          \"direction\": {\n            \"name\": \"string\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\Reporting\\\\Reporting.view.js\"] = {\n    name: \"ReportingView\",\n    docgenInfo: ReportingView.__docgenInfo,\n    path: \"src\\\\pages\\\\Reporting\\\\Reporting.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"ReportingView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/Reporting/Reporting.view.js"],"names":["React","Fragment","PropTypes","Layout","Overflow","SectionHeader","TableCell","TableHead","Button","PopoverMenu","Pagination","Empty","utils","styles","makeStyles","Table","TableRow","TableBody","Grid","Box","DonutLargeIcon","AddIcon","ReportingView","propTypes","list","array","isRequired","handleClickRow","func","handleEdit","handleDelete","pagination","shape","page","number","rowsPerPage","rowsTotal","handleChangePage","handleChangeRowsPerPage","isReportAdmin","bool","sort","by","string","direction","classes","name","cols","id","label","t","length","map","repoGrp","row","root","idCell","description","dateCell","count","dataCellLast","callback","e","addButton"],"mappings":"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","sourcesContent":["import React, { Fragment } from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport { Layout, Overflow, SectionHeader, TableCell, TableHead, Button, PopoverMenu, Pagination, Empty } from 'components';\r\nimport * as utils from 'utils';\r\nimport styles from './Reporting.styles';\r\nimport { ReactComponent as IconSearchFile } from '../../assets/svg/line-icon-search-file.svg';\r\n\r\n// mui\r\nimport { makeStyles, Table, TableRow, TableBody, Grid, Box } from '@material-ui/core';\r\nimport DonutLargeIcon from '@material-ui/icons/DonutLarge';\r\nimport AddIcon from '@material-ui/icons/Add';\r\n\r\nReportingView.propTypes = {\r\n  list: PropTypes.array.isRequired,\r\n  handleClickRow: PropTypes.func.isRequired,\r\n  handleEdit: PropTypes.func.isRequired,\r\n  handleDelete: PropTypes.func.isRequired,\r\n  pagination: PropTypes.shape({\r\n    page: PropTypes.number.isRequired,\r\n    rowsPerPage: PropTypes.number.isRequired,\r\n    rowsTotal: PropTypes.number,\r\n  }).isRequired,\r\n  handleChangePage: PropTypes.func.isRequired,\r\n  handleChangeRowsPerPage: PropTypes.func.isRequired,\r\n  isReportAdmin: PropTypes.bool.isRequired,\r\n  sort: PropTypes.shape({\r\n    by: PropTypes.string.isRequired,\r\n    direction: PropTypes.string.isRequired,\r\n  }),\r\n};\r\n\r\nexport function ReportingView({\r\n  list,\r\n  handleClickRow,\r\n  handleEdit,\r\n  handleDelete,\r\n  pagination,\r\n  handleChangePage,\r\n  handleChangeRowsPerPage,\r\n  isReportAdmin,\r\n  sort,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ReportingGroup' })();\r\n  const cols = [\r\n    { id: 'name', label: utils.string.t('app.reportingGroup') },\r\n    { id: 'description', label: utils.string.t('app.description') },\r\n    { id: 'count', label: utils.string.t('app.count') },\r\n  ];\r\n  return (\r\n    <Layout isCentered testid=\"reporting\">\r\n      <Layout main>\r\n        <SectionHeader title={utils.string.t('reporting.title')} icon={DonutLargeIcon} testid=\"reporting_header\"></SectionHeader>\r\n        <Overflow>\r\n          {list && (list.length > 0 || isReportAdmin) ? (\r\n            <Table size=\"small\">\r\n              <TableHead columns={cols} sorting={sort} />\r\n              <TableBody data-testid=\"reporting-list\">\r\n                {list.map((repoGrp) => {\r\n                  return (\r\n                    <Fragment key={`reporting-table-row-${repoGrp.id}`}>\r\n                      <TableRow className={classes.row} onClick={handleClickRow(repoGrp)} hover data-testid={`reporting-row-${repoGrp.id}`}>\r\n                        <TableCell nestedClasses={{ root: classes.idCell }} data-testid={`reporting-reportingGroup-${repoGrp.id}`}>\r\n                          {repoGrp.name}\r\n                        </TableCell>\r\n                        <TableCell data-testid={`reporting-reportingGroup-${repoGrp.id}`}>{repoGrp.description}</TableCell>\r\n                        <TableCell nestedClasses={{ root: classes.dateCell }} data-testid={`reporting-count-${repoGrp.id}`}>\r\n                          {repoGrp.count}\r\n                        </TableCell>\r\n                        {isReportAdmin && (\r\n                          <TableCell nestedClasses={{ root: classes.dataCellLast }} menu data-testid=\"reporting-isReportAdmin\">\r\n                            <PopoverMenu\r\n                              id=\"renewal-list\"\r\n                              data={{\r\n                                id: repoGrp.id,\r\n                                name: repoGrp.name,\r\n                                description: repoGrp.description,\r\n                              }}\r\n                              items={[\r\n                                {\r\n                                  id: 'edit',\r\n                                  label: 'app.edit',\r\n                                  callback: (e) => handleEdit(true, repoGrp),\r\n                                },\r\n                                {\r\n                                  id: 'delete',\r\n                                  label: 'app.delete',\r\n                                  callback: handleDelete,\r\n                                },\r\n                              ]}\r\n                            />\r\n                          </TableCell>\r\n                        )}\r\n                      </TableRow>\r\n                    </Fragment>\r\n                  );\r\n                })}\r\n              </TableBody>\r\n            </Table>\r\n          ) : (\r\n            <Fragment>\r\n              {!isReportAdmin && (\r\n                <Empty\r\n                  title={utils.string.t('reporting.noAccess')}\r\n                  text={utils.string.t('reporting.noAccessHint')}\r\n                  icon={<IconSearchFile />}\r\n                  padding\r\n                />\r\n              )}\r\n            </Fragment>\r\n          )}\r\n        </Overflow>\r\n\r\n        <Grid container>\r\n          {isReportAdmin && (\r\n            <Grid item xs={12} sm={4} className={classes.addButton}>\r\n              <Box mt={2}>\r\n                <Button\r\n                  icon={AddIcon}\r\n                  size=\"small\"\r\n                  text={utils.string.t('app.reportGroup')}\r\n                  variant=\"contained\"\r\n                  color=\"primary\"\r\n                  onClick={(e) => handleEdit(false)}\r\n                />\r\n              </Box>\r\n            </Grid>\r\n          )}\r\n          {list && (list.length > 0 || isReportAdmin) ? (\r\n            <Grid item xs={12} sm={8}>\r\n              <Pagination\r\n                page={pagination.page}\r\n                count={pagination.rowsTotal}\r\n                rowsPerPage={pagination.rowsPerPage}\r\n                onChangePage={handleChangePage}\r\n                onChangeRowsPerPage={handleChangeRowsPerPage}\r\n              />\r\n            </Grid>\r\n          ) : null}\r\n        </Grid>\r\n      </Layout>\r\n    </Layout>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}