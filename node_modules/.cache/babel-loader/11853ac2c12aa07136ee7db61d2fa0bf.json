{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport { addLoader, authLogout, removeLoader, getTripById } from 'stores';\nimport * as utils from 'utils';\nexport var getTripList = function getTripList(params) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/trip.actions.getList'\n    };\n    var state = getState();\n    var prevQuery = get(state, 'trip.list.query') || '';\n    var isNewQuery = params && params.hasOwnProperty('query');\n    var newQuery = isNewQuery ? params.query : prevQuery;\n\n    var endpointParams = _objectSpread({\n      page: params && params.page || 1,\n      size: params && params.size || get(state, 'trip.list.pageSize'),\n      orderBy: params && params.orderBy || get(state, 'trip.list.sortBy'),\n      direction: params && params.direction || get(state, 'trip.list.sortDirection')\n    }, newQuery && {\n      query: newQuery\n    });\n\n    dispatch(getTripListRequest(endpointParams));\n    dispatch(addLoader('getTripList'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: 'api/trip',\n      params: endpointParams\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getTripListSuccess(data)); // if trip selected exists, don't change the selected trip\n      // if trip selected isn't defined, select the first item in the list\n\n      if (!get(state, 'trip.selected.id') && utils.generic.isValidArray(data.content, true)) {\n        dispatch(getTripById(get(data, 'content[0].id'), true));\n      }\n\n      return data;\n    })[\"catch\"](function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(getTripListFailure(err));\n      return err;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getTripList'));\n    });\n  };\n};\nexport var getTripListRequest = function getTripListRequest(params) {\n  return {\n    type: 'TRIP_LIST_GET_REQUEST',\n    payload: params\n  };\n};\nexport var getTripListSuccess = function getTripListSuccess(data) {\n  return {\n    type: 'TRIP_LIST_GET_SUCCESS',\n    payload: {\n      items: data.content,\n      pagination: data.pagination\n    }\n  };\n};\nexport var getTripListFailure = function getTripListFailure(error) {\n  return {\n    type: 'TRIP_LIST_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/trip/trip.actions.getList.js"],"names":["get","addLoader","authLogout","removeLoader","getTripById","utils","getTripList","params","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","state","prevQuery","isNewQuery","hasOwnProperty","newQuery","query","endpointParams","page","size","orderBy","direction","getTripListRequest","api","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getTripListSuccess","generic","isValidArray","content","err","handleError","handleUnauthorized","getTripListFailure","type","payload","items","pagination","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport { addLoader, authLogout, removeLoader, getTripById } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getTripList = (params) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/trip.actions.getList',\r\n  };\r\n\r\n  const state = getState();\r\n  const prevQuery = get(state, 'trip.list.query') || '';\r\n  const isNewQuery = params && params.hasOwnProperty('query');\r\n  const newQuery = isNewQuery ? params.query : prevQuery;\r\n\r\n  const endpointParams = {\r\n    page: (params && params.page) || 1,\r\n    size: (params && params.size) || get(state, 'trip.list.pageSize'),\r\n    orderBy: (params && params.orderBy) || get(state, 'trip.list.sortBy'),\r\n    direction: (params && params.direction) || get(state, 'trip.list.sortDirection'),\r\n    ...(newQuery && { query: newQuery }),\r\n  };\r\n\r\n  dispatch(getTripListRequest(endpointParams));\r\n  dispatch(addLoader('getTripList'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: 'api/trip',\r\n      params: endpointParams,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getTripListSuccess(data));\r\n\r\n      // if trip selected exists, don't change the selected trip\r\n      // if trip selected isn't defined, select the first item in the list\r\n      if (!get(state, 'trip.selected.id') && utils.generic.isValidArray(data.content, true)) {\r\n        dispatch(getTripById(get(data, 'content[0].id'), true));\r\n      }\r\n\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(getTripListFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getTripList'));\r\n    });\r\n};\r\n\r\nexport const getTripListRequest = (params) => {\r\n  return {\r\n    type: 'TRIP_LIST_GET_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getTripListSuccess = (data) => {\r\n  return {\r\n    type: 'TRIP_LIST_GET_SUCCESS',\r\n    payload: {\r\n      items: data.content,\r\n      pagination: data.pagination,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getTripListFailure = (error) => {\r\n  return {\r\n    type: 'TRIP_LIST_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}