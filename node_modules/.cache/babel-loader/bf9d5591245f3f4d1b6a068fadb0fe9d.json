{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var postSaveClaimNotes = function postSaveClaimNotes(formData) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        user = _getState.user,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.postSaveClaimNotes'\n    };\n    var nowIsoString = utils.date.toISOString(new Date());\n\n    var data = _objectSpread(_objectSpread({}, formData), {}, {\n      isActive: 1,\n      caseIncidentNotesID: 0,\n      seqNo: 0,\n      createdBy: user.id,\n      createdDate: nowIsoString,\n      updatedBy: user.id,\n      updatedDate: nowIsoString\n    });\n\n    dispatch(postSaveClaimNotesRequest(data));\n    dispatch(addLoader('postSaveClaimNotes'));\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'notes/save',\n      data: data\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json, true);\n    }).then(function (data) {\n      dispatch(postSaveClaimNotesSuccess(data.data));\n      dispatch(enqueueNotification(data.message, 'success'));\n      return data;\n    })[\"catch\"](function (error) {\n      dispatch(postSaveClaimNotesFailure(error, defaultError));\n      dispatch(enqueueNotification(error.json.message, 'error'));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('postSaveClaimNotes'));\n      dispatch(hideModal());\n    });\n  };\n};\nexport var postSaveClaimNotesRequest = function postSaveClaimNotesRequest(data) {\n  return {\n    type: 'CLAIMS_SAVE_NOTES_POST_REQUEST',\n    payload: data\n  };\n};\nexport var postSaveClaimNotesSuccess = function postSaveClaimNotesSuccess(params) {\n  return {\n    type: 'CLAIMS_SAVE_NOTES_POST_SUCCESS',\n    payload: params\n  };\n};\nexport var postSaveClaimNotesFailure = function postSaveClaimNotesFailure(error) {\n  return {\n    type: 'CLAIMS_SAVE_NOTES_POST_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.postSaveClaimNotes.js"],"names":["addLoader","removeLoader","enqueueNotification","hideModal","authLogout","utils","postSaveClaimNotes","formData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","nowIsoString","date","toISOString","Date","data","isActive","caseIncidentNotesID","seqNo","createdBy","id","createdDate","updatedBy","updatedDate","postSaveClaimNotesRequest","api","post","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","postSaveClaimNotesSuccess","message","error","postSaveClaimNotesFailure","handleUnauthorized","type","payload","params"],"mappings":"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","sourcesContent":["import { addLoader, removeLoader, enqueueNotification, hideModal, authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const postSaveClaimNotes = (formData) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, user, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.postSaveClaimNotes',\r\n  };\r\n  const nowIsoString = utils.date.toISOString(new Date());\r\n  const data = {\r\n    ...formData,\r\n    isActive: 1,\r\n    caseIncidentNotesID: 0,\r\n    seqNo: 0,\r\n    createdBy: user.id,\r\n    createdDate: nowIsoString,\r\n    updatedBy: user.id,\r\n    updatedDate: nowIsoString,\r\n  };\r\n  dispatch(postSaveClaimNotesRequest(data));\r\n  dispatch(addLoader('postSaveClaimNotes'));\r\n\r\n  return utils.api\r\n    .post({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'notes/save',\r\n      data: data,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json, true))\r\n    .then((data) => {\r\n      dispatch(postSaveClaimNotesSuccess(data.data));\r\n      dispatch(enqueueNotification(data.message, 'success'));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(postSaveClaimNotesFailure(error, defaultError));\r\n      dispatch(enqueueNotification(error.json.message, 'error'));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('postSaveClaimNotes'));\r\n      dispatch(hideModal());\r\n    });\r\n};\r\n\r\nexport const postSaveClaimNotesRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_NOTES_POST_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postSaveClaimNotesSuccess = (params) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_NOTES_POST_SUCCESS',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const postSaveClaimNotesFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMS_SAVE_NOTES_POST_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}