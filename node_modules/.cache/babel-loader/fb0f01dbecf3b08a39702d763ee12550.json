{"ast":null,"code":"import get from 'lodash/get';\nimport moment from 'moment'; //app\n\nimport { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nimport { TASKS_SEARCH_OPTION_TASKI_REF, CLAIM_PROCESSING_REQ_TYPES } from 'consts';\nexport var getClaimRefTasks = function getClaimRefTasks() {\n  var params = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        claims = _getState.claims;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getClaimRefTasks'\n    };\n    var newRequestType = (params === null || params === void 0 ? void 0 : params.requestType) || CLAIM_PROCESSING_REQ_TYPES.search;\n    var prevDirection = get(claims, 'refTabTasks.sort.direction') || '';\n    var newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\n    var newQuery = params.hasOwnProperty('search') ? params.search : '';\n    var prevSortBy = get(claims, 'refTabTasks.sort.by') || '';\n    var newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\n    var claimID = get(claims, 'processing.selected[0].claimID') || '';\n    var incomingFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\n    var datesExceptionFields = ['createdOn', 'targetDueDate'];\n    var constructFilter = Object.entries(incomingFilterQuery);\n    var newFilterQuery = utils.generic.isValidArray(constructFilter, true) ? constructFilter.map(function (filter) {\n      var column = filter[0];\n      var filterValue = column === 'priority' ? filter[1].map(function (item) {\n        return item;\n      }) : datesExceptionFields.indexOf(column) > -1 && filter[1] ? [{\n        id: 1,\n        name: moment(new Date(filter[1])).format('DD-MM-YYYY')\n      }] : filter[1];\n      return utils.generic.isValidArray(filterValue, true) && {\n        column: column,\n        filterValue: filterValue\n      };\n    }).filter(function (item) {\n      return item;\n    }) : null;\n    var appliedParams = {\n      newRequestType: newRequestType,\n      newDirection: newDirection,\n      newQuery: newQuery,\n      newSortBy: newSortBy,\n      newFilterQuery: newFilterQuery\n    };\n    var isNonFilterTypeCall = newRequestType !== CLAIM_PROCESSING_REQ_TYPES.filter;\n    dispatch(getClaimRefTasksRequest({\n      params: params,\n      appliedParams: appliedParams\n    }));\n    if (isNonFilterTypeCall) dispatch(addLoader('getClaimRefTasks'));\n\n    var constructFilters = function constructFilters(filtersObj) {\n      var filteredArray = [];\n\n      for (var key in filtersObj) {\n        var _filtersObj$key;\n\n        var selectedFilterValue = key === 'createdOn' || key === 'targetDueDate' ? moment(new Date(filtersObj[key])).format('DD-MM-YYYY') : filtersObj[key];\n\n        if (((_filtersObj$key = filtersObj[key]) === null || _filtersObj$key === void 0 ? void 0 : _filtersObj$key.length) > 0 && typeof filtersObj[key] !== 'string') {\n          filteredArray.push({\n            column: key,\n            filterValue: selectedFilterValue\n          });\n        } else if (typeof filtersObj[key] === 'string' && filtersObj[key] !== '') {\n          filteredArray.push({\n            column: key,\n            filterValue: [{\n              id: 0,\n              name: selectedFilterValue\n            }]\n          });\n        }\n      }\n\n      return filteredArray;\n    };\n\n    var prevFilters = get(claims, 'refTabTasks.appliedFilters') || [];\n    var newFilters = params.hasOwnProperty('filterTerm') ? constructFilters(params.filterTerm) : prevFilters;\n    return utils.api.post({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: \"api/workflow/claims/task/claims/search/\".concat(claimID),\n      data: {\n        requestType: newRequestType,\n        direction: newDirection,\n        page: params && params.page || 0,\n        pageSize: params && params.size || claims.refTabTasks.pageSize,\n        search: newQuery,\n        sortBy: newSortBy,\n        filterSearch: newFilters,\n        filterLossClaimsCriteriaDTO: null,\n        searchBy: TASKS_SEARCH_OPTION_TASKI_REF\n      }\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getClaimRefTasksSuccess(json, newRequestType, newSortBy, newDirection, newQuery, newFilterQuery));\n      return json;\n    }).catch(function (err) {\n      dispatch(getClaimRefTasksFailure(err, defaultError));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    }).finally(function () {\n      if (isNonFilterTypeCall) dispatch(removeLoader('getClaimRefTasks'));\n    });\n  };\n};\nexport var getClaimRefTasksRequest = function getClaimRefTasksRequest(params) {\n  return {\n    type: 'CLAIMREF_TASKS_REQUEST',\n    payload: params\n  };\n};\nexport var getClaimRefTasksSuccess = function getClaimRefTasksSuccess(json, newRequestType, newSortBy, newDirection, newQuery, newFilterQuery) {\n  return {\n    type: 'CLAIMREF_TASKS_SUCCESS',\n    payload: {\n      requestType: newRequestType,\n      items: json.data,\n      pagination: json === null || json === void 0 ? void 0 : json.pagination,\n      sortBy: newSortBy,\n      dir: newDirection,\n      query: newQuery,\n      appliedFilters: newFilterQuery\n    }\n  };\n};\nexport var getClaimRefTasksFailure = function getClaimRefTasksFailure(error) {\n  return {\n    type: 'CLAIMREF_TASKS_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getClaimRefTasks.js"],"names":["get","moment","authLogout","addLoader","removeLoader","utils","TASKS_SEARCH_OPTION_TASKI_REF","CLAIM_PROCESSING_REQ_TYPES","getClaimRefTasks","params","dispatch","getState","auth","user","endpoint","config","vars","claims","defaultError","file","newRequestType","requestType","search","prevDirection","newDirection","hasOwnProperty","direction","newQuery","prevSortBy","newSortBy","sortBy","claimID","incomingFilterQuery","filterTerm","datesExceptionFields","constructFilter","Object","entries","newFilterQuery","generic","isValidArray","map","filter","column","filterValue","item","indexOf","id","name","Date","format","appliedParams","isNonFilterTypeCall","getClaimRefTasksRequest","constructFilters","filtersObj","filteredArray","key","selectedFilterValue","length","push","prevFilters","newFilters","api","post","token","accessToken","claimService","path","data","page","pageSize","size","refTabTasks","filterSearch","filterLossClaimsCriteriaDTO","searchBy","then","response","handleResponse","handleNewData","json","getClaimRefTasksSuccess","catch","err","getClaimRefTasksFailure","handleUnauthorized","finally","type","payload","items","pagination","dir","query","appliedFilters","error"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n//app\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { TASKS_SEARCH_OPTION_TASKI_REF, CLAIM_PROCESSING_REQ_TYPES } from 'consts';\r\n\r\nexport const getClaimRefTasks =\r\n  (params = {}) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint } }, claims } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/claims.actions.getClaimRefTasks',\r\n    };\r\n\r\n    const newRequestType = params?.requestType || CLAIM_PROCESSING_REQ_TYPES.search;\r\n\r\n    const prevDirection = get(claims, 'refTabTasks.sort.direction') || '';\r\n    const newDirection = params.hasOwnProperty('direction') ? params.direction : prevDirection;\r\n\r\n    const newQuery = params.hasOwnProperty('search') ? params.search : '';\r\n\r\n    const prevSortBy = get(claims, 'refTabTasks.sort.by') || '';\r\n    const newSortBy = params.hasOwnProperty('sortBy') ? params.sortBy : prevSortBy;\r\n\r\n    const claimID = get(claims, 'processing.selected[0].claimID') || '';\r\n\r\n    const incomingFilterQuery = params.hasOwnProperty('filterTerm') && params.filterTerm !== '' ? params.filterTerm : [];\r\n    const datesExceptionFields = ['createdOn', 'targetDueDate'];\r\n    const constructFilter = Object.entries(incomingFilterQuery);\r\n    const newFilterQuery = utils.generic.isValidArray(constructFilter, true)\r\n      ? constructFilter\r\n          .map((filter) => {\r\n            const column = filter[0];\r\n            const filterValue =\r\n              column === 'priority'\r\n              ? filter[1].map((item) => item)\r\n                : datesExceptionFields.indexOf(column) > -1 && filter[1]\r\n                ? [{ id: 1, name: moment(new Date(filter[1])).format('DD-MM-YYYY') }]\r\n                : filter[1];\r\n            return utils.generic.isValidArray(filterValue, true) && { column, filterValue };\r\n          })\r\n          .filter((item) => item)\r\n      : null;\r\n\r\n    const appliedParams = { newRequestType, newDirection, newQuery, newSortBy, newFilterQuery };\r\n    const isNonFilterTypeCall = newRequestType !== CLAIM_PROCESSING_REQ_TYPES.filter;\r\n\r\n    dispatch(getClaimRefTasksRequest({ params, appliedParams }));\r\n    if (isNonFilterTypeCall) dispatch(addLoader('getClaimRefTasks'));\r\n\r\n    const constructFilters = (filtersObj) => {\r\n      const filteredArray = [];\r\n      for (const key in filtersObj) {\r\n        const selectedFilterValue =\r\n          key === 'createdOn' || key === 'targetDueDate' ? moment(new Date(filtersObj[key])).format('DD-MM-YYYY') : filtersObj[key];\r\n        if (filtersObj[key]?.length > 0 && typeof filtersObj[key] !== 'string') {\r\n          filteredArray.push({\r\n            column: key,\r\n            filterValue: selectedFilterValue,\r\n          });\r\n        } else if (typeof filtersObj[key] === 'string' && filtersObj[key] !== '') {\r\n          filteredArray.push({\r\n            column: key,\r\n            filterValue: [{ id: 0, name: selectedFilterValue }],\r\n          });\r\n        }\r\n      }\r\n      return filteredArray;\r\n    };\r\n\r\n    const prevFilters = get(claims, 'refTabTasks.appliedFilters') || [];\r\n    const newFilters = params.hasOwnProperty('filterTerm') ? constructFilters(params.filterTerm) : prevFilters;\r\n\r\n    return utils.api\r\n      .post({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.claimService,\r\n        path: `api/workflow/claims/task/claims/search/${claimID}`,\r\n        data: {\r\n          requestType: newRequestType,\r\n          direction: newDirection,\r\n          page: (params && params.page) || 0,\r\n          pageSize: (params && params.size) || claims.refTabTasks.pageSize,\r\n          search: newQuery,\r\n          sortBy: newSortBy,\r\n          filterSearch: newFilters,\r\n          filterLossClaimsCriteriaDTO: null,\r\n          searchBy: TASKS_SEARCH_OPTION_TASKI_REF,\r\n        },\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => utils.api.handleNewData(data))\r\n      .then((json) => {\r\n        dispatch(getClaimRefTasksSuccess(json, newRequestType, newSortBy, newDirection, newQuery, newFilterQuery));\r\n        return json;\r\n      })\r\n      .catch((err) => {\r\n        dispatch(getClaimRefTasksFailure(err, defaultError));\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n        return err;\r\n      })\r\n      .finally(() => {\r\n        if (isNonFilterTypeCall) dispatch(removeLoader('getClaimRefTasks'));\r\n      });\r\n  };\r\n\r\nexport const getClaimRefTasksRequest = (params) => {\r\n  return {\r\n    type: 'CLAIMREF_TASKS_REQUEST',\r\n    payload: params,\r\n  };\r\n};\r\n\r\nexport const getClaimRefTasksSuccess = (json, newRequestType, newSortBy, newDirection, newQuery, newFilterQuery) => {\r\n  return {\r\n    type: 'CLAIMREF_TASKS_SUCCESS',\r\n    payload: {\r\n      requestType: newRequestType,\r\n      items: json.data,\r\n      pagination: json?.pagination,\r\n      sortBy: newSortBy,\r\n      dir: newDirection,\r\n      query: newQuery,\r\n      appliedFilters: newFilterQuery,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getClaimRefTasksFailure = (error) => {\r\n  return {\r\n    type: 'CLAIMREF_TASKS_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}