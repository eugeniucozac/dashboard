{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsRiskRefs\\\\ProcessingInstructionsRiskRefs.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux';\nimport isEmpty from 'lodash/isEmpty';\nimport moment from 'moment';\nimport get from 'lodash/get';\nimport config from 'config';\nimport * as constants from 'consts'; //app\n\nimport styles from './ProcessingInstructionsRiskRefs.styles';\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\nimport { Button, FormContainer, FormFields, FormAutocompleteMui, Overflow, TableHead, TableCell, FormRadio, FormDate, FormSelect, SaveBar, Warning, PreventNavigation } from 'components';\nimport * as utils from 'utils';\nimport { useMedia } from 'hooks';\nimport { showModal, getEndorsementValues, enqueueNotification } from 'stores'; // mui\n\nimport { makeStyles, Checkbox, Typography, TableContainer, Table, TableBody, TableRow, Grid, Box, Divider } from '@material-ui/core';\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nProcessingInstructionsRiskRefsView.propTypes = {\n  searchFields: PropTypes.array.isRequired,\n  searchReferenceType: PropTypes.string.isRequired,\n  searchInsuredType: PropTypes.string.isRequired,\n  columns: PropTypes.array.isRequired,\n  isStatusSubmittedProcessing: PropTypes.bool,\n  isStatusReopened: PropTypes.bool,\n  isPageEdited: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isEndorsement: PropTypes.bool,\n  isClosing: PropTypes.bool,\n  isFdo: PropTypes.bool,\n  isFeeAndAmendment: PropTypes.bool,\n  instructionId: PropTypes.number.isRequired,\n  handlers: PropTypes.shape({\n    next: PropTypes.func.isRequired,\n    save: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n    advancedSearch: PropTypes.func.isRequired,\n    riskRefFetch: PropTypes.func.isRequired,\n    riskRefChangeLead: PropTypes.func.isRequired,\n    riskRefRemove: PropTypes.func.isRequired\n  }).isRequired\n};\nexport default function ProcessingInstructionsRiskRefsView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var riskRefs = _ref.riskRefs,\n      searchFields = _ref.searchFields,\n      searchReferenceType = _ref.searchReferenceType,\n      searchInsuredType = _ref.searchInsuredType,\n      columns = _ref.columns,\n      isStatusSubmittedProcessing = _ref.isStatusSubmittedProcessing,\n      isStatusReopened = _ref.isStatusReopened,\n      isPageEdited = _ref.isPageEdited,\n      isReadOnly = _ref.isReadOnly,\n      isEditable = _ref.isEditable,\n      isEndorsement = _ref.isEndorsement,\n      isClosing = _ref.isClosing,\n      isFdo = _ref.isFdo,\n      isFeeAndAmendment = _ref.isFeeAndAmendment,\n      instructionId = _ref.instructionId,\n      handlers = _ref.handlers;\n  var media = useMedia();\n  var dispatch = useDispatch();\n  var classes = makeStyles(styles, {\n    name: 'ProcessingInstructionsRiskRefs'\n  })({\n    isMobile: media.mobile\n  });\n  var classesParent = makeStyles(stylesParent)();\n  var selectedProcessRefinementColumns = isEndorsement || isFeeAndAmendment;\n  var defaultValuesSearch = utils.form.getInitialValues(searchFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValuesSearch\n  }),\n      controlSearch = _useForm.control,\n      watchSearch = _useForm.watch,\n      errorsSearch = _useForm.errors,\n      setValue = _useForm.setValue;\n\n  var isMaxRiskRefsExceeded = (riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) >= constants.PI_MAX_RISK_REF_LIMIT;\n  var isRisk = searchReferenceType === 'risk';\n  var isInsuredCoverHolder = searchInsuredType === 'insuredCoverHolder';\n  var isFetchEnabledRisk = isRisk && watchSearch('riskReference');\n  var searchButtonEnabled = isInsuredCoverHolder && watchSearch('insuredCoverHolderName');\n  var endorseValue = useSelector(function (state) {\n    return get(state, 'processingInstructions.endorsementNonPremium');\n  }) || {};\n  var endorsementRefIdField = {\n    name: 'endorsementRef',\n    type: 'select',\n    optionKey: 'id',\n    optionLabel: 'value',\n    size: 'sm',\n    muiComponentProps: {\n      disabled: isStatusSubmittedProcessing || isReadOnly || isStatusReopened\n    }\n  };\n\n  var invalidRiskRefModal = function invalidRiskRefModal(riskRef) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('processingInstructions.addRiskReference.duplicateWarning.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: /*#__PURE__*/_jsxDEV(\"span\", {\n            dangerouslySetInnerHTML: {\n              __html: \"\".concat(utils.string.t('processingInstructions.addRiskReference.duplicateWarning.text', {\n                policyReference: riskRef.policyReference,\n                instructionId: riskRef.instructionId.join(', ')\n              }))\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 129,\n            columnNumber: 15\n          }, _this),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'primary'\n          },\n          submitHandler: function submitHandler() {\n            handlers.riskRefFetch(riskRef.policyReference);\n          },\n          cancelHandler: function cancelHandler() {},\n          handleClose: function handleClose() {}\n        }\n      }\n    }));\n  };\n\n  useEffect(function () {\n    if ((riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) > 0 && (isEndorsement || isFeeAndAmendment)) {\n      dispatch(getEndorsementValues(riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.map(function (r) {\n        return r.xbPolicyId;\n      }), riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.map(function (r) {\n        return r.xbInstanceId;\n      })));\n    }\n  }, [dispatch, riskRefs]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"default\",\n      \"data-testid\": \"processing-instructions-form-risk-references\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"default\",\n        children: [isEditable && /*#__PURE__*/_jsxDEV(Box, {\n          className: classes.searchContainer,\n          \"data-testid\": \"processing-instructions-search-container\",\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            \"data-testid\": \"processing-instructions-add-by-risk-references-id\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('processingInstructions.addRiskReference.addByRiskRefId')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 168,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 171,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 11,\n                  children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchFields, 'riskReference')), {}, {\n                    error: errorsSearch.riskReference,\n                    control: controlSearch\n                  }), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 175,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 174,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 1,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.searchBtnContainer,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      text: utils.string.t('app.add'),\n                      nestedClasses: {\n                        btn: classes.searchBtn\n                      },\n                      disabled: !isFetchEnabledRisk || isMaxRiskRefsExceeded,\n                      size: \"small\",\n                      onClick: function onClick() {\n                        var refToAdd = searchReferenceType === 'risk' ? watchSearch('riskReference') : null;\n\n                        if (riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.find(function (rr) {\n                          return rr.riskRefId === refToAdd.policyReference;\n                        })) {\n                          return dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'warning'));\n                        } else if (!isEmpty(refToAdd === null || refToAdd === void 0 ? void 0 : refToAdd.status) && !isEmpty(refToAdd === null || refToAdd === void 0 ? void 0 : refToAdd.instructionId) && (isClosing || isFdo)) {\n                          invalidRiskRefModal(refToAdd);\n                        } else {\n                          handlers.riskRefFetch(refToAdd.policyReference);\n                        }\n                      },\n                      color: \"primary\",\n                      \"data-testid\": \"processing-instruction-risk-ref-add-button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 183,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 182,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 181,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 173,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 172,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            display: \"flex\",\n            my: 2,\n            alignItems: \"center\",\n            \"data-testid\": \"processing-instructions-or\",\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              flexGrow: 1,\n              children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 208,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 207,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              p: 2,\n              children: /*#__PURE__*/_jsxDEV(Typography, {\n                className: classes.or,\n                children: \"(\".concat(utils.string.t('app.or'), \")\")\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 211,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 210,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              flexGrow: 1,\n              children: /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 214,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 213,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 206,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Box, {\n            \"data-testid\": \"processing-instructions-advanced-search\",\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('processingInstructions.addRiskReference.advancedSearchLabel')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 218,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 221,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              mt: 2,\n              children: /*#__PURE__*/_jsxDEV(Grid, {\n                container: true,\n                spacing: 2,\n                children: [/*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 11,\n                  children: /*#__PURE__*/_jsxDEV(Grid, {\n                    container: true,\n                    spacing: 2,\n                    children: [/*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 4,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchFields, 'insuredCoverHolderName')), {}, {\n                        error: errorsSearch.insuredCoverHolderName,\n                        control: controlSearch\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 227,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 226,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 4,\n                      children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchFields, 'department')), {}, {\n                        error: errorsSearch.department,\n                        control: controlSearch\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 234,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 233,\n                      columnNumber: 25\n                    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                      item: true,\n                      xs: 12,\n                      md: 4,\n                      children: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({}, utils.form.getFieldProps(searchFields, 'yearOfAccount')), {}, {\n                        error: errorsSearch.yearOfAccount,\n                        control: controlSearch\n                      }), void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 241,\n                        columnNumber: 27\n                      }, this)\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 240,\n                      columnNumber: 25\n                    }, this)]\n                  }, void 0, true, {\n                    fileName: _jsxFileName,\n                    lineNumber: 225,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 224,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(Grid, {\n                  item: true,\n                  xs: 12,\n                  md: 1,\n                  children: /*#__PURE__*/_jsxDEV(Box, {\n                    className: classes.searchBtnContainer,\n                    children: /*#__PURE__*/_jsxDEV(Button, {\n                      text: utils.string.t('app.searchText'),\n                      disabled: !searchButtonEnabled || isMaxRiskRefsExceeded,\n                      color: \"primary\",\n                      size: \"small\",\n                      nestedClasses: {\n                        btn: classes.searchBtn\n                      },\n                      onClick: function onClick() {\n                        var searchValues = {};\n                        var insuredName = watchSearch('insuredCoverHolderName');\n                        var depart = watchSearch('department');\n                        var yoa = parseInt(moment(watchSearch('yearOfAccount')).format('YYYY'));\n                        Object.assign(searchValues, {\n                          depart: depart,\n                          insuredName: insuredName\n                        });\n                        !isNaN(yoa) && Object.assign(searchValues, {\n                          yoa: yoa\n                        });\n                        handlers.advancedSearch(searchValues);\n                      },\n                      \"data-testid\": \"processing-instruction-risk-ref-search-button\"\n                    }, void 0, false, {\n                      fileName: _jsxFileName,\n                      lineNumber: 251,\n                      columnNumber: 25\n                    }, this)\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 250,\n                    columnNumber: 23\n                  }, this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 249,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 223,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 217,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 166,\n          columnNumber: 13\n        }, this), isMaxRiskRefsExceeded && /*#__PURE__*/_jsxDEV(Box, {\n          my: 6,\n          display: \"flex\",\n          justifyContent: \"center\",\n          children: /*#__PURE__*/_jsxDEV(Warning, {\n            text: utils.string.t('processingInstructions.maximumRiskRefAdded', {\n              maxRiskRefsLimit: constants.PI_MAX_RISK_REF_LIMIT\n            }),\n            type: \"info\",\n            align: \"center\",\n            size: \"medium\",\n            border: true,\n            icon: true\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 277,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 276,\n          columnNumber: 13\n        }, this), (riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) > 0 && /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classes.tableStyling,\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            className: classes.subTitle,\n            children: utils.string.t('processingInstructions.addRiskReference.tableTitle')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 289,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 290,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(Overflow, {\n            children: /*#__PURE__*/_jsxDEV(TableContainer, {\n              className: classes.tableContainer,\n              children: /*#__PURE__*/_jsxDEV(Table, {\n                \"data-testid\": \"processing-instruction-risk-ref-table\",\n                stickyHeader: true,\n                children: [/*#__PURE__*/_jsxDEV(TableHead, {\n                  columns: columns,\n                  nestedClasses: {\n                    tableHead: classes.tableHead\n                  },\n                  \"data-testid\": \"processing-instructions-step-1-table-head\"\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 294,\n                  columnNumber: 21\n                }, this), /*#__PURE__*/_jsxDEV(TableBody, {\n                  children: riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.map(function (riskRef, index) {\n                    var _endorseValue$riskRef, _endorseValue$riskRef2, _endorseValue$riskRef3;\n\n                    return /*#__PURE__*/_jsxDEV(TableRow, {\n                      children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                        compact: true,\n                        minimal: true,\n                        children: /*#__PURE__*/_jsxDEV(FormRadio, {\n                          name: \"leadRiskRef\",\n                          muiComponentProps: {\n                            value: riskRef.riskRefId,\n                            checked: Boolean(riskRef.leadPolicy),\n                            disabled: isStatusSubmittedProcessing || isReadOnly || isStatusReopened,\n                            onChange: function onChange(e) {\n                              return handlers.riskRefChangeLead(e, riskRef.riskRefId);\n                            }\n                          },\n                          muiFormGroupProps: {\n                            nestedClasses: {\n                              root: classes.searchFieldRadioGroup\n                            }\n                          }\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 304,\n                          columnNumber: 31\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 303,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.riskRefId\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 317,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.xbInstance\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 318,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.assuredName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 319,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.yoa\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 320,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.clientName\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 321,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.status\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 322,\n                        columnNumber: 29\n                      }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: riskRef.riskDetails\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 323,\n                        columnNumber: 29\n                      }, _this), selectedProcessRefinementColumns ? /*#__PURE__*/_jsxDEV(_Fragment, {\n                        children: [/*#__PURE__*/_jsxDEV(TableCell, {\n                          children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread(_objectSpread({}, endorsementRefIdField), {}, {\n                            value: ((_endorseValue$riskRef = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef === void 0 ? void 0 : (_endorseValue$riskRef2 = _endorseValue$riskRef.endorsementNumbers) === null || _endorseValue$riskRef2 === void 0 ? void 0 : (_endorseValue$riskRef3 = _endorseValue$riskRef2.find(function (end) {\n                              var _end$value, _riskRef$endorsementN;\n\n                              return ((_end$value = end.value) === null || _end$value === void 0 ? void 0 : _end$value.toString()) === ((_riskRef$endorsementN = riskRef.endorsementNumber) === null || _riskRef$endorsementN === void 0 ? void 0 : _riskRef$endorsementN.toString());\n                            })) === null || _endorseValue$riskRef3 === void 0 ? void 0 : _endorseValue$riskRef3.id) || '0',\n                            options: [{\n                              id: 0,\n                              value: 'Select'\n                            }].concat(_toConsumableArray(endorseValue[riskRef.xbPolicyId] ? endorseValue[riskRef.xbPolicyId].endorsementNumbers : [])),\n                            handleUpdate: function handleUpdate(id, value) {\n                              var _endorseValue$riskRef4, _endorseValue$riskRef5, _endorseValue$riskRef6, _endorseValue$riskRef7, _endorseValue$riskRef8, _endorseValue$riskRef9, _endorseValue$riskRef10, _endorseValue$riskRef11, _endorseValue$riskRef12, _endorseValue$riskRef13, _endorseValue$riskRef14, _endorseValue$riskRef15, _endorseValue$riskRef16, _endorseValue$riskRef17, _endorseValue$riskRef18;\n\n                              setValue(id, value);\n                              var endorsementId = (_endorseValue$riskRef4 = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef4 === void 0 ? void 0 : (_endorseValue$riskRef5 = _endorseValue$riskRef4.endorsementNumbers) === null || _endorseValue$riskRef5 === void 0 ? void 0 : (_endorseValue$riskRef6 = _endorseValue$riskRef5.find(function (end) {\n                                return end.id === value;\n                              })) === null || _endorseValue$riskRef6 === void 0 ? void 0 : _endorseValue$riskRef6.id;\n                              var isNonPremiumValueReceived = (_endorseValue$riskRef7 = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef7 === void 0 ? void 0 : (_endorseValue$riskRef8 = _endorseValue$riskRef7.nonPremiums) === null || _endorseValue$riskRef8 === void 0 ? void 0 : (_endorseValue$riskRef9 = _endorseValue$riskRef8.find(function (x) {\n                                return x.id === endorsementId;\n                              })) === null || _endorseValue$riskRef9 === void 0 ? void 0 : _endorseValue$riskRef9.value;\n                              var endorsementValueSelected = (_endorseValue$riskRef10 = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef10 === void 0 ? void 0 : (_endorseValue$riskRef11 = _endorseValue$riskRef10.endorsementNumbers) === null || _endorseValue$riskRef11 === void 0 ? void 0 : (_endorseValue$riskRef12 = _endorseValue$riskRef11.find(function (end) {\n                                return end.id === value;\n                              })) === null || _endorseValue$riskRef12 === void 0 ? void 0 : _endorseValue$riskRef12.value;\n                              var endorsementIdSelected = (_endorseValue$riskRef13 = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef13 === void 0 ? void 0 : (_endorseValue$riskRef14 = _endorseValue$riskRef13.endorsementIds) === null || _endorseValue$riskRef14 === void 0 ? void 0 : (_endorseValue$riskRef15 = _endorseValue$riskRef14.find(function (end) {\n                                return end.id === endorsementId;\n                              })) === null || _endorseValue$riskRef15 === void 0 ? void 0 : _endorseValue$riskRef15.value;\n                              var endorsementUIdSelected = (_endorseValue$riskRef16 = endorseValue[riskRef.xbPolicyId]) === null || _endorseValue$riskRef16 === void 0 ? void 0 : (_endorseValue$riskRef17 = _endorseValue$riskRef16.endorsementUids) === null || _endorseValue$riskRef17 === void 0 ? void 0 : (_endorseValue$riskRef18 = _endorseValue$riskRef17.find(function (end) {\n                                return end.id === endorsementId;\n                              })) === null || _endorseValue$riskRef18 === void 0 ? void 0 : _endorseValue$riskRef18.value;\n                              handlers.riskRefSet(riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.map(function (rr) {\n                                if (rr.riskRefId === riskRef.riskRefId) {\n                                  return _objectSpread(_objectSpread({}, riskRef), {}, {\n                                    endorsementNumber: value ? endorsementValueSelected : 0,\n                                    isNonPremium: value ? isNonPremiumValueReceived : 'No',\n                                    endorsementId: value ? endorsementIdSelected : 0,\n                                    bulkEndorsementUid: value ? endorsementUIdSelected : null\n                                  });\n                                }\n\n                                return rr;\n                              }));\n                            }\n                          }), void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 327,\n                            columnNumber: 35\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 326,\n                          columnNumber: 33\n                        }, _this), /*#__PURE__*/_jsxDEV(TableCell, {\n                          center: true,\n                          children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                            color: \"primary\",\n                            value: true,\n                            checked: riskRef.isNonPremium === 'Yes',\n                            disabled: true\n                          }, void 0, false, {\n                            fileName: _jsxFileName,\n                            lineNumber: 379,\n                            columnNumber: 35\n                          }, _this)\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 378,\n                          columnNumber: 33\n                        }, _this)]\n                      }, void 0, true) : null, isEditable && /*#__PURE__*/_jsxDEV(TableCell, {\n                        children: /*#__PURE__*/_jsxDEV(Button, {\n                          danger: true,\n                          icon: HighlightOffIcon,\n                          variant: \"text\",\n                          size: \"small\",\n                          tooltip: {\n                            title: utils.string.t('app.remove')\n                          },\n                          disabled: isStatusSubmittedProcessing || isStatusReopened,\n                          onClick: function onClick() {\n                            handlers.riskRefRemove(index, riskRef.riskRefId);\n                          },\n                          \"data-testid\": \"risk-ref-delete-button\"\n                        }, void 0, false, {\n                          fileName: _jsxFileName,\n                          lineNumber: 385,\n                          columnNumber: 33\n                        }, _this)\n                      }, void 0, false, {\n                        fileName: _jsxFileName,\n                        lineNumber: 384,\n                        columnNumber: 31\n                      }, _this)]\n                    }, riskRef.riskRefId, true, {\n                      fileName: _jsxFileName,\n                      lineNumber: 302,\n                      columnNumber: 27\n                    }, _this);\n                  })\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 299,\n                  columnNumber: 21\n                }, this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 293,\n                columnNumber: 19\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 292,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 291,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 288,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 164,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 163,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(SaveBar, {\n      show: true,\n      nestedClasses: {\n        root: classesParent.saveBar\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"left\",\n          className: classes.buttonGroup\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 413,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"right\",\n          className: classes.buttonGroup,\n          children: [isEditable && isPageEdited && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.cancel'),\n              onClick: handlers.cancel,\n              color: \"primary\",\n              size: \"small\",\n              variant: \"text\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 417,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.save'),\n              onClick: handlers.save,\n              color: \"secondary\",\n              size: \"small\",\n              variant: \"outlined\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 425,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.next'),\n            onClick: handlers.next,\n            disabled: isPageEdited || (riskRefs === null || riskRefs === void 0 ? void 0 : riskRefs.length) === 0,\n            color: \"primary\",\n            icon: NavigateNextIcon,\n            iconPosition: \"right\",\n            size: \"small\",\n            nestedClasses: {\n              btn: classesParent.button\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 435,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 414,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 412,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 411,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: isPageEdited,\n      allowedUrls: [\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instructionId, \"/\")]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 448,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 162,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ProcessingInstructionsRiskRefsView, \"zRd+ijeXFnw0yC7p72YikJ0zPmc=\", false, function () {\n  return [useMedia, useDispatch, useForm, useSelector];\n});\n\n_c = ProcessingInstructionsRiskRefsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ProcessingInstructionsRiskRefsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsRiskRefs/ProcessingInstructionsRiskRefs.view.js"],"names":["React","useEffect","PropTypes","useForm","useDispatch","useSelector","isEmpty","moment","get","config","constants","styles","stylesParent","Button","FormContainer","FormFields","FormAutocompleteMui","Overflow","TableHead","TableCell","FormRadio","FormDate","FormSelect","SaveBar","Warning","PreventNavigation","utils","useMedia","showModal","getEndorsementValues","enqueueNotification","makeStyles","Checkbox","Typography","TableContainer","Table","TableBody","TableRow","Grid","Box","Divider","HighlightOffIcon","NavigateNextIcon","ProcessingInstructionsRiskRefsView","propTypes","searchFields","array","isRequired","searchReferenceType","string","searchInsuredType","columns","isStatusSubmittedProcessing","bool","isStatusReopened","isPageEdited","isReadOnly","isEditable","isEndorsement","isClosing","isFdo","isFeeAndAmendment","instructionId","number","handlers","shape","next","func","save","cancel","advancedSearch","riskRefFetch","riskRefChangeLead","riskRefRemove","riskRefs","media","dispatch","classes","name","isMobile","mobile","classesParent","selectedProcessRefinementColumns","defaultValuesSearch","form","getInitialValues","defaultValues","controlSearch","control","watchSearch","watch","errorsSearch","errors","setValue","isMaxRiskRefsExceeded","length","PI_MAX_RISK_REF_LIMIT","isRisk","isInsuredCoverHolder","isFetchEnabledRisk","searchButtonEnabled","endorseValue","state","endorsementRefIdField","type","optionKey","optionLabel","size","muiComponentProps","disabled","invalidRiskRefModal","riskRef","component","props","fullWidth","title","t","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","__html","policyReference","join","buttonColors","confirm","submitHandler","cancelHandler","handleClose","map","r","xbPolicyId","xbInstanceId","searchContainer","subTitle","getFieldProps","riskReference","searchBtnContainer","btn","searchBtn","refToAdd","find","rr","riskRefId","status","or","insuredCoverHolderName","department","yearOfAccount","searchValues","insuredName","depart","yoa","parseInt","format","Object","assign","isNaN","maxRiskRefsLimit","tableStyling","tableContainer","tableHead","index","value","checked","Boolean","leadPolicy","onChange","e","nestedClasses","root","searchFieldRadioGroup","xbInstance","assuredName","clientName","riskDetails","endorsementNumbers","end","toString","endorsementNumber","id","endorsementId","isNonPremiumValueReceived","nonPremiums","x","endorsementValueSelected","endorsementIdSelected","endorsementIds","endorsementUIdSelected","endorsementUids","riskRefSet","isNonPremium","bulkEndorsementUid","saveBar","buttonGroup","button","routes","processingInstructions","steps"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport moment from 'moment';\r\nimport get from 'lodash/get';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\n\r\n//app\r\nimport styles from './ProcessingInstructionsRiskRefs.styles';\r\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\r\nimport {\r\n  Button,\r\n  FormContainer,\r\n  FormFields,\r\n  FormAutocompleteMui,\r\n  Overflow,\r\n  TableHead,\r\n  TableCell,\r\n  FormRadio,\r\n  FormDate,\r\n  FormSelect,\r\n  SaveBar,\r\n  Warning,\r\n  PreventNavigation,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport { useMedia } from 'hooks';\r\nimport { showModal, getEndorsementValues, enqueueNotification } from 'stores';\r\n\r\n// mui\r\nimport { makeStyles, Checkbox, Typography, TableContainer, Table, TableBody, TableRow, Grid, Box, Divider } from '@material-ui/core';\r\nimport HighlightOffIcon from '@material-ui/icons/HighlightOff';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\n\r\nProcessingInstructionsRiskRefsView.propTypes = {\r\n  searchFields: PropTypes.array.isRequired,\r\n  searchReferenceType: PropTypes.string.isRequired,\r\n  searchInsuredType: PropTypes.string.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  isStatusSubmittedProcessing: PropTypes.bool,\r\n  isStatusReopened: PropTypes.bool,\r\n  isPageEdited: PropTypes.bool,\r\n  isReadOnly: PropTypes.bool,\r\n  isEditable: PropTypes.bool,\r\n  isEndorsement: PropTypes.bool,\r\n  isClosing: PropTypes.bool,\r\n  isFdo: PropTypes.bool,\r\n  isFeeAndAmendment: PropTypes.bool,\r\n  instructionId: PropTypes.number.isRequired,\r\n  handlers: PropTypes.shape({\r\n    next: PropTypes.func.isRequired,\r\n    save: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    advancedSearch: PropTypes.func.isRequired,\r\n    riskRefFetch: PropTypes.func.isRequired,\r\n    riskRefChangeLead: PropTypes.func.isRequired,\r\n    riskRefRemove: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function ProcessingInstructionsRiskRefsView({\r\n  riskRefs,\r\n  searchFields,\r\n  searchReferenceType,\r\n  searchInsuredType,\r\n  columns,\r\n  isStatusSubmittedProcessing,\r\n  isStatusReopened,\r\n  isPageEdited,\r\n  isReadOnly,\r\n  isEditable,\r\n  isEndorsement,\r\n  isClosing,\r\n  isFdo,\r\n  isFeeAndAmendment,\r\n  instructionId,\r\n  handlers,\r\n}) {\r\n  const media = useMedia();\r\n  const dispatch = useDispatch();\r\n  const classes = makeStyles(styles, { name: 'ProcessingInstructionsRiskRefs' })({ isMobile: media.mobile });\r\n  const classesParent = makeStyles(stylesParent)();\r\n\r\n  const selectedProcessRefinementColumns = isEndorsement || isFeeAndAmendment;\r\n\r\n  const defaultValuesSearch = utils.form.getInitialValues(searchFields);\r\n  const {\r\n    control: controlSearch,\r\n    watch: watchSearch,\r\n    errors: errorsSearch,\r\n    setValue,\r\n  } = useForm({\r\n    defaultValues: defaultValuesSearch,\r\n  });\r\n\r\n  const isMaxRiskRefsExceeded = riskRefs?.length >= constants.PI_MAX_RISK_REF_LIMIT;\r\n  const isRisk = searchReferenceType === 'risk';\r\n  const isInsuredCoverHolder = searchInsuredType === 'insuredCoverHolder';\r\n  const isFetchEnabledRisk = isRisk && watchSearch('riskReference');\r\n  const searchButtonEnabled = isInsuredCoverHolder && watchSearch('insuredCoverHolderName');\r\n  const endorseValue = useSelector((state) => get(state, 'processingInstructions.endorsementNonPremium')) || {};\r\n\r\n  const endorsementRefIdField = {\r\n    name: 'endorsementRef',\r\n    type: 'select',\r\n    optionKey: 'id',\r\n    optionLabel: 'value',\r\n    size: 'sm',\r\n    muiComponentProps: {\r\n      disabled: isStatusSubmittedProcessing || isReadOnly || isStatusReopened,\r\n    },\r\n  };\r\n\r\n  const invalidRiskRefModal = (riskRef) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('processingInstructions.addRiskReference.duplicateWarning.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: (\r\n              <span\r\n                dangerouslySetInnerHTML={{\r\n                  __html: `${utils.string.t('processingInstructions.addRiskReference.duplicateWarning.text', {\r\n                    policyReference: riskRef.policyReference,\r\n                    instructionId: riskRef.instructionId.join(', '),\r\n                  })}`,\r\n                }}\r\n              />\r\n            ),\r\n            buttonColors: { confirm: 'secondary', cancel: 'primary' },\r\n            submitHandler: () => {\r\n              handlers.riskRefFetch(riskRef.policyReference);\r\n            },\r\n            cancelHandler: () => {},\r\n            handleClose: () => {},\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (riskRefs?.length > 0 && (isEndorsement || isFeeAndAmendment)) {\r\n      dispatch(\r\n        getEndorsementValues(\r\n          riskRefs?.map((r) => r.xbPolicyId),\r\n          riskRefs?.map((r) => r.xbInstanceId)\r\n        )\r\n      );\r\n    }\r\n  }, [dispatch, riskRefs]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <div>\r\n      <FormContainer type=\"default\" data-testid=\"processing-instructions-form-risk-references\">\r\n        <FormFields type=\"default\">\r\n          {isEditable && (\r\n            <Box className={classes.searchContainer} data-testid=\"processing-instructions-search-container\">\r\n              <Box data-testid=\"processing-instructions-add-by-risk-references-id\">\r\n                <Typography className={classes.subTitle}>\r\n                  {utils.string.t('processingInstructions.addRiskReference.addByRiskRefId')}\r\n                </Typography>\r\n                <Divider />\r\n                <Box mt={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={11}>\r\n                      <FormAutocompleteMui\r\n                        {...utils.form.getFieldProps(searchFields, 'riskReference')}\r\n                        error={errorsSearch.riskReference}\r\n                        control={controlSearch}\r\n                      />\r\n                    </Grid>\r\n                    <Grid item xs={12} md={1}>\r\n                      <Box className={classes.searchBtnContainer}>\r\n                        <Button\r\n                          text={utils.string.t('app.add')}\r\n                          nestedClasses={{ btn: classes.searchBtn }}\r\n                          disabled={!isFetchEnabledRisk || isMaxRiskRefsExceeded}\r\n                          size=\"small\"\r\n                          onClick={() => {\r\n                            const refToAdd = searchReferenceType === 'risk' ? watchSearch('riskReference') : null;\r\n                            if (riskRefs?.find((rr) => rr.riskRefId === refToAdd.policyReference)) {\r\n                              return dispatch(enqueueNotification('processingInstructions.duplicateRiskRef', 'warning'));\r\n                            } else if (!isEmpty(refToAdd?.status) && !isEmpty(refToAdd?.instructionId) && (isClosing || isFdo)) {\r\n                              invalidRiskRefModal(refToAdd);\r\n                            } else {\r\n                              handlers.riskRefFetch(refToAdd.policyReference);\r\n                            }\r\n                          }}\r\n                          color=\"primary\"\r\n                          data-testid=\"processing-instruction-risk-ref-add-button\"\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n              <Box display=\"flex\" my={2} alignItems=\"center\" data-testid=\"processing-instructions-or\">\r\n                <Box flexGrow={1}>\r\n                  <Divider />\r\n                </Box>\r\n                <Box p={2}>\r\n                  <Typography className={classes.or}>{`(${utils.string.t('app.or')})`}</Typography>\r\n                </Box>\r\n                <Box flexGrow={1}>\r\n                  <Divider />\r\n                </Box>\r\n              </Box>\r\n              <Box data-testid=\"processing-instructions-advanced-search\">\r\n                <Typography className={classes.subTitle}>\r\n                  {utils.string.t('processingInstructions.addRiskReference.advancedSearchLabel')}\r\n                </Typography>\r\n                <Divider />\r\n                <Box mt={2}>\r\n                  <Grid container spacing={2}>\r\n                    <Grid item xs={12} md={11}>\r\n                      <Grid container spacing={2}>\r\n                        <Grid item xs={12} md={4}>\r\n                          <FormAutocompleteMui\r\n                            {...utils.form.getFieldProps(searchFields, 'insuredCoverHolderName')}\r\n                            error={errorsSearch.insuredCoverHolderName}\r\n                            control={controlSearch}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <FormAutocompleteMui\r\n                            {...utils.form.getFieldProps(searchFields, 'department')}\r\n                            error={errorsSearch.department}\r\n                            control={controlSearch}\r\n                          />\r\n                        </Grid>\r\n                        <Grid item xs={12} md={4}>\r\n                          <FormDate\r\n                            {...utils.form.getFieldProps(searchFields, 'yearOfAccount')}\r\n                            error={errorsSearch.yearOfAccount}\r\n                            control={controlSearch}\r\n                          />\r\n                        </Grid>\r\n                      </Grid>\r\n                    </Grid>\r\n                    <Grid item xs={12} md={1}>\r\n                      <Box className={classes.searchBtnContainer}>\r\n                        <Button\r\n                          text={utils.string.t('app.searchText')}\r\n                          disabled={!searchButtonEnabled || isMaxRiskRefsExceeded}\r\n                          color=\"primary\"\r\n                          size=\"small\"\r\n                          nestedClasses={{ btn: classes.searchBtn }}\r\n                          onClick={() => {\r\n                            let searchValues = {};\r\n                            const insuredName = watchSearch('insuredCoverHolderName');\r\n                            const depart = watchSearch('department');\r\n                            const yoa = parseInt(moment(watchSearch('yearOfAccount')).format('YYYY'));\r\n                            Object.assign(searchValues, { depart, insuredName });\r\n                            !isNaN(yoa) && Object.assign(searchValues, { yoa });\r\n                            handlers.advancedSearch(searchValues);\r\n                          }}\r\n                          data-testid=\"processing-instruction-risk-ref-search-button\"\r\n                        />\r\n                      </Box>\r\n                    </Grid>\r\n                  </Grid>\r\n                </Box>\r\n              </Box>\r\n            </Box>\r\n          )}\r\n          {isMaxRiskRefsExceeded && (\r\n            <Box my={6} display=\"flex\" justifyContent=\"center\">\r\n              <Warning\r\n                text={utils.string.t('processingInstructions.maximumRiskRefAdded', { maxRiskRefsLimit: constants.PI_MAX_RISK_REF_LIMIT })}\r\n                type=\"info\"\r\n                align=\"center\"\r\n                size=\"medium\"\r\n                border\r\n                icon\r\n              />\r\n            </Box>\r\n          )}\r\n          {riskRefs?.length > 0 && (\r\n            <div className={classes.tableStyling}>\r\n              <Typography className={classes.subTitle}>{utils.string.t('processingInstructions.addRiskReference.tableTitle')}</Typography>\r\n              <Divider />\r\n              <Overflow>\r\n                <TableContainer className={classes.tableContainer}>\r\n                  <Table data-testid=\"processing-instruction-risk-ref-table\" stickyHeader>\r\n                    <TableHead\r\n                      columns={columns}\r\n                      nestedClasses={{ tableHead: classes.tableHead }}\r\n                      data-testid=\"processing-instructions-step-1-table-head\"\r\n                    />\r\n                    <TableBody>\r\n                      {riskRefs?.map((riskRef, index) => {\r\n                        return (\r\n                          <TableRow key={riskRef.riskRefId}>\r\n                            <TableCell compact minimal>\r\n                              <FormRadio\r\n                                name=\"leadRiskRef\"\r\n                                muiComponentProps={{\r\n                                  value: riskRef.riskRefId,\r\n                                  checked: Boolean(riskRef.leadPolicy),\r\n                                  disabled: isStatusSubmittedProcessing || isReadOnly || isStatusReopened,\r\n                                  onChange: (e) => handlers.riskRefChangeLead(e, riskRef.riskRefId),\r\n                                }}\r\n                                muiFormGroupProps={{\r\n                                  nestedClasses: { root: classes.searchFieldRadioGroup },\r\n                                }}\r\n                              />\r\n                            </TableCell>\r\n                            <TableCell>{riskRef.riskRefId}</TableCell>\r\n                            <TableCell>{riskRef.xbInstance}</TableCell>\r\n                            <TableCell>{riskRef.assuredName}</TableCell>\r\n                            <TableCell>{riskRef.yoa}</TableCell>\r\n                            <TableCell>{riskRef.clientName}</TableCell>\r\n                            <TableCell>{riskRef.status}</TableCell>\r\n                            <TableCell>{riskRef.riskDetails}</TableCell>\r\n                            {selectedProcessRefinementColumns ? (\r\n                              <>\r\n                                <TableCell>\r\n                                  <FormSelect\r\n                                    {...endorsementRefIdField}\r\n                                    value={\r\n                                      endorseValue[riskRef.xbPolicyId]?.endorsementNumbers?.find(\r\n                                        (end) => end.value?.toString() === riskRef.endorsementNumber?.toString()\r\n                                      )?.id || '0'\r\n                                    }\r\n                                    options={[\r\n                                      { id: 0, value: 'Select' },\r\n                                      ...(endorseValue[riskRef.xbPolicyId] ? endorseValue[riskRef.xbPolicyId].endorsementNumbers : []),\r\n                                    ]}\r\n                                    handleUpdate={(id, value) => {\r\n                                      setValue(id, value);\r\n                                      let endorsementId = endorseValue[riskRef.xbPolicyId]?.endorsementNumbers?.find(\r\n                                        (end) => end.id === value\r\n                                      )?.id;\r\n\r\n                                      let isNonPremiumValueReceived = endorseValue[riskRef.xbPolicyId]?.nonPremiums?.find(\r\n                                        (x) => x.id === endorsementId\r\n                                      )?.value;\r\n\r\n                                      let endorsementValueSelected = endorseValue[riskRef.xbPolicyId]?.endorsementNumbers?.find(\r\n                                        (end) => end.id === value\r\n                                      )?.value;\r\n\r\n                                      let endorsementIdSelected = endorseValue[riskRef.xbPolicyId]?.endorsementIds?.find(\r\n                                        (end) => end.id === endorsementId\r\n                                      )?.value;\r\n\r\n                                      let endorsementUIdSelected = endorseValue[riskRef.xbPolicyId]?.endorsementUids?.find(\r\n                                        (end) => end.id === endorsementId\r\n                                      )?.value;\r\n\r\n                                      handlers.riskRefSet(\r\n                                        riskRefs?.map((rr) => {\r\n                                          if (rr.riskRefId === riskRef.riskRefId) {\r\n                                            return {\r\n                                              ...riskRef,\r\n                                              endorsementNumber: value ? endorsementValueSelected : 0,\r\n                                              isNonPremium: value ? isNonPremiumValueReceived : 'No',\r\n                                              endorsementId: value ? endorsementIdSelected : 0,\r\n                                              bulkEndorsementUid: value ? endorsementUIdSelected : null,\r\n                                            };\r\n                                          }\r\n\r\n                                          return rr;\r\n                                        })\r\n                                      );\r\n                                    }}\r\n                                  />\r\n                                </TableCell>\r\n                                <TableCell center>\r\n                                  <Checkbox color=\"primary\" value={true} checked={riskRef.isNonPremium === 'Yes'} disabled />\r\n                                </TableCell>\r\n                              </>\r\n                            ) : null}\r\n                            {isEditable && (\r\n                              <TableCell>\r\n                                <Button\r\n                                  danger\r\n                                  icon={HighlightOffIcon}\r\n                                  variant=\"text\"\r\n                                  size=\"small\"\r\n                                  tooltip={{ title: utils.string.t('app.remove') }}\r\n                                  disabled={isStatusSubmittedProcessing || isStatusReopened}\r\n                                  onClick={() => {\r\n                                    handlers.riskRefRemove(index, riskRef.riskRefId);\r\n                                  }}\r\n                                  data-testid=\"risk-ref-delete-button\"\r\n                                />\r\n                              </TableCell>\r\n                            )}\r\n                          </TableRow>\r\n                        );\r\n                      })}\r\n                    </TableBody>\r\n                  </Table>\r\n                </TableContainer>\r\n              </Overflow>\r\n            </div>\r\n          )}\r\n        </FormFields>\r\n      </FormContainer>\r\n\r\n      <SaveBar show nestedClasses={{ root: classesParent.saveBar }}>\r\n        <Box display=\"flex\" justifyContent=\"space-between\">\r\n          <Box flex=\"1 1 auto\" textAlign=\"left\" className={classes.buttonGroup} />\r\n          <Box flex=\"1 1 auto\" textAlign=\"right\" className={classes.buttonGroup}>\r\n            {isEditable && isPageEdited && (\r\n              <>\r\n                <Button\r\n                  text={utils.string.t('app.cancel')}\r\n                  onClick={handlers.cancel}\r\n                  color=\"primary\"\r\n                  size=\"small\"\r\n                  variant=\"text\"\r\n                  nestedClasses={{ btn: classesParent.button }}\r\n                />\r\n                <Button\r\n                  text={utils.string.t('app.save')}\r\n                  onClick={handlers.save}\r\n                  color=\"secondary\"\r\n                  size=\"small\"\r\n                  variant=\"outlined\"\r\n                  nestedClasses={{ btn: classesParent.button }}\r\n                />\r\n              </>\r\n            )}\r\n            <Button\r\n              text={utils.string.t('app.next')}\r\n              onClick={handlers.next}\r\n              disabled={isPageEdited || riskRefs?.length === 0}\r\n              color=\"primary\"\r\n              icon={NavigateNextIcon}\r\n              iconPosition=\"right\"\r\n              size=\"small\"\r\n              nestedClasses={{ btn: classesParent.button }}\r\n            />\r\n          </Box>\r\n        </Box>\r\n      </SaveBar>\r\n      <PreventNavigation dirty={isPageEdited} allowedUrls={[`${config.routes.processingInstructions.steps}/${instructionId}/`]} />\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}