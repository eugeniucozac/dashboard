{"ast":null,"code":"import \"core-js/modules/es.promise.finally\";\nimport * as utils from 'utils';\nimport { authLogout, removeLoader } from 'stores';\nexport var getAssignedToUsersList = function getAssignedToUsersList() {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.authService,\n      path: 'api/users/userByGroup'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      dispatch(getAssignedToUsersListSuccess(data === null || data === void 0 ? void 0 : data.data));\n      return data;\n    })[\"catch\"](function (error) {\n      dispatch(getAssignedToUsersListError(error, {\n        file: 'stores/premiumProcessing.actions.getAssignedToUsersList'\n      }));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    })[\"finally\"](function () {\n      dispatch(removeLoader('getAssignedToUsersList'));\n    });\n  };\n};\nexport var getAssignedToUsersListSuccess = function getAssignedToUsersListSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getAssignedToUsersListError = function getAssignedToUsersListError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getAssignedToUsersList.js"],"names":["utils","authLogout","removeLoader","getAssignedToUsersList","dispatch","getState","auth","user","endpoint","config","vars","api","get","token","accessToken","authService","path","then","response","handleResponse","json","handleNewData","data","getAssignedToUsersListSuccess","error","getAssignedToUsersListError","file","handleUnauthorized","type","payload"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,YAArB,QAAyC,QAAzC;AAEA,OAAO,IAAMC,sBAAsB,GAAG,SAAzBA,sBAAyB;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAM9DA,QAAQ,EANsD;AAAA,QAExDC,IAFwD,aAEhEC,IAFgE,CAExDD,IAFwD;AAAA,QAItDE,QAJsD,aAGhEC,MAHgE,CAI9DC,IAJ8D,CAItDF,QAJsD;;AAQlE,WAAOR,KAAK,CAACW,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEP,IAAI,CAACQ,WADT;AAEHN,MAAAA,QAAQ,EAAEA,QAAQ,CAACO,WAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAclB,KAAK,CAACW,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUpB,KAAK,CAACW,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdlB,MAAAA,QAAQ,CAACmB,6BAA6B,CAACD,IAAD,aAACA,IAAD,uBAACA,IAAI,CAAEA,IAAP,CAA9B,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,WAYE,UAACE,KAAD,EAAW;AAChBpB,MAAAA,QAAQ,CACNqB,2BAA2B,CAACD,KAAD,EAAQ;AACjCE,QAAAA,IAAI,EAAE;AAD2B,OAAR,CADrB,CAAR;AAKA1B,MAAAA,KAAK,CAACW,GAAN,CAAUgB,kBAAV,CAA6BH,KAA7B,EAAoCpB,QAApC,EAA8CH,UAA9C;AACA,aAAOuB,KAAP;AACD,KApBI,aAqBI,YAAM;AACbpB,MAAAA,QAAQ,CAACF,YAAY,CAAC,wBAAD,CAAb,CAAR;AACD,KAvBI,CAAP;AAwBD,GAhCqC;AAAA,CAA/B;AAkCP,OAAO,IAAMqB,6BAA6B,GAAG,SAAhCA,6BAAgC,CAACD,IAAD,EAAU;AACrD,SAAO;AACLM,IAAAA,IAAI,EAAE,kDADD;AAELC,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,2BAA2B,GAAG,SAA9BA,2BAA8B,CAACD,KAAD,EAAW;AACpD,SAAO;AACLI,IAAAA,IAAI,EAAE,gDADD;AAELC,IAAAA,OAAO,EAAEL;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, removeLoader } from 'stores';\r\n\r\nexport const getAssignedToUsersList = () => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.authService,\r\n      path: 'api/users/userByGroup',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      dispatch(getAssignedToUsersListSuccess(data?.data));\r\n      return data;\r\n    })\r\n    .catch((error) => {\r\n      dispatch(\r\n        getAssignedToUsersListError(error, {\r\n          file: 'stores/premiumProcessing.actions.getAssignedToUsersList',\r\n        })\r\n      );\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getAssignedToUsersList'));\r\n    });\r\n};\r\n\r\nexport const getAssignedToUsersListSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getAssignedToUsersListError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}