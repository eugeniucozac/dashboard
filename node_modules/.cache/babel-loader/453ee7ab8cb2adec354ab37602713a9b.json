{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\SetTaskPriority\\\\SetTaskPriority.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport * as Yup from 'yup'; //app\n\nimport { SetTaskPriorityView } from './SetTaskPriority.view';\nimport { getPriorityLevels, selectPriorities, postEditTaskPriority } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nSetTaskPriority.propTypes = {\n  task: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    cancel: PropTypes.func,\n    submit: PropTypes.func\n  }).isRequired\n};\nexport default function SetTaskPriority(_ref) {\n  _s();\n\n  var task = _ref.task,\n      handlers = _ref.handlers;\n  var dispatch = useDispatch();\n  var priorities = useSelector(selectPriorities);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var fields = [{\n    name: 'taskId',\n    type: 'hidden',\n    value: (task === null || task === void 0 ? void 0 : task.taskRef) || '',\n    validation: Yup.string().required(utils.string.t('form.taskId.required')),\n    muiComponentProps: {\n      InputProps: {\n        readOnly: true\n      }\n    }\n  }, {\n    name: 'claimRef',\n    type: 'text',\n    value: (task === null || task === void 0 ? void 0 : task.processRef) || '',\n    validation: Yup.string().required(utils.string.t('form.claimRef.required')),\n    muiComponentProps: {\n      multiline: false\n    }\n  }, {\n    name: 'priority',\n    type: 'autocompletemui',\n    options: priorities || [],\n    value: (priorities === null || priorities === void 0 ? void 0 : priorities.find(function (_ref2) {\n      var description = _ref2.description;\n      return description === task.priority;\n    })) || (priorities === null || priorities === void 0 ? void 0 : priorities[0]),\n    optionKey: 'id',\n    optionLabel: 'description',\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }];\n  var actions = [{\n    name: 'cancel',\n    label: utils.string.t('app.cancel'),\n    handler: function handler() {\n      return handlers.cancel();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.set'),\n    handler: function () {\n      var _handler = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n        var _values$priority;\n\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(postEditTaskPriority({\n                  priority: values === null || values === void 0 ? void 0 : (_values$priority = values.priority) === null || _values$priority === void 0 ? void 0 : _values$priority.id,\n                  taskId: task === null || task === void 0 ? void 0 : task.taskId\n                }));\n\n              case 2:\n                handlers.submit();\n\n              case 3:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n\n      function handler(_x) {\n        return _handler.apply(this, arguments);\n      }\n\n      return handler;\n    }()\n  }];\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(priorities)) {\n      dispatch(getPriorityLevels());\n    }\n\n    setResetKey(new Date().getTime());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  if (!(priorities === null || priorities === void 0 ? void 0 : priorities.length)) return null;\n  return /*#__PURE__*/_jsxDEV(SetTaskPriorityView, {\n    actions: actions,\n    fields: fields,\n    task: task,\n    resetKey: resetKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 82,\n    columnNumber: 10\n  }, this);\n}\n\n_s(SetTaskPriority, \"Et2mJIqn5aquOPYVzU2HyAhyJfw=\", false, function () {\n  return [useDispatch, useSelector];\n});\n\n_c = SetTaskPriority;\n\nvar _c;\n\n$RefreshReg$(_c, \"SetTaskPriority\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/SetTaskPriority/SetTaskPriority.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","Yup","SetTaskPriorityView","getPriorityLevels","selectPriorities","postEditTaskPriority","utils","SetTaskPriority","propTypes","task","object","isRequired","handlers","shape","cancel","func","submit","dispatch","priorities","resetKey","setResetKey","fields","name","type","value","taskRef","validation","string","required","t","muiComponentProps","InputProps","readOnly","processRef","multiline","options","find","description","priority","optionKey","optionLabel","actions","label","handler","values","id","taskId","generic","isInvalidOrEmptyArray","Date","getTime","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport * as Yup from 'yup';\r\n\r\n//app\r\nimport { SetTaskPriorityView } from './SetTaskPriority.view';\r\nimport { getPriorityLevels, selectPriorities, postEditTaskPriority } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nSetTaskPriority.propTypes = {\r\n  task: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    cancel: PropTypes.func,\r\n    submit: PropTypes.func,\r\n  }).isRequired,\r\n};\r\n\r\nexport default function SetTaskPriority({ task, handlers }) {\r\n  const dispatch = useDispatch();\r\n  const priorities = useSelector(selectPriorities);\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const fields = [\r\n    {\r\n      name: 'taskId',\r\n      type: 'hidden',\r\n      value: task?.taskRef || '',\r\n      validation: Yup.string().required(utils.string.t('form.taskId.required')),\r\n      muiComponentProps: {\r\n        InputProps: {\r\n          readOnly: true,\r\n        },\r\n      },\r\n    },\r\n    {\r\n      name: 'claimRef',\r\n      type: 'text',\r\n      value: task?.processRef || '',\r\n      validation: Yup.string().required(utils.string.t('form.claimRef.required')),\r\n      muiComponentProps: {\r\n        multiline: false,\r\n      },\r\n    },\r\n\r\n    {\r\n      name: 'priority',\r\n      type: 'autocompletemui',\r\n      options: priorities || [],\r\n      value: priorities?.find(({ description }) => description === task.priority) || priorities?.[0],\r\n      optionKey: 'id',\r\n      optionLabel: 'description',\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'cancel',\r\n      label: utils.string.t('app.cancel'),\r\n      handler: () => handlers.cancel(),\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.set'),\r\n      handler: async (values) => {\r\n        await dispatch(postEditTaskPriority({ priority: values?.priority?.id, taskId: task?.taskId }));\r\n        handlers.submit();\r\n      },\r\n    },\r\n  ];\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isInvalidOrEmptyArray(priorities)) {\r\n      dispatch(getPriorityLevels());\r\n    }\r\n    setResetKey(new Date().getTime());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  if (!priorities?.length) return null;\r\n\r\n  return <SetTaskPriorityView actions={actions} fields={fields} task={task} resetKey={resetKey} />;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}