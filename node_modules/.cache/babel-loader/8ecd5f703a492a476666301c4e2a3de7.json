{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AdvanceSearchTab\\\\AdvanceSearchTab.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState, useEffect } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useForm } from 'react-hook-form'; // app\n\nimport AdvanceSearchTabView from './AdvanceSearchTab.view';\nimport { MultiSelect, FormDate } from 'components';\nimport { useFlexiColumns } from 'hooks';\nimport * as utils from 'utils';\nimport { getAdvanceSearchDetails, selectAdvanceSearchData, selectAdvanceSearchTblData, selectAdvanceSearchFilterData, setAdvanceSearchTabSearchDetails, setAdvanceSearchTblFilterValues, resetSelectedLossItem, resetAdvanceSearchTabDetails, setPullClosedRecords, getStatuses, selectClaimsStatuses } from 'stores';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function AdvanceSearchTab() {\n  _s();\n\n  var _searchOptions$find, _searchOptions$find2;\n\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      searchTerm = _useState2[0],\n      setSearchTerm = _useState2[1];\n\n  var _useState3 = useState(null),\n      _useState4 = _slicedToArray(_useState3, 2),\n      anchorEl = _useState4[0],\n      setAnchorEl = _useState4[1];\n\n  var _useState5 = useState(),\n      _useState6 = _slicedToArray(_useState5, 2),\n      resetKey = _useState6[0],\n      setResetKey = _useState6[1];\n\n  var claimStatuses = useSelector(selectClaimsStatuses);\n  var advanceSearchData = useSelector(selectAdvanceSearchData);\n  var advanceSearchTblData = useSelector(selectAdvanceSearchTblData);\n  var advanceSearchFilterData = useSelector(selectAdvanceSearchFilterData);\n  var isTblLoader = (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.isloadingTable) || false;\n  var isFetchingFilters = (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.isloadingFilters) || false;\n  var emptyData = utils.generic.isInvalidOrEmptyArray(advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.items);\n\n  var _useState7 = useState(false),\n      _useState8 = _slicedToArray(_useState7, 2),\n      isClosedClaimsEnabled = _useState8[0],\n      setIsClosedClaimsEnabled = _useState8[1];\n\n  var defaultFormFields = [{\n    name: 'lossFromDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'lossToDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'claimReceivedDateTime',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'claimLossFromDate',\n    type: 'datepicker',\n    value: null\n  }, {\n    name: 'claimLossToDate',\n    type: 'datepicker',\n    value: null\n  }];\n  var defaultValues = utils.form.getInitialValues(defaultFormFields);\n\n  var _useForm = useForm({\n    defaultValues: defaultValues\n  }),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      watch = _useForm.watch,\n      setValue = _useForm.setValue;\n\n  var lossDateFrom = watch('lossFromDate');\n  var claimLossFromDate = watch('claimLossFromDate');\n  var tableFilterFields = [{\n    id: 'lossQualifier',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.lossQualifier'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.lossQualifier) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"lossQualifier\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.lossQualifier) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 83,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'lossFromDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.lossFromDate'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossFromDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'lossToDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.lossToDate'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'lossToDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        minDate: lossDateFrom !== null && lossDateFrom !== void 0 ? lossDateFrom : undefined,\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'claimLossFromDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'claimLossFromDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 145,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'claimLossToDate',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.claimLossTo'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'claimLossToDate')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        minDate: claimLossFromDate !== null && claimLossFromDate !== void 0 ? claimLossFromDate : undefined,\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 172,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'claimReceivedDateTime',\n    type: 'datepicker',\n    label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\n    value: '',\n    content: /*#__PURE__*/_jsxDEV(FormDate, _objectSpread(_objectSpread({\n      control: control\n    }, utils.form.getFieldProps(defaultFormFields, 'claimReceivedDateTime')), {}, {\n      id: \"datepicker\",\n      label: '',\n      plainText: true,\n      plainTextIcon: true,\n      placeholder: utils.string.t('app.selectDate'),\n      muiComponentProps: {\n        fullWidth: false,\n        margin: 'dense'\n      },\n      muiPickerProps: {\n        clearable: false,\n        variant: 'inline',\n        format: 'DD-MM-YYYY'\n      }\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 199,\n      columnNumber: 9\n    }, this)\n  }, {\n    id: 'catCodeDescription',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.catCode) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"catCode\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.catCode) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 226,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'claimStatusName',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.claimStatusName'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.claimStatus) || [],\n    options: [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"claimStatus\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.claimStatus) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 235,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'beAdjuster',\n    type: 'multiSelect',\n    label: utils.string.t('claims.claimInformation.beAdjuster'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.beAdjuster) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"beAdjuster\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.beAdjuster) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 244,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'company',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.company'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.company) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"company\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.company) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 253,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'division',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.division) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"division\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.division) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 262,\n      columnNumber: 16\n    }, this)\n  }, {\n    id: 'createdBy',\n    type: 'multiSelect',\n    label: utils.string.t('claims.columns.claimsManagement.createdBy'),\n    placeholder: utils.string.t('claims.filterPlaceHolderText'),\n    value: [],\n    options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.createdBy) || [],\n    content: /*#__PURE__*/_jsxDEV(MultiSelect, {\n      id: \"createdBy\",\n      search: true,\n      options: (advanceSearchFilterData === null || advanceSearchFilterData === void 0 ? void 0 : advanceSearchFilterData.createdBy) || []\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 271,\n      columnNumber: 16\n    }, this)\n  }];\n  var searchOptions = [{\n    id: 'lossRef',\n    name: utils.string.t('claims.columns.claimsList.lossRef')\n  }, {\n    id: 'pasEventID',\n    name: utils.string.t('claims.columns.claimsList.pasEventID')\n  }, {\n    id: 'lossName',\n    name: utils.string.t('claims.columns.claimsList.lossName')\n  }, {\n    id: 'claimRef',\n    name: utils.string.t('claims.columns.claimsList.claimReference')\n  }, {\n    id: 'catCodeDescription',\n    name: utils.string.t('claims.columns.claimsList.catCodesID')\n  }, {\n    id: 'ucr',\n    name: utils.string.t('claims.columns.claimsList.ucr')\n  }, {\n    id: 'claimantName',\n    name: utils.string.t('claims.columns.claimsList.claimantName')\n  }, {\n    id: 'beAdjuster',\n    name: utils.string.t('claims.claimInformation.beAdjuster')\n  }, {\n    id: 'policyRef',\n    name: utils.string.t('claims.columns.claimsList.policyRef')\n  }, {\n    id: 'umr',\n    name: utils.string.t('claims.columns.claimsList.umr')\n  }, {\n    id: 'insured',\n    name: utils.string.t('claims.columns.claimsList.insured')\n  }, {\n    id: 'reInsured',\n    name: utils.string.t('claims.columns.claimsList.reinsured')\n  }, {\n    id: 'client',\n    name: utils.string.t('claims.columns.claimsList.client')\n  }, {\n    id: 'coverHolder',\n    name: utils.string.t('claims.columns.claimsList.coverholder')\n  }];\n  var columns = [{\n    id: 'lossRef',\n    label: utils.string.t('claims.columns.claimsList.lossRef'),\n    nowrap: true,\n    sort: {\n      type: 'numeric',\n      direction: 'desc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'pasEventID',\n    label: utils.string.t('claims.columns.claimsList.pasEventID'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'lossName',\n    label: utils.string.t('claims.columns.claimsList.lossName'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true,\n    mandatory: true\n  }, {\n    id: 'lossDetail',\n    label: utils.string.t('claims.columns.claimsList.lossDetails'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true\n  }, {\n    id: 'lossQualifier',\n    label: utils.string.t('claims.columns.claimsList.lossQualifier'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true\n  }, {\n    id: 'lossFromDate',\n    label: utils.string.t('claims.columns.claimsList.lossFromDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'lossToDate',\n    label: utils.string.t('claims.columns.claimsList.lossToDate'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true,\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'claimRef',\n    label: utils.string.t('claims.columns.claimsList.claimID'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'claimLossFromDate',\n    label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimLossToDate',\n    label: utils.string.t('claims.columns.claimsList.claimLossTo'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimReceivedDate',\n    label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'claimStatusName',\n    label: utils.string.t('claims.columns.claimsList.claimStatusName'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'catCodeDescription',\n    label: utils.string.t('claims.columns.claimsList.catCodesID'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.columns.claimsList.ucr'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'claimantName',\n    label: utils.string.t('claims.columns.claimsList.claimantName'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'beAdjuster',\n    label: utils.string.t('claims.claimInformation.beAdjuster'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'policyRef',\n    label: utils.string.t('claims.columns.claimsList.policyRef'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true,\n    mandatory: true,\n    nowrap: true\n  }, {\n    id: 'umr',\n    label: utils.string.t('claims.columns.claimsList.umr'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    nowrap: true\n  }, {\n    id: 'policyType',\n    label: utils.string.t('claims.columns.claimsList.policyType'),\n    nowrap: true,\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'insured',\n    label: utils.string.t('claims.columns.claimsList.insured'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'reInsured',\n    label: utils.string.t('claims.columns.claimsList.reinsured'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true\n  }, {\n    id: 'client',\n    label: utils.string.t('claims.columns.claimsList.client'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true\n  }, {\n    id: 'coverHolder',\n    label: utils.string.t('claims.columns.claimsList.coverholder'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true\n  }, {\n    id: 'company',\n    label: utils.string.t('claims.columns.claimsList.company'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'division',\n    label: utils.string.t('claims.columns.claimsList.division'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    ellipsis: true,\n    visible: true\n  }, {\n    id: 'team',\n    label: utils.string.t('claims.columns.claimsList.team'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'createdBy',\n    label: utils.string.t('claims.columns.claimsManagement.createdBy'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    },\n    visible: true,\n    nowrap: true\n  }, {\n    id: 'priority',\n    label: utils.string.t('claims.columns.claimsList.priority'),\n    sort: {\n      type: 'string',\n      direction: 'asc'\n    }\n  }, {\n    id: 'actions',\n    menu: true\n  }];\n  var searchField = [{\n    name: 'searchBy',\n    type: 'select',\n    options: searchOptions,\n    optionKey: 'id',\n    optionLabel: 'name',\n    value: (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy) !== '' ? searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$find = searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.id) === (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy);\n    })) === null || _searchOptions$find === void 0 ? void 0 : _searchOptions$find.id : (searchOptions === null || searchOptions === void 0 ? void 0 : (_searchOptions$find2 = searchOptions.find(function (item) {\n      return (item === null || item === void 0 ? void 0 : item.name) === utils.string.t('claims.columns.claimsList.lossName');\n    })) === null || _searchOptions$find2 === void 0 ? void 0 : _searchOptions$find2.id) || null,\n    handleUpdate: function handleUpdate(name, value) {\n      dispatch(setAdvanceSearchTabSearchDetails({\n        searchBy: value\n      }));\n    }\n  }];\n  var closedClaimField = [{\n    name: 'includeClosedClaims',\n    type: 'switch',\n    value: (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.pullClosedRecords) || isClosedClaimsEnabled\n  }];\n\n  var handleSearch = function handleSearch(queryObject) {\n    if ((queryObject === null || queryObject === void 0 ? void 0 : queryObject.search) && (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText) !== (queryObject === null || queryObject === void 0 ? void 0 : queryObject.search)) {\n      constants.ADVANCE_SEARCH_FILTER_DATE_FIELDS.map(function (val) {\n        return setValue(val, null);\n      });\n      setResetKey(new Date().getTime());\n      dispatch(setAdvanceSearchTblFilterValues({\n        filtersValues: {}\n      }));\n      setSearchTerm(queryObject === null || queryObject === void 0 ? void 0 : queryObject.search);\n      dispatch(resetSelectedLossItem());\n      dispatch(setAdvanceSearchTabSearchDetails({\n        searchText: queryObject === null || queryObject === void 0 ? void 0 : queryObject.search,\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: queryObject === null || queryObject === void 0 ? void 0 : queryObject.search,\n        filterTerm: '',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'filter'\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: queryObject === null || queryObject === void 0 ? void 0 : queryObject.search,\n        direction: 'desc',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search',\n        size: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.pageSize\n      }));\n    }\n  };\n\n  var handleSort = function handleSort(by, dir) {\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      dispatch(resetSelectedLossItem());\n      dispatch(getAdvanceSearchDetails({\n        sortBy: by,\n        direction: dir.toUpperCase(),\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search'\n      }));\n    }\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      dispatch(resetSelectedLossItem());\n      dispatch(getAdvanceSearchDetails({\n        page: newPage,\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search'\n      }));\n    }\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      dispatch(resetSelectedLossItem());\n      dispatch(getAdvanceSearchDetails({\n        size: rowsPerPage,\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search'\n      }));\n    }\n  };\n\n  var handleSearchFilter = function handleSearchFilter(data) {\n    var filters = data.filters;\n\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      dispatch(resetSelectedLossItem());\n      dispatch(setAdvanceSearchTblFilterValues({\n        filters: filters\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        filterTerm: filters,\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'filter'\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        filterTerm: filters,\n        requestType: 'search'\n      }));\n    }\n  };\n\n  var onResetFilter = function onResetFilter() {\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      reset();\n      dispatch(resetSelectedLossItem());\n      dispatch(setAdvanceSearchTblFilterValues({\n        filtersValues: {}\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        filterTerm: '',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'filter'\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        filterTerm: '',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search'\n      }));\n    }\n  };\n\n  var onResetSearch = function onResetSearch() {\n    setResetKey(new Date().getTime());\n    constants.ADVANCE_SEARCH_FILTER_DATE_FIELDS.map(function (val) {\n      return setValue(val, null);\n    });\n    dispatch(resetSelectedLossItem());\n    dispatch(resetAdvanceSearchTabDetails());\n    setSearchTerm('');\n    dispatch(setAdvanceSearchTabSearchDetails({\n      searchText: '',\n      searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy\n    }));\n  };\n\n  var handleClosedClaims = function handleClosedClaims(name, claimStatus) {\n    setIsClosedClaimsEnabled(claimStatus);\n    dispatch(setPullClosedRecords(claimStatus));\n\n    if (searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText)) {\n      dispatch(setAdvanceSearchTabSearchDetails({\n        searchText: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        filterTerm: '',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'filter',\n        pullClosedRecords: claimStatus\n      }));\n      dispatch(getAdvanceSearchDetails({\n        term: searchTerm || (advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText),\n        direction: 'desc',\n        searchBy: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchBy,\n        requestType: 'search',\n        size: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.pageSize,\n        pullClosedRecords: claimStatus\n      }));\n    }\n  };\n\n  useEffect(function () {\n    if (utils.generic.isInvalidOrEmptyArray(claimStatuses)) dispatch(getStatuses());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns,\n      isTableHidden = _useFlexiColumns.isTableHidden,\n      columnProps = _useFlexiColumns.columnProps,\n      toggleColumn = _useFlexiColumns.toggleColumn;\n\n  return /*#__PURE__*/_jsxDEV(AdvanceSearchTabView, {\n    advanceSearchData: advanceSearchData,\n    tableData: advanceSearchTblData,\n    searchTerm: advanceSearchData === null || advanceSearchData === void 0 ? void 0 : advanceSearchData.searchText,\n    searchField: searchField,\n    closedClaimField: closedClaimField,\n    isSearchByNull: !Boolean(searchField[0].value),\n    sort: _objectSpread(_objectSpread({}, advanceSearchData.sort), {}, {\n      type: 'numeric'\n    }),\n    columnsArray: columnsArray,\n    columnProps: columnProps,\n    isTableHidden: isTableHidden,\n    handleSearch: handleSearch,\n    handleSort: handleSort,\n    handleChangePage: handleChangePage,\n    handleChangeRowsPerPage: handleChangeRowsPerPage,\n    handleSearchFilter: handleSearchFilter,\n    handleClosedClaims: handleClosedClaims,\n    tableFilterFields: tableFilterFields,\n    onResetFilter: onResetFilter,\n    onResetSearch: onResetSearch,\n    toggleColumn: toggleColumn,\n    anchorEl: anchorEl,\n    setAnchorEl: setAnchorEl,\n    isTblLoader: isTblLoader,\n    isFetchingFilters: isFetchingFilters,\n    emptyData: emptyData,\n    resetKey: resetKey\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 661,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AdvanceSearchTab, \"TM6WdMBVQasgjz7svNUcdoZmXPU=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useForm, useFlexiColumns];\n});\n\n_c = AdvanceSearchTab;\n\nvar _c;\n\n$RefreshReg$(_c, \"AdvanceSearchTab\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AdvanceSearchTab/AdvanceSearchTab.js"],"names":["React","useState","useEffect","useDispatch","useSelector","useForm","AdvanceSearchTabView","MultiSelect","FormDate","useFlexiColumns","utils","getAdvanceSearchDetails","selectAdvanceSearchData","selectAdvanceSearchTblData","selectAdvanceSearchFilterData","setAdvanceSearchTabSearchDetails","setAdvanceSearchTblFilterValues","resetSelectedLossItem","resetAdvanceSearchTabDetails","setPullClosedRecords","getStatuses","selectClaimsStatuses","constants","AdvanceSearchTab","dispatch","searchTerm","setSearchTerm","anchorEl","setAnchorEl","resetKey","setResetKey","claimStatuses","advanceSearchData","advanceSearchTblData","advanceSearchFilterData","isTblLoader","isloadingTable","isFetchingFilters","isloadingFilters","emptyData","generic","isInvalidOrEmptyArray","items","isClosedClaimsEnabled","setIsClosedClaimsEnabled","defaultFormFields","name","type","value","defaultValues","form","getInitialValues","control","reset","watch","setValue","lossDateFrom","claimLossFromDate","tableFilterFields","id","label","string","t","placeholder","options","lossQualifier","content","getFieldProps","fullWidth","margin","clearable","variant","format","minDate","undefined","catCode","claimStatus","beAdjuster","company","division","createdBy","searchOptions","columns","nowrap","sort","direction","visible","mandatory","ellipsis","menu","searchField","optionKey","optionLabel","searchBy","find","item","handleUpdate","closedClaimField","pullClosedRecords","handleSearch","queryObject","search","searchText","ADVANCE_SEARCH_FILTER_DATE_FIELDS","map","val","Date","getTime","filtersValues","term","filterTerm","requestType","size","pageSize","handleSort","by","dir","sortBy","toUpperCase","handleChangePage","newPage","page","handleChangeRowsPerPage","rowsPerPage","handleSearchFilter","data","filters","onResetFilter","onResetSearch","handleClosedClaims","columnsArray","isTableHidden","columnProps","toggleColumn","Boolean"],"mappings":"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","sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\n\r\n// app\r\nimport AdvanceSearchTabView from './AdvanceSearchTab.view';\r\nimport { MultiSelect, FormDate } from 'components';\r\nimport { useFlexiColumns } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport {\r\n  getAdvanceSearchDetails,\r\n  selectAdvanceSearchData,\r\n  selectAdvanceSearchTblData,\r\n  selectAdvanceSearchFilterData,\r\n  setAdvanceSearchTabSearchDetails,\r\n  setAdvanceSearchTblFilterValues,\r\n  resetSelectedLossItem,\r\n  resetAdvanceSearchTabDetails,\r\n  setPullClosedRecords,\r\n  getStatuses,\r\n  selectClaimsStatuses,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\n\r\nexport default function AdvanceSearchTab() {\r\n  const dispatch = useDispatch();\r\n  const [searchTerm, setSearchTerm] = useState('');\r\n  const [anchorEl, setAnchorEl] = useState(null);\r\n  const [resetKey, setResetKey] = useState();\r\n\r\n  const claimStatuses = useSelector(selectClaimsStatuses);\r\n  const advanceSearchData = useSelector(selectAdvanceSearchData);\r\n  const advanceSearchTblData = useSelector(selectAdvanceSearchTblData);\r\n  const advanceSearchFilterData = useSelector(selectAdvanceSearchFilterData);\r\n\r\n  const isTblLoader = advanceSearchData?.isloadingTable || false;\r\n  const isFetchingFilters = advanceSearchData?.isloadingFilters || false;\r\n  const emptyData = utils.generic.isInvalidOrEmptyArray(advanceSearchData?.items);\r\n\r\n  const [isClosedClaimsEnabled, setIsClosedClaimsEnabled] = useState(false);\r\n\r\n  const defaultFormFields = [\r\n    {\r\n      name: 'lossFromDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'lossToDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'claimReceivedDateTime',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'claimLossFromDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n    {\r\n      name: 'claimLossToDate',\r\n      type: 'datepicker',\r\n      value: null,\r\n    },\r\n  ];\r\n\r\n  const defaultValues = utils.form.getInitialValues(defaultFormFields);\r\n  const { control, reset, watch, setValue } = useForm({ defaultValues });\r\n  const lossDateFrom = watch('lossFromDate');\r\n  const claimLossFromDate = watch('claimLossFromDate');\r\n\r\n  const tableFilterFields = [\r\n    {\r\n      id: 'lossQualifier',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.lossQualifier'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.lossQualifier || [],\r\n      content: <MultiSelect id=\"lossQualifier\" search options={advanceSearchFilterData?.lossQualifier || []} />,\r\n    },\r\n    {\r\n      id: 'lossFromDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.lossFromDate'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossFromDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.lossToDate'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'lossToDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            minDate: lossDateFrom ?? undefined,\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'claimLossFromDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'claimLossFromDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'claimLossToDate',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossTo'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'claimLossToDate')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            minDate: claimLossFromDate ?? undefined,\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'claimReceivedDateTime',\r\n      type: 'datepicker',\r\n      label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\r\n      value: '',\r\n      content: (\r\n        <FormDate\r\n          control={control}\r\n          {...utils.form.getFieldProps(defaultFormFields, 'claimReceivedDateTime')}\r\n          id=\"datepicker\"\r\n          label={''}\r\n          plainText\r\n          plainTextIcon\r\n          placeholder={utils.string.t('app.selectDate')}\r\n          muiComponentProps={{\r\n            fullWidth: false,\r\n            margin: 'dense',\r\n          }}\r\n          muiPickerProps={{\r\n            clearable: false,\r\n            variant: 'inline',\r\n            format: 'DD-MM-YYYY',\r\n          }}\r\n        />\r\n      ),\r\n    },\r\n    {\r\n      id: 'catCodeDescription',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.catCode || [],\r\n      content: <MultiSelect id=\"catCode\" search options={advanceSearchFilterData?.catCode || []} />,\r\n    },\r\n    {\r\n      id: 'claimStatusName',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.claimStatusName'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: advanceSearchFilterData?.claimStatus || [],\r\n      options: [],\r\n      content: <MultiSelect id=\"claimStatus\" search options={advanceSearchFilterData?.claimStatus || []} />,\r\n    },\r\n    {\r\n      id: 'beAdjuster',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.beAdjuster || [],\r\n      content: <MultiSelect id=\"beAdjuster\" search options={advanceSearchFilterData?.beAdjuster || []} />,\r\n    },\r\n    {\r\n      id: 'company',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.company'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.company || [],\r\n      content: <MultiSelect id=\"company\" search options={advanceSearchFilterData?.company || []} />,\r\n    },\r\n    {\r\n      id: 'division',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.division || [],\r\n      content: <MultiSelect id=\"division\" search options={advanceSearchFilterData?.division || []} />,\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      type: 'multiSelect',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdBy'),\r\n      placeholder: utils.string.t('claims.filterPlaceHolderText'),\r\n      value: [],\r\n      options: advanceSearchFilterData?.createdBy || [],\r\n      content: <MultiSelect id=\"createdBy\" search options={advanceSearchFilterData?.createdBy || []} />,\r\n    },\r\n  ];\r\n\r\n  const searchOptions = [\r\n    { id: 'lossRef', name: utils.string.t('claims.columns.claimsList.lossRef') },\r\n    { id: 'pasEventID', name: utils.string.t('claims.columns.claimsList.pasEventID') },\r\n    { id: 'lossName', name: utils.string.t('claims.columns.claimsList.lossName') },\r\n    { id: 'claimRef', name: utils.string.t('claims.columns.claimsList.claimReference') },\r\n    { id: 'catCodeDescription', name: utils.string.t('claims.columns.claimsList.catCodesID') },\r\n    { id: 'ucr', name: utils.string.t('claims.columns.claimsList.ucr') },\r\n    { id: 'claimantName', name: utils.string.t('claims.columns.claimsList.claimantName') },\r\n    { id: 'beAdjuster', name: utils.string.t('claims.claimInformation.beAdjuster') },\r\n    { id: 'policyRef', name: utils.string.t('claims.columns.claimsList.policyRef') },\r\n    { id: 'umr', name: utils.string.t('claims.columns.claimsList.umr') },\r\n    { id: 'insured', name: utils.string.t('claims.columns.claimsList.insured') },\r\n    { id: 'reInsured', name: utils.string.t('claims.columns.claimsList.reinsured') },\r\n    { id: 'client', name: utils.string.t('claims.columns.claimsList.client') },\r\n    { id: 'coverHolder', name: utils.string.t('claims.columns.claimsList.coverholder') },\r\n  ];\r\n\r\n  const columns = [\r\n    {\r\n      id: 'lossRef',\r\n      label: utils.string.t('claims.columns.claimsList.lossRef'),\r\n      nowrap: true,\r\n      sort: { type: 'numeric', direction: 'desc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'pasEventID',\r\n      label: utils.string.t('claims.columns.claimsList.pasEventID'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'lossName',\r\n      label: utils.string.t('claims.columns.claimsList.lossName'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n      mandatory: true,\r\n    },\r\n    {\r\n      id: 'lossDetail',\r\n      label: utils.string.t('claims.columns.claimsList.lossDetails'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'lossQualifier',\r\n      label: utils.string.t('claims.columns.claimsList.lossQualifier'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'lossFromDate',\r\n      label: utils.string.t('claims.columns.claimsList.lossFromDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'lossToDate',\r\n      label: utils.string.t('claims.columns.claimsList.lossToDate'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'claimRef',\r\n      label: utils.string.t('claims.columns.claimsList.claimID'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimLossFromDate',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossFrom'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimLossToDate',\r\n      label: utils.string.t('claims.columns.claimsList.claimLossTo'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimReceivedDate',\r\n      label: utils.string.t('claims.columns.claimsList.claimReceivedDateTime'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'claimStatusName',\r\n      label: utils.string.t('claims.columns.claimsList.claimStatusName'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'catCodeDescription',\r\n      label: utils.string.t('claims.columns.claimsList.catCodesID'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    { id: 'ucr', label: utils.string.t('claims.columns.claimsList.ucr'), sort: { type: 'string', direction: 'asc' } },\r\n    {\r\n      id: 'claimantName',\r\n      label: utils.string.t('claims.columns.claimsList.claimantName'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'beAdjuster',\r\n      label: utils.string.t('claims.claimInformation.beAdjuster'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'policyRef',\r\n      label: utils.string.t('claims.columns.claimsList.policyRef'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n      mandatory: true,\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'umr',\r\n      label: utils.string.t('claims.columns.claimsList.umr'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      nowrap: true,\r\n    },\r\n    {\r\n      id: 'policyType',\r\n      label: utils.string.t('claims.columns.claimsList.policyType'),\r\n      nowrap: true,\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'insured',\r\n      label: utils.string.t('claims.columns.claimsList.insured'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'reInsured',\r\n      label: utils.string.t('claims.columns.claimsList.reinsured'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'client',\r\n      label: utils.string.t('claims.columns.claimsList.client'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'coverHolder',\r\n      label: utils.string.t('claims.columns.claimsList.coverholder'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n    },\r\n    {\r\n      id: 'company',\r\n      label: utils.string.t('claims.columns.claimsList.company'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n\r\n    {\r\n      id: 'division',\r\n      label: utils.string.t('claims.columns.claimsList.division'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      ellipsis: true,\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'team',\r\n      label: utils.string.t('claims.columns.claimsList.team'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n    },\r\n    {\r\n      id: 'createdBy',\r\n      label: utils.string.t('claims.columns.claimsManagement.createdBy'),\r\n      sort: { type: 'string', direction: 'asc' },\r\n      visible: true,\r\n      nowrap: true,\r\n    },\r\n\r\n    { id: 'priority', label: utils.string.t('claims.columns.claimsList.priority'), sort: { type: 'string', direction: 'asc' } },\r\n\r\n    { id: 'actions', menu: true },\r\n  ];\r\n\r\n  const searchField = [\r\n    {\r\n      name: 'searchBy',\r\n      type: 'select',\r\n      options: searchOptions,\r\n      optionKey: 'id',\r\n      optionLabel: 'name',\r\n      value:\r\n        advanceSearchData?.searchBy !== ''\r\n          ? searchOptions?.find((item) => item?.id === advanceSearchData?.searchBy)?.id\r\n          : searchOptions?.find((item) => item?.name === utils.string.t('claims.columns.claimsList.lossName'))?.id || null,\r\n      handleUpdate: (name, value) => {\r\n        dispatch(setAdvanceSearchTabSearchDetails({ searchBy: value }));\r\n      },\r\n    },\r\n  ];\r\n\r\n  const closedClaimField = [\r\n    {\r\n      name: 'includeClosedClaims',\r\n      type: 'switch',\r\n      value: advanceSearchData?.pullClosedRecords || isClosedClaimsEnabled,\r\n    },\r\n  ];\r\n\r\n  const handleSearch = (queryObject) => {\r\n    if (queryObject?.search && advanceSearchData?.searchText !== queryObject?.search) {\r\n      constants.ADVANCE_SEARCH_FILTER_DATE_FIELDS.map((val) => setValue(val, null));\r\n      setResetKey(new Date().getTime());\r\n      dispatch(setAdvanceSearchTblFilterValues({ filtersValues: {} }));\r\n      setSearchTerm(queryObject?.search);\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(setAdvanceSearchTabSearchDetails({ searchText: queryObject?.search, searchBy: advanceSearchData?.searchBy }));\r\n      dispatch(\r\n        getAdvanceSearchDetails({ term: queryObject?.search, filterTerm: '', searchBy: advanceSearchData?.searchBy, requestType: 'filter' })\r\n      );\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: queryObject?.search,\r\n          direction: 'desc',\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n          size: advanceSearchData?.pageSize,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSort = (by, dir) => {\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          sortBy: by,\r\n          direction: dir.toUpperCase(),\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          page: newPage,\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          size: rowsPerPage,\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const handleSearchFilter = (data) => {\r\n    const { filters } = data;\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(setAdvanceSearchTblFilterValues({ filters }));\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          filterTerm: filters,\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'filter',\r\n        })\r\n      );\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          searchBy: advanceSearchData?.searchBy,\r\n          filterTerm: filters,\r\n          requestType: 'search',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onResetFilter = () => {\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      reset();\r\n      dispatch(resetSelectedLossItem());\r\n      dispatch(setAdvanceSearchTblFilterValues({ filtersValues: {} }));\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          filterTerm: '',\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'filter',\r\n        })\r\n      );\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          filterTerm: '',\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  const onResetSearch = () => {\r\n    setResetKey(new Date().getTime());\r\n    constants.ADVANCE_SEARCH_FILTER_DATE_FIELDS.map((val) => setValue(val, null));\r\n    dispatch(resetSelectedLossItem());\r\n    dispatch(resetAdvanceSearchTabDetails());\r\n    setSearchTerm('');\r\n    dispatch(setAdvanceSearchTabSearchDetails({ searchText: '', searchBy: advanceSearchData?.searchBy }));\r\n  };\r\n\r\n  const handleClosedClaims = (name, claimStatus) => {\r\n    setIsClosedClaimsEnabled(claimStatus);\r\n    dispatch(setPullClosedRecords(claimStatus));\r\n    if (searchTerm || advanceSearchData?.searchText) {\r\n      dispatch(\r\n        setAdvanceSearchTabSearchDetails({ searchText: searchTerm || advanceSearchData?.searchText, searchBy: advanceSearchData?.searchBy })\r\n      );\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          filterTerm: '',\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'filter',\r\n          pullClosedRecords: claimStatus,\r\n        })\r\n      );\r\n      dispatch(\r\n        getAdvanceSearchDetails({\r\n          term: searchTerm || advanceSearchData?.searchText,\r\n          direction: 'desc',\r\n          searchBy: advanceSearchData?.searchBy,\r\n          requestType: 'search',\r\n          size: advanceSearchData?.pageSize,\r\n          pullClosedRecords: claimStatus,\r\n        })\r\n      );\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    if (utils.generic.isInvalidOrEmptyArray(claimStatuses)) dispatch(getStatuses());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const { columns: columnsArray, isTableHidden, columnProps, toggleColumn } = useFlexiColumns(columns);\r\n\r\n  return (\r\n    <AdvanceSearchTabView\r\n      advanceSearchData={advanceSearchData}\r\n      tableData={advanceSearchTblData}\r\n      searchTerm={advanceSearchData?.searchText}\r\n      searchField={searchField}\r\n      closedClaimField={closedClaimField}\r\n      isSearchByNull={!Boolean(searchField[0].value)}\r\n      sort={{\r\n        ...advanceSearchData.sort,\r\n        type: 'numeric',\r\n      }}\r\n      columnsArray={columnsArray}\r\n      columnProps={columnProps}\r\n      isTableHidden={isTableHidden}\r\n      handleSearch={handleSearch}\r\n      handleSort={handleSort}\r\n      handleChangePage={handleChangePage}\r\n      handleChangeRowsPerPage={handleChangeRowsPerPage}\r\n      handleSearchFilter={handleSearchFilter}\r\n      handleClosedClaims={handleClosedClaims}\r\n      tableFilterFields={tableFilterFields}\r\n      onResetFilter={onResetFilter}\r\n      onResetSearch={onResetSearch}\r\n      toggleColumn={toggleColumn}\r\n      anchorEl={anchorEl}\r\n      setAnchorEl={setAnchorEl}\r\n      isTblLoader={isTblLoader}\r\n      isFetchingFilters={isFetchingFilters}\r\n      emptyData={emptyData}\r\n      resetKey={resetKey}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}