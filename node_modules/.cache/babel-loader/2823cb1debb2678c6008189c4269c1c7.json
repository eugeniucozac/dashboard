{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\AddRiskContainer\\\\AddRiskContainer.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useSelector, useDispatch } from 'react-redux'; // app\n\nimport { AddRiskContainerView } from './AddRiskContainer.view';\nimport { getRiskProducts, getRiskDefinitions, selectRiskDefinitionsFieldsByType, selectRiskFieldOptionsByType, selectRiskProduct, resetRiskProduct, getClients, getInsureds, getReinsureds, selectPartyOptions } from 'stores';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nAddRiskContainer.propTypes = {\n  handleClose: PropTypes.func.isRequired\n};\nAddRiskContainer.defaultProps = {\n  handleClose: function handleClose() {}\n};\nexport default function AddRiskContainer(_ref) {\n  _s();\n\n  var handleClose = _ref.handleClose;\n  var dispatch = useDispatch();\n  var riskProducts = useSelector(function (store) {\n    return store.risk.products.items;\n  });\n  var riskProductsSelected = useSelector(function (store) {\n    return store.risk.products.selected;\n  });\n  var riskProductsLoading = useSelector(function (store) {\n    return store.risk.products.loading;\n  });\n  var riskDefinitionsFieldsByType = useSelector(selectRiskDefinitionsFieldsByType(riskProductsSelected));\n  var riskFieldOptionsByType = useSelector(selectRiskFieldOptionsByType(riskProductsSelected));\n  var partyOptions = useSelector(selectPartyOptions);\n  var countries = (riskFieldOptionsByType === null || riskFieldOptionsByType === void 0 ? void 0 : riskFieldOptionsByType.countryOfOrigin) ? riskFieldOptionsByType.countryOfOrigin : [];\n  useEffect(function () {\n    dispatch(getRiskProducts());\n    dispatch(getClients({\n      size: 1000\n    }));\n    dispatch(getInsureds({\n      size: 1000\n    }));\n    dispatch(getReinsureds({\n      size: 1000\n    })); // cleanup\n\n    return function () {\n      dispatch(resetRiskProduct());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleChangeProductType = function handleChangeProductType(name, value) {\n    var type = value === '__placeholder__' ? '' : value;\n    dispatch(selectRiskProduct(type));\n\n    if (type && (utils.generic.isInvalidOrEmptyArray(riskDefinitionsFieldsByType) || utils.generic.isInvalidOrEmptyArray(countries))) {\n      dispatch(getRiskDefinitions(type));\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(AddRiskContainerView, {\n    productList: riskProducts,\n    productSelected: riskProductsSelected,\n    fields: utils.risk.parseFields(riskDefinitionsFieldsByType, _objectSpread(_objectSpread({}, partyOptions), {}, {\n      countryOfOrigin: countries\n    })),\n    hasCountryOfOrigin: countries.length ? true : false,\n    isLoading: riskProductsLoading,\n    handleClose: handleClose,\n    handleChangeProductType: handleChangeProductType\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 64,\n    columnNumber: 5\n  }, this);\n}\n\n_s(AddRiskContainer, \"tXIrh5xTgqc+lvt7M+DzUyRgjfI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = AddRiskContainer;\nAddRiskContainer.displayName = \"AddRiskContainer\";\nAddRiskContainer.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddRiskContainer\",\n  \"props\": {\n    \"handleClose\": {\n      \"defaultValue\": {\n        \"value\": \"() => {}\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\AddRiskContainer\\\\AddRiskContainer.js\"] = {\n    name: \"AddRiskContainer\",\n    docgenInfo: AddRiskContainer.__docgenInfo,\n    path: \"src\\\\modules\\\\AddRiskContainer\\\\AddRiskContainer.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddRiskContainer\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/AddRiskContainer/AddRiskContainer.js"],"names":["React","useEffect","PropTypes","useSelector","useDispatch","AddRiskContainerView","getRiskProducts","getRiskDefinitions","selectRiskDefinitionsFieldsByType","selectRiskFieldOptionsByType","selectRiskProduct","resetRiskProduct","getClients","getInsureds","getReinsureds","selectPartyOptions","utils","AddRiskContainer","propTypes","handleClose","func","isRequired","defaultProps","dispatch","riskProducts","store","risk","products","items","riskProductsSelected","selected","riskProductsLoading","loading","riskDefinitionsFieldsByType","riskFieldOptionsByType","partyOptions","countries","countryOfOrigin","size","handleChangeProductType","name","value","type","generic","isInvalidOrEmptyArray","parseFields","length"],"mappings":";;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,QAAiC,OAAjC;AACA,OAAOC,SAAP,MAAsB,YAAtB;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC,C,CAEA;;AACA,SAASC,oBAAT,QAAqC,yBAArC;AACA,SACEC,eADF,EAEEC,kBAFF,EAGEC,iCAHF,EAIEC,4BAJF,EAKEC,iBALF,EAMEC,gBANF,EAOEC,UAPF,EAQEC,WARF,EASEC,aATF,EAUEC,kBAVF,QAWO,QAXP;AAYA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEAC,gBAAgB,CAACC,SAAjB,GAA6B;AAC3BC,EAAAA,WAAW,EAAEjB,SAAS,CAACkB,IAAV,CAAeC;AADD,CAA7B;AAIAJ,gBAAgB,CAACK,YAAjB,GAAgC;AAC9BH,EAAAA,WAAW,EAAE,uBAAM,CAAE;AADS,CAAhC;AAIA,eAAe,SAASF,gBAAT,OAA2C;AAAA;;AAAA,MAAfE,WAAe,QAAfA,WAAe;AACxD,MAAMI,QAAQ,GAAGnB,WAAW,EAA5B;AACA,MAAMoB,YAAY,GAAGrB,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBC,KAA/B;AAAA,GAAD,CAAhC;AACA,MAAMC,oBAAoB,GAAG1B,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBG,QAA/B;AAAA,GAAD,CAAxC;AACA,MAAMC,mBAAmB,GAAG5B,WAAW,CAAC,UAACsB,KAAD;AAAA,WAAWA,KAAK,CAACC,IAAN,CAAWC,QAAX,CAAoBK,OAA/B;AAAA,GAAD,CAAvC;AACA,MAAMC,2BAA2B,GAAG9B,WAAW,CAACK,iCAAiC,CAACqB,oBAAD,CAAlC,CAA/C;AACA,MAAMK,sBAAsB,GAAG/B,WAAW,CAACM,4BAA4B,CAACoB,oBAAD,CAA7B,CAA1C;AACA,MAAMM,YAAY,GAAGhC,WAAW,CAACY,kBAAD,CAAhC;AACA,MAAMqB,SAAS,GAAG,CAAAF,sBAAsB,SAAtB,IAAAA,sBAAsB,WAAtB,YAAAA,sBAAsB,CAAEG,eAAxB,IAA0CH,sBAAsB,CAACG,eAAjE,GAAmF,EAArG;AAEApC,EAAAA,SAAS,CACP,YAAM;AACJsB,IAAAA,QAAQ,CAACjB,eAAe,EAAhB,CAAR;AACAiB,IAAAA,QAAQ,CAACX,UAAU,CAAC;AAAE0B,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAX,CAAR;AACAf,IAAAA,QAAQ,CAACV,WAAW,CAAC;AAAEyB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAZ,CAAR;AACAf,IAAAA,QAAQ,CAACT,aAAa,CAAC;AAAEwB,MAAAA,IAAI,EAAE;AAAR,KAAD,CAAd,CAAR,CAJI,CAMJ;;AACA,WAAO,YAAM;AACXf,MAAAA,QAAQ,CAACZ,gBAAgB,EAAjB,CAAR;AACD,KAFD;AAGD,GAXM,EAYP,EAZO,CAYJ;AAZI,GAAT;;AAeA,MAAM4B,uBAAuB,GAAG,SAA1BA,uBAA0B,CAACC,IAAD,EAAOC,KAAP,EAAiB;AAC/C,QAAMC,IAAI,GAAGD,KAAK,KAAK,iBAAV,GAA8B,EAA9B,GAAmCA,KAAhD;AAEAlB,IAAAA,QAAQ,CAACb,iBAAiB,CAACgC,IAAD,CAAlB,CAAR;;AACA,QAAIA,IAAI,KAAK1B,KAAK,CAAC2B,OAAN,CAAcC,qBAAd,CAAoCX,2BAApC,KAAoEjB,KAAK,CAAC2B,OAAN,CAAcC,qBAAd,CAAoCR,SAApC,CAAzE,CAAR,EAAkI;AAChIb,MAAAA,QAAQ,CAAChB,kBAAkB,CAACmC,IAAD,CAAnB,CAAR;AACD;AACF,GAPD;;AASA,sBACE,QAAC,oBAAD;AACE,IAAA,WAAW,EAAElB,YADf;AAEE,IAAA,eAAe,EAAEK,oBAFnB;AAGE,IAAA,MAAM,EAAEb,KAAK,CAACU,IAAN,CAAWmB,WAAX,CAAuBZ,2BAAvB,kCACHE,YADG;AAENE,MAAAA,eAAe,EAAED;AAFX,OAHV;AAOE,IAAA,kBAAkB,EAAEA,SAAS,CAACU,MAAV,GAAmB,IAAnB,GAA0B,KAPhD;AAQE,IAAA,SAAS,EAAEf,mBARb;AASE,IAAA,WAAW,EAAEZ,WATf;AAUE,IAAA,uBAAuB,EAAEoB;AAV3B;AAAA;AAAA;AAAA;AAAA,UADF;AAcD;;GAhDuBtB,gB;UACLb,W,EACID,W,EACQA,W,EACDA,W,EACQA,W,EACLA,W,EACVA,W;;;KAPCc,gB;AAAAA,gB","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { AddRiskContainerView } from './AddRiskContainer.view';\r\nimport {\r\n  getRiskProducts,\r\n  getRiskDefinitions,\r\n  selectRiskDefinitionsFieldsByType,\r\n  selectRiskFieldOptionsByType,\r\n  selectRiskProduct,\r\n  resetRiskProduct,\r\n  getClients,\r\n  getInsureds,\r\n  getReinsureds,\r\n  selectPartyOptions,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nAddRiskContainer.propTypes = {\r\n  handleClose: PropTypes.func.isRequired,\r\n};\r\n\r\nAddRiskContainer.defaultProps = {\r\n  handleClose: () => {},\r\n};\r\n\r\nexport default function AddRiskContainer({ handleClose }) {\r\n  const dispatch = useDispatch();\r\n  const riskProducts = useSelector((store) => store.risk.products.items);\r\n  const riskProductsSelected = useSelector((store) => store.risk.products.selected);\r\n  const riskProductsLoading = useSelector((store) => store.risk.products.loading);\r\n  const riskDefinitionsFieldsByType = useSelector(selectRiskDefinitionsFieldsByType(riskProductsSelected));\r\n  const riskFieldOptionsByType = useSelector(selectRiskFieldOptionsByType(riskProductsSelected));\r\n  const partyOptions = useSelector(selectPartyOptions);\r\n  const countries = riskFieldOptionsByType?.countryOfOrigin ? riskFieldOptionsByType.countryOfOrigin : [];\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getRiskProducts());\r\n      dispatch(getClients({ size: 1000 }));\r\n      dispatch(getInsureds({ size: 1000 }));\r\n      dispatch(getReinsureds({ size: 1000 }));\r\n\r\n      // cleanup\r\n      return () => {\r\n        dispatch(resetRiskProduct());\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleChangeProductType = (name, value) => {\r\n    const type = value === '__placeholder__' ? '' : value;\r\n\r\n    dispatch(selectRiskProduct(type));\r\n    if (type && (utils.generic.isInvalidOrEmptyArray(riskDefinitionsFieldsByType) || utils.generic.isInvalidOrEmptyArray(countries))) {\r\n      dispatch(getRiskDefinitions(type));\r\n    }\r\n  };\r\n\r\n  return (\r\n    <AddRiskContainerView\r\n      productList={riskProducts}\r\n      productSelected={riskProductsSelected}\r\n      fields={utils.risk.parseFields(riskDefinitionsFieldsByType, {\r\n        ...partyOptions,\r\n        countryOfOrigin: countries,\r\n      })}\r\n      hasCountryOfOrigin={countries.length ? true : false}\r\n      isLoading={riskProductsLoading}\r\n      handleClose={handleClose}\r\n      handleChangeProductType={handleChangeProductType}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}