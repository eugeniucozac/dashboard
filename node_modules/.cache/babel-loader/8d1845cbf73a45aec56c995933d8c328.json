{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { authLogout } from 'stores';\nimport * as utils from 'utils';\nexport var getCheckSigningCaseHistory = function getCheckSigningCaseHistory() {\n  var _ref = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {},\n      processIdData = _ref.processIdData;\n\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.getCheckSigningCaseHistory'\n    };\n    var processId = processIdData;\n    dispatch(getCheckSigningCaseHistoryRequest());\n    dispatch(getCheckSigningCaseHistoryLoading(true));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: \"checksigning/task/history/\".concat(processId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      return utils.api.handleNewData(data);\n    }).then(function (json) {\n      dispatch(getCheckSigningCaseHistorySuccess(json));\n      return json;\n    }).catch(function (error) {\n      dispatch(getCheckSigningCaseHistoryFailure(error, defaultError));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error;\n    }).finally(function () {\n      dispatch(getCheckSigningCaseHistoryLoading(false));\n    });\n  };\n};\nexport var getCheckSigningCaseHistoryRequest = function getCheckSigningCaseHistoryRequest() {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_REQUEST'\n  };\n};\nexport var getCheckSigningCaseHistorySuccess = function getCheckSigningCaseHistorySuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_SUCCESS',\n    data: data\n  };\n};\nexport var getCheckSigningCaseHistoryFailure = function getCheckSigningCaseHistoryFailure(error, defaultError) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_FAILURE',\n    error: _objectSpread(_objectSpread({}, error), defaultError)\n  };\n};\nexport var getCheckSigningCaseHistoryLoading = function getCheckSigningCaseHistoryLoading(loading) {\n  return {\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_LOADING',\n    payload: loading\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getCheckSigningCaseHistory.js"],"names":["authLogout","utils","getCheckSigningCaseHistory","processIdData","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","processId","getCheckSigningCaseHistoryRequest","getCheckSigningCaseHistoryLoading","api","get","token","accessToken","bpmService","path","then","response","handleResponse","data","handleNewData","json","getCheckSigningCaseHistorySuccess","catch","error","getCheckSigningCaseHistoryFailure","handleUnauthorized","finally","type","loading","payload"],"mappings":";AAAA,SAASA,UAAT,QAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,0BAA0B,GACrC,SADWA,0BACX;AAAA,iFAAqB,EAArB;AAAA,MAAGC,aAAH,QAAGA,aAAH;;AAAA,SACA,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAMlBA,QAAQ,EANU;AAAA,QAEZC,IAFY,aAEpBC,IAFoB,CAEZD,IAFY;AAAA,QAIVE,QAJU,aAGpBC,MAHoB,CAIlBC,IAJkB,CAIVF,QAJU;;AAQtB,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAGA,QAAMC,SAAS,GAAGV,aAAlB;AACAC,IAAAA,QAAQ,CAACU,iCAAiC,EAAlC,CAAR;AACAV,IAAAA,QAAQ,CAACW,iCAAiC,CAAC,IAAD,CAAlC,CAAR;AAEA,WAAOd,KAAK,CAACe,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEZ,IAAI,CAACa,WADT;AAEHX,MAAAA,QAAQ,EAAEA,QAAQ,CAACY,UAFhB;AAGHC,MAAAA,IAAI,sCAA+BR,SAA/B;AAHD,KADA,EAMJS,IANI,CAMC,UAACC,QAAD;AAAA,aAActB,KAAK,CAACe,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUxB,KAAK,CAACe,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdvB,MAAAA,QAAQ,CAACwB,iCAAiC,CAACD,IAAD,CAAlC,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,KAAD,EAAW;AAChB1B,MAAAA,QAAQ,CAAC2B,iCAAiC,CAACD,KAAD,EAAQnB,YAAR,CAAlC,CAAR;AACAV,MAAAA,KAAK,CAACe,GAAN,CAAUgB,kBAAV,CAA6BF,KAA7B,EAAoC1B,QAApC,EAA8CJ,UAA9C;AACA,aAAO8B,KAAP;AACD,KAhBI,EAiBJG,OAjBI,CAiBI,YAAM;AACb7B,MAAAA,QAAQ,CAACW,iCAAiC,CAAC,KAAD,CAAlC,CAAR;AACD,KAnBI,CAAP;AAoBD,GApCD;AAAA,CADK;AAuCP,OAAO,IAAMD,iCAAiC,GAAG,SAApCA,iCAAoC,GAAM;AACrD,SAAO;AACLoB,IAAAA,IAAI,EAAE;AADD,GAAP;AAGD,CAJM;AAMP,OAAO,IAAMN,iCAAiC,GAAG,SAApCA,iCAAoC,CAACH,IAAD,EAAU;AACzD,SAAO;AACLS,IAAAA,IAAI,EAAE,uDADD;AAELT,IAAAA,IAAI,EAAJA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,iCAAiC,GAAG,SAApCA,iCAAoC,CAACD,KAAD,EAAQnB,YAAR,EAAyB;AACxE,SAAO;AACLuB,IAAAA,IAAI,EAAE,uDADD;AAELJ,IAAAA,KAAK,kCACAA,KADA,GAEAnB,YAFA;AAFA,GAAP;AAOD,CARM;AAUP,OAAO,IAAMI,iCAAiC,GAAG,SAApCA,iCAAoC,CAACoB,OAAD,EAAa;AAC5D,SAAO;AACLD,IAAAA,IAAI,EAAE,uDADD;AAELE,IAAAA,OAAO,EAAED;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getCheckSigningCaseHistory =\r\n  ({ processIdData } = {}) =>\r\n  (dispatch, getState) => {\r\n    const {\r\n      user: { auth },\r\n      config: {\r\n        vars: { endpoint },\r\n      },\r\n    } = getState();\r\n\r\n    const defaultError = {\r\n      file: 'stores/premiumProcessing.actions.getCheckSigningCaseHistory',\r\n    };\r\n    const processId = processIdData;\r\n    dispatch(getCheckSigningCaseHistoryRequest());\r\n    dispatch(getCheckSigningCaseHistoryLoading(true));\r\n\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.bpmService,\r\n        path: `checksigning/task/history/${processId}`,\r\n      })\r\n      .then((response) => utils.api.handleResponse(response))\r\n      .then((data) => utils.api.handleNewData(data))\r\n      .then((json) => {\r\n        dispatch(getCheckSigningCaseHistorySuccess(json));\r\n        return json;\r\n      })\r\n      .catch((error) => {\r\n        dispatch(getCheckSigningCaseHistoryFailure(error, defaultError));\r\n        utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n        return error;\r\n      })\r\n      .finally(() => {\r\n        dispatch(getCheckSigningCaseHistoryLoading(false));\r\n      });\r\n  };\r\n\r\nexport const getCheckSigningCaseHistoryRequest = () => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_REQUEST',\r\n  };\r\n};\r\n\r\nexport const getCheckSigningCaseHistorySuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_SUCCESS',\r\n    data,\r\n  };\r\n};\r\n\r\nexport const getCheckSigningCaseHistoryFailure = (error, defaultError) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_FAILURE',\r\n    error: {\r\n      ...error,\r\n      ...defaultError,\r\n    },\r\n  };\r\n};\r\n\r\nexport const getCheckSigningCaseHistoryLoading = (loading) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_LOADING',\r\n    payload: loading,\r\n  };\r\n};"]},"metadata":{},"sourceType":"module"}