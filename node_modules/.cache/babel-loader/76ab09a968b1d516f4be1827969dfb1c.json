{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\AddQuoteBind\\\\AddQuoteBind.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux'; // app\n\nimport { showModal } from 'stores';\nimport { Button, Translate, FormGrid, Tooltip } from 'components';\nimport styles from './AddQuoteBind.styles'; // mui\n\nimport { makeStyles } from '@material-ui/core/styles';\nimport MenuItem from '@material-ui/core/MenuItem';\nimport FormControl from '@material-ui/core/FormControl';\nimport Select from '@material-ui/core/Select';\nimport AddIcon from '@material-ui/icons/Add';\nimport WarningIcon from '@material-ui/icons/Warning';\nimport ErrorIcon from '@material-ui/icons/Error';\nimport { Box } from '@material-ui/core';\nimport { PRODUCT_STATUS_ERROR, PRODUCT_STATUS_WARN, PRODUCT_STATUS_OK } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nvar useStyles = makeStyles(function (theme) {\n  return {\n    formControl: {\n      margin: theme.spacing(1),\n      minWidth: 120\n    },\n    selectEmpty: {\n      marginTop: theme.spacing(2)\n    }\n  };\n});\n\nvar AddQuoteBind = function AddQuoteBind(_ref) {\n  _s();\n\n  var _products$;\n\n  var products = _ref.products;\n  var classes = useStyles();\n  var dispatch = useDispatch();\n\n  var _useState = useState(''),\n      _useState2 = _slicedToArray(_useState, 2),\n      product = _useState2[0],\n      setProduct = _useState2[1];\n\n  var cssClasses = makeStyles(styles, {\n    name: 'AddQuoteBind'\n  })();\n  useEffect(function () {\n    if ((products === null || products === void 0 ? void 0 : products.length) === 1) {\n      setProduct(products === null || products === void 0 ? void 0 : products[0]);\n    }\n  }, [products, products === null || products === void 0 ? void 0 : products.length]);\n\n  var handleChange = function handleChange(event) {\n    setProduct(event.target.value);\n  };\n\n  var productStatus = (product === null || product === void 0 ? void 0 : product.status) || PRODUCT_STATUS_OK;\n  var isDisabled = product ? productStatus === PRODUCT_STATUS_ERROR ? true : false : true;\n  var addButtonIcon = productStatus === PRODUCT_STATUS_OK ? AddIcon : productStatus === PRODUCT_STATUS_WARN ? WarningIcon : ErrorIcon; // ADD_EDIT_QUOTE_BIND\n\n  var handleAddQuoteBind = function handleAddQuoteBind() {\n    dispatch(showModal({\n      component: 'ADD_EDIT_QUOTE_BIND',\n      props: {\n        title: product.label,\n        fullWidth: true,\n        disableBackdropClick: true,\n        enableFullScreen: true,\n        maxWidth: 'xl',\n        componentProps: {\n          product: product\n        }\n      }\n    }));\n  };\n\n  return /*#__PURE__*/_jsxDEV(FormGrid, {\n    container: true,\n    spacing: 2,\n    children: /*#__PURE__*/_jsxDEV(FormGrid, {\n      item: true,\n      xs: 12,\n      children: [/*#__PURE__*/_jsxDEV(FormControl, {\n        className: classes.formControl,\n        children: (products === null || products === void 0 ? void 0 : products.length) === 1 ? /*#__PURE__*/_jsxDEV(Box, {\n          className: cssClasses.defaultMenuItem,\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            children: products === null || products === void 0 ? void 0 : (_products$ = products[0]) === null || _products$ === void 0 ? void 0 : _products$.label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 76,\n            columnNumber: 15\n          }, _this), ' ']\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 75,\n          columnNumber: 13\n        }, _this) : /*#__PURE__*/_jsxDEV(Select, {\n          labelId: \"select-product\",\n          name: \"select-product\",\n          displayEmpty: true,\n          id: \"select-product\",\n          value: product,\n          onChange: handleChange,\n          label: \"Product\",\n          disabled: (products === null || products === void 0 ? void 0 : products.length) > 0 ? false : true,\n          style: {\n            width: 200\n          },\n          children: [/*#__PURE__*/_jsxDEV(MenuItem, {\n            value: \"\",\n            disabled: true,\n            children: /*#__PURE__*/_jsxDEV(\"em\", {\n              children: \"Select Product\"\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 93,\n              columnNumber: 17\n            }, _this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 92,\n            columnNumber: 15\n          }, _this), products.map(function (product) {\n            return /*#__PURE__*/_jsxDEV(MenuItem, {\n              value: product,\n              children: product.label\n            }, product.value, false, {\n              fileName: _jsxFileName,\n              lineNumber: 96,\n              columnNumber: 17\n            }, _this);\n          })]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 79,\n          columnNumber: 13\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, _this), /*#__PURE__*/_jsxDEV(Tooltip, {\n        title: product === null || product === void 0 ? void 0 : product.message,\n        placement: \"top\",\n        rich: true,\n        children: /*#__PURE__*/_jsxDEV(Button, {\n          style: {\n            marginTop: 8\n          },\n          icon: addButtonIcon,\n          color: \"primary\",\n          size: \"small\",\n          text: /*#__PURE__*/_jsxDEV(Translate, {\n            label: \"risks.addRisk\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 110,\n            columnNumber: 19\n          }, _this),\n          \"data-testid\": \"risk-add-button\",\n          onClick: function onClick() {\n            return handleAddQuoteBind();\n          },\n          disabled: isDisabled\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 105,\n          columnNumber: 11\n        }, _this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 104,\n        columnNumber: 9\n      }, _this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 72,\n      columnNumber: 7\n    }, _this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 71,\n    columnNumber: 5\n  }, _this);\n};\n\n_s(AddQuoteBind, \"IJUlxQxcR/tcdDvAFLIi35I6vak=\", false, function () {\n  return [useStyles, useDispatch];\n});\n\nAddQuoteBind.displayName = \"AddQuoteBind\";\n_c = AddQuoteBind;\nAddQuoteBind.propTypes = {\n  products: PropTypes.array.isRequired\n};\nAddQuoteBind.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"AddQuoteBind\",\n  \"props\": {\n    \"products\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\nexport default AddQuoteBind;\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\AddQuoteBind\\\\AddQuoteBind.js\"] = {\n    name: \"AddQuoteBind\",\n    docgenInfo: AddQuoteBind.__docgenInfo,\n    path: \"src\\\\components\\\\AddQuoteBind\\\\AddQuoteBind.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"AddQuoteBind\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/AddQuoteBind/AddQuoteBind.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","showModal","Button","Translate","FormGrid","Tooltip","styles","makeStyles","MenuItem","FormControl","Select","AddIcon","WarningIcon","ErrorIcon","Box","PRODUCT_STATUS_ERROR","PRODUCT_STATUS_WARN","PRODUCT_STATUS_OK","useStyles","theme","formControl","margin","spacing","minWidth","selectEmpty","marginTop","AddQuoteBind","products","classes","dispatch","product","setProduct","cssClasses","name","length","handleChange","event","target","value","productStatus","status","isDisabled","addButtonIcon","handleAddQuoteBind","component","props","title","label","fullWidth","disableBackdropClick","enableFullScreen","maxWidth","componentProps","defaultMenuItem","width","map","message","propTypes","array","isRequired"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\n\r\n// app\r\nimport { showModal } from 'stores';\r\nimport { Button, Translate, FormGrid, Tooltip } from 'components';\r\nimport styles from './AddQuoteBind.styles';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core/styles';\r\nimport MenuItem from '@material-ui/core/MenuItem';\r\nimport FormControl from '@material-ui/core/FormControl';\r\nimport Select from '@material-ui/core/Select';\r\nimport AddIcon from '@material-ui/icons/Add';\r\nimport WarningIcon from '@material-ui/icons/Warning';\r\nimport ErrorIcon from '@material-ui/icons/Error';\r\nimport { Box } from '@material-ui/core';\r\n\r\nimport { PRODUCT_STATUS_ERROR, PRODUCT_STATUS_WARN, PRODUCT_STATUS_OK } from 'consts';\r\n\r\nconst useStyles = makeStyles((theme) => ({\r\n  formControl: {\r\n    margin: theme.spacing(1),\r\n    minWidth: 120,\r\n  },\r\n  selectEmpty: {\r\n    marginTop: theme.spacing(2),\r\n  },\r\n}));\r\n\r\nconst AddQuoteBind = ({ products }) => {\r\n  const classes = useStyles();\r\n  const dispatch = useDispatch();\r\n  const [product, setProduct] = useState('');\r\n  const cssClasses = makeStyles(styles, { name: 'AddQuoteBind' })();\r\n\r\n  useEffect(() => {\r\n    if (products?.length === 1) {\r\n      setProduct(products?.[0]);\r\n    }\r\n  }, [products, products?.length]);\r\n\r\n  const handleChange = (event) => {\r\n    setProduct(event.target.value);\r\n  };\r\n\r\n  const productStatus = product?.status || PRODUCT_STATUS_OK;\r\n  const isDisabled = product ? (productStatus === PRODUCT_STATUS_ERROR ? true : false) : true;\r\n  const addButtonIcon = productStatus === PRODUCT_STATUS_OK ? AddIcon : productStatus === PRODUCT_STATUS_WARN ? WarningIcon : ErrorIcon;\r\n\r\n  // ADD_EDIT_QUOTE_BIND\r\n  const handleAddQuoteBind = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_EDIT_QUOTE_BIND',\r\n        props: {\r\n          title: product.label,\r\n          fullWidth: true,\r\n          disableBackdropClick: true,\r\n          enableFullScreen: true,\r\n          maxWidth: 'xl',\r\n          componentProps: {\r\n            product,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n  return (\r\n    <FormGrid container spacing={2}>\r\n      <FormGrid item xs={12}>\r\n        <FormControl className={classes.formControl}>\r\n          {products?.length === 1 ? (\r\n            <Box className={cssClasses.defaultMenuItem}>\r\n              <MenuItem>{products?.[0]?.label}</MenuItem>{' '}\r\n            </Box>\r\n          ) : (\r\n            <Select\r\n              labelId=\"select-product\"\r\n              name=\"select-product\"\r\n              displayEmpty\r\n              id=\"select-product\"\r\n              value={product}\r\n              onChange={handleChange}\r\n              label=\"Product\"\r\n              disabled={products?.length > 0 ? false : true}\r\n              style={{\r\n                width: 200,\r\n              }}\r\n            >\r\n              <MenuItem value=\"\" disabled>\r\n                <em>Select Product</em>\r\n              </MenuItem>\r\n              {products.map((product) => (\r\n                <MenuItem key={product.value} value={product}>\r\n                  {product.label}\r\n                </MenuItem>\r\n              ))}\r\n            </Select>\r\n          )}\r\n        </FormControl>\r\n\r\n        <Tooltip title={product?.message} placement=\"top\" rich>\r\n          <Button\r\n            style={{ marginTop: 8 }}\r\n            icon={addButtonIcon}\r\n            color=\"primary\"\r\n            size=\"small\"\r\n            text={<Translate label=\"risks.addRisk\" />}\r\n            data-testid=\"risk-add-button\"\r\n            onClick={() => handleAddQuoteBind()}\r\n            disabled={isDisabled}\r\n          />\r\n        </Tooltip>\r\n      </FormGrid>\r\n    </FormGrid>\r\n  );\r\n};\r\n\r\nAddQuoteBind.propTypes = {\r\n  products: PropTypes.array.isRequired,\r\n};\r\n\r\nexport default AddQuoteBind;\r\n"]},"metadata":{},"sourceType":"module"}