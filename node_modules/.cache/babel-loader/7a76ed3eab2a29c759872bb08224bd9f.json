{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\forms\\\\ClaimsRegisterNewLoss\\\\ClaimsRegisterNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { RegisterNewLossFixedBottomBar, ClaimsEnterLossInformation, LinkSearchPolicy, RegisterClaimCardInformation, ClaimsAcknowledgement } from 'modules';\nimport { selectCatCodes, getCatCodes, getComplexityValues, getReferralValues, getBEAdjuster, getClaimBordereauPeriods, getPriorityLevels, getLossQualifiers, selectLossId } from 'stores';\nimport * as utils from 'utils';\nimport styles from './ClaimsRegisterNewLoss.style';\nimport * as constants from 'consts';\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsRegisterNewLossView.propTypes = {\n  activeStep: PropTypes.number.isRequired,\n  setActiveStep: PropTypes.func.isRequired,\n  handleStep: PropTypes.func.isRequired,\n  steps: PropTypes.array.isRequired,\n  progress: PropTypes.number.isRequired,\n  isFormsEdited: PropTypes.array.isRequired,\n  isAllStepsCompleted: PropTypes.bool.isRequired,\n  handleFormStatus: PropTypes.func.isRequired,\n  handleNext: PropTypes.func.isRequired,\n  handleBack: PropTypes.func.isRequired,\n  handleSave: PropTypes.func.isRequired,\n  setFormEditedStatus: PropTypes.func.isRequired,\n  setSaveStatus: PropTypes.func.isRequired,\n  saveStatus: PropTypes.number.isRequired\n};\nexport default function ClaimsRegisterNewLossView(_ref) {\n  _s();\n\n  var _this = this;\n\n  var activeStep = _ref.activeStep,\n      setActiveStep = _ref.setActiveStep,\n      handleStep = _ref.handleStep,\n      steps = _ref.steps,\n      progress = _ref.progress,\n      isFormsEdited = _ref.isFormsEdited,\n      isAllStepsCompleted = _ref.isAllStepsCompleted,\n      _handleNext = _ref.handleNext,\n      handleFormStatus = _ref.handleFormStatus,\n      _handleBack = _ref.handleBack,\n      _handleSave = _ref.handleSave,\n      setFormEditedStatus = _ref.setFormEditedStatus,\n      saveStatus = _ref.saveStatus,\n      setSaveStatus = _ref.setSaveStatus;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsRegisterNewLoss'\n  })();\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var catCodes = useSelector(selectCatCodes);\n  var lossInformation = useSelector(selectLossId);\n  var dispatch = useDispatch();\n\n  var getAllReferentialData = function getAllReferentialData() {\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\n      dispatch(getCatCodes());\n    }\n  };\n\n  useEffect(function () {\n    getAllReferentialData();\n    dispatch(getComplexityValues());\n    dispatch(getReferralValues());\n    dispatch(getLossQualifiers());\n    dispatch(getBEAdjuster());\n    dispatch(getClaimBordereauPeriods());\n    dispatch(getPriorityLevels());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var stepContent = function stepContent(index) {\n    var _isFormsEdited$index, _isFormsEdited$index2, _isFormsEdited$index3, _isFormsEdited$index4, _isFormsEdited$index5, _isFormsEdited$index6;\n\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n            policyRef: policyRef,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleNext: function handleNext() {\n              return _handleNext(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            activeStep: activeStep,\n            lastStep: false,\n            context: constants.DMS_CONTEXT_LOSS,\n            saveStatus: saveStatus,\n            handleBack: _handleBack\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 73,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 72,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(LinkSearchPolicy, {\n            policyRef: policyRef,\n            setPolicyRef: setPolicyRef,\n            isFormsEdited: isFormsEdited,\n            setFormEditedStatus: setFormEditedStatus,\n            activeStep: activeStep,\n            setActiveStep: setActiveStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: _handleBack,\n            handleSave: _handleSave,\n            handleNext: _handleNext,\n            save: (_isFormsEdited$index = isFormsEdited[index]) === null || _isFormsEdited$index === void 0 ? void 0 : _isFormsEdited$index.formEditedStatus,\n            index: index,\n            saveStatus: saveStatus,\n            setSaveStatus: setSaveStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 90,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 89,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RegisterClaimCardInformation, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: _handleBack,\n            handleSave: _handleSave,\n            handleNext: _handleNext,\n            lossInformation: lossInformation,\n            save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index2 = isFormsEdited[index]) === null || _isFormsEdited$index2 === void 0 ? void 0 : _isFormsEdited$index2.formEditedStatus,\n            index: index\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 119,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleBack: function handleBack() {\n              _handleBack(index);\n            },\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return _handleNext(index);\n            },\n            save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index3 = isFormsEdited[index]) === null || _isFormsEdited$index3 === void 0 ? void 0 : _isFormsEdited$index3.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 138,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 134,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {}, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 151,\n            columnNumber: 13\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 150,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(\"div\", {\n          children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n            onClick: function onClick() {\n              return handleFormStatus(index);\n            },\n            children: [\" \", (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index4 = isFormsEdited[index]) === null || _isFormsEdited$index4 === void 0 ? void 0 : _isFormsEdited$index4.formEditedStatus) ? \"Dirty : true\" : \"Dirty : false\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(\"h1\", {\n            children: [\" \", (isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index5 = isFormsEdited[index]) === null || _isFormsEdited$index5 === void 0 ? void 0 : _isFormsEdited$index5.isSubmitted) ? \"isSubmitted : true\" : \"isSubmitted : false\"]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 166,\n            columnNumber: 13\n          }, _this), /*#__PURE__*/_jsxDEV(RegisterNewLossFixedBottomBar, {\n            activeStep: activeStep,\n            onSave: function onSave() {},\n            isAllStepsCompleted: isAllStepsCompleted,\n            handleSave: function handleSave() {\n              _handleSave(index);\n            },\n            handleNextSubmit: function handleNextSubmit() {\n              return _handleNext(index);\n            },\n            save: isFormsEdited === null || isFormsEdited === void 0 ? void 0 : (_isFormsEdited$index6 = isFormsEdited[index]) === null || _isFormsEdited$index6 === void 0 ? void 0 : _isFormsEdited$index6.formEditedStatus\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 167,\n            columnNumber: 13\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 164,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [/*#__PURE__*/_jsxDEV(Stepper, {\n      alternativeLabel: true,\n      activeStep: activeStep,\n      \"data-testid\": \"LinearStepper\",\n      children: steps.map(function (label, index) {\n        return /*#__PURE__*/_jsxDEV(Step, {\n          onClick: function onClick() {\n            return handleStep(index);\n          },\n          children: /*#__PURE__*/_jsxDEV(StepLabel, {\n            StepIconProps: {\n              classes: {\n                root: classes.iconContainer\n              }\n            },\n            children: label\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 186,\n            columnNumber: 13\n          }, _this)\n        }, label, false, {\n          fileName: _jsxFileName,\n          lineNumber: 185,\n          columnNumber: 11\n        }, _this);\n      })\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 182,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(LinearProgress, {\n      variant: \"determinate\",\n      value: progress,\n      className: classes.linearProgress\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 196,\n      columnNumber: 7\n    }, this), stepContent(activeStep)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 181,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsRegisterNewLossView, \"3j02yAzVfg/73cIBtbJ4q0awMeQ=\", false, function () {\n  return [useSelector, useSelector, useDispatch];\n});\n\n_c = ClaimsRegisterNewLossView;\n;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsRegisterNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/forms/ClaimsRegisterNewLoss/ClaimsRegisterNewLoss.view.js"],"names":["React","useEffect","useState","PropTypes","useDispatch","useSelector","RegisterNewLossFixedBottomBar","ClaimsEnterLossInformation","LinkSearchPolicy","RegisterClaimCardInformation","ClaimsAcknowledgement","selectCatCodes","getCatCodes","getComplexityValues","getReferralValues","getBEAdjuster","getClaimBordereauPeriods","getPriorityLevels","getLossQualifiers","selectLossId","utils","styles","constants","LinearProgress","Stepper","Step","StepLabel","makeStyles","ClaimsRegisterNewLossView","propTypes","activeStep","number","isRequired","setActiveStep","func","handleStep","steps","array","progress","isFormsEdited","isAllStepsCompleted","bool","handleFormStatus","handleNext","handleBack","handleSave","setFormEditedStatus","setSaveStatus","saveStatus","classes","name","policyRef","setPolicyRef","catCodes","lossInformation","dispatch","getAllReferentialData","generic","isInvalidOrEmptyArray","stepContent","index","DMS_CONTEXT_LOSS","formEditedStatus","isSubmitted","map","label","root","iconContainer","linearProgress"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport {useDispatch, useSelector } from 'react-redux';\r\nimport { \r\n  RegisterNewLossFixedBottomBar, \r\n  ClaimsEnterLossInformation, \r\n  LinkSearchPolicy, \r\n  RegisterClaimCardInformation, \r\n  ClaimsAcknowledgement \r\n} from 'modules';\r\n\r\nimport {\r\n  selectCatCodes,\r\n  getCatCodes,\r\n  getComplexityValues, \r\n  getReferralValues,  \r\n  getBEAdjuster, \r\n  getClaimBordereauPeriods,\r\n  getPriorityLevels,\r\n  getLossQualifiers,\r\n  selectLossId\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport styles from './ClaimsRegisterNewLoss.style';\r\nimport * as constants from 'consts';\r\n\r\nimport { LinearProgress, Stepper, Step, StepLabel, makeStyles } from '@material-ui/core';\r\n\r\nClaimsRegisterNewLossView.propTypes = {\r\n  activeStep: PropTypes.number.isRequired,\r\n  setActiveStep: PropTypes.func.isRequired,\r\n  handleStep: PropTypes.func.isRequired,\r\n  steps: PropTypes.array.isRequired,\r\n  progress: PropTypes.number.isRequired,\r\n  isFormsEdited: PropTypes.array.isRequired,\r\n  isAllStepsCompleted: PropTypes.bool.isRequired,\r\n  handleFormStatus: PropTypes.func.isRequired,\r\n  handleNext: PropTypes.func.isRequired,\r\n  handleBack: PropTypes.func.isRequired,\r\n  handleSave: PropTypes.func.isRequired,\r\n  setFormEditedStatus: PropTypes.func.isRequired,\r\n  setSaveStatus: PropTypes.func.isRequired,\r\n  saveStatus: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default function ClaimsRegisterNewLossView({ activeStep, setActiveStep, handleStep, steps, progress, isFormsEdited, isAllStepsCompleted, handleNext, handleFormStatus, handleBack, handleSave, setFormEditedStatus, saveStatus, setSaveStatus }) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsRegisterNewLoss' })();\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const catCodes = useSelector(selectCatCodes);\r\n  const lossInformation = useSelector(selectLossId);\r\n  const dispatch = useDispatch();\r\n  const getAllReferentialData = () => {\r\n    if (utils.generic.isInvalidOrEmptyArray(catCodes)) {\r\n      dispatch(getCatCodes());\r\n    }\r\n  };\r\n\r\n  useEffect(() => {\r\n    getAllReferentialData();\r\n    dispatch(getComplexityValues());\r\n    dispatch(getReferralValues());\r\n    dispatch(getLossQualifiers());\r\n    dispatch(getBEAdjuster());\r\n    dispatch(getClaimBordereauPeriods());\r\n    dispatch(getPriorityLevels());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <div>\r\n            <ClaimsEnterLossInformation\r\n              policyRef={policyRef}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleNext={() => handleNext(index)}\r\n              handleSave={() => { handleSave(index) }}\r\n              activeStep={activeStep}\r\n              lastStep={false}\r\n              context={constants.DMS_CONTEXT_LOSS}\r\n              saveStatus={saveStatus}\r\n              handleBack={handleBack}\r\n            />\r\n        </div>\r\n        );\r\n      case 1:\r\n        return (\r\n\r\n          <div>\r\n            <LinkSearchPolicy\r\n              policyRef={policyRef}\r\n              setPolicyRef={setPolicyRef}\r\n              isFormsEdited={isFormsEdited}\r\n              setFormEditedStatus={setFormEditedStatus}\r\n              activeStep={activeStep}\r\n              setActiveStep={setActiveStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={handleBack}\r\n              handleSave={handleSave}\r\n              handleNext={handleNext}\r\n              save={isFormsEdited[index]?.formEditedStatus}\r\n              index={index}\r\n              saveStatus={saveStatus}\r\n              setSaveStatus={setSaveStatus}\r\n            />\r\n\r\n            {/* <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => { handleBack(index) }}\r\n              handleSave={() => { handleSave(index) }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n            /> */}\r\n          </div>\r\n        );\r\n      case 2:\r\n        return (\r\n          <div>\r\n            <RegisterClaimCardInformation\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={handleBack}\r\n              handleSave={handleSave}\r\n              handleNext={handleNext}\r\n              lossInformation={lossInformation}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n              index={index}\r\n            />\r\n          </div>\r\n        );\r\n      case 3:\r\n        return (\r\n          <div>\r\n            {/* <h1 onClick={() => handleFormStatus(index)}> {isFormsEdited?.[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n            <h1 > {isFormsEdited?.[index]?.isSubmitted ? \"isSubmitted : true\" : \"isSubmitted : false\"}</h1> */}\r\n\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => { handleBack(index) }}\r\n              handleSave={() => { handleSave(index) }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n      case 4:\r\n        return (\r\n          <div>\r\n            <ClaimsAcknowledgement />\r\n            {/* <RegisterNewLossFixedBottomBar\r\n              lastStep={true} activeStep={activeStep}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleBack={() => { handleBack(index) }}\r\n              handleSave={() => { handleSave(index) }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n            /> */}\r\n          </div>\r\n        );\r\n      default:\r\n        return (\r\n          <div>\r\n            <h1 onClick={() => handleFormStatus(index)}> {isFormsEdited?.[index]?.formEditedStatus ? \"Dirty : true\" : \"Dirty : false\"}</h1>\r\n            <h1 > {isFormsEdited?.[index]?.isSubmitted ? \"isSubmitted : true\" : \"isSubmitted : false\"}</h1>\r\n            <RegisterNewLossFixedBottomBar\r\n              activeStep={activeStep}\r\n              onSave={() => { }}\r\n              isAllStepsCompleted={isAllStepsCompleted}\r\n              handleSave={() => { handleSave(index) }}\r\n              handleNextSubmit={() => handleNext(index)}\r\n              save={isFormsEdited?.[index]?.formEditedStatus}\r\n            />\r\n          </div>\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <div>\r\n      <Stepper alternativeLabel activeStep={activeStep} data-testid=\"LinearStepper\"\r\n      >\r\n        {steps.map((label, index) => (\r\n          <Step key={label} onClick={() => handleStep(index)}>\r\n            <StepLabel\r\n              StepIconProps={{\r\n                classes: { root: classes.iconContainer },\r\n              }}\r\n            >\r\n              {label}\r\n            </StepLabel>\r\n          </Step>\r\n        ))}\r\n      </Stepper>\r\n      <LinearProgress variant=\"determinate\" value={progress} className={classes.linearProgress} />\r\n      {stepContent(activeStep)}\r\n    </div>\r\n  );\r\n};\r\n\r\n"]},"metadata":{},"sourceType":"module"}