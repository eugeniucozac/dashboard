{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\DmsWidget\\\\DmsFnolWidget.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty'; //app\n\nimport { TreeView } from 'components';\nimport { selectDmsDocDetails, selectClaimData, selectLossId, selectClaimAssociateWithLoss, getClaimsAssociateWithLoss, getViewTableDocuments, selectDmsWidgetClaimDocs } from 'stores';\nimport config from 'config';\nimport * as utils from 'utils';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function DmsWidget() {\n  _s();\n\n  var _associatedClaims$map, _data$children;\n\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var savedDmsDocList = useSelector(selectDmsDocDetails);\n  var claimData = useSelector(selectClaimData);\n  var associatedClaims = useSelector(selectClaimAssociateWithLoss);\n  var dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\n\n  var _useState = useState([]),\n      _useState2 = _slicedToArray(_useState, 2),\n      filteredData = _useState2[0],\n      setFilteredData = _useState2[1];\n\n  var currentLossDetailId = get(lossInformation, 'lossDetailID');\n  var currentLossRef = get(lossInformation, 'lossRef');\n  var lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\n  var claimsDocDetails = get(savedDmsDocList, 'claimsDocDetails');\n  var currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\n  useEffect(function () {\n    if (currentLossDetailId) {\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\n    }\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var claimRefsArray = associatedClaims === null || associatedClaims === void 0 ? void 0 : (_associatedClaims$map = associatedClaims.map(function (item) {\n    return item.claimReference;\n  })) === null || _associatedClaims$map === void 0 ? void 0 : _associatedClaims$map.filter(function (claimref) {\n    return claimref !== currentClaimRef;\n  });\n\n  var createSortedDocs = function createSortedDocs(docs) {\n    return docs === null || docs === void 0 ? void 0 : docs.sort(function (doc1, doc2) {\n      return new Date(doc1 === null || doc1 === void 0 ? void 0 : doc1.createdDate) - new Date(doc2 === null || doc2 === void 0 ? void 0 : doc2.createdDate);\n    });\n  };\n\n  var lossDocuments = createSortedDocs(lossDocDetails === null || lossDocDetails === void 0 ? void 0 : lossDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  }));\n  var currentClaimDocuments = createSortedDocs(claimsDocDetails === null || claimsDocDetails === void 0 ? void 0 : claimsDocDetails.map(function (doc) {\n    return _objectSpread(_objectSpread({}, doc), {}, {\n      id: doc.documentId,\n      label: doc.documentName,\n      labelInfo: utils.string.t('format.date', {\n        value: {\n          date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n          format: config.ui.format.date.text\n        }\n      })\n    });\n  }));\n  var openedChild = [].concat(_toConsumableArray(lossDocuments), _toConsumableArray(currentClaimRef ? [{\n    id: 'child1',\n    label: (currentClaimDocuments === null || currentClaimDocuments === void 0 ? void 0 : currentClaimDocuments.length) ? \"Claim \".concat(currentClaimRef) : '',\n    labelInfo: '',\n    children: currentClaimDocuments\n  }] : [])); //claimRefsArray?.[0]?.claimId --> need to know why this condition exactly\n\n  var closedChild = claimRefsArray.length > 0 ? claimRefsArray === null || claimRefsArray === void 0 ? void 0 : claimRefsArray.map(function (item) {\n    var _dmsWidgetClaimDocs$i;\n\n    return {\n      id: item,\n      label: item ? \"Claim \".concat(item) : '',\n      labelInfo: '',\n      children: createSortedDocs(dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item]) ? (_dmsWidgetClaimDocs$i = dmsWidgetClaimDocs[item]) === null || _dmsWidgetClaimDocs$i === void 0 ? void 0 : _dmsWidgetClaimDocs$i.map(function (doc) {\n        return _objectSpread(_objectSpread({}, doc), {}, {\n          id: doc.documentId,\n          label: doc.documentName,\n          labelInfo: utils.string.t('format.date', {\n            value: {\n              date: doc === null || doc === void 0 ? void 0 : doc.createdDate,\n              format: config.ui.format.date.text\n            }\n          })\n        });\n      }) : [{}])\n    };\n  }) : [];\n  var rootChildren = [].concat(_toConsumableArray(openedChild), _toConsumableArray(closedChild));\n  var data = {\n    id: 'root',\n    label: (rootChildren === null || rootChildren === void 0 ? void 0 : rootChildren.length) ? \"Loss Reference \".concat(currentLossRef) : '',\n    labelInfo: '',\n    children: rootChildren\n  };\n  var arr = [];\n  data === null || data === void 0 ? void 0 : (_data$children = data.children) === null || _data$children === void 0 ? void 0 : _data$children.forEach(function (child) {\n    if (child.labelInfo) {\n      arr.push(child);\n    } else {\n      var _child$children;\n\n      child === null || child === void 0 ? void 0 : (_child$children = child.children) === null || _child$children === void 0 ? void 0 : _child$children.forEach(function (child) {\n        if (child) {\n          arr.push(child);\n        }\n      });\n    }\n  });\n\n  var handleSelect = function handleSelect(_, nodeIds) {\n    if (nodeIds !== 'root' && nodeIds !== 'child1' && !dmsWidgetClaimDocs.hasOwnProperty(nodeIds)) {\n      dispatch(getViewTableDocuments({\n        dmsWidgetReqParams: [{\n          referenceId: nodeIds,\n          sectionType: 'Claim'\n        }],\n        isFromDmsWidget: true\n      }));\n    }\n  };\n\n  var submitSearch = function submitSearch(query) {\n    var filteredData = createSortedDocs(arr === null || arr === void 0 ? void 0 : arr.filter(function (_ref) {\n      var _ref2;\n\n      var documentName = _ref.documentName,\n          updatedDate = _ref.updatedDate,\n          createdDate = _ref.createdDate,\n          sectionType = _ref.sectionType,\n          referenceId = _ref.referenceId,\n          documentTypeDescription = _ref.documentTypeDescription,\n          createdByName = _ref.createdByName;\n      return !isEmpty((_ref2 = [documentName, updatedDate, createdDate, sectionType, referenceId, documentTypeDescription, createdByName]) === null || _ref2 === void 0 ? void 0 : _ref2.find(function (item) {\n        var _item$toLowerCase;\n\n        return item === null || item === void 0 ? void 0 : (_item$toLowerCase = item.toLowerCase()) === null || _item$toLowerCase === void 0 ? void 0 : _item$toLowerCase.includes(query);\n      }));\n    }));\n    setFilteredData(filteredData);\n  };\n\n  var resetSearch = function resetSearch() {\n    setFilteredData([]);\n  };\n\n  var rowClick = function rowClick(e, doc) {\n    e.preventDefault();\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\n  };\n\n  return /*#__PURE__*/_jsxDEV(TreeView, {\n    handleAccordionClick: handleSelect,\n    treeData: data,\n    rootRef: currentLossRef,\n    widgetTitle: utils.string.t('dms.view.documents.title'),\n    columns: [{\n      header: utils.string.t('dms.upload.file'),\n      flex: '0.8',\n      ml: '8px'\n    }, {\n      header: utils.string.t('dms.upload.uploadedOn'),\n      flex: '0.375'\n    }],\n    defaultExpanded: ['child1', 'root'],\n    filteredData: filteredData,\n    handlers: {\n      submitSearch: submitSearch,\n      resetSearch: resetSearch,\n      rowClick: rowClick\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 157,\n    columnNumber: 5\n  }, this);\n}\n\n_s(DmsWidget, \"JgNfbPEKjpdbQMOTo5TskNfPWpg=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = DmsWidget;\n\nvar _c;\n\n$RefreshReg$(_c, \"DmsWidget\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/DmsWidget/DmsFnolWidget.js"],"names":["React","useEffect","useState","useSelector","useDispatch","get","isEmpty","TreeView","selectDmsDocDetails","selectClaimData","selectLossId","selectClaimAssociateWithLoss","getClaimsAssociateWithLoss","getViewTableDocuments","selectDmsWidgetClaimDocs","config","utils","DmsWidget","dispatch","lossInformation","savedDmsDocList","claimData","associatedClaims","dmsWidgetClaimDocs","filteredData","setFilteredData","currentLossDetailId","currentLossRef","lossDocDetails","claimsDocDetails","currentClaimRef","claimRefsArray","map","item","claimReference","filter","claimref","createSortedDocs","docs","sort","doc1","doc2","Date","createdDate","lossDocuments","doc","id","documentId","label","documentName","labelInfo","string","t","value","date","format","ui","text","currentClaimDocuments","openedChild","length","children","closedChild","hasOwnProperty","generic","isInvalidOrEmptyArray","rootChildren","data","arr","forEach","child","push","handleSelect","_","nodeIds","dmsWidgetReqParams","referenceId","sectionType","isFromDmsWidget","submitSearch","query","updatedDate","documentTypeDescription","createdByName","find","toLowerCase","includes","resetSearch","rowClick","e","preventDefault","dms","dmsDocumentViewLauncher","header","flex","ml"],"mappings":";;;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,OAAOC,GAAP,MAAgB,YAAhB;AACA,OAAOC,OAAP,MAAoB,gBAApB,C,CAEA;;AACA,SAASC,QAAT,QAAyB,YAAzB;AACA,SACEC,mBADF,EAEEC,eAFF,EAGEC,YAHF,EAIEC,4BAJF,EAKEC,0BALF,EAMEC,qBANF,EAOEC,wBAPF,QAQO,QARP;AASA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;;AAEA,eAAe,SAASC,SAAT,GAAqB;AAAA;;AAAA;;AAClC,MAAMC,QAAQ,GAAGd,WAAW,EAA5B;AACA,MAAMe,eAAe,GAAGhB,WAAW,CAACO,YAAD,CAAnC;AACA,MAAMU,eAAe,GAAGjB,WAAW,CAACK,mBAAD,CAAnC;AACA,MAAMa,SAAS,GAAGlB,WAAW,CAACM,eAAD,CAA7B;AACA,MAAMa,gBAAgB,GAAGnB,WAAW,CAACQ,4BAAD,CAApC;AACA,MAAMY,kBAAkB,GAAGpB,WAAW,CAACW,wBAAD,CAAtC;;AANkC,kBAOMZ,QAAQ,CAAC,EAAD,CAPd;AAAA;AAAA,MAO3BsB,YAP2B;AAAA,MAObC,eAPa;;AAQlC,MAAMC,mBAAmB,GAAGrB,GAAG,CAACc,eAAD,EAAkB,cAAlB,CAA/B;AACA,MAAMQ,cAAc,GAAGtB,GAAG,CAACc,eAAD,EAAkB,SAAlB,CAA1B;AACA,MAAMS,cAAc,GAAGvB,GAAG,CAACe,eAAD,EAAkB,gBAAlB,CAA1B;AACA,MAAMS,gBAAgB,GAAGxB,GAAG,CAACe,eAAD,EAAkB,kBAAlB,CAA5B;AACA,MAAMU,eAAe,GAAGzB,GAAG,CAACgB,SAAD,EAAY,UAAZ,CAAH,IAA8BhB,GAAG,CAACgB,SAAD,EAAY,gBAAZ,CAAzD;AAEApB,EAAAA,SAAS,CAAC,YAAM;AACd,QAAIyB,mBAAJ,EAAyB;AACvBR,MAAAA,QAAQ,CAACN,0BAA0B,CAACc,mBAAD,CAA3B,CAAR;AACD;AACF,GAJQ,EAIN,CAACA,mBAAD,CAJM,CAAT,CAdkC,CAkBP;;AAE3B,MAAMK,cAAc,GAAGT,gBAAH,aAAGA,gBAAH,gDAAGA,gBAAgB,CAAEU,GAAlB,CAAsB,UAACC,IAAD;AAAA,WAAUA,IAAI,CAACC,cAAf;AAAA,GAAtB,CAAH,0DAAG,sBAAsDC,MAAtD,CAA6D,UAACC,QAAD;AAAA,WAAcA,QAAQ,KAAKN,eAA3B;AAAA,GAA7D,CAAvB;;AAEA,MAAMO,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACC,IAAD;AAAA,WAAUA,IAAV,aAAUA,IAAV,uBAAUA,IAAI,CAAEC,IAAN,CAAW,UAACC,IAAD,EAAOC,IAAP;AAAA,aAAgB,IAAIC,IAAJ,CAASF,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEG,WAAf,IAA8B,IAAID,IAAJ,CAASD,IAAT,aAASA,IAAT,uBAASA,IAAI,CAAEE,WAAf,CAA9C;AAAA,KAAX,CAAV;AAAA,GAAzB;;AAEA,MAAMC,aAAa,GAAGP,gBAAgB,CACpCT,cADoC,aACpCA,cADoC,uBACpCA,cAAc,CAAEI,GAAhB,CAAoB,UAACa,GAAD,EAAS;AAC3B,2CACKA,GADL;AAEEC,MAAAA,EAAE,EAAED,GAAG,CAACE,UAFV;AAGEC,MAAAA,KAAK,EAAEH,GAAG,CAACI,YAHb;AAIEC,MAAAA,SAAS,EAAElC,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAET,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEF,WAAb;AAA0BY,UAAAA,MAAM,EAAExC,MAAM,CAACyC,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAAxD;AAAT,OAA9B;AAJb;AAMD,GAPD,CADoC,CAAtC;AAWA,MAAMC,qBAAqB,GAAGrB,gBAAgB,CAC5CR,gBAD4C,aAC5CA,gBAD4C,uBAC5CA,gBAAgB,CAAEG,GAAlB,CAAsB,UAACa,GAAD,EAAS;AAC7B,2CACKA,GADL;AAEEC,MAAAA,EAAE,EAAED,GAAG,CAACE,UAFV;AAGEC,MAAAA,KAAK,EAAEH,GAAG,CAACI,YAHb;AAIEC,MAAAA,SAAS,EAAElC,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEC,QAAAA,KAAK,EAAE;AAAEC,UAAAA,IAAI,EAAET,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEF,WAAb;AAA0BY,UAAAA,MAAM,EAAExC,MAAM,CAACyC,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAAxD;AAAT,OAA9B;AAJb;AAMD,GAPD,CAD4C,CAA9C;AAWA,MAAME,WAAW,gCACZf,aADY,sBAEXd,eAAe,GACf,CACE;AACEgB,IAAAA,EAAE,EAAE,QADN;AAEEE,IAAAA,KAAK,EAAE,CAAAU,qBAAqB,SAArB,IAAAA,qBAAqB,WAArB,YAAAA,qBAAqB,CAAEE,MAAvB,oBAAyC9B,eAAzC,IAA6D,EAFtE;AAGEoB,IAAAA,SAAS,EAAE,EAHb;AAIEW,IAAAA,QAAQ,EAAEH;AAJZ,GADF,CADe,GASf,EAXW,EAAjB,CA9CkC,CA4DlC;;AACA,MAAMI,WAAW,GACf/B,cAAc,CAAC6B,MAAf,GAAwB,CAAxB,GACI7B,cADJ,aACIA,cADJ,uBACIA,cAAc,CAAEC,GAAhB,CAAoB,UAACC,IAAD,EAAU;AAAA;;AAC5B,WAAO;AACLa,MAAAA,EAAE,EAAEb,IADC;AAELe,MAAAA,KAAK,EAAEf,IAAI,mBAAYA,IAAZ,IAAqB,EAF3B;AAGLiB,MAAAA,SAAS,EAAE,EAHN;AAILW,MAAAA,QAAQ,EAAExB,gBAAgB,CACxBd,kBAAkB,CAACwC,cAAnB,CAAkC9B,IAAlC,KAA2C,CAACjB,KAAK,CAACgD,OAAN,CAAcC,qBAAd,CAAoC1C,kBAAkB,CAACU,IAAD,CAAtD,CAA5C,4BACIV,kBAAkB,CAACU,IAAD,CADtB,0DACI,sBAA0BD,GAA1B,CAA8B,UAACa,GAAD,EAAS;AACrC,+CACKA,GADL;AAEEC,UAAAA,EAAE,EAAED,GAAG,CAACE,UAFV;AAGEC,UAAAA,KAAK,EAAEH,GAAG,CAACI,YAHb;AAIEC,UAAAA,SAAS,EAAElC,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,aAAf,EAA8B;AAAEC,YAAAA,KAAK,EAAE;AAAEC,cAAAA,IAAI,EAAET,GAAF,aAAEA,GAAF,uBAAEA,GAAG,CAAEF,WAAb;AAA0BY,cAAAA,MAAM,EAAExC,MAAM,CAACyC,EAAP,CAAUD,MAAV,CAAiBD,IAAjB,CAAsBG;AAAxD;AAAT,WAA9B;AAJb;AAMD,OAPD,CADJ,GASI,CAAC,EAAD,CAVoB;AAJrB,KAAP;AAiBD,GAlBD,CADJ,GAoBI,EArBN;AAuBA,MAAMS,YAAY,gCAAOP,WAAP,sBAAuBG,WAAvB,EAAlB;AAEA,MAAMK,IAAI,GAAG;AACXrB,IAAAA,EAAE,EAAE,MADO;AAEXE,IAAAA,KAAK,EAAE,CAAAkB,YAAY,SAAZ,IAAAA,YAAY,WAAZ,YAAAA,YAAY,CAAEN,MAAd,6BAAyCjC,cAAzC,IAA4D,EAFxD;AAGXuB,IAAAA,SAAS,EAAE,EAHA;AAIXW,IAAAA,QAAQ,EAAEK;AAJC,GAAb;AAOA,MAAIE,GAAG,GAAG,EAAV;AACAD,EAAAA,IAAI,SAAJ,IAAAA,IAAI,WAAJ,8BAAAA,IAAI,CAAEN,QAAN,kEAAgBQ,OAAhB,CAAwB,UAACC,KAAD,EAAW;AACjC,QAAIA,KAAK,CAACpB,SAAV,EAAqB;AACnBkB,MAAAA,GAAG,CAACG,IAAJ,CAASD,KAAT;AACD,KAFD,MAEO;AAAA;;AACLA,MAAAA,KAAK,SAAL,IAAAA,KAAK,WAAL,+BAAAA,KAAK,CAAET,QAAP,oEAAiBQ,OAAjB,CAAyB,UAACC,KAAD,EAAW;AAClC,YAAIA,KAAJ,EAAW;AACTF,UAAAA,GAAG,CAACG,IAAJ,CAASD,KAAT;AACD;AACF,OAJD;AAKD;AACF,GAVD;;AAYA,MAAME,YAAY,GAAG,SAAfA,YAAe,CAACC,CAAD,EAAIC,OAAJ,EAAgB;AACnC,QAAIA,OAAO,KAAK,MAAZ,IAAsBA,OAAO,KAAK,QAAlC,IAA8C,CAACnD,kBAAkB,CAACwC,cAAnB,CAAkCW,OAAlC,CAAnD,EAA+F;AAC7FxD,MAAAA,QAAQ,CAACL,qBAAqB,CAAC;AAAE8D,QAAAA,kBAAkB,EAAE,CAAC;AAAEC,UAAAA,WAAW,EAAEF,OAAf;AAAwBG,UAAAA,WAAW,EAAE;AAArC,SAAD,CAAtB;AAAwEC,QAAAA,eAAe,EAAE;AAAzF,OAAD,CAAtB,CAAR;AACD;AACF,GAJD;;AAMA,MAAMC,YAAY,GAAG,SAAfA,YAAe,CAACC,KAAD,EAAW;AAC9B,QAAMxD,YAAY,GAAGa,gBAAgB,CACnC+B,GADmC,aACnCA,GADmC,uBACnCA,GAAG,CAAEjC,MAAL,CACE;AAAA;;AAAA,UAAGc,YAAH,QAAGA,YAAH;AAAA,UAAiBgC,WAAjB,QAAiBA,WAAjB;AAAA,UAA8BtC,WAA9B,QAA8BA,WAA9B;AAAA,UAA2CkC,WAA3C,QAA2CA,WAA3C;AAAA,UAAwDD,WAAxD,QAAwDA,WAAxD;AAAA,UAAqEM,uBAArE,QAAqEA,uBAArE;AAAA,UAA8FC,aAA9F,QAA8FA,aAA9F;AAAA,aACE,CAAC7E,OAAO,UACN,CAAC2C,YAAD,EAAegC,WAAf,EAA4BtC,WAA5B,EAAyCkC,WAAzC,EAAsDD,WAAtD,EAAmEM,uBAAnE,EAA4FC,aAA5F,CADM,0CACN,MAA4GC,IAA5G,CAAiH,UAACnD,IAAD;AAAA;;AAAA,eAC/GA,IAD+G,aAC/GA,IAD+G,4CAC/GA,IAAI,CAAEoD,WAAN,EAD+G,sDAC/G,kBAAqBC,QAArB,CAA8BN,KAA9B,CAD+G;AAAA,OAAjH,CADM,CADV;AAAA,KADF,CADmC,CAArC;AAUAvD,IAAAA,eAAe,CAACD,YAAD,CAAf;AACD,GAZD;;AAcA,MAAM+D,WAAW,GAAG,SAAdA,WAAc,GAAM;AACxB9D,IAAAA,eAAe,CAAC,EAAD,CAAf;AACD,GAFD;;AAIA,MAAM+D,QAAQ,GAAG,SAAXA,QAAW,CAACC,CAAD,EAAI5C,GAAJ,EAAY;AAC3B4C,IAAAA,CAAC,CAACC,cAAF;AAD2B,QAEnB3C,UAFmB,GAEUF,GAFV,CAEnBE,UAFmB;AAAA,QAEPE,YAFO,GAEUJ,GAFV,CAEPI,YAFO;AAG3BjC,IAAAA,KAAK,CAAC2E,GAAN,CAAUC,uBAAV,CAAkC7C,UAAlC,EAA8CE,YAA9C;AACD,GAJD;;AAMA,sBACE,QAAC,QAAD;AACE,IAAA,oBAAoB,EAAEuB,YADxB;AAEE,IAAA,QAAQ,EAAEL,IAFZ;AAGE,IAAA,OAAO,EAAExC,cAHX;AAIE,IAAA,WAAW,EAAEX,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,0BAAf,CAJf;AAKE,IAAA,OAAO,EAAE,CACP;AAAEyC,MAAAA,MAAM,EAAE7E,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,iBAAf,CAAV;AAA6C0C,MAAAA,IAAI,EAAE,KAAnD;AAA0DC,MAAAA,EAAE,EAAE;AAA9D,KADO,EAEP;AAAEF,MAAAA,MAAM,EAAE7E,KAAK,CAACmC,MAAN,CAAaC,CAAb,CAAe,uBAAf,CAAV;AAAmD0C,MAAAA,IAAI,EAAE;AAAzD,KAFO,CALX;AASE,IAAA,eAAe,EAAE,CAAC,QAAD,EAAW,MAAX,CATnB;AAUE,IAAA,YAAY,EAAEtE,YAVhB;AAWE,IAAA,QAAQ,EAAE;AACRuD,MAAAA,YAAY,EAAZA,YADQ;AAERQ,MAAAA,WAAW,EAAXA,WAFQ;AAGRC,MAAAA,QAAQ,EAARA;AAHQ;AAXZ;AAAA;AAAA;AAAA;AAAA,UADF;AAmBD;;GA3JuBvE,S;UACLb,W,EACOD,W,EACAA,W,EACNA,W,EACOA,W,EACEA,W;;;KANLc,S","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\n\r\n//app\r\nimport { TreeView } from 'components';\r\nimport {\r\n  selectDmsDocDetails,\r\n  selectClaimData,\r\n  selectLossId,\r\n  selectClaimAssociateWithLoss,\r\n  getClaimsAssociateWithLoss,\r\n  getViewTableDocuments,\r\n  selectDmsWidgetClaimDocs,\r\n} from 'stores';\r\nimport config from 'config';\r\nimport * as utils from 'utils';\r\n\r\nexport default function DmsWidget() {\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const savedDmsDocList = useSelector(selectDmsDocDetails);\r\n  const claimData = useSelector(selectClaimData);\r\n  const associatedClaims = useSelector(selectClaimAssociateWithLoss);\r\n  const dmsWidgetClaimDocs = useSelector(selectDmsWidgetClaimDocs);\r\n  const [filteredData, setFilteredData] = useState([]);\r\n  const currentLossDetailId = get(lossInformation, 'lossDetailID');\r\n  const currentLossRef = get(lossInformation, 'lossRef');\r\n  const lossDocDetails = get(savedDmsDocList, 'lossDocDetails');\r\n  const claimsDocDetails = get(savedDmsDocList, 'claimsDocDetails');\r\n  const currentClaimRef = get(claimData, 'claimRef') || get(claimData, 'claimReference');\r\n\r\n  useEffect(() => {\r\n    if (currentLossDetailId) {\r\n      dispatch(getClaimsAssociateWithLoss(currentLossDetailId));\r\n    }\r\n  }, [currentLossDetailId]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const claimRefsArray = associatedClaims?.map((item) => item.claimReference)?.filter((claimref) => claimref !== currentClaimRef);\r\n\r\n  const createSortedDocs = (docs) => docs?.sort((doc1, doc2) => new Date(doc1?.createdDate) - new Date(doc2?.createdDate));\r\n\r\n  const lossDocuments = createSortedDocs(\r\n    lossDocDetails?.map((doc) => {\r\n      return {\r\n        ...doc,\r\n        id: doc.documentId,\r\n        label: doc.documentName,\r\n        labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n      };\r\n    })\r\n  );\r\n\r\n  const currentClaimDocuments = createSortedDocs(\r\n    claimsDocDetails?.map((doc) => {\r\n      return {\r\n        ...doc,\r\n        id: doc.documentId,\r\n        label: doc.documentName,\r\n        labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n      };\r\n    })\r\n  );\r\n\r\n  const openedChild = [\r\n    ...lossDocuments,\r\n    ...(currentClaimRef\r\n      ? [\r\n          {\r\n            id: 'child1',\r\n            label: currentClaimDocuments?.length ? `Claim ${currentClaimRef}` : '',\r\n            labelInfo: '',\r\n            children: currentClaimDocuments,\r\n          },\r\n        ]\r\n      : []),\r\n  ];\r\n\r\n  //claimRefsArray?.[0]?.claimId --> need to know why this condition exactly\r\n  const closedChild =\r\n    claimRefsArray.length > 0\r\n      ? claimRefsArray?.map((item) => {\r\n          return {\r\n            id: item,\r\n            label: item ? `Claim ${item}` : '',\r\n            labelInfo: '',\r\n            children: createSortedDocs(\r\n              dmsWidgetClaimDocs.hasOwnProperty(item) && !utils.generic.isInvalidOrEmptyArray(dmsWidgetClaimDocs[item])\r\n                ? dmsWidgetClaimDocs[item]?.map((doc) => {\r\n                    return {\r\n                      ...doc,\r\n                      id: doc.documentId,\r\n                      label: doc.documentName,\r\n                      labelInfo: utils.string.t('format.date', { value: { date: doc?.createdDate, format: config.ui.format.date.text } }),\r\n                    };\r\n                  })\r\n                : [{}]\r\n            ),\r\n          };\r\n        })\r\n      : [];\r\n\r\n  const rootChildren = [...openedChild, ...closedChild];\r\n\r\n  const data = {\r\n    id: 'root',\r\n    label: rootChildren?.length ? `Loss Reference ${currentLossRef}` : '',\r\n    labelInfo: '',\r\n    children: rootChildren,\r\n  };\r\n\r\n  let arr = [];\r\n  data?.children?.forEach((child) => {\r\n    if (child.labelInfo) {\r\n      arr.push(child);\r\n    } else {\r\n      child?.children?.forEach((child) => {\r\n        if (child) {\r\n          arr.push(child);\r\n        }\r\n      });\r\n    }\r\n  });\r\n\r\n  const handleSelect = (_, nodeIds) => {\r\n    if (nodeIds !== 'root' && nodeIds !== 'child1' && !dmsWidgetClaimDocs.hasOwnProperty(nodeIds)) {\r\n      dispatch(getViewTableDocuments({ dmsWidgetReqParams: [{ referenceId: nodeIds, sectionType: 'Claim' }], isFromDmsWidget: true }));\r\n    }\r\n  };\r\n\r\n  const submitSearch = (query) => {\r\n    const filteredData = createSortedDocs(\r\n      arr?.filter(\r\n        ({ documentName, updatedDate, createdDate, sectionType, referenceId, documentTypeDescription, createdByName }) =>\r\n          !isEmpty(\r\n            [documentName, updatedDate, createdDate, sectionType, referenceId, documentTypeDescription, createdByName]?.find((item) =>\r\n              item?.toLowerCase()?.includes(query)\r\n            )\r\n          )\r\n      )\r\n    );\r\n    setFilteredData(filteredData);\r\n  };\r\n\r\n  const resetSearch = () => {\r\n    setFilteredData([]);\r\n  };\r\n\r\n  const rowClick = (e, doc) => {\r\n    e.preventDefault();\r\n    const { documentId, documentName } = doc;\r\n    utils.dms.dmsDocumentViewLauncher(documentId, documentName);\r\n  };\r\n\r\n  return (\r\n    <TreeView\r\n      handleAccordionClick={handleSelect}\r\n      treeData={data}\r\n      rootRef={currentLossRef}\r\n      widgetTitle={utils.string.t('dms.view.documents.title')}\r\n      columns={[\r\n        { header: utils.string.t('dms.upload.file'), flex: '0.8', ml: '8px' },\r\n        { header: utils.string.t('dms.upload.uploadedOn'), flex: '0.375' },\r\n      ]}\r\n      defaultExpanded={['child1', 'root']}\r\n      filteredData={filteredData}\r\n      handlers={{\r\n        submitSearch,\r\n        resetSearch,\r\n        rowClick,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}