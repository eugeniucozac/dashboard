{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RfiQueryForm\\\\RfiQueryForm.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport PropTypes from 'prop-types'; //app\n\nimport * as utils from 'utils';\nimport { FormAutocompleteMui, FormContainer, FormFields, FormGrid, FormLabel, FormText, FormActions, Button } from 'components';\nimport { RfiResponseDms } from 'modules';\nimport styles from './RfiQueryForm.styles';\nimport { useFormActions } from 'hooks'; //mui\n\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nRfiQueryFormView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  actions: PropTypes.array.isRequired,\n  formProps: PropTypes.shape({\n    control: PropTypes.object.isRequired,\n    errors: PropTypes.object.isRequired,\n    formState: PropTypes.object.isRequired,\n    handleSubmit: PropTypes.func.isRequired,\n    reset: PropTypes.object.isRequired\n  }),\n  resetKey: PropTypes.number,\n  dmsActions: PropTypes.array.isRequired,\n  isResponseSubmitted: PropTypes.bool.isRequired,\n  uploadDocumentsControl: PropTypes.bool\n};\nexport function RfiQueryFormView(_ref) {\n  _s();\n\n  var task = _ref.task,\n      actions = _ref.actions,\n      fields = _ref.fields,\n      formProps = _ref.formProps,\n      resetKey = _ref.resetKey,\n      dmsActions = _ref.dmsActions,\n      isResponseSubmitted = _ref.isResponseSubmitted,\n      uploadDocumentsControl = _ref.uploadDocumentsControl;\n  var classes = makeStyles(styles, {\n    name: 'RfiQueryForm'\n  })();\n  var control = formProps.control,\n      errors = formProps.errors,\n      formState = formProps.formState,\n      handleSubmit = formProps.handleSubmit,\n      reset = formProps.reset;\n\n  var _useFormActions = useFormActions(actions, reset),\n      secondary = _useFormActions.secondary,\n      submit = _useFormActions.submit;\n\n  var upload = dmsActions.upload,\n      skipUpload = dmsActions.skipUpload,\n      submitReply = dmsActions.submitReply;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: classes.root,\n    children: /*#__PURE__*/_jsxDEV(FormContainer, {\n      type: \"dialog\",\n      onSubmit: handleSubmit,\n      children: [/*#__PURE__*/_jsxDEV(FormFields, {\n        type: \"dialog\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          container: true,\n          alignItems: \"right\",\n          nestedClasses: {\n            root: classes.fullWidth\n          },\n          children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n            item: true,\n            xs: 2,\n            children: /*#__PURE__*/_jsxDEV(Typography, {\n              variant: \"h5\",\n              className: classes.sectionheader,\n              children: utils.string.t('claims.processing.taskFunction.rfiTypeYourReply')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 43,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 42,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            item: true,\n            xs: 10,\n            alignItems: \"center\",\n            children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 8,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('claims.columns.createRFIColumns.sendTo'), \" *\"),\n                align: \"right\"\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 49,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 48,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 4,\n              children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(fields, 'sendTo', control)), {}, {\n                error: errors.sendTo,\n                nestedClasses: {\n                  root: classes.catCodeSelect\n                }\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 52,\n                columnNumber: 17\n              }, this)\n            }, resetKey, false, {\n              fileName: _jsxFileName,\n              lineNumber: 51,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 47,\n            columnNumber: 13\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 41,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          xs: 12,\n          sm: 12,\n          children: /*#__PURE__*/_jsxDEV(FormGrid, {\n            container: true,\n            nestedClasses: {\n              root: classes.descriptionBox\n            },\n            children: /*#__PURE__*/_jsxDEV(FormGrid, {\n              item: true,\n              xs: 12,\n              children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'description', control, errors)), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n        type: \"dialog\",\n        children: [submit && /*#__PURE__*/_jsxDEV(Button, {\n          text: submit.label,\n          type: \"submit\",\n          disabled: formState.isSubmitting,\n          onClick: handleSubmit(submit.handler),\n          color: \"primary\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 71,\n          columnNumber: 13\n        }, this), secondary && /*#__PURE__*/_jsxDEV(Button, {\n          text: secondary.label,\n          variant: \"outlined\",\n          size: \"medium\",\n          disabled: secondary.disabled || formState.isSubmitting,\n          onClick: secondary.handler\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 80,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 69,\n        columnNumber: 9\n      }, this), isResponseSubmitted && /*#__PURE__*/_jsxDEV(Grid, {\n        container: true,\n        children: [/*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          alignItems: \"center\",\n          className: classes.docsPromptGrid,\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            variant: \"h5\",\n            label: utils.string.t('dms.wrapper.uploadDocsPrompt'),\n            align: \"left\"\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 93,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 92,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Grid, {\n          item: true,\n          xs: 4,\n          children: [skipUpload && /*#__PURE__*/_jsxDEV(Button, {\n            text: skipUpload.label,\n            variant: \"outlined\",\n            size: \"medium\",\n            onClick: skipUpload.handler\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 96,\n            columnNumber: 30\n          }, this), upload && /*#__PURE__*/_jsxDEV(Button, {\n            text: upload.label,\n            color: \"primary\",\n            size: \"medium\",\n            onClick: upload.handler,\n            nestedClasses: {\n              btn: classes.uploadYesBtn\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 98,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 95,\n          columnNumber: 13\n        }, this), uploadDocumentsControl && /*#__PURE__*/_jsxDEV(Grid, {\n          container: true,\n          children: [/*#__PURE__*/_jsxDEV(Grid, {\n            item: true,\n            xs: 12,\n            children: /*#__PURE__*/_jsxDEV(RfiResponseDms, {\n              task: task,\n              defaultState: true,\n              viewOptions: {\n                upload: true,\n                unlink: true,\n                \"delete\": true\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 110,\n              columnNumber: 19\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 109,\n            columnNumber: 17\n          }, this), /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            className: classes.submitDocsSection,\n            children: submitReply && /*#__PURE__*/_jsxDEV(Button, {\n              text: submitReply.label,\n              color: \"primary\",\n              size: \"medium\",\n              onClick: submitReply.handler,\n              nestedClasses: {\n                btn: classes.submitDocsBtn\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 122,\n              columnNumber: 21\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 120,\n            columnNumber: 17\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 108,\n          columnNumber: 15\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 39,\n      columnNumber: 7\n    }, this)\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 38,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RfiQueryFormView, \"H+XxpqIWRsIYU82jpehTnL5/3wc=\", false, function () {\n  return [useFormActions];\n});\n\n_c = RfiQueryFormView;\nRfiQueryFormView.displayName = \"RfiQueryFormView\";\nRfiQueryFormView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"RfiQueryFormView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"actions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"formProps\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"control\": {\n            \"name\": \"object\",\n            \"required\": true\n          },\n          \"errors\": {\n            \"name\": \"object\",\n            \"required\": true\n          },\n          \"formState\": {\n            \"name\": \"object\",\n            \"required\": true\n          },\n          \"handleSubmit\": {\n            \"name\": \"func\",\n            \"required\": true\n          },\n          \"reset\": {\n            \"name\": \"object\",\n            \"required\": true\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"resetKey\": {\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"dmsActions\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"isResponseSubmitted\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"uploadDocumentsControl\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\RfiQueryForm\\\\RfiQueryForm.view.js\"] = {\n    name: \"RfiQueryFormView\",\n    docgenInfo: RfiQueryFormView.__docgenInfo,\n    path: \"src\\\\modules\\\\RfiQueryForm\\\\RfiQueryForm.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiQueryFormView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RfiQueryForm/RfiQueryForm.view.js"],"names":["React","PropTypes","utils","FormAutocompleteMui","FormContainer","FormFields","FormGrid","FormLabel","FormText","FormActions","Button","RfiResponseDms","styles","useFormActions","makeStyles","Typography","Grid","RfiQueryFormView","propTypes","fields","array","isRequired","actions","formProps","shape","control","object","errors","formState","handleSubmit","func","reset","resetKey","number","dmsActions","isResponseSubmitted","bool","uploadDocumentsControl","task","classes","name","secondary","submit","upload","skipUpload","submitReply","root","fullWidth","sectionheader","string","t","form","getFieldProps","sendTo","catCodeSelect","descriptionBox","label","isSubmitting","handler","disabled","docsPromptGrid","btn","uploadYesBtn","unlink","submitDocsSection","submitDocsBtn"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { FormAutocompleteMui, FormContainer, FormFields, FormGrid, FormLabel, FormText, FormActions, Button } from 'components';\r\nimport { RfiResponseDms } from 'modules';\r\nimport styles from './RfiQueryForm.styles';\r\nimport { useFormActions } from 'hooks';\r\n\r\n//mui\r\nimport { makeStyles, Typography, Grid } from '@material-ui/core';\r\n\r\nRfiQueryFormView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  actions: PropTypes.array.isRequired,\r\n  formProps: PropTypes.shape({\r\n    control: PropTypes.object.isRequired,\r\n    errors: PropTypes.object.isRequired,\r\n    formState: PropTypes.object.isRequired,\r\n    handleSubmit: PropTypes.func.isRequired,\r\n    reset: PropTypes.object.isRequired,\r\n  }),\r\n  resetKey: PropTypes.number,\r\n  dmsActions: PropTypes.array.isRequired,\r\n  isResponseSubmitted: PropTypes.bool.isRequired,\r\n  uploadDocumentsControl: PropTypes.bool,\r\n};\r\n\r\nexport function RfiQueryFormView({ task, actions, fields, formProps, resetKey, dmsActions, isResponseSubmitted, uploadDocumentsControl }) {\r\n  const classes = makeStyles(styles, { name: 'RfiQueryForm' })();\r\n\r\n  const { control, errors, formState, handleSubmit, reset } = formProps;\r\n  const { secondary, submit } = useFormActions(actions, reset);\r\n  const { upload, skipUpload, submitReply } = dmsActions;\r\n\r\n  return (\r\n    <div className={classes.root}>\r\n      <FormContainer type=\"dialog\" onSubmit={handleSubmit}>\r\n        <FormFields type=\"dialog\">\r\n          <FormGrid container alignItems=\"right\" nestedClasses={{ root: classes.fullWidth }}>\r\n            <FormGrid item xs={2}>\r\n              <Typography variant=\"h5\" className={classes.sectionheader}>\r\n                {utils.string.t('claims.processing.taskFunction.rfiTypeYourReply')}\r\n              </Typography>\r\n            </FormGrid>\r\n            <FormGrid container item xs={10} alignItems=\"center\">\r\n              <FormGrid item xs={8}>\r\n                <FormLabel label={`${utils.string.t('claims.columns.createRFIColumns.sendTo')} *`} align=\"right\" />\r\n              </FormGrid>\r\n              <FormGrid item xs={4} key={resetKey}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(fields, 'sendTo', control)}\r\n                  error={errors.sendTo}\r\n                  nestedClasses={{ root: classes.catCodeSelect }}\r\n                />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n          <FormGrid xs={12} sm={12}>\r\n            <FormGrid container nestedClasses={{ root: classes.descriptionBox }}>\r\n              <FormGrid item xs={12}>\r\n                <FormText {...utils.form.getFieldProps(fields, 'description', control, errors)} />\r\n              </FormGrid>\r\n            </FormGrid>\r\n          </FormGrid>\r\n        </FormFields>\r\n\r\n        <FormActions type=\"dialog\">\r\n          {submit && (\r\n            <Button\r\n              text={submit.label}\r\n              type=\"submit\"\r\n              disabled={formState.isSubmitting}\r\n              onClick={handleSubmit(submit.handler)}\r\n              color=\"primary\"\r\n            />\r\n          )}\r\n          {secondary && (\r\n            <Button\r\n              text={secondary.label}\r\n              variant=\"outlined\"\r\n              size=\"medium\"\r\n              disabled={secondary.disabled || formState.isSubmitting}\r\n              onClick={secondary.handler}\r\n            />\r\n          )}\r\n        </FormActions>\r\n\r\n        {isResponseSubmitted && (\r\n          <Grid container>\r\n            <Grid item xs={4} alignItems=\"center\" className={classes.docsPromptGrid}>\r\n              <FormLabel variant=\"h5\" label={utils.string.t('dms.wrapper.uploadDocsPrompt')} align=\"left\" />\r\n            </Grid>\r\n            <Grid item xs={4}>\r\n              {skipUpload && <Button text={skipUpload.label} variant=\"outlined\" size=\"medium\" onClick={skipUpload.handler} />}\r\n              {upload && (\r\n                <Button\r\n                  text={upload.label}\r\n                  color=\"primary\"\r\n                  size=\"medium\"\r\n                  onClick={upload.handler}\r\n                  nestedClasses={{ btn: classes.uploadYesBtn }}\r\n                />\r\n              )}\r\n            </Grid>\r\n            {uploadDocumentsControl && (\r\n              <Grid container>\r\n                <Grid item xs={12}>\r\n                  <RfiResponseDms\r\n                    task={task}\r\n                    defaultState={true}\r\n                    viewOptions={{\r\n                      upload: true,\r\n                      unlink: true,\r\n                      delete: true,\r\n                    }}\r\n                  />\r\n                </Grid>\r\n                <Grid container className={classes.submitDocsSection}>\r\n                  {submitReply && (\r\n                    <Button\r\n                      text={submitReply.label}\r\n                      color=\"primary\"\r\n                      size=\"medium\"\r\n                      onClick={submitReply.handler}\r\n                      nestedClasses={{ btn: classes.submitDocsBtn }}\r\n                    />\r\n                  )}\r\n                </Grid>\r\n              </Grid>\r\n            )}\r\n          </Grid>\r\n        )}\r\n      </FormContainer>\r\n    </div>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}