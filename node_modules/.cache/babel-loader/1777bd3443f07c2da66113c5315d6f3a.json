{"ast":null,"code":"import \"core-js/modules/es.array.find\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.view.js\",\n    _s = $RefreshSig$();\n\nimport React from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames';\nimport { useHistory } from 'react-router'; //app\n\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\nimport config from 'config';\nimport { LossDetail, LossAction, ClaimsUploadViewSearchDocs, ClaimsProcessingDmsWidget } from 'modules';\nimport * as utils from 'utils';\nimport { DrawerComponent } from 'components';\nimport styles from './LossDashboard.styles';\nimport { selectDmsWidgetExpanded } from 'stores';\nimport * as constants from 'consts';\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl } from 'stores'; //mui\n\nimport { Box, Divider } from '@material-ui/core';\nimport { makeStyles } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nLossDashboardView.propTypes = {\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  lossSelected: PropTypes.object.isRequired,\n  breadcrumbs: PropTypes.arrayOf(PropTypes.shape({\n    name: PropTypes.string.isRequired,\n    label: PropTypes.string.isRequired,\n    link: PropTypes.string.isRequired\n  })).isRequired,\n  handleSelectTab: PropTypes.func\n};\nexport function LossDashboardView(_ref) {\n  _s();\n\n  var tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      lossSelected = _ref.lossSelected,\n      breadcrumbs = _ref.breadcrumbs,\n      handleSelectTab = _ref.handleSelectTab;\n  var classes = makeStyles(styles, {\n    name: 'LossDashboard'\n  })();\n  var isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\n\n  var editLossHandler = function editLossHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n    var checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n      var _constants$STATUS_CLA;\n\n      return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA === void 0 ? void 0 : _constants$STATUS_CLA.toUpperCase());\n    })) : false;\n    dispatch(setClaimsStepperControl(0));\n    history.push({\n      pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n      state: {\n        redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n        loss: {\n          isNextDiabled: true,\n          isClaimSubmitted: checkClaimStatus\n        }\n      }\n    });\n  };\n\n  var addClaimHandler = function addClaimHandler(lossSelected) {\n    var lossRef = lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef;\n\n    function addClaim() {\n      return _addClaim.apply(this, arguments);\n    }\n\n    function _addClaim() {\n      _addClaim = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee() {\n        var checkClaimStatus;\n        return _regeneratorRuntime.wrap(function _callee$(_context) {\n          while (1) {\n            switch (_context.prev = _context.next) {\n              case 0:\n                _context.next = 2;\n                return dispatch(setClaimsStepperControl(1));\n\n              case 2:\n                checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true) ? Boolean(claimsAssociateWithLoss === null || claimsAssociateWithLoss === void 0 ? void 0 : claimsAssociateWithLoss.find(function (claim) {\n                  var _constants$STATUS_CLA2;\n\n                  return (claim === null || claim === void 0 ? void 0 : claim.claimStatus) !== ((_constants$STATUS_CLA2 = constants.STATUS_CLAIMS_DRAFT) === null || _constants$STATUS_CLA2 === void 0 ? void 0 : _constants$STATUS_CLA2.toUpperCase());\n                })) : false;\n                history.push({\n                  pathname: \"\".concat(config.routes.claimsFNOL.newLoss),\n                  state: {\n                    redirectUrl: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossRef),\n                    loss: {\n                      isNextDiabled: false,\n                      isClaimSubmitted: checkClaimStatus\n                    }\n                  }\n                });\n\n              case 4:\n              case \"end\":\n                return _context.stop();\n            }\n          }\n        }, _callee);\n      }));\n      return _addClaim.apply(this, arguments);\n    }\n\n    addClaim();\n  };\n\n  var createRFIHandler = function createRFIHandler(lossSelected) {};\n\n  var rowActions = [{\n    id: 'editLoss',\n    label: utils.string.t('loss.popOverFunctionMenusList.editLoss'),\n    callback: function callback() {\n      return editLossHandler(lossSelected);\n    }\n  }, {\n    id: 'addClaim',\n    label: utils.string.t('loss.popOverFunctionMenusList.addClaim'),\n    callback: function callback() {\n      return addClaimHandler(lossSelected);\n    }\n  }, {\n    id: 'createRFI',\n    label: utils.string.t('loss.popOverFunctionMenusList.createRFI'),\n    callback: function callback() {\n      return createRFIHandler(lossSelected);\n    }\n  }];\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Breadcrumb, {\n      links: breadcrumbs\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 98,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 99,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames(classes.content, _defineProperty({}, classes.contentShift, isDmsWidgetExpanded)),\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        testid: \"LossDashboard\",\n        children: /*#__PURE__*/_jsxDEV(Layout, {\n          main: true,\n          children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n            title: ' ',\n            testid: \"claim-ref-header\",\n            children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n              variant: \"outlined\",\n              id: \"loss-functions\",\n              size: \"small\",\n              color: \"primary\",\n              text: utils.string.t('loss.popOverFunction'),\n              isButton: true,\n              anchorOrigin: {\n                vertical: 'bottom',\n                horizontal: 'right'\n              },\n              transformOrigin: {\n                vertical: 'top',\n                horizontal: 'right'\n              },\n              items: rowActions\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 108,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 107,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(Tabs, {\n            tabs: tabs,\n            value: selectedTab,\n            onChange: function onChange(tabName) {\n              return handleSelectTab(tabName);\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 126,\n            columnNumber: 13\n          }, this), selectedTab === 'details' && /*#__PURE__*/_jsxDEV(LossDetail, {\n            lossObj: lossSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 127,\n            columnNumber: 43\n          }, this), selectedTab === 'actions' && /*#__PURE__*/_jsxDEV(LossAction, {\n            lossData: lossSelected\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 128,\n            columnNumber: 43\n          }, this), selectedTab === 'documents' && /*#__PURE__*/_jsxDEV(Box, {\n            mt: 2,\n            children: /*#__PURE__*/_jsxDEV(ClaimsUploadViewSearchDocs, {\n              refData: lossSelected,\n              refIdName: constants.DMS_CONTEXT_LOSS_ID,\n              dmsContext: constants.DMS_CONTEXT_LOSS,\n              documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 106,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 105,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 100,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(DrawerComponent, {\n      isDrawerOpen: true,\n      isFromDashboard: true,\n      children: /*#__PURE__*/_jsxDEV(ClaimsProcessingDmsWidget, {\n        isLossDashboard: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 143,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 142,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n}\n\n_s(LossDashboardView, \"XO+1060uXO+YfavKXSLE9CcqLBE=\", false, function () {\n  return [useSelector, useDispatch, useHistory, useSelector];\n});\n\n_c = LossDashboardView;\nLossDashboardView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"LossDashboardView\",\n  \"props\": {\n    \"tabs\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"selectedTab\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"lossSelected\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"breadcrumbs\": {\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"shape\",\n          \"value\": {\n            \"name\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"label\": {\n              \"name\": \"string\",\n              \"required\": true\n            },\n            \"link\": {\n              \"name\": \"string\",\n              \"required\": true\n            }\n          }\n        }\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"handleSelectTab\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\pages\\\\LossDashboard\\\\LossDashboard.view.js\"] = {\n    name: \"LossDashboardView\",\n    docgenInfo: LossDashboardView.__docgenInfo,\n    path: \"src\\\\pages\\\\LossDashboard\\\\LossDashboard.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboardView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.view.js"],"names":["React","useDispatch","useSelector","PropTypes","classnames","useHistory","Breadcrumb","Layout","Tabs","PopoverMenu","SectionHeader","config","LossDetail","LossAction","ClaimsUploadViewSearchDocs","ClaimsProcessingDmsWidget","utils","DrawerComponent","styles","selectDmsWidgetExpanded","constants","selectClaimAssociateWithLoss","setClaimsStepperControl","Box","Divider","makeStyles","LossDashboardView","propTypes","tabs","array","isRequired","selectedTab","string","lossSelected","object","breadcrumbs","arrayOf","shape","name","label","link","handleSelectTab","func","classes","isDmsWidgetExpanded","dispatch","history","claimsAssociateWithLoss","editLossHandler","lossRef","checkClaimStatus","generic","isValidArray","Boolean","find","claim","claimStatus","STATUS_CLAIMS_DRAFT","toUpperCase","push","pathname","routes","claimsFNOL","newLoss","state","redirectUrl","loss","isNextDiabled","isClaimSubmitted","addClaimHandler","addClaim","createRFIHandler","rowActions","id","t","callback","content","contentShift","vertical","horizontal","tabName","DMS_CONTEXT_LOSS_ID","DMS_CONTEXT_LOSS","DMS_DOCUMENT_TYPE_SECTION_KEYS"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\nimport { useHistory } from 'react-router';\r\n\r\n//app\r\nimport { Breadcrumb, Layout, Tabs, PopoverMenu, SectionHeader } from 'components';\r\nimport config from 'config';\r\nimport { LossDetail, LossAction, ClaimsUploadViewSearchDocs, ClaimsProcessingDmsWidget } from 'modules';\r\nimport * as utils from 'utils';\r\nimport { DrawerComponent } from 'components';\r\nimport styles from './LossDashboard.styles';\r\nimport { selectDmsWidgetExpanded } from 'stores';\r\nimport * as constants from 'consts';\r\nimport { selectClaimAssociateWithLoss, setClaimsStepperControl } from 'stores';\r\n\r\n//mui\r\nimport { Box, Divider } from '@material-ui/core';\r\nimport { makeStyles } from '@material-ui/core';\r\n\r\nLossDashboardView.propTypes = {\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  lossSelected: PropTypes.object.isRequired,\r\n  breadcrumbs: PropTypes.arrayOf(\r\n    PropTypes.shape({\r\n      name: PropTypes.string.isRequired,\r\n      label: PropTypes.string.isRequired,\r\n      link: PropTypes.string.isRequired,\r\n    })\r\n  ).isRequired,\r\n  handleSelectTab: PropTypes.func,\r\n};\r\n\r\nexport function LossDashboardView({ tabs, selectedTab, lossSelected, breadcrumbs, handleSelectTab }) {\r\n  const classes = makeStyles(styles, { name: 'LossDashboard' })();\r\n  const isDmsWidgetExpanded = useSelector(selectDmsWidgetExpanded);\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const claimsAssociateWithLoss = useSelector(selectClaimAssociateWithLoss);\r\n\r\n  const editLossHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true)\r\n      ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase()))\r\n      : false;\r\n    dispatch(setClaimsStepperControl(0));\r\n    history.push({\r\n      pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n      state: {\r\n        redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n        loss: { isNextDiabled: true, isClaimSubmitted: checkClaimStatus },\r\n      },\r\n    });\r\n  };\r\n\r\n  const addClaimHandler = (lossSelected) => {\r\n    const lossRef = lossSelected?.lossRef;\r\n    async function addClaim() {\r\n      await dispatch(setClaimsStepperControl(1));\r\n      const checkClaimStatus = utils.generic.isValidArray(claimsAssociateWithLoss, true)\r\n        ? Boolean(claimsAssociateWithLoss?.find((claim) => claim?.claimStatus !== constants.STATUS_CLAIMS_DRAFT?.toUpperCase()))\r\n        : false;\r\n      history.push({\r\n        pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n        state: {\r\n          redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n          loss: { isNextDiabled: false, isClaimSubmitted: checkClaimStatus },\r\n        },\r\n      });\r\n    }\r\n    addClaim();\r\n  };\r\n\r\n  const createRFIHandler = (lossSelected) => {};\r\n\r\n  const rowActions = [\r\n    {\r\n      id: 'editLoss',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.editLoss'),\r\n      callback: () => editLossHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'addClaim',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.addClaim'),\r\n      callback: () => addClaimHandler(lossSelected),\r\n    },\r\n    {\r\n      id: 'createRFI',\r\n      label: utils.string.t('loss.popOverFunctionMenusList.createRFI'),\r\n      callback: () => createRFIHandler(lossSelected),\r\n    },\r\n  ];\r\n\r\n  return (\r\n    <>\r\n      <Breadcrumb links={breadcrumbs} />\r\n      <Divider />\r\n      <div\r\n        className={classnames(classes.content, {\r\n          [classes.contentShift]: isDmsWidgetExpanded,\r\n        })}\r\n      >\r\n        <Layout testid=\"LossDashboard\">\r\n          <Layout main>\r\n            <SectionHeader title={' '} testid=\"claim-ref-header\">\r\n              <PopoverMenu\r\n                variant=\"outlined\"\r\n                id=\"loss-functions\"\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                text={utils.string.t('loss.popOverFunction')}\r\n                isButton\r\n                anchorOrigin={{\r\n                  vertical: 'bottom',\r\n                  horizontal: 'right',\r\n                }}\r\n                transformOrigin={{\r\n                  vertical: 'top',\r\n                  horizontal: 'right',\r\n                }}\r\n                items={rowActions}\r\n              />\r\n            </SectionHeader>\r\n            <Tabs tabs={tabs} value={selectedTab} onChange={(tabName) => handleSelectTab(tabName)} />\r\n            {selectedTab === 'details' && <LossDetail lossObj={lossSelected} />}\r\n            {selectedTab === 'actions' && <LossAction lossData={lossSelected} />}\r\n            {selectedTab === 'documents' && (\r\n              <Box mt={2}>\r\n                <ClaimsUploadViewSearchDocs\r\n                  refData={lossSelected}\r\n                  refIdName={constants.DMS_CONTEXT_LOSS_ID}\r\n                  dmsContext={constants.DMS_CONTEXT_LOSS}\r\n                  documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim}\r\n                />\r\n              </Box>\r\n            )}\r\n          </Layout>\r\n        </Layout>\r\n      </div>\r\n      <DrawerComponent isDrawerOpen isFromDashboard>\r\n        <ClaimsProcessingDmsWidget isLossDashboard />\r\n      </DrawerComponent>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}