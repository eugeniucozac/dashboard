{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsUnderwritingGroups\\\\ClaimsUnderwritingGroups.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types'; //app\n\nimport { ClaimsUnderwritingGroupsView } from './ClaimsUnderwritingGroups.view';\nimport { getUnderwritingGroupsBySection, selectClaimsUnderwritingGroups, selectSectionEnabledUG, sortingUnderwritingGroups } from 'stores';\nimport * as utils from 'utils';\nimport { useFlexiColumns, useSort, usePagination } from 'hooks';\nimport * as constants from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nClaimsUnderwritingGroups.prototypes = {\n  fields: PropTypes.array.isRequired,\n  claimForm: PropTypes.object,\n  uwResetKey: PropTypes.number,\n  hasClaimRef: PropTypes.bool\n};\nexport default function ClaimsUnderwritingGroups(_ref) {\n  _s();\n\n  var _underWritingGroups$i2;\n\n  var fields = _ref.fields,\n      claimForm = _ref.claimForm,\n      uwResetKey = _ref.uwResetKey,\n      hasClaimRef = _ref.hasClaimRef,\n      selectedPolicyRender = _ref.selectedPolicyRender;\n  var dispatch = useDispatch(); // redux\n\n  var underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var isUwGroupsLoading = underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.isLoading;\n  var facilityKeys = underWritingGroups.items.map(function (item) {\n    return item.id;\n  });\n\n  var ugSortData = _objectSpread(_objectSpread({}, underWritingGroups.sort), {}, {\n    type: 'numeric'\n  }); // state\n\n\n  var _useState = useState((underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items) || []),\n      _useState2 = _slicedToArray(_useState, 2),\n      tableGridData = _useState2[0],\n      setTableGridData = _useState2[1];\n\n  var _useState3 = useState(constants.DMS_PAGINATION_DEFAULT_PAGE),\n      _useState4 = _slicedToArray(_useState3, 2),\n      newPage = _useState4[0],\n      setNewPage = _useState4[1];\n\n  var _useState5 = useState(constants.DMS_DEFAULT_ROWS_PER_PAGE),\n      _useState6 = _slicedToArray(_useState5, 2),\n      rowsPerPage = _useState6[0],\n      setRowsPerPage = _useState6[1];\n\n  useEffect(function () {\n    if (selectedPolicyRender !== '') {\n      if (hasClaimRef) {\n        utils.generic.isInvalidOrEmptyArray(underWritingGroups === null || underWritingGroups === void 0 ? void 0 : underWritingGroups.items) && dispatch(getUnderwritingGroupsBySection());\n      } else {\n        dispatch(getUnderwritingGroupsBySection({\n          viewLoader: false\n        }));\n      }\n    }\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    var _underWritingGroups$i;\n\n    setTableGridData(underWritingGroups === null || underWritingGroups === void 0 ? void 0 : (_underWritingGroups$i = underWritingGroups.items) === null || _underWritingGroups$i === void 0 ? void 0 : _underWritingGroups$i.slice(newPage * rowsPerPage, newPage * rowsPerPage + rowsPerPage));\n  }, [newPage, rowsPerPage, underWritingGroups]);\n\n  var handleSort = function handleSort(by, dir) {\n    dispatch(getUnderwritingGroupsBySection({\n      sortBy: by,\n      direction: dir.toUpperCase()\n    }));\n  };\n\n  var handleChangePage = function handleChangePage(newPage) {\n    setNewPage(newPage);\n  };\n\n  var handleChangeRowsPerPage = function handleChangeRowsPerPage(rowsPerPage) {\n    setNewPage(0);\n    setRowsPerPage(rowsPerPage);\n  };\n\n  var columns = [{\n    id: 'id',\n    empty: true,\n    visible: true\n  }, {\n    id: 'groupRef',\n    label: utils.string.t('claims.underWritingGroups.groupRef'),\n    sort: {\n      type: 'lexical',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'percentage',\n    label: utils.string.t('claims.underWritingGroups.percentage'),\n    visible: true\n  }, {\n    id: 'facility',\n    label: utils.string.t('claims.underWritingGroups.facility'),\n    visible: true\n  }, {\n    id: 'facilityRef',\n    label: utils.string.t('claims.underWritingGroups.facilityRef'),\n    visible: true\n  }, {\n    id: 'slipLeader',\n    label: utils.string.t('claims.underWritingGroups.slipLeader'),\n    visible: true\n  }, {\n    id: 'ucr',\n    label: utils.string.t('claims.underWritingGroups.ucr'),\n    visible: true\n  }, {\n    id: 'narrative',\n    label: utils.string.t('claims.underWritingGroups.narrative'),\n    visible: true\n  }, {\n    id: 'dateValidFrom',\n    label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    visible: true\n  }, {\n    id: 'dateValidTo',\n    label: utils.string.t('claims.underWritingGroups.dateValidTo'),\n    sort: {\n      type: 'date',\n      direction: 'asc'\n    },\n    visible: true\n  }];\n\n  var _useFlexiColumns = useFlexiColumns(columns),\n      columnsArray = _useFlexiColumns.columns;\n\n  var _useSort = useSort(columnsArray, ugSortData, handleSort),\n      cols = _useSort.cols,\n      sort = _useSort.sort;\n\n  var pagination = usePagination(tableGridData || [], {\n    page: newPage || constants.DMS_PAGINATION_DEFAULT_PAGE,\n    rowsTotal: (underWritingGroups === null || underWritingGroups === void 0 ? void 0 : (_underWritingGroups$i2 = underWritingGroups.items) === null || _underWritingGroups$i2 === void 0 ? void 0 : _underWritingGroups$i2.length) || 0,\n    rowsPerPage: rowsPerPage\n  }, handleChangePage, handleChangeRowsPerPage);\n  return /*#__PURE__*/_jsxDEV(ClaimsUnderwritingGroupsView, {\n    isSectionEnabled: isSectionEnabled,\n    claimFields: fields,\n    claimForm: claimForm,\n    uwResetKey: uwResetKey,\n    tableGridData: tableGridData,\n    underWritingGroups: underWritingGroups,\n    sortingUnderwritingGroups: sortingUnderwritingGroups,\n    cols: cols,\n    sort: sort,\n    pagination: pagination,\n    handleSort: handleSort,\n    facilityKeys: facilityKeys,\n    isUwGroupsLoading: isUwGroupsLoading\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 103,\n    columnNumber: 5\n  }, this);\n}\n\n_s(ClaimsUnderwritingGroups, \"w4J6w6OwXp0LoyLO6pTuk9n5iPI=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useFlexiColumns, useSort, usePagination];\n});\n\n_c = ClaimsUnderwritingGroups;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsUnderwritingGroups\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsUnderwritingGroups/ClaimsUnderwritingGroups.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","ClaimsUnderwritingGroupsView","getUnderwritingGroupsBySection","selectClaimsUnderwritingGroups","selectSectionEnabledUG","sortingUnderwritingGroups","utils","useFlexiColumns","useSort","usePagination","constants","ClaimsUnderwritingGroups","prototypes","fields","array","isRequired","claimForm","object","uwResetKey","number","hasClaimRef","bool","selectedPolicyRender","dispatch","underWritingGroups","isSectionEnabled","isUwGroupsLoading","isLoading","facilityKeys","items","map","item","id","ugSortData","sort","type","tableGridData","setTableGridData","DMS_PAGINATION_DEFAULT_PAGE","newPage","setNewPage","DMS_DEFAULT_ROWS_PER_PAGE","rowsPerPage","setRowsPerPage","generic","isInvalidOrEmptyArray","viewLoader","slice","handleSort","by","dir","sortBy","direction","toUpperCase","handleChangePage","handleChangeRowsPerPage","columns","empty","visible","label","string","t","columnsArray","cols","pagination","page","rowsTotal","length"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\n\r\n//app\r\nimport { ClaimsUnderwritingGroupsView } from './ClaimsUnderwritingGroups.view';\r\nimport { getUnderwritingGroupsBySection, selectClaimsUnderwritingGroups, selectSectionEnabledUG, sortingUnderwritingGroups } from 'stores';\r\nimport * as utils from 'utils';\r\nimport { useFlexiColumns, useSort, usePagination } from 'hooks';\r\nimport * as constants from 'consts';\r\n\r\nClaimsUnderwritingGroups.prototypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  claimForm: PropTypes.object,\r\n  uwResetKey: PropTypes.number,\r\n  hasClaimRef: PropTypes.bool,\r\n};\r\nexport default function ClaimsUnderwritingGroups({ fields, claimForm, uwResetKey, hasClaimRef, selectedPolicyRender }) {\r\n  const dispatch = useDispatch();\r\n\r\n  // redux\r\n  const underWritingGroups = useSelector(selectClaimsUnderwritingGroups);\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n\r\n  const isUwGroupsLoading = underWritingGroups?.isLoading;\r\n  const facilityKeys = underWritingGroups.items.map((item) => item.id);\r\n  const ugSortData = { ...underWritingGroups.sort, type: 'numeric' };\r\n\r\n  // state\r\n  const [tableGridData, setTableGridData] = useState(underWritingGroups?.items || []);\r\n  const [newPage, setNewPage] = useState(constants.DMS_PAGINATION_DEFAULT_PAGE);\r\n  const [rowsPerPage, setRowsPerPage] = useState(constants.DMS_DEFAULT_ROWS_PER_PAGE);\r\n\r\n  useEffect(() => {\r\n    if (selectedPolicyRender !== '') {\r\n      if (hasClaimRef) {\r\n        utils.generic.isInvalidOrEmptyArray(underWritingGroups?.items) && dispatch(getUnderwritingGroupsBySection());\r\n      } else {\r\n        dispatch(getUnderwritingGroupsBySection({ viewLoader: false }));\r\n      }\r\n    }\r\n  }, [uwResetKey]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    setTableGridData(underWritingGroups?.items?.slice(newPage * rowsPerPage, newPage * rowsPerPage + rowsPerPage));\r\n  }, [newPage, rowsPerPage, underWritingGroups]);\r\n\r\n  const handleSort = (by, dir) => {\r\n    dispatch(getUnderwritingGroupsBySection({ sortBy: by, direction: dir.toUpperCase() }));\r\n  };\r\n\r\n  const handleChangePage = (newPage) => {\r\n    setNewPage(newPage);\r\n  };\r\n\r\n  const handleChangeRowsPerPage = (rowsPerPage) => {\r\n    setNewPage(0);\r\n    setRowsPerPage(rowsPerPage);\r\n  };\r\n\r\n  const columns = [\r\n    { id: 'id', empty: true, visible: true },\r\n    {\r\n      id: 'groupRef',\r\n      label: utils.string.t('claims.underWritingGroups.groupRef'),\r\n      sort: { type: 'lexical', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    { id: 'percentage', label: utils.string.t('claims.underWritingGroups.percentage'), visible: true },\r\n    { id: 'facility', label: utils.string.t('claims.underWritingGroups.facility'), visible: true },\r\n    { id: 'facilityRef', label: utils.string.t('claims.underWritingGroups.facilityRef'), visible: true },\r\n    { id: 'slipLeader', label: utils.string.t('claims.underWritingGroups.slipLeader'), visible: true },\r\n    { id: 'ucr', label: utils.string.t('claims.underWritingGroups.ucr'), visible: true },\r\n    { id: 'narrative', label: utils.string.t('claims.underWritingGroups.narrative'), visible: true },\r\n    {\r\n      id: 'dateValidFrom',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidFrom'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n    {\r\n      id: 'dateValidTo',\r\n      label: utils.string.t('claims.underWritingGroups.dateValidTo'),\r\n      sort: { type: 'date', direction: 'asc' },\r\n      visible: true,\r\n    },\r\n  ];\r\n\r\n  const { columns: columnsArray } = useFlexiColumns(columns);\r\n  const { cols, sort } = useSort(columnsArray, ugSortData, handleSort);\r\n  const pagination = usePagination(\r\n    tableGridData || [],\r\n    {\r\n      page: newPage || constants.DMS_PAGINATION_DEFAULT_PAGE,\r\n      rowsTotal: underWritingGroups?.items?.length || 0,\r\n      rowsPerPage: rowsPerPage,\r\n    },\r\n    handleChangePage,\r\n    handleChangeRowsPerPage\r\n  );\r\n\r\n  return (\r\n    <ClaimsUnderwritingGroupsView\r\n      isSectionEnabled={isSectionEnabled}\r\n      claimFields={fields}\r\n      claimForm={claimForm}\r\n      uwResetKey={uwResetKey}\r\n      tableGridData={tableGridData}\r\n      underWritingGroups={underWritingGroups}\r\n      sortingUnderwritingGroups={sortingUnderwritingGroups}\r\n      cols={cols}\r\n      sort={sort}\r\n      pagination={pagination}\r\n      handleSort={handleSort}\r\n      facilityKeys={facilityKeys}\r\n      isUwGroupsLoading={isUwGroupsLoading}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}