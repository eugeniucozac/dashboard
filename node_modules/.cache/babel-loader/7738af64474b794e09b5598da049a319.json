{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TasksProcessingTableRow\\\\TasksProcessingTableRow.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './TasksProcessingTableRow.styles';\nimport { FormCheckbox, Link, TableCell, PopoverMenu, Status, Translate } from 'components';\nimport * as utils from 'utils';\nimport { TASK_TAB_COMPLETED_STATUS, TASK_TAB_INPROGRESS_STATUS } from 'consts';\nimport config from 'config';\nimport { TASK_TEAM_TYPE } from 'consts'; // mui\n\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTasksProcessingTableRowView.propTypes = {\n  isTaskTeam: PropTypes.bool,\n  caseTaskTypeView: PropTypes.string,\n  task: PropTypes.object.isRequired,\n  isSelected: PropTypes.bool,\n  isPremiumProcessing: PropTypes.bool,\n  columnProps: PropTypes.func.isRequired,\n  taskActionItems: PropTypes.array.isRequired,\n  isTableHidden: PropTypes.bool,\n  handlers: PropTypes.shape({\n    selectTask: PropTypes.func.isRequired,\n    clickTask: PropTypes.func.isRequired,\n    reAssignTask: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function TasksProcessingTableRowView(_ref) {\n  var _classesRow, _getStatus, _task$assigneeFullNam, _task$assigneeFullNam2, _task$additionalAssig, _task$requestedByFull;\n\n  var caseTaskTypeView = _ref.caseTaskTypeView,\n      isTaskTeam = _ref.isTaskTeam,\n      task = _ref.task,\n      isSelected = _ref.isSelected,\n      columnProps = _ref.columnProps,\n      taskActionItems = _ref.taskActionItems,\n      handlers = _ref.handlers,\n      isPremiumProcessing = _ref.isPremiumProcessing,\n      isTableHidden = _ref.isTableHidden;\n  var classes = makeStyles(styles, {\n    name: 'TasksProcessingTableRow'\n  })();\n  var classesRow = (_classesRow = {}, _defineProperty(_classesRow, classes.row, true), _defineProperty(_classesRow, classes.rowSelected, isSelected), _classesRow);\n\n  var getStatus = function getStatus(task) {\n    var targetDate = new Date(task === null || task === void 0 ? void 0 : task.targetDueDate).getTime();\n    var createdDate = new Date(task === null || task === void 0 ? void 0 : task.createdOn).getTime();\n    var dateNow = new Date().getTime();\n    var targetDDMMYY = utils.string.t('format.date', {\n      value: {\n        date: task === null || task === void 0 ? void 0 : task.targetDueDate,\n        format: config.ui.format.date.slashNumeric\n      }\n    });\n    var dateNowDDMMYY = utils.string.t('format.date', {\n      value: {\n        date: new Date(),\n        format: config.ui.format.date.slashNumeric\n      }\n    });\n\n    if (isPremiumProcessing) {\n      return {\n        type: 'success'\n      };\n    } else {\n      var _task$status, _task$status2, _task$status3;\n\n      if (targetDate > createdDate && (task === null || task === void 0 ? void 0 : (_task$status = task.status) === null || _task$status === void 0 ? void 0 : _task$status.toLowerCase()) === TASK_TAB_COMPLETED_STATUS.toLowerCase()) return {\n        type: 'success'\n      };else if (targetDate >= createdDate && targetDate > dateNow && targetDate !== dateNow && targetDDMMYY !== dateNowDDMMYY && (task === null || task === void 0 ? void 0 : (_task$status2 = task.status) === null || _task$status2 === void 0 ? void 0 : _task$status2.toLowerCase()) === TASK_TAB_INPROGRESS_STATUS.toLowerCase()) return {\n        type: 'success'\n      };else if (targetDate === dateNow || targetDDMMYY === dateNowDDMMYY) {\n        return {\n          type: 'alert'\n        };\n      } else if (targetDate <= dateNow && (task === null || task === void 0 ? void 0 : (_task$status3 = task.status) === null || _task$status3 === void 0 ? void 0 : _task$status3.toLowerCase()) === TASK_TAB_INPROGRESS_STATUS.toLowerCase()) return {\n        type: 'error',\n        dateAlert: true\n      };\n    }\n  };\n\n  var status = getStatus(task);\n  return /*#__PURE__*/_jsxDEV(TableRow, {\n    hover: true,\n    onClick: handlers.selectTask(task),\n    className: classnames(classesRow),\n    children: [!isTableHidden && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('id')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        alignItems: \"center\",\n        children: /*#__PURE__*/_jsxDEV(FormCheckbox, {\n          name: \"checkbox-\".concat((task === null || task === void 0 ? void 0 : task.taskId) || (task === null || task === void 0 ? void 0 : task.processId)),\n          type: \"checkbox\",\n          value: isSelected,\n          nestedClasses: {\n            root: classes.checkbox\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 83,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 82,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 81,\n      columnNumber: 9\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('taskRef')), {}, {\n      children: /*#__PURE__*/_jsxDEV(Link, {\n        text: task === null || task === void 0 ? void 0 : task.taskRef,\n        color: \"secondary\",\n        onClick: handlers.clickTask(task)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 92,\n        columnNumber: 9\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 91,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('createdOn')), {}, {\n      children: utils.string.t('format.date', {\n        value: {\n          date: task.createdOn,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 94,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps(isPremiumProcessing ? 'taskName' : 'taskType')), {}, {\n      children: isPremiumProcessing ? task === null || task === void 0 ? void 0 : task.taskName : task === null || task === void 0 ? void 0 : task.taskType\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 97,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('description')), {}, {\n      title: task === null || task === void 0 ? void 0 : task.description,\n      nestedClasses: {\n        root: classes.description\n      },\n      children: task === null || task === void 0 ? void 0 : task.description\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 101,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('targetDueDate')), {}, {\n      className: ((_getStatus = getStatus(task)) === null || _getStatus === void 0 ? void 0 : _getStatus.dateAlert) ? classes.dateAlert : '',\n      children: utils.string.t('format.date', {\n        value: {\n          date: task.targetDueDate,\n          format: config.ui.format.date.text\n        }\n      })\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 105,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('processRef')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.processRef\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 108,\n      columnNumber: 7\n    }, this), !isPremiumProcessing && isTaskTeam && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$assigneeFullNam = task.assigneeFullName) === null || _task$assigneeFullNam === void 0 ? void 0 : _task$assigneeFullNam.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 109,\n      columnNumber: 46\n    }, this), isPremiumProcessing && caseTaskTypeView !== 'myTask' && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$assigneeFullNam2 = task.assigneeFullName) === null || _task$assigneeFullNam2 === void 0 ? void 0 : _task$assigneeFullNam2.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 111,\n      columnNumber: 9\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('additionalAssignee')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$additionalAssig = task.additionalAssigneeFullName) === null || _task$additionalAssig === void 0 ? void 0 : _task$additionalAssig.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 113,\n      columnNumber: 32\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('priority')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.priority\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 114,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('status')), {}, {\n      children: (task === null || task === void 0 ? void 0 : task.status) && /*#__PURE__*/_jsxDEV(Status, {\n        size: \"sm\",\n        text: /*#__PURE__*/_jsxDEV(Translate, {\n          label: task === null || task === void 0 ? void 0 : task.status\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 116,\n          columnNumber: 50\n        }, this),\n        status: status === null || status === void 0 ? void 0 : status.type\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 116,\n        columnNumber: 26\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 115,\n      columnNumber: 7\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('requestedBy')), {}, {\n      children: task === null || task === void 0 ? void 0 : (_task$requestedByFull = task.requestedByFullName) === null || _task$requestedByFull === void 0 ? void 0 : _task$requestedByFull.trim()\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 118,\n      columnNumber: 32\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('team')), {}, {\n      children: task === null || task === void 0 ? void 0 : task.team\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 119,\n      columnNumber: 32\n    }, this), isPremiumProcessing && /*#__PURE__*/_jsxDEV(_Fragment, {\n      children: [/*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('inceptionDate')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.inceptionDate\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 122,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('assuredName')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.assuredName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 123,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('type')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.type\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 124,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('group')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.group\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 125,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('departmentName')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.departmentName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 126,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('processSubType')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.processSubType\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 127,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('xbInstanceId')), {}, {\n        children: task === null || task === void 0 ? void 0 : task.xbInstanceName\n      }), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, this)]\n    }, void 0, true), isPremiumProcessing && caseTaskTypeView === TASK_TEAM_TYPE.myTeam && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        items: taskActionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 133,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 132,\n      columnNumber: 9\n    }, this), !isPremiumProcessing && /*#__PURE__*/_jsxDEV(TableCell, _objectSpread(_objectSpread({}, columnProps('actions')), {}, {\n      children: /*#__PURE__*/_jsxDEV(PopoverMenu, {\n        id: \"search-menu-list\",\n        anchorOrigin: {\n          vertical: 'bottom',\n          horizontal: 'left'\n        },\n        transformOrigin: {\n          vertical: 'top',\n          horizontal: 'right'\n        },\n        items: taskActionItems\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 149,\n        columnNumber: 11\n      }, this)\n    }), void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 148,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this);\n}\n_c = TasksProcessingTableRowView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TasksProcessingTableRowView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TasksProcessingTableRow/TasksProcessingTableRow.view.js"],"names":["React","PropTypes","classnames","styles","FormCheckbox","Link","TableCell","PopoverMenu","Status","Translate","utils","TASK_TAB_COMPLETED_STATUS","TASK_TAB_INPROGRESS_STATUS","config","TASK_TEAM_TYPE","makeStyles","Box","TableRow","TasksProcessingTableRowView","propTypes","isTaskTeam","bool","caseTaskTypeView","string","task","object","isRequired","isSelected","isPremiumProcessing","columnProps","func","taskActionItems","array","isTableHidden","handlers","shape","selectTask","clickTask","reAssignTask","classes","name","classesRow","row","rowSelected","getStatus","targetDate","Date","targetDueDate","getTime","createdDate","createdOn","dateNow","targetDDMMYY","t","value","date","format","ui","slashNumeric","dateNowDDMMYY","type","status","toLowerCase","dateAlert","taskId","processId","root","checkbox","taskRef","text","taskName","taskType","description","processRef","assigneeFullName","trim","additionalAssigneeFullName","priority","requestedByFullName","team","inceptionDate","assuredName","group","departmentName","processSubType","xbInstanceName","myTeam","vertical","horizontal"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './TasksProcessingTableRow.styles';\r\nimport { FormCheckbox, Link, TableCell, PopoverMenu, Status, Translate } from 'components';\r\nimport * as utils from 'utils';\r\nimport { TASK_TAB_COMPLETED_STATUS, TASK_TAB_INPROGRESS_STATUS } from 'consts';\r\nimport config from 'config';\r\nimport { TASK_TEAM_TYPE } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Box, TableRow } from '@material-ui/core';\r\n\r\nTasksProcessingTableRowView.propTypes = {\r\n  isTaskTeam: PropTypes.bool,\r\n  caseTaskTypeView: PropTypes.string,\r\n  task: PropTypes.object.isRequired,\r\n  isSelected: PropTypes.bool,\r\n  isPremiumProcessing: PropTypes.bool,\r\n  columnProps: PropTypes.func.isRequired,\r\n  taskActionItems: PropTypes.array.isRequired,\r\n  isTableHidden: PropTypes.bool,\r\n  handlers: PropTypes.shape({\r\n    selectTask: PropTypes.func.isRequired,\r\n    clickTask: PropTypes.func.isRequired,\r\n    reAssignTask: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function TasksProcessingTableRowView({\r\n  caseTaskTypeView,\r\n  isTaskTeam,\r\n  task,\r\n  isSelected,\r\n  columnProps,\r\n  taskActionItems,\r\n  handlers,\r\n  isPremiumProcessing,\r\n  isTableHidden\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'TasksProcessingTableRow' })();\r\n\r\n  const classesRow = {\r\n    [classes.row]: true,\r\n    [classes.rowSelected]: isSelected,\r\n  };\r\n\r\n  const getStatus = (task) => {\r\n    const targetDate = new Date(task?.targetDueDate).getTime();\r\n    const createdDate = new Date(task?.createdOn).getTime();\r\n    const dateNow = new Date().getTime();\r\n    const targetDDMMYY = utils.string.t('format.date', {\r\n      value: { date: task?.targetDueDate, format: config.ui.format.date.slashNumeric },\r\n    });\r\n    const dateNowDDMMYY = utils.string.t('format.date', { value: { date: new Date(), format: config.ui.format.date.slashNumeric } });\r\n    if (isPremiumProcessing) {\r\n      return { type: 'success' };\r\n    } else {\r\n      if (targetDate > createdDate && task?.status?.toLowerCase() === TASK_TAB_COMPLETED_STATUS.toLowerCase()) return { type: 'success' };\r\n      else if (\r\n        targetDate >= createdDate &&\r\n        targetDate > dateNow &&\r\n        targetDate !== dateNow &&\r\n        targetDDMMYY !== dateNowDDMMYY &&\r\n        task?.status?.toLowerCase() === TASK_TAB_INPROGRESS_STATUS.toLowerCase()\r\n      )\r\n        return { type: 'success' };\r\n      else if (targetDate === dateNow || targetDDMMYY === dateNowDDMMYY) {\r\n        return { type: 'alert' };\r\n      } else if (targetDate <= dateNow && task?.status?.toLowerCase() === TASK_TAB_INPROGRESS_STATUS.toLowerCase())\r\n        return { type: 'error', dateAlert: true };\r\n    }\r\n  };\r\n  const status = getStatus(task);\r\n\r\n  return (\r\n    <TableRow hover onClick={handlers.selectTask(task)} className={classnames(classesRow)}>\r\n      {!isTableHidden &&\r\n        <TableCell {...columnProps('id')}>\r\n          <Box display=\"flex\" alignItems=\"center\">\r\n            <FormCheckbox\r\n              name={`checkbox-${task?.taskId || task?.processId}`}\r\n              type=\"checkbox\"\r\n              value={isSelected}\r\n              nestedClasses={{ root: classes.checkbox }}\r\n            />\r\n          </Box>\r\n        </TableCell>}\r\n      <TableCell {...columnProps('taskRef')}>\r\n        <Link text={task?.taskRef} color=\"secondary\" onClick={handlers.clickTask(task)} />\r\n      </TableCell>\r\n      <TableCell {...columnProps('createdOn')}>\r\n        {utils.string.t('format.date', { value: { date: task.createdOn, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps(isPremiumProcessing ? 'taskName' : 'taskType')}>\r\n        {isPremiumProcessing ? task?.taskName : task?.taskType}\r\n      </TableCell>\r\n\r\n      <TableCell {...columnProps('description')} title={task?.description} nestedClasses={{ root: classes.description }}>\r\n        {task?.description}\r\n      </TableCell>\r\n\r\n      <TableCell {...columnProps('targetDueDate')} className={getStatus(task)?.dateAlert ? classes.dateAlert : ''}>\r\n        {utils.string.t('format.date', { value: { date: task.targetDueDate, format: config.ui.format.date.text } })}\r\n      </TableCell>\r\n      <TableCell {...columnProps('processRef')}>{task?.processRef}</TableCell>\r\n      {!isPremiumProcessing && isTaskTeam && <TableCell {...columnProps('assignee')}>{task?.assigneeFullName?.trim()}</TableCell>}\r\n      {isPremiumProcessing && caseTaskTypeView !== 'myTask' && (\r\n        <TableCell {...columnProps('assignee')}>{task?.assigneeFullName?.trim()}</TableCell>\r\n      )}\r\n      {!isPremiumProcessing && <TableCell {...columnProps('additionalAssignee')}>{task?.additionalAssigneeFullName?.trim()}</TableCell>}\r\n      <TableCell {...columnProps('priority')}>{task?.priority}</TableCell>\r\n      <TableCell {...columnProps('status')}>\r\n        {task?.status && <Status size=\"sm\" text={<Translate label={task?.status} />} status={status?.type} />}\r\n      </TableCell>\r\n      {!isPremiumProcessing && <TableCell {...columnProps('requestedBy')}>{task?.requestedByFullName?.trim()}</TableCell>}\r\n      {!isPremiumProcessing && <TableCell {...columnProps('team')}>{task?.team}</TableCell>}\r\n      {isPremiumProcessing && (\r\n        <>\r\n          <TableCell {...columnProps('inceptionDate')}>{task?.inceptionDate}</TableCell>\r\n          <TableCell {...columnProps('assuredName')}>{task?.assuredName}</TableCell>\r\n          <TableCell {...columnProps('type')}>{task?.type}</TableCell>\r\n          <TableCell {...columnProps('group')}>{task?.group}</TableCell>\r\n          <TableCell {...columnProps('departmentName')}>{task?.departmentName}</TableCell>\r\n          <TableCell {...columnProps('processSubType')}>{task?.processSubType}</TableCell>\r\n          <TableCell {...columnProps('xbInstanceId')}>{task?.xbInstanceName}</TableCell>\r\n        </>\r\n      )}\r\n      {isPremiumProcessing && caseTaskTypeView === TASK_TEAM_TYPE.myTeam && (\r\n        <TableCell {...columnProps('actions')}>\r\n          <PopoverMenu\r\n            id=\"search-menu-list\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={taskActionItems}\r\n          />\r\n        </TableCell>\r\n      )}\r\n      {!isPremiumProcessing && (\r\n        <TableCell {...columnProps('actions')}>\r\n          <PopoverMenu\r\n            id=\"search-menu-list\"\r\n            anchorOrigin={{\r\n              vertical: 'bottom',\r\n              horizontal: 'left',\r\n            }}\r\n            transformOrigin={{\r\n              vertical: 'top',\r\n              horizontal: 'right',\r\n            }}\r\n            items={taskActionItems}\r\n          />\r\n        </TableCell>\r\n      )}\r\n    </TableRow>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}