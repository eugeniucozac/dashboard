{"ast":null,"code":"import { authLogout, addLoader, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var getStatuses = function getStatuses() {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/claims.actions.getStatuses'\n    };\n    dispatch(getStatusesRequest());\n    dispatch(addLoader('getStatuses'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.claimService,\n      path: 'api/data/gui/claims/status'\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (data) {\n      dispatch(getStatusesSuccess(data.data));\n      dispatch(removeLoader('getStatuses'));\n      return data.data;\n    })[\"catch\"](function (err) {\n      dispatch(getStatusesFailure(err, defaultError));\n      dispatch(removeLoader('getStatuses'));\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      return err;\n    });\n  };\n};\nexport var getStatusesRequest = function getStatusesRequest(data) {\n  return {\n    type: 'CLAIMS_STATUSES_GET_REQUEST',\n    payload: data\n  };\n};\nexport var getStatusesSuccess = function getStatusesSuccess(data) {\n  return {\n    type: 'CLAIMS_STATUSES_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getStatusesFailure = function getStatusesFailure(data) {\n  return {\n    type: 'CLAIMS_STATUSES_GET_FAILURE',\n    payload: data\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/claims/claims.actions.getStatuses.js"],"names":["authLogout","addLoader","removeLoader","utils","getStatuses","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getStatusesRequest","api","get","token","accessToken","claimService","path","then","response","handleResponse","data","getStatusesSuccess","err","getStatusesFailure","handleUnauthorized","type","payload"],"mappings":"AAAA,SAASA,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc;AAAA,SAAM,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACvD;AADuD,oBAEEA,QAAQ,EAFV;AAAA,QAEvCC,IAFuC,aAE/CC,IAF+C,CAEvCD,IAFuC;AAAA,QAEbE,QAFa,aAE/BC,MAF+B,CAErBC,IAFqB,CAEbF,QAFa;;AAIvD,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,kBAAkB,EAAnB,CAAR;AACAT,IAAAA,QAAQ,CAACJ,SAAS,CAAC,aAAD,CAAV,CAAR;AAEA,WAAOE,KAAK,CAACY,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,YAFhB;AAGHC,MAAAA,IAAI,EAAE;AAHH,KADA,EAMJC,IANI,CAMC,UAACC,QAAD;AAAA,aAAcnB,KAAK,CAACY,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD,EAAU;AACdnB,MAAAA,QAAQ,CAACoB,kBAAkB,CAACD,IAAI,CAACA,IAAN,CAAnB,CAAR;AACAnB,MAAAA,QAAQ,CAACH,YAAY,CAAC,aAAD,CAAb,CAAR;AACA,aAAOsB,IAAI,CAACA,IAAZ;AACD,KAXI,WAYE,UAACE,GAAD,EAAS;AACdrB,MAAAA,QAAQ,CAACsB,kBAAkB,CAACD,GAAD,EAAMd,YAAN,CAAnB,CAAR;AACAP,MAAAA,QAAQ,CAACH,YAAY,CAAC,aAAD,CAAb,CAAR;AACAC,MAAAA,KAAK,CAACY,GAAN,CAAUa,kBAAV,CAA6BF,GAA7B,EAAkCrB,QAAlC,EAA4CL,UAA5C;AACA,aAAO0B,GAAP;AACD,KAjBI,CAAP;AAkBD,GA7B0B;AAAA,CAApB;AA+BP,OAAO,IAAMZ,kBAAkB,GAAG,SAArBA,kBAAqB,CAACU,IAAD,EAAU;AAC1C,SAAO;AACLK,IAAAA,IAAI,EAAE,6BADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAU;AAC1C,SAAO;AACLK,IAAAA,IAAI,EAAE,6BADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMG,kBAAkB,GAAG,SAArBA,kBAAqB,CAACH,IAAD,EAAU;AAC1C,SAAO;AACLK,IAAAA,IAAI,EAAE,6BADD;AAELC,IAAAA,OAAO,EAAEN;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { authLogout, addLoader, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getStatuses = () => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/claims.actions.getStatuses',\r\n  };\r\n\r\n  dispatch(getStatusesRequest());\r\n  dispatch(addLoader('getStatuses'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.claimService,\r\n      path: 'api/data/gui/claims/status',\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((data) => {\r\n      dispatch(getStatusesSuccess(data.data));\r\n      dispatch(removeLoader('getStatuses'));\r\n      return data.data;\r\n    })\r\n    .catch((err) => {\r\n      dispatch(getStatusesFailure(err, defaultError));\r\n      dispatch(removeLoader('getStatuses'));\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const getStatusesRequest = (data) => {\r\n  return {\r\n    type: 'CLAIMS_STATUSES_GET_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getStatusesSuccess = (data) => {\r\n  return {\r\n    type: 'CLAIMS_STATUSES_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getStatusesFailure = (data) => {\r\n  return {\r\n    type: 'CLAIMS_STATUSES_GET_FAILURE',\r\n    payload: data,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}