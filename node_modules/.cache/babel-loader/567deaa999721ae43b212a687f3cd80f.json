{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\RfiQueryForm\\\\RfiQueryForm.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport * as Yup from 'yup';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport { useHistory } from 'react-router';\nimport { useForm } from 'react-hook-form';\nimport { useDispatch, useSelector } from 'react-redux'; //app\n\nimport * as utils from 'utils';\nimport { RfiQueryFormView } from './RfiQueryForm.view';\nimport { Loader } from 'components';\nimport config from 'config';\nimport { CREATE_RFI_FORM, TASK_TAB_COMPLETED_STATUS } from 'consts';\nimport { getUsersByOrg, selectClaimsAssignedToUsers, postSendRFI, postCloseRFI, showModal, selectUserEmail, resetClaimsAssignedToUsers, setDmsTaskContextType, selectDmsClientSideUploadFiles, postDmsDocuments, resetDmsClientSideUploadedDocuments, removeDmsClientSideUploadedDocuments, linkMultipleDmsDocuments, getRfiHistory } from 'stores';\nimport * as constants from 'consts'; // mui\n\nimport { Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function RfiQueryForm(props) {\n  _s();\n\n  var _useSelector, _rfiTask$requestedBy3;\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var assignedToUsers = ((_useSelector = useSelector(selectClaimsAssignedToUsers)) === null || _useSelector === void 0 ? void 0 : _useSelector.items) || null;\n  var userEmail = useSelector(selectUserEmail);\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      resetKey = _useState2[0],\n      setResetKey = _useState2[1];\n\n  var _useState3 = useState(false),\n      _useState4 = _slicedToArray(_useState3, 2),\n      isDataReady = _useState4[0],\n      setIsDataReady = _useState4[1];\n\n  var clientUploadedFiles = useSelector(selectDmsClientSideUploadFiles);\n  var documentNameList = clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.documentNameList;\n  var rfiTask = props.rfiTask;\n\n  var defaultAssignedUser = function defaultAssignedUser() {\n    var _rfiTask$requestedBy;\n\n    return (userEmail === null || userEmail === void 0 ? void 0 : userEmail.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy = rfiTask.requestedBy) === null || _rfiTask$requestedBy === void 0 ? void 0 : _rfiTask$requestedBy.toLowerCase()) ? assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (_ref) {\n      var _rfiTask$rfiSentTo;\n\n      var email = _ref.email;\n      return (email === null || email === void 0 ? void 0 : email.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$rfiSentTo = rfiTask.rfiSentTo) === null || _rfiTask$rfiSentTo === void 0 ? void 0 : _rfiTask$rfiSentTo.toLowerCase());\n    }) : utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.find(function (_ref2) {\n      var _rfiTask$requestedBy2;\n\n      var email = _ref2.email;\n      return (email === null || email === void 0 ? void 0 : email.toLowerCase()) === (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy2 = rfiTask.requestedBy) === null || _rfiTask$requestedBy2 === void 0 ? void 0 : _rfiTask$requestedBy2.toLowerCase());\n    }) : null;\n  };\n\n  var fields = [{\n    name: 'sendTo',\n    type: 'autocompletemui',\n    value: defaultAssignedUser(),\n    options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\n    optionKey: 'email',\n    optionLabel: 'fullName',\n    muiComponentProps: {\n      disabled: (rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.status) === TASK_TAB_COMPLETED_STATUS\n    },\n    validation: Yup.object().required(utils.string.t('validation.required'))\n  }, {\n    name: 'description',\n    type: 'textarea',\n    hint: utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', {\n      char: 1000\n    }),\n    muiComponentProps: {\n      inputProps: {\n        maxLength: 1000\n      },\n      multiline: true,\n      rows: 3,\n      rowsMax: 3,\n      'data-testid': 'details'\n    },\n    validation: Yup.string().required(utils.string.t('validation.required')).max(1000, utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', {\n      char: 1000\n    }))\n  }];\n  var actions = [{\n    name: 'secondary',\n    label: utils.string.t('app.close'),\n    disabled: userEmail.toLowerCase() !== (rfiTask === null || rfiTask === void 0 ? void 0 : (_rfiTask$requestedBy3 = rfiTask.requestedBy) === null || _rfiTask$requestedBy3 === void 0 ? void 0 : _rfiTask$requestedBy3.toLowerCase()),\n    handler: function handler() {\n      handleCloseRFI();\n    }\n  }, {\n    name: 'submit',\n    label: utils.string.t('app.reply'),\n    handler: function handler(values) {\n      handleRFISend(values);\n    }\n  }];\n\n  var handleRFISend = function handleRFISend(values) {\n    if (values) {\n      var _props$selectedQueryC;\n\n      var sendToObj = assignedToUsers.find(function (user) {\n        var _values$sendTo;\n\n        return user.email === (values === null || values === void 0 ? void 0 : (_values$sendTo = values.sendTo) === null || _values$sendTo === void 0 ? void 0 : _values$sendTo.email);\n      });\n      var rfiSendData = {\n        assignedTo: sendToObj === null || sendToObj === void 0 ? void 0 : sendToObj.email,\n        bpmTaskID: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId,\n        caseIncidentID: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.caseIncidentID,\n        notes: values === null || values === void 0 ? void 0 : values.description,\n        team: sendToObj === null || sendToObj === void 0 ? void 0 : sendToObj.organisationName,\n        queryCodeDescription: (props === null || props === void 0 ? void 0 : (_props$selectedQueryC = props.selectedQueryCode) === null || _props$selectedQueryC === void 0 ? void 0 : _props$selectedQueryC.queryCodeDescription) || ''\n      };\n      dispatch(postSendRFI(rfiSendData)).then(function (data) {\n        if (data.status === constants.API_RESPONSE_OK) {\n          var _data$data = data.data,\n              caseIncidentID = _data$data.caseIncidentID,\n              caseIncidentNotesID = _data$data.caseIncidentNotesID;\n\n          if (caseIncidentID && caseIncidentNotesID) {\n            dispatch(setDmsTaskContextType({\n              caseIncidentID: caseIncidentID,\n              caseIncidentNotesID: caseIncidentNotesID\n            }));\n            dispatch(getRfiHistory(rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId));\n            var uploadedFileDetails = clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.uploadFileDetails;\n            var documentTypeKey = uploadedFileDetails.documentTypeKey,\n                submitData = uploadedFileDetails.submitData,\n                submitFiles = uploadedFileDetails.submitFiles;\n\n            if (!utils.generic.isInvalidOrEmptyArray(submitFiles)) {\n              dispatch(postDmsDocuments({\n                context: constants.DMS_CONTEXT_TASK,\n                documentTypeKey: documentTypeKey,\n                submitData: submitData,\n                submitFiles: submitFiles\n              })).then(function (data) {\n                if (data.status === constants.API_RESPONSE_OK) {\n                  var _props$handlers;\n\n                  (_props$handlers = props.handlers) === null || _props$handlers === void 0 ? void 0 : _props$handlers.getRfiHistoryDetails();\n                  dispatch(resetDmsClientSideUploadedDocuments());\n                }\n              });\n            }\n\n            var linkedDocList = clientUploadedFiles === null || clientUploadedFiles === void 0 ? void 0 : clientUploadedFiles.linkedDocumentList;\n\n            if (!utils.generic.isInvalidOrEmptyArray(linkedDocList)) {\n              var linkedDocParamList = linkedDocList === null || linkedDocList === void 0 ? void 0 : linkedDocList.map(function (item) {\n                var linkItem = _objectSpread({}, item);\n\n                return {\n                  documentId: linkItem.documentId,\n                  referenceId: \"\".concat(linkItem.referenceId, \"-\").concat(caseIncidentNotesID),\n                  sectionType: linkItem.sectionType\n                };\n              });\n              dispatch(linkMultipleDmsDocuments(linkedDocParamList)).then(function (response) {\n                if ((response === null || response === void 0 ? void 0 : response.status) === constants.API_RESPONSE_OK) {\n                  var _props$handlers2;\n\n                  dispatch(resetDmsClientSideUploadedDocuments());\n                  (_props$handlers2 = props.handlers) === null || _props$handlers2 === void 0 ? void 0 : _props$handlers2.getRfiHistoryDetails();\n                }\n              });\n            }\n          }\n        }\n      });\n    }\n  };\n\n  var handleCloseRFI = function handleCloseRFI() {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('status.alert'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('app.yes'),\n          cancelLabel: utils.string.t('app.no'),\n          confirmMessage: utils.string.t('claims.processing.modal.rfiCloseConfirm'),\n          buttonColors: {\n            confirm: 'secondary',\n            cancel: 'default'\n          },\n          submitHandler: function submitHandler() {\n            dispatch(postCloseRFI(rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId, history)).then(function (data) {\n              if (data.status === 'OK') {\n                setTimeout(function () {\n                  return history.replace(config.routes.claimsProcessing.root);\n                }, 1000);\n              }\n            });\n          }\n        }\n      }\n    }));\n  };\n\n  var handleAttachDocuments = function handleAttachDocuments() {\n    dispatch(showModal({\n      component: 'DMS_UPLOAD_FILES_CLIENT_SIDE',\n      props: {\n        title: utils.string.t('claims.rfiDashboard.attachDocuments'),\n        fullWidth: true,\n        maxWidth: 'xl',\n        componentProps: {\n          referenceId: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.taskId,\n          sourceId: rfiTask === null || rfiTask === void 0 ? void 0 : rfiTask.sourceID,\n          documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim\n        }\n      }\n    }));\n  };\n\n  var confirmDocumentDelete = function confirmDocumentDelete(index) {\n    dispatch(showModal({\n      component: 'CONFIRM',\n      props: {\n        fullWidth: true,\n        title: utils.string.t('dms.view.deleteDocument.title'),\n        maxWidth: 'xs',\n        componentProps: {\n          confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\n          submitHandler: function submitHandler() {\n            return removeDocument(index);\n          }\n        }\n      }\n    }));\n  };\n\n  var removeDocument = function removeDocument(index) {\n    var _documentList$index, _documentList$index3;\n\n    var uploadedFiles = _objectSpread({}, clientUploadedFiles);\n\n    var documentList = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.documentTableList);\n\n    if (!utils.generic.isInvalidOrEmptyArray(documentList) && ((_documentList$index = documentList[index]) === null || _documentList$index === void 0 ? void 0 : _documentList$index.isLink)) {\n      var _documentList$index2, _uploadedFiles$linked, _uploadedFiles$docume, _uploadedFiles$docume2;\n\n      var linkedDocName = (_documentList$index2 = documentList[index]) === null || _documentList$index2 === void 0 ? void 0 : _documentList$index2.documentName;\n\n      var linkedDocList = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : uploadedFiles.linkedDocumentList);\n\n      var searchIndex = linkedDocList === null || linkedDocList === void 0 ? void 0 : linkedDocList.findIndex(function (linkedDocItem) {\n        return (linkedDocItem === null || linkedDocItem === void 0 ? void 0 : linkedDocItem.documentName) === linkedDocName;\n      });\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$linked = uploadedFiles.linkedDocumentList) === null || _uploadedFiles$linked === void 0 ? void 0 : _uploadedFiles$linked.splice(searchIndex, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume = uploadedFiles.documentTableList) === null || _uploadedFiles$docume === void 0 ? void 0 : _uploadedFiles$docume.splice(index, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume2 = uploadedFiles.documentNameList) === null || _uploadedFiles$docume2 === void 0 ? void 0 : _uploadedFiles$docume2.splice(index, 1);\n    } else if (!utils.generic.isInvalidOrEmptyArray(documentList) && !((_documentList$index3 = documentList[index]) === null || _documentList$index3 === void 0 ? void 0 : _documentList$index3.isLink)) {\n      var _documentList$index4, _uploadedFiles$upload, _uploadedFiles$upload2, _uploadedFiles$upload3, _uploadedFiles$upload4, _uploadedFiles$upload5, _uploadedFiles$upload6, _uploadedFiles$upload7, _uploadedFiles$upload8, _uploadedFiles$upload9, _uploadedFiles$upload10, _uploadedFiles$upload11, _uploadedFiles$docume3, _uploadedFiles$docume4;\n\n      var uploadedDocName = (_documentList$index4 = documentList[index]) === null || _documentList$index4 === void 0 ? void 0 : _documentList$index4.documentName;\n\n      var submitFiles = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload === void 0 ? void 0 : _uploadedFiles$upload.submitFiles);\n\n      var searchSubmitIndex = submitFiles === null || submitFiles === void 0 ? void 0 : submitFiles.findIndex(function (uploadSubmitItem) {\n        return (uploadSubmitItem === null || uploadSubmitItem === void 0 ? void 0 : uploadSubmitItem.name) === uploadedDocName;\n      });\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload2 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload2 === void 0 ? void 0 : _uploadedFiles$upload2.submitFiles) && (uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload3 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload3 === void 0 ? void 0 : (_uploadedFiles$upload4 = _uploadedFiles$upload3.submitFiles) === null || _uploadedFiles$upload4 === void 0 ? void 0 : _uploadedFiles$upload4.splice(searchSubmitIndex, 1));\n\n      var documentDto = _toConsumableArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload5 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload5 === void 0 ? void 0 : (_uploadedFiles$upload6 = _uploadedFiles$upload5.submitData) === null || _uploadedFiles$upload6 === void 0 ? void 0 : _uploadedFiles$upload6.documentDto);\n\n      var searchDtoIndex = documentDto === null || documentDto === void 0 ? void 0 : documentDto.findIndex(function (docDtoItem) {\n        return (docDtoItem === null || docDtoItem === void 0 ? void 0 : docDtoItem.documentName) === uploadedDocName;\n      });\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload7 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload7 === void 0 ? void 0 : (_uploadedFiles$upload8 = _uploadedFiles$upload7.submitData) === null || _uploadedFiles$upload8 === void 0 ? void 0 : _uploadedFiles$upload8.documentDto) && (uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$upload9 = uploadedFiles.uploadFileDetails) === null || _uploadedFiles$upload9 === void 0 ? void 0 : (_uploadedFiles$upload10 = _uploadedFiles$upload9.submitData) === null || _uploadedFiles$upload10 === void 0 ? void 0 : (_uploadedFiles$upload11 = _uploadedFiles$upload10.documentDto) === null || _uploadedFiles$upload11 === void 0 ? void 0 : _uploadedFiles$upload11.splice(searchDtoIndex, 1));\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume3 = uploadedFiles.documentTableList) === null || _uploadedFiles$docume3 === void 0 ? void 0 : _uploadedFiles$docume3.splice(index, 1);\n      uploadedFiles === null || uploadedFiles === void 0 ? void 0 : (_uploadedFiles$docume4 = uploadedFiles.documentNameList) === null || _uploadedFiles$docume4 === void 0 ? void 0 : _uploadedFiles$docume4.splice(index, 1);\n    }\n\n    dispatch(removeDmsClientSideUploadedDocuments({\n      uploadedFiles: uploadedFiles\n    }));\n  };\n\n  useEffect(function () {\n    dispatch(getUsersByOrg('', [rfiTask], CREATE_RFI_FORM, false));\n    dispatch(resetClaimsAssignedToUsers());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if ((assignedToUsers === null || assignedToUsers === void 0 ? void 0 : assignedToUsers.length) > 0) {\n      setResetKey(new Date().getTime());\n      setIsDataReady(true);\n    }\n  }, [assignedToUsers]);\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      setValue = _useForm.setValue;\n\n  if (!isDataReady) {\n    return /*#__PURE__*/_jsxDEV(Box, {\n      height: \"300px\",\n      children: /*#__PURE__*/_jsxDEV(Loader, {\n        visible: true,\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 269,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 268,\n      columnNumber: 7\n    }, this);\n  }\n\n  return /*#__PURE__*/_jsxDEV(RfiQueryFormView, _objectSpread(_objectSpread({}, props), {}, {\n    fields: fields,\n    actions: actions,\n    formProps: {\n      control: control,\n      handleSubmit: handleSubmit,\n      setValue: setValue,\n      errors: errors,\n      formState: formState,\n      reset: reset\n    },\n    resetKey: resetKey,\n    documentNameList: documentNameList,\n    handlers: {\n      handleAttachDocuments: handleAttachDocuments,\n      confirmDocumentDelete: confirmDocumentDelete\n    }\n  }), void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 275,\n    columnNumber: 5\n  }, this);\n}\n\n_s(RfiQueryForm, \"pAz1UTENkAwMd6WRpA5Ia/y/UaE=\", false, function () {\n  return [useDispatch, useHistory, useSelector, useSelector, useSelector, useForm];\n});\n\n_c = RfiQueryForm;\n\nvar _c;\n\n$RefreshReg$(_c, \"RfiQueryForm\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/RfiQueryForm/RfiQueryForm.js"],"names":["React","useEffect","useState","Yup","yupResolver","useHistory","useForm","useDispatch","useSelector","utils","RfiQueryFormView","Loader","config","CREATE_RFI_FORM","TASK_TAB_COMPLETED_STATUS","getUsersByOrg","selectClaimsAssignedToUsers","postSendRFI","postCloseRFI","showModal","selectUserEmail","resetClaimsAssignedToUsers","setDmsTaskContextType","selectDmsClientSideUploadFiles","postDmsDocuments","resetDmsClientSideUploadedDocuments","removeDmsClientSideUploadedDocuments","linkMultipleDmsDocuments","getRfiHistory","constants","Box","RfiQueryForm","props","dispatch","history","assignedToUsers","items","userEmail","resetKey","setResetKey","isDataReady","setIsDataReady","clientUploadedFiles","documentNameList","rfiTask","defaultAssignedUser","toLowerCase","requestedBy","find","email","rfiSentTo","generic","isValidArray","fields","name","type","value","options","optionKey","optionLabel","muiComponentProps","disabled","status","validation","object","required","string","t","hint","char","inputProps","maxLength","multiline","rows","rowsMax","max","actions","label","handler","handleCloseRFI","values","handleRFISend","sendToObj","user","sendTo","rfiSendData","assignedTo","bpmTaskID","taskId","caseIncidentID","notes","description","team","organisationName","queryCodeDescription","selectedQueryCode","then","data","API_RESPONSE_OK","caseIncidentNotesID","uploadedFileDetails","uploadFileDetails","documentTypeKey","submitData","submitFiles","isInvalidOrEmptyArray","context","DMS_CONTEXT_TASK","handlers","getRfiHistoryDetails","linkedDocList","linkedDocumentList","linkedDocParamList","map","item","linkItem","documentId","referenceId","sectionType","response","component","fullWidth","title","maxWidth","componentProps","confirmLabel","cancelLabel","confirmMessage","buttonColors","confirm","cancel","submitHandler","setTimeout","replace","routes","claimsProcessing","root","handleAttachDocuments","sourceId","sourceID","DMS_DOCUMENT_TYPE_SECTION_KEYS","claim","confirmDocumentDelete","index","removeDocument","uploadedFiles","documentList","documentTableList","isLink","linkedDocName","documentName","searchIndex","findIndex","linkedDocItem","splice","uploadedDocName","searchSubmitIndex","uploadSubmitItem","documentDto","searchDtoIndex","docDtoItem","length","Date","getTime","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","resolver","control","reset","errors","handleSubmit","formState","setValue"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport * as Yup from 'yup';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport { useHistory } from 'react-router';\r\nimport { useForm } from 'react-hook-form';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\n\r\n//app\r\nimport * as utils from 'utils';\r\nimport { RfiQueryFormView } from './RfiQueryForm.view';\r\nimport { Loader } from 'components';\r\nimport config from 'config';\r\nimport { CREATE_RFI_FORM, TASK_TAB_COMPLETED_STATUS } from 'consts';\r\nimport {\r\n  getUsersByOrg,\r\n  selectClaimsAssignedToUsers,\r\n  postSendRFI,\r\n  postCloseRFI,\r\n  showModal,\r\n  selectUserEmail,\r\n  resetClaimsAssignedToUsers,\r\n  setDmsTaskContextType,\r\n  selectDmsClientSideUploadFiles,\r\n  postDmsDocuments,\r\n  resetDmsClientSideUploadedDocuments,\r\n  removeDmsClientSideUploadedDocuments,\r\n  linkMultipleDmsDocuments,\r\n  getRfiHistory,\r\n} from 'stores';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { Box } from '@material-ui/core';\r\n\r\nexport default function RfiQueryForm(props) {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n\r\n  const assignedToUsers = useSelector(selectClaimsAssignedToUsers)?.items || null;\r\n  const userEmail = useSelector(selectUserEmail);\r\n  const [resetKey, setResetKey] = useState();\r\n  const [isDataReady, setIsDataReady] = useState(false);\r\n\r\n  const clientUploadedFiles = useSelector(selectDmsClientSideUploadFiles);\r\n  const documentNameList = clientUploadedFiles?.documentNameList;\r\n  const { rfiTask } = props;\r\n\r\n  const defaultAssignedUser = () =>\r\n    userEmail?.toLowerCase() === rfiTask?.requestedBy?.toLowerCase()\r\n      ? assignedToUsers?.find(({ email }) => email?.toLowerCase() === rfiTask?.rfiSentTo?.toLowerCase())\r\n      : utils.generic.isValidArray(assignedToUsers, true)\r\n      ? assignedToUsers?.find(({ email }) => email?.toLowerCase() === rfiTask?.requestedBy?.toLowerCase())\r\n      : null;\r\n\r\n  const fields = [\r\n    {\r\n      name: 'sendTo',\r\n      type: 'autocompletemui',\r\n      value: defaultAssignedUser(),\r\n      options: utils.generic.isValidArray(assignedToUsers, true) ? assignedToUsers : [],\r\n      optionKey: 'email',\r\n      optionLabel: 'fullName',\r\n      muiComponentProps: {\r\n        disabled: rfiTask?.status === TASK_TAB_COMPLETED_STATUS,\r\n      },\r\n      validation: Yup.object().required(utils.string.t('validation.required')),\r\n    },\r\n    {\r\n      name: 'description',\r\n      type: 'textarea',\r\n      hint: utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', { char: 1000 }),\r\n      muiComponentProps: {\r\n        inputProps: { maxLength: 1000 },\r\n        multiline: true,\r\n        rows: 3,\r\n        rowsMax: 3,\r\n        'data-testid': 'details',\r\n      },\r\n      validation: Yup.string()\r\n        .required(utils.string.t('validation.required'))\r\n        .max(1000, utils.string.t('claims.processing.validation.rfiHistoryMaxDesc', { char: 1000 })),\r\n    },\r\n  ];\r\n\r\n  const actions = [\r\n    {\r\n      name: 'secondary',\r\n      label: utils.string.t('app.close'),\r\n      disabled: userEmail.toLowerCase() !== rfiTask?.requestedBy?.toLowerCase(),\r\n      handler: () => {\r\n        handleCloseRFI();\r\n      },\r\n    },\r\n    {\r\n      name: 'submit',\r\n      label: utils.string.t('app.reply'),\r\n      handler: (values) => {\r\n        handleRFISend(values);\r\n      },\r\n    },\r\n  ];\r\n\r\n  const handleRFISend = (values) => {\r\n    if (values) {\r\n      const sendToObj = assignedToUsers.find((user) => user.email === values?.sendTo?.email);\r\n      const rfiSendData = {\r\n        assignedTo: sendToObj?.email,\r\n        bpmTaskID: rfiTask?.taskId,\r\n        caseIncidentID: rfiTask?.caseIncidentID,\r\n        notes: values?.description,\r\n        team: sendToObj?.organisationName,\r\n        queryCodeDescription: props?.selectedQueryCode?.queryCodeDescription || '',\r\n      };\r\n\r\n      dispatch(postSendRFI(rfiSendData)).then((data) => {\r\n        if (data.status === constants.API_RESPONSE_OK) {\r\n          const { caseIncidentID, caseIncidentNotesID } = data.data;\r\n          if (caseIncidentID && caseIncidentNotesID) {\r\n            dispatch(setDmsTaskContextType({ caseIncidentID, caseIncidentNotesID }));\r\n            dispatch(getRfiHistory(rfiTask?.taskId))\r\n\r\n            const uploadedFileDetails = clientUploadedFiles?.uploadFileDetails;\r\n            const { documentTypeKey, submitData, submitFiles } = uploadedFileDetails;\r\n            if (!utils.generic.isInvalidOrEmptyArray(submitFiles)) {\r\n              dispatch(postDmsDocuments({ context: constants.DMS_CONTEXT_TASK, documentTypeKey, submitData, submitFiles })).then((data) => {\r\n                if (data.status === constants.API_RESPONSE_OK) {\r\n                  props.handlers?.getRfiHistoryDetails();\r\n                  dispatch(resetDmsClientSideUploadedDocuments());\r\n                }\r\n              });\r\n            }\r\n\r\n            const linkedDocList = clientUploadedFiles?.linkedDocumentList;\r\n            if (!utils.generic.isInvalidOrEmptyArray(linkedDocList)) {\r\n              const linkedDocParamList = linkedDocList?.map((item) => {\r\n                const linkItem = {...item};\r\n                return {\r\n                  documentId: linkItem.documentId,\r\n                  referenceId:  `${linkItem.referenceId}-${caseIncidentNotesID}`,\r\n                  sectionType: linkItem.sectionType\r\n                }\r\n              })\r\n              dispatch(linkMultipleDmsDocuments(linkedDocParamList)).then((response) => {\r\n                if (response?.status === constants.API_RESPONSE_OK) {\r\n                  dispatch(resetDmsClientSideUploadedDocuments());\r\n                  props.handlers?.getRfiHistoryDetails();\r\n                }\r\n              });\r\n            }\r\n          }\r\n        }\r\n      });\r\n    }\r\n  };\r\n\r\n  const handleCloseRFI = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('status.alert'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('app.yes'),\r\n            cancelLabel: utils.string.t('app.no'),\r\n            confirmMessage: utils.string.t('claims.processing.modal.rfiCloseConfirm'),\r\n            buttonColors: { confirm: 'secondary', cancel: 'default' },\r\n            submitHandler: () => {\r\n              dispatch(postCloseRFI(rfiTask?.taskId, history)).then((data) => {\r\n                if (data.status === 'OK') {\r\n                  setTimeout(() => history.replace(config.routes.claimsProcessing.root), 1000);\r\n                }\r\n              });\r\n            },\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleAttachDocuments = () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'DMS_UPLOAD_FILES_CLIENT_SIDE',\r\n        props: {\r\n          title: utils.string.t('claims.rfiDashboard.attachDocuments'),\r\n          fullWidth: true,\r\n          maxWidth: 'xl',\r\n          componentProps: {\r\n            referenceId: rfiTask?.taskId,\r\n            sourceId: rfiTask?.sourceID,\r\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.claim,\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const confirmDocumentDelete = (index) => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'CONFIRM',\r\n        props: {\r\n          fullWidth: true,\r\n          title: utils.string.t('dms.view.deleteDocument.title'),\r\n          maxWidth: 'xs',\r\n          componentProps: {\r\n            confirmLabel: utils.string.t('dms.view.deleteDocument.confirmLabel'),\r\n            submitHandler: () => removeDocument(index),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const removeDocument = (index) => {\r\n    const uploadedFiles = { ...clientUploadedFiles };\r\n    const documentList = [...uploadedFiles?.documentTableList];\r\n    if (!utils.generic.isInvalidOrEmptyArray(documentList) && documentList[index]?.isLink) {\r\n      const linkedDocName = documentList[index]?.documentName;\r\n      const linkedDocList =  [...uploadedFiles?.linkedDocumentList];\r\n      const searchIndex = linkedDocList?.findIndex((linkedDocItem) => linkedDocItem?.documentName === linkedDocName);\r\n      uploadedFiles?.linkedDocumentList?.splice(searchIndex, 1);\r\n      uploadedFiles?.documentTableList?.splice(index, 1);\r\n      uploadedFiles?.documentNameList?.splice(index, 1);\r\n    }\r\n    else if(!utils.generic.isInvalidOrEmptyArray(documentList) && !documentList[index]?.isLink) {\r\n      const uploadedDocName = documentList[index]?.documentName;\r\n      const submitFiles = [...uploadedFiles?.uploadFileDetails?.submitFiles];\r\n      const searchSubmitIndex = submitFiles?.findIndex((uploadSubmitItem) => uploadSubmitItem?.name === uploadedDocName);\r\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles?.uploadFileDetails?.submitFiles) &&\r\n      uploadedFiles?.uploadFileDetails?.submitFiles?.splice(searchSubmitIndex, 1);\r\n\r\n      const documentDto = [...uploadedFiles?.uploadFileDetails?.submitData?.documentDto];\r\n      const searchDtoIndex = documentDto?.findIndex((docDtoItem) => docDtoItem?.documentName === uploadedDocName);\r\n      !utils.generic.isInvalidOrEmptyArray(uploadedFiles?.uploadFileDetails?.submitData?.documentDto) &&\r\n      uploadedFiles?.uploadFileDetails?.submitData?.documentDto?.splice(searchDtoIndex, 1);\r\n      uploadedFiles?.documentTableList?.splice(index, 1);\r\n      uploadedFiles?.documentNameList?.splice(index, 1);\r\n    }\r\n\r\n    dispatch(removeDmsClientSideUploadedDocuments({ uploadedFiles: uploadedFiles }));\r\n  }\r\n\r\n  useEffect(() => {\r\n    dispatch(getUsersByOrg('', [rfiTask], CREATE_RFI_FORM, false));\r\n    dispatch(resetClaimsAssignedToUsers());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    if (assignedToUsers?.length > 0) {\r\n      setResetKey(new Date().getTime());\r\n      setIsDataReady(true);\r\n    }\r\n  }, [assignedToUsers]);\r\n\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n  const { control, reset, errors, handleSubmit, formState, setValue } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  if (!isDataReady) {\r\n    return (\r\n      <Box height=\"300px\">\r\n        <Loader visible absolute />\r\n      </Box>\r\n    );\r\n  }\r\n\r\n  return (\r\n    <RfiQueryFormView\r\n      {...props}\r\n      fields={fields}\r\n      actions={actions}\r\n      formProps={{ control, handleSubmit, setValue, errors, formState, reset }}\r\n      resetKey={resetKey}\r\n      documentNameList={documentNameList}\r\n      handlers={{ handleAttachDocuments: handleAttachDocuments, confirmDocumentDelete: confirmDocumentDelete }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}