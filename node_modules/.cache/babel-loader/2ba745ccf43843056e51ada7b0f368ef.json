{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\TableFilters\\\\TableFilters.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useRef } from 'react';\nimport PropTypes from 'prop-types';\nimport classnames from 'classnames'; // app\n\nimport styles from './TableFilters.style';\nimport { Button, Search, Loader } from 'components';\nimport * as utils from 'utils'; // mui\n\nimport { Box, Checkbox, Collapse, Fade, List, ListItem, ListItemIcon, ListItemText, Popover, Typography, makeStyles } from '@material-ui/core';\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined';\nimport FilterListIcon from '@material-ui/icons/FilterList';\nimport SearchIcon from '@material-ui/icons/Search';\nimport CloseIcon from '@material-ui/icons/Close';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nTableFiltersView.propTypes = {\n  searchBy: PropTypes.node,\n  searchByTerm: PropTypes.string,\n  search: PropTypes.bool,\n  searchQuery: PropTypes.string,\n  searchMinChars: PropTypes.number,\n  searchPlaceholder: PropTypes.string,\n  searchAdvanced: PropTypes.node,\n  searchAdvancedExpanded: PropTypes.bool,\n  isFetchingFilters: PropTypes.bool,\n  filters: PropTypes.bool,\n  filtersSubmitDisabled: PropTypes.bool,\n  filtersExpanded: PropTypes.bool,\n  filtersArray: PropTypes.array,\n  columns: PropTypes.bool,\n  columnsArray: PropTypes.array,\n  columnsExpanded: PropTypes.bool,\n  excelExport: PropTypes.node,\n  handlers: PropTypes.shape({\n    toggleFilters: PropTypes.func.isRequired,\n    submitFilters: PropTypes.func.isRequired,\n    resetFilters: PropTypes.func.isRequired,\n    toggleColumns: PropTypes.func.isRequired,\n    toggleColumnsExpanded: PropTypes.func.isRequired,\n    toggleAdvancedSearch: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    submitSearch: PropTypes.func.isRequired\n  }).isRequired,\n  nestedClasses: PropTypes.shape({\n    root: PropTypes.string,\n    searchMaxWidth: PropTypes.string,\n    searchLeft: PropTypes.string,\n    searchBox: PropTypes.string\n  })\n};\nTableFiltersView.defaultProps = {\n  nestedClasses: {}\n};\nexport function TableFiltersView(_ref) {\n  _s();\n\n  var _classnames,\n      _classnames2,\n      _this = this;\n\n  var resetKey = _ref.resetKey,\n      searchBy = _ref.searchBy,\n      searchByTerm = _ref.searchByTerm,\n      search = _ref.search,\n      searchQuery = _ref.searchQuery,\n      searchMinChars = _ref.searchMinChars,\n      searchPlaceholder = _ref.searchPlaceholder,\n      searchAdvanced = _ref.searchAdvanced,\n      searchAdvancedExpanded = _ref.searchAdvancedExpanded,\n      isFetchingFilters = _ref.isFetchingFilters,\n      filters = _ref.filters,\n      filtersSubmitDisabled = _ref.filtersSubmitDisabled,\n      filtersExpanded = _ref.filtersExpanded,\n      filtersArray = _ref.filtersArray,\n      columns = _ref.columns,\n      excelExport = _ref.excelExport,\n      columnsArray = _ref.columnsArray,\n      columnsExpanded = _ref.columnsExpanded,\n      handlers = _ref.handlers,\n      nestedClasses = _ref.nestedClasses,\n      children = _ref.children;\n  var classes = makeStyles(styles, {\n    name: 'TableFilters'\n  })({\n    filtersExpanded: filtersExpanded\n  });\n  var refBtnColumns = useRef(null);\n  var refBtnAdvancedExpanded = useRef(null);\n  var hasSearch = Boolean(search);\n  var hasAdvancedSearch = Boolean(searchAdvanced);\n  var hasFilters = Boolean(filters && children);\n  var hasColumns = Boolean(columns && utils.generic.isValidArray(columnsArray, true));\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(\"div\", {\n      className: classnames((_classnames = {}, _defineProperty(_classnames, classes.root, true), _defineProperty(_classnames, nestedClasses.root, Boolean(nestedClasses.root)), _defineProperty(_classnames, nestedClasses.searchMaxWidth, Boolean(nestedClasses.searchMaxWidth)), _classnames)),\n      children: [searchBy, hasSearch && /*#__PURE__*/_jsxDEV(Search, {\n        text: searchQuery || '',\n        placeholder: searchPlaceholder || utils.string.t('app.search'),\n        submitButtonProps: {\n          size: 'small'\n        },\n        minChars: searchMinChars,\n        searchByTerm: searchByTerm,\n        isSearchByActive: Boolean(searchByTerm && searchBy),\n        nestedClasses: {\n          root: classnames((_classnames2 = {}, _defineProperty(_classnames2, classes.search, true), _defineProperty(_classnames2, nestedClasses.searchMaxWidth, Boolean(nestedClasses.searchMaxWidth)), _defineProperty(_classnames2, nestedClasses.searchLeft, Boolean(nestedClasses.searchLeft)), _defineProperty(_classnames2, nestedClasses.searchBox, Boolean(nestedClasses.searchBox)), _classnames2)),\n          inputPropsRoot: classes.inputPropsRoot\n        },\n        handlers: {\n          search: function search(queryTerm, queryByTerm) {\n            handlers.submitSearch(queryTerm, queryByTerm);\n          },\n          reset: function reset() {\n            handlers.resetSearch();\n          }\n        }\n      }, resetKey, false, {\n        fileName: _jsxFileName,\n        lineNumber: 112,\n        columnNumber: 11\n      }, this), hasAdvancedSearch && /*#__PURE__*/_jsxDEV(Box, {\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          refProp: refBtnAdvancedExpanded,\n          size: \"small\",\n          variant: \"text\",\n          icon: SearchIcon,\n          onClick: handlers.toggleAdvancedSearch,\n          \"data-testid\": \"advanced-search-button-toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 141,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          id: \"advanced-search-popover\",\n          anchorEl: refBtnAdvancedExpanded.current,\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          open: Boolean(searchAdvancedExpanded && refBtnAdvancedExpanded.current),\n          onClose: handlers.toggleAdvancedSearch,\n          classes: {\n            paper: classes.advancedSearchPopover\n          },\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            position: \"relative\",\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              icon: CloseIcon,\n              variant: \"text\",\n              onClick: handlers.toggleAdvancedSearch,\n              nestedClasses: {\n                btn: classes.advancedSearchClose\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 166,\n              columnNumber: 17\n            }, this), searchAdvanced]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 165,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 149,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 140,\n        columnNumber: 11\n      }, this), isFetchingFilters ? /*#__PURE__*/_jsxDEV(Box, {\n        m: 1,\n        ml: 1,\n        children: /*#__PURE__*/_jsxDEV(Loader, {\n          visible: isFetchingFilters,\n          inline: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 183,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 182,\n        columnNumber: 11\n      }, this) : hasFilters && /*#__PURE__*/_jsxDEV(Button, {\n        size: \"small\",\n        disabled: utils.generic.isInvalidOrEmptyArray(filtersArray),\n        variant: \"text\",\n        icon: FilterListIcon,\n        onClick: handlers.toggleFilters,\n        style: {\n          marginLeft: hasSearch ? 4 : 'auto'\n        },\n        \"data-testid\": \"filters-button-toggle\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 187,\n        columnNumber: 13\n      }, this), hasColumns && /*#__PURE__*/_jsxDEV(Box, {\n        ml: hasSearch || hasFilters ? 0.5 : 'auto',\n        children: [/*#__PURE__*/_jsxDEV(Button, {\n          refProp: refBtnColumns,\n          size: \"small\",\n          variant: \"text\",\n          icon: ViewCompactOutlinedIcon,\n          onClick: handlers.toggleColumnsExpanded,\n          \"data-testid\": \"columns-button-toggle\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 201,\n          columnNumber: 13\n        }, this), /*#__PURE__*/_jsxDEV(Popover, {\n          id: \"columns-popover\",\n          anchorEl: refBtnColumns.current,\n          getContentAnchorEl: null,\n          anchorOrigin: {\n            vertical: 'bottom',\n            horizontal: 'right'\n          },\n          transformOrigin: {\n            vertical: 'top',\n            horizontal: 'right'\n          },\n          open: Boolean(columnsExpanded && refBtnColumns.current),\n          onClose: handlers.toggleColumnsExpanded,\n          classes: {\n            paper: classes.columnsPopover\n          },\n          children: [/*#__PURE__*/_jsxDEV(Typography, {\n            variant: \"body1\",\n            children: utils.string.t('filters.columns.title')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 225,\n            columnNumber: 15\n          }, this), /*#__PURE__*/_jsxDEV(List, {\n            dense: true,\n            className: classes.columnsList,\n            children: columnsArray.map(function (column) {\n              var labelId = \"columns-checkbox-list-label-\".concat(column.id);\n              return /*#__PURE__*/_jsxDEV(ListItem, {\n                button: true,\n                onClick: function onClick() {\n                  // Checking 'mandatory' property, if it is mandatory, not doing anything on that columns in Managing Columns list.\n                  if (!Boolean(column === null || column === void 0 ? void 0 : column.mandatory)) handlers.toggleColumns(column);\n                },\n                classes: {\n                  root: classes.columnsListItem\n                },\n                children: [/*#__PURE__*/_jsxDEV(ListItemIcon, {\n                  classes: {\n                    root: classes.columnsListItemIcon\n                  },\n                  children: /*#__PURE__*/_jsxDEV(Checkbox, {\n                    checked: Boolean(column.visible),\n                    color: \"primary\",\n                    tabIndex: -1,\n                    disabled: Boolean(column === null || column === void 0 ? void 0 : column.mandatory) ? true : false,\n                    disableRipple: true,\n                    inputProps: {\n                      'aria-labelledby': labelId\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 243,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 242,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(ListItemText, {\n                  id: labelId,\n                  primary: column.label\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 252,\n                  columnNumber: 23\n                }, _this)]\n              }, column.id, true, {\n                fileName: _jsxFileName,\n                lineNumber: 232,\n                columnNumber: 21\n              }, _this);\n            })\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 227,\n            columnNumber: 15\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 209,\n          columnNumber: 13\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 200,\n        columnNumber: 11\n      }, this), excelExport]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 103,\n      columnNumber: 7\n    }, this), hasFilters && /*#__PURE__*/_jsxDEV(\"div\", {\n      className: classes.filtersContainer,\n      \"data-testid\": \"filters-content\",\n      children: /*#__PURE__*/_jsxDEV(Collapse, {\n        in: filtersExpanded,\n        children: /*#__PURE__*/_jsxDEV(Fade, {\n          in: filtersExpanded,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.filters,\n            children: [/*#__PURE__*/_jsxDEV(Box, {\n              className: classes.filtersContent,\n              children: children\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 268,\n              columnNumber: 17\n            }, this), /*#__PURE__*/_jsxDEV(Box, {\n              className: classes.filtersButtons,\n              children: [/*#__PURE__*/_jsxDEV(Box, {\n                mb: 0.5,\n                textAlign: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"xsmall\",\n                  color: \"primary\",\n                  variant: \"outlined\",\n                  text: utils.string.t('app.clear'),\n                  onClick: handlers.resetFilters\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 271,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 270,\n                columnNumber: 19\n              }, this), /*#__PURE__*/_jsxDEV(Box, {\n                mb: 1,\n                textAlign: \"right\",\n                children: /*#__PURE__*/_jsxDEV(Button, {\n                  size: \"xsmall\",\n                  color: \"primary\",\n                  text: utils.string.t('app.apply'),\n                  type: \"submit\",\n                  disabled: filtersSubmitDisabled,\n                  onClick: handlers.submitFilters\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 280,\n                  columnNumber: 21\n                }, this)\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 279,\n                columnNumber: 19\n              }, this)]\n            }, void 0, true, {\n              fileName: _jsxFileName,\n              lineNumber: 269,\n              columnNumber: 17\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 267,\n            columnNumber: 15\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 266,\n          columnNumber: 13\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 265,\n        columnNumber: 11\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 264,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(TableFiltersView, \"3EDw99zQDYjI1lzuYyCG3AoOtU0=\");\n\n_c = TableFiltersView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TableFiltersView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/TableFilters/TableFilters.view.js"],"names":["React","useRef","PropTypes","classnames","styles","Button","Search","Loader","utils","Box","Checkbox","Collapse","Fade","List","ListItem","ListItemIcon","ListItemText","Popover","Typography","makeStyles","ViewCompactOutlinedIcon","FilterListIcon","SearchIcon","CloseIcon","TableFiltersView","propTypes","searchBy","node","searchByTerm","string","search","bool","searchQuery","searchMinChars","number","searchPlaceholder","searchAdvanced","searchAdvancedExpanded","isFetchingFilters","filters","filtersSubmitDisabled","filtersExpanded","filtersArray","array","columns","columnsArray","columnsExpanded","excelExport","handlers","shape","toggleFilters","func","isRequired","submitFilters","resetFilters","toggleColumns","toggleColumnsExpanded","toggleAdvancedSearch","resetSearch","submitSearch","nestedClasses","root","searchMaxWidth","searchLeft","searchBox","defaultProps","resetKey","children","classes","name","refBtnColumns","refBtnAdvancedExpanded","hasSearch","Boolean","hasAdvancedSearch","hasFilters","hasColumns","generic","isValidArray","t","size","inputPropsRoot","queryTerm","queryByTerm","reset","current","vertical","horizontal","paper","advancedSearchPopover","btn","advancedSearchClose","isInvalidOrEmptyArray","marginLeft","columnsPopover","columnsList","map","column","labelId","id","mandatory","columnsListItem","columnsListItemIcon","visible","label","filtersContainer","filtersContent","filtersButtons"],"mappings":"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","sourcesContent":["import React, { useRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport classnames from 'classnames';\r\n\r\n// app\r\nimport styles from './TableFilters.style';\r\nimport { Button, Search, Loader } from 'components';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport {\r\n  Box,\r\n  Checkbox,\r\n  Collapse,\r\n  Fade,\r\n  List,\r\n  ListItem,\r\n  ListItemIcon,\r\n  ListItemText,\r\n  Popover,\r\n  Typography,\r\n  makeStyles,\r\n} from '@material-ui/core';\r\nimport ViewCompactOutlinedIcon from '@material-ui/icons/ViewCompactOutlined';\r\nimport FilterListIcon from '@material-ui/icons/FilterList';\r\nimport SearchIcon from '@material-ui/icons/Search';\r\nimport CloseIcon from '@material-ui/icons/Close';\r\n\r\nTableFiltersView.propTypes = {\r\n  searchBy: PropTypes.node,\r\n  searchByTerm: PropTypes.string,\r\n  search: PropTypes.bool,\r\n  searchQuery: PropTypes.string,\r\n  searchMinChars: PropTypes.number,\r\n  searchPlaceholder: PropTypes.string,\r\n  searchAdvanced: PropTypes.node,\r\n  searchAdvancedExpanded: PropTypes.bool,\r\n  isFetchingFilters: PropTypes.bool,\r\n  filters: PropTypes.bool,\r\n  filtersSubmitDisabled: PropTypes.bool,\r\n  filtersExpanded: PropTypes.bool,\r\n  filtersArray: PropTypes.array,\r\n  columns: PropTypes.bool,\r\n  columnsArray: PropTypes.array,\r\n  columnsExpanded: PropTypes.bool,\r\n  excelExport: PropTypes.node,\r\n  handlers: PropTypes.shape({\r\n    toggleFilters: PropTypes.func.isRequired,\r\n    submitFilters: PropTypes.func.isRequired,\r\n    resetFilters: PropTypes.func.isRequired,\r\n    toggleColumns: PropTypes.func.isRequired,\r\n    toggleColumnsExpanded: PropTypes.func.isRequired,\r\n    toggleAdvancedSearch: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    submitSearch: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  nestedClasses: PropTypes.shape({\r\n    root: PropTypes.string,\r\n    searchMaxWidth: PropTypes.string,\r\n    searchLeft: PropTypes.string,\r\n    searchBox: PropTypes.string,\r\n  }),\r\n};\r\n\r\nTableFiltersView.defaultProps = {\r\n  nestedClasses: {},\r\n};\r\n\r\nexport function TableFiltersView({\r\n  resetKey,\r\n  searchBy,\r\n  searchByTerm,\r\n  search,\r\n  searchQuery,\r\n  searchMinChars,\r\n  searchPlaceholder,\r\n  searchAdvanced,\r\n  searchAdvancedExpanded,\r\n  isFetchingFilters,\r\n  filters,\r\n  filtersSubmitDisabled,\r\n  filtersExpanded,\r\n  filtersArray,\r\n  columns,\r\n  excelExport,\r\n  columnsArray,\r\n  columnsExpanded,\r\n  handlers,\r\n  nestedClasses,\r\n  children,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'TableFilters' })({ filtersExpanded });\r\n  const refBtnColumns = useRef(null);\r\n  const refBtnAdvancedExpanded = useRef(null);\r\n\r\n  const hasSearch = Boolean(search);\r\n  const hasAdvancedSearch = Boolean(searchAdvanced);\r\n  const hasFilters = Boolean(filters && children);\r\n  const hasColumns = Boolean(columns && utils.generic.isValidArray(columnsArray, true));\r\n\r\n  return (\r\n    <>\r\n      <div\r\n        className={classnames({\r\n          [classes.root]: true,\r\n          [nestedClasses.root]: Boolean(nestedClasses.root),\r\n          [nestedClasses.searchMaxWidth]: Boolean(nestedClasses.searchMaxWidth),\r\n        })}\r\n      >\r\n        {searchBy}\r\n        {hasSearch && (\r\n          <Search\r\n            key={resetKey}\r\n            text={searchQuery || ''}\r\n            placeholder={searchPlaceholder || utils.string.t('app.search')}\r\n            submitButtonProps={{ size: 'small' }}\r\n            minChars={searchMinChars}\r\n            searchByTerm={searchByTerm}\r\n            isSearchByActive={Boolean(searchByTerm && searchBy)}\r\n            nestedClasses={{\r\n              root: classnames({\r\n                [classes.search]: true,\r\n                [nestedClasses.searchMaxWidth]: Boolean(nestedClasses.searchMaxWidth),\r\n                [nestedClasses.searchLeft]: Boolean(nestedClasses.searchLeft),\r\n                [nestedClasses.searchBox]: Boolean(nestedClasses.searchBox),\r\n              }),\r\n              inputPropsRoot: classes.inputPropsRoot,\r\n            }}\r\n            handlers={{\r\n              search: (queryTerm, queryByTerm) => {\r\n                handlers.submitSearch(queryTerm, queryByTerm);\r\n              },\r\n              reset: () => {\r\n                handlers.resetSearch();\r\n              },\r\n            }}\r\n          />\r\n        )}\r\n        {hasAdvancedSearch && (\r\n          <Box>\r\n            <Button\r\n              refProp={refBtnAdvancedExpanded}\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              icon={SearchIcon}\r\n              onClick={handlers.toggleAdvancedSearch}\r\n              data-testid=\"advanced-search-button-toggle\"\r\n            />\r\n            <Popover\r\n              id=\"advanced-search-popover\"\r\n              anchorEl={refBtnAdvancedExpanded.current}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(searchAdvancedExpanded && refBtnAdvancedExpanded.current)}\r\n              onClose={handlers.toggleAdvancedSearch}\r\n              classes={{ paper: classes.advancedSearchPopover }}\r\n            >\r\n              <Box position=\"relative\">\r\n                <Button\r\n                  icon={CloseIcon}\r\n                  variant=\"text\"\r\n                  onClick={handlers.toggleAdvancedSearch}\r\n                  nestedClasses={{\r\n                    btn: classes.advancedSearchClose,\r\n                  }}\r\n                />\r\n\r\n                {searchAdvanced}\r\n              </Box>\r\n            </Popover>\r\n          </Box>\r\n        )}\r\n\r\n        {isFetchingFilters ? (\r\n          <Box m={1} ml={1}>\r\n            <Loader visible={isFetchingFilters} inline />\r\n          </Box>\r\n        ) : (\r\n          hasFilters && (\r\n            <Button\r\n              size=\"small\"\r\n              disabled={utils.generic.isInvalidOrEmptyArray(filtersArray)}\r\n              variant=\"text\"\r\n              icon={FilterListIcon}\r\n              onClick={handlers.toggleFilters}\r\n              style={{ marginLeft: hasSearch ? 4 : 'auto' }}\r\n              data-testid=\"filters-button-toggle\"\r\n            />\r\n          )\r\n        )}\r\n\r\n        {hasColumns && (\r\n          <Box ml={hasSearch || hasFilters ? 0.5 : 'auto'}>\r\n            <Button\r\n              refProp={refBtnColumns}\r\n              size=\"small\"\r\n              variant=\"text\"\r\n              icon={ViewCompactOutlinedIcon}\r\n              onClick={handlers.toggleColumnsExpanded}\r\n              data-testid=\"columns-button-toggle\"\r\n            />\r\n            <Popover\r\n              id=\"columns-popover\"\r\n              anchorEl={refBtnColumns.current}\r\n              getContentAnchorEl={null}\r\n              anchorOrigin={{\r\n                vertical: 'bottom',\r\n                horizontal: 'right',\r\n              }}\r\n              transformOrigin={{\r\n                vertical: 'top',\r\n                horizontal: 'right',\r\n              }}\r\n              open={Boolean(columnsExpanded && refBtnColumns.current)}\r\n              onClose={handlers.toggleColumnsExpanded}\r\n              classes={{ paper: classes.columnsPopover }}\r\n            >\r\n              <Typography variant=\"body1\">{utils.string.t('filters.columns.title')}</Typography>\r\n\r\n              <List dense className={classes.columnsList}>\r\n                {columnsArray.map((column) => {\r\n                  const labelId = `columns-checkbox-list-label-${column.id}`;\r\n\r\n                  return (\r\n                    <ListItem\r\n                      key={column.id}\r\n                      button\r\n                      onClick={() => {\r\n                        // Checking 'mandatory' property, if it is mandatory, not doing anything on that columns in Managing Columns list.\r\n                        if (!Boolean(column?.mandatory)) handlers.toggleColumns(column);\r\n                      }}\r\n                      classes={{ root: classes.columnsListItem }}\r\n                    >\r\n                      {/* Disabling the checkbox, if the column is mandatory */}\r\n                      <ListItemIcon classes={{ root: classes.columnsListItemIcon }}>\r\n                        <Checkbox\r\n                          checked={Boolean(column.visible)}\r\n                          color=\"primary\"\r\n                          tabIndex={-1}\r\n                          disabled={Boolean(column?.mandatory) ? true : false}\r\n                          disableRipple\r\n                          inputProps={{ 'aria-labelledby': labelId }}\r\n                        />\r\n                      </ListItemIcon>\r\n                      <ListItemText id={labelId} primary={column.label} />\r\n                    </ListItem>\r\n                  );\r\n                })}\r\n              </List>\r\n            </Popover>\r\n          </Box>\r\n        )}\r\n        {excelExport}\r\n      </div>\r\n\r\n      {hasFilters && (\r\n        <div className={classes.filtersContainer} data-testid=\"filters-content\">\r\n          <Collapse in={filtersExpanded}>\r\n            <Fade in={filtersExpanded}>\r\n              <Box className={classes.filters}>\r\n                <Box className={classes.filtersContent}>{children}</Box>\r\n                <Box className={classes.filtersButtons}>\r\n                  <Box mb={0.5} textAlign=\"right\">\r\n                    <Button\r\n                      size=\"xsmall\"\r\n                      color=\"primary\"\r\n                      variant=\"outlined\"\r\n                      text={utils.string.t('app.clear')}\r\n                      onClick={handlers.resetFilters}\r\n                    />\r\n                  </Box>\r\n                  <Box mb={1} textAlign=\"right\">\r\n                    <Button\r\n                      size=\"xsmall\"\r\n                      color=\"primary\"\r\n                      text={utils.string.t('app.apply')}\r\n                      type=\"submit\"\r\n                      disabled={filtersSubmitDisabled}\r\n                      onClick={handlers.submitFilters}\r\n                    />\r\n                  </Box>\r\n                </Box>\r\n              </Box>\r\n            </Fade>\r\n          </Collapse>\r\n        </div>\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}