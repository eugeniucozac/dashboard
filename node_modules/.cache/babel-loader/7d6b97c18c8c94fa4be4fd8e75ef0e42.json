{"ast":null,"code":"import { addLoader, authLogout, removeLoader, resetTripSelected } from 'stores';\nimport * as utils from 'utils';\nexport var getTripById = function getTripById(id, showLoader) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/trip.actions.getById'\n    };\n    dispatch(getTripByIdRequest(id));\n\n    if (showLoader) {\n      dispatch(addLoader('getTripById'));\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/trip/\".concat(id)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(getTripByIdSuccess(data));\n      return data;\n    }).catch(function (err) {\n      utils.api.handleError(err, defaultError);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(resetTripSelected());\n      dispatch(getTripByIdFailure(err));\n      return err;\n    }).finally(function () {\n      if (showLoader) {\n        dispatch(removeLoader('getTripById'));\n      }\n    });\n  };\n};\nexport var getTripByIdRequest = function getTripByIdRequest(id) {\n  return {\n    type: 'TRIP_BY_ID_GET_REQUEST',\n    payload: id\n  };\n};\nexport var getTripByIdSuccess = function getTripByIdSuccess(data) {\n  return {\n    type: 'TRIP_BY_ID_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getTripByIdFailure = function getTripByIdFailure(error) {\n  return {\n    type: 'TRIP_BY_ID_GET_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/trip/trip.actions.getById.js"],"names":["addLoader","authLogout","removeLoader","resetTripSelected","utils","getTripById","id","showLoader","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","getTripByIdRequest","api","get","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","getTripByIdSuccess","catch","err","handleError","handleUnauthorized","getTripByIdFailure","finally","type","payload","error"],"mappings":"AAAA,SAASA,SAAT,EAAoBC,UAApB,EAAgCC,YAAhC,EAA8CC,iBAA9C,QAAuE,QAAvE;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,OAAO,IAAMC,WAAW,GAAG,SAAdA,WAAc,CAACC,EAAD,EAAKC,UAAL;AAAA,SAAoB,UAACC,QAAD,EAAWC,QAAX,EAAwB;AACrE;AADqE,oBAEZA,QAAQ,EAFI;AAAA,QAErDC,IAFqD,aAE7DC,IAF6D,CAErDD,IAFqD;AAAA,QAE3BE,QAF2B,aAE7CC,MAF6C,CAEnCC,IAFmC,CAE3BF,QAF2B;;AAIrE,QAAMG,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAR,IAAAA,QAAQ,CAACS,kBAAkB,CAACX,EAAD,CAAnB,CAAR;;AAEA,QAAIC,UAAJ,EAAgB;AACdC,MAAAA,QAAQ,CAACR,SAAS,CAAC,aAAD,CAAV,CAAR;AACD;;AAED,WAAOI,KAAK,CAACc,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,IAFhB;AAGHC,MAAAA,IAAI,qBAAcjB,EAAd;AAHD,KADA,EAMJkB,IANI,CAMC,UAACC,QAAD;AAAA,aAAcrB,KAAK,CAACc,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUvB,KAAK,CAACc,GAAN,CAAUU,UAAV,CAAqBD,IAArB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACdrB,MAAAA,QAAQ,CAACsB,kBAAkB,CAACD,IAAD,CAAnB,CAAR;AACA,aAAOA,IAAP;AACD,KAXI,EAYJE,KAZI,CAYE,UAACC,GAAD,EAAS;AACd5B,MAAAA,KAAK,CAACc,GAAN,CAAUe,WAAV,CAAsBD,GAAtB,EAA2BjB,YAA3B;AACAX,MAAAA,KAAK,CAACc,GAAN,CAAUgB,kBAAV,CAA6BF,GAA7B,EAAkCxB,QAAlC,EAA4CP,UAA5C;AACAO,MAAAA,QAAQ,CAACL,iBAAiB,EAAlB,CAAR;AACAK,MAAAA,QAAQ,CAAC2B,kBAAkB,CAACH,GAAD,CAAnB,CAAR;AACA,aAAOA,GAAP;AACD,KAlBI,EAmBJI,OAnBI,CAmBI,YAAM;AACb,UAAI7B,UAAJ,EAAgB;AACdC,QAAAA,QAAQ,CAACN,YAAY,CAAC,aAAD,CAAb,CAAR;AACD;AACF,KAvBI,CAAP;AAwBD,GAtC0B;AAAA,CAApB;AAwCP,OAAO,IAAMe,kBAAkB,GAAG,SAArBA,kBAAqB,CAACX,EAAD,EAAQ;AACxC,SAAO;AACL+B,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEhC;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMwB,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAU;AAC1C,SAAO;AACLQ,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAET;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,kBAAkB,GAAG,SAArBA,kBAAqB,CAACI,KAAD,EAAW;AAC3C,SAAO;AACLF,IAAAA,IAAI,EAAE,wBADD;AAELC,IAAAA,OAAO,EAAEC;AAFJ,GAAP;AAID,CALM","sourcesContent":["import { addLoader, authLogout, removeLoader, resetTripSelected } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const getTripById = (id, showLoader) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/trip.actions.getById',\r\n  };\r\n\r\n  dispatch(getTripByIdRequest(id));\r\n\r\n  if (showLoader) {\r\n    dispatch(addLoader('getTripById'));\r\n  }\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/trip/${id}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(getTripByIdSuccess(data));\r\n      return data;\r\n    })\r\n    .catch((err) => {\r\n      utils.api.handleError(err, defaultError);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(resetTripSelected());\r\n      dispatch(getTripByIdFailure(err));\r\n      return err;\r\n    })\r\n    .finally(() => {\r\n      if (showLoader) {\r\n        dispatch(removeLoader('getTripById'));\r\n      }\r\n    });\r\n};\r\n\r\nexport const getTripByIdRequest = (id) => {\r\n  return {\r\n    type: 'TRIP_BY_ID_GET_REQUEST',\r\n    payload: id,\r\n  };\r\n};\r\n\r\nexport const getTripByIdSuccess = (data) => {\r\n  return {\r\n    type: 'TRIP_BY_ID_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getTripByIdFailure = (error) => {\r\n  return {\r\n    type: 'TRIP_BY_ID_GET_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}