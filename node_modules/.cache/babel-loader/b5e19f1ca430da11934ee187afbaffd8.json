{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport { addLoader, authLogout, deletePlacementPolicies, enqueueNotification, hideModal, removeLoader } from 'stores';\nimport * as utils from 'utils';\nexport var deletePlacementPolicy = function deletePlacementPolicy(policyId) {\n  return function (dispatch, getState) {\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var defaultError = {\n      file: 'stores/placement.actions.deletePolicy',\n      message: 'Data missing for DELETE request'\n    };\n    dispatch(postPlacementDeletePolicyRequest(policyId));\n    dispatch(addLoader('deletePlacementPolicy'));\n\n    if (!policyId) {\n      dispatch(postPlacementDeletePolicyFailure(defaultError));\n      dispatch(enqueueNotification('notification.deletePolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementPolicy'));\n      return;\n    }\n\n    return utils.api[\"delete\"]({\n      token: auth.accessToken,\n      endpoint: endpoint.edge,\n      path: \"api/policy/\".concat(policyId)\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleData(json);\n    }).then(function (data) {\n      dispatch(postPlacementDeletePolicySuccess(data));\n      dispatch(deletePlacementPolicies([policyId]));\n      dispatch(enqueueNotification('notification.deletePolicy.success', 'success'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementPolicy'));\n    })[\"catch\"](function (err) {\n      var errorParams = _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API delete error (placement.deletePolicy)'\n      });\n\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n      dispatch(postPlacementDeletePolicyFailure(err));\n      dispatch(enqueueNotification('notification.deletePolicy.fail', 'error'));\n      dispatch(hideModal());\n      dispatch(removeLoader('deletePlacementPolicy'));\n      return err;\n    });\n  };\n};\nexport var postPlacementDeletePolicyRequest = function postPlacementDeletePolicyRequest(data) {\n  return {\n    type: 'PLACEMENT_POLICY_DELETE_REQUEST',\n    payload: data\n  };\n};\nexport var postPlacementDeletePolicySuccess = function postPlacementDeletePolicySuccess(data) {\n  return {\n    type: 'PLACEMENT_POLICY_DELETE_SUCCESS',\n    payload: data\n  };\n};\nexport var postPlacementDeletePolicyFailure = function postPlacementDeletePolicyFailure(error) {\n  return {\n    type: 'PLACEMENT_POLICY_DELETE_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/placement/placement.actions.deletePolicy.js"],"names":["addLoader","authLogout","deletePlacementPolicies","enqueueNotification","hideModal","removeLoader","utils","deletePlacementPolicy","policyId","dispatch","getState","auth","user","endpoint","config","vars","defaultError","file","message","postPlacementDeletePolicyRequest","postPlacementDeletePolicyFailure","api","token","accessToken","edge","path","then","response","handleResponse","json","handleData","data","postPlacementDeletePolicySuccess","err","errorParams","handleError","handleUnauthorized","type","payload","error"],"mappings":"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","sourcesContent":["import { addLoader, authLogout, deletePlacementPolicies, enqueueNotification, hideModal, removeLoader } from 'stores';\r\nimport * as utils from 'utils';\r\n\r\nexport const deletePlacementPolicy = (policyId) => (dispatch, getState) => {\r\n  // prettier-ignore\r\n  const { user: { auth }, config: { vars: { endpoint }}} = getState();\r\n\r\n  const defaultError = {\r\n    file: 'stores/placement.actions.deletePolicy',\r\n    message: 'Data missing for DELETE request',\r\n  };\r\n\r\n  dispatch(postPlacementDeletePolicyRequest(policyId));\r\n  dispatch(addLoader('deletePlacementPolicy'));\r\n\r\n  if (!policyId) {\r\n    dispatch(postPlacementDeletePolicyFailure(defaultError));\r\n    dispatch(enqueueNotification('notification.deletePolicy.fail', 'error'));\r\n    dispatch(hideModal());\r\n    dispatch(removeLoader('deletePlacementPolicy'));\r\n    return;\r\n  }\r\n\r\n  return utils.api\r\n    .delete({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.edge,\r\n      path: `api/policy/${policyId}`,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleData(json))\r\n    .then((data) => {\r\n      dispatch(postPlacementDeletePolicySuccess(data));\r\n      dispatch(deletePlacementPolicies([policyId]));\r\n      dispatch(enqueueNotification('notification.deletePolicy.success', 'success'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementPolicy'));\r\n    })\r\n    .catch((err) => {\r\n      const errorParams = {\r\n        ...defaultError,\r\n        message: 'API delete error (placement.deletePolicy)',\r\n      };\r\n\r\n      utils.api.handleError(err, errorParams);\r\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      dispatch(postPlacementDeletePolicyFailure(err));\r\n      dispatch(enqueueNotification('notification.deletePolicy.fail', 'error'));\r\n      dispatch(hideModal());\r\n      dispatch(removeLoader('deletePlacementPolicy'));\r\n      return err;\r\n    });\r\n};\r\n\r\nexport const postPlacementDeletePolicyRequest = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_DELETE_REQUEST',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementDeletePolicySuccess = (data) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_DELETE_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const postPlacementDeletePolicyFailure = (error) => {\r\n  return {\r\n    type: 'PLACEMENT_POLICY_DELETE_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}