{"ast":null,"code":"import \"core-js/modules/es.array.includes\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\Marketing\\\\Marketing.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport { useHistory, useParams } from 'react-router';\nimport get from 'lodash/get'; // app\n\nimport { MarketingView } from './Marketing.view';\nimport { showModal, selectPlacementDepartmentId, selectDepartmentMarketsItems, selectPlacementMarkets, filterReferenceDataBusinessTypes, resetMarket } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function Marketing() {\n  _s();\n\n  var dispatch = useDispatch();\n  var history = useHistory();\n  var params = useParams();\n  var placementMarkets = useSelector(selectPlacementMarkets);\n  var placementSelectedDepartmentId = useSelector(selectPlacementDepartmentId);\n  var departmentMarketsItems = useSelector(selectDepartmentMarketsItems);\n  var pathname = history.location.pathname;\n  var isUrlMarkets = pathname.includes(config.routes.placement.marketing.markets);\n  var isUrlStructuring = pathname.includes(config.routes.placement.marketing.structuring);\n  var isUrlMudmap = pathname.includes(config.routes.placement.marketing.mudmap);\n\n  var _useState = useState([_objectSpread({\n    value: 'markets',\n    label: utils.string.t('placement.marketing.sections.markets')\n  }, isUrlMarkets && {\n    active: true\n  }), _objectSpread({\n    value: 'structuring',\n    label: utils.string.t('placement.marketing.sections.structuring')\n  }, isUrlStructuring && {\n    active: true\n  }), _objectSpread({\n    value: 'mudmap',\n    label: utils.string.t('placement.marketing.sections.mudmap')\n  }, isUrlMudmap && {\n    active: true\n  })]),\n      _useState2 = _slicedToArray(_useState, 2),\n      sections = _useState2[0],\n      setSections = _useState2[1];\n\n  var configVars = useSelector(function (state) {\n    return get(state, 'config.vars');\n  });\n  var placementId = (get(params, 'id') || '').toString();\n  useEffect(function () {\n    dispatch(resetMarket()); // cleanup\n\n    return function () {\n      dispatch(resetMarket());\n    };\n  }, [] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleAddLayer = function handleAddLayer() {\n    var popoverData = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    return function () {\n      dispatch(filterReferenceDataBusinessTypes());\n      dispatch(showModal({\n        component: 'ADD_PLACEMENT_LAYER',\n        props: {\n          title: 'placement.marketing.addLayer',\n          fullWidth: true,\n          maxWidth: 'sm',\n          componentProps: {\n            businessTypeId: popoverData.id\n          }\n        }\n      }));\n    };\n  };\n\n  var handleAddMarket = function handleAddMarket() {\n    return function () {\n      dispatch(showModal({\n        component: 'ADD_PLACEMENT_MARKET',\n        props: {\n          title: 'placement.marketing.addMarket',\n          fullWidth: true,\n          maxWidth: 'md',\n          componentProps: {\n            placementId: placementId,\n            placementMarkets: placementMarkets,\n            departmentId: placementSelectedDepartmentId,\n            departmentMarkets: departmentMarketsItems.map(function (item) {\n              return item.market;\n            })\n          }\n        }\n      }));\n    };\n  };\n\n  var handleSelectSection = function handleSelectSection(event, value) {\n    if (value) {\n      history.push(\"\".concat(config.routes.placement.marketing[value], \"/\").concat(placementId));\n      setSections(sections.map(function (s) {\n        s.active = s.value === value;\n        return s;\n      }));\n    }\n  }; // abort\n\n\n  if (!placementId) return null;\n  return /*#__PURE__*/_jsxDEV(MarketingView, {\n    placementId: placementId,\n    isDev: utils.app.isDevelopment(configVars),\n    sections: sections,\n    handlers: {\n      addLayer: handleAddLayer,\n      addMarket: handleAddMarket,\n      selectSection: handleSelectSection\n    }\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 108,\n    columnNumber: 5\n  }, this);\n}\n\n_s(Marketing, \"eERMD8OMbKGXKTyHvy54OGooTcM=\", false, function () {\n  return [useDispatch, useHistory, useParams, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = Marketing;\nMarketing.displayName = \"Marketing\";\nMarketing.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"Marketing\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\Marketing\\\\Marketing.js\"] = {\n    name: \"Marketing\",\n    docgenInfo: Marketing.__docgenInfo,\n    path: \"src\\\\modules\\\\Marketing\\\\Marketing.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"Marketing\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/Marketing/Marketing.js"],"names":["React","useEffect","useState","useDispatch","useSelector","useHistory","useParams","get","MarketingView","showModal","selectPlacementDepartmentId","selectDepartmentMarketsItems","selectPlacementMarkets","filterReferenceDataBusinessTypes","resetMarket","utils","config","Marketing","dispatch","history","params","placementMarkets","placementSelectedDepartmentId","departmentMarketsItems","pathname","location","isUrlMarkets","includes","routes","placement","marketing","markets","isUrlStructuring","structuring","isUrlMudmap","mudmap","value","label","string","t","active","sections","setSections","configVars","state","placementId","toString","handleAddLayer","popoverData","component","props","title","fullWidth","maxWidth","componentProps","businessTypeId","id","handleAddMarket","departmentId","departmentMarkets","map","item","market","handleSelectSection","event","push","s","app","isDevelopment","addLayer","addMarket","selectSection"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport { useHistory, useParams } from 'react-router';\r\nimport get from 'lodash/get';\r\n\r\n// app\r\nimport { MarketingView } from './Marketing.view';\r\nimport {\r\n  showModal,\r\n  selectPlacementDepartmentId,\r\n  selectDepartmentMarketsItems,\r\n  selectPlacementMarkets,\r\n  filterReferenceDataBusinessTypes,\r\n  resetMarket,\r\n} from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\nexport default function Marketing() {\r\n  const dispatch = useDispatch();\r\n  const history = useHistory();\r\n  const params = useParams();\r\n\r\n  const placementMarkets = useSelector(selectPlacementMarkets);\r\n  const placementSelectedDepartmentId = useSelector(selectPlacementDepartmentId);\r\n  const departmentMarketsItems = useSelector(selectDepartmentMarketsItems);\r\n  const { pathname } = history.location;\r\n\r\n  const isUrlMarkets = pathname.includes(config.routes.placement.marketing.markets);\r\n  const isUrlStructuring = pathname.includes(config.routes.placement.marketing.structuring);\r\n  const isUrlMudmap = pathname.includes(config.routes.placement.marketing.mudmap);\r\n\r\n  const [sections, setSections] = useState([\r\n    { value: 'markets', label: utils.string.t('placement.marketing.sections.markets'), ...(isUrlMarkets && { active: true }) },\r\n    { value: 'structuring', label: utils.string.t('placement.marketing.sections.structuring'), ...(isUrlStructuring && { active: true }) },\r\n    { value: 'mudmap', label: utils.string.t('placement.marketing.sections.mudmap'), ...(isUrlMudmap && { active: true }) },\r\n  ]);\r\n\r\n  const configVars = useSelector((state) => get(state, 'config.vars'));\r\n  const placementId = (get(params, 'id') || '').toString();\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(resetMarket());\r\n\r\n      // cleanup\r\n      return () => {\r\n        dispatch(resetMarket());\r\n      };\r\n    },\r\n    [] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleAddLayer =\r\n    (popoverData = {}) =>\r\n    () => {\r\n      dispatch(filterReferenceDataBusinessTypes());\r\n      dispatch(\r\n        showModal({\r\n          component: 'ADD_PLACEMENT_LAYER',\r\n          props: {\r\n            title: 'placement.marketing.addLayer',\r\n            fullWidth: true,\r\n            maxWidth: 'sm',\r\n            componentProps: {\r\n              businessTypeId: popoverData.id,\r\n            },\r\n          },\r\n        })\r\n      );\r\n    };\r\n\r\n  const handleAddMarket = () => () => {\r\n    dispatch(\r\n      showModal({\r\n        component: 'ADD_PLACEMENT_MARKET',\r\n        props: {\r\n          title: 'placement.marketing.addMarket',\r\n          fullWidth: true,\r\n          maxWidth: 'md',\r\n          componentProps: {\r\n            placementId,\r\n            placementMarkets,\r\n            departmentId: placementSelectedDepartmentId,\r\n            departmentMarkets: departmentMarketsItems.map((item) => item.market),\r\n          },\r\n        },\r\n      })\r\n    );\r\n  };\r\n\r\n  const handleSelectSection = (event, value) => {\r\n    if (value) {\r\n      history.push(`${config.routes.placement.marketing[value]}/${placementId}`);\r\n\r\n      setSections(\r\n        sections.map((s) => {\r\n          s.active = s.value === value;\r\n          return s;\r\n        })\r\n      );\r\n    }\r\n  };\r\n  // abort\r\n  if (!placementId) return null;\r\n\r\n  return (\r\n    <MarketingView\r\n      placementId={placementId}\r\n      isDev={utils.app.isDevelopment(configVars)}\r\n      sections={sections}\r\n      handlers={{\r\n        addLayer: handleAddLayer,\r\n        addMarket: handleAddMarket,\r\n        selectSection: handleSelectSection,\r\n      }}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}