{"ast":null,"code":"import _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\LossDashboard\\\\LossDashboard.js\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport { useParams, useHistory } from 'react-router';\nimport { useSelector } from 'react-redux'; // app\n\nimport { LossDashboardView } from './LossDashboard.view';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { selectLossSelected } from 'stores';\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function LossDashboard() {\n  _s();\n\n  var history = useHistory();\n  var params = useParams();\n\n  var _useState = useState((params === null || params === void 0 ? void 0 : params.tab) || 'lossDetail'),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var lossSelected = useSelector(selectLossSelected);\n\n  var handleSelectTab = function handleSelectTab(tabName) {\n    setSelectedTab(tabName);\n  };\n\n  var breadcrumbs = [{\n    name: 'claimsFNOL',\n    label: utils.string.t('loss.title'),\n    link: config.routes.claimsFNOL.root\n  }, {\n    name: 'loss',\n    label: \"\".concat(utils.string.t('loss.text', {\n      lossRef: lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef\n    })),\n    link: \"\".concat(config.routes.claimsFNOL.loss, \"/\").concat(lossSelected === null || lossSelected === void 0 ? void 0 : lossSelected.lossRef),\n    active: true\n  }];\n  var popoverItems = [{\n    id: 'editClaim',\n    label: utils.string.t('claims.processing.summary.buttons.editClaim'),\n    //disabled: claimSelected.claimStatus !== STATUS_CLAIMS_DRAFT, //isClosedClaim || !(userHasAllClaimsPermission && isTeamClaim),\n    callback: function callback() {\n      return history.push({\n        //pathname: `${config.routes.claimsFNOL.newLoss}`,\n        state: {//redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\n          //loss: { isNextDiabled: true, isClaimSubmitted: claim.claimStatus },\n        }\n      });\n    }\n  }];\n  var tabs = [{\n    value: 'lossDetail',\n    label: utils.string.t('loss.tabMenu.details')\n  }, {\n    value: 'lossAction',\n    label: utils.string.t('loss.tabMenu.actions')\n  }, {\n    value: 'lossDocs',\n    label: utils.string.t('loss.tabMenu.docs')\n  }, {\n    value: 'lossNotes',\n    label: utils.string.t('loss.tabMenu.notes')\n  }, {\n    value: 'lossAuditTrail',\n    label: utils.string.t('loss.tabMenu.auditTrail')\n  }]; // abort\n\n  if (!utils.generic.isValidObject(lossSelected)) return null;\n  return /*#__PURE__*/_jsxDEV(LossDashboardView, {\n    tabs: tabs,\n    selectedTab: selectedTab,\n    lossSelected: lossSelected,\n    handleSelectTab: handleSelectTab,\n    breadcrumbs: breadcrumbs,\n    items: items\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 66,\n    columnNumber: 5\n  }, this);\n}\n\n_s(LossDashboard, \"AuFREKl3RJkOxt+kpXDpRW53uyg=\", false, function () {\n  return [useHistory, useParams, useSelector];\n});\n\n_c = LossDashboard;\n\nvar _c;\n\n$RefreshReg$(_c, \"LossDashboard\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/LossDashboard/LossDashboard.js"],"names":["React","useState","useParams","useHistory","useSelector","LossDashboardView","utils","config","selectLossSelected","STATUS_CLAIMS_DRAFT","LossDashboard","history","params","tab","selectedTab","setSelectedTab","lossSelected","handleSelectTab","tabName","breadcrumbs","name","label","string","t","link","routes","claimsFNOL","root","lossRef","loss","active","popoverItems","id","callback","push","state","tabs","value","generic","isValidObject","items"],"mappings":"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","sourcesContent":["import React, { useState } from 'react';\r\nimport { useParams, useHistory } from 'react-router';\r\nimport { useSelector } from 'react-redux';\r\n\r\n// app\r\nimport { LossDashboardView } from './LossDashboard.view';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { selectLossSelected } from 'stores';\r\nimport { STATUS_CLAIMS_DRAFT } from 'consts';\r\n\r\nexport default function LossDashboard() {\r\n  const history = useHistory();\r\n  const params = useParams();\r\n  const [selectedTab, setSelectedTab] = useState(params?.tab || 'lossDetail');\r\n  const lossSelected = useSelector(selectLossSelected);\r\n  const handleSelectTab = (tabName) => {\r\n    setSelectedTab(tabName);\r\n  };\r\n\r\n  const breadcrumbs = [\r\n    {\r\n      name: 'claimsFNOL',\r\n      label: utils.string.t('loss.title'),\r\n      link: config.routes.claimsFNOL.root,\r\n    },\r\n    {\r\n      name: 'loss',\r\n      label: `${utils.string.t('loss.text', {\r\n        lossRef: lossSelected?.lossRef,\r\n      })}`,\r\n      link: `${config.routes.claimsFNOL.loss}/${lossSelected?.lossRef}`,\r\n      active: true,\r\n    },\r\n  ];\r\n\r\n  const popoverItems = [\r\n    {\r\n      id: 'editClaim',\r\n      label: utils.string.t('claims.processing.summary.buttons.editClaim'),\r\n      //disabled: claimSelected.claimStatus !== STATUS_CLAIMS_DRAFT, //isClosedClaim || !(userHasAllClaimsPermission && isTeamClaim),\r\n      callback: () => {\r\n        return history.push({\r\n          //pathname: `${config.routes.claimsFNOL.newLoss}`,\r\n          state: {\r\n            //redirectUrl: `${config.routes.claimsFNOL.loss}/${lossRef}`,\r\n            //loss: { isNextDiabled: true, isClaimSubmitted: claim.claimStatus },\r\n          },\r\n        });\r\n      },\r\n    },\r\n  ];\r\n\r\n  const tabs = [\r\n    { value: 'lossDetail', label: utils.string.t('loss.tabMenu.details') },\r\n    { value: 'lossAction', label: utils.string.t('loss.tabMenu.actions') },\r\n    { value: 'lossDocs', label: utils.string.t('loss.tabMenu.docs') },\r\n    { value: 'lossNotes', label: utils.string.t('loss.tabMenu.notes') },\r\n    { value: 'lossAuditTrail', label: utils.string.t('loss.tabMenu.auditTrail') },\r\n  ];\r\n\r\n  // abort\r\n  if (!utils.generic.isValidObject(lossSelected)) return null;\r\n\r\n  return (\r\n    <LossDashboardView\r\n      tabs={tabs}\r\n      selectedTab={selectedTab}\r\n      lossSelected={lossSelected}\r\n      handleSelectTab={handleSelectTab}\r\n      breadcrumbs={breadcrumbs}\r\n      items={items}\r\n    />\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}