{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get';\nimport isEmpty from 'lodash/isEmpty';\nimport config from 'config';\nimport { APPLICATION_TYPE_JSON, APPLICATION_TYPE_TEXT, STATUS_UNAUTHORIZED } from 'consts';\nimport * as utils from 'utils';\nimport { setTokenExpired } from 'stores';\nvar utilsApi = {\n  get: function get(_ref) {\n    var token = _ref.token,\n        endpoint = _ref.endpoint,\n        path = _ref.path,\n        params = _ref.params,\n        _ref$mode = _ref.mode,\n        mode = _ref$mode === void 0 ? 'cors' : _ref$mode,\n        _ref$headers = _ref.headers,\n        headers = _ref$headers === void 0 ? true : _ref$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'GET',\n      mode: mode,\n      headers: headers ? getHeaders(token) : {}\n    }).then(function (data) {\n      return data;\n    });\n  },\n  post: function post(_ref2) {\n    var token = _ref2.token,\n        endpoint = _ref2.endpoint,\n        path = _ref2.path,\n        params = _ref2.params,\n        data = _ref2.data,\n        _ref2$mode = _ref2.mode,\n        mode = _ref2$mode === void 0 ? 'cors' : _ref2$mode,\n        _ref2$headers = _ref2.headers,\n        headers = _ref2$headers === void 0 ? true : _ref2$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'POST',\n      mode: mode,\n      headers: headers ? getHeaders(token) : {},\n      body: JSON.stringify(data)\n    });\n  },\n  multiPartPost: function multiPartPost(_ref3) {\n    var token = _ref3.token,\n        endpoint = _ref3.endpoint,\n        path = _ref3.path,\n        params = _ref3.params,\n        data = _ref3.data,\n        _ref3$mode = _ref3.mode,\n        mode = _ref3$mode === void 0 ? 'cors' : _ref3$mode,\n        _ref3$headers = _ref3.headers,\n        headers = _ref3$headers === void 0 ? true : _ref3$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'POST',\n      mode: mode,\n      headers: headers ? getHeaders(token, false) : {},\n      body: data\n    });\n  },\n  put: function put(_ref4) {\n    var token = _ref4.token,\n        endpoint = _ref4.endpoint,\n        path = _ref4.path,\n        params = _ref4.params,\n        data = _ref4.data,\n        _ref4$mode = _ref4.mode,\n        mode = _ref4$mode === void 0 ? 'cors' : _ref4$mode,\n        _ref4$headers = _ref4.headers,\n        headers = _ref4$headers === void 0 ? true : _ref4$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'PUT',\n      mode: mode,\n      headers: headers ? getHeaders(token) : {},\n      body: JSON.stringify(data)\n    });\n  },\n  patch: function patch(_ref5) {\n    var token = _ref5.token,\n        endpoint = _ref5.endpoint,\n        path = _ref5.path,\n        params = _ref5.params,\n        data = _ref5.data,\n        _ref5$mode = _ref5.mode,\n        mode = _ref5$mode === void 0 ? 'cors' : _ref5$mode,\n        _ref5$headers = _ref5.headers,\n        headers = _ref5$headers === void 0 ? true : _ref5$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'PATCH',\n      mode: mode,\n      headers: headers ? getHeaders(token) : {},\n      body: JSON.stringify(data)\n    });\n  },\n  delete: function _delete(_ref6) {\n    var token = _ref6.token,\n        endpoint = _ref6.endpoint,\n        path = _ref6.path,\n        params = _ref6.params,\n        _ref6$mode = _ref6.mode,\n        mode = _ref6$mode === void 0 ? 'cors' : _ref6$mode,\n        _ref6$headers = _ref6.headers,\n        headers = _ref6$headers === void 0 ? true : _ref6$headers;\n    if (!endpoint) return Promise.reject({\n      message: 'Missing fetch parameters'\n    });\n    return fetch(getUrl(endpoint, path, params), {\n      method: 'DELETE',\n      mode: mode,\n      headers: headers ? getHeaders(token) : {}\n    });\n  },\n  handleEmptyResponse: function handleEmptyResponse(response) {\n    var responseObj = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      ok: response.ok\n    }, response.type && {\n      type: response.type\n    }), response.status && {\n      status: response.status\n    }), response.statusText && {\n      statusText: response.statusText\n    }), response.url && {\n      url: response.url\n    });\n\n    if (response.ok) {\n      return true;\n    } // fail\n\n\n    return response.json().then(function (json) {\n      return Promise.reject(_objectSpread({\n        response: responseObj\n      }, json && {\n        json: json\n      }));\n    });\n  },\n  handleResponse: function handleResponse(response) {\n    var applicationType = response.headers.get('content-type') || '';\n    var isJson = applicationType.includes(APPLICATION_TYPE_JSON);\n    var isText = applicationType.includes(APPLICATION_TYPE_TEXT);\n\n    var responseObj = _objectSpread(_objectSpread(_objectSpread(_objectSpread({\n      ok: response.ok\n    }, response.type && {\n      type: response.type\n    }), response.status && {\n      status: response.status\n    }), response.statusText && {\n      statusText: response.statusText\n    }), response.url && {\n      url: response.url\n    }); // json\n\n\n    if (isJson) {\n      if (response.ok) {\n        return response.json();\n      } // fail\n\n\n      return response.json().then(function (json) {\n        return Promise.reject(_objectSpread({\n          response: responseObj\n        }, json && {\n          json: json\n        }));\n      });\n    } // text\n\n\n    if (isText) {\n      if (response.ok) {\n        return response.text();\n      } // fail\n\n\n      return response.text().then(function (text) {\n        return Promise.reject(_objectSpread({\n          response: responseObj\n        }, text && {\n          text: text\n        }));\n      });\n    } // if application type isn't supported\n\n\n    return Promise.reject({\n      type: 'application type not supported'\n    });\n  },\n  handleResponseBlob: function handleResponseBlob(response) {\n    if (response.ok) {\n      return response.blob();\n    } else {\n      return response.blob().then(function (blob) {\n        return Promise.reject(_objectSpread({\n          response: response\n        }, blob && {\n          blob: blob\n        }));\n      });\n    }\n  },\n  handleResponseJsonObject: function handleResponseJsonObject(json) {\n    var keyToCheck = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'id';\n\n    // if the API is supposed to return a simple json object with a specific key to check validity:\n    if (json && json[keyToCheck]) {\n      return json;\n    } else if (json && json.error) {\n      return Promise.reject(_objectSpread({\n        message: 'API data format error'\n      }, json));\n    } else if (typeof json === 'string') {\n      return Promise.reject({\n        message: 'API data format error',\n        error: json\n      });\n    } else {\n      return Promise.reject({\n        message: 'API data format error'\n      });\n    }\n  },\n  handleResponseJsonArray: function handleResponseJsonArray(json) {\n    // if the API is supposed to return an array:\n    if (utils.generic.isValidArray(json)) {\n      return json;\n    } else if (json && json.error) {\n      return Promise.reject(_objectSpread({\n        message: 'API data format error'\n      }, json));\n    } else if (typeof json === 'string') {\n      return Promise.reject({\n        message: 'API data format error',\n        error: json\n      });\n    } else {\n      return Promise.reject({\n        message: 'API data format error'\n      });\n    }\n  },\n  handleData: function handleData(json, skipDataCheck) {\n    // our APis should always return a response in this format:\n    // {\n    //   \"status\": \"success\",\n    //   \"data\": [...],\n    // }\n    if (json && json.status === 'success' && (skipDataCheck || !!json.data)) {\n      return json.data;\n    } else {\n      return Promise.reject(_objectSpread({\n        message: \"API data format error\".concat(json.status ? \" (\".concat(json.status, \")\") : '')\n      }, json && _objectSpread({}, json)));\n    }\n  },\n  handleNewData: function handleNewData(json, skipDataCheck) {\n    if (json && json.status === 'OK' && (skipDataCheck || json.data || json.pagination)) {\n      //if success\n      return json;\n    } else {\n      //if fails\n      return Promise.reject(_objectSpread({\n        message: \"API data format error\".concat(json.status ? \" (\".concat(json.status, \")\") : '')\n      }, json && _objectSpread({}, json)));\n    }\n  },\n  handleError: function handleError() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var params = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : {};\n    var response = error.response,\n        _error$json = error.json,\n        json = _error$json === void 0 ? {} : _error$json,\n        _error$text = error.text,\n        text = _error$text === void 0 ? '' : _error$text;\n\n    var errorObject = _objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread(_objectSpread({}, params.file && {\n      file: params.file\n    }), params.message && {\n      message: params.message\n    }), response && {\n      response: response\n    }), (json === null || json === void 0 ? void 0 : json.message) && {\n      message: json.message\n    }), text && {\n      message: text\n    }), Object.keys(error).length > 0 && !isEmpty(json) && {\n      error: _objectSpread({}, json)\n    });\n\n    console.error('Error', errorObject);\n    return errorObject;\n  },\n  handleUnauthorized: function handleUnauthorized() {\n    var error = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : {};\n    var dispatch = arguments.length > 1 ? arguments[1] : undefined;\n\n    if (((error === null || error === void 0 ? void 0 : error.status) === 401 || (error === null || error === void 0 ? void 0 : error.text) === STATUS_UNAUTHORIZED) && dispatch) {\n      console.error('Unauthorized', error);\n      var hasToken = utils.user.hasToken();\n      var isTokenValid = utils.user.isTokenValid();\n      var hasOldInvalidToken = hasToken && !isTokenValid;\n      dispatch(setTokenExpired(hasOldInvalidToken));\n    }\n  },\n  pagination: function pagination(data) {\n    if (!data) return {};\n    return {\n      itemsTotal: get(data, 'pagination.totalElements', 0),\n      page: get(data, 'pagination.page', 1),\n      pageSize: get(data, 'pagination.size', config.ui.pagination.default),\n      pageTotal: get(data, 'pagination.totalPages', 0),\n      query: get(data, 'pagination.query') || ''\n    };\n  },\n  getErrorMessage: function getErrorMessage(err, defaultErrorMsg) {\n    var _err$json;\n\n    return (err === null || err === void 0 ? void 0 : (_err$json = err.json) === null || _err$json === void 0 ? void 0 : _err$json.message) || defaultErrorMsg || utils.string.t('notification.generic.request');\n  }\n};\nexport var getUrl = function getUrl(endpoint, path, params) {\n  if (!endpoint) return '';\n  return \"\".concat(endpoint).concat(path ? \"/\".concat(path) : '').concat(getQueryString(params));\n};\nexport var getQueryString = function getQueryString(params) {\n  var isObject = params !== null && typeof params === 'object' && Array.isArray(params) === false;\n  if (!isObject) return '';\n  var paramsArray = Object.entries(params).map(function (param) {\n    return \"\".concat(param[0], \"=\").concat(param[1]);\n  });\n  return paramsArray.length > 0 ? \"?\".concat(paramsArray.join('&')) : '';\n};\nexport var getHeaders = function getHeaders(token) {\n  var type = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : 'json';\n  return _objectSpread(_objectSpread({}, type === 'json' && {\n    'Content-Type': 'application/json'\n  }), token && {\n    Authorization: \"Bearer \".concat(token)\n  });\n};\nexport default utilsApi;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/utils/api/api.js"],"names":["get","isEmpty","config","APPLICATION_TYPE_JSON","APPLICATION_TYPE_TEXT","STATUS_UNAUTHORIZED","utils","setTokenExpired","utilsApi","token","endpoint","path","params","mode","headers","Promise","reject","message","fetch","getUrl","method","getHeaders","then","data","post","body","JSON","stringify","multiPartPost","put","patch","delete","handleEmptyResponse","response","responseObj","ok","type","status","statusText","url","json","handleResponse","applicationType","isJson","includes","isText","text","handleResponseBlob","blob","handleResponseJsonObject","keyToCheck","error","handleResponseJsonArray","generic","isValidArray","handleData","skipDataCheck","handleNewData","pagination","handleError","errorObject","file","Object","keys","length","console","handleUnauthorized","dispatch","hasToken","user","isTokenValid","hasOldInvalidToken","itemsTotal","page","pageSize","ui","default","pageTotal","query","getErrorMessage","err","defaultErrorMsg","string","t","getQueryString","isObject","Array","isArray","paramsArray","entries","map","param","join","Authorization"],"mappings":"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","sourcesContent":["import get from 'lodash/get';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport config from 'config';\r\nimport { APPLICATION_TYPE_JSON, APPLICATION_TYPE_TEXT, STATUS_UNAUTHORIZED } from 'consts';\r\nimport * as utils from 'utils';\r\nimport { setTokenExpired } from 'stores';\r\nconst utilsApi = {\r\n  get: ({ token, endpoint, path, params, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'GET',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token) : {},\r\n    }).then((data) => data);\r\n  },\r\n\r\n  post: ({ token, endpoint, path, params, data, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'POST',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token) : {},\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  multiPartPost: ({ token, endpoint, path, params, data, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'POST',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token, false) : {},\r\n      body: data,\r\n    });\r\n  },\r\n\r\n  put: ({ token, endpoint, path, params, data, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'PUT',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token) : {},\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  patch: ({ token, endpoint, path, params, data, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'PATCH',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token) : {},\r\n      body: JSON.stringify(data),\r\n    });\r\n  },\r\n\r\n  delete: ({ token, endpoint, path, params, mode = 'cors', headers = true }) => {\r\n    if (!endpoint) return Promise.reject({ message: 'Missing fetch parameters' });\r\n\r\n    return fetch(getUrl(endpoint, path, params), {\r\n      method: 'DELETE',\r\n      mode: mode,\r\n      headers: headers ? getHeaders(token) : {},\r\n    });\r\n  },\r\n  handleEmptyResponse: (response) => {\r\n    const responseObj = {\r\n      ok: response.ok,\r\n      ...(response.type && { type: response.type }),\r\n      ...(response.status && { status: response.status }),\r\n      ...(response.statusText && { statusText: response.statusText }),\r\n      ...(response.url && { url: response.url }),\r\n    };\r\n    if (response.ok) {\r\n      return true;\r\n    }\r\n    // fail\r\n    return response.json().then((json) => {\r\n      return Promise.reject({\r\n        response: responseObj,\r\n        ...(json && { json }),\r\n      });\r\n    });\r\n  },\r\n\r\n  handleResponse: (response) => {\r\n    const applicationType = response.headers.get('content-type') || '';\r\n    const isJson = applicationType.includes(APPLICATION_TYPE_JSON);\r\n    const isText = applicationType.includes(APPLICATION_TYPE_TEXT);\r\n\r\n    const responseObj = {\r\n      ok: response.ok,\r\n      ...(response.type && { type: response.type }),\r\n      ...(response.status && { status: response.status }),\r\n      ...(response.statusText && { statusText: response.statusText }),\r\n      ...(response.url && { url: response.url }),\r\n    };\r\n\r\n    // json\r\n    if (isJson) {\r\n      if (response.ok) {\r\n        return response.json();\r\n      }\r\n\r\n      // fail\r\n      return response.json().then((json) => {\r\n        return Promise.reject({\r\n          response: responseObj,\r\n          ...(json && { json }),\r\n        });\r\n      });\r\n    }\r\n\r\n    // text\r\n    if (isText) {\r\n      if (response.ok) {\r\n        return response.text();\r\n      }\r\n\r\n      // fail\r\n      return response.text().then((text) => {\r\n        return Promise.reject({\r\n          response: responseObj,\r\n          ...(text && { text }),\r\n        });\r\n      });\r\n    }\r\n\r\n    // if application type isn't supported\r\n    return Promise.reject({ type: 'application type not supported' });\r\n  },\r\n\r\n  handleResponseBlob: (response) => {\r\n    if (response.ok) {\r\n      return response.blob();\r\n    } else {\r\n      return response.blob().then((blob) => {\r\n        return Promise.reject({\r\n          response,\r\n          ...(blob && { blob }),\r\n        });\r\n      });\r\n    }\r\n  },\r\n\r\n  handleResponseJsonObject: (json, keyToCheck = 'id') => {\r\n    // if the API is supposed to return a simple json object with a specific key to check validity:\r\n    if (json && json[keyToCheck]) {\r\n      return json;\r\n    } else if (json && json.error) {\r\n      return Promise.reject({ message: 'API data format error', ...json });\r\n    } else if (typeof json === 'string') {\r\n      return Promise.reject({ message: 'API data format error', error: json });\r\n    } else {\r\n      return Promise.reject({ message: 'API data format error' });\r\n    }\r\n  },\r\n\r\n  handleResponseJsonArray: (json) => {\r\n    // if the API is supposed to return an array:\r\n    if (utils.generic.isValidArray(json)) {\r\n      return json;\r\n    } else if (json && json.error) {\r\n      return Promise.reject({ message: 'API data format error', ...json });\r\n    } else if (typeof json === 'string') {\r\n      return Promise.reject({ message: 'API data format error', error: json });\r\n    } else {\r\n      return Promise.reject({ message: 'API data format error' });\r\n    }\r\n  },\r\n\r\n  handleData: (json, skipDataCheck) => {\r\n    // our APis should always return a response in this format:\r\n    // {\r\n    //   \"status\": \"success\",\r\n    //   \"data\": [...],\r\n    // }\r\n\r\n    if (json && json.status === 'success' && (skipDataCheck || !!json.data)) {\r\n      return json.data;\r\n    } else {\r\n      return Promise.reject({\r\n        message: `API data format error${json.status ? ` (${json.status})` : ''}`,\r\n        ...(json && { ...json }),\r\n      });\r\n    }\r\n  },\r\n\r\n  handleNewData: (json, skipDataCheck) => {\r\n    if (json && json.status === 'OK' && (skipDataCheck || json.data || json.pagination)) {\r\n      //if success\r\n      return json;\r\n    } else {\r\n      //if fails\r\n      return Promise.reject({\r\n        message: `API data format error${json.status ? ` (${json.status})` : ''}`,\r\n        ...(json && { ...json }),\r\n      });\r\n    }\r\n  },\r\n\r\n  handleError: (error = {}, params = {}) => {\r\n    const { response, json = {}, text = '' } = error;\r\n    const errorObject = {\r\n      ...(params.file && { file: params.file }),\r\n      ...(params.message && { message: params.message }),\r\n      ...(response && { response }),\r\n      ...(json?.message && { message: json.message }), // if it exists, the endpoint message will override the generic params message provided in the code\r\n      ...(text && { message: text }),\r\n      ...(Object.keys(error).length > 0 &&\r\n        !isEmpty(json) && {\r\n          error: {\r\n            ...json,\r\n          },\r\n        }),\r\n    };\r\n\r\n    console.error('Error', errorObject);\r\n    return errorObject;\r\n  },\r\n\r\n  handleUnauthorized: (error = {}, dispatch) => {\r\n    if ((error?.status === 401 || error?.text === STATUS_UNAUTHORIZED) && dispatch) {\r\n      console.error('Unauthorized', error);\r\n      const hasToken = utils.user.hasToken();\r\n      const isTokenValid = utils.user.isTokenValid();\r\n      const hasOldInvalidToken = hasToken && !isTokenValid;\r\n      dispatch(setTokenExpired(hasOldInvalidToken));\r\n    }\r\n  },\r\n\r\n  pagination: (data) => {\r\n    if (!data) return {};\r\n\r\n    return {\r\n      itemsTotal: get(data, 'pagination.totalElements', 0),\r\n      page: get(data, 'pagination.page', 1),\r\n      pageSize: get(data, 'pagination.size', config.ui.pagination.default),\r\n      pageTotal: get(data, 'pagination.totalPages', 0),\r\n      query: get(data, 'pagination.query') || '',\r\n    };\r\n  },\r\n\r\n  getErrorMessage: (err, defaultErrorMsg) => {\r\n    return err?.json?.message || defaultErrorMsg || utils.string.t('notification.generic.request');\r\n  },\r\n};\r\n\r\nexport const getUrl = (endpoint, path, params) => {\r\n  if (!endpoint) return '';\r\n\r\n  return `${endpoint}${path ? `/${path}` : ''}${getQueryString(params)}`;\r\n};\r\n\r\nexport const getQueryString = (params) => {\r\n  const isObject = params !== null && typeof params === 'object' && Array.isArray(params) === false;\r\n\r\n  if (!isObject) return '';\r\n\r\n  const paramsArray = Object.entries(params).map((param) => {\r\n    return `${param[0]}=${param[1]}`;\r\n  });\r\n\r\n  return paramsArray.length > 0 ? `?${paramsArray.join('&')}` : '';\r\n};\r\n\r\nexport const getHeaders = (token, type = 'json') => {\r\n  return {\r\n    ...(type === 'json' && { 'Content-Type': 'application/json' }),\r\n    ...(token && { Authorization: `Bearer ${token}` }),\r\n  };\r\n};\r\n\r\nexport default utilsApi;\r\n"]},"metadata":{},"sourceType":"module"}