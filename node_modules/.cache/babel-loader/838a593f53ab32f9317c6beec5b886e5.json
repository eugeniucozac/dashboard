{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\OpeningMemoContent\\\\OpeningMemoContent.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useSelector, useDispatch } from 'react-redux';\nimport { useParams } from 'react-router'; // app\n\nimport { OpeningMemoContentView } from './OpeningMemoContent.view';\nimport { createFields } from './OpeningMemoContent.fields';\nimport { openingMemoSchema } from 'schemas';\nimport { useMedia } from 'hooks';\nimport * as utils from 'utils';\nimport { selectRefDataNewRenewalBusinesses, selectOpeningMemo, getOpeningMemo, resetOpeningMemo, updateOpeningMemo, updateOpeningMemoDirty, selectRefDataDepartments } from 'stores';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nexport default function OpeningMemoContent() {\n  _s();\n\n  var _useState = useState(),\n      _useState2 = _slicedToArray(_useState, 2),\n      selectedTab = _useState2[0],\n      setSelectedTab = _useState2[1];\n\n  var _useState3 = useState(),\n      _useState4 = _slicedToArray(_useState3, 2),\n      defaultValues = _useState4[0],\n      setDefaultValues = _useState4[1];\n\n  var _useState5 = useState({}),\n      _useState6 = _slicedToArray(_useState5, 2),\n      schemaData = _useState6[0],\n      setSchemaData = _useState6[1];\n\n  var _useState7 = useState([]),\n      _useState8 = _slicedToArray(_useState7, 2),\n      fields = _useState8[0],\n      setFields = _useState8[1];\n\n  var media = useMedia();\n  var departments = useSelector(selectRefDataDepartments);\n  var newRenewalRefData = useSelector(selectRefDataNewRenewalBusinesses);\n  var openingMemo = useSelector(selectOpeningMemo);\n\n  var _useParams = useParams(),\n      openingMemoId = _useParams.openingMemoId;\n\n  var dispatch = useDispatch();\n  useEffect(function () {\n    dispatch(getOpeningMemo(openingMemoId));\n    return function () {\n      return dispatch(resetOpeningMemo());\n    };\n  }, [openingMemoId] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n  useEffect(function () {\n    if (!openingMemo.id || !newRenewalRefData.length) return;\n    var schema = utils.schemas.parseOpeningMemo(openingMemoSchema, openingMemo);\n    var fields = createFields(openingMemo, newRenewalRefData, departments);\n    setFields(fields);\n    setDefaultValues(_objectSpread({\n      lineItems: utils.form.getNestedInitialValues(schema.rows, 'columnName')\n    }, utils.form.getInitialValues(fields)));\n    setSchemaData(schema);\n    if (!selectedTab) setSelectedTab(schema.defaultTab);\n  }, [openingMemo, newRenewalRefData] // eslint-disable-line react-hooks/exhaustive-deps\n  );\n\n  var handleTabChange = function handleTabChange(ref) {\n    return function (tab) {\n      var el = ref.current;\n      var header = utils.app.getElement('#header');\n      setSelectedTab(tab); // scroll to top of form if...\n\n      if (media.mobile) {\n        window.scroll({\n          top: el.offsetTop,\n          left: 0,\n          behavior: 'smooth'\n        });\n      } else if (el.getBoundingClientRect().top < header.getBoundingClientRect().height) {\n        el.scrollIntoView({\n          behavior: 'smooth'\n        });\n      }\n    };\n  };\n\n  var handleSave = function handleSave(data) {\n    dispatch(updateOpeningMemo(data, openingMemoId));\n  };\n\n  var handleFormDirty = function handleFormDirty(data) {\n    dispatch(updateOpeningMemoDirty(data));\n  };\n\n  return defaultValues ? /*#__PURE__*/_jsxDEV(OpeningMemoContentView, {\n    onTabChange: handleTabChange,\n    onSave: handleSave,\n    fields: fields,\n    rows: schemaData.rows,\n    defaultValues: defaultValues,\n    selectedTab: selectedTab,\n    tabs: schemaData.tabs,\n    columnHeaders: schemaData.columnHeaders,\n    handleFormDirty: handleFormDirty\n  }, void 0, false, {\n    fileName: _jsxFileName,\n    lineNumber: 79,\n    columnNumber: 5\n  }, this) : null;\n}\n\n_s(OpeningMemoContent, \"ttihma4+WjTUTpIRztp1/tIe804=\", false, function () {\n  return [useMedia, useSelector, useSelector, useSelector, useParams, useDispatch];\n});\n\n_c = OpeningMemoContent;\nOpeningMemoContent.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"OpeningMemoContent\"\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\OpeningMemoContent\\\\OpeningMemoContent.js\"] = {\n    name: \"OpeningMemoContent\",\n    docgenInfo: OpeningMemoContent.__docgenInfo,\n    path: \"src\\\\modules\\\\OpeningMemoContent\\\\OpeningMemoContent.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"OpeningMemoContent\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/OpeningMemoContent/OpeningMemoContent.js"],"names":["React","useEffect","useState","useSelector","useDispatch","useParams","OpeningMemoContentView","createFields","openingMemoSchema","useMedia","utils","selectRefDataNewRenewalBusinesses","selectOpeningMemo","getOpeningMemo","resetOpeningMemo","updateOpeningMemo","updateOpeningMemoDirty","selectRefDataDepartments","OpeningMemoContent","selectedTab","setSelectedTab","defaultValues","setDefaultValues","schemaData","setSchemaData","fields","setFields","media","departments","newRenewalRefData","openingMemo","openingMemoId","dispatch","id","length","schema","schemas","parseOpeningMemo","lineItems","form","getNestedInitialValues","rows","getInitialValues","defaultTab","handleTabChange","ref","tab","el","current","header","app","getElement","mobile","window","scroll","top","offsetTop","left","behavior","getBoundingClientRect","height","scrollIntoView","handleSave","data","handleFormDirty","tabs","columnHeaders"],"mappings":";;;;;;AAAA,OAAOA,KAAP,IAAgBC,SAAhB,EAA2BC,QAA3B,QAA2C,OAA3C;AACA,SAASC,WAAT,EAAsBC,WAAtB,QAAyC,aAAzC;AACA,SAASC,SAAT,QAA0B,cAA1B,C,CAEA;;AACA,SAASC,sBAAT,QAAuC,2BAAvC;AACA,SAASC,YAAT,QAA6B,6BAA7B;AACA,SAASC,iBAAT,QAAkC,SAAlC;AACA,SAASC,QAAT,QAAyB,OAAzB;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AACA,SACEC,iCADF,EAEEC,iBAFF,EAGEC,cAHF,EAIEC,gBAJF,EAKEC,iBALF,EAMEC,sBANF,EAOEC,wBAPF,QAQO,QARP;;AAUA,eAAe,SAASC,kBAAT,GAA8B;AAAA;;AAAA,kBACLhB,QAAQ,EADH;AAAA;AAAA,MACpCiB,WADoC;AAAA,MACvBC,cADuB;;AAAA,mBAEDlB,QAAQ,EAFP;AAAA;AAAA,MAEpCmB,aAFoC;AAAA,MAErBC,gBAFqB;;AAAA,mBAGPpB,QAAQ,CAAC,EAAD,CAHD;AAAA;AAAA,MAGpCqB,UAHoC;AAAA,MAGxBC,aAHwB;;AAAA,mBAIftB,QAAQ,CAAC,EAAD,CAJO;AAAA;AAAA,MAIpCuB,MAJoC;AAAA,MAI5BC,SAJ4B;;AAK3C,MAAMC,KAAK,GAAGlB,QAAQ,EAAtB;AAEA,MAAMmB,WAAW,GAAGzB,WAAW,CAACc,wBAAD,CAA/B;AACA,MAAMY,iBAAiB,GAAG1B,WAAW,CAACQ,iCAAD,CAArC;AACA,MAAMmB,WAAW,GAAG3B,WAAW,CAACS,iBAAD,CAA/B;;AAT2C,mBAWjBP,SAAS,EAXQ;AAAA,MAWnC0B,aAXmC,cAWnCA,aAXmC;;AAY3C,MAAMC,QAAQ,GAAG5B,WAAW,EAA5B;AAEAH,EAAAA,SAAS,CACP,YAAM;AACJ+B,IAAAA,QAAQ,CAACnB,cAAc,CAACkB,aAAD,CAAf,CAAR;AACA,WAAO;AAAA,aAAMC,QAAQ,CAAClB,gBAAgB,EAAjB,CAAd;AAAA,KAAP;AACD,GAJM,EAKP,CAACiB,aAAD,CALO,CAKS;AALT,GAAT;AAQA9B,EAAAA,SAAS,CACP,YAAM;AACJ,QAAI,CAAC6B,WAAW,CAACG,EAAb,IAAmB,CAACJ,iBAAiB,CAACK,MAA1C,EAAkD;AAClD,QAAMC,MAAM,GAAGzB,KAAK,CAAC0B,OAAN,CAAcC,gBAAd,CAA+B7B,iBAA/B,EAAkDsB,WAAlD,CAAf;AACA,QAAML,MAAM,GAAGlB,YAAY,CAACuB,WAAD,EAAcD,iBAAd,EAAiCD,WAAjC,CAA3B;AACAF,IAAAA,SAAS,CAACD,MAAD,CAAT;AACAH,IAAAA,gBAAgB;AAAGgB,MAAAA,SAAS,EAAE5B,KAAK,CAAC6B,IAAN,CAAWC,sBAAX,CAAkCL,MAAM,CAACM,IAAzC,EAA+C,YAA/C;AAAd,OAA+E/B,KAAK,CAAC6B,IAAN,CAAWG,gBAAX,CAA4BjB,MAA5B,CAA/E,EAAhB;AACAD,IAAAA,aAAa,CAACW,MAAD,CAAb;AACA,QAAI,CAAChB,WAAL,EAAkBC,cAAc,CAACe,MAAM,CAACQ,UAAR,CAAd;AACnB,GATM,EAUP,CAACb,WAAD,EAAcD,iBAAd,CAVO,CAU0B;AAV1B,GAAT;;AAaA,MAAMe,eAAe,GAAG,SAAlBA,eAAkB,CAACC,GAAD;AAAA,WAAS,UAACC,GAAD,EAAS;AACxC,UAAMC,EAAE,GAAGF,GAAG,CAACG,OAAf;AACA,UAAMC,MAAM,GAAGvC,KAAK,CAACwC,GAAN,CAAUC,UAAV,CAAqB,SAArB,CAAf;AAEA/B,MAAAA,cAAc,CAAC0B,GAAD,CAAd,CAJwC,CAMxC;;AACA,UAAInB,KAAK,CAACyB,MAAV,EAAkB;AAChBC,QAAAA,MAAM,CAACC,MAAP,CAAc;AAAEC,UAAAA,GAAG,EAAER,EAAE,CAACS,SAAV;AAAqBC,UAAAA,IAAI,EAAE,CAA3B;AAA8BC,UAAAA,QAAQ,EAAE;AAAxC,SAAd;AACD,OAFD,MAEO,IAAIX,EAAE,CAACY,qBAAH,GAA2BJ,GAA3B,GAAiCN,MAAM,CAACU,qBAAP,GAA+BC,MAApE,EAA4E;AACjFb,QAAAA,EAAE,CAACc,cAAH,CAAkB;AAAEH,UAAAA,QAAQ,EAAE;AAAZ,SAAlB;AACD;AACF,KAZuB;AAAA,GAAxB;;AAcA,MAAMI,UAAU,GAAG,SAAbA,UAAa,CAACC,IAAD,EAAU;AAC3B/B,IAAAA,QAAQ,CAACjB,iBAAiB,CAACgD,IAAD,EAAOhC,aAAP,CAAlB,CAAR;AACD,GAFD;;AAIA,MAAMiC,eAAe,GAAG,SAAlBA,eAAkB,CAACD,IAAD,EAAU;AAChC/B,IAAAA,QAAQ,CAAChB,sBAAsB,CAAC+C,IAAD,CAAvB,CAAR;AACD,GAFD;;AAIA,SAAO1C,aAAa,gBAClB,QAAC,sBAAD;AACE,IAAA,WAAW,EAAEuB,eADf;AAEE,IAAA,MAAM,EAAEkB,UAFV;AAGE,IAAA,MAAM,EAAErC,MAHV;AAIE,IAAA,IAAI,EAAEF,UAAU,CAACkB,IAJnB;AAKE,IAAA,aAAa,EAAEpB,aALjB;AAME,IAAA,WAAW,EAAEF,WANf;AAOE,IAAA,IAAI,EAAEI,UAAU,CAAC0C,IAPnB;AAQE,IAAA,aAAa,EAAE1C,UAAU,CAAC2C,aAR5B;AASE,IAAA,eAAe,EAAEF;AATnB;AAAA;AAAA;AAAA;AAAA,UADkB,GAYhB,IAZJ;AAaD;;GAtEuB9C,kB;UAKRT,Q,EAEMN,W,EACMA,W,EACNA,W,EAEME,S,EACTD,W;;;KAZKc,kB","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useSelector, useDispatch } from 'react-redux';\r\nimport { useParams } from 'react-router';\r\n\r\n// app\r\nimport { OpeningMemoContentView } from './OpeningMemoContent.view';\r\nimport { createFields } from './OpeningMemoContent.fields';\r\nimport { openingMemoSchema } from 'schemas';\r\nimport { useMedia } from 'hooks';\r\nimport * as utils from 'utils';\r\nimport {\r\n  selectRefDataNewRenewalBusinesses,\r\n  selectOpeningMemo,\r\n  getOpeningMemo,\r\n  resetOpeningMemo,\r\n  updateOpeningMemo,\r\n  updateOpeningMemoDirty,\r\n  selectRefDataDepartments,\r\n} from 'stores';\r\n\r\nexport default function OpeningMemoContent() {\r\n  const [selectedTab, setSelectedTab] = useState();\r\n  const [defaultValues, setDefaultValues] = useState();\r\n  const [schemaData, setSchemaData] = useState({});\r\n  const [fields, setFields] = useState([]);\r\n  const media = useMedia();\r\n\r\n  const departments = useSelector(selectRefDataDepartments);\r\n  const newRenewalRefData = useSelector(selectRefDataNewRenewalBusinesses);\r\n  const openingMemo = useSelector(selectOpeningMemo);\r\n\r\n  const { openingMemoId } = useParams();\r\n  const dispatch = useDispatch();\r\n\r\n  useEffect(\r\n    () => {\r\n      dispatch(getOpeningMemo(openingMemoId));\r\n      return () => dispatch(resetOpeningMemo());\r\n    },\r\n    [openingMemoId] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  useEffect(\r\n    () => {\r\n      if (!openingMemo.id || !newRenewalRefData.length) return;\r\n      const schema = utils.schemas.parseOpeningMemo(openingMemoSchema, openingMemo);\r\n      const fields = createFields(openingMemo, newRenewalRefData, departments);\r\n      setFields(fields);\r\n      setDefaultValues({ lineItems: utils.form.getNestedInitialValues(schema.rows, 'columnName'), ...utils.form.getInitialValues(fields) });\r\n      setSchemaData(schema);\r\n      if (!selectedTab) setSelectedTab(schema.defaultTab);\r\n    },\r\n    [openingMemo, newRenewalRefData] // eslint-disable-line react-hooks/exhaustive-deps\r\n  );\r\n\r\n  const handleTabChange = (ref) => (tab) => {\r\n    const el = ref.current;\r\n    const header = utils.app.getElement('#header');\r\n\r\n    setSelectedTab(tab);\r\n\r\n    // scroll to top of form if...\r\n    if (media.mobile) {\r\n      window.scroll({ top: el.offsetTop, left: 0, behavior: 'smooth' });\r\n    } else if (el.getBoundingClientRect().top < header.getBoundingClientRect().height) {\r\n      el.scrollIntoView({ behavior: 'smooth' });\r\n    }\r\n  };\r\n\r\n  const handleSave = (data) => {\r\n    dispatch(updateOpeningMemo(data, openingMemoId));\r\n  };\r\n\r\n  const handleFormDirty = (data) => {\r\n    dispatch(updateOpeningMemoDirty(data));\r\n  };\r\n\r\n  return defaultValues ? (\r\n    <OpeningMemoContentView\r\n      onTabChange={handleTabChange}\r\n      onSave={handleSave}\r\n      fields={fields}\r\n      rows={schemaData.rows}\r\n      defaultValues={defaultValues}\r\n      selectedTab={selectedTab}\r\n      tabs={schemaData.tabs}\r\n      columnHeaders={schemaData.columnHeaders}\r\n      handleFormDirty={handleFormDirty}\r\n    />\r\n  ) : null;\r\n}\r\n"]},"metadata":{},"sourceType":"module"}