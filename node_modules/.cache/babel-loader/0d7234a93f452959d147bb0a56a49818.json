{"ast":null,"code":"import _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport get from 'lodash/get'; // app\n\nimport config from 'config';\nimport * as constants from 'consts';\nimport * as utils from 'utils';\nvar initialState = {\n  isMultiSelectEnabled: false,\n  loading: false,\n  error: [],\n  selected: [],\n  isCaseTableHidden: false,\n  caseDetails: {\n    frontEndSendDocs: false,\n    caseTeamData: {},\n    caseStageDetails: [],\n    caseNotes: {\n      notesHistory: []\n    },\n    caseIssueDocuments: {\n      nonBureauList: {\n        items: []\n      },\n      caseClientList: {\n        items: []\n      },\n      bureauList: {\n        items: []\n      }\n    },\n    openRfi: false,\n    checkSigningCaseHistory: [],\n    caseHistoryDetails: {\n      rejectDetailsHistory: {},\n      resubmitDetailsHistory: [],\n      qualityControlHistory: []\n    },\n    caseId: null,\n    taskId: '',\n    processId: '',\n    instructionId: '',\n    instructionStatusId: '',\n    policyId: '',\n    fecId: '',\n    taskView: '',\n    isCheckSigning: false,\n    fecEmail: ''\n  },\n  caseRfiDetails: {},\n  emailSentStatus: false,\n  casesList: {\n    isTaskGridLoading: true,\n    isTaskGridDataFetchingError: false,\n    selectedTaskType: '',\n    type: constants.WORKLIST,\n    items: [],\n    isloadingFilters: false,\n    appliedFilters: [],\n    itemsTotal: 0,\n    page: 1,\n    pageSize: config.ui.pagination[\"default\"],\n    pageTotal: 0,\n    filters: {},\n    query: '',\n    searchBy: '',\n    isCheckSigning: false,\n    sort: {\n      by: 'caseCreatedOn',\n      type: 'lexical',\n      direction: 'desc'\n    }\n  },\n  caseTaskViewType: '',\n  assignedTo: {\n    assigning: false\n  },\n  technicians: {\n    items: [],\n    loading: false\n  },\n  issueDocuments: {\n    documentFromLondonTeam: true,\n    nonBureau: true,\n    bureauInsurer: true\n  },\n  rfi: {\n    history: [],\n    queryCodes: [],\n    responseDate: '',\n    saveDraft: [],\n    newRFI: []\n  },\n  caseTeamModule: {},\n  caseRfiSubTabs: [],\n  multiSelectedRows: [],\n  assignedToUsers: [],\n  postAssignToUser: {},\n  bpmFlag: [],\n  bordereauType: [],\n  bpmStage: [],\n  facilityType: [],\n  departments: [],\n  rejectCase: {},\n  rejectCloseCase: {},\n  checkSigningCase: {},\n  checkSigningCompleteCase: {},\n  checkSigningCancelCase: {},\n  checkSigningRejectCase: {},\n  rfiResolutionCodes: [],\n  checkSigningRejectCreateCase: {},\n  bureauRfiDetails: {}\n};\n\nvar premiumProcessingReducers = function premiumProcessingReducers() {\n  var _get, _action$payload2, _action$payload3, _action$payload4, _action$payload5, _action$payload6, _state$casesList, _action$payload7, _action$payload8, _action$payload9, _action$payload10;\n\n  var state = arguments.length > 0 && arguments[0] !== undefined ? arguments[0] : initialState;\n  var action = arguments.length > 1 ? arguments[1] : undefined;\n\n  switch (action.type) {\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread({}, state.casesList),\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECKSIGNING_TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          isCheckSigning: action.payload\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_TASK_TYPE_SELECTED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          selectedTaskType: action.payload\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_TASK_SEARCH_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          query: initialState.casesList.query\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_TASK_FILTERS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          appliedFilters: initialState.casesList.appliedFilters\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_TASKS_GET_SUCCESS':\n      var _action$payload = action.payload,\n          _action$payload$items = _action$payload.items,\n          tasksFiltersValues = _action$payload$items.filterValue,\n          tasksSearchValues = _action$payload$items.searchValue,\n          tasksPagination = _action$payload.pagination,\n          requestType = _action$payload.requestType,\n          taskType = _action$payload.taskType,\n          sortBy = _action$payload.sortBy,\n          dir = _action$payload.dir,\n          searchBy = _action$payload.searchBy,\n          query = _action$payload.query,\n          tasksAppliedFilters = _action$payload.appliedFilters,\n          navigation = _action$payload.navigation,\n          isCheckSigning = _action$payload.isCheckSigning;\n      var initTaskProcessing = initialState.casesList;\n      var initTaskProcessingSort = initTaskProcessing.sort;\n      var stateTaskProcessing = state.casesList;\n      var prevTaskProcessingSelected = initialState.multiSelectedRows;\n      var isNonfilterTypeCall = requestType !== constants.CLAIM_PROCESSING_REQ_TYPES.filter;\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread(_objectSpread({}, state.casesList), isNonfilterTypeCall ? {\n          items: tasksSearchValues || [],\n          itemsTotal: get(tasksPagination, 'totalElements', 0),\n          page: get(tasksPagination, 'page', 0) + 1,\n          pageSize: get(tasksPagination, 'size', initialState.casesList.pageSize),\n          pageTotal: get(tasksPagination, 'totalPages', 0),\n          query: query || '',\n          searchBy: searchBy\n        } : {}), {}, {\n          sort: _objectSpread(_objectSpread({}, state.casesList.sort), {}, {\n            by: sortBy || initTaskProcessingSort.by,\n            direction: ((_get = get(tasksPagination, 'direction', initTaskProcessingSort.direction)) === null || _get === void 0 ? void 0 : _get.toLowerCase()) || dir\n          }),\n          filters: isNonfilterTypeCall ? stateTaskProcessing.filters : tasksFiltersValues ? tasksFiltersValues : {},\n          taskType: taskType || initTaskProcessing.taskType,\n          appliedFilters: (tasksAppliedFilters === null || tasksAppliedFilters === void 0 ? void 0 : tasksAppliedFilters.length) ? tasksAppliedFilters : initTaskProcessing.appliedFilters,\n          isCheckSigning: isCheckSigning,\n          isTaskGridLoading: false,\n          isTaskGridDataFetchingError: false\n        }),\n        selected: [],\n        multiSelectedRows: navigation ? prevTaskProcessingSelected : [],\n        isMultiSelectEnabled: false,\n        loading: false\n      });\n\n    case 'PREMIUM_PORCESSING_SET_TASK_GRID_LOADING':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: ((_action$payload2 = action.payload) === null || _action$payload2 === void 0 ? void 0 : _action$payload2.flag) ? [] : state.casesList.items,\n          isTaskGridLoading: (_action$payload3 = action.payload) === null || _action$payload3 === void 0 ? void 0 : _action$payload3.flag\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_TASKS_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: [],\n        multiSelectedRows: [],\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: ((_action$payload4 = action.payload) === null || _action$payload4 === void 0 ? void 0 : _action$payload4.type) === 'filter' ? state.casesList.items : [],\n          filters: ((_action$payload5 = action.payload) === null || _action$payload5 === void 0 ? void 0 : _action$payload5.type) === 'filter' ? {} : state.casesList.filters,\n          isTaskGridLoading: false,\n          isTaskGridDataFetchingError: true\n        }),\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_TASKS_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_TASKS_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: action.payload === 'filter' ? state.casesList.items : [],\n          filters: action.payload === 'filter' ? {} : state.casesList.filters\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_SUCCESS':\n      var caseListPagination = action.payload.pagination || {};\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: action.payload.items || [],\n          itemsTotal: get(caseListPagination, 'totalElements', 0),\n          page: get(caseListPagination, 'page', 1),\n          pageSize: get(caseListPagination, 'size', initialState.casesList.pageSize),\n          pageTotal: get(caseListPagination, 'totalPages', 0),\n          type: action.payload.type,\n          query: get(caseListPagination, 'query') || '',\n          filters: action.payload.fitlers || initialState.casesList.filters,\n          sort: _objectSpread(_objectSpread(_objectSpread({}, state.casesList.sort), caseListPagination.direction && {\n            direction: caseListPagination.direction.toLowerCase()\n          }), caseListPagination.orderBy && {\n            by: caseListPagination.orderBy\n          })\n        }),\n        loading: false,\n        selected: [],\n        multiSelectedRows: [],\n        isMultiSelectEnabled: false\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: [],\n        multiSelectedRows: [],\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: []\n        }),\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_DESELECT':\n      var selectedRecords = ((_action$payload6 = action.payload) === null || _action$payload6 === void 0 ? void 0 : _action$payload6.checked) && ((_state$casesList = state.casesList) === null || _state$casesList === void 0 ? void 0 : _state$casesList.items.slice(0, 10).map(function (data) {\n        return data;\n      }));\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: [],\n        multiSelectedRows: ((_action$payload7 = action.payload) === null || _action$payload7 === void 0 ? void 0 : _action$payload7.checked) ? selectedRecords : []\n      });\n\n    case 'PREMIUM_PROCESSING_SINGLE_CASES_SELECTED':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: !state.isMultiSelectEnabled ? [action.payload.selectedCase] : [],\n        multiSelectedRows: []\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_UPDATE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: action.payload || []\n      });\n\n    case 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseTaskViewType: !action.payload.isCaseIdForLoggedInUser ? '' : action.payload.taskType\n      });\n\n    case 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseTaskViewType: initialState.caseTaskViewType,\n        selected: [],\n        multiSelectedRows: [],\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          items: ((_action$payload8 = action.payload) === null || _action$payload8 === void 0 ? void 0 : _action$payload8.type) === 'filter' ? state.casesList.items : [],\n          filters: ((_action$payload9 = action.payload) === null || _action$payload9 === void 0 ? void 0 : _action$payload9.type) === 'filter' ? {} : state.casesList.filters\n        }),\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_MULTI_SELECTED_CASES':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        multiSelectedRows: action.payload || [],\n        selected: action.payload.length === 1 ? action.payload : []\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_RESET':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: [],\n        multiSelectedRows: []\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_TYPE_CHANGE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        casesList: _objectSpread(_objectSpread({}, state.casesList), {}, {\n          type: action.payload\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_SET_IS_TABLEHIDDEN':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isCaseTableHidden: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_MULTI_SELECT_TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        isMultiSelectEnabled: action.payload,\n        selected: [],\n        multiSelectedRows: []\n      });\n\n    case 'PREMIUM_PROCESSING_CASES_CHOOSE_TOGGLE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: state.isMultiSelectEnabled ? state.selected.length >= 1 ? state.selected[0] ? [state.selected[0]] : [] : [] : state.selected[0] ? [state.selected[0]] : [],\n        isMultiSelectEnabled: !state.isMultiSelectEnabled\n      });\n\n    case 'PREMIUM_PROCESSING_SET_MULTI_SELECT_FLAG':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        selected: action.payload.flag ? state.selected[0] : state.selected.length >= 1 ? state.selected[0] ? [state.selected[0]] : [] : [],\n        isMultiSelectEnabled: action.payload.flag\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true,\n        error: []\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          checkSigningCaseHistory: action.data\n        }),\n        loading: false,\n        error: null\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          checkSigningCaseHistory: []\n        }),\n        loading: false,\n        error: [action.error]\n      });\n\n    case 'TECHNICIANS_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        technicians: _objectSpread(_objectSpread({}, state.technicians), {}, {\n          loading: true\n        })\n      });\n\n    case 'TECHNICIANS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        technicians: _objectSpread(_objectSpread({}, state.technicians), {}, {\n          items: action.payload,\n          loading: false\n        })\n      });\n\n    case 'CASE_STATUSES_BY_DAYS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseProgressByType: _objectSpread(_objectSpread({}, state.caseProgressByType), {}, _defineProperty({}, action.days, {\n          items: action.payload\n        }))\n      });\n\n    case 'CASE_TEAM_DETAILS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread({}, initialState.caseDetails),\n        caseRfiDetails: _objectSpread({}, initialState.caseRfiDetails)\n      });\n\n    case 'CASE_TEAM_DETAILS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          policyRef: (_action$payload10 = action.payload) === null || _action$payload10 === void 0 ? void 0 : _action$payload10.processRef,\n          caseTeamData: action.payload.caseDetails,\n          caseStageDetails: action.payload.caseStages,\n          caseNotes: {\n            notesHistory: action.payload.notes\n          },\n          caseIssueDocuments: {\n            nonBureauList: {\n              items: state.caseDetails.caseIssueDocuments.nonBureauList.items\n            },\n            caseClientList: {\n              items: state.caseDetails.caseIssueDocuments.caseClientList.items\n            },\n            bureauList: {\n              items: state.caseDetails.caseIssueDocuments.bureauList.items\n            }\n          },\n          openRfi: action.payload.openRfi,\n          caseId: action.payload.caseId,\n          taskId: action.payload.bpmTaskId,\n          processId: action.payload.bpmProcessId,\n          instructionId: action.payload.instructionId,\n          instructionStatusId: action.payload.instructionStatusId,\n          rejectDetailsHistory: {},\n          resubmissionDetailsHistory: [],\n          policyId: action.payload.policyId,\n          fecId: action.payload.fecId,\n          frontEndSendDocs: action.payload.frontEndSendDocs,\n          bpmFlag: action.payload.bpmFlag,\n          taskView: action.payload.taskView,\n          isCheckSigning: action.payload.isCheckSigning,\n          fecEmail: action.payload.frontEndContactEmail\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_RFI_DETAILS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseRfiDetails: _objectSpread({}, action.payload)\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_RFI_DETAILS_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseRfiDetails: _objectSpread({}, initialState.caseRfiDetails)\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_HISTORY_DETAILS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread(_objectSpread({}, state.caseDetails), state.caseDetails.caseHistoryDetails), {}, {\n          caseHistoryDetails: {\n            rejectDetailsHistory: action.payload.rejectHistory,\n            resubmitDetailsHistory: action.payload.resubmitHistory,\n            qualityControlHistory: action.payload.qualityControlHistory\n          }\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_HISTORY_DETAILS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread(_objectSpread({}, state.caseDetails), state.caseDetails.caseHistoryDetails), {}, {\n          caseHistoryDetails: {\n            rejectDetailsHistory: {},\n            resubmitDetailsHistory: []\n          }\n        })\n      });\n\n    case 'ISSUE_DOCUMENTS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        issueDocuments: {\n          documentFromLondonTeam: false,\n          nonBureau: false,\n          bureauInsurer: true\n        }\n      });\n\n    case 'RFI_HISTORY_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'RFI_HISTORY_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          history: action.payload\n        }),\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_NEW_RFI_DATA':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          saveDraft: action.payload\n        })\n      });\n\n    case 'RFI_QUERY_CODES_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          queryCodes: action.payload\n        })\n      });\n\n    case 'RFI_RESPONSE_DATE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          responseDate: action.payload\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          newRFI: action.payload\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          newRFI: action.payload.items\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          newRFI: []\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseTeamModule: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseTeamModule: {},\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_RFI_GET_SUBTABS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseRfiSubTabs: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_RFI_GET_SUBTABS_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseRfiSubTabs: initialState.caseRfiSubTabs,\n        error: action.payload\n      });\n\n    case 'RFI_RESOLUTION_CODE_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfiResolutionCodes: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        assignedToUsers: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        postAssignToUser: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_FILTERS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        bordereauType: action.payload.bordereauType,\n        bpmFlag: action.payload.bpmFlag,\n        bpmStage: action.payload.bpmStage,\n        facilityType: action.payload.facilityType,\n        departments: action.payload.department\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_FILTERS_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_SAVE_NOTE_GET_SUCCESS':\n      var notesData = [].concat(_toConsumableArray(state.caseDetails.caseNotes.notesHistory), [action.payload.notesDetails]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread(_objectSpread({}, state.caseDetails), state.caseDetails.caseNotes), {}, {\n          caseNotes: {\n            notesHistory: notesData\n          }\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_SAVE_NOTE_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            nonBureauList: _objectSpread({}, initialState.caseDetails.caseIssueDocuments.nonBureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            nonBureauList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.nonBureauList), {}, {\n              items: action.payload.items\n            })\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            nonBureauList: _objectSpread({}, initialState.caseDetails.caseIssueDocuments.nonBureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, initialState.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList), {}, {\n              items: action.payload.items\n            })\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            caseClientList: _objectSpread({}, state.caseDetails.caseIssueDocuments.caseClientList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            caseClientList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.caseClientList), {}, {\n              items: action.payload.items\n            })\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDeatils: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            caseClientList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.caseClientList), {}, {\n              items: []\n            })\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_EMAIL_SENT_STATUS_GET_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailSentStatus: action.payload.emailSentStatus\n      });\n\n    case 'PREMIUM_PROCESSING_EMAIL_SENT_STATUS_GET_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        emailSentStatus: initialState.emailSentStatus\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rejectCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rejectCloseCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_SUCCESS':\n      {\n        var bureauListItems = utils.generic.isValidArray(state.caseDetails.caseIssueDocuments.bureauList.items, true) && _toConsumableArray(state.caseDetails.caseIssueDocuments.bureauList.items) || initialState.caseDetails.caseIssueDocuments.bureauList.items;\n        action.payload.items.forEach(function (item) {\n          if (item.issueDocsType === constants.BUREAU_RFITYPE) {\n            bureauListItems.push(item);\n          }\n        });\n        return _objectSpread(_objectSpread({}, state), {}, {\n          loading: false,\n          caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n            caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n              bureauList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList), {}, {\n                items: _toConsumableArray(bureauListItems)\n              })\n            })\n          })\n        });\n      }\n\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload,\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList), {}, {\n              items: state.caseDetails.caseIssueDocuments.bureauList.items.filter(function (item) {\n                return item.caseIncidentIssueDocsId !== action.payload;\n              })\n            })\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_FAILURE':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          caseIssueDocuments: _objectSpread(_objectSpread({}, state.caseDetails.caseIssueDocuments), {}, {\n            bureauList: _objectSpread({}, state.caseDetails.caseIssueDocuments.bureauList)\n          })\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkSigningCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkSigningCompleteCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkSigningCancelCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkSigningRejectCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_RESPOND_RFI_GET_SUCCESS':\n      var respondRFIData = [].concat(_toConsumableArray(state.rfi.history), [action.payload]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          history: respondRFIData\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_RESPOND_RFI_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_RESOLVE_RFI_GET_SUCCESS':\n      var resolveRFIData = [].concat(_toConsumableArray(state.rfi.history), [action.payload]);\n      return _objectSpread(_objectSpread({}, state), {}, {\n        rfi: _objectSpread(_objectSpread({}, state.rfi), {}, {\n          history: resolveRFIData\n        })\n      });\n\n    case 'PREMIUM_PROCESSING_RESOLVE_RFI_GET_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        checkSigningRejectCreateCase: action.payload,\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_REQUEST':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        loading: true\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_SUCCESS':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        caseDetails: _objectSpread(_objectSpread({}, state.caseDetails), {}, {\n          bureauRfiDetails: action.payload\n        }),\n        loading: false\n      });\n\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_ERROR':\n      return _objectSpread(_objectSpread({}, state), {}, {\n        error: action.payload\n      });\n\n    default:\n      return state;\n  }\n};\n\nexport default premiumProcessingReducers;","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.reducers.js"],"names":["get","config","constants","utils","initialState","isMultiSelectEnabled","loading","error","selected","isCaseTableHidden","caseDetails","frontEndSendDocs","caseTeamData","caseStageDetails","caseNotes","notesHistory","caseIssueDocuments","nonBureauList","items","caseClientList","bureauList","openRfi","checkSigningCaseHistory","caseHistoryDetails","rejectDetailsHistory","resubmitDetailsHistory","qualityControlHistory","caseId","taskId","processId","instructionId","instructionStatusId","policyId","fecId","taskView","isCheckSigning","fecEmail","caseRfiDetails","emailSentStatus","casesList","isTaskGridLoading","isTaskGridDataFetchingError","selectedTaskType","type","WORKLIST","isloadingFilters","appliedFilters","itemsTotal","page","pageSize","ui","pagination","pageTotal","filters","query","searchBy","sort","by","direction","caseTaskViewType","assignedTo","assigning","technicians","issueDocuments","documentFromLondonTeam","nonBureau","bureauInsurer","rfi","history","queryCodes","responseDate","saveDraft","newRFI","caseTeamModule","caseRfiSubTabs","multiSelectedRows","assignedToUsers","postAssignToUser","bpmFlag","bordereauType","bpmStage","facilityType","departments","rejectCase","rejectCloseCase","checkSigningCase","checkSigningCompleteCase","checkSigningCancelCase","checkSigningRejectCase","rfiResolutionCodes","checkSigningRejectCreateCase","bureauRfiDetails","premiumProcessingReducers","state","action","payload","tasksFiltersValues","filterValue","tasksSearchValues","searchValue","tasksPagination","requestType","taskType","sortBy","dir","tasksAppliedFilters","navigation","initTaskProcessing","initTaskProcessingSort","stateTaskProcessing","prevTaskProcessingSelected","isNonfilterTypeCall","CLAIM_PROCESSING_REQ_TYPES","filter","toLowerCase","length","flag","caseListPagination","fitlers","orderBy","selectedRecords","checked","slice","map","data","selectedCase","isCaseIdForLoggedInUser","caseProgressByType","days","policyRef","processRef","caseStages","notes","bpmTaskId","bpmProcessId","resubmissionDetailsHistory","frontEndContactEmail","rejectHistory","resubmitHistory","department","notesData","notesDetails","caseDeatils","bureauListItems","generic","isValidArray","forEach","item","issueDocsType","BUREAU_RFITYPE","push","caseIncidentIssueDocsId","respondRFIData","resolveRFIData"],"mappings":";;;AAAA,OAAOA,GAAP,MAAgB,YAAhB,C,CAEA;;AACA,OAAOC,MAAP,MAAmB,QAAnB;AACA,OAAO,KAAKC,SAAZ,MAA2B,QAA3B;AACA,OAAO,KAAKC,KAAZ,MAAuB,OAAvB;AAEA,IAAMC,YAAY,GAAG;AACnBC,EAAAA,oBAAoB,EAAE,KADH;AAEnBC,EAAAA,OAAO,EAAE,KAFU;AAGnBC,EAAAA,KAAK,EAAE,EAHY;AAInBC,EAAAA,QAAQ,EAAE,EAJS;AAKnBC,EAAAA,iBAAiB,EAAE,KALA;AAMnBC,EAAAA,WAAW,EAAE;AACXC,IAAAA,gBAAgB,EAAE,KADP;AAEXC,IAAAA,YAAY,EAAE,EAFH;AAGXC,IAAAA,gBAAgB,EAAE,EAHP;AAIXC,IAAAA,SAAS,EAAE;AACTC,MAAAA,YAAY,EAAE;AADL,KAJA;AAOXC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,aAAa,EAAE;AACbC,QAAAA,KAAK,EAAE;AADM,OADG;AAIlBC,MAAAA,cAAc,EAAE;AACdD,QAAAA,KAAK,EAAE;AADO,OAJE;AAOlBE,MAAAA,UAAU,EAAE;AACVF,QAAAA,KAAK,EAAE;AADG;AAPM,KAPT;AAkBXG,IAAAA,OAAO,EAAE,KAlBE;AAmBXC,IAAAA,uBAAuB,EAAE,EAnBd;AAoBXC,IAAAA,kBAAkB,EAAE;AAClBC,MAAAA,oBAAoB,EAAE,EADJ;AAElBC,MAAAA,sBAAsB,EAAE,EAFN;AAGlBC,MAAAA,qBAAqB,EAAE;AAHL,KApBT;AAyBXC,IAAAA,MAAM,EAAE,IAzBG;AA0BXC,IAAAA,MAAM,EAAE,EA1BG;AA2BXC,IAAAA,SAAS,EAAE,EA3BA;AA4BXC,IAAAA,aAAa,EAAE,EA5BJ;AA6BXC,IAAAA,mBAAmB,EAAE,EA7BV;AA8BXC,IAAAA,QAAQ,EAAE,EA9BC;AA+BXC,IAAAA,KAAK,EAAE,EA/BI;AAgCXC,IAAAA,QAAQ,EAAE,EAhCC;AAiCXC,IAAAA,cAAc,EAAE,KAjCL;AAkCXC,IAAAA,QAAQ,EAAE;AAlCC,GANM;AA0CnBC,EAAAA,cAAc,EAAE,EA1CG;AA2CnBC,EAAAA,eAAe,EAAE,KA3CE;AA4CnBC,EAAAA,SAAS,EAAE;AACTC,IAAAA,iBAAiB,EAAE,IADV;AAETC,IAAAA,2BAA2B,EAAE,KAFpB;AAGTC,IAAAA,gBAAgB,EAAE,EAHT;AAITC,IAAAA,IAAI,EAAEzC,SAAS,CAAC0C,QAJP;AAKT1B,IAAAA,KAAK,EAAE,EALE;AAMT2B,IAAAA,gBAAgB,EAAE,KANT;AAOTC,IAAAA,cAAc,EAAE,EAPP;AAQTC,IAAAA,UAAU,EAAE,CARH;AASTC,IAAAA,IAAI,EAAE,CATG;AAUTC,IAAAA,QAAQ,EAAEhD,MAAM,CAACiD,EAAP,CAAUC,UAAV,WAVD;AAWTC,IAAAA,SAAS,EAAE,CAXF;AAYTC,IAAAA,OAAO,EAAE,EAZA;AAaTC,IAAAA,KAAK,EAAE,EAbE;AAcTC,IAAAA,QAAQ,EAAE,EAdD;AAeTpB,IAAAA,cAAc,EAAE,KAfP;AAgBTqB,IAAAA,IAAI,EAAE;AACJC,MAAAA,EAAE,EAAE,eADA;AAEJd,MAAAA,IAAI,EAAE,SAFF;AAGJe,MAAAA,SAAS,EAAE;AAHP;AAhBG,GA5CQ;AAkEnBC,EAAAA,gBAAgB,EAAE,EAlEC;AAmEnBC,EAAAA,UAAU,EAAE;AACVC,IAAAA,SAAS,EAAE;AADD,GAnEO;AAsEnBC,EAAAA,WAAW,EAAE;AACX5C,IAAAA,KAAK,EAAE,EADI;AAEXZ,IAAAA,OAAO,EAAE;AAFE,GAtEM;AA0EnByD,EAAAA,cAAc,EAAE;AACdC,IAAAA,sBAAsB,EAAE,IADV;AAEdC,IAAAA,SAAS,EAAE,IAFG;AAGdC,IAAAA,aAAa,EAAE;AAHD,GA1EG;AA+EnBC,EAAAA,GAAG,EAAE;AACHC,IAAAA,OAAO,EAAE,EADN;AAEHC,IAAAA,UAAU,EAAE,EAFT;AAGHC,IAAAA,YAAY,EAAE,EAHX;AAIHC,IAAAA,SAAS,EAAE,EAJR;AAKHC,IAAAA,MAAM,EAAE;AALL,GA/Ec;AAsFnBC,EAAAA,cAAc,EAAE,EAtFG;AAuFnBC,EAAAA,cAAc,EAAE,EAvFG;AAwFnBC,EAAAA,iBAAiB,EAAE,EAxFA;AAyFnBC,EAAAA,eAAe,EAAE,EAzFE;AA0FnBC,EAAAA,gBAAgB,EAAE,EA1FC;AA2FnBC,EAAAA,OAAO,EAAE,EA3FU;AA4FnBC,EAAAA,aAAa,EAAE,EA5FI;AA6FnBC,EAAAA,QAAQ,EAAE,EA7FS;AA8FnBC,EAAAA,YAAY,EAAE,EA9FK;AA+FnBC,EAAAA,WAAW,EAAE,EA/FM;AAgGnBC,EAAAA,UAAU,EAAE,EAhGO;AAiGnBC,EAAAA,eAAe,EAAE,EAjGE;AAkGnBC,EAAAA,gBAAgB,EAAE,EAlGC;AAmGnBC,EAAAA,wBAAwB,EAAE,EAnGP;AAoGnBC,EAAAA,sBAAsB,EAAE,EApGL;AAqGnBC,EAAAA,sBAAsB,EAAE,EArGL;AAsGnBC,EAAAA,kBAAkB,EAAE,EAtGD;AAuGnBC,EAAAA,4BAA4B,EAAE,EAvGX;AAwGnBC,EAAAA,gBAAgB,EAAE;AAxGC,CAArB;;AA2GA,IAAMC,yBAAyB,GAAG,SAA5BA,yBAA4B,GAAkC;AAAA;;AAAA,MAAjCC,KAAiC,uEAAzBzF,YAAyB;AAAA,MAAX0F,MAAW;;AAClE,UAAQA,MAAM,CAACnD,IAAf;AACE,SAAK,2CAAL;AACE,6CACKkD,KADL;AAEEtD,QAAAA,SAAS,oBACJsD,KAAK,CAACtD,SADF,CAFX;AAKEjC,QAAAA,OAAO,EAAE;AALX;;AAOF,SAAK,wCAAL;AACE,6CACKuF,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPJ,UAAAA,cAAc,EAAE2D,MAAM,CAACC;AAFhB;AAFX;;AAQF,SAAK,uCAAL;AACE,6CACKF,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPG,UAAAA,gBAAgB,EAAEoD,MAAM,CAACC;AAFlB;AAFX;;AAOF,SAAK,sCAAL;AACE,6CACKF,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPe,UAAAA,KAAK,EAAElD,YAAY,CAACmC,SAAb,CAAuBe;AAFvB;AAFX;;AAQF,SAAK,uCAAL;AACE,6CACKuC,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPO,UAAAA,cAAc,EAAE1C,YAAY,CAACmC,SAAb,CAAuBO;AAFhC;AAFX;;AAOF,SAAK,sCAAL;AAAA,4BAaMgD,MAAM,CAACC,OAbb;AAAA,kDAEI7E,KAFJ;AAAA,UAE0B8E,kBAF1B,yBAEaC,WAFb;AAAA,UAE2DC,iBAF3D,yBAE8CC,WAF9C;AAAA,UAGgBC,eAHhB,mBAGIjD,UAHJ;AAAA,UAIIkD,WAJJ,mBAIIA,WAJJ;AAAA,UAKIC,QALJ,mBAKIA,QALJ;AAAA,UAMIC,MANJ,mBAMIA,MANJ;AAAA,UAOIC,GAPJ,mBAOIA,GAPJ;AAAA,UAQIjD,QARJ,mBAQIA,QARJ;AAAA,UASID,KATJ,mBASIA,KATJ;AAAA,UAUoBmD,mBAVpB,mBAUI3D,cAVJ;AAAA,UAWI4D,UAXJ,mBAWIA,UAXJ;AAAA,UAYIvE,cAZJ,mBAYIA,cAZJ;AAeE,UAAMwE,kBAAkB,GAAGvG,YAAY,CAACmC,SAAxC;AACA,UAAMqE,sBAAsB,GAAGD,kBAAkB,CAACnD,IAAlD;AAEA,UAAMqD,mBAAmB,GAAGhB,KAAK,CAACtD,SAAlC;AACA,UAAMuE,0BAA0B,GAAG1G,YAAY,CAACuE,iBAAhD;AACA,UAAMoC,mBAAmB,GAAGV,WAAW,KAAKnG,SAAS,CAAC8G,0BAAV,CAAqCC,MAAjF;AAEA,6CACKpB,KADL;AAEEtD,QAAAA,SAAS,gDACJsD,KAAK,CAACtD,SADF,GAEHwE,mBAAmB,GACnB;AACE7F,UAAAA,KAAK,EAAEgF,iBAAiB,IAAI,EAD9B;AAEEnD,UAAAA,UAAU,EAAE/C,GAAG,CAACoG,eAAD,EAAkB,eAAlB,EAAmC,CAAnC,CAFjB;AAGEpD,UAAAA,IAAI,EAAEhD,GAAG,CAACoG,eAAD,EAAkB,MAAlB,EAA0B,CAA1B,CAAH,GAAkC,CAH1C;AAIEnD,UAAAA,QAAQ,EAAEjD,GAAG,CAACoG,eAAD,EAAkB,MAAlB,EAA0BhG,YAAY,CAACmC,SAAb,CAAuBU,QAAjD,CAJf;AAKEG,UAAAA,SAAS,EAAEpD,GAAG,CAACoG,eAAD,EAAkB,YAAlB,EAAgC,CAAhC,CALhB;AAME9C,UAAAA,KAAK,EAAEA,KAAK,IAAI,EANlB;AAOEC,UAAAA,QAAQ,EAAEA;AAPZ,SADmB,GAUnB,EAZG;AAaPC,UAAAA,IAAI,kCACCqC,KAAK,CAACtD,SAAN,CAAgBiB,IADjB;AAEFC,YAAAA,EAAE,EAAE8C,MAAM,IAAIK,sBAAsB,CAACnD,EAFnC;AAGFC,YAAAA,SAAS,EAAE,SAAA1D,GAAG,CAACoG,eAAD,EAAkB,WAAlB,EAA+BQ,sBAAsB,CAAClD,SAAtD,CAAH,8CAAqEwD,WAArE,OAAsFV;AAH/F,YAbG;AAkBPnD,UAAAA,OAAO,EAAE0D,mBAAmB,GAAGF,mBAAmB,CAACxD,OAAvB,GAAiC2C,kBAAkB,GAAGA,kBAAH,GAAwB,EAlBhG;AAmBPM,UAAAA,QAAQ,EAAEA,QAAQ,IAAIK,kBAAkB,CAACL,QAnBlC;AAoBPxD,UAAAA,cAAc,EAAE,CAAA2D,mBAAmB,SAAnB,IAAAA,mBAAmB,WAAnB,YAAAA,mBAAmB,CAAEU,MAArB,IAA8BV,mBAA9B,GAAoDE,kBAAkB,CAAC7D,cApBhF;AAqBPX,UAAAA,cAAc,EAAEA,cArBT;AAsBPK,UAAAA,iBAAiB,EAAE,KAtBZ;AAuBPC,UAAAA,2BAA2B,EAAE;AAvBtB,UAFX;AA2BEjC,QAAAA,QAAQ,EAAE,EA3BZ;AA4BEmE,QAAAA,iBAAiB,EAAE+B,UAAU,GAAGI,0BAAH,GAAgC,EA5B/D;AA6BEzG,QAAAA,oBAAoB,EAAE,KA7BxB;AA8BEC,QAAAA,OAAO,EAAE;AA9BX;;AAiCF,SAAK,0CAAL;AACE,6CACKuF,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE,qBAAA4E,MAAM,CAACC,OAAP,sEAAgBqB,IAAhB,IAAuB,EAAvB,GAA4BvB,KAAK,CAACtD,SAAN,CAAgBrB,KAF5C;AAGPsB,UAAAA,iBAAiB,sBAAEsD,MAAM,CAACC,OAAT,qDAAE,iBAAgBqB;AAH5B;AAFX;;AAQF,SAAK,sCAAL;AACE,6CACKvB,KADL;AAEErF,QAAAA,QAAQ,EAAE,EAFZ;AAGEmE,QAAAA,iBAAiB,EAAE,EAHrB;AAIEpC,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE,qBAAA4E,MAAM,CAACC,OAAP,sEAAgBpD,IAAhB,MAAyB,QAAzB,GAAoCkD,KAAK,CAACtD,SAAN,CAAgBrB,KAApD,GAA4D,EAF5D;AAGPmC,UAAAA,OAAO,EAAE,qBAAAyC,MAAM,CAACC,OAAP,sEAAgBpD,IAAhB,MAAyB,QAAzB,GAAoC,EAApC,GAAyCkD,KAAK,CAACtD,SAAN,CAAgBc,OAH3D;AAIPb,UAAAA,iBAAiB,EAAE,KAJZ;AAKPC,UAAAA,2BAA2B,EAAE;AALtB,UAJX;AAWEnC,QAAAA,OAAO,EAAE;AAXX;;AAcF,SAAK,sCAAL;AACE,6CACKuF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAIF,SAAK,gCAAL;AACE,6CACKuF,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE4E,MAAM,CAACC,OAAP,KAAmB,QAAnB,GAA8BF,KAAK,CAACtD,SAAN,CAAgBrB,KAA9C,GAAsD,EAFtD;AAGPmC,UAAAA,OAAO,EAAEyC,MAAM,CAACC,OAAP,KAAmB,QAAnB,GAA8B,EAA9B,GAAmCF,KAAK,CAACtD,SAAN,CAAgBc;AAHrD;AAFX;;AAQF,SAAK,2CAAL;AACE,UAAMgE,kBAAkB,GAAGvB,MAAM,CAACC,OAAP,CAAe5C,UAAf,IAA6B,EAAxD;AACA,6CACK0C,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE4E,MAAM,CAACC,OAAP,CAAe7E,KAAf,IAAwB,EAFxB;AAGP6B,UAAAA,UAAU,EAAE/C,GAAG,CAACqH,kBAAD,EAAqB,eAArB,EAAsC,CAAtC,CAHR;AAIPrE,UAAAA,IAAI,EAAEhD,GAAG,CAACqH,kBAAD,EAAqB,MAArB,EAA6B,CAA7B,CAJF;AAKPpE,UAAAA,QAAQ,EAAEjD,GAAG,CAACqH,kBAAD,EAAqB,MAArB,EAA6BjH,YAAY,CAACmC,SAAb,CAAuBU,QAApD,CALN;AAMPG,UAAAA,SAAS,EAAEpD,GAAG,CAACqH,kBAAD,EAAqB,YAArB,EAAmC,CAAnC,CANP;AAOP1E,UAAAA,IAAI,EAAEmD,MAAM,CAACC,OAAP,CAAepD,IAPd;AAQPW,UAAAA,KAAK,EAAEtD,GAAG,CAACqH,kBAAD,EAAqB,OAArB,CAAH,IAAoC,EARpC;AASPhE,UAAAA,OAAO,EAAEyC,MAAM,CAACC,OAAP,CAAeuB,OAAf,IAA0BlH,YAAY,CAACmC,SAAb,CAAuBc,OATnD;AAUPG,UAAAA,IAAI,gDACCqC,KAAK,CAACtD,SAAN,CAAgBiB,IADjB,GAEE6D,kBAAkB,CAAC3D,SAAnB,IAAgC;AAAEA,YAAAA,SAAS,EAAE2D,kBAAkB,CAAC3D,SAAnB,CAA6BwD,WAA7B;AAAb,WAFlC,GAGEG,kBAAkB,CAACE,OAAnB,IAA8B;AAAE9D,YAAAA,EAAE,EAAE4D,kBAAkB,CAACE;AAAzB,WAHhC;AAVG,UAFX;AAkBEjH,QAAAA,OAAO,EAAE,KAlBX;AAmBEE,QAAAA,QAAQ,EAAE,EAnBZ;AAoBEmE,QAAAA,iBAAiB,EAAE,EApBrB;AAqBEtE,QAAAA,oBAAoB,EAAE;AArBxB;;AAwBF,SAAK,2CAAL;AACE,6CACKwF,KADL;AAEErF,QAAAA,QAAQ,EAAE,EAFZ;AAGEmE,QAAAA,iBAAiB,EAAE,EAHrB;AAIEpC,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE;AAFA,UAJX;AAQEZ,QAAAA,OAAO,EAAE;AARX;;AAWF,SAAK,4CAAL;AACE,UAAMkH,eAAe,GACnB,qBAAA1B,MAAM,CAACC,OAAP,sEAAgB0B,OAAhB,0BACA5B,KAAK,CAACtD,SADN,qDACA,iBAAiBrB,KAAjB,CAAuBwG,KAAvB,CAA6B,CAA7B,EAAgC,EAAhC,EAAoCC,GAApC,CAAwC,UAACC,IAAD,EAAU;AAChD,eAAOA,IAAP;AACD,OAFD,CADA,CADF;AAKA,6CACK/B,KADL;AAEErF,QAAAA,QAAQ,EAAE,EAFZ;AAGEmE,QAAAA,iBAAiB,EAAE,qBAAAmB,MAAM,CAACC,OAAP,sEAAgB0B,OAAhB,IAA0BD,eAA1B,GAA4C;AAHjE;;AAKF,SAAK,0CAAL;AACE,6CACK3B,KADL;AAEErF,QAAAA,QAAQ,EAAE,CAACqF,KAAK,CAACxF,oBAAP,GAA8B,CAACyF,MAAM,CAACC,OAAP,CAAe8B,YAAhB,CAA9B,GAA8D,EAF1E;AAGElD,QAAAA,iBAAiB,EAAE;AAHrB;;AAMF,SAAK,0CAAL;AACE,6CACKkB,KADL;AAEErF,QAAAA,QAAQ,EAAEsF,MAAM,CAACC,OAAP,IAAkB;AAF9B;;AAIF,SAAK,gDAAL;AACE,6CACKF,KADL;AAEElC,QAAAA,gBAAgB,EAAE,CAACmC,MAAM,CAACC,OAAP,CAAe+B,uBAAhB,GAA0C,EAA1C,GAA+ChC,MAAM,CAACC,OAAP,CAAeO;AAFlF;;AAKF,SAAK,gDAAL;AACE,6CACKT,KADL;AAEElC,QAAAA,gBAAgB,EAAEvD,YAAY,CAACuD,gBAFjC;AAGEnD,QAAAA,QAAQ,EAAE,EAHZ;AAIEmE,QAAAA,iBAAiB,EAAE,EAJrB;AAKEpC,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPrB,UAAAA,KAAK,EAAE,qBAAA4E,MAAM,CAACC,OAAP,sEAAgBpD,IAAhB,MAAyB,QAAzB,GAAoCkD,KAAK,CAACtD,SAAN,CAAgBrB,KAApD,GAA4D,EAF5D;AAGPmC,UAAAA,OAAO,EAAE,qBAAAyC,MAAM,CAACC,OAAP,sEAAgBpD,IAAhB,MAAyB,QAAzB,GAAoC,EAApC,GAAyCkD,KAAK,CAACtD,SAAN,CAAgBc;AAH3D,UALX;AAUE/C,QAAAA,OAAO,EAAE;AAVX;;AAaF,SAAK,yCAAL;AACE,6CACKuF,KADL;AAEElB,QAAAA,iBAAiB,EAAEmB,MAAM,CAACC,OAAP,IAAkB,EAFvC;AAGEvF,QAAAA,QAAQ,EAAEsF,MAAM,CAACC,OAAP,CAAeoB,MAAf,KAA0B,CAA1B,GAA8BrB,MAAM,CAACC,OAArC,GAA+C;AAH3D;;AAMF,SAAK,yCAAL;AACE,6CACKF,KADL;AAEErF,QAAAA,QAAQ,EAAE,EAFZ;AAGEmE,QAAAA,iBAAiB,EAAE;AAHrB;;AAMF,SAAK,qCAAL;AACE,6CACKkB,KADL;AAEEtD,QAAAA,SAAS,kCACJsD,KAAK,CAACtD,SADF;AAEPI,UAAAA,IAAI,EAAEmD,MAAM,CAACC;AAFN;AAFX;;AAOF,SAAK,uCAAL;AACE,6CACKF,KADL;AAEEpF,QAAAA,iBAAiB,EAAEqF,MAAM,CAACC;AAF5B;;AAIF,SAAK,8CAAL;AACE,6CACKF,KADL;AAEExF,QAAAA,oBAAoB,EAAEyF,MAAM,CAACC,OAF/B;AAGEvF,QAAAA,QAAQ,EAAE,EAHZ;AAIEmE,QAAAA,iBAAiB,EAAE;AAJrB;;AAMF,SAAK,wCAAL;AACE,6CACKkB,KADL;AAEErF,QAAAA,QAAQ,EAAEqF,KAAK,CAACxF,oBAAN,GACNwF,KAAK,CAACrF,QAAN,CAAe2G,MAAf,IAAyB,CAAzB,GACEtB,KAAK,CAACrF,QAAN,CAAe,CAAf,IACE,CAACqF,KAAK,CAACrF,QAAN,CAAe,CAAf,CAAD,CADF,GAEE,EAHJ,GAIE,EALI,GAMNqF,KAAK,CAACrF,QAAN,CAAe,CAAf,IACA,CAACqF,KAAK,CAACrF,QAAN,CAAe,CAAf,CAAD,CADA,GAEA,EAVN;AAWEH,QAAAA,oBAAoB,EAAE,CAACwF,KAAK,CAACxF;AAX/B;;AAaF,SAAK,0CAAL;AACE,6CACKwF,KADL;AAEErF,QAAAA,QAAQ,EAAEsF,MAAM,CAACC,OAAP,CAAeqB,IAAf,GACNvB,KAAK,CAACrF,QAAN,CAAe,CAAf,CADM,GAENqF,KAAK,CAACrF,QAAN,CAAe2G,MAAf,IAAyB,CAAzB,GACAtB,KAAK,CAACrF,QAAN,CAAe,CAAf,IACE,CAACqF,KAAK,CAACrF,QAAN,CAAe,CAAf,CAAD,CADF,GAEE,EAHF,GAIA,EARN;AASEH,QAAAA,oBAAoB,EAAEyF,MAAM,CAACC,OAAP,CAAeqB;AATvC;;AAYF,SAAK,uDAAL;AACE,6CACKvB,KADL;AAEEvF,QAAAA,OAAO,EAAE,IAFX;AAGEC,QAAAA,KAAK,EAAE;AAHT;;AAMF,SAAK,uDAAL;AACE,6CACKsF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETY,UAAAA,uBAAuB,EAAEwE,MAAM,CAAC8B;AAFvB,UAFb;AAMEtH,QAAAA,OAAO,EAAE,KANX;AAOEC,QAAAA,KAAK,EAAE;AAPT;;AAUF,SAAK,uDAAL;AACE,6CACKsF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETY,UAAAA,uBAAuB,EAAE;AAFhB,UAFb;AAMEhB,QAAAA,OAAO,EAAE,KANX;AAOEC,QAAAA,KAAK,EAAE,CAACuF,MAAM,CAACvF,KAAR;AAPT;;AAUF,SAAK,yBAAL;AACE,6CACKsF,KADL;AAEE/B,QAAAA,WAAW,kCACN+B,KAAK,CAAC/B,WADA;AAETxD,UAAAA,OAAO,EAAE;AAFA;AAFb;;AAQF,SAAK,yBAAL;AACE,6CACKuF,KADL;AAEE/B,QAAAA,WAAW,kCACN+B,KAAK,CAAC/B,WADA;AAET5C,UAAAA,KAAK,EAAE4E,MAAM,CAACC,OAFL;AAGTzF,UAAAA,OAAO,EAAE;AAHA;AAFb;;AASF,SAAK,uBAAL;AACE,6CACKuF,KADL;AAEEkC,QAAAA,kBAAkB,kCACblC,KAAK,CAACkC,kBADO,2BAEfjC,MAAM,CAACkC,IAFQ,EAED;AACb9G,UAAAA,KAAK,EAAE4E,MAAM,CAACC;AADD,SAFC;AAFpB;;AAUF,SAAK,2BAAL;AACE,6CACKF,KADL;AAEEnF,QAAAA,WAAW,oBACNN,YAAY,CAACM,WADP,CAFb;AAKE2B,QAAAA,cAAc,oBACTjC,YAAY,CAACiC,cADJ;AALhB;;AAUF,SAAK,2BAAL;AACE,6CACKwD,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETuH,UAAAA,SAAS,uBAAEnC,MAAM,CAACC,OAAT,sDAAE,kBAAgBmC,UAFlB;AAGTtH,UAAAA,YAAY,EAAEkF,MAAM,CAACC,OAAP,CAAerF,WAHpB;AAITG,UAAAA,gBAAgB,EAAEiF,MAAM,CAACC,OAAP,CAAeoC,UAJxB;AAKTrH,UAAAA,SAAS,EAAE;AACTC,YAAAA,YAAY,EAAE+E,MAAM,CAACC,OAAP,CAAeqC;AADpB,WALF;AAQTpH,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,aAAa,EAAE;AACbC,cAAAA,KAAK,EAAE2E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCC,aAArC,CAAmDC;AAD7C,aADG;AAIlBC,YAAAA,cAAc,EAAE;AACdD,cAAAA,KAAK,EAAE2E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCG,cAArC,CAAoDD;AAD7C,aAJE;AAOlBE,YAAAA,UAAU,EAAE;AACVF,cAAAA,KAAK,EAAE2E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UAArC,CAAgDF;AAD7C;AAPM,WARX;AAmBTG,UAAAA,OAAO,EAAEyE,MAAM,CAACC,OAAP,CAAe1E,OAnBf;AAoBTM,UAAAA,MAAM,EAAEmE,MAAM,CAACC,OAAP,CAAepE,MApBd;AAqBTC,UAAAA,MAAM,EAAEkE,MAAM,CAACC,OAAP,CAAesC,SArBd;AAsBTxG,UAAAA,SAAS,EAAEiE,MAAM,CAACC,OAAP,CAAeuC,YAtBjB;AAuBTxG,UAAAA,aAAa,EAAEgE,MAAM,CAACC,OAAP,CAAejE,aAvBrB;AAwBTC,UAAAA,mBAAmB,EAAE+D,MAAM,CAACC,OAAP,CAAehE,mBAxB3B;AAyBTP,UAAAA,oBAAoB,EAAE,EAzBb;AA0BT+G,UAAAA,0BAA0B,EAAE,EA1BnB;AA2BTvG,UAAAA,QAAQ,EAAE8D,MAAM,CAACC,OAAP,CAAe/D,QA3BhB;AA4BTC,UAAAA,KAAK,EAAE6D,MAAM,CAACC,OAAP,CAAe9D,KA5Bb;AA6BTtB,UAAAA,gBAAgB,EAAEmF,MAAM,CAACC,OAAP,CAAepF,gBA7BxB;AA8BTmE,UAAAA,OAAO,EAAEgB,MAAM,CAACC,OAAP,CAAejB,OA9Bf;AA+BT5C,UAAAA,QAAQ,EAAE4D,MAAM,CAACC,OAAP,CAAe7D,QA/BhB;AAgCTC,UAAAA,cAAc,EAAE2D,MAAM,CAACC,OAAP,CAAe5D,cAhCtB;AAiCTC,UAAAA,QAAQ,EAAE0D,MAAM,CAACC,OAAP,CAAeyC;AAjChB;AAFb;;AAuCF,SAAK,6CAAL;AACE,6CACK3C,KADL;AAEExD,QAAAA,cAAc,oBACTyD,MAAM,CAACC,OADE;AAFhB;;AAOF,SAAK,2CAAL;AACE,6CACKF,KADL;AAEExD,QAAAA,cAAc,oBACTjC,YAAY,CAACiC,cADJ;AAFhB;;AAOF,SAAK,iDAAL;AACE,6CACKwD,KADL;AAEEnF,QAAAA,WAAW,gDACNmF,KAAK,CAACnF,WADA,GAENmF,KAAK,CAACnF,WAAN,CAAkBa,kBAFZ;AAGTA,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,oBAAoB,EAAEsE,MAAM,CAACC,OAAP,CAAe0C,aADnB;AAElBhH,YAAAA,sBAAsB,EAAEqE,MAAM,CAACC,OAAP,CAAe2C,eAFrB;AAGlBhH,YAAAA,qBAAqB,EAAEoE,MAAM,CAACC,OAAP,CAAerE;AAHpB;AAHX;AAFb;;AAaF,SAAK,iDAAL;AACE,6CACKmE,KADL;AAEEnF,QAAAA,WAAW,gDACNmF,KAAK,CAACnF,WADA,GAENmF,KAAK,CAACnF,WAAN,CAAkBa,kBAFZ;AAGTA,UAAAA,kBAAkB,EAAE;AAClBC,YAAAA,oBAAoB,EAAE,EADJ;AAElBC,YAAAA,sBAAsB,EAAE;AAFN;AAHX;AAFb;;AAYF,SAAK,6BAAL;AACE,6CACKoE,KADL;AAEE9B,QAAAA,cAAc,EAAE;AACdC,UAAAA,sBAAsB,EAAE,KADV;AAEdC,UAAAA,SAAS,EAAE,KAFG;AAGdC,UAAAA,aAAa,EAAE;AAHD;AAFlB;;AASF,SAAK,yBAAL;AACE,6CACK2B,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,yBAAL;AACE,6CACKuF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDC,UAAAA,OAAO,EAAE0B,MAAM,CAACC;AAFf,UAFL;AAMEzF,QAAAA,OAAO,EAAE;AANX;;AASF,SAAK,iCAAL;AACE,6CACKuF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDI,UAAAA,SAAS,EAAEuB,MAAM,CAACC;AAFjB;AAFL;;AAQF,SAAK,6BAAL;AACE,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDE,UAAAA,UAAU,EAAEyB,MAAM,CAACC;AAFlB;AAFL;;AAQF,SAAK,2BAAL;AACE,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDG,UAAAA,YAAY,EAAEwB,MAAM,CAACC;AAFpB;AAFL;;AAQF,SAAK,gDAAL;AACE,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDK,UAAAA,MAAM,EAAEsB,MAAM,CAACC;AAFd;AAFL;;AAQF,SAAK,gDAAL;AACE,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDK,UAAAA,MAAM,EAAEsB,MAAM,CAACC,OAAP,CAAe7E;AAFtB;AAFL;;AAQF,SAAK,gDAAL;AACE,6CACK2E,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDK,UAAAA,MAAM,EAAE;AAFP;AAFL;;AAQF,SAAK,0CAAL;AACE,6CACKqB,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,0CAAL;AACE,6CACKuF,KADL;AAEEpB,QAAAA,cAAc,EAAEqB,MAAM,CAACC,OAFzB;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,wCAAL;AACE,6CACKuF,KADL;AAEEpB,QAAAA,cAAc,EAAE,EAFlB;AAGElE,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAHhB;;AAMF,SAAK,iDAAL;AACE,6CACKF,KADL;AAEEnB,QAAAA,cAAc,EAAEoB,MAAM,CAACC,OAFzB;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,+CAAL;AACE,6CACKuF,KADL;AAEEnB,QAAAA,cAAc,EAAEtE,YAAY,CAACsE,cAF/B;AAGEnE,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAHhB;;AAMF,SAAK,iCAAL;AACE,6CACKF,KADL;AAEEJ,QAAAA,kBAAkB,EAAEK,MAAM,CAACC;AAF7B;;AAKF,SAAK,kDAAL;AACE,6CACKF,KADL;AAEEjB,QAAAA,eAAe,EAAEkB,MAAM,CAACC,OAF1B;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,gDAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,0CAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,0CAAL;AACE,6CACKuF,KADL;AAEEhB,QAAAA,gBAAgB,EAAEiB,MAAM,CAACC,OAF3B;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,0CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,yCAAL;AACE,6CACKF,KADL;AAEEd,QAAAA,aAAa,EAAEe,MAAM,CAACC,OAAP,CAAehB,aAFhC;AAGED,QAAAA,OAAO,EAAEgB,MAAM,CAACC,OAAP,CAAejB,OAH1B;AAIEE,QAAAA,QAAQ,EAAEc,MAAM,CAACC,OAAP,CAAef,QAJ3B;AAKEC,QAAAA,YAAY,EAAEa,MAAM,CAACC,OAAP,CAAed,YAL/B;AAMEC,QAAAA,WAAW,EAAEY,MAAM,CAACC,OAAP,CAAe4C;AAN9B;;AAQF,SAAK,yCAAL;AACE,6CACK9C,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,0CAAL;AACE,UAAM6C,SAAS,gCAAO/C,KAAK,CAACnF,WAAN,CAAkBI,SAAlB,CAA4BC,YAAnC,IAAiD+E,MAAM,CAACC,OAAP,CAAe8C,YAAhE,EAAf;AACA,6CACKhD,KADL;AAEEnF,QAAAA,WAAW,gDACNmF,KAAK,CAACnF,WADA,GAENmF,KAAK,CAACnF,WAAN,CAAkBI,SAFZ;AAGTA,UAAAA,SAAS,EAAE;AACTC,YAAAA,YAAY,EAAE6H;AADL;AAHF;AAFb;;AAWF,SAAK,wCAAL;AACE,6CACK/C,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,gDAAL;AACE,6CACKF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBC,YAAAA,aAAa,oBACRb,YAAY,CAACM,WAAb,CAAyBM,kBAAzB,CAA4CC,aADpC;AAFG;AAFT;AAFb;;AAaF,SAAK,gDAAL;AACE,6CACK4E,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBC,YAAAA,aAAa,kCACR4E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCC,aAD7B;AAEXC,cAAAA,KAAK,EAAE4E,MAAM,CAACC,OAAP,CAAe7E;AAFX;AAFG;AAFT;AAFb;;AAcF,SAAK,gDAAL;AACE,6CACK2E,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBC,YAAAA,aAAa,oBACRb,YAAY,CAACM,WAAb,CAAyBM,kBAAzB,CAA4CC,aADpC;AAFG;AAFT;AAFb;;AAaF,SAAK,4CAAL;AACE,6CACK4E,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLhB,YAAY,CAACM,WAAb,CAAyBM,kBAAzB,CAA4CI,UADvC;AAFM;AAFT;AAFb;;AAaF,SAAK,4CAAL;AACE,6CACKyE,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,kCACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAERF,cAAAA,KAAK,EAAE4E,MAAM,CAACC,OAAP,CAAe7E;AAFd;AAFM;AAFT;AAFb;;AAcF,SAAK,4CAAL;AACE,6CACK2E,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAFM;AAFT;AAFb;;AAaF,SAAK,iDAAL;AACE,6CACKyE,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBG,YAAAA,cAAc,oBACT0E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCG,cAD5B;AAFE;AAFT;AAFb;;AAaF,SAAK,iDAAL;AACE,6CACK0E,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBG,YAAAA,cAAc,kCACT0E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCG,cAD5B;AAEZD,cAAAA,KAAK,EAAE4E,MAAM,CAACC,OAAP,CAAe7E;AAFV;AAFE;AAFT;AAFb;;AAcF,SAAK,iDAAL;AACE,6CACK2E,KADL;AAEEiD,QAAAA,WAAW,kCACNjD,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBG,YAAAA,cAAc,kCACT0E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCG,cAD5B;AAEZD,cAAAA,KAAK,EAAE;AAFK;AAFE;AAFT;AAFb;;AAcF,SAAK,kDAAL;AACE,6CACK2E,KADL;AAEEvD,QAAAA,eAAe,EAAEwD,MAAM,CAACC,OAAP,CAAezD;AAFlC;;AAKF,SAAK,kDAAL;AACE,6CACKuD,KADL;AAEEvD,QAAAA,eAAe,EAAElC,YAAY,CAACkC;AAFhC;;AAKF,SAAK,mDAAL;AACE,6CACKuD,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,mDAAL;AACE,6CACKuF,KADL;AAEEV,QAAAA,UAAU,EAAEW,MAAM,CAACC,OAFrB;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,iDAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,8CAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,8CAAL;AACE,6CACKuF,KADL;AAEET,QAAAA,eAAe,EAAEU,MAAM,CAACC,OAF1B;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,4CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,gDAAL;AACE,6CACKF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAFM;AAFT;AAFb;;AAYF,SAAK,gDAAL;AAAuD;AACrD,YAAM2H,eAAe,GAClB5I,KAAK,CAAC6I,OAAN,CAAcC,YAAd,CAA2BpD,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UAArC,CAAgDF,KAA3E,EAAkF,IAAlF,wBACI2E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UAArC,CAAgDF,KADpD,CAAD,IAGAd,YAAY,CAACM,WAAb,CAAyBM,kBAAzB,CAA4CI,UAA5C,CAAuDF,KAJzD;AAKA4E,QAAAA,MAAM,CAACC,OAAP,CAAe7E,KAAf,CAAqBgI,OAArB,CAA6B,UAACC,IAAD,EAAU;AACrC,cAAIA,IAAI,CAACC,aAAL,KAAuBlJ,SAAS,CAACmJ,cAArC,EAAqD;AACnDN,YAAAA,eAAe,CAACO,IAAhB,CAAqBH,IAArB;AACD;AACF,SAJD;AAMA,+CACKtD,KADL;AAEEvF,UAAAA,OAAO,EAAE,KAFX;AAGEI,UAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,YAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,cAAAA,UAAU,kCACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAERF,gBAAAA,KAAK,qBAAM6H,eAAN;AAFG;AAFM;AAFT;AAHb;AAcD;;AACD,SAAK,gDAAL;AACE,6CACKlD,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC,OAFhB;AAGErF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAFM;AAFT;AAHb;;AAcF,SAAK,0DAAL;AACE,6CACKyE,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAFM;AAFT;AAFb;;AAYF,SAAK,0DAAL;AACE,6CACKyE,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,kCACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAERF,cAAAA,KAAK,EAAE2E,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UAArC,CAAgDF,KAAhD,CAAsD+F,MAAtD,CACL,UAACkC,IAAD;AAAA,uBAAUA,IAAI,CAACI,uBAAL,KAAiCzD,MAAM,CAACC,OAAlD;AAAA,eADK;AAFC;AAFM;AAFT;AAFb;;AAeF,SAAK,0DAAL;AACE,6CACKF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETM,UAAAA,kBAAkB,kCACb6E,KAAK,CAACnF,WAAN,CAAkBM,kBADL;AAEhBI,YAAAA,UAAU,oBACLyE,KAAK,CAACnF,WAAN,CAAkBM,kBAAlB,CAAqCI,UADhC;AAFM;AAFT;AAFb;;AAYF,SAAK,+CAAL;AACE,6CACKyE,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,+CAAL;AACE,6CACKuF,KADL;AAEER,QAAAA,gBAAgB,EAAES,MAAM,CAACC,OAF3B;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,6CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAIF,SAAK,mDAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,mDAAL;AACE,6CACKuF,KADL;AAEEP,QAAAA,wBAAwB,EAAEQ,MAAM,CAACC,OAFnC;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,iDAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,iDAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,iDAAL;AACE,6CACKuF,KADL;AAEEN,QAAAA,sBAAsB,EAAEO,MAAM,CAACC,OAFjC;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,+CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,iDAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,iDAAL;AACE,6CACKuF,KADL;AAEEL,QAAAA,sBAAsB,EAAEM,MAAM,CAACC,OAFjC;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,+CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,4CAAL;AACE,UAAMyD,cAAc,gCAAO3D,KAAK,CAAC1B,GAAN,CAAUC,OAAjB,IAA0B0B,MAAM,CAACC,OAAjC,EAApB;AACA,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDC,UAAAA,OAAO,EAAEoF;AAFR;AAFL;;AAQF,SAAK,0CAAL;AACE,6CACK3D,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,4CAAL;AACE,UAAM0D,cAAc,gCAAO5D,KAAK,CAAC1B,GAAN,CAAUC,OAAjB,IAA0B0B,MAAM,CAACC,OAAjC,EAApB;AACA,6CACKF,KADL;AAEE1B,QAAAA,GAAG,kCACE0B,KAAK,CAAC1B,GADR;AAEDC,UAAAA,OAAO,EAAEqF;AAFR;AAFL;;AAQF,SAAK,0CAAL;AACE,6CACK5D,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF,SAAK,wDAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,wDAAL;AACE,6CACKuF,KADL;AAEEH,QAAAA,4BAA4B,EAAEI,MAAM,CAACC,OAFvC;AAGEzF,QAAAA,OAAO,EAAE;AAHX;;AAMF,SAAK,sDAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAIF,SAAK,+CAAL;AACE,6CACKF,KADL;AAEEvF,QAAAA,OAAO,EAAE;AAFX;;AAKF,SAAK,+CAAL;AACE,6CACKuF,KADL;AAEEnF,QAAAA,WAAW,kCACNmF,KAAK,CAACnF,WADA;AAETiF,UAAAA,gBAAgB,EAAEG,MAAM,CAACC;AAFhB,UAFb;AAMEzF,QAAAA,OAAO,EAAE;AANX;;AASF,SAAK,6CAAL;AACE,6CACKuF,KADL;AAEEtF,QAAAA,KAAK,EAAEuF,MAAM,CAACC;AAFhB;;AAKF;AACE,aAAOF,KAAP;AAlhCJ;AAohCD,CArhCD;;AAuhCA,eAAeD,yBAAf","sourcesContent":["import get from 'lodash/get';\r\n\r\n// app\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\nimport * as utils from 'utils';\r\n\r\nconst initialState = {\r\n  isMultiSelectEnabled: false,\r\n  loading: false,\r\n  error: [],\r\n  selected: [],\r\n  isCaseTableHidden: false,\r\n  caseDetails: {\r\n    frontEndSendDocs: false,\r\n    caseTeamData: {},\r\n    caseStageDetails: [],\r\n    caseNotes: {\r\n      notesHistory: [],\r\n    },\r\n    caseIssueDocuments: {\r\n      nonBureauList: {\r\n        items: [],\r\n      },\r\n      caseClientList: {\r\n        items: [],\r\n      },\r\n      bureauList: {\r\n        items: [],\r\n      },\r\n    },\r\n    openRfi: false,\r\n    checkSigningCaseHistory: [],\r\n    caseHistoryDetails: {\r\n      rejectDetailsHistory: {},\r\n      resubmitDetailsHistory: [],\r\n      qualityControlHistory: [],\r\n    },\r\n    caseId: null,\r\n    taskId: '',\r\n    processId: '',\r\n    instructionId: '',\r\n    instructionStatusId: '',\r\n    policyId: '',\r\n    fecId: '',\r\n    taskView: '',\r\n    isCheckSigning: false,\r\n    fecEmail: '',\r\n  },\r\n  caseRfiDetails: {},\r\n  emailSentStatus: false,\r\n  casesList: {\r\n    isTaskGridLoading: true,\r\n    isTaskGridDataFetchingError: false,\r\n    selectedTaskType: '',\r\n    type: constants.WORKLIST,\r\n    items: [],\r\n    isloadingFilters: false,\r\n    appliedFilters: [],\r\n    itemsTotal: 0,\r\n    page: 1,\r\n    pageSize: config.ui.pagination.default,\r\n    pageTotal: 0,\r\n    filters: {},\r\n    query: '',\r\n    searchBy: '',\r\n    isCheckSigning: false,\r\n    sort: {\r\n      by: 'caseCreatedOn',\r\n      type: 'lexical',\r\n      direction: 'desc',\r\n    },\r\n  },\r\n  caseTaskViewType: '',\r\n  assignedTo: {\r\n    assigning: false,\r\n  },\r\n  technicians: {\r\n    items: [],\r\n    loading: false,\r\n  },\r\n  issueDocuments: {\r\n    documentFromLondonTeam: true,\r\n    nonBureau: true,\r\n    bureauInsurer: true,\r\n  },\r\n  rfi: {\r\n    history: [],\r\n    queryCodes: [],\r\n    responseDate: '',\r\n    saveDraft: [],\r\n    newRFI: [],\r\n  },\r\n  caseTeamModule: {},\r\n  caseRfiSubTabs: [],\r\n  multiSelectedRows: [],\r\n  assignedToUsers: [],\r\n  postAssignToUser: {},\r\n  bpmFlag: [],\r\n  bordereauType: [],\r\n  bpmStage: [],\r\n  facilityType: [],\r\n  departments: [],\r\n  rejectCase: {},\r\n  rejectCloseCase: {},\r\n  checkSigningCase: {},\r\n  checkSigningCompleteCase: {},\r\n  checkSigningCancelCase: {},\r\n  checkSigningRejectCase: {},\r\n  rfiResolutionCodes: [],\r\n  checkSigningRejectCreateCase: {},\r\n  bureauRfiDetails: {},\r\n};\r\n\r\nconst premiumProcessingReducers = (state = initialState, action) => {\r\n  switch (action.type) {\r\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n        },\r\n        loading: true,\r\n      };\r\n    case 'PREMIUM_PROCESSING_CHECKSIGNING_TOGGLE':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          isCheckSigning: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_TASK_TYPE_SELECTED':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          selectedTaskType: action.payload,\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_TASK_SEARCH_RESET':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          query: initialState.casesList.query,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_TASK_FILTERS_RESET':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          appliedFilters: initialState.casesList.appliedFilters,\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_TASKS_GET_SUCCESS':\r\n      const {\r\n        items: { filterValue: tasksFiltersValues, searchValue: tasksSearchValues },\r\n        pagination: tasksPagination,\r\n        requestType,\r\n        taskType,\r\n        sortBy,\r\n        dir,\r\n        searchBy,\r\n        query,\r\n        appliedFilters: tasksAppliedFilters,\r\n        navigation,\r\n        isCheckSigning,\r\n      } = action.payload;\r\n\r\n      const initTaskProcessing = initialState.casesList;\r\n      const initTaskProcessingSort = initTaskProcessing.sort;\r\n\r\n      const stateTaskProcessing = state.casesList;\r\n      const prevTaskProcessingSelected = initialState.multiSelectedRows;\r\n      const isNonfilterTypeCall = requestType !== constants.CLAIM_PROCESSING_REQ_TYPES.filter;\r\n\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          ...(isNonfilterTypeCall\r\n            ? {\r\n                items: tasksSearchValues || [],\r\n                itemsTotal: get(tasksPagination, 'totalElements', 0),\r\n                page: get(tasksPagination, 'page', 0) + 1,\r\n                pageSize: get(tasksPagination, 'size', initialState.casesList.pageSize),\r\n                pageTotal: get(tasksPagination, 'totalPages', 0),\r\n                query: query || '',\r\n                searchBy: searchBy,\r\n              }\r\n            : {}),\r\n          sort: {\r\n            ...state.casesList.sort,\r\n            by: sortBy || initTaskProcessingSort.by,\r\n            direction: get(tasksPagination, 'direction', initTaskProcessingSort.direction)?.toLowerCase() || dir,\r\n          },\r\n          filters: isNonfilterTypeCall ? stateTaskProcessing.filters : tasksFiltersValues ? tasksFiltersValues : {},\r\n          taskType: taskType || initTaskProcessing.taskType,\r\n          appliedFilters: tasksAppliedFilters?.length ? tasksAppliedFilters : initTaskProcessing.appliedFilters,\r\n          isCheckSigning: isCheckSigning,\r\n          isTaskGridLoading: false,\r\n          isTaskGridDataFetchingError: false,\r\n        },\r\n        selected: [],\r\n        multiSelectedRows: navigation ? prevTaskProcessingSelected : [],\r\n        isMultiSelectEnabled: false,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PORCESSING_SET_TASK_GRID_LOADING':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: action.payload?.flag ? [] : state.casesList.items,\r\n          isTaskGridLoading: action.payload?.flag,\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_TASKS_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: action.payload?.type === 'filter' ? state.casesList.items : [],\r\n          filters: action.payload?.type === 'filter' ? {} : state.casesList.filters,\r\n          isTaskGridLoading: false,\r\n          isTaskGridDataFetchingError: true,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_TASKS_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n    case 'PREMIUM_PROCESSING_TASKS_RESET':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: action.payload === 'filter' ? state.casesList.items : [],\r\n          filters: action.payload === 'filter' ? {} : state.casesList.filters,\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_SUCCESS':\r\n      const caseListPagination = action.payload.pagination || {};\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: action.payload.items || [],\r\n          itemsTotal: get(caseListPagination, 'totalElements', 0),\r\n          page: get(caseListPagination, 'page', 1),\r\n          pageSize: get(caseListPagination, 'size', initialState.casesList.pageSize),\r\n          pageTotal: get(caseListPagination, 'totalPages', 0),\r\n          type: action.payload.type,\r\n          query: get(caseListPagination, 'query') || '',\r\n          filters: action.payload.fitlers || initialState.casesList.filters,\r\n          sort: {\r\n            ...state.casesList.sort,\r\n            ...(caseListPagination.direction && { direction: caseListPagination.direction.toLowerCase() }),\r\n            ...(caseListPagination.orderBy && { by: caseListPagination.orderBy }),\r\n          },\r\n        },\r\n        loading: false,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n        isMultiSelectEnabled: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASES_LIST_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: [],\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_DESELECT':\r\n      const selectedRecords =\r\n        action.payload?.checked &&\r\n        state.casesList?.items.slice(0, 10).map((data) => {\r\n          return data;\r\n        });\r\n      return {\r\n        ...state,\r\n        selected: [],\r\n        multiSelectedRows: action.payload?.checked ? selectedRecords : [],\r\n      };\r\n    case 'PREMIUM_PROCESSING_SINGLE_CASES_SELECTED':\r\n      return {\r\n        ...state,\r\n        selected: !state.isMultiSelectEnabled ? [action.payload.selectedCase] : [],\r\n        multiSelectedRows: [],\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_UPDATE':\r\n      return {\r\n        ...state,\r\n        selected: action.payload || [],\r\n      };\r\n    case 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseTaskViewType: !action.payload.isCaseIdForLoggedInUser ? '' : action.payload.taskType,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_TASK_CASE_VIEW_TYPE_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseTaskViewType: initialState.caseTaskViewType,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n        casesList: {\r\n          ...state.casesList,\r\n          items: action.payload?.type === 'filter' ? state.casesList.items : [],\r\n          filters: action.payload?.type === 'filter' ? {} : state.casesList.filters,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_MULTI_SELECTED_CASES':\r\n      return {\r\n        ...state,\r\n        multiSelectedRows: action.payload || [],\r\n        selected: action.payload.length === 1 ? action.payload : [],\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASES_SELECTED_RESET':\r\n      return {\r\n        ...state,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_TYPE_CHANGE':\r\n      return {\r\n        ...state,\r\n        casesList: {\r\n          ...state.casesList,\r\n          type: action.payload,\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_SET_IS_TABLEHIDDEN':\r\n      return {\r\n        ...state,\r\n        isCaseTableHidden: action.payload,\r\n      };\r\n    case 'PREMIUM_PROCESSING_CASES_MULTI_SELECT_TOGGLE':\r\n      return {\r\n        ...state,\r\n        isMultiSelectEnabled: action.payload,\r\n        selected: [],\r\n        multiSelectedRows: [],\r\n      };\r\n    case 'PREMIUM_PROCESSING_CASES_CHOOSE_TOGGLE':\r\n      return {\r\n        ...state,\r\n        selected: state.isMultiSelectEnabled\r\n          ? state.selected.length >= 1\r\n            ? state.selected[0]\r\n              ? [state.selected[0]]\r\n              : []\r\n            : []\r\n          : state.selected[0]\r\n          ? [state.selected[0]]\r\n          : [],\r\n        isMultiSelectEnabled: !state.isMultiSelectEnabled,\r\n      };\r\n    case 'PREMIUM_PROCESSING_SET_MULTI_SELECT_FLAG':\r\n      return {\r\n        ...state,\r\n        selected: action.payload.flag\r\n          ? state.selected[0]\r\n          : state.selected.length >= 1\r\n          ? state.selected[0]\r\n            ? [state.selected[0]]\r\n            : []\r\n          : [],\r\n        isMultiSelectEnabled: action.payload.flag,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n        error: [],\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          checkSigningCaseHistory: action.data,\r\n        },\r\n        loading: false,\r\n        error: null,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_HISTORY_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          checkSigningCaseHistory: [],\r\n        },\r\n        loading: false,\r\n        error: [action.error],\r\n      };\r\n\r\n    case 'TECHNICIANS_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        technicians: {\r\n          ...state.technicians,\r\n          loading: true,\r\n        },\r\n      };\r\n\r\n    case 'TECHNICIANS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        technicians: {\r\n          ...state.technicians,\r\n          items: action.payload,\r\n          loading: false,\r\n        },\r\n      };\r\n\r\n    case 'CASE_STATUSES_BY_DAYS':\r\n      return {\r\n        ...state,\r\n        caseProgressByType: {\r\n          ...state.caseProgressByType,\r\n          [action.days]: {\r\n            items: action.payload,\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'CASE_TEAM_DETAILS_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...initialState.caseDetails,\r\n        },\r\n        caseRfiDetails: {\r\n          ...initialState.caseRfiDetails,\r\n        },\r\n      };\r\n\r\n    case 'CASE_TEAM_DETAILS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          policyRef: action.payload?.processRef,\r\n          caseTeamData: action.payload.caseDetails,\r\n          caseStageDetails: action.payload.caseStages,\r\n          caseNotes: {\r\n            notesHistory: action.payload.notes,\r\n          },\r\n          caseIssueDocuments: {\r\n            nonBureauList: {\r\n              items: state.caseDetails.caseIssueDocuments.nonBureauList.items,\r\n            },\r\n            caseClientList: {\r\n              items: state.caseDetails.caseIssueDocuments.caseClientList.items,\r\n            },\r\n            bureauList: {\r\n              items: state.caseDetails.caseIssueDocuments.bureauList.items,\r\n            },\r\n          },\r\n          openRfi: action.payload.openRfi,\r\n          caseId: action.payload.caseId,\r\n          taskId: action.payload.bpmTaskId,\r\n          processId: action.payload.bpmProcessId,\r\n          instructionId: action.payload.instructionId,\r\n          instructionStatusId: action.payload.instructionStatusId,\r\n          rejectDetailsHistory: {},\r\n          resubmissionDetailsHistory: [],\r\n          policyId: action.payload.policyId,\r\n          fecId: action.payload.fecId,\r\n          frontEndSendDocs: action.payload.frontEndSendDocs,\r\n          bpmFlag: action.payload.bpmFlag,\r\n          taskView: action.payload.taskView,\r\n          isCheckSigning: action.payload.isCheckSigning,\r\n          fecEmail: action.payload.frontEndContactEmail,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_RFI_DETAILS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseRfiDetails: {\r\n          ...action.payload,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_RFI_DETAILS_ERROR':\r\n      return {\r\n        ...state,\r\n        caseRfiDetails: {\r\n          ...initialState.caseRfiDetails,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_HISTORY_DETAILS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          ...state.caseDetails.caseHistoryDetails,\r\n          caseHistoryDetails: {\r\n            rejectDetailsHistory: action.payload.rejectHistory,\r\n            resubmitDetailsHistory: action.payload.resubmitHistory,\r\n            qualityControlHistory: action.payload.qualityControlHistory,\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_HISTORY_DETAILS_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          ...state.caseDetails.caseHistoryDetails,\r\n          caseHistoryDetails: {\r\n            rejectDetailsHistory: {},\r\n            resubmitDetailsHistory: [],\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'ISSUE_DOCUMENTS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        issueDocuments: {\r\n          documentFromLondonTeam: false,\r\n          nonBureau: false,\r\n          bureauInsurer: true,\r\n        },\r\n      };\r\n\r\n    case 'RFI_HISTORY_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'RFI_HISTORY_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          history: action.payload,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_NEW_RFI_DATA':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          saveDraft: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'RFI_QUERY_CODES_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          queryCodes: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'RFI_RESPONSE_DATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          responseDate: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_REQUEST':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          newRFI: action.payload,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          newRFI: action.payload.items,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_SUBMIT_NEW_RFI_POST_FAILURE':\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          newRFI: [],\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseTeamModule: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_TEAM_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        caseTeamModule: {},\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_RFI_GET_SUBTABS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseRfiSubTabs: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_RFI_GET_SUBTABS_ERROR':\r\n      return {\r\n        ...state,\r\n        caseRfiSubTabs: initialState.caseRfiSubTabs,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'RFI_RESOLUTION_CODE_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rfiResolutionCodes: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        assignedToUsers: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_ASSIGNED_TO_USERS_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_SUCCESS':\r\n      return {\r\n        ...state,\r\n        postAssignToUser: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_ASSIGNTO_USER_FAILURE':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_FILTERS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        bordereauType: action.payload.bordereauType,\r\n        bpmFlag: action.payload.bpmFlag,\r\n        bpmStage: action.payload.bpmStage,\r\n        facilityType: action.payload.facilityType,\r\n        departments: action.payload.department,\r\n      };\r\n    case 'PREMIUM_PROCESSING_CASE_FILTERS_FAILURE':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_SAVE_NOTE_GET_SUCCESS':\r\n      const notesData = [...state.caseDetails.caseNotes.notesHistory, action.payload.notesDetails];\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          ...state.caseDetails.caseNotes,\r\n          caseNotes: {\r\n            notesHistory: notesData,\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_SAVE_NOTE_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            nonBureauList: {\r\n              ...initialState.caseDetails.caseIssueDocuments.nonBureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            nonBureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.nonBureauList,\r\n              items: action.payload.items,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_NON_BUREAU_LIST_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            nonBureauList: {\r\n              ...initialState.caseDetails.caseIssueDocuments.nonBureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...initialState.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n              items: action.payload.items,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_LIST_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_REQUEST':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            caseClientList: {\r\n              ...state.caseDetails.caseIssueDocuments.caseClientList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            caseClientList: {\r\n              ...state.caseDetails.caseIssueDocuments.caseClientList,\r\n              items: action.payload.items,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CASE_CLIENT_LIST_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDeatils: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            caseClientList: {\r\n              ...state.caseDetails.caseIssueDocuments.caseClientList,\r\n              items: [],\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_EMAIL_SENT_STATUS_GET_SUCCESS':\r\n      return {\r\n        ...state,\r\n        emailSentStatus: action.payload.emailSentStatus,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_EMAIL_SENT_STATUS_GET_FAILURE':\r\n      return {\r\n        ...state,\r\n        emailSentStatus: initialState.emailSentStatus,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rejectCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CASE_INITIATION_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        rejectCloseCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_REJECT_CLOSE_CASE_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_REQUEST':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_SUCCESS': {\r\n      const bureauListItems =\r\n        (utils.generic.isValidArray(state.caseDetails.caseIssueDocuments.bureauList.items, true) && [\r\n          ...state.caseDetails.caseIssueDocuments.bureauList.items,\r\n        ]) ||\r\n        initialState.caseDetails.caseIssueDocuments.bureauList.items;\r\n      action.payload.items.forEach((item) => {\r\n        if (item.issueDocsType === constants.BUREAU_RFITYPE) {\r\n          bureauListItems.push(item);\r\n        }\r\n      });\r\n\r\n      return {\r\n        ...state,\r\n        loading: false,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n              items: [...bureauListItems],\r\n            },\r\n          },\r\n        },\r\n      };\r\n    }\r\n    case 'PREMIUM_PROCESSING_BUREAU_DETAILS_POST_FAILURE':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_REQUEST':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n              items: state.caseDetails.caseIssueDocuments.bureauList.items.filter(\r\n                (item) => item.caseIncidentIssueDocsId !== action.payload\r\n              ),\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_BUREAU_INSURER_DETAILS_DELETE_FAILURE':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          caseIssueDocuments: {\r\n            ...state.caseDetails.caseIssueDocuments,\r\n            bureauList: {\r\n              ...state.caseDetails.caseIssueDocuments.bureauList,\r\n            },\r\n          },\r\n        },\r\n      };\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        checkSigningCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CASE_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        checkSigningCompleteCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_COMPLETE_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_SUCCESS':\r\n      return {\r\n        ...state,\r\n        checkSigningCancelCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_CANCEL_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_SUCCESS':\r\n      return {\r\n        ...state,\r\n        checkSigningRejectCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_RESPOND_RFI_GET_SUCCESS':\r\n      const respondRFIData = [...state.rfi.history, action.payload];\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          history: respondRFIData,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_RESPOND_RFI_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_RESOLVE_RFI_GET_SUCCESS':\r\n      const resolveRFIData = [...state.rfi.history, action.payload];\r\n      return {\r\n        ...state,\r\n        rfi: {\r\n          ...state.rfi,\r\n          history: resolveRFIData,\r\n        },\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_RESOLVE_RFI_GET_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_SUCCESS':\r\n      return {\r\n        ...state,\r\n        checkSigningRejectCreateCase: action.payload,\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_CHECK_SIGNING_REJECT_CREATE_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_REQUEST':\r\n      return {\r\n        ...state,\r\n        loading: true,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_SUCCESS':\r\n      return {\r\n        ...state,\r\n        caseDetails: {\r\n          ...state.caseDetails,\r\n          bureauRfiDetails: action.payload,\r\n        },\r\n        loading: false,\r\n      };\r\n\r\n    case 'PREMIUM_PROCESSING_BUREAU_RFI_DETAILS_ERROR':\r\n      return {\r\n        ...state,\r\n        error: action.payload,\r\n      };\r\n\r\n    default:\r\n      return state;\r\n  }\r\n};\r\n\r\nexport default premiumProcessingReducers;\r\n"]},"metadata":{},"sourceType":"module"}