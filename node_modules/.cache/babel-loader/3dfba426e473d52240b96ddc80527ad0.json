{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _classCallCheck from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/classCallCheck\";\nimport _createClass from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createClass\";\nimport _assertThisInitialized from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/assertThisInitialized\";\nimport _inherits from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/inherits\";\nimport _createSuper from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/createSuper\";\nimport _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\components\\\\MapBox\\\\MapBox.js\";\nimport React, { Component } from 'react';\nimport PropTypes from 'prop-types';\nimport { compose } from 'redux';\nimport classnames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport isEmpty from 'lodash/isEmpty';\nimport sortBy from 'lodash/sortBy';\nimport ReactDOM from 'react-dom'; // mapbox\n\nimport mapboxgl from 'mapbox-gl';\nimport 'mapbox-gl/dist/mapbox-gl.css';\nimport './mapBox.css'; // app\n\nimport styles from './MapBox.styles';\nimport { MapBoxOverlay, MapBoxTooltipPortal, Chart, ChartKey, Loader, ChartZoomLevel } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport { KEYCODE } from 'consts'; // mui\n\nimport { withStyles, Fade } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nexport var MapBox = /*#__PURE__*/function (_Component) {\n  _inherits(MapBox, _Component);\n\n  var _super = _createSuper(MapBox);\n\n  function MapBox(props) {\n    var _this;\n\n    _classCallCheck(this, MapBox);\n\n    _this = _super.call(this, props);\n\n    _defineProperty(_assertThisInitialized(_this), \"getBounds\", function (locations) {\n      var bounds = new mapboxgl.LngLatBounds();\n      var boundingBox = locations.reduce(function (acc, l) {\n        var lngLat;\n\n        try {\n          lngLat = new mapboxgl.LngLat(l.lng, l.lat);\n        } catch (_unused) {\n          console.error('MapBox: invalid lngLat provided', {\n            id: l.id,\n            lat: l.lat,\n            lng: l.lng\n          });\n        }\n\n        return lngLat && lngLat.lng && lngLat.lat ? bounds.extend([lngLat.lng, lngLat.lat]) : acc;\n      }, {});\n      return !isEmpty(boundingBox) ? boundingBox : config.mapbox.location.country.boundingBox.US;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"getLocations\", function (locations, locationsFiltered) {\n      var locs = utils.generic.isValidArray(locations, true) ? locations : [];\n      var locsFiltered = utils.generic.isValidArray(locationsFiltered, true) ? locationsFiltered : [];\n      var locsReturned = locsFiltered.length > 0 ? locsFiltered : locs;\n      return locsReturned.filter(function (l) {\n        return l.lat && l.lng && l.locationsFound > 0;\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapAddPopup\", function (marker) {\n      var popup = new mapboxgl.Popup({\n        offset: 40\n      }).setLngLat([marker.location.lng, marker.location.lat]).setDOMContent(_this.tooltipElem).addTo(_this.map);\n\n      _this.setState({\n        popups: [popup]\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapRemovePopups\", function () {\n      _this.state.popups.forEach(function (popup) {\n        if (utils.generic.isFunction(popup.remove)) {\n          popup.remove();\n        }\n      });\n\n      _this.setState({\n        popups: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"createDoughnutChart\", function (_ref) {\n      var location = _ref.location;\n      var level = _this.state.level;\n      var _this$props = _this.props,\n          doughnutSizes = _this$props.doughnutSizes,\n          levelOverride = _this$props.levelOverride;\n      var _location$properties = location.properties,\n          properties = _location$properties === void 0 ? {} : _location$properties;\n      var _properties$data = properties.data,\n          data = _properties$data === void 0 ? [] : _properties$data,\n          _properties$backgroun = properties.backgroundColor,\n          backgroundColor = _properties$backgroun === void 0 ? [] : _properties$backgroun;\n      return /*#__PURE__*/_jsxDEV(Chart, {\n        type: \"doughnut\",\n        data: {\n          datasets: [{\n            borderWidth: 1,\n            data: data,\n            backgroundColor: backgroundColor\n          }]\n        },\n        options: config.ui.chart.doughnut,\n        width: doughnutSizes[levelOverride || level],\n        height: doughnutSizes[levelOverride || level]\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 396,\n        columnNumber: 7\n      }, _assertThisInitialized(_this));\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"setDoughnutMarkers\", function (locations, markers) {\n      if (!locations) return;\n      var markersArray = [];\n      utils.map.parseLocations(locations).forEach(function (location) {\n        var tooltipContainer = document.createElement('div');\n        var ChartComponent = _this.createDoughnutChart;\n        ReactDOM.render( /*#__PURE__*/_jsxDEV(ChartComponent, {\n          location: location\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 422,\n          columnNumber: 23\n        }, _assertThisInitialized(_this)), tooltipContainer);\n        var marker = new mapboxgl.Marker(tooltipContainer).setLngLat([location.lng, location.lat]);\n        var markerExists = markers.find(function (m) {\n          return isEqual(m.getLngLat(), marker.getLngLat());\n        });\n        if (markerExists) return; // adding original location object (id, lat, lng, etc...) to the marker\n\n        marker.location = location;\n\n        try {\n          marker.addTo(_this.map);\n        } catch (_unused2) {}\n\n        markersArray.push(marker);\n      });\n      return markersArray;\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapAddMarkers\", function (locations, markers) {\n      var _this$props2 = _this.props,\n          onChange = _this$props2.onChange,\n          markerType = _this$props2.markerType,\n          doughnutSizes = _this$props2.doughnutSizes,\n          levels = _this$props2.levels,\n          levelOverride = _this$props2.levelOverride;\n      var newLevel = utils.map.getLevelByZoom(levels, Math.round(_this.map.getZoom()));\n\n      var newBoundingBox = _this.map.getBounds();\n\n      _this.setState({\n        level: newLevel\n      });\n\n      var filteredLocations = locations.filter(function (location) {\n        return newBoundingBox.contains(new mapboxgl.LngLat(location.lng, location.lat));\n      });\n      var showDoughnutMarkers = markerType === config.mapbox.markerType.doughnut && Object.keys(doughnutSizes).includes(levelOverride || newLevel);\n      var newMarkers = showDoughnutMarkers ? _this.setDoughnutMarkers(filteredLocations, markers) : utils.map.setMarkers(_this.map, filteredLocations, markers); // saving the marker instances to state to keep access to MapBox remove() method\n\n      _this.setState({\n        markers: [].concat(_toConsumableArray(markers), _toConsumableArray(newMarkers))\n      }, function () {\n        if (utils.generic.isFunction(onChange)) {\n          onChange(_this.state.markers);\n        }\n      });\n\n      _this.mapParseMarkers(newMarkers);\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapRemoveMarkers\", function () {\n      _this.state.markers.forEach(function (marker) {\n        if (utils.generic.isFunction(marker.remove)) {\n          marker.remove();\n        }\n      });\n\n      _this.setState({\n        markers: []\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapParseMarkers\", function (markers) {\n      markers.forEach(function (marker) {\n        marker._element.addEventListener('click', _this.mapClickMarker(marker));\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapClickMarker\", function (marker) {\n      return function (event) {\n        var _this$props3 = _this.props,\n            onClickMarker = _this$props3.onClickMarker,\n            tooltipComponent = _this$props3.tooltipComponent; // prevent marker click from bubbling up to the map (which closes popup meant to be opened)\n\n        event.stopPropagation();\n\n        _this.mapRemovePopups();\n\n        var markers = _this.map.getContainer().querySelectorAll('.mapboxgl-marker');\n\n        var location = marker.location || {};\n        markers.forEach(function (el) {\n          el.classList.remove('active');\n        });\n        marker.getElement().classList.add('active'); // update the tooltip state\n        // after the update, fetch the re-rendered content from the React Portal\n\n        if (tooltipComponent) {\n          _this.setState({\n            tooltip: location\n          }, function () {\n            if (_this.tooltipElem) {\n              _this.mapAddPopup(marker);\n            }\n          });\n        }\n\n        if (utils.generic.isFunction(onClickMarker)) {\n          onClickMarker(marker.location);\n        }\n\n        if (_this.props.allowMarkerClickZoom) {\n          _this.map.flyTo({\n            center: marker._lngLat,\n            zoom: Math.max(_this.map.getZoom(), _this.props.markerMaxZoom)\n          });\n        }\n      };\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapToggleLayer\", function (layerGroupKey) {\n      var layers = _objectSpread({}, _this.state.layers);\n\n      var layerGroup = layers[layerGroupKey];\n      var _utils$map$visibility = utils.map.visibility,\n          visible = _utils$map$visibility.visible,\n          none = _utils$map$visibility.none;\n      layerGroup.visibility = layerGroup.visibility === visible ? none : visible;\n      layerGroup.config.forEach(function (c) {\n        _this.map.setLayoutProperty(c.id, 'visibility', layerGroup.visibility);\n      });\n\n      _this.setState({\n        layers: layers\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapToggleFullScreen\", function () {\n      _this.setState({\n        fullscreen: !_this.state.fullscreen\n      }, function () {\n        if (_this.map && utils.generic.isFunction(_this.map.resize)) {\n          _this.map.resize();\n        }\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"mapToggleSatellite\", function () {\n      _this.setState({\n        showSatelliteView: !_this.state.showSatelliteView\n      }, function () {\n        _this.map.setStyle(_this.state.showSatelliteView ? config.mapbox.styles.satellite : config.mapbox.styles.street);\n      });\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"handleEscape\", function (event) {\n      if (event.keyCode === KEYCODE.Escape) {\n        event.preventDefault();\n\n        if (_this.state.fullscreen) {\n          _this.setState({\n            fullscreen: false\n          }, function () {\n            if (_this.map && utils.generic.isFunction(_this.map.resize)) {\n              _this.map.resize();\n            }\n          });\n        }\n      }\n    });\n\n    _defineProperty(_assertThisInitialized(_this), \"levelLoaderComponent\", function () {\n      if (!_this.map) return null;\n      var isLoading = _this.props.isLoading;\n      return /*#__PURE__*/_jsxDEV(Loader, {\n        visible: isLoading,\n        label: utils.string.t('app.loading_locations'),\n        absolute: true\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 570,\n        columnNumber: 12\n      }, _assertThisInitialized(_this));\n    });\n\n    mapboxgl.accessToken = config.mapbox.token;\n\n    var mapLocations = _this.getLocations(props.locations, props.locationsFiltered);\n\n    if (props.tooltipComponent) {\n      _this.tooltipElem = document.createElement('div');\n    }\n\n    _this.state = {\n      ready: false,\n      fullscreen: false,\n      showSatelliteView: false,\n      layers: Object.assign({}, props.layers),\n      markers: [],\n      popups: [],\n      tooltip: {},\n      tooltipContainerId: \"root-mapbox-tooltip-\".concat(props.id),\n      defaultInstanceObject: _objectSpread(_objectSpread({\n        container: \"map-\".concat(props.id),\n        center: props.center,\n        zoom: props.zoom,\n        minZoom: props.minZoom,\n        maxZoom: props.maxZoom,\n        pitch: props.pitch,\n        style: config.mapbox.styles.street\n      }, props.fitBounds && {\n        bounds: _this.getBounds(mapLocations)\n      }), props.fitBounds && {\n        fitBoundsOptions: props.fitBoundsOptions\n      })\n    };\n    return _this;\n  }\n\n  _createClass(MapBox, [{\n    key: \"componentWillMount\",\n    value: function componentWillMount() {\n      if (this.props.tooltipComponent) {\n        var tooltipContainer = document.createElement('div');\n        tooltipContainer.id = this.state.tooltipContainerId;\n        document.body.appendChild(tooltipContainer);\n      }\n    }\n  }, {\n    key: \"componentDidMount\",\n    value: function componentDidMount() {\n      var _this2 = this;\n\n      var _this$state = this.state,\n          layers = _this$state.layers,\n          defaultInstanceObject = _this$state.defaultInstanceObject;\n      var _this$props4 = this.props,\n          allowScrollZoom = _this$props4.allowScrollZoom,\n          showMarkers = _this$props4.showMarkers,\n          locations = _this$props4.locations,\n          locationsFiltered = _this$props4.locationsFiltered,\n          instanceObject = _this$props4.instanceObject,\n          onLoad = _this$props4.onLoad,\n          onChange = _this$props4.onChange; // get current list of locations\n\n      var mapLocations = this.getLocations(locations, locationsFiltered); // instantiate mapbox\n\n      this.map = new mapboxgl.Map(Object.assign({}, defaultInstanceObject, instanceObject)); // setup map onLoad\n\n      this.map.on('load', function () {\n        var markers = _this2.state.markers;\n        var levels = _this2.props.levels;\n        var level = utils.map.getLevelByZoom(levels, Math.round(_this2.map.getZoom()));\n\n        if (!allowScrollZoom) {\n          _this2.map.scrollZoom.disable();\n        }\n\n        _this2.map.addControl(new mapboxgl.NavigationControl(), 'bottom-left');\n\n        if (showMarkers && mapLocations.length > 0) {\n          _this2.mapAddMarkers(mapLocations, []);\n        }\n\n        utils.map.addDefaultSources(_this2.map);\n        utils.map.addDefaultLayers(_this2.map, layers); // run additional code specific to the parent component (ex: add clusters layers/sources)\n\n        if (utils.generic.isFunction(onLoad)) {\n          onLoad(_this2.map, {\n            markers: markers,\n            level: level\n          });\n        }\n\n        _this2.setState({\n          ready: true,\n          boundingBox: _this2.map.getBounds().toArray().flat()\n        });\n\n        document.addEventListener('keydown', _this2.handleEscape);\n      }); // Add layers/sources when changing the style\n\n      this.map.on('style.load', function () {\n        var _this2$state = _this2.state,\n            markers = _this2$state.markers,\n            ready = _this2$state.ready;\n        if (!ready) return;\n\n        _this2.mapRemovePopups();\n\n        if (utils.generic.isFunction(onChange)) {\n          utils.map.addDefaultSources(_this2.map);\n          utils.map.addDefaultLayers(_this2.map, layers);\n          onChange(markers);\n        }\n      });\n      this.map.on('zoomend', function () {\n        var _this2$state2 = _this2.state,\n            ready = _this2$state2.ready,\n            level = _this2$state2.level,\n            markers = _this2$state2.markers;\n        var _this2$props = _this2.props,\n            onLevelChange = _this2$props.onLevelChange,\n            levels = _this2$props.levels,\n            locations = _this2$props.locations,\n            locationsFiltered = _this2$props.locationsFiltered,\n            levelOverride = _this2$props.levelOverride;\n        if (!ready) return;\n        if (!utils.generic.isFunction(onLevelChange)) return;\n        var newLevel = utils.map.getLevelByZoom(levels, Math.round(_this2.map.getZoom()));\n\n        if (level === newLevel || levelOverride) {\n          _this2.mapAddMarkers(_this2.getLocations(locations, locationsFiltered), markers);\n        }\n\n        if (level !== newLevel) {\n          onLevelChange({\n            level: newLevel\n          });\n        }\n      });\n      this.map.on('dragend', function () {\n        var _this2$state3 = _this2.state,\n            ready = _this2$state3.ready,\n            boundingBox = _this2$state3.boundingBox,\n            markers = _this2$state3.markers;\n        var _this2$props2 = _this2.props,\n            locations = _this2$props2.locations,\n            locationsFiltered = _this2$props2.locationsFiltered,\n            showMarkers = _this2$props2.showMarkers;\n        if (!ready || !showMarkers) return;\n\n        var newBoundingBox = _this2.map.getBounds().toArray().flat();\n\n        if (boundingBox && !isEqual(boundingBox, newBoundingBox)) {\n          _this2.setState({\n            boundingBox: newBoundingBox\n          });\n\n          _this2.mapAddMarkers(_this2.getLocations(locations, locationsFiltered), markers);\n        }\n      });\n    }\n  }, {\n    key: \"componentWillUnmount\",\n    value: function componentWillUnmount() {\n      // remove all markers\n      this.mapRemoveMarkers(); // remove MapBox map instance\n\n      if (utils.generic.isFunction(this.map && this.map.remove)) {\n        this.map.remove();\n      } // remove all DOM nodes used for HTML tooltip\n\n\n      if (this.props.tooltipComponent) {\n        var tooltipContainer = document.getElementById(this.state.tooltipContainerId);\n        var tooltipNode = this.tooltipElem;\n        var tooltipParent = this.tooltipElem.parentNode;\n\n        if (tooltipNode && tooltipParent) {\n          tooltipParent.removeChild(tooltipNode);\n        }\n\n        if (tooltipContainer) {\n          tooltipContainer.remove();\n        }\n      }\n\n      document.removeEventListener('keydown', this.handleEscape);\n    }\n  }, {\n    key: \"componentDidUpdate\",\n    value: function componentDidUpdate(prevProps) {\n      var _this$state2 = this.state,\n          markers = _this$state2.markers,\n          ready = _this$state2.ready;\n      var _this$props5 = this.props,\n          locations = _this$props5.locations,\n          locationsFiltered = _this$props5.locationsFiltered,\n          activeMarkers = _this$props5.activeMarkers,\n          allowScrollZoom = _this$props5.allowScrollZoom,\n          showMarkers = _this$props5.showMarkers,\n          center = _this$props5.center,\n          zoom = _this$props5.zoom,\n          fitBounds = _this$props5.fitBounds,\n          fitBoundsOptions = _this$props5.fitBoundsOptions,\n          onChange = _this$props5.onChange,\n          reCenter = _this$props5.reCenter;\n      var mapLocations = sortBy(this.getLocations(locations, locationsFiltered), ['id']);\n      var mapPrevLocations = sortBy(this.getLocations(prevProps.locations, prevProps.locationsFiltered), ['id']);\n      var isNewLocations = !isEqual(mapPrevLocations.map(function (l) {\n        return l && l.id;\n      }), mapLocations.map(function (l) {\n        return l && l.id;\n      }));\n      var isUpdatedLocations = !isEqual(mapPrevLocations, mapLocations);\n      var isUpdatedActiveMarkers = !isEqual(prevProps.activeMarkers, activeMarkers);\n      var isNewPropsShowMarkers = !isEqual(prevProps.showMarkers, showMarkers);\n      var isNewPropsFitBounds = !isEqual(prevProps.fitBounds, fitBounds);\n      var isNewPropsAllowScroll = !isEqual(prevProps.allowScrollZoom, allowScrollZoom);\n\n      if (isNewPropsAllowScroll) {\n        if (allowScrollZoom) {\n          this.map.scrollZoom.enable();\n        } else {\n          this.map.scrollZoom.disable();\n        }\n      } // whenever anything changes in the locations (ex: new/removed locations or any property has changed)\n      // reset the markers\n\n\n      if (isUpdatedLocations || isNewPropsShowMarkers || isNewPropsFitBounds) {\n        this.mapRemovePopups();\n        this.mapRemoveMarkers();\n\n        if (showMarkers) {\n          this.mapAddMarkers(mapLocations, []);\n        } // if locations have been added or removed\n\n\n        if (isNewLocations) {\n          // executed onChange callback (ex: to add clusters sources/layers)\n          if (ready && utils.generic.isValidArray(mapLocations, true) && utils.generic.isFunction(onChange)) {\n            onChange(markers);\n          }\n        } // re-center the map on the new/updated array of markers\n\n\n        if (fitBounds) {\n          this.map.fitBounds(this.getBounds(mapLocations), fitBoundsOptions);\n        } else {\n          if (!reCenter) return;\n          this.map.flyTo({\n            center: center,\n            zoom: zoom\n          });\n        }\n      } // if active marker(s) was updated\n\n\n      if (isUpdatedActiveMarkers && showMarkers) {\n        markers.forEach(function (marker) {\n          marker.getElement().classList.toggle('active', activeMarkers.includes(marker.location.id));\n        });\n      }\n\n      if (prevProps.center !== center || prevProps.zoom !== zoom) {\n        var newCenter = prevProps.center !== center ? center : prevProps.center;\n        var newZoom = prevProps.zoom !== zoom ? zoom : prevProps.zoom;\n        this.map.flyTo(_objectSpread(_objectSpread({}, prevProps.zoom !== zoom && {\n          zoom: newZoom\n        }), prevProps.center !== center && {\n          center: newCenter\n        }));\n      }\n    }\n  }, {\n    key: \"render\",\n    value: function render() {\n      var _classesMapContainer, _classesMap;\n\n      var _this$state3 = this.state,\n          layers = _this$state3.layers,\n          tooltip = _this$state3.tooltip,\n          ready = _this$state3.ready,\n          fullscreen = _this$state3.fullscreen,\n          tooltipContainerId = _this$state3.tooltipContainerId,\n          showSatelliteView = _this$state3.showSatelliteView;\n      var _this$props6 = this.props,\n          id = _this$props6.id,\n          height = _this$props6.height,\n          allowFullscreen = _this$props6.allowFullscreen,\n          overflow = _this$props6.overflow,\n          placementOverflow = _this$props6.placementOverflow,\n          responsive = _this$props6.responsive,\n          buttons = _this$props6.buttons,\n          header = _this$props6.header,\n          locations = _this$props6.locations,\n          tooltipComponent = _this$props6.tooltipComponent,\n          overlay = _this$props6.overlay,\n          classes = _this$props6.classes,\n          allowSatelliteView = _this$props6.allowSatelliteView,\n          mapKey = _this$props6.mapKey,\n          onLevelChange = _this$props6.onLevelChange,\n          nestedClasses = _this$props6.nestedClasses,\n          levels = _this$props6.levels,\n          levelOverride = _this$props6.levelOverride;\n      var isOverlayVisible = overlay && overlay.visible;\n      var classesMapContainer = (_classesMapContainer = {}, _defineProperty(_classesMapContainer, classes.root, !fullscreen), _defineProperty(_classesMapContainer, classes.overflow, !fullscreen && overflow), _defineProperty(_classesMapContainer, classes.placementOverflow, !fullscreen && placementOverflow), _defineProperty(_classesMapContainer, classes.responsive, !fullscreen && responsive), _defineProperty(_classesMapContainer, classes.fullScreen, fullscreen), _classesMapContainer);\n      var classesMap = (_classesMap = {}, _defineProperty(_classesMap, classes.map, true), _defineProperty(_classesMap, nestedClasses.map, Boolean(nestedClasses.map)), _defineProperty(_classesMap, classes.mapOverflow, overflow), _defineProperty(_classesMap, classes.mapOverlay, isOverlayVisible), _classesMap);\n\n      if (this.map) {\n        this.map.resize();\n      }\n\n      var LevelLoaderComponent = this.levelLoaderComponent;\n      var TooltipComponent = tooltipComponent;\n      return /*#__PURE__*/_jsxDEV(Fade, {\n        \"in\": ready,\n        children: /*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(classesMapContainer),\n          children: [/*#__PURE__*/_jsxDEV(MapBoxOverlay, {\n            locations: locations,\n            layers: layers,\n            overflow: overflow,\n            fullscreen: allowFullscreen ? fullscreen : false,\n            buttons: buttons,\n            header: header,\n            showSatelliteView: showSatelliteView,\n            handleToggleSatellite: allowSatelliteView ? this.mapToggleSatellite : undefined,\n            handleToggleLayer: this.mapToggleLayer,\n            handleToggleFullScreen: allowFullscreen ? this.mapToggleFullScreen : undefined\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 623,\n            columnNumber: 11\n          }, this), mapKey && /*#__PURE__*/_jsxDEV(ChartKey, _objectSpread({}, mapKey), void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 636,\n            columnNumber: 22\n          }, this), this.map && utils.generic.isFunction(onLevelChange) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(ChartZoomLevel, {\n              disabled: locations.length === 0,\n              onLevelChange: onLevelChange,\n              levels: levels,\n              level: utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom())),\n              levelOverride: levelOverride\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 640,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(LevelLoaderComponent, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 647,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true), tooltipComponent && /*#__PURE__*/_jsxDEV(MapBoxTooltipPortal, {\n            id: tooltipContainerId,\n            elem: this.tooltipElem,\n            children: !isEmpty(tooltip) && /*#__PURE__*/_jsxDEV(TooltipComponent, {\n              tooltip: tooltip\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 653,\n              columnNumber: 37\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 652,\n            columnNumber: 13\n          }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n            id: \"map-\".concat(id),\n            style: {\n              height: fullscreen ? null : height\n            },\n            className: classnames('map', 'mapboxgl-map', classnames(classesMap)),\n            children: isOverlayVisible && /*#__PURE__*/_jsxDEV(\"div\", {\n              className: classes.overlay,\n              children: overlay.text\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 662,\n              columnNumber: 34\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 657,\n            columnNumber: 11\n          }, this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 622,\n          columnNumber: 9\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 621,\n        columnNumber: 7\n      }, this);\n    }\n  }]);\n\n  return MapBox;\n}(Component);\nMapBox.displayName = \"MapBox\";\n\n_defineProperty(MapBox, \"propTypes\", {\n  id: PropTypes.string.isRequired,\n  locations: PropTypes.array,\n  locationsFiltered: PropTypes.array,\n  buttons: PropTypes.array,\n  levels: PropTypes.array,\n  levelOverride: PropTypes.string,\n  doughnutSizes: PropTypes.object,\n  layers: PropTypes.object,\n  height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\n  overflow: PropTypes.bool,\n  placementOverflow: PropTypes.bool,\n  responsive: PropTypes.bool,\n  allowScrollZoom: PropTypes.bool,\n  allowFullscreen: PropTypes.bool,\n  allowSatelliteView: PropTypes.bool,\n  allowMarkerClickZoom: PropTypes.bool,\n  isLoading: PropTypes.bool,\n  activeMarkers: PropTypes.array,\n  showMarkers: PropTypes.bool,\n  markerType: PropTypes.string,\n  markerMaxZoom: PropTypes.number,\n  fitBounds: PropTypes.bool,\n  fitBoundsOptions: PropTypes.object,\n  center: PropTypes.arrayOf(PropTypes.number),\n  zoom: PropTypes.number,\n  minZoom: PropTypes.number,\n  maxZoom: PropTypes.number,\n  pitch: PropTypes.number,\n  overlay: PropTypes.object,\n  instanceObject: PropTypes.object,\n  tooltipComponent: PropTypes.func,\n  onLoad: PropTypes.func,\n  onLevelChange: PropTypes.func,\n  onChange: PropTypes.func,\n  onClickMarker: PropTypes.func,\n  reCenter: PropTypes.bool,\n  mapKey: PropTypes.shape({\n    items: PropTypes.arrayOf(PropTypes.shape({\n      color: PropTypes.string,\n      avatarText: PropTypes.string,\n      checked: PropTypes.bool,\n      id: PropTypes.string,\n      label: PropTypes.string\n    })).isRequired,\n    allowCollapse: PropTypes.bool,\n    title: PropTypes.string,\n    nestedClasses: PropTypes.object,\n    handleToggle: PropTypes.func,\n    colorMode: PropTypes.oneOf(['light', 'dark'])\n  })\n});\n\n_defineProperty(MapBox, \"defaultProps\", {\n  nestedClasses: {},\n  height: config.mapbox.height,\n  center: config.mapbox.location.country.center.US,\n  levels: config.mapbox.levels,\n  reCenter: true,\n  doughnutSizes: config.mapbox.doughnutSizes,\n  markerType: config.mapbox.markerType[\"default\"],\n  zoom: config.mapbox.zoom,\n  minZoom: config.mapbox.minZoom,\n  maxZoom: config.mapbox.maxZoom,\n  pitch: config.mapbox.pitch,\n  allowScrollZoom: true,\n  isLoading: false,\n  allowFullscreen: true,\n  allowMarkerClickZoom: true,\n  allowSatelliteView: true,\n  activeMarkers: [],\n  showMarkers: true,\n  markerMaxZoom: config.mapbox.marker.maxZoom,\n  fitBoundsOptions: config.mapbox.fitBoundsOptions\n});\n\nMapBox.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [{\n    \"name\": \"getBounds\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"locations\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"getLocations\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"locations\",\n      \"type\": null\n    }, {\n      \"name\": \"locationsFiltered\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapAddPopup\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"marker\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapRemovePopups\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"createDoughnutChart\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"{ location }\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"setDoughnutMarkers\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"locations\",\n      \"type\": null\n    }, {\n      \"name\": \"markers\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapAddMarkers\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"locations\",\n      \"type\": null\n    }, {\n      \"name\": \"markers\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapRemoveMarkers\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"mapParseMarkers\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"markers\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapClickMarker\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"marker\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapToggleLayer\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"layerGroupKey\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"mapToggleFullScreen\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"mapToggleSatellite\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }, {\n    \"name\": \"handleEscape\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [{\n      \"name\": \"event\",\n      \"type\": null\n    }],\n    \"returns\": null\n  }, {\n    \"name\": \"levelLoaderComponent\",\n    \"docblock\": null,\n    \"modifiers\": [],\n    \"params\": [],\n    \"returns\": null\n  }],\n  \"displayName\": \"MapBox\",\n  \"props\": {\n    \"nestedClasses\": {\n      \"defaultValue\": {\n        \"value\": \"{}\",\n        \"computed\": false\n      },\n      \"required\": false\n    },\n    \"height\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.height\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"union\",\n        \"value\": [{\n          \"name\": \"string\"\n        }, {\n          \"name\": \"number\"\n        }]\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"center\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.location.country.center.US\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"arrayOf\",\n        \"value\": {\n          \"name\": \"number\"\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"levels\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.levels\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"reCenter\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"doughnutSizes\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.doughnutSizes\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"markerType\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.markerType.default\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"zoom\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.zoom\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"minZoom\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.minZoom\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"maxZoom\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.maxZoom\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"pitch\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.pitch\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowScrollZoom\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"isLoading\": {\n      \"defaultValue\": {\n        \"value\": \"false\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowFullscreen\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowMarkerClickZoom\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"allowSatelliteView\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"activeMarkers\": {\n      \"defaultValue\": {\n        \"value\": \"[]\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"showMarkers\": {\n      \"defaultValue\": {\n        \"value\": \"true\",\n        \"computed\": false\n      },\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"markerMaxZoom\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.marker.maxZoom\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"number\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fitBoundsOptions\": {\n      \"defaultValue\": {\n        \"value\": \"config.mapbox.fitBoundsOptions\",\n        \"computed\": true\n      },\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"id\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"locations\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"locationsFiltered\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"buttons\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"levelOverride\": {\n      \"type\": {\n        \"name\": \"string\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"layers\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"overflow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"placementOverflow\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"responsive\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"fitBounds\": {\n      \"type\": {\n        \"name\": \"bool\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"overlay\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"instanceObject\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"tooltipComponent\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onLoad\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onLevelChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onChange\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"onClickMarker\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": false,\n      \"description\": \"\"\n    },\n    \"mapKey\": {\n      \"type\": {\n        \"name\": \"shape\",\n        \"value\": {\n          \"items\": {\n            \"name\": \"arrayOf\",\n            \"value\": {\n              \"name\": \"shape\",\n              \"value\": {\n                \"color\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                },\n                \"avatarText\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                },\n                \"checked\": {\n                  \"name\": \"bool\",\n                  \"required\": false\n                },\n                \"id\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                },\n                \"label\": {\n                  \"name\": \"string\",\n                  \"required\": false\n                }\n              }\n            },\n            \"required\": true\n          },\n          \"allowCollapse\": {\n            \"name\": \"bool\",\n            \"required\": false\n          },\n          \"title\": {\n            \"name\": \"string\",\n            \"required\": false\n          },\n          \"nestedClasses\": {\n            \"name\": \"object\",\n            \"required\": false\n          },\n          \"handleToggle\": {\n            \"name\": \"func\",\n            \"required\": false\n          },\n          \"colorMode\": {\n            \"name\": \"enum\",\n            \"value\": [{\n              \"value\": \"'light'\",\n              \"computed\": false\n            }, {\n              \"value\": \"'dark'\",\n              \"computed\": false\n            }],\n            \"required\": false\n          }\n        }\n      },\n      \"required\": false,\n      \"description\": \"\"\n    }\n  }\n};\nexport default compose(withStyles(styles))(MapBox);\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\components\\\\MapBox\\\\MapBox.js\"] = {\n    name: \"MapBox\",\n    docgenInfo: MapBox.__docgenInfo,\n    path: \"src\\\\components\\\\MapBox\\\\MapBox.js\"\n  };\n}","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/components/MapBox/MapBox.js"],"names":["React","Component","PropTypes","compose","classnames","isEqual","isEmpty","sortBy","ReactDOM","mapboxgl","styles","MapBoxOverlay","MapBoxTooltipPortal","Chart","ChartKey","Loader","ChartZoomLevel","utils","config","KEYCODE","withStyles","Fade","MapBox","props","locations","bounds","LngLatBounds","boundingBox","reduce","acc","l","lngLat","LngLat","lng","lat","console","error","id","extend","mapbox","location","country","US","locationsFiltered","locs","generic","isValidArray","locsFiltered","locsReturned","length","filter","locationsFound","marker","popup","Popup","offset","setLngLat","setDOMContent","tooltipElem","addTo","map","setState","popups","state","forEach","isFunction","remove","level","doughnutSizes","levelOverride","properties","data","backgroundColor","datasets","borderWidth","ui","chart","doughnut","markers","markersArray","parseLocations","tooltipContainer","document","createElement","ChartComponent","createDoughnutChart","render","Marker","markerExists","find","m","getLngLat","push","onChange","markerType","levels","newLevel","getLevelByZoom","Math","round","getZoom","newBoundingBox","getBounds","filteredLocations","contains","showDoughnutMarkers","Object","keys","includes","newMarkers","setDoughnutMarkers","setMarkers","mapParseMarkers","_element","addEventListener","mapClickMarker","event","onClickMarker","tooltipComponent","stopPropagation","mapRemovePopups","getContainer","querySelectorAll","el","classList","getElement","add","tooltip","mapAddPopup","allowMarkerClickZoom","flyTo","center","_lngLat","zoom","max","markerMaxZoom","layerGroupKey","layers","layerGroup","visibility","visible","none","c","setLayoutProperty","fullscreen","resize","showSatelliteView","setStyle","satellite","street","keyCode","Escape","preventDefault","isLoading","string","t","accessToken","token","mapLocations","getLocations","ready","assign","tooltipContainerId","defaultInstanceObject","container","minZoom","maxZoom","pitch","style","fitBounds","fitBoundsOptions","body","appendChild","allowScrollZoom","showMarkers","instanceObject","onLoad","Map","on","scrollZoom","disable","addControl","NavigationControl","mapAddMarkers","addDefaultSources","addDefaultLayers","toArray","flat","handleEscape","onLevelChange","mapRemoveMarkers","getElementById","tooltipNode","tooltipParent","parentNode","removeChild","removeEventListener","prevProps","activeMarkers","reCenter","mapPrevLocations","isNewLocations","isUpdatedLocations","isUpdatedActiveMarkers","isNewPropsShowMarkers","isNewPropsFitBounds","isNewPropsAllowScroll","enable","toggle","newCenter","newZoom","height","allowFullscreen","overflow","placementOverflow","responsive","buttons","header","overlay","classes","allowSatelliteView","mapKey","nestedClasses","isOverlayVisible","classesMapContainer","root","fullScreen","classesMap","Boolean","mapOverflow","mapOverlay","LevelLoaderComponent","levelLoaderComponent","TooltipComponent","mapToggleSatellite","undefined","mapToggleLayer","mapToggleFullScreen","text","isRequired","array","object","oneOfType","number","bool","arrayOf","func","shape","items","color","avatarText","checked","label","allowCollapse","title","handleToggle","colorMode","oneOf"],"mappings":"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","sourcesContent":["import React, { Component } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { compose } from 'redux';\r\nimport classnames from 'classnames';\r\nimport isEqual from 'lodash/isEqual';\r\nimport isEmpty from 'lodash/isEmpty';\r\nimport sortBy from 'lodash/sortBy';\r\nimport ReactDOM from 'react-dom';\r\n\r\n// mapbox\r\nimport mapboxgl from 'mapbox-gl';\r\nimport 'mapbox-gl/dist/mapbox-gl.css';\r\nimport './mapBox.css';\r\n\r\n// app\r\nimport styles from './MapBox.styles';\r\nimport { MapBoxOverlay, MapBoxTooltipPortal, Chart, ChartKey, Loader, ChartZoomLevel } from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport { KEYCODE } from 'consts';\r\n\r\n// mui\r\nimport { withStyles, Fade } from '@material-ui/core';\r\n\r\nexport class MapBox extends Component {\r\n  static propTypes = {\r\n    id: PropTypes.string.isRequired,\r\n    locations: PropTypes.array,\r\n    locationsFiltered: PropTypes.array,\r\n    buttons: PropTypes.array,\r\n    levels: PropTypes.array,\r\n    levelOverride: PropTypes.string,\r\n    doughnutSizes: PropTypes.object,\r\n    layers: PropTypes.object,\r\n    height: PropTypes.oneOfType([PropTypes.string, PropTypes.number]),\r\n    overflow: PropTypes.bool,\r\n    placementOverflow: PropTypes.bool,\r\n    responsive: PropTypes.bool,\r\n    allowScrollZoom: PropTypes.bool,\r\n    allowFullscreen: PropTypes.bool,\r\n    allowSatelliteView: PropTypes.bool,\r\n    allowMarkerClickZoom: PropTypes.bool,\r\n    isLoading: PropTypes.bool,\r\n    activeMarkers: PropTypes.array,\r\n    showMarkers: PropTypes.bool,\r\n    markerType: PropTypes.string,\r\n    markerMaxZoom: PropTypes.number,\r\n    fitBounds: PropTypes.bool,\r\n    fitBoundsOptions: PropTypes.object,\r\n    center: PropTypes.arrayOf(PropTypes.number),\r\n    zoom: PropTypes.number,\r\n    minZoom: PropTypes.number,\r\n    maxZoom: PropTypes.number,\r\n    pitch: PropTypes.number,\r\n    overlay: PropTypes.object,\r\n    instanceObject: PropTypes.object,\r\n    tooltipComponent: PropTypes.func,\r\n    onLoad: PropTypes.func,\r\n    onLevelChange: PropTypes.func,\r\n    onChange: PropTypes.func,\r\n    onClickMarker: PropTypes.func,\r\n    reCenter: PropTypes.bool,\r\n    mapKey: PropTypes.shape({\r\n      items: PropTypes.arrayOf(\r\n        PropTypes.shape({\r\n          color: PropTypes.string,\r\n          avatarText: PropTypes.string,\r\n          checked: PropTypes.bool,\r\n          id: PropTypes.string,\r\n          label: PropTypes.string,\r\n        })\r\n      ).isRequired,\r\n      allowCollapse: PropTypes.bool,\r\n      title: PropTypes.string,\r\n      nestedClasses: PropTypes.object,\r\n      handleToggle: PropTypes.func,\r\n      colorMode: PropTypes.oneOf(['light', 'dark']),\r\n    }),\r\n  };\r\n\r\n  static defaultProps = {\r\n    nestedClasses: {},\r\n    height: config.mapbox.height,\r\n    center: config.mapbox.location.country.center.US,\r\n    levels: config.mapbox.levels,\r\n    reCenter: true,\r\n    doughnutSizes: config.mapbox.doughnutSizes,\r\n    markerType: config.mapbox.markerType.default,\r\n    zoom: config.mapbox.zoom,\r\n    minZoom: config.mapbox.minZoom,\r\n    maxZoom: config.mapbox.maxZoom,\r\n    pitch: config.mapbox.pitch,\r\n    allowScrollZoom: true,\r\n    isLoading: false,\r\n    allowFullscreen: true,\r\n    allowMarkerClickZoom: true,\r\n    allowSatelliteView: true,\r\n    activeMarkers: [],\r\n    showMarkers: true,\r\n    markerMaxZoom: config.mapbox.marker.maxZoom,\r\n    fitBoundsOptions: config.mapbox.fitBoundsOptions,\r\n  };\r\n\r\n  constructor(props) {\r\n    super(props);\r\n    mapboxgl.accessToken = config.mapbox.token;\r\n\r\n    const mapLocations = this.getLocations(props.locations, props.locationsFiltered);\r\n\r\n    if (props.tooltipComponent) {\r\n      this.tooltipElem = document.createElement('div');\r\n    }\r\n\r\n    this.state = {\r\n      ready: false,\r\n      fullscreen: false,\r\n      showSatelliteView: false,\r\n      layers: Object.assign({}, props.layers),\r\n      markers: [],\r\n      popups: [],\r\n      tooltip: {},\r\n      tooltipContainerId: `root-mapbox-tooltip-${props.id}`,\r\n      defaultInstanceObject: {\r\n        container: `map-${props.id}`,\r\n        center: props.center,\r\n        zoom: props.zoom,\r\n        minZoom: props.minZoom,\r\n        maxZoom: props.maxZoom,\r\n        pitch: props.pitch,\r\n        style: config.mapbox.styles.street,\r\n        ...(props.fitBounds && { bounds: this.getBounds(mapLocations) }),\r\n        ...(props.fitBounds && { fitBoundsOptions: props.fitBoundsOptions }),\r\n      },\r\n    };\r\n  }\r\n\r\n  componentWillMount() {\r\n    if (this.props.tooltipComponent) {\r\n      const tooltipContainer = document.createElement('div');\r\n\r\n      tooltipContainer.id = this.state.tooltipContainerId;\r\n      document.body.appendChild(tooltipContainer);\r\n    }\r\n  }\r\n\r\n  componentDidMount() {\r\n    const { layers, defaultInstanceObject } = this.state;\r\n    const { allowScrollZoom, showMarkers, locations, locationsFiltered, instanceObject, onLoad, onChange } = this.props;\r\n\r\n    // get current list of locations\r\n    const mapLocations = this.getLocations(locations, locationsFiltered);\r\n\r\n    // instantiate mapbox\r\n    this.map = new mapboxgl.Map(Object.assign({}, defaultInstanceObject, instanceObject));\r\n\r\n    // setup map onLoad\r\n    this.map.on('load', () => {\r\n      const { markers } = this.state;\r\n      const { levels } = this.props;\r\n\r\n      const level = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n\r\n      if (!allowScrollZoom) {\r\n        this.map.scrollZoom.disable();\r\n      }\r\n\r\n      this.map.addControl(new mapboxgl.NavigationControl(), 'bottom-left');\r\n\r\n      if (showMarkers && mapLocations.length > 0) {\r\n        this.mapAddMarkers(mapLocations, []);\r\n      }\r\n\r\n      utils.map.addDefaultSources(this.map);\r\n      utils.map.addDefaultLayers(this.map, layers);\r\n\r\n      // run additional code specific to the parent component (ex: add clusters layers/sources)\r\n      if (utils.generic.isFunction(onLoad)) {\r\n        onLoad(this.map, { markers, level });\r\n      }\r\n\r\n      this.setState({\r\n        ready: true,\r\n        boundingBox: this.map.getBounds().toArray().flat(),\r\n      });\r\n\r\n      document.addEventListener('keydown', this.handleEscape);\r\n    });\r\n\r\n    // Add layers/sources when changing the style\r\n    this.map.on('style.load', () => {\r\n      const { markers, ready } = this.state;\r\n\r\n      if (!ready) return;\r\n\r\n      this.mapRemovePopups();\r\n\r\n      if (utils.generic.isFunction(onChange)) {\r\n        utils.map.addDefaultSources(this.map);\r\n        utils.map.addDefaultLayers(this.map, layers);\r\n        onChange(markers);\r\n      }\r\n    });\r\n\r\n    this.map.on('zoomend', () => {\r\n      const { ready, level, markers } = this.state;\r\n      const { onLevelChange, levels, locations, locationsFiltered, levelOverride } = this.props;\r\n\r\n      if (!ready) return;\r\n      if (!utils.generic.isFunction(onLevelChange)) return;\r\n\r\n      const newLevel = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n\r\n      if (level === newLevel || levelOverride) {\r\n        this.mapAddMarkers(this.getLocations(locations, locationsFiltered), markers);\r\n      }\r\n      if (level !== newLevel) {\r\n        onLevelChange({ level: newLevel });\r\n      }\r\n    });\r\n\r\n    this.map.on('dragend', () => {\r\n      const { ready, boundingBox, markers } = this.state;\r\n      const { locations, locationsFiltered, showMarkers } = this.props;\r\n\r\n      if (!ready || !showMarkers) return;\r\n\r\n      const newBoundingBox = this.map.getBounds().toArray().flat();\r\n\r\n      if (boundingBox && !isEqual(boundingBox, newBoundingBox)) {\r\n        this.setState({ boundingBox: newBoundingBox });\r\n        this.mapAddMarkers(this.getLocations(locations, locationsFiltered), markers);\r\n      }\r\n    });\r\n  }\r\n\r\n  componentWillUnmount() {\r\n    // remove all markers\r\n    this.mapRemoveMarkers();\r\n\r\n    // remove MapBox map instance\r\n    if (utils.generic.isFunction(this.map && this.map.remove)) {\r\n      this.map.remove();\r\n    }\r\n\r\n    // remove all DOM nodes used for HTML tooltip\r\n    if (this.props.tooltipComponent) {\r\n      const tooltipContainer = document.getElementById(this.state.tooltipContainerId);\r\n      const tooltipNode = this.tooltipElem;\r\n      const tooltipParent = this.tooltipElem.parentNode;\r\n\r\n      if (tooltipNode && tooltipParent) {\r\n        tooltipParent.removeChild(tooltipNode);\r\n      }\r\n\r\n      if (tooltipContainer) {\r\n        tooltipContainer.remove();\r\n      }\r\n    }\r\n\r\n    document.removeEventListener('keydown', this.handleEscape);\r\n  }\r\n\r\n  componentDidUpdate(prevProps) {\r\n    const { markers, ready } = this.state;\r\n    const {\r\n      locations,\r\n      locationsFiltered,\r\n      activeMarkers,\r\n      allowScrollZoom,\r\n      showMarkers,\r\n      center,\r\n      zoom,\r\n      fitBounds,\r\n      fitBoundsOptions,\r\n      onChange,\r\n      reCenter,\r\n    } = this.props;\r\n\r\n    const mapLocations = sortBy(this.getLocations(locations, locationsFiltered), ['id']);\r\n    const mapPrevLocations = sortBy(this.getLocations(prevProps.locations, prevProps.locationsFiltered), ['id']);\r\n\r\n    const isNewLocations = !isEqual(\r\n      mapPrevLocations.map((l) => l && l.id),\r\n      mapLocations.map((l) => l && l.id)\r\n    );\r\n    const isUpdatedLocations = !isEqual(mapPrevLocations, mapLocations);\r\n    const isUpdatedActiveMarkers = !isEqual(prevProps.activeMarkers, activeMarkers);\r\n    const isNewPropsShowMarkers = !isEqual(prevProps.showMarkers, showMarkers);\r\n    const isNewPropsFitBounds = !isEqual(prevProps.fitBounds, fitBounds);\r\n    const isNewPropsAllowScroll = !isEqual(prevProps.allowScrollZoom, allowScrollZoom);\r\n\r\n    if (isNewPropsAllowScroll) {\r\n      if (allowScrollZoom) {\r\n        this.map.scrollZoom.enable();\r\n      } else {\r\n        this.map.scrollZoom.disable();\r\n      }\r\n    }\r\n\r\n    // whenever anything changes in the locations (ex: new/removed locations or any property has changed)\r\n    // reset the markers\r\n    if (isUpdatedLocations || isNewPropsShowMarkers || isNewPropsFitBounds) {\r\n      this.mapRemovePopups();\r\n      this.mapRemoveMarkers();\r\n\r\n      if (showMarkers) {\r\n        this.mapAddMarkers(mapLocations, []);\r\n      }\r\n\r\n      // if locations have been added or removed\r\n      if (isNewLocations) {\r\n        // executed onChange callback (ex: to add clusters sources/layers)\r\n        if (ready && utils.generic.isValidArray(mapLocations, true) && utils.generic.isFunction(onChange)) {\r\n          onChange(markers);\r\n        }\r\n      }\r\n\r\n      // re-center the map on the new/updated array of markers\r\n      if (fitBounds) {\r\n        this.map.fitBounds(this.getBounds(mapLocations), fitBoundsOptions);\r\n      } else {\r\n        if (!reCenter) return;\r\n        this.map.flyTo({ center, zoom });\r\n      }\r\n    }\r\n\r\n    // if active marker(s) was updated\r\n    if (isUpdatedActiveMarkers && showMarkers) {\r\n      markers.forEach((marker) => {\r\n        marker.getElement().classList.toggle('active', activeMarkers.includes(marker.location.id));\r\n      });\r\n    }\r\n\r\n    if (prevProps.center !== center || prevProps.zoom !== zoom) {\r\n      const newCenter = prevProps.center !== center ? center : prevProps.center;\r\n      const newZoom = prevProps.zoom !== zoom ? zoom : prevProps.zoom;\r\n\r\n      this.map.flyTo({\r\n        ...(prevProps.zoom !== zoom && { zoom: newZoom }),\r\n        ...(prevProps.center !== center && { center: newCenter }),\r\n      });\r\n    }\r\n  }\r\n\r\n  getBounds = (locations) => {\r\n    const bounds = new mapboxgl.LngLatBounds();\r\n\r\n    const boundingBox = locations.reduce((acc, l) => {\r\n      let lngLat;\r\n      try {\r\n        lngLat = new mapboxgl.LngLat(l.lng, l.lat);\r\n      } catch {\r\n        console.error('MapBox: invalid lngLat provided', { id: l.id, lat: l.lat, lng: l.lng });\r\n      }\r\n\r\n      return lngLat && lngLat.lng && lngLat.lat ? bounds.extend([lngLat.lng, lngLat.lat]) : acc;\r\n    }, {});\r\n\r\n    return !isEmpty(boundingBox) ? boundingBox : config.mapbox.location.country.boundingBox.US;\r\n  };\r\n\r\n  getLocations = (locations, locationsFiltered) => {\r\n    const locs = utils.generic.isValidArray(locations, true) ? locations : [];\r\n    const locsFiltered = utils.generic.isValidArray(locationsFiltered, true) ? locationsFiltered : [];\r\n    const locsReturned = locsFiltered.length > 0 ? locsFiltered : locs;\r\n\r\n    return locsReturned.filter((l) => l.lat && l.lng && l.locationsFound > 0);\r\n  };\r\n\r\n  mapAddPopup = (marker) => {\r\n    const popup = new mapboxgl.Popup({ offset: 40 })\r\n      .setLngLat([marker.location.lng, marker.location.lat])\r\n      .setDOMContent(this.tooltipElem)\r\n      .addTo(this.map);\r\n\r\n    this.setState({ popups: [popup] });\r\n  };\r\n\r\n  mapRemovePopups = () => {\r\n    this.state.popups.forEach((popup) => {\r\n      if (utils.generic.isFunction(popup.remove)) {\r\n        popup.remove();\r\n      }\r\n    });\r\n\r\n    this.setState({ popups: [] });\r\n  };\r\n\r\n  createDoughnutChart = ({ location }) => {\r\n    const { level } = this.state;\r\n    const { doughnutSizes, levelOverride } = this.props;\r\n    const { properties = {} } = location;\r\n    const { data = [], backgroundColor = [] } = properties;\r\n\r\n    return (\r\n      <Chart\r\n        type=\"doughnut\"\r\n        data={{\r\n          datasets: [\r\n            {\r\n              borderWidth: 1,\r\n              data,\r\n              backgroundColor,\r\n            },\r\n          ],\r\n        }}\r\n        options={config.ui.chart.doughnut}\r\n        width={doughnutSizes[levelOverride || level]}\r\n        height={doughnutSizes[levelOverride || level]}\r\n      />\r\n    );\r\n  };\r\n\r\n  setDoughnutMarkers = (locations, markers) => {\r\n    if (!locations) return;\r\n\r\n    const markersArray = [];\r\n\r\n    utils.map.parseLocations(locations).forEach((location) => {\r\n      const tooltipContainer = document.createElement('div');\r\n      const ChartComponent = this.createDoughnutChart;\r\n      ReactDOM.render(<ChartComponent location={location} />, tooltipContainer);\r\n      const marker = new mapboxgl.Marker(tooltipContainer).setLngLat([location.lng, location.lat]);\r\n      const markerExists = markers.find((m) => isEqual(m.getLngLat(), marker.getLngLat()));\r\n\r\n      if (markerExists) return;\r\n\r\n      // adding original location object (id, lat, lng, etc...) to the marker\r\n      marker.location = location;\r\n\r\n      try {\r\n        marker.addTo(this.map);\r\n      } catch {}\r\n\r\n      markersArray.push(marker);\r\n    });\r\n\r\n    return markersArray;\r\n  };\r\n\r\n  mapAddMarkers = (locations, markers) => {\r\n    const { onChange, markerType, doughnutSizes, levels, levelOverride } = this.props;\r\n    const newLevel = utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()));\r\n    const newBoundingBox = this.map.getBounds();\r\n\r\n    this.setState({ level: newLevel });\r\n\r\n    const filteredLocations = locations.filter((location) => newBoundingBox.contains(new mapboxgl.LngLat(location.lng, location.lat)));\r\n\r\n    const showDoughnutMarkers =\r\n      markerType === config.mapbox.markerType.doughnut && Object.keys(doughnutSizes).includes(levelOverride || newLevel);\r\n\r\n    const newMarkers = showDoughnutMarkers\r\n      ? this.setDoughnutMarkers(filteredLocations, markers)\r\n      : utils.map.setMarkers(this.map, filteredLocations, markers);\r\n\r\n    // saving the marker instances to state to keep access to MapBox remove() method\r\n    this.setState({ markers: [...markers, ...newMarkers] }, () => {\r\n      if (utils.generic.isFunction(onChange)) {\r\n        onChange(this.state.markers);\r\n      }\r\n    });\r\n\r\n    this.mapParseMarkers(newMarkers);\r\n  };\r\n\r\n  mapRemoveMarkers = () => {\r\n    this.state.markers.forEach((marker) => {\r\n      if (utils.generic.isFunction(marker.remove)) {\r\n        marker.remove();\r\n      }\r\n    });\r\n\r\n    this.setState({ markers: [] });\r\n  };\r\n\r\n  mapParseMarkers = (markers) => {\r\n    markers.forEach((marker) => {\r\n      marker._element.addEventListener('click', this.mapClickMarker(marker));\r\n    });\r\n  };\r\n\r\n  mapClickMarker = (marker) => (event) => {\r\n    const { onClickMarker, tooltipComponent } = this.props;\r\n\r\n    // prevent marker click from bubbling up to the map (which closes popup meant to be opened)\r\n    event.stopPropagation();\r\n\r\n    this.mapRemovePopups();\r\n\r\n    const markers = this.map.getContainer().querySelectorAll('.mapboxgl-marker');\r\n    const location = marker.location || {};\r\n\r\n    markers.forEach((el) => {\r\n      el.classList.remove('active');\r\n    });\r\n\r\n    marker.getElement().classList.add('active');\r\n\r\n    // update the tooltip state\r\n    // after the update, fetch the re-rendered content from the React Portal\r\n    if (tooltipComponent) {\r\n      this.setState({ tooltip: location }, () => {\r\n        if (this.tooltipElem) {\r\n          this.mapAddPopup(marker);\r\n        }\r\n      });\r\n    }\r\n\r\n    if (utils.generic.isFunction(onClickMarker)) {\r\n      onClickMarker(marker.location);\r\n    }\r\n\r\n    if (this.props.allowMarkerClickZoom) {\r\n      this.map.flyTo({\r\n        center: marker._lngLat,\r\n        zoom: Math.max(this.map.getZoom(), this.props.markerMaxZoom),\r\n      });\r\n    }\r\n  };\r\n\r\n  mapToggleLayer = (layerGroupKey) => {\r\n    const layers = { ...this.state.layers };\r\n    const layerGroup = layers[layerGroupKey];\r\n    const { visible, none } = utils.map.visibility;\r\n\r\n    layerGroup.visibility = layerGroup.visibility === visible ? none : visible;\r\n    layerGroup.config.forEach((c) => {\r\n      this.map.setLayoutProperty(c.id, 'visibility', layerGroup.visibility);\r\n    });\r\n\r\n    this.setState({\r\n      layers,\r\n    });\r\n  };\r\n\r\n  mapToggleFullScreen = () => {\r\n    this.setState({ fullscreen: !this.state.fullscreen }, () => {\r\n      if (this.map && utils.generic.isFunction(this.map.resize)) {\r\n        this.map.resize();\r\n      }\r\n    });\r\n  };\r\n\r\n  mapToggleSatellite = () => {\r\n    this.setState({ showSatelliteView: !this.state.showSatelliteView }, () => {\r\n      this.map.setStyle(this.state.showSatelliteView ? config.mapbox.styles.satellite : config.mapbox.styles.street);\r\n    });\r\n  };\r\n\r\n  handleEscape = (event) => {\r\n    if (event.keyCode === KEYCODE.Escape) {\r\n      event.preventDefault();\r\n\r\n      if (this.state.fullscreen) {\r\n        this.setState({ fullscreen: false }, () => {\r\n          if (this.map && utils.generic.isFunction(this.map.resize)) {\r\n            this.map.resize();\r\n          }\r\n        });\r\n      }\r\n    }\r\n  };\r\n\r\n  levelLoaderComponent = () => {\r\n    if (!this.map) return null;\r\n\r\n    const { isLoading } = this.props;\r\n\r\n    return <Loader visible={isLoading} label={utils.string.t('app.loading_locations')} absolute />;\r\n  };\r\n\r\n  render() {\r\n    const { layers, tooltip, ready, fullscreen, tooltipContainerId, showSatelliteView } = this.state;\r\n    const {\r\n      id,\r\n      height,\r\n      allowFullscreen,\r\n      overflow,\r\n      placementOverflow,\r\n      responsive,\r\n      buttons,\r\n      header,\r\n      locations,\r\n      tooltipComponent,\r\n      overlay,\r\n      classes,\r\n      allowSatelliteView,\r\n      mapKey,\r\n      onLevelChange,\r\n      nestedClasses,\r\n      levels,\r\n      levelOverride,\r\n    } = this.props;\r\n\r\n    const isOverlayVisible = overlay && overlay.visible;\r\n\r\n    const classesMapContainer = {\r\n      [classes.root]: !fullscreen,\r\n      [classes.overflow]: !fullscreen && overflow,\r\n      [classes.placementOverflow]: !fullscreen && placementOverflow,\r\n      [classes.responsive]: !fullscreen && responsive,\r\n      [classes.fullScreen]: fullscreen,\r\n    };\r\n\r\n    const classesMap = {\r\n      [classes.map]: true,\r\n      [nestedClasses.map]: Boolean(nestedClasses.map),\r\n      [classes.mapOverflow]: overflow,\r\n      [classes.mapOverlay]: isOverlayVisible,\r\n    };\r\n\r\n    if (this.map) {\r\n      this.map.resize();\r\n    }\r\n\r\n    const LevelLoaderComponent = this.levelLoaderComponent;\r\n    const TooltipComponent = tooltipComponent;\r\n\r\n    return (\r\n      <Fade in={ready}>\r\n        <div className={classnames(classesMapContainer)}>\r\n          <MapBoxOverlay\r\n            locations={locations}\r\n            layers={layers}\r\n            overflow={overflow}\r\n            fullscreen={allowFullscreen ? fullscreen : false}\r\n            buttons={buttons}\r\n            header={header}\r\n            showSatelliteView={showSatelliteView}\r\n            handleToggleSatellite={allowSatelliteView ? this.mapToggleSatellite : undefined}\r\n            handleToggleLayer={this.mapToggleLayer}\r\n            handleToggleFullScreen={allowFullscreen ? this.mapToggleFullScreen : undefined}\r\n          />\r\n\r\n          {mapKey && <ChartKey {...mapKey} />}\r\n\r\n          {this.map && utils.generic.isFunction(onLevelChange) && (\r\n            <>\r\n              <ChartZoomLevel\r\n                disabled={locations.length === 0}\r\n                onLevelChange={onLevelChange}\r\n                levels={levels}\r\n                level={utils.map.getLevelByZoom(levels, Math.round(this.map.getZoom()))}\r\n                levelOverride={levelOverride}\r\n              />\r\n              <LevelLoaderComponent />\r\n            </>\r\n          )}\r\n\r\n          {tooltipComponent && (\r\n            <MapBoxTooltipPortal id={tooltipContainerId} elem={this.tooltipElem}>\r\n              {!isEmpty(tooltip) && <TooltipComponent tooltip={tooltip} />}\r\n            </MapBoxTooltipPortal>\r\n          )}\r\n\r\n          <div\r\n            id={`map-${id}`}\r\n            style={{ height: fullscreen ? null : height }}\r\n            className={classnames('map', 'mapboxgl-map', classnames(classesMap))}\r\n          >\r\n            {isOverlayVisible && <div className={classes.overlay}>{overlay.text}</div>}\r\n          </div>\r\n        </div>\r\n      </Fade>\r\n    );\r\n  }\r\n}\r\n\r\nexport default compose(withStyles(styles))(MapBox);\r\n"]},"metadata":{},"sourceType":"module"}