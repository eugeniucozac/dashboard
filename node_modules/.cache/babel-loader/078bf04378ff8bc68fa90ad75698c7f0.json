{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport * as utils from 'utils';\nimport { authLogout, addLoader, removeLoader } from 'stores';\nexport var getCaseTeamModule = function getCaseTeamModule(params) {\n  return function (dispatch, getState) {\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint;\n\n    var taskId = params === null || params === void 0 ? void 0 : params.taskId;\n    var defaultError = {\n      file: 'stores/premiumProcessing.actions.getCaseTeamModule'\n    };\n    dispatch(addLoader('getCaseTeamModule'));\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.bpmService,\n      path: 'workflow/process/caseTeam/' + taskId\n    }).then(function (response) {\n      return utils.api.handleResponse(response);\n    }).then(function (json) {\n      return utils.api.handleNewData(json);\n    }).then(function (data) {\n      if (data === null || data === void 0 ? void 0 : data.data) {\n        dispatch(getCaseTeamSuccess(data.data));\n      }\n\n      return data.data;\n    }).catch(function (error) {\n      utils.api.handleError(error, _objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'API fetch error (getCaseTeam)'\n      }));\n      dispatch(getCaseTeamError(error));\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\n      return error === null || error === void 0 ? void 0 : error.json;\n    }).finally(function () {\n      dispatch(removeLoader('getCaseTeamModule'));\n    });\n  };\n};\nexport var getCaseTeamRequest = function getCaseTeamRequest(payload) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_REQUEST',\n    payload: payload\n  };\n};\nexport var getCaseTeamSuccess = function getCaseTeamSuccess(data) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_SUCCESS',\n    payload: data\n  };\n};\nexport var getCaseTeamError = function getCaseTeamError(error) {\n  return {\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_ERROR',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/premiumProcessing/premiumProcessing.actions.getCaseTeamModule.js"],"names":["utils","authLogout","addLoader","removeLoader","getCaseTeamModule","params","dispatch","getState","auth","user","endpoint","config","vars","taskId","defaultError","file","api","get","token","accessToken","bpmService","path","then","response","handleResponse","json","handleNewData","data","getCaseTeamSuccess","catch","error","handleError","message","getCaseTeamError","handleUnauthorized","finally","getCaseTeamRequest","payload","type"],"mappings":";AAAA,OAAO,KAAKA,KAAZ,MAAuB,OAAvB;AACA,SAASC,UAAT,EAAqBC,SAArB,EAAgCC,YAAhC,QAAoD,QAApD;AAEA,OAAO,IAAMC,iBAAiB,GAAG,SAApBA,iBAAoB,CAACC,MAAD;AAAA,SAAY,UAACC,QAAD,EAAWC,QAAX,EAAwB;AAAA,oBAM/DA,QAAQ,EANuD;AAAA,QAEzDC,IAFyD,aAEjEC,IAFiE,CAEzDD,IAFyD;AAAA,QAIvDE,QAJuD,aAGjEC,MAHiE,CAI/DC,IAJ+D,CAIvDF,QAJuD;;AAOnE,QAAMG,MAAM,GAAGR,MAAH,aAAGA,MAAH,uBAAGA,MAAM,CAAEQ,MAAvB;AACA,QAAMC,YAAY,GAAG;AACnBC,MAAAA,IAAI,EAAE;AADa,KAArB;AAIAT,IAAAA,QAAQ,CAACJ,SAAS,CAAC,mBAAD,CAAV,CAAR;AAEA,WAAOF,KAAK,CAACgB,GAAN,CACJC,GADI,CACA;AACHC,MAAAA,KAAK,EAAEV,IAAI,CAACW,WADT;AAEHT,MAAAA,QAAQ,EAAEA,QAAQ,CAACU,UAFhB;AAGHC,MAAAA,IAAI,EAAE,+BAA+BR;AAHlC,KADA,EAMJS,IANI,CAMC,UAACC,QAAD;AAAA,aAAcvB,KAAK,CAACgB,GAAN,CAAUQ,cAAV,CAAyBD,QAAzB,CAAd;AAAA,KAND,EAOJD,IAPI,CAOC,UAACG,IAAD;AAAA,aAAUzB,KAAK,CAACgB,GAAN,CAAUU,aAAV,CAAwBD,IAAxB,CAAV;AAAA,KAPD,EAQJH,IARI,CAQC,UAACK,IAAD,EAAU;AACd,UAAIA,IAAJ,aAAIA,IAAJ,uBAAIA,IAAI,CAAEA,IAAV,EAAgB;AACdrB,QAAAA,QAAQ,CAACsB,kBAAkB,CAACD,IAAI,CAACA,IAAN,CAAnB,CAAR;AACD;;AACD,aAAOA,IAAI,CAACA,IAAZ;AACD,KAbI,EAcJE,KAdI,CAcE,UAACC,KAAD,EAAW;AAChB9B,MAAAA,KAAK,CAACgB,GAAN,CAAUe,WAAV,CAAsBD,KAAtB,kCAAkChB,YAAlC;AAAgDkB,QAAAA,OAAO,EAAE;AAAzD;AACA1B,MAAAA,QAAQ,CAAC2B,gBAAgB,CAACH,KAAD,CAAjB,CAAR;AACA9B,MAAAA,KAAK,CAACgB,GAAN,CAAUkB,kBAAV,CAA6BJ,KAA7B,EAAoCxB,QAApC,EAA8CL,UAA9C;AACA,aAAO6B,KAAP,aAAOA,KAAP,uBAAOA,KAAK,CAAEL,IAAd;AACD,KAnBI,EAoBJU,OApBI,CAoBI,YAAM;AACb7B,MAAAA,QAAQ,CAACH,YAAY,CAAC,mBAAD,CAAb,CAAR;AACD,KAtBI,CAAP;AAuBD,GArCgC;AAAA,CAA1B;AAuCP,OAAO,IAAMiC,kBAAkB,GAAG,SAArBA,kBAAqB,CAACC,OAAD,EAAa;AAC7C,SAAO;AACLC,IAAAA,IAAI,EAAE,0CADD;AAELD,IAAAA,OAAO,EAAPA;AAFK,GAAP;AAID,CALM;AAOP,OAAO,IAAMT,kBAAkB,GAAG,SAArBA,kBAAqB,CAACD,IAAD,EAAU;AAC1C,SAAO;AACLW,IAAAA,IAAI,EAAE,0CADD;AAELD,IAAAA,OAAO,EAAEV;AAFJ,GAAP;AAID,CALM;AAOP,OAAO,IAAMM,gBAAgB,GAAG,SAAnBA,gBAAmB,CAACH,KAAD,EAAW;AACzC,SAAO;AACLQ,IAAAA,IAAI,EAAE,wCADD;AAELD,IAAAA,OAAO,EAAEP;AAFJ,GAAP;AAID,CALM","sourcesContent":["import * as utils from 'utils';\r\nimport { authLogout, addLoader, removeLoader } from 'stores';\r\n\r\nexport const getCaseTeamModule = (params) => (dispatch, getState) => {\r\n  const {\r\n    user: { auth },\r\n    config: {\r\n      vars: { endpoint },\r\n    },\r\n  } = getState();\r\n  const taskId = params?.taskId;\r\n  const defaultError = {\r\n    file: 'stores/premiumProcessing.actions.getCaseTeamModule',\r\n  };\r\n\r\n  dispatch(addLoader('getCaseTeamModule'));\r\n\r\n  return utils.api\r\n    .get({\r\n      token: auth.accessToken,\r\n      endpoint: endpoint.bpmService,\r\n      path: 'workflow/process/caseTeam/' + taskId,\r\n    })\r\n    .then((response) => utils.api.handleResponse(response))\r\n    .then((json) => utils.api.handleNewData(json))\r\n    .then((data) => {\r\n      if (data?.data) {\r\n        dispatch(getCaseTeamSuccess(data.data));\r\n      }\r\n      return data.data;\r\n    })\r\n    .catch((error) => {\r\n      utils.api.handleError(error, { ...defaultError, message: 'API fetch error (getCaseTeam)' });\r\n      dispatch(getCaseTeamError(error));\r\n      utils.api.handleUnauthorized(error, dispatch, authLogout);\r\n      return error?.json;\r\n    })\r\n    .finally(() => {\r\n      dispatch(removeLoader('getCaseTeamModule'));\r\n    });\r\n};\r\n\r\nexport const getCaseTeamRequest = (payload) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_REQUEST',\r\n    payload,\r\n  };\r\n};\r\n\r\nexport const getCaseTeamSuccess = (data) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_SUCCESS',\r\n    payload: data,\r\n  };\r\n};\r\n\r\nexport const getCaseTeamError = (error) => {\r\n  return {\r\n    type: 'PREMIUM_PROCESSING_CASE_TEAM_GET_ERROR',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}