{"ast":null,"code":"import _regeneratorRuntime from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/regenerator\";\nimport _asyncToGenerator from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/asyncToGenerator\";\nimport _toConsumableArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/toConsumableArray\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _slicedToArray from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/slicedToArray\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\pages\\\\ClaimsNewLoss\\\\ClaimsNewLoss.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect, useState } from 'react';\nimport { useDispatch, useSelector } from 'react-redux';\nimport PropTypes from 'prop-types';\nimport get from 'lodash/get';\nimport moment from 'moment'; // app\n\nimport styles from './ClaimsNewLoss.styles';\nimport { HorizontalLinearStepper, Layout, SectionHeader, Translate, PreventNavigation } from 'components';\nimport { postLossInformation, selectLossId, postClaimDetailsInformation, selectClaimIdUnderProgress, addNewClaimUnderCurrentLoss, postEditClaimDetailsInformation, resetClaimData, postEditLossInformation, selectClaimIdFromGrid, getClaimantNames, getClaimBordereauPeriods, getSettlementCurrency, selectSettlementCurrency, selectBEAdjusterList, selectClaimsInformation, selectSelectedBEAdjusterList, selectReferralValues, selectReferralResponse, selectSectionEnabledUG, updateClaimantNamesSuccess, setBEAdjusterValue, selectClaimBordereauPeriods, selectClaimData } from 'stores';\nimport { ClaimsAcknowledgement, ClaimsEnterLossInformation, ClaimsPolicySearch, ClaimsPreviewInformation, EnterClaimInformation } from 'modules';\nimport config from 'config';\nimport * as utils from 'utils';\nimport * as constants from 'consts'; // mui\n\nimport { makeStyles } from '@material-ui/core';\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsNewLossView.propTypes = {\n  steps: PropTypes.array,\n  currentStep: PropTypes.number.isRequired,\n  claim: PropTypes.object.isRequired,\n  isNavigationAllowed: PropTypes.bool.isRequired,\n  handleCancel: PropTypes.func.isRequired,\n  handleFinishNewLoss: PropTypes.func.isRequired,\n  handleSaveNewLoss: PropTypes.func.isRequired,\n  handleSaveNewClaim: PropTypes.func.isRequired\n};\nexport function ClaimsNewLossView(_ref) {\n  _s();\n\n  var _stepperLabel$find,\n      _this = this;\n\n  var steps = _ref.steps,\n      currentStep = _ref.currentStep,\n      claim = _ref.claim,\n      isNavigationAllowed = _ref.isNavigationAllowed,\n      handleCancel = _ref.handleCancel,\n      handleSaveNewLoss = _ref.handleSaveNewLoss,\n      handleSaveNewClaim = _ref.handleSaveNewClaim,\n      handleFinishNewLoss = _ref.handleFinishNewLoss,\n      validation = _ref.validation,\n      setValidation = _ref.setValidation,\n      allClaimDetails = _ref.allClaimDetails,\n      complexityValues = _ref.complexityValues,\n      lossQualifiers = _ref.lossQualifiers,\n      policySections = _ref.policySections,\n      policyInformation = _ref.policyInformation;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsNewLoss'\n  })();\n  var dispatch = useDispatch();\n  var lossInformation = useSelector(selectLossId);\n  var claimData = useSelector(selectClaimIdUnderProgress);\n  var selectClaimID = get(claimData, 'claimID') || '';\n  var claimsInformation = useSelector(selectClaimIdFromGrid);\n  var editClaimId = get(claimsInformation, 'claimID') || '';\n\n  var _useState = useState(false),\n      _useState2 = _slicedToArray(_useState, 2),\n      policyRef = _useState2[0],\n      setPolicyRef = _useState2[1];\n\n  var _useState3 = useState(currentStep),\n      _useState4 = _slicedToArray(_useState3, 2),\n      activeStep = _useState4[0],\n      setActiveStep = _useState4[1];\n\n  var isAllStepsCompleted = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length);\n  var lastStep = activeStep === (steps === null || steps === void 0 ? void 0 : steps.length) - 1;\n  var stepperLabel = [{\n    id: 0,\n    label: utils.string.t('claims.stepperLabel.registerLoss')\n  }, {\n    id: 1,\n    label: utils.string.t('claims.stepperLabel.searchPolicy')\n  }, {\n    id: 2,\n    label: utils.string.t('claims.stepperLabel.enterClaimInformation')\n  }, {\n    id: 3,\n    label: utils.string.t('claims.stepperLabel.previewInfo')\n  }, {\n    id: 4,\n    label: utils.string.t('claims.stepperLabel.acknowledgement')\n  }];\n\n  var _useState5 = useState((_stepperLabel$find = stepperLabel.find(function (label) {\n    return label.id === 0;\n  })) === null || _stepperLabel$find === void 0 ? void 0 : _stepperLabel$find.label),\n      _useState6 = _slicedToArray(_useState5, 2),\n      activeStepperLabel = _useState6[0],\n      setActiveStepperLabel = _useState6[1];\n\n  var currencies = useSelector(selectSettlementCurrency);\n  currencies = currencies.map(function (currency) {\n    return _objectSpread(_objectSpread({}, currency), {}, {\n      name: \"\".concat(currency.id, \" - \").concat(currency.name)\n    });\n  });\n  var isSectionEnabled = useSelector(selectSectionEnabledUG);\n  var allBEAdjusters = useSelector(selectBEAdjusterList);\n  var selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\n  var existingClaimInfo = useSelector(selectClaimsInformation);\n  var savedClaimInfo = useSelector(selectClaimIdUnderProgress);\n  var referralValues = useSelector(selectReferralValues);\n  var referralResponse = useSelector(selectReferralResponse);\n  var claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\n\n  var _useState7 = useState(),\n      _useState8 = _slicedToArray(_useState7, 2),\n      resetKey = _useState8[0],\n      setResetKey = _useState8[1];\n\n  var _useState9 = useState(),\n      _useState10 = _slicedToArray(_useState9, 2),\n      uwResetKey = _useState10[0],\n      setUWResetKey = _useState10[1];\n\n  var _useState11 = useState(false),\n      _useState12 = _slicedToArray(_useState11, 2),\n      isBordereauChecked = _useState12[0],\n      setBordereauChecked = _useState12[1];\n\n  var checkBordereauValue = function checkBordereauValue(claimBordereauPeriods) {\n    return claimBordereauPeriods.find(function (bp) {\n      return bp.name === (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod);\n    }) || null;\n  };\n\n  useEffect(function () {\n    var _stepperLabel$find2;\n\n    setActiveStepperLabel((_stepperLabel$find2 = stepperLabel.find(function (stepperLbl) {\n      return stepperLbl.id === activeStep;\n    })) === null || _stepperLabel$find2 === void 0 ? void 0 : _stepperLabel$find2.label);\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    dispatch(getSettlementCurrency());\n    dispatch(getClaimBordereauPeriods());\n    setResetKey(new Date().getTime());\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\n\n  useEffect(function () {\n    if (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod) {\n      setBordereauChecked(true);\n    }\n\n    if ((policyData === null || policyData === void 0 ? void 0 : policyData.length) > 0) setUWResetKey(new Date().getTime());\n  }, [isSectionEnabled, existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  var isComplexFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isComplex) !== 0;\n  var isBordereauFlag = (allClaimDetails === null || allClaimDetails === void 0 ? void 0 : allClaimDetails.isBordereau) === 1;\n  var existingClaimOrPolicyCurrency = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.settlementCurrencyCode) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.settlementCurrencyCode) || (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.originalCurrency);\n  var selectedCurrency = currencies.find(function (c) {\n    return c.id === existingClaimOrPolicyCurrency;\n  });\n  var lossQualifierValue = (lossQualifiers || []).find(function (l) {\n    var _l$id, _existingClaimInfo$lo, _savedClaimInfo$lossQ;\n\n    return ((_l$id = l.id) === null || _l$id === void 0 ? void 0 : _l$id.toString()) === ((existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : (_existingClaimInfo$lo = existingClaimInfo.lossQualifierID) === null || _existingClaimInfo$lo === void 0 ? void 0 : _existingClaimInfo$lo.toString()) || (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : (_savedClaimInfo$lossQ = savedClaimInfo.lossQualifierID) === null || _savedClaimInfo$lossQ === void 0 ? void 0 : _savedClaimInfo$lossQ.toString()));\n  });\n  var complexityDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.complexityBasis) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.complexityBasis;\n  }));\n  var complexityValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.complexityValueID) && (complexityValues === null || complexityValues === void 0 ? void 0 : complexityValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.complexityValueID;\n  }));\n  var referralDefaultValue = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralValue) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesValue === existingClaimInfo.referralValue;\n  }));\n  var referralValue = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralValueID) && (referralValues === null || referralValues === void 0 ? void 0 : referralValues.find(function (item) {\n    return item.complexityRulesID === savedClaimInfo.referralValueID;\n  }));\n  var referralDefaultResponse = (existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.referralResponseDescription) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    return item.description === existingClaimInfo.referralResponseDescription;\n  }));\n  var referralResponseData = (savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.referralResponseID) && (referralResponse === null || referralResponse === void 0 ? void 0 : referralResponse.find(function (item) {\n    var _savedClaimInfo$refer;\n\n    return item.id === ((_savedClaimInfo$refer = savedClaimInfo.referralResponseID) === null || _savedClaimInfo$refer === void 0 ? void 0 : _savedClaimInfo$refer.toString());\n  }));\n  var sectionAllOption = (policyInformation === null || policyInformation === void 0 ? void 0 : policyInformation.policyType) === constants.CLAIM_SECTION_ENABLED_UG[0] ? [] : [{\n    id: constants.CLAIM_POLICY_SECTION_DEFAULT,\n    name: utils.string.t('app.all'),\n    description: null\n  }];\n  var policyData = [].concat(sectionAllOption, _toConsumableArray(utils.generic.isValidArray(policySections, true) ? policySections : []));\n  var dateDisabledLossQualifiers = lossQualifiers.filter(function (item) {\n    return constants.CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find(function (itr) {\n      return itr === item.name;\n    });\n  }).map(function (item) {\n    return item.id;\n  });\n  var hasClaimRef = Boolean(savedClaimInfo === null || savedClaimInfo === void 0 ? void 0 : savedClaimInfo.claimReference) || Boolean(existingClaimInfo === null || existingClaimInfo === void 0 ? void 0 : existingClaimInfo.claimReference);\n\n  var handleNext = /*#__PURE__*/function () {\n    var _ref2 = _asyncToGenerator( /*#__PURE__*/_regeneratorRuntime.mark(function _callee(values) {\n      return _regeneratorRuntime.wrap(function _callee$(_context) {\n        while (1) {\n          switch (_context.prev = _context.next) {\n            case 0:\n              utils.app.scrollTo(0, '#layout-main');\n\n              if (!(activeStep === 0)) {\n                _context.next = 4;\n                break;\n              }\n\n              _context.next = 4;\n              return dispatch(!(lossInformation === null || lossInformation === void 0 ? void 0 : lossInformation.lossDetailID) ? postLossInformation(values) : postEditLossInformation(values));\n\n            case 4:\n              if (!(activeStep === 2 && !selectClaimID)) {\n                _context.next = 12;\n                break;\n              }\n\n              if (!editClaimId) {\n                _context.next = 10;\n                break;\n              }\n\n              _context.next = 8;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 8:\n              _context.next = 12;\n              break;\n\n            case 10:\n              _context.next = 12;\n              return dispatch(postClaimDetailsInformation(values));\n\n            case 12:\n              if (!(activeStep === 2 && selectClaimID)) {\n                _context.next = 15;\n                break;\n              }\n\n              _context.next = 15;\n              return dispatch(postEditClaimDetailsInformation(values));\n\n            case 15:\n              setActiveStep(function (prevActiveStep) {\n                return prevActiveStep + 1;\n              });\n\n            case 16:\n            case \"end\":\n              return _context.stop();\n          }\n        }\n      }, _callee);\n    }));\n\n    return function handleNext(_x) {\n      return _ref2.apply(this, arguments);\n    };\n  }();\n\n  var handleBack = function handleBack() {\n    utils.app.scrollTo(0, '#layout-main');\n    setActiveStep(function (prevActiveStep) {\n      return prevActiveStep - 1;\n    });\n  };\n\n  var handleFinish = function handleFinish() {\n    handleFinishNewLoss();\n  };\n\n  var handleAddNewClaimInLoss = function handleAddNewClaimInLoss() {\n    dispatch(addNewClaimUnderCurrentLoss());\n    setActiveStep(1);\n  };\n\n  var stepContent = function stepContent(index) {\n    switch (index) {\n      case 0:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_LOSS\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 215,\n          columnNumber: 11\n        }, _this);\n\n      case 1:\n        return /*#__PURE__*/_jsxDEV(ClaimsPolicySearch, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 230,\n          columnNumber: 11\n        }, _this);\n\n      case 2:\n        return /*#__PURE__*/_jsxDEV(EnterClaimInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewClaim,\n          validation: validation,\n          setValidation: setValidation,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          context: constants.DMS_CONTEXT_CLAIM\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 244,\n          columnNumber: 11\n        }, _this);\n\n      case 3:\n        return /*#__PURE__*/_jsxDEV(ClaimsPreviewInformation, {\n          policyRef: policyRef,\n          setPolicyRef: setPolicyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 262,\n          columnNumber: 11\n        }, _this);\n\n      case 4:\n        return /*#__PURE__*/_jsxDEV(ClaimsAcknowledgement, {\n          claim: claim,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleFinish: handleFinish,\n          activeStep: activeStep,\n          lastStep: lastStep,\n          next: true,\n          handleClaim: handleAddNewClaimInLoss\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 277,\n          columnNumber: 11\n        }, _this);\n\n      default:\n        return /*#__PURE__*/_jsxDEV(ClaimsEnterLossInformation, {\n          policyRef: policyRef,\n          isAllStepsCompleted: isAllStepsCompleted,\n          handleCancel: handleCancel,\n          handleFinish: handleFinish,\n          handleNext: handleNext,\n          handleBack: handleBack,\n          handleSave: handleSaveNewLoss,\n          activeStep: activeStep,\n          lastStep: lastStep\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 289,\n          columnNumber: 11\n        }, _this);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(Layout, {\n      testid: \"claims-register-new-loss\",\n      children: /*#__PURE__*/_jsxDEV(Layout, {\n        main: true,\n        children: [/*#__PURE__*/_jsxDEV(SectionHeader, {\n          title: /*#__PURE__*/_jsxDEV(Translate, {\n            label: activeStepperLabel\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 309,\n            columnNumber: 20\n          }, this),\n          icon: NoteAddIcon,\n          testid: \"claims-register-new-loss-header\"\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 308,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(HorizontalLinearStepper, {\n          steps: steps,\n          stepContent: stepContent,\n          activeStep: activeStep,\n          setActiveStep: setActiveStep,\n          showStepConnector: true,\n          handleCancel: handleCancel,\n          handleSave: handleSaveNewLoss,\n          nestedClasses: {\n            stepper: classes.stepper\n          }\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 313,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 307,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 306,\n      columnNumber: 7\n    }, this), isNavigationAllowed && /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: true,\n      allowedUrls: isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss],\n      title: 'status.alert',\n      subtitle: '',\n      hint: 'navigation.title',\n      confirmLabel: 'form.options.yesNoNa.yes',\n      cancelLabel: 'form.options.yesNoNa.no',\n      maxWidth: 'xs',\n      onSubmitCallBack: function onSubmitCallBack() {\n        dispatch(resetClaimData());\n      }\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 326,\n      columnNumber: 9\n    }, this)]\n  }, void 0, true);\n}\n\n_s(ClaimsNewLossView, \"10VvFuim/1mav9bU3zFMEGN3Uk4=\", false, function () {\n  return [useDispatch, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector, useSelector];\n});\n\n_c = ClaimsNewLossView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsNewLossView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/pages/ClaimsNewLoss/ClaimsNewLoss.view.js"],"names":["React","useEffect","useState","useDispatch","useSelector","PropTypes","get","moment","styles","HorizontalLinearStepper","Layout","SectionHeader","Translate","PreventNavigation","postLossInformation","selectLossId","postClaimDetailsInformation","selectClaimIdUnderProgress","addNewClaimUnderCurrentLoss","postEditClaimDetailsInformation","resetClaimData","postEditLossInformation","selectClaimIdFromGrid","getClaimantNames","getClaimBordereauPeriods","getSettlementCurrency","selectSettlementCurrency","selectBEAdjusterList","selectClaimsInformation","selectSelectedBEAdjusterList","selectReferralValues","selectReferralResponse","selectSectionEnabledUG","updateClaimantNamesSuccess","setBEAdjusterValue","selectClaimBordereauPeriods","selectClaimData","ClaimsAcknowledgement","ClaimsEnterLossInformation","ClaimsPolicySearch","ClaimsPreviewInformation","EnterClaimInformation","config","utils","constants","makeStyles","NoteAddIcon","createFilterOptions","ClaimsNewLossView","propTypes","steps","array","currentStep","number","isRequired","claim","object","isNavigationAllowed","bool","handleCancel","func","handleFinishNewLoss","handleSaveNewLoss","handleSaveNewClaim","validation","setValidation","allClaimDetails","complexityValues","lossQualifiers","policySections","policyInformation","classes","name","dispatch","lossInformation","claimData","selectClaimID","claimsInformation","editClaimId","policyRef","setPolicyRef","activeStep","setActiveStep","isAllStepsCompleted","length","lastStep","stepperLabel","id","label","string","t","find","activeStepperLabel","setActiveStepperLabel","currencies","map","currency","isSectionEnabled","allBEAdjusters","selectedBeAdjuster","existingClaimInfo","savedClaimInfo","referralValues","referralResponse","claimBordereauPeriods","resetKey","setResetKey","uwResetKey","setUWResetKey","isBordereauChecked","setBordereauChecked","checkBordereauValue","bp","bordereauPeriod","stepperLbl","Date","getTime","policyData","isComplexFlag","isComplex","isBordereauFlag","isBordereau","existingClaimOrPolicyCurrency","settlementCurrencyCode","originalCurrency","selectedCurrency","c","lossQualifierValue","l","toString","lossQualifierID","complexityDefaultValue","complexityBasis","item","complexityRulesValue","complexityValue","complexityValueID","complexityRulesID","referralDefaultValue","referralValue","referralValueID","referralDefaultResponse","referralResponseDescription","description","referralResponseData","referralResponseID","sectionAllOption","policyType","CLAIM_SECTION_ENABLED_UG","CLAIM_POLICY_SECTION_DEFAULT","generic","isValidArray","dateDisabledLossQualifiers","filter","CLAIM_LOSS_DATE_DISABLED_QUALIFIERS","itr","hasClaimRef","Boolean","claimReference","handleNext","values","app","scrollTo","lossDetailID","prevActiveStep","handleBack","handleFinish","handleAddNewClaimInLoss","stepContent","index","DMS_CONTEXT_LOSS","DMS_CONTEXT_CLAIM","stepper","routes","claimsFNOL","root","newLoss"],"mappings":"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","sourcesContent":["import React, { useEffect, useState } from 'react';\r\nimport { useDispatch, useSelector } from 'react-redux';\r\nimport PropTypes from 'prop-types';\r\nimport get from 'lodash/get';\r\nimport moment from 'moment';\r\n\r\n// app\r\nimport styles from './ClaimsNewLoss.styles';\r\nimport { HorizontalLinearStepper, Layout, SectionHeader, Translate, PreventNavigation } from 'components';\r\nimport {\r\n  postLossInformation,\r\n  selectLossId,\r\n  postClaimDetailsInformation,\r\n  selectClaimIdUnderProgress,\r\n  addNewClaimUnderCurrentLoss,\r\n  postEditClaimDetailsInformation,\r\n  resetClaimData,\r\n  postEditLossInformation,\r\n  selectClaimIdFromGrid,\r\n\r\n  getClaimantNames,\r\n  getClaimBordereauPeriods,\r\n  getSettlementCurrency,\r\n  selectSettlementCurrency,\r\n  selectBEAdjusterList,\r\n  selectClaimsInformation,\r\n  selectSelectedBEAdjusterList,\r\n  selectReferralValues,\r\n  selectReferralResponse,\r\n  selectSectionEnabledUG,\r\n  updateClaimantNamesSuccess,\r\n  setBEAdjusterValue,\r\n  selectClaimBordereauPeriods,\r\n  selectClaimData,\r\n} from 'stores';\r\nimport {\r\n  ClaimsAcknowledgement,\r\n  ClaimsEnterLossInformation,\r\n  ClaimsPolicySearch,\r\n  ClaimsPreviewInformation,\r\n  EnterClaimInformation,\r\n} from 'modules';\r\nimport config from 'config';\r\n\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\n// mui\r\nimport { makeStyles } from '@material-ui/core';\r\nimport NoteAddIcon from '@material-ui/icons/NoteAdd';\r\n\r\nimport { createFilterOptions } from '@material-ui/lab/Autocomplete';\r\n\r\nClaimsNewLossView.propTypes = {\r\n  steps: PropTypes.array,\r\n  currentStep: PropTypes.number.isRequired,\r\n  claim: PropTypes.object.isRequired,\r\n  isNavigationAllowed: PropTypes.bool.isRequired,\r\n  handleCancel: PropTypes.func.isRequired,\r\n  handleFinishNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewLoss: PropTypes.func.isRequired,\r\n  handleSaveNewClaim: PropTypes.func.isRequired,\r\n};\r\n\r\nexport function ClaimsNewLossView({\r\n  steps,\r\n  currentStep,\r\n  claim,\r\n  isNavigationAllowed,\r\n  handleCancel,\r\n  handleSaveNewLoss,\r\n  handleSaveNewClaim,\r\n  handleFinishNewLoss,\r\n  validation,\r\n  setValidation,\r\n\r\n  allClaimDetails,\r\n  complexityValues,\r\n  lossQualifiers,\r\n  policySections,\r\n  policyInformation\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsNewLoss' })();\r\n\r\n  const dispatch = useDispatch();\r\n  const lossInformation = useSelector(selectLossId);\r\n  const claimData = useSelector(selectClaimIdUnderProgress);\r\n  const selectClaimID = get(claimData, 'claimID') || '';\r\n  const claimsInformation = useSelector(selectClaimIdFromGrid);\r\n  const editClaimId = get(claimsInformation, 'claimID') || '';\r\n  const [policyRef, setPolicyRef] = useState(false);\r\n  const [activeStep, setActiveStep] = useState(currentStep);\r\n  const isAllStepsCompleted = activeStep === steps?.length;\r\n  const lastStep = activeStep === steps?.length - 1;\r\n  const stepperLabel = [{ id: 0, label: utils.string.t('claims.stepperLabel.registerLoss') }, { id: 1, label: utils.string.t('claims.stepperLabel.searchPolicy') }, { id: 2, label: utils.string.t('claims.stepperLabel.enterClaimInformation') }, { id: 3, label: utils.string.t('claims.stepperLabel.previewInfo') }, { id: 4, label: utils.string.t('claims.stepperLabel.acknowledgement') }];\r\n  const [activeStepperLabel, setActiveStepperLabel] = useState(stepperLabel.find((label) => label.id === 0)?.label);\r\n\r\n  let currencies = useSelector(selectSettlementCurrency);\r\n  currencies = currencies.map((currency) => ({ ...currency, name: `${currency.id} - ${currency.name}` }));\r\n  const isSectionEnabled = useSelector(selectSectionEnabledUG);\r\n  const allBEAdjusters = useSelector(selectBEAdjusterList);\r\n  const selectedBeAdjuster = useSelector(selectSelectedBEAdjusterList);\r\n  const existingClaimInfo = useSelector(selectClaimsInformation);\r\n  const savedClaimInfo = useSelector(selectClaimIdUnderProgress);\r\n  const referralValues = useSelector(selectReferralValues);\r\n  const referralResponse = useSelector(selectReferralResponse);\r\n  const claimBordereauPeriods = useSelector(selectClaimBordereauPeriods);\r\n  const [resetKey, setResetKey] = useState();\r\n  const [uwResetKey, setUWResetKey] = useState();\r\n  const [isBordereauChecked, setBordereauChecked] = useState(false);\r\n  const checkBordereauValue = (claimBordereauPeriods) =>\r\n  claimBordereauPeriods.find((bp) => bp.name === existingClaimInfo?.bordereauPeriod) || null;\r\n\r\n  useEffect(() => {\r\n    setActiveStepperLabel(stepperLabel.find((stepperLbl) => stepperLbl.id === activeStep)?.label)\r\n  }, [activeStep]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n\r\n\r\n  useEffect(() => {\r\n    dispatch(getSettlementCurrency());\r\n    dispatch(getClaimBordereauPeriods());\r\n    setResetKey(new Date().getTime());\r\n  }, []); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  useEffect(() => {\r\n    \r\n    if (existingClaimInfo?.bordereauPeriod) {\r\n      setBordereauChecked(true);\r\n    }\r\n    if (policyData?.length > 0) setUWResetKey(new Date().getTime());\r\n  }, [isSectionEnabled, existingClaimInfo?.bordereauPeriod]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  const isComplexFlag = allClaimDetails?.isComplex !== 0;\r\n  const isBordereauFlag = allClaimDetails?.isBordereau === 1;\r\n  const existingClaimOrPolicyCurrency =\r\n    existingClaimInfo?.settlementCurrencyCode || savedClaimInfo?.settlementCurrencyCode || policyInformation?.originalCurrency;\r\n  const selectedCurrency = currencies.find((c) => c.id === existingClaimOrPolicyCurrency);\r\n  const lossQualifierValue = (lossQualifiers || []).find(\r\n    (l) => l.id?.toString() === (existingClaimInfo?.lossQualifierID?.toString() || savedClaimInfo?.lossQualifierID?.toString())\r\n  );\r\n  const complexityDefaultValue =\r\n    existingClaimInfo?.complexityBasis && complexityValues?.find((item) => item.complexityRulesValue === existingClaimInfo.complexityBasis);\r\n\r\n  const complexityValue =\r\n    savedClaimInfo?.complexityValueID && complexityValues?.find((item) => item.complexityRulesID === savedClaimInfo.complexityValueID);\r\n\r\n  const referralDefaultValue =\r\n    existingClaimInfo?.referralValue && referralValues?.find((item) => item.complexityRulesValue === existingClaimInfo.referralValue);\r\n\r\n  const referralValue =\r\n    savedClaimInfo?.referralValueID && referralValues?.find((item) => item.complexityRulesID === savedClaimInfo.referralValueID);\r\n\r\n  const referralDefaultResponse =\r\n    existingClaimInfo?.referralResponseDescription &&\r\n    referralResponse?.find((item) => item.description === existingClaimInfo.referralResponseDescription);\r\n\r\n  const referralResponseData =\r\n    savedClaimInfo?.referralResponseID && referralResponse?.find((item) => item.id === savedClaimInfo.referralResponseID?.toString());\r\n\r\n  const sectionAllOption =\r\n    policyInformation?.policyType === constants.CLAIM_SECTION_ENABLED_UG[0]\r\n      ? []\r\n      : [{ id: constants.CLAIM_POLICY_SECTION_DEFAULT, name: utils.string.t('app.all'), description: null }];\r\n\r\n  const policyData = [...sectionAllOption, ...(utils.generic.isValidArray(policySections, true) ? policySections : [])];\r\n\r\n  const dateDisabledLossQualifiers = lossQualifiers\r\n    .filter((item) => {\r\n      return constants.CLAIM_LOSS_DATE_DISABLED_QUALIFIERS.find((itr) => itr === item.name);\r\n    })\r\n    .map((item) => item.id);\r\n\r\n  const hasClaimRef = Boolean(savedClaimInfo?.claimReference) || Boolean(existingClaimInfo?.claimReference);\r\n\r\n\r\n\r\n  const handleNext = async (values) => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    if (activeStep === 0) {\r\n      await dispatch(!lossInformation?.lossDetailID ? postLossInformation(values) : postEditLossInformation(values));\r\n    }\r\n    if (activeStep === 2 && !selectClaimID) {\r\n      if (editClaimId) {\r\n        await dispatch(postEditClaimDetailsInformation(values));\r\n      } else {\r\n        await dispatch(postClaimDetailsInformation(values));\r\n      }\r\n    }\r\n\r\n    if (activeStep === 2 && selectClaimID) {\r\n      await dispatch(postEditClaimDetailsInformation(values));\r\n    }\r\n    setActiveStep((prevActiveStep) => prevActiveStep + 1);\r\n  };\r\n\r\n  const handleBack = () => {\r\n    utils.app.scrollTo(0, '#layout-main');\r\n    setActiveStep((prevActiveStep) => prevActiveStep - 1);\r\n  };\r\n\r\n  const handleFinish = () => {\r\n    handleFinishNewLoss();\r\n  };\r\n\r\n  const handleAddNewClaimInLoss = () => {\r\n    dispatch(addNewClaimUnderCurrentLoss());\r\n    setActiveStep(1);\r\n  };\r\n\r\n  const stepContent = (index) => {\r\n    switch (index) {\r\n      case 0:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_LOSS}\r\n          />\r\n        );\r\n      case 1:\r\n        return (\r\n          <ClaimsPolicySearch\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n      case 2:\r\n        return (\r\n          <EnterClaimInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewClaim}\r\n            validation={validation}\r\n            setValidation={setValidation}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            context={constants.DMS_CONTEXT_CLAIM}\r\n          />\r\n        );\r\n      case 3:\r\n        return (\r\n          <ClaimsPreviewInformation\r\n            policyRef={policyRef}\r\n            setPolicyRef={setPolicyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n          />\r\n        );\r\n      case 4:\r\n        return (\r\n          <ClaimsAcknowledgement\r\n            claim={claim}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleFinish={handleFinish}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n            next={true}\r\n            handleClaim={handleAddNewClaimInLoss}\r\n          />\r\n        );\r\n      default:\r\n        return (\r\n          <ClaimsEnterLossInformation\r\n            policyRef={policyRef}\r\n            isAllStepsCompleted={isAllStepsCompleted}\r\n            handleCancel={handleCancel}\r\n            handleFinish={handleFinish}\r\n            handleNext={handleNext}\r\n            handleBack={handleBack}\r\n            handleSave={handleSaveNewLoss}\r\n            activeStep={activeStep}\r\n            lastStep={lastStep}\r\n          />\r\n        );\r\n    }\r\n  };\r\n\r\n  return (\r\n    <>\r\n      <Layout testid=\"claims-register-new-loss\">\r\n        <Layout main>\r\n          <SectionHeader\r\n            title={<Translate label={activeStepperLabel} />}\r\n            icon={NoteAddIcon}\r\n            testid=\"claims-register-new-loss-header\"\r\n          />\r\n          <HorizontalLinearStepper\r\n            steps={steps}\r\n            stepContent={stepContent}\r\n            activeStep={activeStep}\r\n            setActiveStep={setActiveStep}\r\n            showStepConnector\r\n            handleCancel={handleCancel}\r\n            handleSave={handleSaveNewLoss}\r\n            nestedClasses={{ stepper: classes.stepper }}\r\n          />\r\n        </Layout>\r\n      </Layout>\r\n      {isNavigationAllowed && (\r\n        <PreventNavigation\r\n          dirty={true}\r\n          allowedUrls={isNavigationAllowed ? [config.routes.claimsFNOL.root] : [config.routes.claimsFNOL.newLoss]}\r\n          title={'status.alert'}\r\n          subtitle={''}\r\n          hint={'navigation.title'}\r\n          confirmLabel={'form.options.yesNoNa.yes'}\r\n          cancelLabel={'form.options.yesNoNa.no'}\r\n          maxWidth={'xs'}\r\n          onSubmitCallBack={() => {\r\n            dispatch(resetClaimData());\r\n          }}\r\n        />\r\n      )}\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}