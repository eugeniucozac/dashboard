{"ast":null,"code":"var _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskSummaryActions\\\\TaskSummaryActions.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types'; // app\n\nimport styles from './TaskSummaryActions.styles';\nimport { Button } from 'components';\nimport * as utils from 'utils';\nimport { TASK_TYPES_NATIVE, TASK_TAB_COMPLETED_STATUS } from 'consts'; // mui\n\nimport { makeStyles, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskSummaryActionsView.propTypes = {\n  isReAssignEnabled: PropTypes.bool.isRequired,\n  selectedTask: PropTypes.object,\n  isRFIEnabled: PropTypes.bool.isRequired,\n  handlers: PropTypes.shape({\n    reAssign: PropTypes.func.isRequired,\n    updateTaskPriority: PropTypes.func.isRequired,\n    createSanctionsCheck: PropTypes.func.isRequired,\n    handleCreateRFITaskLevel: PropTypes.func.isRequired,\n    handleEditAdhoc: PropTypes.func.isRequired\n  }).isRequired\n};\nexport function TaskSummaryActionsView(_ref) {\n  var isReAssignEnabled = _ref.isReAssignEnabled,\n      isRFIEnabled = _ref.isRFIEnabled,\n      handlers = _ref.handlers,\n      selectedTask = _ref.selectedTask;\n  var classes = makeStyles(styles, {\n    name: 'TaskSummaryActions'\n  })();\n  var isTaskClosed = (selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.status) === TASK_TAB_COMPLETED_STATUS;\n  return /*#__PURE__*/_jsxDEV(Grid, {\n    container: true,\n    className: classes.taskActionsWrapper,\n    children: [/*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      className: classes.taskActionsRow,\n      children: [/*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        disabled: isReAssignEnabled,\n        text: utils.string.t('app.reAssign'),\n        onClick: handlers.reAssign\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 33,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        text: utils.string.t('claims.processing.summary.buttons.setPriority'),\n        onClick: handlers.updateTaskPriority\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 40,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        disabled: !isRFIEnabled,\n        text: utils.string.t('claims.processing.taskFunction.editTask'),\n        onClick: handlers.handleEditAdhoc\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 46,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 32,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(Grid, {\n      item: true,\n      xs: 12,\n      className: classes.taskActionsRow,\n      children: [(selectedTask === null || selectedTask === void 0 ? void 0 : selectedTask.taskCategory) === TASK_TYPES_NATIVE && !isTaskClosed && /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        text: utils.string.t('claims.processing.summary.buttons.createSanctionsChecks'),\n        onClick: handlers.createSanctionsCheck\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 11\n      }, this), /*#__PURE__*/_jsxDEV(Button, {\n        color: \"primary\",\n        variant: \"outlined\",\n        disabled: !isRFIEnabled,\n        text: utils.string.t('claims.processing.summary.buttons.createNewRFI'),\n        onClick: handlers.handleCreateRFITaskLevel\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 63,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 54,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 31,\n    columnNumber: 5\n  }, this);\n}\n_c = TaskSummaryActionsView;\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSummaryActionsView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskSummaryActions/TaskSummaryActions.view.js"],"names":["React","PropTypes","styles","Button","utils","TASK_TYPES_NATIVE","TASK_TAB_COMPLETED_STATUS","makeStyles","Grid","TaskSummaryActionsView","propTypes","isReAssignEnabled","bool","isRequired","selectedTask","object","isRFIEnabled","handlers","shape","reAssign","func","updateTaskPriority","createSanctionsCheck","handleCreateRFITaskLevel","handleEditAdhoc","classes","name","isTaskClosed","status","taskActionsWrapper","taskActionsRow","string","t","taskCategory"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\n// app\r\nimport styles from './TaskSummaryActions.styles';\r\nimport { Button } from 'components';\r\nimport * as utils from 'utils';\r\nimport { TASK_TYPES_NATIVE, TASK_TAB_COMPLETED_STATUS } from 'consts';\r\n\r\n// mui\r\nimport { makeStyles, Grid } from '@material-ui/core';\r\n\r\nTaskSummaryActionsView.propTypes = {\r\n  isReAssignEnabled: PropTypes.bool.isRequired,\r\n  selectedTask: PropTypes.object,\r\n  isRFIEnabled: PropTypes.bool.isRequired,\r\n  handlers: PropTypes.shape({\r\n    reAssign: PropTypes.func.isRequired,\r\n    updateTaskPriority: PropTypes.func.isRequired,\r\n    createSanctionsCheck: PropTypes.func.isRequired,\r\n    handleCreateRFITaskLevel: PropTypes.func.isRequired,\r\n    handleEditAdhoc: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n};\r\n\r\nexport function TaskSummaryActionsView({ isReAssignEnabled, isRFIEnabled, handlers, selectedTask }) {\r\n  const classes = makeStyles(styles, { name: 'TaskSummaryActions' })();\r\n  const isTaskClosed = selectedTask?.status === TASK_TAB_COMPLETED_STATUS;\r\n\r\n  return (\r\n    <Grid container className={classes.taskActionsWrapper}>\r\n      <Grid item className={classes.taskActionsRow}>\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={isReAssignEnabled}\r\n          text={utils.string.t('app.reAssign')}\r\n          onClick={handlers.reAssign}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          text={utils.string.t('claims.processing.summary.buttons.setPriority')}\r\n          onClick={handlers.updateTaskPriority}\r\n        />\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!isRFIEnabled}\r\n          text={utils.string.t('claims.processing.taskFunction.editTask')}\r\n          onClick={handlers.handleEditAdhoc}\r\n        />\r\n      </Grid>\r\n      <Grid item xs={12} className={classes.taskActionsRow}>\r\n        {selectedTask?.taskCategory === TASK_TYPES_NATIVE && !isTaskClosed && (\r\n          <Button\r\n            color=\"primary\"\r\n            variant=\"outlined\"\r\n            text={utils.string.t('claims.processing.summary.buttons.createSanctionsChecks')}\r\n            onClick={handlers.createSanctionsCheck}\r\n          />\r\n        )}\r\n        <Button\r\n          color=\"primary\"\r\n          variant=\"outlined\"\r\n          disabled={!isRFIEnabled}\r\n          text={utils.string.t('claims.processing.summary.buttons.createNewRFI')}\r\n          onClick={handlers.handleCreateRFITaskLevel}\r\n        />\r\n      </Grid>\r\n    </Grid>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}