{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.view.js\",\n    _s = $RefreshSig$();\n\nimport React, { useEffect } from 'react';\nimport PropTypes from 'prop-types';\nimport { useDispatch } from 'react-redux';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup'; // app\n\nimport styles from './TaskSidebarNotes.styles';\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormLabel, FormText, FormHidden, Link } from 'components';\nimport { NOTES_API_SUCCESS_STATUS } from 'consts';\nimport { addTaskNote } from 'stores';\nimport * as utils from 'utils';\nimport config from 'config'; //mui\n\nimport { makeStyles, Box } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nTaskSidebarNotesView.propTypes = {\n  fields: PropTypes.array.isRequired,\n  task: PropTypes.object.isRequired,\n  allowNavigation: PropTypes.func.isRequired\n};\nexport default function TaskSidebarNotesView(_ref) {\n  _s();\n\n  var fields = _ref.fields,\n      task = _ref.task,\n      allowNavigation = _ref.allowNavigation;\n  var classes = makeStyles(styles, {\n    name: 'TaskSidebarNotes'\n  })();\n  var defaultValues = utils.form.getInitialValues(fields);\n  var validationSchema = utils.form.getValidationSchema(fields);\n  var dispatch = useDispatch();\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      control = _useForm.control,\n      reset = _useForm.reset,\n      errors = _useForm.errors,\n      handleSubmit = _useForm.handleSubmit,\n      formState = _useForm.formState,\n      watch = _useForm.watch;\n\n  var addNotes = watch('addNotes');\n\n  var handleSaveNote = function handleSaveNote(values) {\n    var formValues = {\n      details: values === null || values === void 0 ? void 0 : values.addNotes\n    };\n    var taskObj = {\n      caseIncidentID: values === null || values === void 0 ? void 0 : values.caseIncidentID,\n      taskId: values === null || values === void 0 ? void 0 : values.taskId\n    };\n    dispatch(addTaskNote(formValues, taskObj)).then(function (response) {\n      if ((response === null || response === void 0 ? void 0 : response.status) === NOTES_API_SUCCESS_STATUS) {\n        reset('', 'addNotes');\n      }\n    });\n  };\n\n  useEffect(function () {\n    var isNotesDirty = addNotes !== '';\n\n    if (utils.generic.isFunction(allowNavigation)) {\n      allowNavigation(!isNotesDirty);\n    }\n  }, [addNotes]); // eslint-disable-line react-hooks/exhaustive-deps\n\n  return /*#__PURE__*/_jsxDEV(FormContainer, {\n    onSubmit: handleSubmit,\n    nestedClasses: {\n      root: classes.form\n    },\n    \"data-testid\": \"task-sidebar-notes\",\n    children: [/*#__PURE__*/_jsxDEV(FormFields, {\n      children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n        container: true,\n        spacing: 2,\n        alignItems: \"flex-end\",\n        children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 7,\n          children: /*#__PURE__*/_jsxDEV(FormLabel, {\n            label: utils.string.t('claims.notes.addNotes')\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 61,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 60,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(FormGrid, {\n          item: true,\n          xs: 5,\n          children: /*#__PURE__*/_jsxDEV(Box, {\n            textAlign: \"right\",\n            children: /*#__PURE__*/_jsxDEV(Link, {\n              to: \"\".concat(config.routes.claimsProcessing.task, \"/\").concat(task === null || task === void 0 ? void 0 : task.taskRef, \"/notes\"),\n              color: \"secondary\",\n              text: utils.string.t('claims.task.summary.viewNotes')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 65,\n              columnNumber: 15\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 64,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 63,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 59,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(Box, {\n        mt: -2,\n        children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'addNotes', control, errors)), void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 74,\n          columnNumber: 11\n        }, this)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 73,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'caseIncidentID', control)), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 76,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(FormHidden, _objectSpread({}, utils.form.getFieldProps(fields, 'taskId', control)), void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 77,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 58,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(FormActions, {\n      nestedClasses: {\n        actions: classes.submit\n      },\n      align: \"right\",\n      children: /*#__PURE__*/_jsxDEV(Button, {\n        text: utils.string.t('app.save'),\n        type: \"submit\",\n        color: \"primary\",\n        size: \"medium\",\n        disabled: formState.isSubmitting || !formState.isDirty,\n        onClick: handleSubmit(handleSaveNote)\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 80,\n        columnNumber: 9\n      }, this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 79,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 57,\n    columnNumber: 5\n  }, this);\n}\n\n_s(TaskSidebarNotesView, \"LK/d/SEg942to4Y0tJ2mHL6zjiU=\", false, function () {\n  return [useDispatch, useForm];\n});\n\n_c = TaskSidebarNotesView;\nTaskSidebarNotesView.displayName = \"TaskSidebarNotesView\";\nTaskSidebarNotesView.__docgenInfo = {\n  \"description\": \"\",\n  \"methods\": [],\n  \"displayName\": \"TaskSidebarNotesView\",\n  \"props\": {\n    \"fields\": {\n      \"type\": {\n        \"name\": \"array\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"task\": {\n      \"type\": {\n        \"name\": \"object\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    },\n    \"allowNavigation\": {\n      \"type\": {\n        \"name\": \"func\"\n      },\n      \"required\": true,\n      \"description\": \"\"\n    }\n  }\n};\n\nif (typeof STORYBOOK_REACT_CLASSES !== \"undefined\") {\n  STORYBOOK_REACT_CLASSES[\"src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.view.js\"] = {\n    name: \"TaskSidebarNotesView\",\n    docgenInfo: TaskSidebarNotesView.__docgenInfo,\n    path: \"src\\\\modules\\\\TaskSidebarNotes\\\\TaskSidebarNotes.view.js\"\n  };\n}\n\nvar _c;\n\n$RefreshReg$(_c, \"TaskSidebarNotesView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/TaskSidebarNotes/TaskSidebarNotes.view.js"],"names":["React","useEffect","PropTypes","useDispatch","useForm","yupResolver","styles","Button","FormActions","FormContainer","FormFields","FormGrid","FormLabel","FormText","FormHidden","Link","NOTES_API_SUCCESS_STATUS","addTaskNote","utils","config","makeStyles","Box","TaskSidebarNotesView","propTypes","fields","array","isRequired","task","object","allowNavigation","func","classes","name","defaultValues","form","getInitialValues","validationSchema","getValidationSchema","dispatch","resolver","control","reset","errors","handleSubmit","formState","watch","addNotes","handleSaveNote","values","formValues","details","taskObj","caseIncidentID","taskId","then","response","status","isNotesDirty","generic","isFunction","root","string","t","routes","claimsProcessing","taskRef","getFieldProps","actions","submit","isSubmitting","isDirty"],"mappings":"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","sourcesContent":["import React, { useEffect } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useDispatch } from 'react-redux';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\n\r\n// app\r\nimport styles from './TaskSidebarNotes.styles';\r\nimport { Button, FormActions, FormContainer, FormFields, FormGrid, FormLabel, FormText, FormHidden, Link } from 'components';\r\nimport { NOTES_API_SUCCESS_STATUS } from 'consts';\r\nimport { addTaskNote } from 'stores';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\n\r\n//mui\r\nimport { makeStyles, Box } from '@material-ui/core';\r\n\r\nTaskSidebarNotesView.propTypes = {\r\n  fields: PropTypes.array.isRequired,\r\n  task: PropTypes.object.isRequired,\r\n  allowNavigation: PropTypes.func.isRequired,\r\n};\r\n\r\nexport default function TaskSidebarNotesView({ fields, task, allowNavigation }) {\r\n  const classes = makeStyles(styles, { name: 'TaskSidebarNotes' })();\r\n  const defaultValues = utils.form.getInitialValues(fields);\r\n  const validationSchema = utils.form.getValidationSchema(fields);\r\n  const dispatch = useDispatch();\r\n\r\n  const { control, reset, errors, handleSubmit, formState, watch } = useForm({\r\n    defaultValues,\r\n    ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n  });\r\n\r\n  const addNotes = watch('addNotes');\r\n\r\n  const handleSaveNote = (values) => {\r\n    const formValues = { details: values?.addNotes };\r\n    const taskObj = { caseIncidentID: values?.caseIncidentID, taskId: values?.taskId };\r\n\r\n    dispatch(addTaskNote(formValues, taskObj)).then((response) => {\r\n      if (response?.status === NOTES_API_SUCCESS_STATUS) {\r\n        reset('', 'addNotes');\r\n      }\r\n    });\r\n  };\r\n\r\n  useEffect(() => {\r\n    const isNotesDirty = addNotes !== '';\r\n\r\n    if (utils.generic.isFunction(allowNavigation)) {\r\n      allowNavigation(!isNotesDirty);\r\n    }\r\n  }, [addNotes]); // eslint-disable-line react-hooks/exhaustive-deps\r\n\r\n  return (\r\n    <FormContainer onSubmit={handleSubmit} nestedClasses={{ root: classes.form }} data-testid=\"task-sidebar-notes\">\r\n      <FormFields>\r\n        <FormGrid container spacing={2} alignItems=\"flex-end\">\r\n          <FormGrid item xs={7}>\r\n            <FormLabel label={utils.string.t('claims.notes.addNotes')} />\r\n          </FormGrid>\r\n          <FormGrid item xs={5}>\r\n            <Box textAlign=\"right\">\r\n              <Link\r\n                to={`${config.routes.claimsProcessing.task}/${task?.taskRef}/notes`}\r\n                color=\"secondary\"\r\n                text={utils.string.t('claims.task.summary.viewNotes')}\r\n              />\r\n            </Box>\r\n          </FormGrid>\r\n        </FormGrid>\r\n        <Box mt={-2}>\r\n          <FormText {...utils.form.getFieldProps(fields, 'addNotes', control, errors)} />\r\n        </Box>\r\n        <FormHidden {...utils.form.getFieldProps(fields, 'caseIncidentID', control)} />\r\n        <FormHidden {...utils.form.getFieldProps(fields, 'taskId', control)} />\r\n      </FormFields>\r\n      <FormActions nestedClasses={{ actions: classes.submit }} align=\"right\">\r\n        <Button\r\n          text={utils.string.t('app.save')}\r\n          type=\"submit\"\r\n          color=\"primary\"\r\n          size=\"medium\"\r\n          disabled={formState.isSubmitting || !formState.isDirty}\r\n          onClick={handleSubmit(handleSaveNote)}\r\n        />\r\n      </FormActions>\r\n    </FormContainer>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}