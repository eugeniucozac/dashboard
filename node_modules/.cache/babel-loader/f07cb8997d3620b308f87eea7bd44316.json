{"ast":null,"code":"import _defineProperty from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/defineProperty\";\nimport _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nimport _objectWithoutProperties from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectWithoutProperties\";\n\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ProcessingInstructionsChecklist\\\\ProcessingInstructionsChecklist.view.js\",\n    _this = this,\n    _s = $RefreshSig$();\n\nimport React, { forwardRef } from 'react';\nimport PropTypes from 'prop-types';\nimport { useForm } from 'react-hook-form';\nimport { yupResolver } from '@hookform/resolvers/yup';\nimport classnames from 'classnames';\nimport isEqual from 'lodash/isEqual';\nimport camelCase from 'lodash/camelCase'; //app\n\nimport styles from './ProcessingInstructionsChecklist.styles';\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\nimport ProcessingInstructionsRiskRefTabTable from '../ProcessingInstructionsRiskRefTabTable/ProcessingInstructionsRiskRefTabTable';\nimport { Button, DynamicTable, FormContainer, FormFields, FormGrid, FormText, Info, Tabs, SaveBar, PreventNavigation, FormSelect, Sticky } from 'components';\nimport * as utils from 'utils';\nimport config from 'config';\nimport * as constants from 'consts';\nimport { useMedia } from 'hooks'; // mui\n\nimport { Box, Typography, useTheme, makeStyles, Divider } from '@material-ui/core';\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nvar ProcessingInstructionsChecklistView = /*#__PURE__*/forwardRef(_c = _s(function (_ref, ref) {\n  var _schemaData$rows;\n\n  _s();\n\n  var instruction = _ref.instruction,\n      leadRef = _ref.leadRef,\n      defaultValues = _ref.defaultValues,\n      columns = _ref.columns,\n      tabs = _ref.tabs,\n      selectedTab = _ref.selectedTab,\n      fields = _ref.fields,\n      schemaData = _ref.schemaData,\n      isDocCountLoaded = _ref.isDocCountLoaded,\n      isFdo = _ref.isFdo,\n      isReadOnly = _ref.isReadOnly,\n      isEditable = _ref.isEditable,\n      isCheckboxesEditable = _ref.isCheckboxesEditable,\n      resetKey = _ref.resetKey,\n      handlers = _ref.handlers;\n  var classes = makeStyles(styles, {\n    name: 'ProcessingInstructionsChecklist'\n  })();\n  var classesParent = makeStyles(stylesParent)();\n  var media = useMedia();\n  var theme = useTheme();\n  var validationSchema = utils.form.getValidationSchema(fields);\n\n  var _useForm = useForm(_objectSpread({\n    defaultValues: defaultValues\n  }, validationSchema && {\n    resolver: yupResolver(validationSchema)\n  })),\n      reset = _useForm.reset,\n      handleSubmit = _useForm.handleSubmit,\n      register = _useForm.register,\n      setValue = _useForm.setValue,\n      watch = _useForm.watch,\n      getValues = _useForm.getValues,\n      formState = _useForm.formState,\n      formProps = _objectWithoutProperties(_useForm, [\"reset\", \"handleSubmit\", \"register\", \"setValue\", \"watch\", \"getValues\", \"formState\"]);\n\n  var control = formProps.control,\n      errors = formProps.errors;\n  var formValues = watch();\n  var isPageEdited = !isEqual(defaultValues, formValues);\n  var rows = schemaData === null || schemaData === void 0 ? void 0 : (_schemaData$rows = schemaData.rows) === null || _schemaData$rows === void 0 ? void 0 : _schemaData$rows.map(function (row) {\n    return _objectSpread(_objectSpread({}, row), {}, {\n      cells: row.cells.map(function (cell) {\n        switch (cell.columnName) {\n          case 'signedDate':\n            return _objectSpread(_objectSpread({}, cell), {}, {\n              disabled: isReadOnly\n            });\n\n          case 'accountHandler':\n            return _objectSpread(_objectSpread({}, cell), {}, {\n              disabled: isReadOnly,\n              cellProps: _objectSpread(_objectSpread({}, cell.cellProps), {}, {\n                center: true\n              })\n            });\n\n          case 'authorisedSignatory':\n            return _objectSpread(_objectSpread({}, cell), {}, {\n              disabled: !isCheckboxesEditable,\n              cellProps: _objectSpread(_objectSpread({}, cell.cellProps), {}, {\n                center: true\n              })\n            });\n\n          default:\n            return cell;\n        }\n      })\n    });\n  });\n\n  var onValid = function onValid() {\n    handlers.setTabs(tabs);\n    handlers.next(0, {\n      isNext: !isPageEdited,\n      isSave: false,\n      isSaveNext: isPageEdited\n    });\n  };\n\n  var onInvalid = function onInvalid(data) {\n    var _Object$keys;\n\n    handlers.next((_Object$keys = Object.keys(data)) === null || _Object$keys === void 0 ? void 0 : _Object$keys.length, {\n      isNext: !isPageEdited,\n      isSave: false,\n      isSaveNext: isPageEdited\n    });\n  };\n\n  var stickyParent = media.tabletUp ? utils.app.getElement('#content') : null;\n  var stickyOffset = media.tabletUp ? 0 : theme.mixins.header.height;\n  return /*#__PURE__*/_jsxDEV(Box, {\n    width: 1,\n    mt: 5,\n    \"data-testid\": \"processing-instructions-checklist\",\n    children: [/*#__PURE__*/_jsxDEV(Sticky, {\n      parent: stickyParent,\n      top: stickyOffset,\n      nestedClasses: {\n        root: classes.sticky,\n        rootSticky: classes.stickyActive\n      },\n      children: /*#__PURE__*/_jsxDEV(Tabs, {\n        tabs: tabs,\n        overrideTab: selectedTab,\n        onChange: handlers.toggleTab\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 118,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 117,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(FormContainer, {\n      ref: ref,\n      resetFunc: reset,\n      values: formValues,\n      autoComplete: \"off\",\n      \"data-testid\": \"form-processing-instructions-checklist\",\n      children: /*#__PURE__*/_jsxDEV(FormFields, {\n        children: [/*#__PURE__*/_jsxDEV(\"div\", {\n          className: classnames(_defineProperty({}, classes.hideContent, !Boolean(selectedTab === 'general'))),\n          children: [/*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            pb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('processingInstructions.leadRiskRef')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 131,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 132,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 2,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('processingInstructions.leadRiskRef'),\n                    description: leadRef ? leadRef.riskRefId : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 136,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 135,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('app.department'),\n                    description: leadRef ? leadRef.departmentName : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 143,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 142,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('app.reInsured'),\n                    description: leadRef ? leadRef.assuredName : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 150,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 149,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('app.yearOfAccounts'),\n                    description: leadRef ? leadRef.yoa : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 157,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 156,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('app.inceptionDate'),\n                    description: leadRef ? leadRef.inceptionDate : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 164,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 163,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(Info, {\n                    title: utils.string.t('app.expiryDate'),\n                    description: leadRef ? leadRef.expiryDate : '-',\n                    nestedClasses: {\n                      root: classes.info\n                    }\n                  }, void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 171,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 170,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 134,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 133,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 130,\n            columnNumber: 15\n          }, _this), isFdo && /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            pb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 183,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'businessType', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 187,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 186,\n                  columnNumber: 23\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'facilityType', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 190,\n                    columnNumber: 25\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 189,\n                  columnNumber: 23\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 185,\n                columnNumber: 21\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 184,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 182,\n            columnNumber: 17\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            pb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('app.client')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 198,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 199,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                spacing: 4,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'invoicingClient', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 203,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 202,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'contactName', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 206,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 205,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'clientEmail', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 209,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 208,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'eocInvoiceContactName', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 212,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 211,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  md: 3,\n                  children: /*#__PURE__*/_jsxDEV(FormText, _objectSpread({}, utils.form.getFieldProps(fields, 'eocInvoiceMail', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 215,\n                    columnNumber: 23\n                  }, _this)\n                }, void 0, false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 214,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 201,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 200,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 197,\n            columnNumber: 15\n          }, _this), /*#__PURE__*/_jsxDEV(Box, {\n            pt: 2,\n            pb: 4,\n            children: [/*#__PURE__*/_jsxDEV(Typography, {\n              className: classes.subTitle,\n              children: utils.string.t('app.broking')\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 222,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Divider, {}, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 223,\n              columnNumber: 17\n            }, _this), /*#__PURE__*/_jsxDEV(Box, {\n              pt: 4,\n              children: /*#__PURE__*/_jsxDEV(FormGrid, {\n                container: true,\n                children: [/*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'producingBroker', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 227,\n                    columnNumber: 23\n                  }, _this)\n                }, \"producingBroker-\".concat(resetKey), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 226,\n                  columnNumber: 21\n                }, _this), /*#__PURE__*/_jsxDEV(FormGrid, {\n                  item: true,\n                  xs: 12,\n                  sm: 6,\n                  children: /*#__PURE__*/_jsxDEV(FormSelect, _objectSpread({}, utils.form.getFieldProps(fields, 'accountExecutive', control, errors)), void 0, false, {\n                    fileName: _jsxFileName,\n                    lineNumber: 230,\n                    columnNumber: 23\n                  }, _this)\n                }, \"accountExecutive-\".concat(resetKey), false, {\n                  fileName: _jsxFileName,\n                  lineNumber: 229,\n                  columnNumber: 21\n                }, _this)]\n              }, void 0, true, {\n                fileName: _jsxFileName,\n                lineNumber: 225,\n                columnNumber: 19\n              }, _this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 224,\n              columnNumber: 17\n            }, _this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 221,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 129,\n          columnNumber: 13\n        }, _this), ['pre-placing', 'mrc', 'other-details'].map(function (item) {\n          var key = camelCase(item);\n          return /*#__PURE__*/_jsxDEV(\"div\", {\n            className: classnames(_defineProperty({}, classes.hideContent, selectedTab !== item)),\n            children: /*#__PURE__*/_jsxDEV(DynamicTable, {\n              formProps: formProps,\n              rows: rows === null || rows === void 0 ? void 0 : rows.filter(function (row) {\n                return row.tabKey === key;\n              }),\n              columnHeaders: columns\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 242,\n              columnNumber: 19\n            }, _this)\n          }, \"tabbed-content-\".concat(key), false, {\n            fileName: _jsxFileName,\n            lineNumber: 241,\n            columnNumber: 17\n          }, _this);\n        }), selectedTab === 'risk-references' && /*#__PURE__*/_jsxDEV(Box, {\n          children: /*#__PURE__*/_jsxDEV(ProcessingInstructionsRiskRefTabTable, {\n            instruction: instruction,\n            documentTypeKey: constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 249,\n            columnNumber: 17\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 248,\n          columnNumber: 15\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 128,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 121,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(SaveBar, {\n      show: true,\n      nestedClasses: {\n        root: classesParent.saveBar\n      },\n      children: /*#__PURE__*/_jsxDEV(Box, {\n        display: \"flex\",\n        justifyContent: \"space-between\",\n        children: [/*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"left\",\n          children: /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.back'),\n            onClick: handlers.back,\n            disabled: isPageEdited,\n            size: \"small\",\n            color: \"primary\",\n            variant: \"outlined\",\n            icon: NavigateBeforeIcon,\n            iconPosition: \"left\",\n            nestedClasses: {\n              btn: classesParent.button\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 261,\n            columnNumber: 15\n          }, _this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 260,\n          columnNumber: 13\n        }, _this), /*#__PURE__*/_jsxDEV(Box, {\n          flex: \"1 1 auto\",\n          textAlign: \"right\",\n          children: [isPageEdited && (isEditable || isCheckboxesEditable) && /*#__PURE__*/_jsxDEV(_Fragment, {\n            children: [/*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.cancel'),\n              onClick: handlers.cancel,\n              color: \"primary\",\n              size: \"small\",\n              variant: \"text\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 276,\n              columnNumber: 19\n            }, _this), /*#__PURE__*/_jsxDEV(Button, {\n              text: utils.string.t('app.save'),\n              onClick: function onClick() {\n                return handlers.save({\n                  isNext: false,\n                  isSave: true,\n                  isSaveNext: false\n                });\n              },\n              color: \"secondary\",\n              size: \"small\",\n              variant: \"outlined\",\n              nestedClasses: {\n                btn: classesParent.button\n              }\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 284,\n              columnNumber: 19\n            }, _this)]\n          }, void 0, true), /*#__PURE__*/_jsxDEV(Button, {\n            text: utils.string.t('app.next'),\n            onClick: handleSubmit(onValid, onInvalid),\n            disabled: !isDocCountLoaded,\n            color: \"primary\",\n            size: \"small\",\n            type: \"submit\",\n            icon: NavigateNextIcon,\n            iconPosition: \"right\",\n            nestedClasses: {\n              btn: classesParent.button\n            }\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 294,\n            columnNumber: 15\n          }, _this)]\n        }, void 0, true, {\n          fileName: _jsxFileName,\n          lineNumber: 273,\n          columnNumber: 13\n        }, _this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 259,\n        columnNumber: 11\n      }, _this)\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 258,\n      columnNumber: 9\n    }, _this), /*#__PURE__*/_jsxDEV(PreventNavigation, {\n      dirty: isPageEdited,\n      allowedUrls: [\"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/\"), \"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/checklist/\").concat(constants.GENERAL), \"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/checklist/\").concat(constants.PRE_PLACING), \"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/checklist/\").concat(constants.MRC), \"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/checklist/\").concat(constants.OTHER_DETAILS), \"\".concat(config.routes.processingInstructions.steps, \"/\").concat(instruction === null || instruction === void 0 ? void 0 : instruction.id, \"/checklist/\").concat(constants.RISK_REFERENCES)]\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 309,\n      columnNumber: 9\n    }, _this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 116,\n    columnNumber: 7\n  }, _this);\n}, \"RyKLpKh2VcbBM6kVPGry51ncRUY=\", false, function () {\n  return [useMedia, useTheme, useForm];\n}));\n_c2 = ProcessingInstructionsChecklistView;\nProcessingInstructionsChecklistView.propTypes = {\n  instruction: PropTypes.object.isRequired,\n  leadRef: PropTypes.object.isRequired,\n  defaultValues: PropTypes.object.isRequired,\n  columns: PropTypes.array.isRequired,\n  tabs: PropTypes.array.isRequired,\n  selectedTab: PropTypes.string.isRequired,\n  fields: PropTypes.array.isRequired,\n  schemaData: PropTypes.object.isRequired,\n  isDocCountLoaded: PropTypes.bool,\n  isFdo: PropTypes.bool,\n  isReadOnly: PropTypes.bool,\n  isEditable: PropTypes.bool,\n  isCheckboxesEditable: PropTypes.bool,\n  resetKey: PropTypes.number,\n  handlers: PropTypes.shape({\n    back: PropTypes.func.isRequired,\n    cancel: PropTypes.func.isRequired,\n    save: PropTypes.func.isRequired,\n    next: PropTypes.func.isRequired,\n    toggleTab: PropTypes.func.isRequired,\n    setTabs: PropTypes.func.isRequired\n  })\n};\nexport default ProcessingInstructionsChecklistView;\n\nvar _c, _c2;\n\n$RefreshReg$(_c, \"ProcessingInstructionsChecklistView$forwardRef\");\n$RefreshReg$(_c2, \"ProcessingInstructionsChecklistView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ProcessingInstructionsChecklist/ProcessingInstructionsChecklist.view.js"],"names":["React","forwardRef","PropTypes","useForm","yupResolver","classnames","isEqual","camelCase","styles","stylesParent","ProcessingInstructionsRiskRefTabTable","Button","DynamicTable","FormContainer","FormFields","FormGrid","FormText","Info","Tabs","SaveBar","PreventNavigation","FormSelect","Sticky","utils","config","constants","useMedia","Box","Typography","useTheme","makeStyles","Divider","NavigateNextIcon","NavigateBeforeIcon","ProcessingInstructionsChecklistView","ref","instruction","leadRef","defaultValues","columns","tabs","selectedTab","fields","schemaData","isDocCountLoaded","isFdo","isReadOnly","isEditable","isCheckboxesEditable","resetKey","handlers","classes","name","classesParent","media","theme","validationSchema","form","getValidationSchema","resolver","reset","handleSubmit","register","setValue","watch","getValues","formState","formProps","control","errors","formValues","isPageEdited","rows","map","row","cells","cell","columnName","disabled","cellProps","center","onValid","setTabs","next","isNext","isSave","isSaveNext","onInvalid","data","Object","keys","length","stickyParent","tabletUp","app","getElement","stickyOffset","mixins","header","height","root","sticky","rootSticky","stickyActive","toggleTab","hideContent","Boolean","subTitle","string","t","riskRefId","info","departmentName","assuredName","yoa","inceptionDate","expiryDate","getFieldProps","item","key","filter","tabKey","DMS_DOCUMENT_TYPE_SECTION_KEYS","piClosingFdo","saveBar","back","btn","button","cancel","save","routes","processingInstructions","steps","id","GENERAL","PRE_PLACING","MRC","OTHER_DETAILS","RISK_REFERENCES","propTypes","object","isRequired","array","bool","number","shape","func"],"mappings":"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","sourcesContent":["import React, { forwardRef } from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport { useForm } from 'react-hook-form';\r\nimport { yupResolver } from '@hookform/resolvers/yup';\r\nimport classnames from 'classnames';\r\nimport isEqual from 'lodash/isEqual';\r\nimport camelCase from 'lodash/camelCase';\r\n\r\n//app\r\nimport styles from './ProcessingInstructionsChecklist.styles';\r\nimport stylesParent from '../../pages/ProcessingInstructionsSteps/ProcessingInstructionsSteps.styles';\r\nimport ProcessingInstructionsRiskRefTabTable from '../ProcessingInstructionsRiskRefTabTable/ProcessingInstructionsRiskRefTabTable';\r\nimport {\r\n  Button,\r\n  DynamicTable,\r\n  FormContainer,\r\n  FormFields,\r\n  FormGrid,\r\n  FormText,\r\n  Info,\r\n  Tabs,\r\n  SaveBar,\r\n  PreventNavigation,\r\n  FormSelect,\r\n  Sticky,\r\n} from 'components';\r\nimport * as utils from 'utils';\r\nimport config from 'config';\r\nimport * as constants from 'consts';\r\nimport { useMedia } from 'hooks';\r\n\r\n// mui\r\nimport { Box, Typography, useTheme, makeStyles, Divider } from '@material-ui/core';\r\nimport NavigateNextIcon from '@material-ui/icons/NavigateNext';\r\nimport NavigateBeforeIcon from '@material-ui/icons/NavigateBefore';\r\n\r\nconst ProcessingInstructionsChecklistView = forwardRef(\r\n  (\r\n    {\r\n      instruction,\r\n      leadRef,\r\n      defaultValues,\r\n      columns,\r\n      tabs,\r\n      selectedTab,\r\n      fields,\r\n      schemaData,\r\n      isDocCountLoaded,\r\n      isFdo,\r\n      isReadOnly,\r\n      isEditable,\r\n      isCheckboxesEditable,\r\n      resetKey,\r\n      handlers,\r\n    },\r\n    ref\r\n  ) => {\r\n    const classes = makeStyles(styles, { name: 'ProcessingInstructionsChecklist' })();\r\n    const classesParent = makeStyles(stylesParent)();\r\n    const media = useMedia();\r\n    const theme = useTheme();\r\n\r\n    const validationSchema = utils.form.getValidationSchema(fields);\r\n\r\n    const { reset, handleSubmit, register, setValue, watch, getValues, formState, ...formProps } = useForm({\r\n      defaultValues,\r\n      ...(validationSchema && { resolver: yupResolver(validationSchema) }),\r\n    });\r\n\r\n    const { control, errors } = formProps;\r\n    const formValues = watch();\r\n    const isPageEdited = !isEqual(defaultValues, formValues);\r\n\r\n    const rows = schemaData?.rows?.map((row) => {\r\n      return {\r\n        ...row,\r\n        cells: row.cells.map((cell) => {\r\n          switch (cell.columnName) {\r\n            case 'signedDate':\r\n              return {\r\n                ...cell,\r\n                disabled: isReadOnly,\r\n              };\r\n            case 'accountHandler':\r\n              return {\r\n                ...cell,\r\n                disabled: isReadOnly,\r\n                cellProps: { ...cell.cellProps, center: true },\r\n              };\r\n            case 'authorisedSignatory':\r\n              return {\r\n                ...cell,\r\n                disabled: !isCheckboxesEditable,\r\n                cellProps: { ...cell.cellProps, center: true },\r\n              };\r\n            default:\r\n              return cell;\r\n          }\r\n        }),\r\n      };\r\n    });\r\n\r\n    const onValid = () => {\r\n      handlers.setTabs(tabs);\r\n      handlers.next(0, { isNext: !isPageEdited, isSave: false, isSaveNext: isPageEdited });\r\n    };\r\n\r\n    const onInvalid = (data) => {\r\n      handlers.next(Object.keys(data)?.length, { isNext: !isPageEdited, isSave: false, isSaveNext: isPageEdited });\r\n    };\r\n\r\n    const stickyParent = media.tabletUp ? utils.app.getElement('#content') : null;\r\n    const stickyOffset = media.tabletUp ? 0 : theme.mixins.header.height;\r\n\r\n    return (\r\n      <Box width={1} mt={5} data-testid=\"processing-instructions-checklist\">\r\n        <Sticky parent={stickyParent} top={stickyOffset} nestedClasses={{ root: classes.sticky, rootSticky: classes.stickyActive }}>\r\n          <Tabs tabs={tabs} overrideTab={selectedTab} onChange={handlers.toggleTab} />\r\n        </Sticky>\r\n\r\n        <FormContainer\r\n          ref={ref}\r\n          resetFunc={reset}\r\n          values={formValues}\r\n          autoComplete=\"off\"\r\n          data-testid=\"form-processing-instructions-checklist\"\r\n        >\r\n          <FormFields>\r\n            <div className={classnames({ [classes.hideContent]: !Boolean(selectedTab === 'general') })}>\r\n              <Box pt={2} pb={4}>\r\n                <Typography className={classes.subTitle}>{utils.string.t('processingInstructions.leadRiskRef')}</Typography>\r\n                <Divider />\r\n                <Box pt={2}>\r\n                  <FormGrid container spacing={4}>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('processingInstructions.leadRiskRef')}\r\n                        description={leadRef ? leadRef.riskRefId : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('app.department')}\r\n                        description={leadRef ? leadRef.departmentName : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('app.reInsured')}\r\n                        description={leadRef ? leadRef.assuredName : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('app.yearOfAccounts')}\r\n                        description={leadRef ? leadRef.yoa : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('app.inceptionDate')}\r\n                        description={leadRef ? leadRef.inceptionDate : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={6} md={3}>\r\n                      <Info\r\n                        title={utils.string.t('app.expiryDate')}\r\n                        description={leadRef ? leadRef.expiryDate : '-'}\r\n                        nestedClasses={{ root: classes.info }}\r\n                      />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </Box>\r\n              </Box>\r\n\r\n              {isFdo && (\r\n                <Box pt={2} pb={4}>\r\n                  <Divider />\r\n                  <Box pt={4}>\r\n                    <FormGrid container spacing={4}>\r\n                      <FormGrid item xs={12} sm={6}>\r\n                        <FormText {...utils.form.getFieldProps(fields, 'businessType', control, errors)} />\r\n                      </FormGrid>\r\n                      <FormGrid item xs={12} sm={6}>\r\n                        <FormSelect {...utils.form.getFieldProps(fields, 'facilityType', control, errors)} />\r\n                      </FormGrid>\r\n                    </FormGrid>\r\n                  </Box>\r\n                </Box>\r\n              )}\r\n\r\n              <Box pt={2} pb={4}>\r\n                <Typography className={classes.subTitle}>{utils.string.t('app.client')}</Typography>\r\n                <Divider />\r\n                <Box pt={4}>\r\n                  <FormGrid container spacing={4}>\r\n                    <FormGrid item xs={12} sm={6} md={3}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'invoicingClient', control, errors)} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6} md={3}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'contactName', control, errors)} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6} md={3}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'clientEmail', control, errors)} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6} md={3}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'eocInvoiceContactName', control, errors)} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6} md={3}>\r\n                      <FormText {...utils.form.getFieldProps(fields, 'eocInvoiceMail', control, errors)} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </Box>\r\n              </Box>\r\n\r\n              <Box pt={2} pb={4}>\r\n                <Typography className={classes.subTitle}>{utils.string.t('app.broking')}</Typography>\r\n                <Divider />\r\n                <Box pt={4}>\r\n                  <FormGrid container>\r\n                    <FormGrid item xs={12} sm={6} key={`producingBroker-${resetKey}`}>\r\n                      <FormSelect {...utils.form.getFieldProps(fields, 'producingBroker', control, errors)} />\r\n                    </FormGrid>\r\n                    <FormGrid item xs={12} sm={6} key={`accountExecutive-${resetKey}`}>\r\n                      <FormSelect {...utils.form.getFieldProps(fields, 'accountExecutive', control, errors)} />\r\n                    </FormGrid>\r\n                  </FormGrid>\r\n                </Box>\r\n              </Box>\r\n            </div>\r\n\r\n            {['pre-placing', 'mrc', 'other-details'].map((item) => {\r\n              const key = camelCase(item);\r\n\r\n              return (\r\n                <div key={`tabbed-content-${key}`} className={classnames({ [classes.hideContent]: selectedTab !== item })}>\r\n                  <DynamicTable formProps={formProps} rows={rows?.filter((row) => row.tabKey === key)} columnHeaders={columns} />\r\n                </div>\r\n              );\r\n            })}\r\n\r\n            {selectedTab === 'risk-references' && (\r\n              <Box>\r\n                <ProcessingInstructionsRiskRefTabTable\r\n                  instruction={instruction}\r\n                  documentTypeKey={constants.DMS_DOCUMENT_TYPE_SECTION_KEYS.piClosingFdo}\r\n                />\r\n              </Box>\r\n            )}\r\n          </FormFields>\r\n        </FormContainer>\r\n\r\n        <SaveBar show nestedClasses={{ root: classesParent.saveBar }}>\r\n          <Box display=\"flex\" justifyContent=\"space-between\">\r\n            <Box flex=\"1 1 auto\" textAlign=\"left\">\r\n              <Button\r\n                text={utils.string.t('app.back')}\r\n                onClick={handlers.back}\r\n                disabled={isPageEdited}\r\n                size=\"small\"\r\n                color=\"primary\"\r\n                variant=\"outlined\"\r\n                icon={NavigateBeforeIcon}\r\n                iconPosition=\"left\"\r\n                nestedClasses={{ btn: classesParent.button }}\r\n              />\r\n            </Box>\r\n            <Box flex=\"1 1 auto\" textAlign=\"right\">\r\n              {isPageEdited && (isEditable || isCheckboxesEditable) && (\r\n                <>\r\n                  <Button\r\n                    text={utils.string.t('app.cancel')}\r\n                    onClick={handlers.cancel}\r\n                    color=\"primary\"\r\n                    size=\"small\"\r\n                    variant=\"text\"\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                  <Button\r\n                    text={utils.string.t('app.save')}\r\n                    onClick={() => handlers.save({ isNext: false, isSave: true, isSaveNext: false })}\r\n                    color=\"secondary\"\r\n                    size=\"small\"\r\n                    variant=\"outlined\"\r\n                    nestedClasses={{ btn: classesParent.button }}\r\n                  />\r\n                </>\r\n              )}\r\n              <Button\r\n                text={utils.string.t('app.next')}\r\n                onClick={handleSubmit(onValid, onInvalid)}\r\n                disabled={!isDocCountLoaded}\r\n                color=\"primary\"\r\n                size=\"small\"\r\n                type=\"submit\"\r\n                icon={NavigateNextIcon}\r\n                iconPosition=\"right\"\r\n                nestedClasses={{ btn: classesParent.button }}\r\n              />\r\n            </Box>\r\n          </Box>\r\n        </SaveBar>\r\n\r\n        <PreventNavigation\r\n          dirty={isPageEdited}\r\n          allowedUrls={[\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/`,\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/checklist/${constants.GENERAL}`,\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/checklist/${constants.PRE_PLACING}`,\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/checklist/${constants.MRC}`,\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/checklist/${constants.OTHER_DETAILS}`,\r\n            `${config.routes.processingInstructions.steps}/${instruction?.id}/checklist/${constants.RISK_REFERENCES}`,\r\n          ]}\r\n        />\r\n      </Box>\r\n    );\r\n  }\r\n);\r\n\r\nProcessingInstructionsChecklistView.propTypes = {\r\n  instruction: PropTypes.object.isRequired,\r\n  leadRef: PropTypes.object.isRequired,\r\n  defaultValues: PropTypes.object.isRequired,\r\n  columns: PropTypes.array.isRequired,\r\n  tabs: PropTypes.array.isRequired,\r\n  selectedTab: PropTypes.string.isRequired,\r\n  fields: PropTypes.array.isRequired,\r\n  schemaData: PropTypes.object.isRequired,\r\n  isDocCountLoaded: PropTypes.bool,\r\n  isFdo: PropTypes.bool,\r\n  isReadOnly: PropTypes.bool,\r\n  isEditable: PropTypes.bool,\r\n  isCheckboxesEditable: PropTypes.bool,\r\n  resetKey: PropTypes.number,\r\n  handlers: PropTypes.shape({\r\n    back: PropTypes.func.isRequired,\r\n    cancel: PropTypes.func.isRequired,\r\n    save: PropTypes.func.isRequired,\r\n    next: PropTypes.func.isRequired,\r\n    toggleTab: PropTypes.func.isRequired,\r\n    setTabs: PropTypes.func.isRequired,\r\n  }),\r\n};\r\n\r\nexport default ProcessingInstructionsChecklistView;\r\n"]},"metadata":{},"sourceType":"module"}