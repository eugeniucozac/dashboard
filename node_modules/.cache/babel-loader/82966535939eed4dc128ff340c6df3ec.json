{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\n// app\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\nimport * as utils from 'utils';\nimport * as constants from 'consts';\nexport var viewDocumentsDownload = function viewDocumentsDownload(doc) {\n  var viewDoc = arguments.length > 1 && arguments[1] !== undefined ? arguments[1] : false;\n  return function (dispatch, getState) {\n    var _files$data, _files$data$searchVal, _files$data$searchVal2;\n\n    // prettier-ignore\n    var _getState = getState(),\n        auth = _getState.user.auth,\n        endpoint = _getState.config.vars.endpoint,\n        _getState$dms$search$ = _getState.dms.search.files,\n        files = _getState$dms$search$ === void 0 ? [] : _getState$dms$search$;\n\n    var documentId = doc.documentId,\n        documentName = doc.documentName;\n    var documentSource = files === null || files === void 0 ? void 0 : (_files$data = files.data) === null || _files$data === void 0 ? void 0 : (_files$data$searchVal = _files$data.searchValue) === null || _files$data$searchVal === void 0 ? void 0 : (_files$data$searchVal2 = _files$data$searchVal.find(function (file) {\n      return file.documentId === documentId;\n    })) === null || _files$data$searchVal2 === void 0 ? void 0 : _files$data$searchVal2.documentSource;\n    var defaultError = {\n      file: 'stores/dms.actions.viewDocumentsDownload'\n    };\n    var ext = utils.file.getFileExtensionFromFilename(documentName).toLowerCase();\n    dispatch(addLoader('viewDocumentsDownload'));\n    dispatch(viewDocumentsDownloadRequest(doc));\n\n    if (!documentId || !documentName) {\n      dispatch(removeLoader('viewDocumentsDownload'));\n      dispatch(viewDocumentsDownloadFailure(_objectSpread(_objectSpread({}, defaultError), {}, {\n        message: 'Missing file parameters'\n      })));\n      return;\n    }\n\n    if (viewDoc && constants.MS_OFFICE_DOC_TYPES.includes(ext)) {\n      dispatch(removeLoader('viewDocumentsDownload'));\n      return Promise.resolve({\n        url: \"\".concat(constants.MS_OFFICE_DOC_VIEWER_URL).concat(utils.getUrl(endpoint.dmsService, \"dms/document/view/\".concat(documentId), {\n          src: \"Bearer \".concat(auth.accessToken)\n        })),\n        ext: ext,\n        mimeType: utils.file.getFileMimeTypefromFileExtension(ext)\n      });\n    }\n\n    return utils.api.get({\n      token: auth.accessToken,\n      endpoint: endpoint.dmsService,\n      path: \"dms/document/download/\".concat(documentId)\n    }).then(function (response) {\n      if (!response.ok) {\n        dispatch(documentSource === 'GXB' ? enqueueNotification('dms.fileDownload.fileNotFound', 'error') : (response === null || response === void 0 ? void 0 : response.status) === constants.API_STATUS_NOT_FOUND ? enqueueNotification('dms.fileDownload.fileNotFound', 'error') : enqueueNotification('dms.fileDownload.fail', 'error'));\n      } else {\n        return viewDoc ? response.arrayBuffer() : response.blob();\n      }\n    }).then(function (blob) {\n      return viewDoc ? utils.file.viewDoc(blob, documentName) : utils.file.download(blob, documentName);\n    }).catch(function (err) {\n      var errorParams = {\n        file: 'stores/dms.actions',\n        message: 'API fetch error (viewDocumentsDownload)'\n      };\n      utils.api.handleError(err, errorParams);\n      utils.api.handleUnauthorized(err, dispatch, authLogout);\n    }).finally(function () {\n      dispatch(removeLoader('viewDocumentsDownload'));\n    });\n  };\n};\nexport var viewDocumentsDownloadRequest = function viewDocumentsDownloadRequest(doc) {\n  return {\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_REQUEST',\n    payload: doc\n  };\n};\nexport var viewDocumentsDownloadFailure = function viewDocumentsDownloadFailure(error) {\n  return {\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_FAILURE',\n    payload: error\n  };\n};","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/stores/dms/dms.actions.viewDocumentsDownload.js"],"names":["addLoader","authLogout","removeLoader","enqueueNotification","utils","constants","viewDocumentsDownload","doc","viewDoc","dispatch","getState","auth","user","endpoint","config","vars","dms","search","files","documentId","documentName","documentSource","data","searchValue","find","file","defaultError","ext","getFileExtensionFromFilename","toLowerCase","viewDocumentsDownloadRequest","viewDocumentsDownloadFailure","message","MS_OFFICE_DOC_TYPES","includes","Promise","resolve","url","MS_OFFICE_DOC_VIEWER_URL","getUrl","dmsService","src","accessToken","mimeType","getFileMimeTypefromFileExtension","api","get","token","path","then","response","ok","status","API_STATUS_NOT_FOUND","arrayBuffer","blob","download","catch","err","errorParams","handleError","handleUnauthorized","finally","type","payload","error"],"mappings":"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","sourcesContent":["// app\r\nimport { addLoader, authLogout, removeLoader, enqueueNotification } from 'stores';\r\nimport * as utils from 'utils';\r\nimport * as constants from 'consts';\r\n\r\nexport const viewDocumentsDownload =\r\n  (doc, viewDoc = false) =>\r\n  (dispatch, getState) => {\r\n    // prettier-ignore\r\n    const { user: { auth }, config: { vars: { endpoint }, }, dms: { search: { files = [] } } } = getState();\r\n\r\n    const { documentId, documentName } = doc;\r\n    const documentSource = files?.data?.searchValue?.find((file) => file.documentId === documentId)?.documentSource;\r\n\r\n    const defaultError = {\r\n      file: 'stores/dms.actions.viewDocumentsDownload',\r\n    };\r\n    const ext = utils.file.getFileExtensionFromFilename(documentName).toLowerCase();\r\n    dispatch(addLoader('viewDocumentsDownload'));\r\n    dispatch(viewDocumentsDownloadRequest(doc));\r\n\r\n    if (!documentId || !documentName) {\r\n      dispatch(removeLoader('viewDocumentsDownload'));\r\n      dispatch(viewDocumentsDownloadFailure({ ...defaultError, message: 'Missing file parameters' }));\r\n      return;\r\n    }\r\n    if (viewDoc && constants.MS_OFFICE_DOC_TYPES.includes(ext)) {\r\n      dispatch(removeLoader('viewDocumentsDownload'));\r\n      return Promise.resolve({\r\n        url: `${constants.MS_OFFICE_DOC_VIEWER_URL}${utils.getUrl(endpoint.dmsService, `dms/document/view/${documentId}`, {\r\n          src: `Bearer ${auth.accessToken}`,\r\n        })}`,\r\n        ext,\r\n        mimeType: utils.file.getFileMimeTypefromFileExtension(ext),\r\n      });\r\n    }\r\n    return utils.api\r\n      .get({\r\n        token: auth.accessToken,\r\n        endpoint: endpoint.dmsService,\r\n        path: `dms/document/download/${documentId}`,\r\n      })\r\n      .then((response) => {\r\n        if (!response.ok) {\r\n          dispatch(\r\n            documentSource === 'GXB'\r\n              ? enqueueNotification('dms.fileDownload.fileNotFound', 'error')\r\n              : response?.status === constants.API_STATUS_NOT_FOUND\r\n              ? enqueueNotification('dms.fileDownload.fileNotFound', 'error')\r\n              : enqueueNotification('dms.fileDownload.fail', 'error')\r\n          );\r\n        } else {\r\n          return viewDoc ? response.arrayBuffer() : response.blob();\r\n        }\r\n      })\r\n      .then((blob) => {\r\n        return viewDoc ? utils.file.viewDoc(blob, documentName) : utils.file.download(blob, documentName);\r\n      })\r\n      .catch((err) => {\r\n        const errorParams = {\r\n          file: 'stores/dms.actions',\r\n          message: 'API fetch error (viewDocumentsDownload)',\r\n        };\r\n        utils.api.handleError(err, errorParams);\r\n        utils.api.handleUnauthorized(err, dispatch, authLogout);\r\n      })\r\n      .finally(() => {\r\n        dispatch(removeLoader('viewDocumentsDownload'));\r\n      });\r\n  };\r\n\r\nexport const viewDocumentsDownloadRequest = (doc) => {\r\n  return {\r\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_REQUEST',\r\n    payload: doc,\r\n  };\r\n};\r\n\r\nexport const viewDocumentsDownloadFailure = (error) => {\r\n  return {\r\n    type: 'DMS_VIEW_DOCUMENTS_DOWNLOAD_FAILURE',\r\n    payload: error,\r\n  };\r\n};\r\n"]},"metadata":{},"sourceType":"module"}