{"ast":null,"code":"import _objectSpread from \"E:/MPHASIS/claims-page/Mphasis-Edge/node_modules/babel-preset-react-app/node_modules/@babel/runtime/helpers/esm/objectSpread2\";\nvar _jsxFileName = \"E:\\\\MPHASIS\\\\claims-page\\\\Mphasis-Edge\\\\src\\\\modules\\\\ClaimsTab\\\\ClaimsTab.view.js\";\nimport React from 'react';\nimport PropTypes from 'prop-types';\nimport styles from './ClaimsTab.styles';\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\nimport { ClaimsTabTable } from './ClaimsTabTable';\nimport * as utils from 'utils'; // mui\n\nimport { makeStyles, Box, Grid } from '@material-ui/core';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nClaimsTabView.propTypes = {\n  claims: PropTypes.array.isRequired,\n  sort: PropTypes.func.isRequired,\n  columnsArray: PropTypes.array.isRequired,\n  columnProps: PropTypes.func.isRequired,\n  viewFields: PropTypes.array.isRequired,\n  tableFilterFields: PropTypes.array.isRequired,\n  isFetchingFilters: PropTypes.bool,\n  resetKey: PropTypes.number,\n  control: PropTypes.object.isRequired,\n  handlers: PropTypes.shape({\n    search: PropTypes.func.isRequired,\n    searchFilter: PropTypes.func.isRequired,\n    resetFilter: PropTypes.func.isRequired,\n    sort: PropTypes.func.isRequired,\n    changePage: PropTypes.func.isRequired,\n    changeRowsPerPage: PropTypes.func.isRequired,\n    toggleColumn: PropTypes.func.isRequired,\n    resetSearch: PropTypes.func.isRequired,\n    onSelectSearchBy: PropTypes.func.isRequired\n  }).isRequired,\n  searchTerm: PropTypes.string,\n  isSearchByNull: PropTypes.bool\n};\nexport default function ClaimsTabView(_ref) {\n  var claims = _ref.claims,\n      sort = _ref.sort,\n      columnsArray = _ref.columnsArray,\n      columnProps = _ref.columnProps,\n      viewFields = _ref.viewFields,\n      tableFilterFields = _ref.tableFilterFields,\n      isFetchingFilters = _ref.isFetchingFilters,\n      resetKey = _ref.resetKey,\n      control = _ref.control,\n      handlers = _ref.handlers,\n      searchTerm = _ref.searchTerm,\n      isSearchByNull = _ref.isSearchByNull;\n  var classes = makeStyles(styles, {\n    name: 'ClaimsTab'\n  })();\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: /*#__PURE__*/_jsxDEV(Box, {\n      mt: 3,\n      \"data-testid\": \"claims-tab\",\n      children: [/*#__PURE__*/_jsxDEV(TableToolbar, {\n        children: [/*#__PURE__*/_jsxDEV(TableActions, {\n          children: /*#__PURE__*/_jsxDEV(Grid, {\n            container: true,\n            children: [/*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormLabel, {\n                label: \"\".concat(utils.string.t('app.view'), \": \"),\n                align: \"left\",\n                nestedClasses: {\n                  root: classes.viewLabel\n                }\n              }, void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 60,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 59,\n              columnNumber: 15\n            }, this), /*#__PURE__*/_jsxDEV(Grid, {\n              item: true,\n              children: /*#__PURE__*/_jsxDEV(FormRadio, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'views')), {}, {\n                control: control\n              }), void 0, false, {\n                fileName: _jsxFileName,\n                lineNumber: 63,\n                columnNumber: 17\n              }, this)\n            }, void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 62,\n              columnNumber: 15\n            }, this)]\n          }, void 0, true, {\n            fileName: _jsxFileName,\n            lineNumber: 58,\n            columnNumber: 13\n          }, this)\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 57,\n          columnNumber: 11\n        }, this), /*#__PURE__*/_jsxDEV(TableFilters, {\n          search: true,\n          searchBy: /*#__PURE__*/_jsxDEV(Box, {\n            className: classes.filterBox,\n            children: /*#__PURE__*/_jsxDEV(FormAutocompleteMui, _objectSpread(_objectSpread({}, utils.form.getFieldProps(viewFields, 'searchBy')), {}, {\n              control: control,\n              nestedClasses: {\n                root: classes.selectAutocomplete\n              },\n              callback: function callback(event, obj) {\n                handlers.onSelectSearchBy(obj === null || obj === void 0 ? void 0 : obj.value, obj === null || obj === void 0 ? void 0 : obj.label);\n              }\n            }), void 0, false, {\n              fileName: _jsxFileName,\n              lineNumber: 71,\n              columnNumber: 17\n            }, this)\n          }, void 0, false, {\n            fileName: _jsxFileName,\n            lineNumber: 70,\n            columnNumber: 15\n          }, this),\n          isSearchByNull: isSearchByNull,\n          searchPlaceholder: utils.string.t('claims.processing.searchPlaceHolder'),\n          searchMinChars: 4,\n          nestedClasses: {\n            searchMaxWidth: classes.searchMaxWidth\n          },\n          filtersArray: tableFilterFields,\n          isFetchingFilters: isFetchingFilters,\n          columns: true,\n          clearFilterKey: resetKey,\n          handlers: {\n            onSearch: handlers.search,\n            onResetFilter: handlers.resetFilter,\n            onFilter: handlers.searchFilter,\n            onToggleColumn: handlers.toggleColumn,\n            onResetSearch: handlers.resetSearch\n          },\n          searchTerm: searchTerm\n        }, void 0, false, {\n          fileName: _jsxFileName,\n          lineNumber: 67,\n          columnNumber: 11\n        }, this)]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 56,\n        columnNumber: 9\n      }, this), /*#__PURE__*/_jsxDEV(ClaimsTabTable, {\n        claims: claims,\n        cols: columnsArray,\n        columnProps: columnProps,\n        sort: sort,\n        handlers: {\n          changePage: handlers.changePage,\n          changeRowsPerPage: handlers.changeRowsPerPage,\n          sort: handlers.sort\n        },\n        viewFields: viewFields,\n        control: control\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 99,\n        columnNumber: 9\n      }, this)]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 55,\n      columnNumber: 7\n    }, this)\n  }, void 0, false);\n}\n_c = ClaimsTabView;\n\nvar _c;\n\n$RefreshReg$(_c, \"ClaimsTabView\");","map":{"version":3,"sources":["E:/MPHASIS/claims-page/Mphasis-Edge/src/modules/ClaimsTab/ClaimsTab.view.js"],"names":["React","PropTypes","styles","TableActions","TableFilters","TableToolbar","FormRadio","FormLabel","FormAutocompleteMui","ClaimsTabTable","utils","makeStyles","Box","Grid","ClaimsTabView","propTypes","claims","array","isRequired","sort","func","columnsArray","columnProps","viewFields","tableFilterFields","isFetchingFilters","bool","resetKey","number","control","object","handlers","shape","search","searchFilter","resetFilter","changePage","changeRowsPerPage","toggleColumn","resetSearch","onSelectSearchBy","searchTerm","string","isSearchByNull","classes","name","t","root","viewLabel","form","getFieldProps","filterBox","selectAutocomplete","event","obj","value","label","searchMaxWidth","onSearch","onResetFilter","onFilter","onToggleColumn","onResetSearch"],"mappings":"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","sourcesContent":["import React from 'react';\r\nimport PropTypes from 'prop-types';\r\n\r\nimport styles from './ClaimsTab.styles';\r\nimport { TableActions, TableFilters, TableToolbar, FormRadio, FormLabel, FormAutocompleteMui } from 'components';\r\nimport { ClaimsTabTable } from './ClaimsTabTable';\r\nimport * as utils from 'utils';\r\n\r\n// mui\r\nimport { makeStyles, Box, Grid } from '@material-ui/core';\r\n\r\nClaimsTabView.propTypes = {\r\n  claims: PropTypes.array.isRequired,\r\n  sort: PropTypes.func.isRequired,\r\n  columnsArray: PropTypes.array.isRequired,\r\n  columnProps: PropTypes.func.isRequired,\r\n  viewFields: PropTypes.array.isRequired,\r\n  tableFilterFields: PropTypes.array.isRequired,\r\n  isFetchingFilters: PropTypes.bool,\r\n  resetKey: PropTypes.number,\r\n  control: PropTypes.object.isRequired,\r\n  handlers: PropTypes.shape({\r\n    search: PropTypes.func.isRequired,\r\n    searchFilter: PropTypes.func.isRequired,\r\n    resetFilter: PropTypes.func.isRequired,\r\n    sort: PropTypes.func.isRequired,\r\n    changePage: PropTypes.func.isRequired,\r\n    changeRowsPerPage: PropTypes.func.isRequired,\r\n    toggleColumn: PropTypes.func.isRequired,\r\n    resetSearch: PropTypes.func.isRequired,\r\n    onSelectSearchBy: PropTypes.func.isRequired,\r\n  }).isRequired,\r\n  searchTerm: PropTypes.string,\r\n  isSearchByNull: PropTypes.bool,\r\n};\r\n\r\nexport default function ClaimsTabView({\r\n  claims,\r\n  sort,\r\n  columnsArray,\r\n  columnProps,\r\n  viewFields,\r\n  tableFilterFields,\r\n  isFetchingFilters,\r\n  resetKey,\r\n  control,\r\n  handlers,\r\n  searchTerm,\r\n  isSearchByNull,\r\n}) {\r\n  const classes = makeStyles(styles, { name: 'ClaimsTab' })();\r\n\r\n  return (\r\n    <>\r\n      <Box mt={3} data-testid=\"claims-tab\">\r\n        <TableToolbar>\r\n          <TableActions>\r\n            <Grid container>\r\n              <Grid item>\r\n                <FormLabel label={`${utils.string.t('app.view')}: `} align=\"left\" nestedClasses={{ root: classes.viewLabel }} />\r\n              </Grid>\r\n              <Grid item>\r\n                <FormRadio {...utils.form.getFieldProps(viewFields, 'views')} control={control} />\r\n              </Grid>\r\n            </Grid>\r\n          </TableActions>\r\n          <TableFilters\r\n            search\r\n            searchBy={\r\n              <Box className={classes.filterBox}>\r\n                <FormAutocompleteMui\r\n                  {...utils.form.getFieldProps(viewFields, 'searchBy')}\r\n                  control={control}\r\n                  nestedClasses={{ root: classes.selectAutocomplete }}\r\n                  callback={(event, obj) => {\r\n                    handlers.onSelectSearchBy(obj?.value, obj?.label);\r\n                  }}\r\n                />\r\n              </Box>\r\n            }\r\n            isSearchByNull={isSearchByNull}\r\n            searchPlaceholder={utils.string.t('claims.processing.searchPlaceHolder')}\r\n            searchMinChars={4}\r\n            nestedClasses={{ searchMaxWidth: classes.searchMaxWidth }}\r\n            filtersArray={tableFilterFields}\r\n            isFetchingFilters={isFetchingFilters}\r\n            columns\r\n            clearFilterKey={resetKey}\r\n            handlers={{\r\n              onSearch: handlers.search,\r\n              onResetFilter: handlers.resetFilter,\r\n              onFilter: handlers.searchFilter,\r\n              onToggleColumn: handlers.toggleColumn,\r\n              onResetSearch: handlers.resetSearch,\r\n            }}\r\n            searchTerm={searchTerm}\r\n          />\r\n        </TableToolbar>\r\n        <ClaimsTabTable\r\n          claims={claims}\r\n          cols={columnsArray}\r\n          columnProps={columnProps}\r\n          sort={sort}\r\n          handlers={{\r\n            changePage: handlers.changePage,\r\n            changeRowsPerPage: handlers.changeRowsPerPage,\r\n            sort: handlers.sort,\r\n          }}\r\n          viewFields={viewFields}\r\n          control={control}\r\n        />\r\n      </Box>\r\n    </>\r\n  );\r\n}\r\n"]},"metadata":{},"sourceType":"module"}